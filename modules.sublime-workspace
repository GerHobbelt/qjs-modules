{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyFunctionList"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"JS_New",
				"JS_NewCFunctionData"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "CMAKE_C_STANDARD\nCMAKE_SYSTEM_NAME\nCMAKE_EXECUTABLE_SUFFIX\nBUILD_SHARED_LIBS\nCMAKE_SYSTEM_NAME\nCMAKE_SYSTEM_NAME\nCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS\nCMAKE_SYSTEM_NAME\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_CURRENT_SOURCE_DIR\nQJS\nCMAKE_CURRENT_BINARY_DIR\nQJSC\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_REQUIRED_QUIET\nHAVE_POSIX_SPAWNP\nHAVE_SPAWN\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_C_COMPILER\nCMAKE_SYSROOT\nCMAKE_TOOLCHAIN_FILE\nCMAKE_VERBOSE_MAKEFILE\nCMAKE_BUILD_TYPE\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_CURRENT_SOURCE_DIR\nQUICKJS_INCLUDE_DIRS\nQUICKJS_LIBRARY_DIR\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nLIB_MODULES\nQUICKJS_H\nCOMMON_HEADERS\nCUTILS_H\nQUICKJS_H\n  buffer_utils_SOURCES\nCOMMON_SOURCES\n  vector_SOURCES\n  buffer_utils_SOURCES\n  char_utils_SOURCES\n  queue_SOURCES\n  utils_SOURCES\n  char_utils_SOURCES\n  js_utils_SOURCES\n  utils_SOURCES\n  utils_SOURCES\n  stream_SOURCES\n  queue_SOURCES\n  js_utils_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  predicate_SOURCES\n  utils_SOURCES\n  utils_SOURCES\n  utils_SOURCES\n  utils_SOURCES\n  utils_SOURCES\n  token_SOURCES\n  location_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  syscallerror_SOURCES\n  child_process_SOURCES\n  utils_SOURCES\n  vector_SOURCES\n  deep_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  predicate_SOURCES\n  deep_LIBRARIES\n  inspect_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  tree_walker_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  xml_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  location_SOURCES\n  inspect_SOURCES\n  path_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  path_SOURCES\n  path_SOURCES\n  predicate_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  pointer_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  lexer_SOURCES\n  location_SOURCES\n  token_SOURCES\n  utils_SOURCES\n  vector_SOURCES\n  lexer_LIBRARIES\n  mmap_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  repeater_SOURCES\n  queue_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  sockets_SOURCES\n  queue_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  sockets_SOURCES\n  sockets_SOURCES\n  sockets_SOURCES\n  sockets_SOURCES\n  sockets_LIBRARIES\n  sockets_SOURCES\n  sockets_SOURCES\n  blob_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  stringdecoder_SOURCES\n  buffer_utils_SOURCES\n  utils_SOURCES\n  vector_SOURCES\n  misc_SOURCES\n  path_SOURCES\n  location_SOURCES\n  vector_SOURCES\n  gpio_SOURCES\n  syscallerror_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\nLibArchive_INCLUDE_DIRS\n  archive_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  archive_LIBRARIES\nLibArchive_LIBRARIES\nQJSM_EXTRA_SOURCES\n  vector_SOURCES\n  buffer_utils_SOURCES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\n  mmap_SOURCES\n  mmap_SOURCES\nCMAKE_REQUIRED_QUIET\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_CURRENT_SOURCE_DIR\nTESTS\nTESTS\nTEST\nBASE\nBASE\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_BINARY_DIR\nQJS\nTEST\nCMAKE_CURRENT_SOURCE_DIR\nTESTS\nQUICKJS_MODULES\nSHARED_TARGETS\nQJSM_LIBDIR\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_SYSTEM_NAME\nCMAKE_IMPORT_LIBRARY_PREFIX\nCMAKE_IMPORT_LIBRARY_SUFFIX\nCMAKE_SYSTEM_NAME\nQUICKJS_MODULES\nJS_MODULE\nJS_MODULE\nQJSM_MODULE\nQJSM_LIBDIR\nLIBRARY_PREFIX\nQJSM_MODULE\nLIBRARY_SUFFIX\nQUICKJS_MODULES\nQJSM_LIBDIR\n  predicate_LIBRARIES\nLIBM\n  sockets_LIBRARIES\n  deep_LIBRARIES\nLIBM\n  lexer_LIBRARIES\n  lexer_DEPS\nTESTS_SOURCES\nQJSM\nCMAKE_CURRENT_BINARY_DIR\nTESTS_SOURCES\nCMAKE_CURRENT_SOURCE_DIR\nTEST_SOURCE\nTEST_SOURCE\nTEST_NAME\nQJSM\nTEST_SOURCE\nCMAKE_CURRENT_SOURCE_DIR\nTESTS_SOURCES\nCMAKE_CURRENT_SOURCE_DIR\nLIBJS\nQUICKJS_JS_MODULE_DIR\nLIB_MODULES\nLIB_MODULES\nLIB_MODULE\nLIB_MODULES\nCMAKE_CURRENT_SOURCE_DIR\nQUICKJS_SOURCES_ROOT\nCMAKE_CURRENT_SOURCE_DIR\nQUICKJS_SOURCES_ROOT\nQUICKJS_SOURCES_ROOT\nQUICKJS_INCLUDE_DIR\nQUICKJS_SOURCES_ROOT\nQUICKJS_INCLUDE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nMODULES_DIR\nQJSC\nMODULES_DIR\nCMAKE_CURRENT_SOURCE_DIR\nQJSC_DEPS\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_CURRENT_SOURCE_DIR\nQJSM_SOURCES\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nQJSM_EXTRA_SOURCES\nCMAKE_CURRENT_SOURCE_DIR\nQJSM_SOURCES\nQJSM_SOURCES\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nTRANSPORT_PLATFORM\nCMAKE_CURRENT_SOURCE_DIR\nQJSM_SOURCES\nQJS_MODULES_STATIC\nCOMPILED_MODULES\nQJSM_LIBDIR\nCMAKE_EXE_LINKER_FLAGS\nCMAKE_EXE_LINKER_FLAGS\nQJSM_LIBDIR\nLINK_EXPORT\nQJSM_LIBDIR\nQUICKJS_INSTALL_PREFIX\nQUICKJS_LIBRARY_DIR\nQUICKJS_LIBRARY\nQJSM_LDADD\nLIBPTHREAD\nLIBM\nLIBDL\nLIBWS2_32\nQUICKJS_VERSION\nQUICKJS_INSTALL_PREFIX\nQUICKJS_MODULE_PATH\nINSTALL_SCRIPTS",
			"settings":
			{
				"buffer_size": 4838,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					2303,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
						"symkeys":
						[
							[
								1017,
								1040
							],
							[
								1413,
								1437
							],
							[
								1713,
								1719
							],
							[
								1724,
								1759
							],
							[
								2038,
								2066
							],
							[
								2499,
								2503
							],
							[
								2508,
								2556
							],
							[
								2916,
								2926
							],
							[
								2968,
								2984
							],
							[
								3102,
								3121
							],
							[
								3216,
								3235
							],
							[
								3357,
								3373
							],
							[
								3474,
								3490
							],
							[
								3639,
								3654
							],
							[
								3820,
								3837
							],
							[
								4116,
								4137
							],
							[
								4313,
								4330
							],
							[
								4518,
								4533
							],
							[
								4555,
								4573
							],
							[
								4749,
								4776
							],
							[
								5130,
								5147
							],
							[
								5435,
								5467
							],
							[
								6248,
								6252
							],
							[
								6320,
								6329
							],
							[
								6391,
								6405
							],
							[
								6453,
								6464
							],
							[
								6835,
								6847
							],
							[
								6931,
								6962
							],
							[
								7392,
								7409
							],
							[
								7971,
								7975
							],
							[
								8017,
								8050
							],
							[
								8061,
								8064
							],
							[
								8109,
								8125
							],
							[
								8269,
								8303
							],
							[
								8314,
								8317
							],
							[
								8341,
								8347
							],
							[
								8369,
								8384
							],
							[
								8618,
								8626
							],
							[
								8631,
								8654
							],
							[
								8685,
								8704
							],
							[
								8757,
								8773
							],
							[
								8821,
								8851
							],
							[
								9084,
								9116
							],
							[
								9355,
								9398
							],
							[
								9662,
								9680
							],
							[
								9729,
								9736
							],
							[
								10241,
								10249
							],
							[
								10301,
								10311
							],
							[
								10766,
								10800
							],
							[
								10876,
								10892
							],
							[
								10941,
								10968
							],
							[
								11127,
								11159
							],
							[
								11641,
								11659
							],
							[
								11793,
								11805
							],
							[
								11843,
								11855
							],
							[
								11871,
								11881
							],
							[
								11978,
								11987
							],
							[
								12019,
								12037
							],
							[
								12136,
								12157
							],
							[
								12221,
								12239
							],
							[
								12713,
								12727
							],
							[
								12789,
								12796
							],
							[
								12814,
								12838
							],
							[
								13011,
								13030
							],
							[
								13155,
								13171
							],
							[
								13252,
								13266
							],
							[
								13307,
								13320
							],
							[
								13364,
								13379
							],
							[
								13410,
								13424
							],
							[
								13990,
								14004
							],
							[
								14157,
								14180
							],
							[
								14239,
								14262
							],
							[
								14338,
								14342
							],
							[
								14444,
								14466
							],
							[
								14706,
								14714
							],
							[
								14760,
								14778
							],
							[
								14817,
								14830
							],
							[
								14857,
								14876
							],
							[
								14915,
								14928
							],
							[
								14962,
								14980
							],
							[
								15019,
								15032
							],
							[
								15061,
								15076
							],
							[
								15134,
								15155
							],
							[
								15187,
								15200
							],
							[
								15234,
								15256
							],
							[
								15300,
								15325
							],
							[
								15357,
								15370
							],
							[
								15432,
								15447
							],
							[
								15497,
								15513
							],
							[
								15633,
								15640
							],
							[
								17925,
								17933
							],
							[
								17954,
								17970
							],
							[
								17994,
								18002
							],
							[
								18022,
								18050
							],
							[
								18101,
								18123
							],
							[
								18208,
								18228
							],
							[
								18288,
								18304
							],
							[
								18401,
								18416
							],
							[
								18453,
								18468
							],
							[
								18544,
								18554
							],
							[
								19002,
								19010
							],
							[
								19100,
								19104
							],
							[
								19122,
								19145
							],
							[
								19309,
								19319
							],
							[
								19507,
								19525
							],
							[
								19575,
								19594
							],
							[
								19636,
								19646
							],
							[
								19709,
								19720
							],
							[
								19757,
								19768
							],
							[
								19839,
								19851
							],
							[
								20093,
								20097
							],
							[
								20188,
								20192
							],
							[
								20251,
								20274
							],
							[
								20529,
								20540
							],
							[
								20563,
								20577
							],
							[
								20646,
								20657
							],
							[
								20682,
								20696
							],
							[
								20811,
								20821
							],
							[
								20852,
								20860
							],
							[
								20876,
								20891
							],
							[
								20922,
								20930
							],
							[
								20946,
								20956
							],
							[
								21184,
								21199
							],
							[
								21226,
								21230
							],
							[
								21253,
								21257
							],
							[
								21276,
								21280
							],
							[
								21429,
								21436
							],
							[
								21454,
								21477
							],
							[
								21600,
								21611
							],
							[
								21644,
								21658
							],
							[
								21720,
								21733
							],
							[
								21771,
								21787
							],
							[
								21831,
								21841
							],
							[
								21865,
								21873
							],
							[
								21906,
								21921
							],
							[
								21945,
								21953
							],
							[
								22117,
								22133
							],
							[
								22164,
								22171
							],
							[
								22194,
								22198
							],
							[
								22217,
								22224
							],
							[
								22385,
								22394
							],
							[
								22399,
								22432
							],
							[
								22522,
								22533
							],
							[
								22565,
								22579
							],
							[
								22648,
								22661
							],
							[
								22690,
								22706
							],
							[
								22750,
								22762
							],
							[
								22789,
								22797
							],
							[
								22820,
								22831
							],
							[
								22858,
								22866
							],
							[
								22892,
								22903
							],
							[
								22930,
								22938
							],
							[
								22961,
								22976
							],
							[
								23003,
								23011
							],
							[
								23048,
								23062
							],
							[
								23082,
								23095
							],
							[
								23243,
								23260
							],
							[
								23280,
								23293
							],
							[
								23445,
								23465
							],
							[
								23485,
								23498
							],
							[
								23632,
								23647
							],
							[
								23674,
								23701
							],
							[
								23721,
								23734
							],
							[
								23957,
								23966
							],
							[
								24032,
								24041
							],
							[
								24052,
								24070
							],
							[
								24092,
								24154
							],
							[
								24223,
								24255
							],
							[
								24351,
								24373
							],
							[
								24431,
								24474
							],
							[
								24662,
								24687
							],
							[
								24734,
								24764
							],
							[
								24782,
								24800
							],
							[
								25889,
								25924
							],
							[
								26047,
								26063
							],
							[
								26092,
								26113
							]
						],
						"symlist":
						[
							"keyOf = (obj, value) =>",
							"function checkNode(node)",
							"Parser",
							"parseFromString(str, file, ...rest)",
							"function GetNode(obj, owner)",
							"Node",
							"constructor(obj, parent, proto = Node.prototype)",
							"get path()",
							"get parentNode()",
							"get parentElement()",
							"get ownerDocument()",
							"get childNodes()",
							"get firstChild()",
							"get lastChild()",
							"get nextSibling()",
							"get previousSibling()",
							"appendChild(node)",
							" () =>",
							" value =>",
							"insertBefore(node, refNode)",
							"removeChild(node)",
							"replaceChild(newChild, oldChild)",
							"Node",
							"raw(node)",
							"children(node)",
							"owner(node)",
							"parent(node)",
							"hier(node, pred = node => true)",
							"({ nodeType }) =>",
							"Node",
							"function MakeCache(ctor, store = ",
							"())",
							" (k, ...args) =>",
							"function MakeCache2(ctor, store = ",
							"())",
							"key =>",
							" (id, owner) =>",
							"NodeList",
							"constructor(obj, owner)",
							"isElement = prop =>",
							"isList = prop =>",
							"wrapElement = (value, prop) =>",
							"get: (target, prop, receiver) =>",
							"getOwnPropertyDescriptor: (target, prop) =>",
							"ownKeys: target =>",
							"prop =>",
							"NodeList",
							"get path()",
							" function NamedNodeMap(obj, owner)",
							"isAttr = prop =>",
							"wrapAttr = (value, prop) =>",
							"get: (target, prop, receiver) =>",
							"ownKeys: target =>",
							"NamedNodeMap",
							"NamedNodeMap",
							"get path()",
							"item(key)",
							"setNamedItem(attr)",
							"removeNamedItem(name)",
							"getNamedItem(name)",
							"(acc, prop) =>",
							"Element",
							"constructor(obj, parent)",
							"get parentElement()",
							"get attributes()",
							"set tagName(v)",
							"get tagName()",
							"set nodeName(v)",
							"get nodeName()",
							"get children()",
							"get childElementCount()",
							"get firstElementChild()",
							"n =>",
							"get lastElementChild()",
							"get id()",
							"getAttribute(name)",
							"attributes =>",
							"getAttributeNames()",
							"attributes =>",
							"hasAttribute(name)",
							"attributes =>",
							"hasAttributes()",
							"removeAttribute(name)",
							"attributes =>",
							"getAttributeNode(name)",
							"setAttribute(name, value)",
							"attributes =>",
							"(obj, owner) =>",
							"attributes(elem)",
							"Element",
							"Document",
							"constructor(obj)",
							"Document",
							"createAttribute(name, value)",
							"createElement(tagName)",
							"createTextNode(text)",
							"pred = (n, k) =>",
							" (n, k) =>",
							" (n, p) =>",
							"get body()",
							"Document",
							"Attr",
							"constructor(raw, owner)",
							"get path()",
							"get ownerElement()",
							"get ownerDocument()",
							"get name()",
							"set name(v)",
							"get value()",
							"set value(v)",
							"Attr",
							"Text",
							"constructor(key, owner)",
							"get = () =>",
							"set = value =>",
							"get = () =>",
							"set = value =>",
							"get data()",
							"value =>",
							"get nodeValue()",
							"value =>",
							"toString()",
							"(key, owner) =>",
							"Text",
							"Node",
							"Text",
							"Comment",
							"constructor(raw, owner)",
							"get = () =>",
							"set = value =>",
							" () =>",
							" value =>",
							"get data()",
							"value =>",
							"get nodeValue()",
							"value =>",
							"(node, owner) =>",
							"Comment",
							"Node",
							"Comment",
							"TokenList",
							"constructor(owner, key = 'class')",
							"get = () =>",
							"set = value =>",
							" () =>",
							" value =>",
							"get length()",
							"value =>",
							"get value()",
							"value =>",
							"item(index)",
							"value =>",
							"contains(token)",
							"value =>",
							"add(...tokens)",
							"(arr, set) =>",
							"remove(...tokens)",
							"(arr, set) =>",
							"toggle(token, force)",
							"(arr, set) =>",
							"supports(token)",
							"replace(oldToken, newToken)",
							"(arr, set) =>",
							"TokenList",
							"TokenList",
							" (container, i) =>",
							"function Membrane(instance, obj, proto, wrapProp, wrapElement)",
							"get: (target, prop, receiver) =>",
							"has: (target, prop) =>",
							"getOwnPropertyDescriptor: (target, prop) =>",
							"getPrototypeOf: target =>",
							"setPrototypeOf: (target, p) =>",
							"ownKeys: target =>",
							" function Factory(raw, owner, ctor)",
							"isArray = arg =>",
							"isAttributes = arg =>"
						]
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
						"symkeys":
						[
							[
								215,
								222
							],
							[
								284,
								291
							],
							[
								338,
								350
							],
							[
								406,
								420
							],
							[
								498,
								509
							],
							[
								539,
								548
							],
							[
								578,
								591
							],
							[
								636,
								648
							],
							[
								698,
								708
							],
							[
								729,
								740
							],
							[
								770,
								780
							],
							[
								841,
								851
							],
							[
								899,
								909
							],
							[
								956,
								965
							],
							[
								1011,
								1021
							],
							[
								1068,
								1077
							],
							[
								1135,
								1149
							],
							[
								1173,
								1185
							],
							[
								1229,
								1246
							],
							[
								1310,
								1331
							],
							[
								1390,
								1412
							],
							[
								1476,
								1499
							],
							[
								1558,
								1574
							],
							[
								1615,
								1629
							],
							[
								1671,
								1689
							],
							[
								1715,
								1729
							],
							[
								1753,
								1768
							],
							[
								1824,
								1842
							],
							[
								1873,
								1882
							],
							[
								1910,
								1922
							],
							[
								1959,
								1970
							],
							[
								2004,
								2013
							],
							[
								2207,
								2218
							],
							[
								2290,
								2300
							],
							[
								2389,
								2395
							],
							[
								2469,
								2478
							],
							[
								2541,
								2556
							],
							[
								2731,
								2744
							],
							[
								3199,
								3210
							],
							[
								3232,
								3242
							],
							[
								3317,
								3327
							],
							[
								3390,
								3402
							],
							[
								3463,
								3480
							],
							[
								3669,
								3681
							],
							[
								3703,
								3713
							],
							[
								3791,
								3801
							],
							[
								3945,
								3957
							],
							[
								3979,
								3990
							],
							[
								4077,
								4094
							],
							[
								4200,
								4211
							],
							[
								4312,
								4323
							],
							[
								4435,
								4447
							],
							[
								4593,
								4605
							],
							[
								4756,
								4768
							],
							[
								5114,
								5127
							],
							[
								5342,
								5353
							],
							[
								5778,
								5789
							],
							[
								5811,
								5836
							],
							[
								6009,
								6024
							],
							[
								6074,
								6088
							],
							[
								6153,
								6166
							],
							[
								6403,
								6417
							],
							[
								6645,
								6663
							],
							[
								6709,
								6727
							],
							[
								6757,
								6774
							],
							[
								6816,
								6833
							],
							[
								6892,
								6909
							],
							[
								6997,
								7016
							],
							[
								7117,
								7135
							],
							[
								7257,
								7278
							],
							[
								7348,
								7367
							],
							[
								7570,
								7586
							],
							[
								7634,
								7651
							],
							[
								7696,
								7720
							],
							[
								7756,
								7775
							],
							[
								7816,
								7834
							],
							[
								8130,
								8147
							],
							[
								8282,
								8300
							],
							[
								8383,
								8399
							],
							[
								8504,
								8520
							],
							[
								8614,
								8633
							],
							[
								8710,
								8726
							]
						],
						"symlist":
						[
							"MAX_NUM",
							"MIN_NUM",
							"array_search",
							"array_contains",
							"ansi_length",
							"ansi_skip",
							"ansi_truncate",
							"array_search",
							"str_escape",
							"byte_escape",
							"byte_findb",
							"byte_finds",
							"byte_equal",
							"byte_copy",
							"byte_copyr",
							"dbuf_at_n",
							"dbuf_last_line",
							"dbuf_prepend",
							"dbuf_put_colorstr",
							"dbuf_put_escaped_pred",
							"dbuf_put_escaped_table",
							"dbuf_put_unescaped_pred",
							"dbuf_put_escaped",
							"dbuf_put_value",
							"dbuf_reserve_start",
							"dbuf_token_pop",
							"dbuf_token_push",
							"dbuf_tostring_free",
							"dbuf_load",
							"dbuf_vprintf",
							"screen_size",
							"dbuf_putm",
							"dbuf_append",
							"dbuf_count",
							"dbuf_0",
							"dbuf_zero",
							"dbuf_get_column",
							"dbuf_bitflags",
							"MemoryBlock",
							"block_init",
							"block_data",
							"block_length",
							"block_arraybuffer",
							"PointerRange",
							"range_init",
							"range_from",
							"OffsetLength",
							"offset_init",
							"offset_is_default",
							"offset_data",
							"offset_size",
							"offset_block",
							"offset_range",
							"offset_slice",
							"offset_offset",
							"block_range",
							"InputBuffer",
							"input_buffer_free_default",
							"js_input_buffer",
							"js_input_chars",
							"js_input_args",
							"js_output_args",
							"input_buffer_clone",
							"input_buffer_valid",
							"input_buffer_dump",
							"input_buffer_free",
							"input_buffer_data",
							"input_buffer_length",
							"input_buffer_block",
							"input_buffer_blockptr",
							"input_buffer_offset",
							"input_buffer_get",
							"input_buffer_peek",
							"input_buffer_currentline",
							"input_buffer_column",
							"input_buffer_peekc",
							"input_buffer_getc",
							"input_buffer_begin",
							"input_buffer_end",
							"input_buffer_eof",
							"input_buffer_remain",
							"js_offset_length"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABEDAAAICBrZXlPZiA9IChvYmosIHZhbHVlKSA9PgogIGNoZWNrTm9kZShub2RlKQpQYXJzZXIKICBwYXJzZUZyb21TdHJpbmcoc3RyLCBmaWxlLCAuLi5yZXN0KQpHZXROb2RlKG9iaiwgb3duZXIpCk5vZGUKICBjb25zdHJ1Y3RvcihvYmosIHBhcmVudCwgcHJvdG8gPSBOb2RlLnByb3RvdHlwZSkKICBnZXQgcGF0aCgpCiAgZ2V0IHBhcmVudE5vZGUoKQogIGdldCBwYXJlbnRFbGVtZW50KCkKICBnZXQgb3duZXJEb2N1bWVudCgpCiAgZ2V0IGNoaWxkTm9kZXMoKQogIGdldCBmaXJzdENoaWxkKCkKICBnZXQgbGFzdENoaWxkKCkKICBnZXQgbmV4dFNpYmxpbmcoKQogIGdldCBwcmV2aW91c1NpYmxpbmcoKQogIGFwcGVuZENoaWxkKG5vZGUpCiAgKCkgPT4KICB2YWx1ZSA9PgogIGluc2VydEJlZm9yZShub2RlLCByZWZOb2RlKQogIHJlbW92ZUNoaWxkKG5vZGUpCiAgcmVwbGFjZUNoaWxkKG5ld0NoaWxkLCBvbGRDaGlsZCkKTm9kZQogIHJhdyhub2RlKQogIGNoaWxkcmVuKG5vZGUpCiAgb3duZXIobm9kZSkKICBwYXJlbnQobm9kZSkKICBoaWVyKG5vZGUsIHByZWQgPSBub2RlID0+IHRydWUpCih7IG5vZGVUeXBlIH0pID0+Ck5vZGUKTWFrZUNhY2hlKGN0b3IsIHN0b3JlID0gCigpKQogIChrLCAuLi5hcmdzKSA9PgpNYWtlQ2FjaGUyKGN0b3IsIHN0b3JlID0gCigpKQogIGtleSA9PgogIChpZCwgb3duZXIpID0+Ck5vZGVMaXN0CiAgY29uc3RydWN0b3Iob2JqLCBvd25lcikKICBpc0VsZW1lbnQgPSBwcm9wID0+CiAgaXNMaXN0ID0gcHJvcCA9PgogIHdyYXBFbGVtZW50ID0gKHZhbHVlLCBwcm9wKSA9PgogIGdldDogKHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpID0+CiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiAodGFyZ2V0LCBwcm9wKSA9PgogIG93bktleXM6IHRhcmdldCA9PgogIHByb3AgPT4KTm9kZUxpc3QKICBnZXQgcGF0aCgpCk5hbWVkTm9kZU1hcChvYmosIG93bmVyKQogIGlzQXR0ciA9IHByb3AgPT4KICB3cmFwQXR0ciA9ICh2YWx1ZSwgcHJvcCkgPT4KICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIG93bktleXM6IHRhcmdldCA9PgpOYW1lZE5vZGVNYXAKTmFtZWROb2RlTWFwCiAgZ2V0IHBhdGgoKQogIGl0ZW0oa2V5KQogIHNldE5hbWVkSXRlbShhdHRyKQogIHJlbW92ZU5hbWVkSXRlbShuYW1lKQogIGdldE5hbWVkSXRlbShuYW1lKQooYWNjLCBwcm9wKSA9PgpFbGVtZW50CiAgY29uc3RydWN0b3Iob2JqLCBwYXJlbnQpCiAgZ2V0IHBhcmVudEVsZW1lbnQoKQogIGdldCBhdHRyaWJ1dGVzKCkKICBzZXQgdGFnTmFtZSh2KQogIGdldCB0YWdOYW1lKCkKICBzZXQgbm9kZU5hbWUodikKICBnZXQgbm9kZU5hbWUoKQogIGdldCBjaGlsZHJlbigpCiAgZ2V0IGNoaWxkRWxlbWVudENvdW50KCkKICBnZXQgZmlyc3RFbGVtZW50Q2hpbGQoKQogIG4gPT4KICBnZXQgbGFzdEVsZW1lbnRDaGlsZCgpCiAgZ2V0IGlkKCkKICBnZXRBdHRyaWJ1dGUobmFtZSkKICBhdHRyaWJ1dGVzID0+CiAgZ2V0QXR0cmlidXRlTmFtZXMoKQogIGF0dHJpYnV0ZXMgPT4KICBoYXNBdHRyaWJ1dGUobmFtZSkKICBhdHRyaWJ1dGVzID0+CiAgaGFzQXR0cmlidXRlcygpCiAgcmVtb3ZlQXR0cmlidXRlKG5hbWUpCiAgYXR0cmlidXRlcyA9PgogIGdldEF0dHJpYnV0ZU5vZGUobmFtZSkKICBzZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpCiAgYXR0cmlidXRlcyA9Pgoob2JqLCBvd25lcikgPT4KICBhdHRyaWJ1dGVzKGVsZW0pCkVsZW1lbnQKRG9jdW1lbnQKICBjb25zdHJ1Y3RvcihvYmopCkRvY3VtZW50CiAgY3JlYXRlQXR0cmlidXRlKG5hbWUsIHZhbHVlKQogIGNyZWF0ZUVsZW1lbnQodGFnTmFtZSkKICBjcmVhdGVUZXh0Tm9kZSh0ZXh0KQogIHByZWQgPSAobiwgaykgPT4KICAobiwgaykgPT4KICAobiwgcCkgPT4KICBnZXQgYm9keSgpCkRvY3VtZW50CkF0dHIKICBjb25zdHJ1Y3RvcihyYXcsIG93bmVyKQogIGdldCBwYXRoKCkKICBnZXQgb3duZXJFbGVtZW50KCkKICBnZXQgb3duZXJEb2N1bWVudCgpCiAgZ2V0IG5hbWUoKQogIHNldCBuYW1lKHYpCiAgZ2V0IHZhbHVlKCkKICBzZXQgdmFsdWUodikKQXR0cgpUZXh0CiAgY29uc3RydWN0b3Ioa2V5LCBvd25lcikKICBnZXQgPSAoKSA9PgogIHNldCA9IHZhbHVlID0+CiAgZ2V0ID0gKCkgPT4KICBzZXQgPSB2YWx1ZSA9PgogIGdldCBkYXRhKCkKICB2YWx1ZSA9PgogIGdldCBub2RlVmFsdWUoKQogIHZhbHVlID0+CiAgdG9TdHJpbmcoKQooa2V5LCBvd25lcikgPT4KVGV4dApOb2RlClRleHQKQ29tbWVudAogIGNvbnN0cnVjdG9yKHJhdywgb3duZXIpCiAgZ2V0ID0gKCkgPT4KICBzZXQgPSB2YWx1ZSA9PgogICgpID0+CiAgdmFsdWUgPT4KICBnZXQgZGF0YSgpCiAgdmFsdWUgPT4KICBnZXQgbm9kZVZhbHVlKCkKICB2YWx1ZSA9Pgoobm9kZSwgb3duZXIpID0+CkNvbW1lbnQKTm9kZQpDb21tZW50ClRva2VuTGlzdAogIGNvbnN0cnVjdG9yKG93bmVyLCBrZXkgPSAnY2xhc3MnKQogIGdldCA9ICgpID0+CiAgc2V0ID0gdmFsdWUgPT4KICAoKSA9PgogIHZhbHVlID0+CiAgZ2V0IGxlbmd0aCgpCiAgdmFsdWUgPT4KICBnZXQgdmFsdWUoKQogIHZhbHVlID0+CiAgaXRlbShpbmRleCkKICB2YWx1ZSA9PgogIGNvbnRhaW5zKHRva2VuKQogIHZhbHVlID0+CiAgYWRkKC4uLnRva2VucykKKGFyciwgc2V0KSA9PgogIHJlbW92ZSguLi50b2tlbnMpCihhcnIsIHNldCkgPT4KICB0b2dnbGUodG9rZW4sIGZvcmNlKQooYXJyLCBzZXQpID0+CiAgc3VwcG9ydHModG9rZW4pCiAgcmVwbGFjZShvbGRUb2tlbiwgbmV3VG9rZW4pCihhcnIsIHNldCkgPT4KVG9rZW5MaXN0ClRva2VuTGlzdAogIChjb250YWluZXIsIGkpID0+Ck1lbWJyYW5lKGluc3RhbmNlLCBvYmosIHByb3RvLCB3cmFwUHJvcCwgd3JhcEVsZW1lbnQpCiAgZ2V0OiAodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikgPT4KICBoYXM6ICh0YXJnZXQsIHByb3ApID0+CiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiAodGFyZ2V0LCBwcm9wKSA9PgogIGdldFByb3RvdHlwZU9mOiB0YXJnZXQgPT4KICBzZXRQcm90b3R5cGVPZjogKHRhcmdldCwgcCkgPT4KICBvd25LZXlzOiB0YXJnZXQgPT4KRmFjdG9yeShyYXcsIG93bmVyLCBjdG9yKQogIGlzQXJyYXkgPSBhcmcgPT4KICBpc0F0dHJpYnV0ZXMgPSBhcmcgPT4AAAAAAAAAAFwFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					3,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABcBQAATUFYX05VTQpNSU5fTlVNCiAgYXJyYXlfc2VhcmNoCiAgYXJyYXlfY29udGFpbnMKICBhbnNpX2xlbmd0aAogIGFuc2lfc2tpcAogIGFuc2lfdHJ1bmNhdGUKICBhcnJheV9zZWFyY2gKICBzdHJfZXNjYXBlCiAgYnl0ZV9lc2NhcGUKICBieXRlX2ZpbmRiCiAgYnl0ZV9maW5kcwogIGJ5dGVfZXF1YWwKICBieXRlX2NvcHkKICBieXRlX2NvcHlyCiAgZGJ1Zl9hdF9uCiAgZGJ1Zl9sYXN0X2xpbmUKICBkYnVmX3ByZXBlbmQKICBkYnVmX3B1dF9jb2xvcnN0cgogIGRidWZfcHV0X2VzY2FwZWRfcHJlZAogIGRidWZfcHV0X2VzY2FwZWRfdGFibGUKICBkYnVmX3B1dF91bmVzY2FwZWRfcHJlZAogIGRidWZfcHV0X2VzY2FwZWQKICBkYnVmX3B1dF92YWx1ZQogIGRidWZfcmVzZXJ2ZV9zdGFydAogIGRidWZfdG9rZW5fcG9wCiAgZGJ1Zl90b2tlbl9wdXNoCiAgZGJ1Zl90b3N0cmluZ19mcmVlCiAgZGJ1Zl9sb2FkCiAgZGJ1Zl92cHJpbnRmCiAgc2NyZWVuX3NpemUKICBkYnVmX3B1dG0KICBkYnVmX2FwcGVuZAogIGRidWZfY291bnQKICBkYnVmXzAKICBkYnVmX3plcm8KICBkYnVmX2dldF9jb2x1bW4KICBkYnVmX2JpdGZsYWdzCk1lbW9yeUJsb2NrCiAgYmxvY2tfaW5pdAogIGJsb2NrX2RhdGEKICBibG9ja19sZW5ndGgKICBibG9ja19hcnJheWJ1ZmZlcgpQb2ludGVyUmFuZ2UKICByYW5nZV9pbml0CiAgcmFuZ2VfZnJvbQpPZmZzZXRMZW5ndGgKICBvZmZzZXRfaW5pdAogIG9mZnNldF9pc19kZWZhdWx0CiAgb2Zmc2V0X2RhdGEKICBvZmZzZXRfc2l6ZQogIG9mZnNldF9ibG9jawogIG9mZnNldF9yYW5nZQogIG9mZnNldF9zbGljZQogIG9mZnNldF9vZmZzZXQKICBibG9ja19yYW5nZQpJbnB1dEJ1ZmZlcgogIGlucHV0X2J1ZmZlcl9mcmVlX2RlZmF1bHQKICBqc19pbnB1dF9idWZmZXIKICBqc19pbnB1dF9jaGFycwogIGpzX2lucHV0X2FyZ3MKICBqc19vdXRwdXRfYXJncwogIGlucHV0X2J1ZmZlcl9jbG9uZQogIGlucHV0X2J1ZmZlcl92YWxpZAogIGlucHV0X2J1ZmZlcl9kdW1wCiAgaW5wdXRfYnVmZmVyX2ZyZWUKICBpbnB1dF9idWZmZXJfZGF0YQogIGlucHV0X2J1ZmZlcl9sZW5ndGgKICBpbnB1dF9idWZmZXJfYmxvY2sKICBpbnB1dF9idWZmZXJfYmxvY2twdHIKICBpbnB1dF9idWZmZXJfb2Zmc2V0CiAgaW5wdXRfYnVmZmVyX2dldAogIGlucHV0X2J1ZmZlcl9wZWVrCiAgaW5wdXRfYnVmZmVyX2N1cnJlbnRsaW5lCiAgaW5wdXRfYnVmZmVyX2NvbHVtbgogIGlucHV0X2J1ZmZlcl9wZWVrYwogIGlucHV0X2J1ZmZlcl9nZXRjCiAgaW5wdXRfYnVmZmVyX2JlZ2luCiAgaW5wdXRfYnVmZmVyX2VuZAogIGlucHV0X2J1ZmZlcl9lb2YKICBpbnB1dF9idWZmZXJfcmVtYWluCiAganNfb2Zmc2V0X2xlbmd0aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
						"symkeys":
						[
							[
								169,
								184
							],
							[
								300,
								320
							],
							[
								389,
								402
							],
							[
								441,
								456
							],
							[
								482,
								500
							],
							[
								586,
								604
							],
							[
								690,
								699
							],
							[
								745,
								761
							],
							[
								2696,
								2714
							],
							[
								2975,
								2989
							],
							[
								3098,
								3115
							],
							[
								3251,
								3262
							],
							[
								3312,
								3325
							],
							[
								3564,
								3574
							],
							[
								3783,
								3793
							],
							[
								4017,
								4025
							],
							[
								4183,
								4192
							],
							[
								4351,
								4360
							],
							[
								4594,
								4601
							],
							[
								4801,
								4809
							],
							[
								5084,
								5092
							],
							[
								5318,
								5327
							],
							[
								5623,
								5631
							],
							[
								5843,
								5851
							],
							[
								5941,
								5951
							],
							[
								6133,
								6142
							],
							[
								6224,
								6236
							],
							[
								6281,
								6291
							],
							[
								6328,
								6337
							],
							[
								6483,
								6491
							],
							[
								6622,
								6631
							],
							[
								6791,
								6799
							],
							[
								6957,
								6971
							],
							[
								7146,
								7157
							],
							[
								7347,
								7365
							],
							[
								7849,
								7861
							],
							[
								7903,
								7912
							],
							[
								7943,
								7954
							],
							[
								7993,
								8005
							],
							[
								8030,
								8043
							],
							[
								8069,
								8082
							],
							[
								8108,
								8121
							],
							[
								8153,
								8167
							],
							[
								8200,
								8214
							],
							[
								8247,
								8262
							],
							[
								8292,
								8310
							],
							[
								8352,
								8364
							],
							[
								8523,
								8535
							],
							[
								8697,
								8708
							]
						],
						"symlist":
						[
							"is_control_char",
							"is_alphanumeric_char",
							"is_digit_char",
							"is_newline_char",
							"is_identifier_char",
							"is_whitespace_char",
							"str_equal",
							"escape_char_pred",
							"unescape_char_pred",
							"is_escape_char",
							"is_backslash_char",
							"is_dot_char",
							"is_identifier",
							"is_integer",
							"byte_count",
							"byte_chr",
							"byte_rchr",
							"byte_chrs",
							"str_chr",
							"str_chrs",
							"str_rchr",
							"str_rchrs",
							"str_endb",
							"str_ends",
							"str_startb",
							"str_start",
							"str_contains",
							"str_escape",
							"str_count",
							"str_copy",
							"str_copyn",
							"str_ndup",
							"predicate_find",
							"lookup_find",
							"escape_char_letter",
							"token_length",
							"fmt_ulong",
							"scan_ushort",
							"fmt_longlong",
							"fmt_ulonglong",
							"fmt_xlonglong",
							"scan_longlong",
							"scan_ulonglong",
							"scan_xlonglong",
							"scan_whitenskip",
							"scan_nonwhitenskip",
							"scan_fromhex",
							"utf8_charlen",
							"utf8_strlen"
						]
					},
					"AQAAAAAAAAAAAAAA3gIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADeAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
						"symkeys":
						[
							[
								169,
								184
							],
							[
								300,
								320
							],
							[
								389,
								402
							],
							[
								441,
								456
							],
							[
								482,
								500
							],
							[
								586,
								604
							],
							[
								690,
								699
							],
							[
								745,
								761
							],
							[
								2696,
								2714
							],
							[
								2975,
								2989
							],
							[
								3098,
								3115
							],
							[
								3251,
								3262
							],
							[
								3312,
								3325
							],
							[
								3564,
								3574
							],
							[
								3783,
								3793
							],
							[
								4017,
								4025
							],
							[
								4183,
								4192
							],
							[
								4351,
								4360
							],
							[
								4594,
								4601
							],
							[
								4801,
								4809
							],
							[
								5084,
								5092
							],
							[
								5318,
								5327
							],
							[
								5623,
								5631
							],
							[
								5843,
								5851
							],
							[
								5941,
								5951
							],
							[
								6133,
								6142
							],
							[
								6224,
								6236
							],
							[
								6281,
								6291
							],
							[
								6328,
								6337
							],
							[
								6483,
								6491
							],
							[
								6622,
								6631
							],
							[
								6791,
								6799
							],
							[
								6957,
								6971
							],
							[
								7146,
								7157
							],
							[
								7347,
								7365
							],
							[
								7849,
								7861
							],
							[
								7903,
								7912
							],
							[
								7943,
								7954
							],
							[
								7993,
								8005
							],
							[
								8030,
								8043
							],
							[
								8069,
								8082
							],
							[
								8108,
								8121
							],
							[
								8153,
								8167
							],
							[
								8200,
								8214
							],
							[
								8247,
								8262
							],
							[
								8292,
								8310
							],
							[
								8352,
								8364
							],
							[
								8523,
								8535
							],
							[
								8697,
								8708
							]
						],
						"symlist":
						[
							"is_control_char",
							"is_alphanumeric_char",
							"is_digit_char",
							"is_newline_char",
							"is_identifier_char",
							"is_whitespace_char",
							"str_equal",
							"escape_char_pred",
							"unescape_char_pred",
							"is_escape_char",
							"is_backslash_char",
							"is_dot_char",
							"is_identifier",
							"is_integer",
							"byte_count",
							"byte_chr",
							"byte_rchr",
							"byte_chrs",
							"str_chr",
							"str_chrs",
							"str_rchr",
							"str_rchrs",
							"str_endb",
							"str_ends",
							"str_startb",
							"str_start",
							"str_contains",
							"str_escape",
							"str_count",
							"str_copy",
							"str_copyn",
							"str_ndup",
							"predicate_find",
							"lookup_find",
							"escape_char_letter",
							"token_length",
							"fmt_ulong",
							"scan_ushort",
							"fmt_longlong",
							"fmt_ulonglong",
							"fmt_xlonglong",
							"scan_longlong",
							"scan_ulonglong",
							"scan_xlonglong",
							"scan_whitenskip",
							"scan_nonwhitenskip",
							"scan_fromhex",
							"utf8_charlen",
							"utf8_strlen"
						]
					},
					"AQAAAAAAAAAAAAAA3gIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					7,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
						"symkeys":
						[
							[
								169,
								184
							],
							[
								300,
								320
							],
							[
								389,
								402
							],
							[
								441,
								456
							],
							[
								482,
								500
							],
							[
								586,
								604
							],
							[
								690,
								699
							],
							[
								745,
								761
							],
							[
								2696,
								2714
							],
							[
								2975,
								2989
							],
							[
								3098,
								3115
							],
							[
								3251,
								3262
							],
							[
								3312,
								3325
							],
							[
								3564,
								3574
							],
							[
								3783,
								3793
							],
							[
								4017,
								4025
							],
							[
								4183,
								4192
							],
							[
								4446,
								4455
							],
							[
								4614,
								4623
							],
							[
								4857,
								4864
							],
							[
								5064,
								5072
							],
							[
								5347,
								5355
							],
							[
								5581,
								5590
							],
							[
								5886,
								5894
							],
							[
								6106,
								6114
							],
							[
								6204,
								6214
							],
							[
								6396,
								6405
							],
							[
								6487,
								6499
							],
							[
								6544,
								6554
							],
							[
								6591,
								6600
							],
							[
								6746,
								6754
							],
							[
								6885,
								6894
							],
							[
								7054,
								7062
							],
							[
								7220,
								7234
							],
							[
								7409,
								7420
							],
							[
								7610,
								7628
							],
							[
								8112,
								8124
							],
							[
								8166,
								8175
							],
							[
								8206,
								8217
							],
							[
								8256,
								8268
							],
							[
								8293,
								8306
							],
							[
								8332,
								8345
							],
							[
								8371,
								8384
							],
							[
								8416,
								8430
							],
							[
								8463,
								8477
							],
							[
								8510,
								8525
							],
							[
								8555,
								8573
							],
							[
								8615,
								8627
							],
							[
								8786,
								8798
							],
							[
								8960,
								8971
							]
						],
						"symlist":
						[
							"is_control_char",
							"is_alphanumeric_char",
							"is_digit_char",
							"is_newline_char",
							"is_identifier_char",
							"is_whitespace_char",
							"str_equal",
							"escape_char_pred",
							"unescape_char_pred",
							"is_escape_char",
							"is_backslash_char",
							"is_dot_char",
							"is_identifier",
							"is_integer",
							"byte_count",
							"byte_chr",
							"byte_rchr",
							"byte_rchr",
							"byte_chrs",
							"str_chr",
							"str_chrs",
							"str_rchr",
							"str_rchrs",
							"str_endb",
							"str_ends",
							"str_startb",
							"str_start",
							"str_contains",
							"str_escape",
							"str_count",
							"str_copy",
							"str_copyn",
							"str_ndup",
							"predicate_find",
							"lookup_find",
							"escape_char_letter",
							"token_length",
							"fmt_ulong",
							"scan_ushort",
							"fmt_longlong",
							"fmt_ulonglong",
							"fmt_xlonglong",
							"scan_longlong",
							"scan_ulonglong",
							"scan_xlonglong",
							"scan_whitenskip",
							"scan_nonwhitenskip",
							"scan_fromhex",
							"utf8_charlen",
							"utf8_strlen"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADeAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAOoCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADqAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAOoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					8,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
						"symkeys":
						[
							[
								169,
								184
							],
							[
								300,
								320
							],
							[
								389,
								402
							],
							[
								441,
								456
							],
							[
								482,
								500
							],
							[
								586,
								604
							],
							[
								690,
								699
							],
							[
								745,
								761
							],
							[
								2696,
								2714
							],
							[
								2975,
								2989
							],
							[
								3098,
								3115
							],
							[
								3251,
								3262
							],
							[
								3312,
								3325
							],
							[
								3564,
								3574
							],
							[
								3783,
								3793
							],
							[
								4017,
								4025
							],
							[
								4183,
								4192
							],
							[
								4433,
								4442
							],
							[
								4601,
								4610
							],
							[
								4844,
								4851
							],
							[
								5051,
								5059
							],
							[
								5334,
								5342
							],
							[
								5568,
								5577
							],
							[
								5873,
								5881
							],
							[
								6093,
								6101
							],
							[
								6191,
								6201
							],
							[
								6383,
								6392
							],
							[
								6474,
								6486
							],
							[
								6531,
								6541
							],
							[
								6578,
								6587
							],
							[
								6733,
								6741
							],
							[
								6872,
								6881
							],
							[
								7041,
								7049
							],
							[
								7207,
								7221
							],
							[
								7396,
								7407
							],
							[
								7597,
								7615
							],
							[
								8099,
								8111
							],
							[
								8153,
								8162
							],
							[
								8193,
								8204
							],
							[
								8243,
								8255
							],
							[
								8280,
								8293
							],
							[
								8319,
								8332
							],
							[
								8358,
								8371
							],
							[
								8403,
								8417
							],
							[
								8450,
								8464
							],
							[
								8497,
								8512
							],
							[
								8542,
								8560
							],
							[
								8602,
								8614
							],
							[
								8773,
								8785
							],
							[
								8947,
								8958
							]
						],
						"symlist":
						[
							"is_control_char",
							"is_alphanumeric_char",
							"is_digit_char",
							"is_newline_char",
							"is_identifier_char",
							"is_whitespace_char",
							"str_equal",
							"escape_char_pred",
							"unescape_char_pred",
							"is_escape_char",
							"is_backslash_char",
							"is_dot_char",
							"is_identifier",
							"is_integer",
							"byte_count",
							"byte_chr",
							"byte_rchr",
							"byte_rchr",
							"byte_chrs",
							"str_chr",
							"str_chrs",
							"str_rchr",
							"str_rchrs",
							"str_endb",
							"str_ends",
							"str_startb",
							"str_start",
							"str_contains",
							"str_escape",
							"str_count",
							"str_copy",
							"str_copyn",
							"str_ndup",
							"predicate_find",
							"lookup_find",
							"escape_char_letter",
							"token_length",
							"fmt_ulong",
							"scan_ushort",
							"fmt_longlong",
							"fmt_ulonglong",
							"fmt_xlonglong",
							"scan_longlong",
							"scan_ulonglong",
							"scan_xlonglong",
							"scan_whitenskip",
							"scan_nonwhitenskip",
							"scan_fromhex",
							"utf8_charlen",
							"utf8_strlen"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADqAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAOoCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADqAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAOoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
						"symkeys":
						[
							[
								169,
								184
							],
							[
								300,
								320
							],
							[
								389,
								402
							],
							[
								441,
								456
							],
							[
								482,
								500
							],
							[
								586,
								604
							],
							[
								690,
								699
							],
							[
								745,
								761
							],
							[
								2696,
								2714
							],
							[
								2975,
								2989
							],
							[
								3098,
								3115
							],
							[
								3251,
								3262
							],
							[
								3312,
								3325
							],
							[
								3564,
								3574
							],
							[
								3783,
								3793
							],
							[
								4017,
								4025
							],
							[
								4183,
								4192
							],
							[
								4433,
								4442
							],
							[
								4601,
								4610
							],
							[
								4844,
								4851
							],
							[
								5051,
								5059
							],
							[
								5334,
								5342
							],
							[
								5568,
								5577
							],
							[
								5873,
								5881
							],
							[
								6093,
								6101
							],
							[
								6191,
								6201
							],
							[
								6383,
								6392
							],
							[
								6474,
								6486
							],
							[
								6531,
								6541
							],
							[
								6578,
								6587
							],
							[
								6733,
								6741
							],
							[
								6872,
								6881
							],
							[
								7041,
								7049
							],
							[
								7207,
								7221
							],
							[
								7396,
								7407
							],
							[
								7597,
								7615
							],
							[
								8099,
								8111
							],
							[
								8153,
								8162
							],
							[
								8193,
								8204
							],
							[
								8243,
								8255
							],
							[
								8280,
								8293
							],
							[
								8319,
								8332
							],
							[
								8358,
								8371
							],
							[
								8403,
								8417
							],
							[
								8450,
								8464
							],
							[
								8497,
								8512
							],
							[
								8542,
								8560
							],
							[
								8602,
								8614
							],
							[
								8773,
								8785
							],
							[
								8947,
								8958
							]
						],
						"symlist":
						[
							"is_control_char",
							"is_alphanumeric_char",
							"is_digit_char",
							"is_newline_char",
							"is_identifier_char",
							"is_whitespace_char",
							"str_equal",
							"escape_char_pred",
							"unescape_char_pred",
							"is_escape_char",
							"is_backslash_char",
							"is_dot_char",
							"is_identifier",
							"is_integer",
							"byte_count",
							"byte_chr",
							"byte_rchr",
							"byte_rchr",
							"byte_chrs",
							"str_chr",
							"str_chrs",
							"str_rchr",
							"str_rchrs",
							"str_endb",
							"str_ends",
							"str_startb",
							"str_start",
							"str_contains",
							"str_escape",
							"str_count",
							"str_copy",
							"str_copyn",
							"str_ndup",
							"predicate_find",
							"lookup_find",
							"escape_char_letter",
							"token_length",
							"fmt_ulong",
							"scan_ushort",
							"fmt_longlong",
							"fmt_ulonglong",
							"fmt_xlonglong",
							"scan_longlong",
							"scan_ulonglong",
							"scan_xlonglong",
							"scan_whitenskip",
							"scan_nonwhitenskip",
							"scan_fromhex",
							"utf8_charlen",
							"utf8_strlen"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADqAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAOoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					10,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
						"symkeys":
						[
							[
								169,
								184
							],
							[
								300,
								320
							],
							[
								389,
								402
							],
							[
								441,
								456
							],
							[
								482,
								500
							],
							[
								586,
								604
							],
							[
								690,
								699
							],
							[
								745,
								761
							],
							[
								2696,
								2714
							],
							[
								2975,
								2989
							],
							[
								3098,
								3115
							],
							[
								3251,
								3262
							],
							[
								3312,
								3325
							],
							[
								3564,
								3574
							],
							[
								3783,
								3793
							],
							[
								4017,
								4025
							],
							[
								4183,
								4192
							],
							[
								4425,
								4434
							],
							[
								4593,
								4602
							],
							[
								4836,
								4843
							],
							[
								5043,
								5051
							],
							[
								5326,
								5334
							],
							[
								5560,
								5569
							],
							[
								5865,
								5873
							],
							[
								6085,
								6093
							],
							[
								6183,
								6193
							],
							[
								6375,
								6384
							],
							[
								6466,
								6478
							],
							[
								6523,
								6533
							],
							[
								6570,
								6579
							],
							[
								6725,
								6733
							],
							[
								6864,
								6873
							],
							[
								7033,
								7041
							],
							[
								7199,
								7213
							],
							[
								7388,
								7399
							],
							[
								7589,
								7607
							],
							[
								8091,
								8103
							],
							[
								8145,
								8154
							],
							[
								8185,
								8196
							],
							[
								8235,
								8247
							],
							[
								8272,
								8285
							],
							[
								8311,
								8324
							],
							[
								8350,
								8363
							],
							[
								8395,
								8409
							],
							[
								8442,
								8456
							],
							[
								8489,
								8504
							],
							[
								8534,
								8552
							],
							[
								8594,
								8606
							],
							[
								8765,
								8777
							],
							[
								8939,
								8950
							]
						],
						"symlist":
						[
							"is_control_char",
							"is_alphanumeric_char",
							"is_digit_char",
							"is_newline_char",
							"is_identifier_char",
							"is_whitespace_char",
							"str_equal",
							"escape_char_pred",
							"unescape_char_pred",
							"is_escape_char",
							"is_backslash_char",
							"is_dot_char",
							"is_identifier",
							"is_integer",
							"byte_count",
							"byte_chr",
							"byte_rchr",
							"byte_rchr",
							"byte_chrs",
							"str_chr",
							"str_chrs",
							"str_rchr",
							"str_rchrs",
							"str_endb",
							"str_ends",
							"str_startb",
							"str_start",
							"str_contains",
							"str_escape",
							"str_count",
							"str_copy",
							"str_copyn",
							"str_ndup",
							"predicate_find",
							"lookup_find",
							"escape_char_letter",
							"token_length",
							"fmt_ulong",
							"scan_ushort",
							"fmt_longlong",
							"fmt_ulonglong",
							"fmt_xlonglong",
							"scan_longlong",
							"scan_ulonglong",
							"scan_xlonglong",
							"scan_whitenskip",
							"scan_nonwhitenskip",
							"scan_fromhex",
							"utf8_charlen",
							"utf8_strlen"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADqAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAOoCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADqAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAOoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					11,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
						"symkeys":
						[
							[
								169,
								184
							],
							[
								300,
								320
							],
							[
								389,
								402
							],
							[
								441,
								456
							],
							[
								482,
								500
							],
							[
								586,
								604
							],
							[
								690,
								699
							],
							[
								745,
								761
							],
							[
								2696,
								2714
							],
							[
								2975,
								2989
							],
							[
								3098,
								3115
							],
							[
								3251,
								3262
							],
							[
								3312,
								3325
							],
							[
								3564,
								3574
							],
							[
								3783,
								3793
							],
							[
								4017,
								4025
							],
							[
								4183,
								4192
							],
							[
								4597,
								4606
							],
							[
								4840,
								4847
							],
							[
								5047,
								5055
							],
							[
								5330,
								5338
							],
							[
								5564,
								5573
							],
							[
								5869,
								5877
							],
							[
								6089,
								6097
							],
							[
								6187,
								6197
							],
							[
								6379,
								6388
							],
							[
								6470,
								6482
							],
							[
								6527,
								6537
							],
							[
								6574,
								6583
							],
							[
								6729,
								6737
							],
							[
								6868,
								6877
							],
							[
								7037,
								7045
							],
							[
								7203,
								7217
							],
							[
								7392,
								7403
							],
							[
								7593,
								7611
							],
							[
								8095,
								8107
							],
							[
								8149,
								8158
							],
							[
								8189,
								8200
							],
							[
								8239,
								8251
							],
							[
								8276,
								8289
							],
							[
								8315,
								8328
							],
							[
								8354,
								8367
							],
							[
								8399,
								8413
							],
							[
								8446,
								8460
							],
							[
								8493,
								8508
							],
							[
								8538,
								8556
							],
							[
								8598,
								8610
							],
							[
								8769,
								8781
							],
							[
								8943,
								8954
							]
						],
						"symlist":
						[
							"is_control_char",
							"is_alphanumeric_char",
							"is_digit_char",
							"is_newline_char",
							"is_identifier_char",
							"is_whitespace_char",
							"str_equal",
							"escape_char_pred",
							"unescape_char_pred",
							"is_escape_char",
							"is_backslash_char",
							"is_dot_char",
							"is_identifier",
							"is_integer",
							"byte_count",
							"byte_chr",
							"byte_rchr",
							"byte_chrs",
							"str_chr",
							"str_chrs",
							"str_rchr",
							"str_rchrs",
							"str_endb",
							"str_ends",
							"str_startb",
							"str_start",
							"str_contains",
							"str_escape",
							"str_count",
							"str_copy",
							"str_copyn",
							"str_ndup",
							"predicate_find",
							"lookup_find",
							"escape_char_letter",
							"token_length",
							"fmt_ulong",
							"scan_ushort",
							"fmt_longlong",
							"fmt_ulonglong",
							"fmt_xlonglong",
							"scan_longlong",
							"scan_ulonglong",
							"scan_xlonglong",
							"scan_whitenskip",
							"scan_nonwhitenskip",
							"scan_fromhex",
							"utf8_charlen",
							"utf8_strlen"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADqAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAN4CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADeAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAN4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					12,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
						"symkeys":
						[
							[
								169,
								184
							],
							[
								300,
								320
							],
							[
								389,
								402
							],
							[
								441,
								456
							],
							[
								482,
								500
							],
							[
								586,
								604
							],
							[
								690,
								699
							],
							[
								745,
								761
							],
							[
								2696,
								2714
							],
							[
								2975,
								2989
							],
							[
								3098,
								3115
							],
							[
								3251,
								3262
							],
							[
								3312,
								3325
							],
							[
								3564,
								3574
							],
							[
								3783,
								3793
							],
							[
								4017,
								4025
							],
							[
								4183,
								4192
							],
							[
								4597,
								4606
							],
							[
								4840,
								4847
							],
							[
								5047,
								5055
							],
							[
								5330,
								5338
							],
							[
								5564,
								5573
							],
							[
								5869,
								5877
							],
							[
								6089,
								6097
							],
							[
								6187,
								6197
							],
							[
								6379,
								6388
							],
							[
								6470,
								6482
							],
							[
								6527,
								6537
							],
							[
								6574,
								6583
							],
							[
								6729,
								6737
							],
							[
								6868,
								6877
							],
							[
								7037,
								7045
							],
							[
								7203,
								7217
							],
							[
								7392,
								7403
							],
							[
								7593,
								7611
							],
							[
								8095,
								8107
							],
							[
								8149,
								8158
							],
							[
								8189,
								8200
							],
							[
								8239,
								8251
							],
							[
								8276,
								8289
							],
							[
								8315,
								8328
							],
							[
								8354,
								8367
							],
							[
								8399,
								8413
							],
							[
								8446,
								8460
							],
							[
								8493,
								8508
							],
							[
								8538,
								8556
							],
							[
								8598,
								8610
							],
							[
								8769,
								8781
							],
							[
								8943,
								8954
							]
						],
						"symlist":
						[
							"is_control_char",
							"is_alphanumeric_char",
							"is_digit_char",
							"is_newline_char",
							"is_identifier_char",
							"is_whitespace_char",
							"str_equal",
							"escape_char_pred",
							"unescape_char_pred",
							"is_escape_char",
							"is_backslash_char",
							"is_dot_char",
							"is_identifier",
							"is_integer",
							"byte_count",
							"byte_chr",
							"byte_rchr",
							"byte_chrs",
							"str_chr",
							"str_chrs",
							"str_rchr",
							"str_rchrs",
							"str_endb",
							"str_ends",
							"str_startb",
							"str_start",
							"str_contains",
							"str_escape",
							"str_count",
							"str_copy",
							"str_copyn",
							"str_ndup",
							"predicate_find",
							"lookup_find",
							"escape_char_letter",
							"token_length",
							"fmt_ulong",
							"scan_ushort",
							"fmt_longlong",
							"fmt_ulonglong",
							"fmt_xlonglong",
							"scan_longlong",
							"scan_ulonglong",
							"scan_xlonglong",
							"scan_whitenskip",
							"scan_nonwhitenskip",
							"scan_fromhex",
							"utf8_charlen",
							"utf8_strlen"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADeAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAN4CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADeAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAN4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADeAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl93aGl0ZW5za2lwCiAgc2Nhbl9ub253aGl0ZW5za2lwCiAgc2Nhbl9mcm9taGV4CiAgdXRmOF9jaGFybGVuCiAgdXRmOF9zdHJsZW4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
						"symkeys":
						[
							[
								177,
								190
							],
							[
								576,
								592
							],
							[
								1182,
								1193
							],
							[
								1455,
								1469
							],
							[
								1620,
								1638
							],
							[
								1766,
								1779
							],
							[
								3348,
								3366
							],
							[
								3965,
								3980
							],
							[
								4270,
								4281
							],
							[
								4730,
								4741
							],
							[
								4838,
								4850
							],
							[
								5000,
								5009
							],
							[
								5420,
								5432
							],
							[
								7873,
								7884
							],
							[
								8083,
								8095
							],
							[
								8942,
								8958
							],
							[
								9115,
								9132
							],
							[
								9276,
								9288
							],
							[
								9432,
								9447
							],
							[
								9591,
								9607
							],
							[
								9751,
								9763
							],
							[
								9908,
								9922
							],
							[
								10067,
								10082
							],
							[
								10278,
								10292
							],
							[
								12026,
								12039
							],
							[
								12190,
								12205
							],
							[
								12752,
								12761
							],
							[
								12939,
								12958
							],
							[
								13156,
								13175
							],
							[
								13371,
								13385
							],
							[
								13718,
								13730
							],
							[
								13872,
								13885
							]
						],
						"symlist":
						[
							"path_absolute",
							"path_absolute_db",
							"path_append",
							"path_canonical",
							"path_canonical_buf",
							"path_collapse",
							"path_common_prefix",
							"path_components",
							"path_concat",
							"path_exists",
							"path_extname",
							"path_find",
							"path_fnmatch",
							"path_getcwd",
							"path_gethome",
							"path_is_absolute",
							"path_is_directory",
							"path_is_file",
							"path_is_chardev",
							"path_is_blockdev",
							"path_is_fifo",
							"path_is_socket",
							"path_is_symlink",
							"path_normalize",
							"path_relative",
							"path_relative_b",
							"path_root",
							"path_skip_component",
							"path_skip_separator",
							"__path_dirname",
							"path_dirname",
							"path_readlink"
						]
					},
					"AQAAAAAAAAAAAAAAGAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAICBwYXRoX2Fic29sdXRlCiAgcGF0aF9hYnNvbHV0ZV9kYgogIHBhdGhfYXBwZW5kCiAgcGF0aF9jYW5vbmljYWwKICBwYXRoX2Nhbm9uaWNhbF9idWYKICBwYXRoX2NvbGxhcHNlCiAgcGF0aF9jb21tb25fcHJlZml4CiAgcGF0aF9jb21wb25lbnRzCiAgcGF0aF9jb25jYXQKICBwYXRoX2V4aXN0cwogIHBhdGhfZXh0bmFtZQogIHBhdGhfZmluZAogIHBhdGhfZm5tYXRjaAogIHBhdGhfZ2V0Y3dkCiAgcGF0aF9nZXRob21lCiAgcGF0aF9pc19hYnNvbHV0ZQogIHBhdGhfaXNfZGlyZWN0b3J5CiAgcGF0aF9pc19maWxlCiAgcGF0aF9pc19jaGFyZGV2CiAgcGF0aF9pc19ibG9ja2RldgogIHBhdGhfaXNfZmlmbwogIHBhdGhfaXNfc29ja2V0CiAgcGF0aF9pc19zeW1saW5rCiAgcGF0aF9ub3JtYWxpemUKICBwYXRoX3JlbGF0aXZlCiAgcGF0aF9yZWxhdGl2ZV9iCiAgcGF0aF9yb290CiAgcGF0aF9za2lwX2NvbXBvbmVudAogIHBhdGhfc2tpcF9zZXBhcmF0b3IKICBfX3BhdGhfZGlybmFtZQogIHBhdGhfZGlybmFtZQogIHBhdGhfcmVhZGxpbmsAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
						"symkeys":
						[
							[
								177,
								190
							],
							[
								576,
								592
							],
							[
								1182,
								1193
							],
							[
								1455,
								1469
							],
							[
								1620,
								1638
							],
							[
								1766,
								1779
							],
							[
								3348,
								3366
							],
							[
								3965,
								3980
							],
							[
								4270,
								4281
							],
							[
								4730,
								4741
							],
							[
								4838,
								4850
							],
							[
								5000,
								5009
							],
							[
								5420,
								5432
							],
							[
								7873,
								7884
							],
							[
								8083,
								8095
							],
							[
								8942,
								8958
							],
							[
								9115,
								9132
							],
							[
								9276,
								9288
							],
							[
								9432,
								9447
							],
							[
								9591,
								9607
							],
							[
								9751,
								9763
							],
							[
								9908,
								9922
							],
							[
								10067,
								10082
							],
							[
								10278,
								10292
							],
							[
								12026,
								12039
							],
							[
								12190,
								12205
							],
							[
								12752,
								12761
							],
							[
								12939,
								12958
							],
							[
								13156,
								13175
							],
							[
								13371,
								13385
							],
							[
								13718,
								13730
							],
							[
								13872,
								13885
							]
						],
						"symlist":
						[
							"path_absolute",
							"path_absolute_db",
							"path_append",
							"path_canonical",
							"path_canonical_buf",
							"path_collapse",
							"path_common_prefix",
							"path_components",
							"path_concat",
							"path_exists",
							"path_extname",
							"path_find",
							"path_fnmatch",
							"path_getcwd",
							"path_gethome",
							"path_is_absolute",
							"path_is_directory",
							"path_is_file",
							"path_is_chardev",
							"path_is_blockdev",
							"path_is_fifo",
							"path_is_socket",
							"path_is_symlink",
							"path_normalize",
							"path_relative",
							"path_relative_b",
							"path_root",
							"path_skip_component",
							"path_skip_separator",
							"__path_dirname",
							"path_dirname",
							"path_readlink"
						]
					},
					"AQAAAAAAAAAAAAAAGAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
						"symkeys":
						[
							[
								177,
								190
							],
							[
								576,
								592
							],
							[
								1182,
								1193
							],
							[
								1455,
								1469
							],
							[
								1620,
								1638
							],
							[
								1766,
								1779
							],
							[
								3348,
								3366
							],
							[
								3965,
								3980
							],
							[
								4270,
								4281
							],
							[
								4730,
								4741
							],
							[
								4838,
								4850
							],
							[
								5000,
								5009
							],
							[
								5420,
								5432
							],
							[
								7873,
								7884
							],
							[
								8083,
								8095
							],
							[
								8942,
								8958
							],
							[
								9115,
								9132
							],
							[
								9276,
								9288
							],
							[
								9432,
								9447
							],
							[
								9591,
								9607
							],
							[
								9751,
								9763
							],
							[
								9908,
								9922
							],
							[
								10078,
								10093
							],
							[
								10289,
								10303
							],
							[
								12037,
								12050
							],
							[
								12201,
								12216
							],
							[
								12763,
								12772
							],
							[
								12950,
								12969
							],
							[
								13167,
								13186
							],
							[
								13382,
								13396
							],
							[
								13729,
								13741
							],
							[
								13883,
								13896
							]
						],
						"symlist":
						[
							"path_absolute",
							"path_absolute_db",
							"path_append",
							"path_canonical",
							"path_canonical_buf",
							"path_collapse",
							"path_common_prefix",
							"path_components",
							"path_concat",
							"path_exists",
							"path_extname",
							"path_find",
							"path_fnmatch",
							"path_getcwd",
							"path_gethome",
							"path_is_absolute",
							"path_is_directory",
							"path_is_file",
							"path_is_chardev",
							"path_is_blockdev",
							"path_is_fifo",
							"path_is_socket",
							"path_is_symlink",
							"path_normalize",
							"path_relative",
							"path_relative_b",
							"path_root",
							"path_skip_component",
							"path_skip_separator",
							"__path_dirname",
							"path_dirname",
							"path_readlink"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAICBwYXRoX2Fic29sdXRlCiAgcGF0aF9hYnNvbHV0ZV9kYgogIHBhdGhfYXBwZW5kCiAgcGF0aF9jYW5vbmljYWwKICBwYXRoX2Nhbm9uaWNhbF9idWYKICBwYXRoX2NvbGxhcHNlCiAgcGF0aF9jb21tb25fcHJlZml4CiAgcGF0aF9jb21wb25lbnRzCiAgcGF0aF9jb25jYXQKICBwYXRoX2V4aXN0cwogIHBhdGhfZXh0bmFtZQogIHBhdGhfZmluZAogIHBhdGhfZm5tYXRjaAogIHBhdGhfZ2V0Y3dkCiAgcGF0aF9nZXRob21lCiAgcGF0aF9pc19hYnNvbHV0ZQogIHBhdGhfaXNfZGlyZWN0b3J5CiAgcGF0aF9pc19maWxlCiAgcGF0aF9pc19jaGFyZGV2CiAgcGF0aF9pc19ibG9ja2RldgogIHBhdGhfaXNfZmlmbwogIHBhdGhfaXNfc29ja2V0CiAgcGF0aF9pc19zeW1saW5rCiAgcGF0aF9ub3JtYWxpemUKICBwYXRoX3JlbGF0aXZlCiAgcGF0aF9yZWxhdGl2ZV9iCiAgcGF0aF9yb290CiAgcGF0aF9za2lwX2NvbXBvbmVudAogIHBhdGhfc2tpcF9zZXBhcmF0b3IKICBfX3BhdGhfZGlybmFtZQogIHBhdGhfZGlybmFtZQogIHBhdGhfcmVhZGxpbmsAAAAAAAAAABgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAICBwYXRoX2Fic29sdXRlCiAgcGF0aF9hYnNvbHV0ZV9kYgogIHBhdGhfYXBwZW5kCiAgcGF0aF9jYW5vbmljYWwKICBwYXRoX2Nhbm9uaWNhbF9idWYKICBwYXRoX2NvbGxhcHNlCiAgcGF0aF9jb21tb25fcHJlZml4CiAgcGF0aF9jb21wb25lbnRzCiAgcGF0aF9jb25jYXQKICBwYXRoX2V4aXN0cwogIHBhdGhfZXh0bmFtZQogIHBhdGhfZmluZAogIHBhdGhfZm5tYXRjaAogIHBhdGhfZ2V0Y3dkCiAgcGF0aF9nZXRob21lCiAgcGF0aF9pc19hYnNvbHV0ZQogIHBhdGhfaXNfZGlyZWN0b3J5CiAgcGF0aF9pc19maWxlCiAgcGF0aF9pc19jaGFyZGV2CiAgcGF0aF9pc19ibG9ja2RldgogIHBhdGhfaXNfZmlmbwogIHBhdGhfaXNfc29ja2V0CiAgcGF0aF9pc19zeW1saW5rCiAgcGF0aF9ub3JtYWxpemUKICBwYXRoX3JlbGF0aXZlCiAgcGF0aF9yZWxhdGl2ZV9iCiAgcGF0aF9yb290CiAgcGF0aF9za2lwX2NvbXBvbmVudAogIHBhdGhfc2tpcF9zZXBhcmF0b3IKICBfX3BhdGhfZGlybmFtZQogIHBhdGhfZGlybmFtZQogIHBhdGhfcmVhZGxpbmsAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
						"symkeys":
						[
							[
								530,
								541
							],
							[
								619,
								629
							],
							[
								790,
								804
							],
							[
								947,
								954
							],
							[
								1165,
								1172
							],
							[
								1373,
								1396
							],
							[
								1804,
								1825
							],
							[
								2210,
								2226
							],
							[
								2857,
								2873
							],
							[
								3042,
								3056
							],
							[
								3380,
								3395
							],
							[
								3812,
								3826
							],
							[
								3895,
								3910
							],
							[
								4181,
								4195
							],
							[
								4568,
								4584
							],
							[
								4944,
								4958
							],
							[
								5293,
								5306
							],
							[
								5625,
								5637
							],
							[
								6177,
								6189
							],
							[
								6637,
								6653
							],
							[
								6819,
								6840
							],
							[
								7031,
								7046
							],
							[
								7211,
								7226
							],
							[
								7439,
								7455
							],
							[
								8031,
								8048
							],
							[
								8232,
								8249
							],
							[
								8345,
								8361
							],
							[
								9272,
								9288
							],
							[
								9400,
								9417
							],
							[
								9637,
								9654
							],
							[
								10038,
								10054
							],
							[
								10360,
								10382
							],
							[
								10561,
								10582
							],
							[
								10856,
								10876
							],
							[
								11122,
								11139
							],
							[
								11325,
								11352
							],
							[
								11486,
								11514
							],
							[
								11668,
								11692
							],
							[
								11877,
								11894
							],
							[
								12106,
								12125
							],
							[
								12326,
								12344
							],
							[
								12548,
								12567
							],
							[
								12779,
								12800
							],
							[
								13036,
								13060
							],
							[
								13302,
								13320
							],
							[
								13787,
								13802
							],
							[
								13982,
								13998
							],
							[
								14410,
								14428
							],
							[
								14674,
								14693
							],
							[
								15011,
								15027
							],
							[
								15205,
								15226
							],
							[
								15402,
								15421
							],
							[
								16132,
								16148
							],
							[
								17007,
								17019
							],
							[
								17254,
								17273
							],
							[
								17411,
								17426
							],
							[
								17629,
								17642
							],
							[
								17880,
								17898
							],
							[
								18113,
								18131
							],
							[
								18342,
								18367
							],
							[
								18490,
								18513
							],
							[
								18768,
								18794
							],
							[
								19089,
								19118
							],
							[
								19436,
								19462
							],
							[
								19752,
								19776
							],
							[
								19982,
								20007
							],
							[
								20289,
								20317
							],
							[
								20624,
								20648
							],
							[
								20933,
								20958
							],
							[
								21242,
								21265
							],
							[
								21549,
								21574
							],
							[
								21743,
								21765
							],
							[
								21899,
								21924
							],
							[
								22099,
								22127
							],
							[
								22321,
								22346
							],
							[
								22775,
								22786
							],
							[
								22870,
								22884
							],
							[
								22956,
								22968
							],
							[
								23098,
								23111
							],
							[
								23355,
								23368
							],
							[
								23551,
								23564
							],
							[
								23703,
								23721
							],
							[
								23967,
								23986
							],
							[
								24192,
								24212
							],
							[
								24398,
								24418
							],
							[
								24611,
								24622
							],
							[
								24752,
								24767
							],
							[
								25119,
								25140
							],
							[
								25302,
								25316
							],
							[
								25476,
								25488
							],
							[
								25645,
								25660
							],
							[
								25823,
								25839
							],
							[
								26052,
								26066
							],
							[
								26146,
								26157
							],
							[
								26398,
								26414
							],
							[
								26636,
								26657
							],
							[
								26837,
								26859
							],
							[
								27071,
								27085
							],
							[
								27158,
								27181
							],
							[
								27422,
								27435
							],
							[
								27646,
								27664
							],
							[
								27843,
								27862
							],
							[
								28165,
								28185
							],
							[
								28378,
								28391
							],
							[
								28793,
								28807
							],
							[
								28968,
								28985
							],
							[
								29203,
								29222
							],
							[
								29529,
								29547
							],
							[
								30004,
								30020
							],
							[
								30146,
								30168
							],
							[
								30254,
								30264
							],
							[
								30548,
								30565
							],
							[
								30866,
								30884
							],
							[
								31738,
								31751
							],
							[
								32007,
								32021
							],
							[
								33660,
								33675
							],
							[
								33963,
								33976
							],
							[
								34890,
								34905
							],
							[
								36330,
								36348
							],
							[
								36495,
								36509
							],
							[
								36728,
								36743
							],
							[
								36892,
								36908
							],
							[
								37123,
								37137
							],
							[
								37278,
								37292
							],
							[
								37545,
								37561
							],
							[
								37733,
								37748
							],
							[
								37962,
								37972
							],
							[
								38170,
								38181
							],
							[
								38340,
								38354
							],
							[
								38546,
								38562
							],
							[
								38995,
								39006
							],
							[
								39487,
								39496
							],
							[
								39583,
								39602
							],
							[
								40010,
								40028
							],
							[
								40608,
								40622
							],
							[
								40806,
								40821
							],
							[
								40882,
								40898
							],
							[
								41411,
								41429
							],
							[
								42089,
								42103
							],
							[
								42312,
								42329
							],
							[
								42835,
								42847
							],
							[
								42948,
								42960
							],
							[
								43239,
								43252
							],
							[
								44077,
								44090
							],
							[
								44414,
								44432
							],
							[
								44901,
								44919
							],
							[
								45384,
								45401
							],
							[
								45895,
								45907
							],
							[
								46379,
								46396
							],
							[
								46927,
								46950
							],
							[
								47090,
								47100
							],
							[
								47225,
								47234
							],
							[
								47358,
								47367
							],
							[
								47491,
								47506
							],
							[
								47636,
								47648
							],
							[
								47775,
								47788
							],
							[
								47964,
								47978
							],
							[
								48107,
								48121
							],
							[
								48503,
								48517
							],
							[
								48719,
								48742
							],
							[
								48957,
								48982
							],
							[
								49211,
								49220
							],
							[
								49480,
								49507
							],
							[
								49589,
								49615
							],
							[
								49805,
								49824
							],
							[
								50104,
								50117
							],
							[
								50251,
								50262
							],
							[
								50456,
								50471
							],
							[
								50630,
								50650
							],
							[
								50761,
								50782
							],
							[
								50897,
								50912
							],
							[
								51202,
								51214
							],
							[
								51410,
								51418
							],
							[
								51620,
								51644
							],
							[
								51783,
								51807
							],
							[
								52095,
								52120
							],
							[
								52378,
								52392
							],
							[
								52907,
								52921
							],
							[
								53512,
								53523
							],
							[
								54190,
								54201
							],
							[
								54509,
								54520
							],
							[
								54894,
								54904
							],
							[
								55043,
								55063
							],
							[
								55148,
								55163
							],
							[
								55294,
								55307
							],
							[
								55402,
								55417
							],
							[
								55676,
								55688
							],
							[
								55855,
								55866
							],
							[
								56119,
								56129
							],
							[
								56284,
								56297
							],
							[
								57070,
								57087
							],
							[
								57248,
								57262
							],
							[
								58100,
								58114
							],
							[
								58290,
								58310
							],
							[
								58964,
								58987
							],
							[
								59297,
								59315
							],
							[
								59519,
								59534
							],
							[
								59657,
								59673
							],
							[
								59797,
								59812
							],
							[
								60159,
								60175
							],
							[
								60331,
								60343
							],
							[
								60672,
								60684
							],
							[
								61011,
								61025
							],
							[
								61349,
								61364
							],
							[
								61996,
								62010
							],
							[
								62281,
								62299
							],
							[
								62773,
								62790
							],
							[
								63145,
								63159
							],
							[
								63443,
								63454
							],
							[
								63542,
								63553
							],
							[
								63792,
								63807
							],
							[
								64268,
								64285
							]
						],
						"symlist":
						[
							"quicksort_r",
							"strverscmp",
							"atomic_add_int",
							"time_us",
							"time_us",
							"regexp_flags_fromstring",
							"regexp_flags_tostring",
							"regexp_from_argv",
							"regexp_from_dbuf",
							"regexp_compile",
							"regexp_to_value",
							"regexp_free_rt",
							"js_array_length",
							"js_array_clear",
							"js_array_to_argv",
							"js_array_copys",
							"js_strv_copys",
							"js_atom_from",
							"js_atom_dump",
							"js_atom_tobinary",
							"js_atom_to_cstringlen",
							"js_atom_toint32",
							"js_atom_toint64",
							"js_atom_is_index",
							"js_atom_is_string",
							"js_atom_is_length",
							"js_function_name",
							"js_function_argc",
							"js_function_cfunc",
							"js_function_bound",
							"js_function_bind",
							"js_function_bound_this",
							"js_function_bind_this",
							"js_function_throw_fn",
							"js_function_throw",
							"js_function_return_value_fn",
							"js_function_return_undefined",
							"js_function_return_value",
							"js_global_get_str",
							"js_global_get_str_n",
							"js_global_get_atom",
							"js_global_prototype",
							"js_global_static_func",
							"js_global_prototype_func",
							"js_iterator_method",
							"js_iterator_new",
							"js_iterator_next",
							"js_iterator_result",
							"js_iterator_then_fn",
							"js_iterator_then",
							"js_object_constructor",
							"js_object_classname",
							"js_object_equals",
							"js_object_is",
							"js_object_construct",
							"js_object_error",
							"js_object_new",
							"js_object_function",
							"js_has_propertystr",
							"js_get_propertyatom_value",
							"js_get_propertystr_bool",
							"js_get_propertystr_cstring",
							"js_get_propertystr_cstringlen",
							"js_get_propertyint_cstring",
							"js_get_propertyint_int32",
							"js_get_propertystr_string",
							"js_get_propertystr_stringlen",
							"js_get_propertystr_int32",
							"js_get_propertystr_uint64",
							"js_get_propertystr_atom",
							"js_set_propertyint_string",
							"js_set_propertyint_int",
							"js_set_propertystr_string",
							"js_set_propertystr_stringlen",
							"js_get_propertydescriptor",
							"js_class_id",
							"js_class_newid",
							"js_class_get",
							"js_class_find",
							"js_class_atom",
							"js_class_name",
							"js_object_tostring",
							"js_object_tostring2",
							"js_function_tostring",
							"js_function_isnative",
							"js_is_input",
							"js_propenum_cmp",
							"js_propertyenums_free",
							"js_strv_free_n",
							"js_strv_free",
							"js_strv_free_rt",
							"js_strv_to_array",
							"js_strv_length",
							"js_strv_dup",
							"js_intv_to_array",
							"js_symbol_static_atom",
							"js_symbol_static_value",
							"js_symbol_ctor",
							"js_symbol_invoke_static",
							"js_symbol_for",
							"js_symbol_for_atom",
							"js_symbol_to_string",
							"js_symbol_to_cstring",
							"js_values_dup",
							"js_values_free",
							"js_values_toarray",
							"js_values_fromarray",
							"js_value_type_name",
							"js_value_typestr",
							"js_value_has_ref_count",
							"value_mask",
							"js_value_type_get",
							"js_value_type_flag",
							"js_value_free",
							"js_value_clone",
							"js_value_fwrite",
							"js_value_dump",
							"js_value_equals",
							"js_value_from_char",
							"js_value_print",
							"js_value_tosize",
							"js_value_free_rt",
							"js_cstring_ptr",
							"js_cstring_dup",
							"js_cstring_value",
							"js_cstring_dump",
							"js_map_new",
							"module_name",
							"module_namestr",
							"call_module_func",
							"module_func",
							"module_ns",
							"module_exports_find",
							"module_exports_get",
							"module_exports",
							"js_modules_list",
							"js_modules_array",
							"js_modules_entries",
							"js_modules_map",
							"js_modules_object",
							"module_value",
							"module_entry",
							"module_object",
							"js_module_def",
							"js_module_find_fwd",
							"js_module_find_rev",
							"js_module_indexof",
							"js_module_at",
							"js_is_arraybuffer",
							"js_is_sharedarraybuffer",
							"js_is_date",
							"js_is_map",
							"js_is_set",
							"js_is_generator",
							"js_is_regexp",
							"js_is_promise",
							"js_is_dataview",
							"js_is_iterable",
							"js_is_iterator",
							"js_typedarray_prototype",
							"js_typedarray_constructor",
							"js_invoke",
							"js_symbol_operatorset_value",
							"js_symbol_operatorset_atom",
							"js_operators_create",
							"js_number_new",
							"js_date_new",
							"js_date_from_ms",
							"js_date_from_time_ns",
							"js_date_from_timespec",
							"js_date_gettime",
							"js_date_time",
							"timespec",
							"js_arraybuffer_freevalue",
							"js_arraybuffer_fromvalue",
							"js_arraybuffer_bytelength",
							"js_eval_module",
							"js_eval_binary",
							"js_eval_buf",
							"js_eval_str",
							"js_eval_fmt",
							"js_time_ms",
							"js_interrupt_handler",
							"js_timer_unlink",
							"js_timer_free",
							"js_call_handler",
							"js_sab_alloc",
							"js_sab_free",
							"js_sab_dup",
							"js_error_dump",
							"js_error_tostring",
							"js_error_print",
							"js_error_stack",
							"js_io_readhandler_fn",
							"js_io_readhandler_cfunc",
							"js_promise_resolve",
							"js_promise_then",
							"js_promise_catch",
							"js_promise_wrap",
							"js_promise_adopt",
							"js_to_string",
							"js_to_source",
							"arguments_dump",
							"arguments_alloc",
							"arguments_push",
							"js_arguments_alloc",
							"js_arguments_dump",
							"js_tostringlen",
							"js_tostring",
							"js_tosource",
							"js_towstringlen",
							"js_dbuf_allocator"
						]
					},
					"AQAAAAAAAAAAAAAAKRAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAApEAAAICBxdWlja3NvcnRfcgogIHN0cnZlcnNjbXAKICBhdG9taWNfYWRkX2ludAogIHRpbWVfdXMKICB0aW1lX3VzCiAgcmVnZXhwX2ZsYWdzX2Zyb21zdHJpbmcKICByZWdleHBfZmxhZ3NfdG9zdHJpbmcKICByZWdleHBfZnJvbV9hcmd2CiAgcmVnZXhwX2Zyb21fZGJ1ZgogIHJlZ2V4cF9jb21waWxlCiAgcmVnZXhwX3RvX3ZhbHVlCiAgcmVnZXhwX2ZyZWVfcnQKICBqc19hcnJheV9sZW5ndGgKICBqc19hcnJheV9jbGVhcgogIGpzX2FycmF5X3RvX2FyZ3YKICBqc19hcnJheV9jb3B5cwogIGpzX3N0cnZfY29weXMKICBqc19hdG9tX2Zyb20KICBqc19hdG9tX2R1bXAKICBqc19hdG9tX3RvYmluYXJ5CiAganNfYXRvbV90b19jc3RyaW5nbGVuCiAganNfYXRvbV90b2ludDMyCiAganNfYXRvbV90b2ludDY0CiAganNfYXRvbV9pc19pbmRleAogIGpzX2F0b21faXNfc3RyaW5nCiAganNfYXRvbV9pc19sZW5ndGgKICBqc19mdW5jdGlvbl9uYW1lCiAganNfZnVuY3Rpb25fYXJnYwogIGpzX2Z1bmN0aW9uX2NmdW5jCiAganNfZnVuY3Rpb25fYm91bmQKICBqc19mdW5jdGlvbl9iaW5kCiAganNfZnVuY3Rpb25fYm91bmRfdGhpcwogIGpzX2Z1bmN0aW9uX2JpbmRfdGhpcwogIGpzX2Z1bmN0aW9uX3Rocm93X2ZuCiAganNfZnVuY3Rpb25fdGhyb3cKICBqc19mdW5jdGlvbl9yZXR1cm5fdmFsdWVfZm4KICBqc19mdW5jdGlvbl9yZXR1cm5fdW5kZWZpbmVkCiAganNfZnVuY3Rpb25fcmV0dXJuX3ZhbHVlCiAganNfZ2xvYmFsX2dldF9zdHIKICBqc19nbG9iYWxfZ2V0X3N0cl9uCiAganNfZ2xvYmFsX2dldF9hdG9tCiAganNfZ2xvYmFsX3Byb3RvdHlwZQogIGpzX2dsb2JhbF9zdGF0aWNfZnVuYwogIGpzX2dsb2JhbF9wcm90b3R5cGVfZnVuYwogIGpzX2l0ZXJhdG9yX21ldGhvZAogIGpzX2l0ZXJhdG9yX25ldwogIGpzX2l0ZXJhdG9yX25leHQKICBqc19pdGVyYXRvcl9yZXN1bHQKICBqc19pdGVyYXRvcl90aGVuX2ZuCiAganNfaXRlcmF0b3JfdGhlbgogIGpzX29iamVjdF9jb25zdHJ1Y3RvcgogIGpzX29iamVjdF9jbGFzc25hbWUKICBqc19vYmplY3RfZXF1YWxzCiAganNfb2JqZWN0X2lzCiAganNfb2JqZWN0X2NvbnN0cnVjdAogIGpzX29iamVjdF9lcnJvcgogIGpzX29iamVjdF9uZXcKICBqc19vYmplY3RfZnVuY3Rpb24KICBqc19oYXNfcHJvcGVydHlzdHIKICBqc19nZXRfcHJvcGVydHlhdG9tX3ZhbHVlCiAganNfZ2V0X3Byb3BlcnR5c3RyX2Jvb2wKICBqc19nZXRfcHJvcGVydHlzdHJfY3N0cmluZwogIGpzX2dldF9wcm9wZXJ0eXN0cl9jc3RyaW5nbGVuCiAganNfZ2V0X3Byb3BlcnR5aW50X2NzdHJpbmcKICBqc19nZXRfcHJvcGVydHlpbnRfaW50MzIKICBqc19nZXRfcHJvcGVydHlzdHJfc3RyaW5nCiAganNfZ2V0X3Byb3BlcnR5c3RyX3N0cmluZ2xlbgogIGpzX2dldF9wcm9wZXJ0eXN0cl9pbnQzMgogIGpzX2dldF9wcm9wZXJ0eXN0cl91aW50NjQKICBqc19nZXRfcHJvcGVydHlzdHJfYXRvbQogIGpzX3NldF9wcm9wZXJ0eWludF9zdHJpbmcKICBqc19zZXRfcHJvcGVydHlpbnRfaW50CiAganNfc2V0X3Byb3BlcnR5c3RyX3N0cmluZwogIGpzX3NldF9wcm9wZXJ0eXN0cl9zdHJpbmdsZW4KICBqc19nZXRfcHJvcGVydHlkZXNjcmlwdG9yCiAganNfY2xhc3NfaWQKICBqc19jbGFzc19uZXdpZAogIGpzX2NsYXNzX2dldAogIGpzX2NsYXNzX2ZpbmQKICBqc19jbGFzc19hdG9tCiAganNfY2xhc3NfbmFtZQogIGpzX29iamVjdF90b3N0cmluZwogIGpzX29iamVjdF90b3N0cmluZzIKICBqc19mdW5jdGlvbl90b3N0cmluZwogIGpzX2Z1bmN0aW9uX2lzbmF0aXZlCiAganNfaXNfaW5wdXQKICBqc19wcm9wZW51bV9jbXAKICBqc19wcm9wZXJ0eWVudW1zX2ZyZWUKICBqc19zdHJ2X2ZyZWVfbgogIGpzX3N0cnZfZnJlZQogIGpzX3N0cnZfZnJlZV9ydAogIGpzX3N0cnZfdG9fYXJyYXkKICBqc19zdHJ2X2xlbmd0aAogIGpzX3N0cnZfZHVwCiAganNfaW50dl90b19hcnJheQogIGpzX3N5bWJvbF9zdGF0aWNfYXRvbQogIGpzX3N5bWJvbF9zdGF0aWNfdmFsdWUKICBqc19zeW1ib2xfY3RvcgogIGpzX3N5bWJvbF9pbnZva2Vfc3RhdGljCiAganNfc3ltYm9sX2ZvcgogIGpzX3N5bWJvbF9mb3JfYXRvbQogIGpzX3N5bWJvbF90b19zdHJpbmcKICBqc19zeW1ib2xfdG9fY3N0cmluZwogIGpzX3ZhbHVlc19kdXAKICBqc192YWx1ZXNfZnJlZQogIGpzX3ZhbHVlc190b2FycmF5CiAganNfdmFsdWVzX2Zyb21hcnJheQogIGpzX3ZhbHVlX3R5cGVfbmFtZQogIGpzX3ZhbHVlX3R5cGVzdHIKICBqc192YWx1ZV9oYXNfcmVmX2NvdW50CiAgdmFsdWVfbWFzawogIGpzX3ZhbHVlX3R5cGVfZ2V0CiAganNfdmFsdWVfdHlwZV9mbGFnCiAganNfdmFsdWVfZnJlZQogIGpzX3ZhbHVlX2Nsb25lCiAganNfdmFsdWVfZndyaXRlCiAganNfdmFsdWVfZHVtcAogIGpzX3ZhbHVlX2VxdWFscwogIGpzX3ZhbHVlX2Zyb21fY2hhcgogIGpzX3ZhbHVlX3ByaW50CiAganNfdmFsdWVfdG9zaXplCiAganNfdmFsdWVfZnJlZV9ydAogIGpzX2NzdHJpbmdfcHRyCiAganNfY3N0cmluZ19kdXAKICBqc19jc3RyaW5nX3ZhbHVlCiAganNfY3N0cmluZ19kdW1wCiAganNfbWFwX25ldwogIG1vZHVsZV9uYW1lCiAgbW9kdWxlX25hbWVzdHIKICBjYWxsX21vZHVsZV9mdW5jCiAgbW9kdWxlX2Z1bmMKICBtb2R1bGVfbnMKICBtb2R1bGVfZXhwb3J0c19maW5kCiAgbW9kdWxlX2V4cG9ydHNfZ2V0CiAgbW9kdWxlX2V4cG9ydHMKICBqc19tb2R1bGVzX2xpc3QKICBqc19tb2R1bGVzX2FycmF5CiAganNfbW9kdWxlc19lbnRyaWVzCiAganNfbW9kdWxlc19tYXAKICBqc19tb2R1bGVzX29iamVjdAogIG1vZHVsZV92YWx1ZQogIG1vZHVsZV9lbnRyeQogIG1vZHVsZV9vYmplY3QKICBqc19tb2R1bGVfZGVmCiAganNfbW9kdWxlX2ZpbmRfZndkCiAganNfbW9kdWxlX2ZpbmRfcmV2CiAganNfbW9kdWxlX2luZGV4b2YKICBqc19tb2R1bGVfYXQKICBqc19pc19hcnJheWJ1ZmZlcgogIGpzX2lzX3NoYXJlZGFycmF5YnVmZmVyCiAganNfaXNfZGF0ZQogIGpzX2lzX21hcAogIGpzX2lzX3NldAogIGpzX2lzX2dlbmVyYXRvcgogIGpzX2lzX3JlZ2V4cAogIGpzX2lzX3Byb21pc2UKICBqc19pc19kYXRhdmlldwogIGpzX2lzX2l0ZXJhYmxlCiAganNfaXNfaXRlcmF0b3IKICBqc190eXBlZGFycmF5X3Byb3RvdHlwZQogIGpzX3R5cGVkYXJyYXlfY29uc3RydWN0b3IKICBqc19pbnZva2UKICBqc19zeW1ib2xfb3BlcmF0b3JzZXRfdmFsdWUKICBqc19zeW1ib2xfb3BlcmF0b3JzZXRfYXRvbQogIGpzX29wZXJhdG9yc19jcmVhdGUKICBqc19udW1iZXJfbmV3CiAganNfZGF0ZV9uZXcKICBqc19kYXRlX2Zyb21fbXMKICBqc19kYXRlX2Zyb21fdGltZV9ucwogIGpzX2RhdGVfZnJvbV90aW1lc3BlYwogIGpzX2RhdGVfZ2V0dGltZQogIGpzX2RhdGVfdGltZQogIHRpbWVzcGVjCiAganNfYXJyYXlidWZmZXJfZnJlZXZhbHVlCiAganNfYXJyYXlidWZmZXJfZnJvbXZhbHVlCiAganNfYXJyYXlidWZmZXJfYnl0ZWxlbmd0aAogIGpzX2V2YWxfbW9kdWxlCiAganNfZXZhbF9iaW5hcnkKICBqc19ldmFsX2J1ZgogIGpzX2V2YWxfc3RyCiAganNfZXZhbF9mbXQKICBqc190aW1lX21zCiAganNfaW50ZXJydXB0X2hhbmRsZXIKICBqc190aW1lcl91bmxpbmsKICBqc190aW1lcl9mcmVlCiAganNfY2FsbF9oYW5kbGVyCiAganNfc2FiX2FsbG9jCiAganNfc2FiX2ZyZWUKICBqc19zYWJfZHVwCiAganNfZXJyb3JfZHVtcAogIGpzX2Vycm9yX3Rvc3RyaW5nCiAganNfZXJyb3JfcHJpbnQKICBqc19lcnJvcl9zdGFjawogIGpzX2lvX3JlYWRoYW5kbGVyX2ZuCiAganNfaW9fcmVhZGhhbmRsZXJfY2Z1bmMKICBqc19wcm9taXNlX3Jlc29sdmUKICBqc19wcm9taXNlX3RoZW4KICBqc19wcm9taXNlX2NhdGNoCiAganNfcHJvbWlzZV93cmFwCiAganNfcHJvbWlzZV9hZG9wdAogIGpzX3RvX3N0cmluZwogIGpzX3RvX3NvdXJjZQogIGFyZ3VtZW50c19kdW1wCiAgYXJndW1lbnRzX2FsbG9jCiAgYXJndW1lbnRzX3B1c2gKICBqc19hcmd1bWVudHNfYWxsb2MKICBqc19hcmd1bWVudHNfZHVtcAogIGpzX3Rvc3RyaW5nbGVuCiAganNfdG9zdHJpbmcKICBqc190b3NvdXJjZQogIGpzX3Rvd3N0cmluZ2xlbgogIGpzX2RidWZfYWxsb2NhdG9yAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					22,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								61,
								77
							],
							[
								377,
								394
							],
							[
								426,
								449
							],
							[
								523,
								540
							],
							[
								578,
								595
							],
							[
								709,
								726
							],
							[
								778,
								810
							],
							[
								915,
								932
							],
							[
								1125,
								1149
							],
							[
								1184,
								1208
							],
							[
								1245,
								1269
							],
							[
								1307,
								1331
							],
							[
								1370,
								1394
							],
							[
								1568,
								1592
							],
							[
								1633,
								1657
							],
							[
								1704,
								1707
							],
							[
								1711,
								1735
							],
							[
								1798,
								1802
							],
							[
								1806,
								1830
							],
							[
								2225,
								2245
							],
							[
								3019,
								3036
							],
							[
								3081,
								3091
							],
							[
								6044,
								6068
							],
							[
								6098,
								6122
							],
							[
								6193,
								6209
							],
							[
								6242,
								6255
							],
							[
								6299,
								6319
							],
							[
								6395,
								6417
							],
							[
								6455,
								6471
							],
							[
								6560,
								6584
							],
							[
								6696,
								6720
							],
							[
								6724,
								6744
							],
							[
								6766,
								6785
							],
							[
								6896,
								6911
							],
							[
								7082,
								7097
							],
							[
								7108,
								7123
							],
							[
								7194,
								7209
							],
							[
								7212,
								7227
							],
							[
								7312,
								7327
							],
							[
								7330,
								7345
							],
							[
								7431,
								7442
							],
							[
								7554,
								7563
							],
							[
								7574,
								7588
							],
							[
								7591,
								7599
							],
							[
								7603,
								7612
							],
							[
								7627,
								7647
							],
							[
								7683,
								7697
							],
							[
								7719,
								7733
							],
							[
								7754,
								7774
							],
							[
								7781,
								7799
							],
							[
								7831,
								7844
							],
							[
								7866,
								7879
							],
							[
								7898,
								7916
							],
							[
								7952,
								7968
							],
							[
								7996,
								8009
							],
							[
								8012,
								8025
							],
							[
								8042,
								8056
							],
							[
								8076,
								8089
							],
							[
								8093,
								8109
							],
							[
								8113,
								8126
							],
							[
								8130,
								8150
							],
							[
								8157,
								8174
							],
							[
								8201,
								8214
							],
							[
								8247,
								8260
							],
							[
								8263,
								8276
							],
							[
								8345,
								8358
							],
							[
								8361,
								8374
							],
							[
								8413,
								8426
							],
							[
								8448,
								8464
							],
							[
								8535,
								8548
							],
							[
								8552,
								8572
							],
							[
								8580,
								8600
							],
							[
								8652,
								8673
							],
							[
								8762,
								8775
							],
							[
								8779,
								8793
							],
							[
								8800,
								8812
							],
							[
								8819,
								8833
							],
							[
								8918,
								8931
							],
							[
								8935,
								8952
							],
							[
								8994,
								9008
							],
							[
								9040,
								9055
							],
							[
								9062,
								9076
							],
							[
								9092,
								9105
							],
							[
								9181,
								9200
							],
							[
								9203,
								9217
							],
							[
								9291,
								9304
							],
							[
								9311,
								9322
							],
							[
								9325,
								9339
							],
							[
								9405,
								9418
							],
							[
								9422,
								9438
							],
							[
								9442,
								9457
							],
							[
								9464,
								9476
							],
							[
								9493,
								9506
							],
							[
								9510,
								9530
							],
							[
								9558,
								9570
							],
							[
								9573,
								9585
							],
							[
								9626,
								9643
							],
							[
								9670,
								9684
							],
							[
								9710,
								9723
							],
							[
								9730,
								9745
							],
							[
								9768,
								9781
							],
							[
								9805,
								9825
							],
							[
								9832,
								9845
							],
							[
								9864,
								9880
							],
							[
								9884,
								9897
							],
							[
								9919,
								9932
							],
							[
								9936,
								9950
							],
							[
								9973,
								9988
							],
							[
								10007,
								10019
							],
							[
								10022,
								10035
							],
							[
								10039,
								10059
							],
							[
								10066,
								10082
							],
							[
								10085,
								10098
							],
							[
								10102,
								10115
							],
							[
								10119,
								10139
							],
							[
								10146,
								10161
							],
							[
								10164,
								10177
							],
							[
								10181,
								10194
							],
							[
								10198,
								10218
							],
							[
								10250,
								10265
							],
							[
								10268,
								10283
							],
							[
								10353,
								10368
							],
							[
								10371,
								10386
							],
							[
								10452,
								10469
							],
							[
								10492,
								10507
							],
							[
								10510,
								10525
							],
							[
								10574,
								10586
							],
							[
								10589,
								10603
							],
							[
								10607,
								10620
							],
							[
								10627,
								10648
							],
							[
								10733,
								10753
							],
							[
								10757,
								10770
							],
							[
								10774,
								10788
							],
							[
								10796,
								10808
							],
							[
								10884,
								10896
							],
							[
								10900,
								10916
							],
							[
								10920,
								10934
							],
							[
								10942,
								10954
							],
							[
								10974,
								10994
							],
							[
								10997,
								11010
							],
							[
								11014,
								11034
							],
							[
								11148,
								11171
							],
							[
								11178,
								11193
							],
							[
								11196,
								11209
							],
							[
								11216,
								11233
							],
							[
								11236,
								11256
							],
							[
								11264,
								11282
							],
							[
								11285,
								11299
							],
							[
								11303,
								11323
							],
							[
								11367,
								11382
							],
							[
								11385,
								11400
							],
							[
								11478,
								11493
							],
							[
								11496,
								11511
							],
							[
								11527,
								11539
							],
							[
								11542,
								11554
							],
							[
								11776,
								11796
							],
							[
								12203,
								12222
							],
							[
								12250,
								12269
							],
							[
								12273,
								12292
							],
							[
								12361,
								12380
							],
							[
								12491,
								12510
							],
							[
								12540,
								12559
							],
							[
								12563,
								12582
							],
							[
								12653,
								12672
							],
							[
								12792,
								12811
							],
							[
								12843,
								12862
							],
							[
								12866,
								12885
							],
							[
								12958,
								12977
							],
							[
								13120,
								13144
							],
							[
								13149,
								13154
							],
							[
								13206,
								13211
							],
							[
								13235,
								13239
							],
							[
								13281,
								13285
							],
							[
								13317,
								13321
							],
							[
								13380,
								13404
							],
							[
								13408,
								13432
							],
							[
								13445,
								13448
							],
							[
								13463,
								13467
							],
							[
								13497,
								13521
							],
							[
								13877,
								13882
							],
							[
								14314,
								14329
							],
							[
								14369,
								14383
							],
							[
								14433,
								14444
							],
							[
								14448,
								14472
							],
							[
								14512,
								14529
							],
							[
								14563,
								14590
							],
							[
								14603,
								14630
							],
							[
								14663,
								14680
							],
							[
								14743,
								14758
							],
							[
								14777,
								14786
							],
							[
								14835,
								14844
							],
							[
								14875,
								14886
							],
							[
								15017,
								15028
							],
							[
								15032,
								15046
							],
							[
								15049,
								15060
							],
							[
								15063,
								15077
							],
							[
								15104,
								15119
							],
							[
								15142,
								15153
							],
							[
								15201,
								15220
							],
							[
								15223,
								15227
							],
							[
								15247,
								15264
							],
							[
								15287,
								15301
							],
							[
								15330,
								15334
							],
							[
								15341,
								15356
							],
							[
								15376,
								15386
							],
							[
								15525,
								15538
							],
							[
								15546,
								15550
							],
							[
								15554,
								15578
							],
							[
								15688,
								15701
							],
							[
								15740,
								15764
							],
							[
								15770,
								15781
							],
							[
								15808,
								15819
							],
							[
								15845,
								15854
							],
							[
								15867,
								15871
							],
							[
								15885,
								15896
							],
							[
								15931,
								15955
							],
							[
								15985,
								15998
							],
							[
								16021,
								16045
							],
							[
								16148,
								16153
							],
							[
								16170,
								16191
							],
							[
								16253,
								16264
							],
							[
								16439,
								16450
							],
							[
								16521,
								16531
							],
							[
								16561,
								16572
							],
							[
								16588,
								16612
							],
							[
								16635,
								16655
							],
							[
								16658,
								16682
							],
							[
								16701,
								16721
							],
							[
								16747,
								16767
							],
							[
								16840,
								16859
							],
							[
								16863,
								16883
							],
							[
								16942,
								16961
							],
							[
								16979,
								17003
							],
							[
								17052,
								17063
							],
							[
								17087,
								17091
							],
							[
								17110,
								17121
							],
							[
								17148,
								17172
							],
							[
								17200,
								17209
							],
							[
								17233,
								17257
							],
							[
								17335,
								17359
							],
							[
								17403,
								17415
							],
							[
								17433,
								17444
							],
							[
								17459,
								17470
							],
							[
								17488,
								17499
							],
							[
								17517,
								17528
							],
							[
								17545,
								17556
							],
							[
								17574,
								17585
							],
							[
								17598,
								17609
							],
							[
								17630,
								17641
							],
							[
								17659,
								17670
							],
							[
								17684,
								17695
							],
							[
								17710,
								17728
							],
							[
								17744,
								17768
							],
							[
								17824,
								17836
							],
							[
								17847,
								17859
							],
							[
								17871,
								17895
							],
							[
								17929,
								17953
							],
							[
								17987,
								18005
							],
							[
								18056,
								18080
							],
							[
								18149,
								18161
							],
							[
								18237,
								18255
							],
							[
								18331,
								18347
							],
							[
								18572,
								18583
							],
							[
								18590,
								18612
							],
							[
								18616,
								18638
							],
							[
								18644,
								18655
							],
							[
								18716,
								18727
							],
							[
								18733,
								18744
							],
							[
								18953,
								18975
							],
							[
								19064,
								19083
							],
							[
								19122,
								19137
							],
							[
								19141,
								19151
							],
							[
								19189,
								19199
							],
							[
								19203,
								19207
							],
							[
								19211,
								19216
							],
							[
								19220,
								19229
							],
							[
								19310,
								19325
							],
							[
								19355,
								19377
							],
							[
								19413,
								19432
							],
							[
								19544,
								19559
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"HAVE_SPAWN",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"COMMON_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"stream_SOURCES",
							"queue_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"token_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"location_SOURCES",
							"token_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"stringdecoder_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"archive_SOURCES",
							"utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJS",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QJSM_LIBDIR",
							"LIBRARY_PREFIX",
							"QJSM_MODULE",
							"LIBRARY_SUFFIX",
							"QUICKJS_MODULES",
							"QJSM_LIBDIR",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"QJSM",
							"TEST_SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY",
							"QJSM_LDADD",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_MODULE_PATH",
							"INSTALL_SCRIPTS"
						]
					},
					"AQAAAAAAAAAAAAAAzxIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPEgAAQ01BS0VfQ19TVEFOREFSRApDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApCVUlMRF9TSEFSRURfTElCUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUUpTCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRSlNDCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9SRVFVSVJFRF9RVUlFVApIQVZFX1BPU0lYX1NQQVdOUApIQVZFX1NQQVdOCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ19DT01QSUxFUgpDTUFLRV9TWVNST09UCkNNQUtFX1RPT0xDSEFJTl9GSUxFCkNNQUtFX1ZFUkJPU0VfTUFLRUZJTEUKQ01BS0VfQlVJTERfVFlQRQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfSU5DTFVERV9ESVJTClFVSUNLSlNfTElCUkFSWV9ESVIKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTCkxJQl9NT0RVTEVTClFVSUNLSlNfSApDT01NT05fSEVBREVSUwpDVVRJTFNfSApRVUlDS0pTX0gKICBidWZmZXJfdXRpbHNfU09VUkNFUwpDT01NT05fU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBjaGFyX3V0aWxzX1NPVVJDRVMKICBxdWV1ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGNoYXJfdXRpbHNfU09VUkNFUwogIGpzX3V0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHN0cmVhbV9TT1VSQ0VTCiAgcXVldWVfU09VUkNFUwogIGpzX3V0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBwcmVkaWNhdGVfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdG9rZW5fU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBzeXNjYWxsZXJyb3JfU09VUkNFUwogIGNoaWxkX3Byb2Nlc3NfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGRlZXBfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHByZWRpY2F0ZV9TT1VSQ0VTCiAgZGVlcF9MSUJSQVJJRVMKICBpbnNwZWN0X1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB0cmVlX3dhbGtlcl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgeG1sX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgaW5zcGVjdF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBwb2ludGVyX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBsZXhlcl9TT1VSQ0VTCiAgbG9jYXRpb25fU09VUkNFUwogIHRva2VuX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBsZXhlcl9MSUJSQVJJRVMKICBtbWFwX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICByZXBlYXRlcl9TT1VSQ0VTCiAgcXVldWVfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHF1ZXVlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBzb2NrZXRzX1NPVVJDRVMKICBzb2NrZXRzX1NPVVJDRVMKICBzb2NrZXRzX1NPVVJDRVMKICBzb2NrZXRzX1NPVVJDRVMKICBzb2NrZXRzX0xJQlJBUklFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIGJsb2JfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHN0cmluZ2RlY29kZXJfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgbWlzY19TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgbG9jYXRpb25fU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgZ3Bpb19TT1VSQ0VTCiAgc3lzY2FsbGVycm9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKTGliQXJjaGl2ZV9JTkNMVURFX0RJUlMKICBhcmNoaXZlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYXJjaGl2ZV9MSUJSQVJJRVMKTGliQXJjaGl2ZV9MSUJSQVJJRVMKUUpTTV9FWFRSQV9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKICBtbWFwX1NPVVJDRVMKICBtbWFwX1NPVVJDRVMKQ01BS0VfUkVRVUlSRURfUVVJRVQKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTClRFU1RTClRFU1QKQkFTRQpCQVNFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTClRFU1QKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTClFVSUNLSlNfTU9EVUxFUwpTSEFSRURfVEFSR0VUUwpRSlNNX0xJQkRJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfSU1QT1JUX0xJQlJBUllfUFJFRklYCkNNQUtFX0lNUE9SVF9MSUJSQVJZX1NVRkZJWApDTUFLRV9TWVNURU1fTkFNRQpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRSlNNX0xJQkRJUgpMSUJSQVJZX1BSRUZJWApRSlNNX01PRFVMRQpMSUJSQVJZX1NVRkZJWApRVUlDS0pTX01PRFVMRVMKUUpTTV9MSUJESVIKICBwcmVkaWNhdGVfTElCUkFSSUVTCkxJQk0KICBzb2NrZXRzX0xJQlJBUklFUwogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9MSUJSQVJJRVMKICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FClFKU00KVEVTVF9TT1VSQ0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkxJQkpTClFVSUNLSlNfSlNfTU9EVUxFX0RJUgpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFCkxJQl9NT0RVTEVTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19JTkNMVURFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVTX0RJUgpRSlNDCk1PRFVMRVNfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNDX0RFUFMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKUUpTTV9FWFRSQV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTTV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVFJBTlNQT1JUX1BMQVRGT1JNCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTX01PRFVMRVNfU1RBVElDCkNPTVBJTEVEX01PRFVMRVMKUUpTTV9MSUJESVIKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTClFKU01fTElCRElSCkxJTktfRVhQT1JUClFKU01fTElCRElSClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKUVVJQ0tKU19MSUJSQVJZX0RJUgpRVUlDS0pTX0xJQlJBUlkKUUpTTV9MREFERApMSUJQVEhSRUFECkxJQk0KTElCREwKTElCV1MyXzMyClFVSUNLSlNfVkVSU0lPTgpRVUlDS0pTX0lOU1RBTExfUFJFRklYClFVSUNLSlNfTU9EVUxFX1BBVEgKSU5TVEFMTF9TQ1JJUFRTAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					25,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								61,
								77
							],
							[
								377,
								394
							],
							[
								426,
								449
							],
							[
								523,
								540
							],
							[
								578,
								595
							],
							[
								709,
								726
							],
							[
								778,
								810
							],
							[
								915,
								932
							],
							[
								1125,
								1149
							],
							[
								1184,
								1208
							],
							[
								1245,
								1269
							],
							[
								1307,
								1331
							],
							[
								1370,
								1394
							],
							[
								1568,
								1592
							],
							[
								1633,
								1657
							],
							[
								1704,
								1707
							],
							[
								1711,
								1735
							],
							[
								1798,
								1802
							],
							[
								1806,
								1830
							],
							[
								2225,
								2245
							],
							[
								3019,
								3036
							],
							[
								3081,
								3091
							],
							[
								6044,
								6068
							],
							[
								6098,
								6122
							],
							[
								6193,
								6209
							],
							[
								6242,
								6255
							],
							[
								6299,
								6319
							],
							[
								6395,
								6417
							],
							[
								6455,
								6471
							],
							[
								6560,
								6584
							],
							[
								6696,
								6720
							],
							[
								6724,
								6744
							],
							[
								6766,
								6785
							],
							[
								6896,
								6911
							],
							[
								7082,
								7097
							],
							[
								7108,
								7123
							],
							[
								7194,
								7209
							],
							[
								7212,
								7227
							],
							[
								7312,
								7327
							],
							[
								7330,
								7345
							],
							[
								7431,
								7442
							],
							[
								7554,
								7563
							],
							[
								7574,
								7588
							],
							[
								7591,
								7599
							],
							[
								7603,
								7612
							],
							[
								7627,
								7647
							],
							[
								7683,
								7697
							],
							[
								7719,
								7733
							],
							[
								7754,
								7774
							],
							[
								7781,
								7799
							],
							[
								7831,
								7844
							],
							[
								7866,
								7879
							],
							[
								7898,
								7916
							],
							[
								7952,
								7968
							],
							[
								7996,
								8009
							],
							[
								8012,
								8025
							],
							[
								8042,
								8056
							],
							[
								8076,
								8089
							],
							[
								8093,
								8109
							],
							[
								8113,
								8126
							],
							[
								8130,
								8150
							],
							[
								8157,
								8174
							],
							[
								8201,
								8214
							],
							[
								8247,
								8260
							],
							[
								8263,
								8276
							],
							[
								8345,
								8358
							],
							[
								8361,
								8374
							],
							[
								8413,
								8426
							],
							[
								8448,
								8464
							],
							[
								8535,
								8548
							],
							[
								8552,
								8572
							],
							[
								8580,
								8600
							],
							[
								8652,
								8673
							],
							[
								8762,
								8775
							],
							[
								8779,
								8793
							],
							[
								8800,
								8812
							],
							[
								8819,
								8833
							],
							[
								8918,
								8931
							],
							[
								8935,
								8952
							],
							[
								8994,
								9008
							],
							[
								9040,
								9055
							],
							[
								9062,
								9076
							],
							[
								9092,
								9105
							],
							[
								9181,
								9200
							],
							[
								9203,
								9217
							],
							[
								9291,
								9304
							],
							[
								9311,
								9322
							],
							[
								9325,
								9339
							],
							[
								9405,
								9418
							],
							[
								9422,
								9438
							],
							[
								9442,
								9457
							],
							[
								9464,
								9476
							],
							[
								9493,
								9506
							],
							[
								9510,
								9530
							],
							[
								9558,
								9570
							],
							[
								9573,
								9585
							],
							[
								9626,
								9643
							],
							[
								9670,
								9684
							],
							[
								9710,
								9723
							],
							[
								9730,
								9745
							],
							[
								9768,
								9781
							],
							[
								9805,
								9825
							],
							[
								9832,
								9845
							],
							[
								9864,
								9880
							],
							[
								9884,
								9897
							],
							[
								9919,
								9932
							],
							[
								9936,
								9950
							],
							[
								9973,
								9988
							],
							[
								10007,
								10019
							],
							[
								10022,
								10035
							],
							[
								10039,
								10059
							],
							[
								10066,
								10082
							],
							[
								10085,
								10098
							],
							[
								10102,
								10115
							],
							[
								10119,
								10139
							],
							[
								10146,
								10161
							],
							[
								10164,
								10177
							],
							[
								10181,
								10194
							],
							[
								10198,
								10218
							],
							[
								10250,
								10265
							],
							[
								10268,
								10283
							],
							[
								10353,
								10368
							],
							[
								10371,
								10386
							],
							[
								10452,
								10469
							],
							[
								10492,
								10507
							],
							[
								10510,
								10525
							],
							[
								10574,
								10586
							],
							[
								10589,
								10603
							],
							[
								10607,
								10620
							],
							[
								10627,
								10648
							],
							[
								10733,
								10753
							],
							[
								10757,
								10770
							],
							[
								10774,
								10788
							],
							[
								10796,
								10808
							],
							[
								10884,
								10896
							],
							[
								10900,
								10916
							],
							[
								10920,
								10934
							],
							[
								10942,
								10954
							],
							[
								10974,
								10994
							],
							[
								10997,
								11010
							],
							[
								11014,
								11034
							],
							[
								11148,
								11171
							],
							[
								11178,
								11193
							],
							[
								11196,
								11209
							],
							[
								11216,
								11233
							],
							[
								11236,
								11256
							],
							[
								11264,
								11282
							],
							[
								11285,
								11299
							],
							[
								11303,
								11323
							],
							[
								11367,
								11382
							],
							[
								11385,
								11400
							],
							[
								11478,
								11493
							],
							[
								11496,
								11511
							],
							[
								11527,
								11539
							],
							[
								11542,
								11554
							],
							[
								11776,
								11796
							],
							[
								12203,
								12222
							],
							[
								12250,
								12269
							],
							[
								12273,
								12292
							],
							[
								12361,
								12380
							],
							[
								12491,
								12510
							],
							[
								12540,
								12559
							],
							[
								12563,
								12582
							],
							[
								12653,
								12672
							],
							[
								12792,
								12811
							],
							[
								12843,
								12862
							],
							[
								12866,
								12885
							],
							[
								12958,
								12977
							],
							[
								13120,
								13144
							],
							[
								13149,
								13154
							],
							[
								13206,
								13211
							],
							[
								13235,
								13239
							],
							[
								13281,
								13285
							],
							[
								13317,
								13321
							],
							[
								13380,
								13404
							],
							[
								13408,
								13432
							],
							[
								13445,
								13448
							],
							[
								13463,
								13467
							],
							[
								13497,
								13521
							],
							[
								13877,
								13882
							],
							[
								14314,
								14329
							],
							[
								14369,
								14383
							],
							[
								14433,
								14444
							],
							[
								14448,
								14472
							],
							[
								14512,
								14529
							],
							[
								14563,
								14590
							],
							[
								14603,
								14630
							],
							[
								14663,
								14680
							],
							[
								14743,
								14758
							],
							[
								14777,
								14786
							],
							[
								14835,
								14844
							],
							[
								14875,
								14886
							],
							[
								15017,
								15028
							],
							[
								15032,
								15046
							],
							[
								15049,
								15060
							],
							[
								15063,
								15077
							],
							[
								15104,
								15119
							],
							[
								15142,
								15153
							],
							[
								15201,
								15220
							],
							[
								15223,
								15227
							],
							[
								15247,
								15264
							],
							[
								15287,
								15301
							],
							[
								15330,
								15334
							],
							[
								15341,
								15356
							],
							[
								15376,
								15386
							],
							[
								15525,
								15538
							],
							[
								15546,
								15550
							],
							[
								15554,
								15578
							],
							[
								15688,
								15701
							],
							[
								15740,
								15764
							],
							[
								15770,
								15781
							],
							[
								15808,
								15819
							],
							[
								15845,
								15854
							],
							[
								15867,
								15871
							],
							[
								15885,
								15896
							],
							[
								15931,
								15955
							],
							[
								15985,
								15998
							],
							[
								16021,
								16045
							],
							[
								16148,
								16153
							],
							[
								16170,
								16191
							],
							[
								16253,
								16264
							],
							[
								16439,
								16450
							],
							[
								16521,
								16531
							],
							[
								16561,
								16572
							],
							[
								16588,
								16612
							],
							[
								16635,
								16655
							],
							[
								16658,
								16682
							],
							[
								16701,
								16721
							],
							[
								16747,
								16767
							],
							[
								16840,
								16859
							],
							[
								16863,
								16883
							],
							[
								16942,
								16961
							],
							[
								16979,
								17003
							],
							[
								17052,
								17063
							],
							[
								17087,
								17091
							],
							[
								17110,
								17121
							],
							[
								17148,
								17172
							],
							[
								17200,
								17209
							],
							[
								17233,
								17257
							],
							[
								17335,
								17359
							],
							[
								17403,
								17415
							],
							[
								17433,
								17444
							],
							[
								17459,
								17470
							],
							[
								17488,
								17499
							],
							[
								17517,
								17528
							],
							[
								17545,
								17556
							],
							[
								17574,
								17585
							],
							[
								17598,
								17609
							],
							[
								17630,
								17641
							],
							[
								17659,
								17670
							],
							[
								17684,
								17695
							],
							[
								17710,
								17728
							],
							[
								17744,
								17768
							],
							[
								17824,
								17836
							],
							[
								17847,
								17859
							],
							[
								17871,
								17895
							],
							[
								17929,
								17953
							],
							[
								17987,
								18005
							],
							[
								18056,
								18080
							],
							[
								18149,
								18161
							],
							[
								18237,
								18255
							],
							[
								18331,
								18347
							],
							[
								18572,
								18583
							],
							[
								18590,
								18612
							],
							[
								18616,
								18638
							],
							[
								18644,
								18655
							],
							[
								18716,
								18727
							],
							[
								18733,
								18744
							],
							[
								18953,
								18975
							],
							[
								19064,
								19083
							],
							[
								19122,
								19137
							],
							[
								19141,
								19151
							],
							[
								19189,
								19199
							],
							[
								19203,
								19207
							],
							[
								19211,
								19216
							],
							[
								19220,
								19229
							],
							[
								19310,
								19325
							],
							[
								19355,
								19377
							],
							[
								19413,
								19432
							],
							[
								19544,
								19559
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"HAVE_SPAWN",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"COMMON_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"stream_SOURCES",
							"queue_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"token_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"location_SOURCES",
							"token_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"stringdecoder_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"archive_SOURCES",
							"utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJS",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QJSM_LIBDIR",
							"LIBRARY_PREFIX",
							"QJSM_MODULE",
							"LIBRARY_SUFFIX",
							"QUICKJS_MODULES",
							"QJSM_LIBDIR",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"QJSM",
							"TEST_SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY",
							"QJSM_LDADD",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_MODULE_PATH",
							"INSTALL_SCRIPTS"
						]
					},
					"AQAAAAAAAAAAAAAAzxIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					26,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								61,
								77
							],
							[
								377,
								394
							],
							[
								426,
								449
							],
							[
								523,
								540
							],
							[
								578,
								595
							],
							[
								709,
								726
							],
							[
								778,
								810
							],
							[
								915,
								932
							],
							[
								1125,
								1149
							],
							[
								1184,
								1208
							],
							[
								1245,
								1269
							],
							[
								1307,
								1331
							],
							[
								1370,
								1394
							],
							[
								1568,
								1592
							],
							[
								1633,
								1657
							],
							[
								1704,
								1707
							],
							[
								1711,
								1735
							],
							[
								1798,
								1802
							],
							[
								1806,
								1830
							],
							[
								2225,
								2245
							],
							[
								3019,
								3036
							],
							[
								3081,
								3091
							],
							[
								6044,
								6068
							],
							[
								6098,
								6122
							],
							[
								6193,
								6209
							],
							[
								6242,
								6255
							],
							[
								6299,
								6319
							],
							[
								6395,
								6417
							],
							[
								6455,
								6471
							],
							[
								6560,
								6584
							],
							[
								6696,
								6720
							],
							[
								6724,
								6744
							],
							[
								6766,
								6785
							],
							[
								6896,
								6911
							],
							[
								7082,
								7097
							],
							[
								7108,
								7123
							],
							[
								7194,
								7209
							],
							[
								7212,
								7227
							],
							[
								7312,
								7327
							],
							[
								7330,
								7345
							],
							[
								7431,
								7442
							],
							[
								7554,
								7563
							],
							[
								7574,
								7588
							],
							[
								7591,
								7599
							],
							[
								7603,
								7612
							],
							[
								7627,
								7647
							],
							[
								7683,
								7697
							],
							[
								7719,
								7733
							],
							[
								7754,
								7774
							],
							[
								7781,
								7799
							],
							[
								7831,
								7844
							],
							[
								7866,
								7879
							],
							[
								7898,
								7916
							],
							[
								7952,
								7968
							],
							[
								7996,
								8009
							],
							[
								8012,
								8025
							],
							[
								8042,
								8056
							],
							[
								8076,
								8089
							],
							[
								8093,
								8109
							],
							[
								8113,
								8126
							],
							[
								8130,
								8150
							],
							[
								8157,
								8174
							],
							[
								8201,
								8214
							],
							[
								8247,
								8260
							],
							[
								8263,
								8276
							],
							[
								8345,
								8358
							],
							[
								8361,
								8374
							],
							[
								8413,
								8426
							],
							[
								8448,
								8464
							],
							[
								8535,
								8548
							],
							[
								8552,
								8572
							],
							[
								8580,
								8600
							],
							[
								8652,
								8673
							],
							[
								8762,
								8775
							],
							[
								8779,
								8793
							],
							[
								8800,
								8812
							],
							[
								8819,
								8833
							],
							[
								8918,
								8931
							],
							[
								8935,
								8952
							],
							[
								8994,
								9008
							],
							[
								9040,
								9055
							],
							[
								9062,
								9076
							],
							[
								9092,
								9105
							],
							[
								9181,
								9200
							],
							[
								9203,
								9217
							],
							[
								9291,
								9304
							],
							[
								9311,
								9322
							],
							[
								9325,
								9339
							],
							[
								9405,
								9418
							],
							[
								9422,
								9438
							],
							[
								9442,
								9457
							],
							[
								9464,
								9476
							],
							[
								9493,
								9506
							],
							[
								9510,
								9530
							],
							[
								9558,
								9570
							],
							[
								9573,
								9585
							],
							[
								9626,
								9643
							],
							[
								9670,
								9684
							],
							[
								9710,
								9723
							],
							[
								9730,
								9745
							],
							[
								9768,
								9781
							],
							[
								9805,
								9825
							],
							[
								9832,
								9845
							],
							[
								9864,
								9880
							],
							[
								9884,
								9897
							],
							[
								9919,
								9932
							],
							[
								9936,
								9950
							],
							[
								9973,
								9988
							],
							[
								10007,
								10019
							],
							[
								10022,
								10035
							],
							[
								10039,
								10059
							],
							[
								10066,
								10082
							],
							[
								10085,
								10098
							],
							[
								10102,
								10115
							],
							[
								10119,
								10139
							],
							[
								10146,
								10161
							],
							[
								10164,
								10177
							],
							[
								10181,
								10194
							],
							[
								10198,
								10218
							],
							[
								10250,
								10265
							],
							[
								10268,
								10283
							],
							[
								10353,
								10368
							],
							[
								10371,
								10386
							],
							[
								10452,
								10469
							],
							[
								10492,
								10507
							],
							[
								10510,
								10525
							],
							[
								10574,
								10586
							],
							[
								10589,
								10603
							],
							[
								10607,
								10620
							],
							[
								10627,
								10648
							],
							[
								10733,
								10753
							],
							[
								10757,
								10770
							],
							[
								10774,
								10788
							],
							[
								10796,
								10808
							],
							[
								10884,
								10896
							],
							[
								10900,
								10916
							],
							[
								10920,
								10934
							],
							[
								10942,
								10954
							],
							[
								10974,
								10994
							],
							[
								10997,
								11010
							],
							[
								11014,
								11034
							],
							[
								11148,
								11171
							],
							[
								11178,
								11193
							],
							[
								11196,
								11209
							],
							[
								11213,
								11233
							],
							[
								11240,
								11257
							],
							[
								11260,
								11280
							],
							[
								11288,
								11306
							],
							[
								11309,
								11323
							],
							[
								11327,
								11347
							],
							[
								11391,
								11406
							],
							[
								11409,
								11424
							],
							[
								11502,
								11517
							],
							[
								11520,
								11535
							],
							[
								11551,
								11563
							],
							[
								11566,
								11578
							],
							[
								11800,
								11820
							],
							[
								12227,
								12246
							],
							[
								12274,
								12293
							],
							[
								12297,
								12316
							],
							[
								12385,
								12404
							],
							[
								12515,
								12534
							],
							[
								12564,
								12583
							],
							[
								12587,
								12606
							],
							[
								12677,
								12696
							],
							[
								12816,
								12835
							],
							[
								12867,
								12886
							],
							[
								12890,
								12909
							],
							[
								12982,
								13001
							],
							[
								13144,
								13168
							],
							[
								13173,
								13178
							],
							[
								13230,
								13235
							],
							[
								13259,
								13263
							],
							[
								13305,
								13309
							],
							[
								13341,
								13345
							],
							[
								13404,
								13428
							],
							[
								13432,
								13456
							],
							[
								13469,
								13472
							],
							[
								13487,
								13491
							],
							[
								13521,
								13545
							],
							[
								13901,
								13906
							],
							[
								14338,
								14353
							],
							[
								14393,
								14407
							],
							[
								14457,
								14468
							],
							[
								14472,
								14496
							],
							[
								14536,
								14553
							],
							[
								14587,
								14614
							],
							[
								14627,
								14654
							],
							[
								14687,
								14704
							],
							[
								14767,
								14782
							],
							[
								14801,
								14810
							],
							[
								14859,
								14868
							],
							[
								14899,
								14910
							],
							[
								15041,
								15052
							],
							[
								15056,
								15070
							],
							[
								15073,
								15084
							],
							[
								15087,
								15101
							],
							[
								15128,
								15143
							],
							[
								15166,
								15177
							],
							[
								15225,
								15244
							],
							[
								15247,
								15251
							],
							[
								15271,
								15288
							],
							[
								15311,
								15325
							],
							[
								15354,
								15358
							],
							[
								15365,
								15380
							],
							[
								15400,
								15410
							],
							[
								15549,
								15562
							],
							[
								15570,
								15574
							],
							[
								15578,
								15602
							],
							[
								15712,
								15725
							],
							[
								15764,
								15788
							],
							[
								15794,
								15805
							],
							[
								15832,
								15843
							],
							[
								15869,
								15878
							],
							[
								15891,
								15895
							],
							[
								15909,
								15920
							],
							[
								15955,
								15979
							],
							[
								16009,
								16022
							],
							[
								16045,
								16069
							],
							[
								16172,
								16177
							],
							[
								16194,
								16215
							],
							[
								16277,
								16288
							],
							[
								16463,
								16474
							],
							[
								16545,
								16555
							],
							[
								16585,
								16596
							],
							[
								16612,
								16636
							],
							[
								16659,
								16679
							],
							[
								16682,
								16706
							],
							[
								16725,
								16745
							],
							[
								16771,
								16791
							],
							[
								16864,
								16883
							],
							[
								16887,
								16907
							],
							[
								16966,
								16985
							],
							[
								17003,
								17027
							],
							[
								17076,
								17087
							],
							[
								17111,
								17115
							],
							[
								17134,
								17145
							],
							[
								17172,
								17196
							],
							[
								17224,
								17233
							],
							[
								17257,
								17281
							],
							[
								17359,
								17383
							],
							[
								17427,
								17439
							],
							[
								17457,
								17468
							],
							[
								17483,
								17494
							],
							[
								17512,
								17523
							],
							[
								17541,
								17552
							],
							[
								17569,
								17580
							],
							[
								17598,
								17609
							],
							[
								17622,
								17633
							],
							[
								17654,
								17665
							],
							[
								17683,
								17694
							],
							[
								17708,
								17719
							],
							[
								17734,
								17752
							],
							[
								17768,
								17792
							],
							[
								17848,
								17860
							],
							[
								17871,
								17883
							],
							[
								17895,
								17919
							],
							[
								17953,
								17977
							],
							[
								18011,
								18029
							],
							[
								18080,
								18104
							],
							[
								18173,
								18185
							],
							[
								18261,
								18279
							],
							[
								18355,
								18371
							],
							[
								18596,
								18607
							],
							[
								18614,
								18636
							],
							[
								18640,
								18662
							],
							[
								18668,
								18679
							],
							[
								18740,
								18751
							],
							[
								18757,
								18768
							],
							[
								18977,
								18999
							],
							[
								19088,
								19107
							],
							[
								19146,
								19161
							],
							[
								19165,
								19175
							],
							[
								19213,
								19223
							],
							[
								19227,
								19231
							],
							[
								19235,
								19240
							],
							[
								19244,
								19253
							],
							[
								19334,
								19349
							],
							[
								19379,
								19401
							],
							[
								19437,
								19456
							],
							[
								19568,
								19583
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"HAVE_SPAWN",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"COMMON_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"stream_SOURCES",
							"queue_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"token_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"location_SOURCES",
							"token_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"stringdecoder_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"archive_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJS",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QJSM_LIBDIR",
							"LIBRARY_PREFIX",
							"QJSM_MODULE",
							"LIBRARY_SUFFIX",
							"QUICKJS_MODULES",
							"QJSM_LIBDIR",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"QJSM",
							"TEST_SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY",
							"QJSM_LDADD",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_MODULE_PATH",
							"INSTALL_SCRIPTS"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"contents": "//import { Pointer } from 'pointer';\nimport * as deep from 'deep';\nimport inspect from 'inspect';\nimport { TreeWalker, TreeIterator } from 'tree_walker';\nimport {\n  isObject,\n  define,\n  escape,\n  quote,\n  range,\n  assert,\n  memoize,\n  getClassName,\n  getClassID,\n  mapObject,\n  getset,\n  modifier,\n  getter,\n  setter,\n  gettersetter,\n  hasGetSet,\n  lazyProperty,\n  arrayFacade\n} from './util.js';\nimport * as xml from 'xml';\n\n//const Path = Pointer;\n\nconst inspectSymbol = Symbol.inspect ?? Symbol.for('quickjs.inspect.custom');\n\nconst rawNode = new WeakMap();\nconst parentNode = new Map();\nconst ownerElement = new Map();\nconst textValues = gettersetter(new WeakMap());\n\nconst ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\n\nconst keyOf = (obj, value) => {\n  for(let key in obj) if(obj[key] === value) return key;\n  return -1;\n};\n\nexport const nodeTypes = [\n  ,\n  'ELEMENT_NODE',\n  'ATTRIBUTE_NODE',\n  'TEXT_NODE',\n  'CDATA_SECTION_NODE',\n  'ENTITY_REFERENCE_NODE',\n  'ENTITY_NODE',\n  'PROCESSING_INSTRUCTION_NODE',\n  'COMMENT_NODE',\n  'DOCUMENT_NODE',\n  'DOCUMENT_TYPE_NODE',\n  'DOCUMENT_FRAGMENT_NODE',\n  'NOTATION_NODE'\n];\n\nfunction checkNode(node) {\n  if(!isObject(node)) throw new TypeError('node is not an object');\n  if(!node[Symbol.toStringTag]) throw new TypeError('node does not have [Symbol.toStringTag]');\n  if(Object.getPrototypeOf(node) == Object.prototype) throw new TypeError('node is Object');\n}\n\nexport class Parser {\n  parseFromString(str, file, ...rest) {\n    let data = xml.read(str, file, ...rest);\n\n    if(Array.isArray(data)) {\n      if(data.length > 1)\n        data = { tagName: '?xml', attributes: { version: '1.0', encoding: 'utf-8' }, children: data };\n      else data = data[0];\n    }\n    return new Document(data);\n  }\n}\n\nfunction GetNode(obj, owner) {\n  let type = { object: Element, string: Text }[typeof obj];\n\n  if(type === Element && /^!--.*--$/.test(obj.tagName)) type = Comment;\n  else if(type === Text && typeof obj == 'string') {\n    console.log('GetNode', { type, obj, owner: owner.constructor.name });\n    obj = owner.indexOf(obj);\n  }\n\n  if(!type || !type.cache) throw new Error(`No such node type for ${inspect(obj)}`);\n\n  return type.cache(obj, owner);\n}\n\nexport class Node {\n  constructor(obj, parent, proto = Node.prototype) {\n    if(isObject(proto)) assert(Object.getPrototypeOf(this) instanceof Node, true, 'proto');\n    assert(this instanceof Node, true, 'instanceof Node');\n\n    //if(!isObject(obj)) console.log('Node.constructor', { obj, parent, proto });\n    if(isObject(obj)) rawNode.set(this, obj);\n\n    parentNode.set(this, parent);\n    //parentNode.set(obj, parent);\n  }\n\n  get path() {\n    return Node.path(this);\n  }\n  f;\n  get parentNode() {\n    let r = Node.parent(this);\n    if(isObject(r) && !(r instanceof Node)) r = Node.owner(r);\n    return r;\n  }\n\n  get parentElement() {\n    let obj = this.parentNode;\n    return obj.nodeType == ELEMENT_NODE ? obj : null;\n  }\n\n  get ownerDocument() {\n    let node = this;\n    while(node && node.nodeType != DOCUMENT_NODE) node = node.parentNode;\n    return node;\n  }\n\n  get childNodes() {\n    const raw = Node.raw(this);\n    return Factory((raw.children ??= []), this, NodeList);\n  }\n\n  get firstChild() {\n    const { children } = Node.raw(this);\n    if(children?.length) {\n      let [first] = children;\n      return GetNode(first, this);\n    }\n  }\n\n  get lastChild() {\n    const { children } = Node.raw(this);\n    if(children?.length) {\n      let last = children[children.length - 1];\n      return GetNode(last, this);\n    }\n  }\n\n  get nextSibling() {\n    let { children } = Node.raw(this.parentNode);\n\n    if(children) {\n      let raw = Node.raw(this);\n      //console.log('children', children);\n      let index = children.indexOf(raw);\n      if(index != -1) return GetNode(children[index + 1], Node.owner(this));\n    }\n  }\n\n  get previousSibling() {\n    let parent;\n    if((parent = Node.parent(this))) {\n      let index = parent.indexOf(this);\n      if(index != -1) return GetNode(parent[index - 1], parent);\n    }\n  }\n\n  appendChild(node) {\n    const { children } = Node.raw(this);\n    let raw = Node.raw(node);\n    if(node instanceof Text) {\n      let key = children.length;\n      textValues(\n        this,\n        modifier(\n          () => children[key] ?? '',\n          value => (children[key] = value)\n        )\n      );\n    }\n    ownerElement.set(node, this.childNodes);\n    parentNode.set(node, this);\n\n    children.push(raw);\n    return node;\n  }\n\n  insertBefore(node, refNode) {\n    const { children } = Node.raw(this);\n    let index,\n      raw = isObject(node) && node instanceof Node ? Node.raw(node) : node,\n      ref = isObject(refNode) && refNode instanceof Node ? Node.raw(refNode) : refNode;\n    if((index = children.indexOf(ref)) == -1) index = children.length;\n    children.splice(index, 0, raw);\n    return node;\n  }\n\n  removeChild(node) {\n    const { children } = Node.raw(this);\n    let index,\n      raw = isObject(node) && node instanceof Node ? Node.raw(node) : node;\n    if((index = children.indexOf(raw)) == -1) throw new Error(`Node.removeChild no such child!`);\n    children.splice(index, 1);\n    return node;\n  }\n\n  replaceChild(newChild, oldChild) {\n    const { children } = Node.raw(this);\n    let index,\n      old = isObject(oldChild) && oldChild instanceof Node ? Node.raw(oldChild) : oldChild,\n      raw = isObject(newChild) && newChild instanceof Node ? Node.raw(newChild) : newChild;\n    if((index = children.indexOf(old)) == -1) throw new Error(`Node.replaceChild no such child!`);\n    children.splice(index, 1, raw);\n    return newChild;\n  }\n\n  [inspectSymbol]() {\n    return `\\x1b[1;31m${this.constructor.name}\\x1b[0m`;\n  }\n}\n\nNode.types = nodeTypes;\nconst NODE_TYPES = {\n  ATTRIBUTE_NODE,\n  CDATA_SECTION_NODE,\n  COMMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_TYPE_NODE,\n  ELEMENT_NODE,\n  ENTITY_NODE,\n  ENTITY_REFERENCE_NODE,\n  NOTATION_NODE,\n  PROCESSING_INSTRUCTION_NODE,\n  TEXT_NODE\n};\ndefine(Node.prototype, NODE_TYPES);\ndefine(Node, NODE_TYPES);\ndefine(Node, {\n  raw(node) {\n    checkNode(node);\n    return rawNode.get(node);\n  },\n\n  children(node) {\n    return Node.raw(node)?.children;\n  },\n\n  owner(node) {\n    checkNode(node);\n    let owner, parent;\n    if((parent = parentNode.get(node)) && Array.isArray(parent.children)) return parent.children;\n\n    let raw = Node.raw(node);\n    if((parent = parentNode.get(raw)) && Array.isArray(parent.children)) return parent.children;\n\n    if((owner = ownerElement.get(node))) return owner;\n    return ownerElement.get(raw);\n  },\n\n  parent(node) {\n    checkNode(node);\n    let ret = parentNode.get(node);\n    return ret;\n  },\n\n  hier(node, pred = node => true) {\n    const r = [];\n    checkNode(node);\n    let next;\n    do {\n      if(pred(node)) r.unshift(node);\n      next = (\n        { NodeList: Node.owner, NamedNodeMap: Node.owner, Element: Node.owner, Text: Node.owner }[\n          node.constructor.name\n        ] ?? Node.parent\n      ).call(Node, node);\n    } while(next && (node = next));\n    return r;\n  },\n\n  document(node) {\n    const hier = Node.hier(node);\n    return hier.find(({ nodeType }) => nodeType == DOCUMENT_NODE);\n  },\n\n  path(arg, path = []) {\n    if(arg.ownerElement)\n      return Node.path(arg.ownerElement).concat(\n        { NodeList: ['children'], NamedNodeMap: ['attributes'], Attr: ['attributes', arg.name] }[arg.constructor.name]\n      );\n    const hier = Node.hier(arg);\n\n    while(hier.length >= 2) {\n      let index = keyOf(Node.raw(hier[0]), Node.raw(hier[1]));\n      if(index == -1) index = keyOf(hier[0], hier[1]);\n\n      if(!isNaN(+index)) index = +index;\n      path.push(index);\n      hier.shift();\n    }\n    return path;\n  }\n});\n\nNode.prototype[Symbol.toStringTag] = 'Node';\n\nfunction MakeCache(ctor, store = new WeakMap()) {\n  let [get, set] = getset(store);\n  return (k, ...args) => {\n    let v;\n    if(!(v = get(k))) {\n      v = ctor(k, ...args);\n      set(k, v);\n    }\n    ownerElement.set(v, args[0]);\n    return v;\n  };\n}\nfunction MakeCache2(ctor, store = new WeakMap()) {\n  let mkch = memoize(key => [], store);\n\n  return (id, owner) => {\n    // console.log('Cache2',{id,owner });\n    if(!isNaN(+id)) id = +id;\n    let textList = mkch(owner);\n    textList[id] ??= ctor(id, owner);\n    // console.log('Cache2',{ textList });\n    return textList[id];\n  };\n}\n\nexport class NodeList {\n  constructor(obj, owner) {\n    let nodeList;\n    const isElement = prop => typeof prop == 'string' && !isNaN(+prop);\n    const isList = prop => isElement(prop) || prop == 'length';\n    const wrapElement = (value, prop) =>\n      typeof value == 'string' ? Text.cache(prop, nodeList) : Element.cache(value, nodeList);\n\n    rawNode.set(this, obj);\n    //parentNode.set(obj, owner);\n    ownerElement.set(this, owner);\n\n    nodeList = new Proxy(this, {\n      get: (target, prop, receiver) => {\n        if(isList(prop)) {\n          if(prop == 'length') return obj.length;\n          if(prop >= 0 && prop < obj.length) return wrapElement(obj[prop], prop);\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n      getOwnPropertyDescriptor: (target, prop) => {\n        if(isList(prop)) {\n          if(prop == 'length' || (prop >= 0 && prop < obj.length))\n            return { configurable: true, enumerable: true, value: obj[prop] };\n        }\n        return Reflect.getOwnPropertyDescriptor(target, prop);\n      },\n      ownKeys: target =>\n        range(0, obj.length - 1)\n          .map(prop => prop + '')\n          .concat(['length'])\n      //    getPrototypeOf: target => NodeList.prototype\n    });\n\n    rawNode.set(nodeList, obj);\n    ownerElement.set(nodeList, owner);\n\n    return nodeList;\n  }\n\n  [inspectSymbol](depth, opts) {\n    let str = inspect([...this], depth + 1, { ...opts, customInspect: true });\n    let indexes = str[0]=='[' ? [str.indexOf('[') + 1, str.lastIndexOf(']')] : [0];\n    return str.substring(...indexes);\n  }\n}\n\n//NodeList.prototype.__proto__ = Array.prototype;\n\ndefine(NodeList.prototype, {\n  [Symbol.toStringTag]: 'NodeList',\n  get path() {\n    let owner = Node.owner(this);\n    return Node.path(owner).concat(['children']);\n  },\n\n  /*  [inspectSymbol](depth, opts) {\n    const raw = Node.raw(this);\n    return util\n      .range(0, raw.length - 1)\n      .map(n => inspect(this[n], depth-1,opts)) \n      .join(',\\n  ');\n  },*/\n\n  *[Symbol.iterator]() {\n    const raw = Node.raw(this);\n    for(let node of raw) yield Factory(node, this, typeof node == 'string' ? Text : Element);\n  }\n});\n\nexport function NamedNodeMap(obj, owner) {\n  if(!this) return new NamedNodeMap(obj, owner);\n\n  let nodeMap;\n  const isAttr = prop => typeof prop == 'string' && prop in obj;\n  const wrapAttr = (value, prop) => new Attr([obj, prop], nodeMap);\n\n  rawNode.set(this, obj);\n  //parentNode.set(obj,owner);\n  ownerElement.set(this, owner);\n\n  nodeMap = new Proxy(this, {\n    get: (target, prop, receiver) => {\n      //  if(prop == 'item') return i => isNaN(+i) ? obj[i] : obj[Object.keys(obj)[+i]];\n      if(prop == 'length') return Object.keys(obj).length;\n      if(typeof prop == 'string') {\n        if(!isNaN(+prop)) {\n          let keys = Object.keys(obj);\n          if(prop >= 0 && prop < keys.length) return wrapAttr(obj[keys[+prop]], keys[+prop]);\n        } else if(prop in obj) return wrapAttr(obj[prop], prop);\n      }\n      return Reflect.get(target, prop, receiver);\n    },\n    ownKeys: target => Object.keys(obj)\n  });\n\n  rawNode.set(nodeMap, obj);\n  ownerElement.set(nodeMap, owner);\n\n  return nodeMap;\n}\n\nObject.setPrototypeOf(NamedNodeMap.prototype, Array.prototype);\n\ndefine(NamedNodeMap.prototype, {\n  get path() {\n    let owner = Node.owner(this);\n    return Node.path(owner).concat(['attributes']);\n  },\n\n  item(key) {\n    return this[key];\n  },\n  setNamedItem(attr) {\n    const raw = Node.raw(this);\n    const { name, value } = attr;\n    raw[name] = value;\n  },\n  removeNamedItem(name) {\n    const raw = Node.raw(this);\n    delete raw[name];\n  },\n  getNamedItem(name) {\n    const raw = Node.raw(this);\n    return raw[name];\n  },\n\n  *[Symbol.iterator]() {\n    const { length } = this;\n    for(let i = 0; i < length; i++) yield this.item(i);\n  },\n  [Symbol.toStringTag]: 'NamedNodeMap',\n  [inspectSymbol]() {\n    const raw = Node.raw(this);\n    let s = '';\n    for(let attr in raw) {\n      s += ' \\x1b[1;35m' + attr + '\\x1b[1;36m=\"' + raw[attr] + '\"\\x1b[0m';\n    }\n    return '{' + s + ' }';\n    return Object.getOwnPropertyNames(this).reduce((acc, prop) => ({ ...acc, [prop]: this[prop] }), {});\n  }\n});\n\nexport class Element extends Node {\n  constructor(obj, parent) {\n    super(obj, parent);\n\n    //lazyProperty(this, 'classList', () => new TokenList('class', this));\n    define(this, { classList: new TokenList(this, 'class') });\n  }\n\n  get parentElement() {\n    let obj = this;\n    do {\n      obj = obj.parentNode;\n    } while(obj.nodeType != ELEMENT_NODE);\n    return obj;\n  }\n  get attributes() {\n    return new NamedNodeMap((Node.raw(this).attributes ??= {}), this);\n  }\n\n  set tagName(v) {\n    Node.raw(this).tagName = v;\n  }\n  get tagName() {\n    return Node.raw(this).tagName;\n  }\n  set nodeName(v) {\n    this.tagName = v;\n  }\n  get nodeName() {\n    return this.tagName;\n  }\n\n  /*  setAttribute(name, value) {\n    (Node.raw(this).attributes ??= {})[name] = value;\n  }\n  removeAttribute(name) {\n    delete (Node.raw(this).attributes ??= {})[name];\n  }\n*/\n  [inspectSymbol](depth, opts) {\n    const { tagName, attributes, children } = this;\n    const a = attributes[inspectSymbol](depth + 1, opts)\n      .slice(1, -1)\n      .trim();\n    const c = children[inspectSymbol](depth + 1, opts);\n    let s = `<${tagName}`;\n    if(a) s += ' ' + a;\n    s += '>';\n    if(c) s += `${c}</${tagName}>`;\n    return s;\n  }\n\n  get children() {\n    const raw = Node.raw(this);\n    // console.log('raw',inspect(raw, {depth: 0}));\n    return Factory((raw.children ??= []), this, NodeList);\n  }\n\n  get childElementCount() {\n    return Node.raw(this).children?.length ?? 0;\n  }\n\n  get firstElementChild() {\n    const { children } = Node.raw(this);\n    let element = children.find(n => isObject(n) && 'tagName' in n);\n    if(element) return Element.cache(element, this.children);\n  }\n\n  get lastElementChild() {\n    const { children } = Node.raw(this);\n    if(children?.length)\n      for(let i = children.length - 1; i >= 0; i--)\n        if(isObject(children[i]) && 'tagName' in children[i]) return Element.cache(children[i], this.children);\n  }\n\n  get id() {\n    return this.getAttribute('id');\n  }\n\n  getAttribute(name) {\n    return Element.attributes(this)(attributes => attributes[name]);\n  }\n\n  getAttributeNames() {\n    return Element.attributes(this)(attributes => Object.keys(attributes));\n  }\n\n  hasAttribute(name) {\n    return Element.attributes(this)(attributes => name in attributes);\n  }\n\n  hasAttributes() {\n    return this.getAttributeNames().length > 0;\n  }\n\n  removeAttribute(name) {\n    Element.attributes(this)(attributes => delete attributes[name]);\n  }\n\n  getAttributeNode(name) {\n    return this.attributes[name];\n  }\n\n  setAttribute(name, value) {\n    Element.attributes(this)(attributes => (attributes[name] = value));\n  }\n\n  static cache = MakeCache((obj, owner) => new Element(obj, owner));\n}\n\ndefine(Element, {\n  attributes(elem) {\n    return modifier(Node.raw(elem), 'attributes');\n  }\n});\n\n//define(Element, { cache: MakeCache(Element) });\ndefine(Element.prototype, { [Symbol.toStringTag]: 'Element', nodeType: ELEMENT_NODE });\n\n/*\n  Document methods:\n    adoptNode\n    append\n    captureEvents\n    caretRangeFromPoint\n    clear\n    close\n    createAttribute\n    createAttributeNS\n    createCDATASection\n    createComment\n    createDocumentFragment\n    createElement\n    createElementNS\n    createEvent\n    createExpression\n    createNSResolver\n    createNodeIterator\n    createProcessingInstruction\n    createRange\n    createTextNode\n    createTreeWalker\n    elementFromPoint\n    elementsFromPoint\n    evaluate\n    execCommand\n    exitFullscreen\n    exitPointerLock\n    getElementById\n    getElementsByClassName\n    getElementsByName\n    getElementsByTagName\n    getElementsByTagNameNS\n    getSelection\n    hasFocus\n    importNode\n    open\n    prepend\n    queryCommandEnabled\n    queryCommandIndeterm\n    queryCommandState\n    queryCommandSupported\n    queryCommandValue\n    querySelector\n    querySelectorAll\n    releaseEvents\n    replaceChildren\n    webkitCancelFullScreen\n    webkitExitFullscreen\n    write\n    writeln\n    constructor\n    exitPictureInPicture\n    getAnimations\n\n  Document properties:\n    implementation\n    URL\n    documentURI\n    compatMode\n    characterSet\n    charset\n    inputEncoding\n    contentType\n    doctype\n    documentElement\n    xmlEncoding\n    xmlVersion\n    xmlStandalone\n    domain\n    referrer\n    cookie\n    lastModified\n    readyState\n    title\n    dir\n    body\n    head\n    images\n    embeds\n    plugins\n    links\n    forms\n    scripts\n    currentScript\n    defaultView\n    designMode\n    anchors\n    applets\n    fgColor\n    linkColor\n    vlinkColor\n    alinkColor\n    bgColor\n    all\n    scrollingElement\n    hidden\n    visibilityState\n    wasDiscarded\n    featurePolicy\n    webkitVisibilityState\n    webkitHidden\n    fullscreenEnabled\n    fullscreen\n    webkitIsFullScreen\n    webkitCurrentFullScreenElement\n    webkitFullscreenEnabled\n    webkitFullscreenElement\n    rootElement\n    children\n    firstElementChild\n    lastElementChild\n    childElementCount\n    activeElement\n    styleSheets\n    pointerLockElement\n    fullscreenElement\n    adoptedStyleSheets\n    fonts\n    fragmentDirective\n    addressSpace\n    timeline\n    pictureInPictureEnabled\n    pictureInPictureElement\n */\n\nexport class Document extends Element {\n  constructor(obj) {\n    super(obj, null, Document.prototype);\n  }\n\n  createAttribute(name, value) {\n    return new Attr([null, name], null);\n  }\n\n  createElement(tagName) {\n    return Element.cache({ tagName, attributes: {}, children: [] }, null);\n  }\n\n  createTextNode(text) {\n    return new Text(text);\n  }\n\n  createTreeWalker(root, pred = (n, k) => true) {\n    const raw = Node.raw(root);\n    let walker;\n    walker = new TreeWalker(\n      raw,\n      (n, k) => typeof k == 'number' && pred(n, k),\n      (n, p) => GetNode(n, deep.get(raw, p.slice(0, -1)))\n    );\n    return walker;\n  }\n\n  get body() {\n    let element = this.lastElementChild.lastElementChild;\n    if(/^body$/i.test(element.tagName)) return element;\n  }\n\n  /*  [inspectSymbol](depth, opts) {\n    const { tagName, attributes, children } = this;\n    console.log('Document.inspect')\n    return `\\x1b[1;31mDocument\\x1b[0m ${tagName} attributes: ${attributes[inspectSymbol](depth + 1, opts)} children: ${inspect(children.map(c => c[inspectSymbol](depth + 2, opts)))}>`;\n  }*/\n}\n\ndefine(Document.prototype, { [Symbol.toStringTag]: 'Document', nodeType: DOCUMENT_NODE });\n\nexport class Attr extends Node {\n  constructor(raw, owner) {\n    // console.log('Attr', { raw, owner });\n    super(raw, owner);\n\n    rawNode.set(this, raw);\n    ownerElement.set(this, owner);\n\n    define(this, {});\n  }\n\n  get path() {\n    let { ownerElement } = this;\n    let [obj, name] = Node.raw(this);\n    //console.log('path',{owner,parent});\n    return Node.path(ownerElement).concat(['attributes', name]);\n  }\n\n  get ownerElement() {\n    return Node.owner(Node.owner(this));\n  }\n  get ownerDocument() {\n    return Node.document(this);\n  }\n\n  get name() {\n    const [, name] = Node.raw(this);\n    return name;\n  }\n  set name(v) {\n    Node.raw(this)[1] = v;\n  }\n\n  get value() {\n    const [obj, name] = Node.raw(this);\n    return obj[name];\n  }\n  set value(v) {\n    const [obj, name] = Node.raw(this);\n    obj[name] = v;\n  }\n\n  [inspectSymbol]() {\n    const [obj, name] = Node.raw(this);\n    const value = obj[name];\n    return `\\x1b[1;35m${name}\\x1b[1;34m=${quote(value, '\"')}\\x1b[0m`;\n  }\n}\n\ndefine(Attr.prototype, {\n  nodeType: ATTRIBUTE_NODE,\n  [Symbol.toStringTag]: 'Attr'\n});\n\nexport class Text extends Node {\n  static store = gettersetter(rawNode);\n\n  constructor(key, owner) {\n    super(owner ? key : null, owner);\n    let get, set;\n    if(owner) {\n      let raw = owner instanceof NodeList ? Node.raw(owner) : owner;\n      if(key in raw) {\n      } else if(raw.indexOf(key) != -1) {\n        key = raw.indexOf(key);\n      }\n      get = () => raw[key] ?? '';\n      set = value => (raw[key] = value);\n    } else {\n      Text.store(this, key);\n      get = () => Text.store(this);\n      set = value => Text.store(this, value);\n    }\n    textValues(this, modifier(get, set));\n    //console.log('Text', get());\n  }\n\n  get data() {\n    return textValues(this)(value => value);\n  }\n\n  get nodeValue() {\n    return textValues(this)(value => value);\n  }\n\n  toString() {\n    return this.data;\n  }\n\n  [inspectSymbol](depth, opts) {\n    const { data } = this;\n    return `\\x1b[1;31m${this[Symbol.toStringTag]}\\x1b[0m \\x1b[38;2;192;2550m${quote(data, \"'\")}\\x1b[0m`;\n  }\n\n  static cache = MakeCache2((key, owner) => new Text(key, owner));\n}\n\nText.prototype.__proto__ = Node.prototype;\ndefine(Text.prototype, {\n  nodeType: TEXT_NODE,\n  nodeName: '#text',\n  [Symbol.toStringTag]: 'Text'\n});\n\nconst Tag = gettersetter(new WeakMap());\n\nexport class Comment extends Node {\n  constructor(raw, owner) {\n    super(raw, owner);\n\n    ownerElement.set(this, owner);\n\n    //console.log('Comment.constructor raw', raw);\n\n    let get = () => raw.tagName ?? '!----';\n    let set = value => (raw.tagName = value);\n\n    Tag(\n      this,\n      modifier(\n        () => get().replace(/^!--(.*)--$/g, '$1'),\n        value => set(`!--${value}--`)\n      )\n    );\n  }\n\n  get data() {\n    return Tag(this)(value => '<!--' + value + '-->');\n  }\n\n  get nodeValue() {\n    return Tag(this)(value => value);\n  }\n\n  [inspectSymbol](depth, opts) {\n    const { data } = this;\n    return `Comment \\x1b[38;2;184;0;234m${data}\\x1b[0m`;\n  }\n\n  static cache = MakeCache2((node, owner) => new Comment(node, owner));\n}\n\nComment.prototype.__proto__ = Node.prototype;\ndefine(Comment.prototype, {\n  nodeType: COMMENT_NODE,\n  nodeName: '#comment',\n  [Symbol.toStringTag]: 'Comment'\n});\n\nconst Tokens = gettersetter(new WeakMap());\n\nexport class TokenList {\n  constructor(owner, key = 'class') {\n    ownerElement.set(this, owner);\n\n    let { attributes } = Node.raw(owner);\n\n    let get = () => attributes[key] ?? '';\n    let set = value => (attributes[key] = value);\n\n    Tokens(\n      this,\n      modifier(\n        () => get().trim().split(/\\s+/g),\n        value => set(value.join(' '))\n      )\n    );\n  }\n\n  get length() {\n    return Tokens(this)(value => value.length);\n  }\n\n  get value() {\n    return Tokens(this)(value => value.join(' '));\n  }\n\n  item(index) {\n    return Tokens(this)(value => value[index]);\n  }\n\n  contains(token) {\n    return Tokens(this)(value => value.indexOf(token) != -1);\n  }\n\n  add(...tokens) {\n    Tokens(this)((arr, set) => {\n      let i;\n      for(let token of tokens) {\n        if((i = arr.indexOf(token)) == -1) arr.push(token);\n      }\n      set(arr);\n    });\n  }\n\n  remove(...tokens) {\n    Tokens(this)((arr, set) => {\n      let i;\n      for(let token of tokens) {\n        while((i = arr.indexOf(token)) != -1) arr.splice(i, 1);\n      }\n      set(arr);\n    });\n  }\n\n  toggle(token, force) {\n    Tokens(this)((arr, set) => {\n      let i;\n      if((i = arr.indexOf(token)) == -1) arr.push(token);\n      else arr.splice(i, 1);\n      set(arr);\n    });\n  }\n\n  supports(token) {\n    return true;\n  }\n\n  replace(oldToken, newToken) {\n    Tokens(this)((arr, set) => {\n      let i;\n      if((i = arr.indexOf(oldToken)) != -1) arr.splice(i, 1, newToken);\n      set(arr);\n    });\n  }\n\n  [inspectSymbol](depth, opts) {\n    return 'TokenList [' + Tokens(this)().join(',') + ']';\n  }\n}\n\ndefine(TokenList.prototype, {\n  [Symbol.toStringTag]: 'TokenList'\n});\narrayFacade(TokenList.prototype, (container, i) => container.item(i));\n\nfunction Membrane(instance, obj, proto, wrapProp, wrapElement) {\n  throw new Error('Membrane');\n  return new Proxy(instance, {\n    get: (target, prop, receiver) =>\n      wrapProp(prop) ? wrapElement(obj[prop], prop) : Reflect.get(target, prop, receiver),\n    has: (target, prop) => (wrapProp(prop) ? true : Reflect.has(target, prop)),\n    getOwnPropertyDescriptor: (target, prop) =>\n      wrapProp(prop)\n        ? { configurable: true, enumerable: true, writable: true, value: wrapElement(obj[prop], prop) }\n        : Reflect.getOwnPropertyDescriptor(target, prop),\n    getPrototypeOf: target => proto ?? Object.getPrototypeOf(instance),\n    setPrototypeOf: (target, p) => (proto = p),\n    ownKeys: target => [...Reflect.ownKeys(target)]\n  });\n}\n\n/*export function MakeFactory() {\n  const memo = memoize((raw, owner, ctor) => {\n    const isArray = ctor == NodeList || owner.children == raw;\n    const isElement = ctor == Element || (owner.children != raw && owner.attributes != raw); \n    console.log('\\x1b[38;2;112;112;252mMemoize\\x1b[0m', { isArray, isElement, raw });\n\n    if(Symbol.toStringTag in owner) owner = Node.raw(owner);\n    const key = isArray ? 'children' : !isElement ? 'attributes' : keyOf(owner, raw);\n    const list = owner[key];\n    ctor ??= owner.attributes == raw ? NamedNodeMap : owner.children == raw ? NodeList : Element;\n    let ret = new ctor(raw, owner, ctor);\n    //console.log('\\x1b[38;2;112;112;252mMemoize\\x1b[0m', { key, ctor, ret });\n    return ret;\n  });\n\n  return define(\n    (raw, owner, ctor) => {\n      let ret;\n      if((ret = memo.get(raw))) {\n        ret instanceof Node ? parentNode.set(raw, owner) : ownerNode.set(raw, owner);\n        return ret;\n      }\n      return memo(raw, owner, ctor);\n    },\n    { memo }\n  );\n}*/\n\nlet map = new WeakMap();\n\nexport function Factory(raw, owner, ctor) {\n  let obj;\n  if(isObject(raw) && (obj = map.get(raw))) {\n    ownerElement.set(obj, owner);\n    return obj;\n  }\n\n  const isArray = arg => Array.isArray(arg);\n  const isAttributes = arg => isObject(arg) && !isArray(arg) && !('tagName' in arg);\n\n  ctor ??= isArray(raw) ? NodeList : isAttributes(raw) ? NamedNodeMap : typeof raw == 'string' ? Text : Element;\n\n  obj = new ctor(raw, owner);\n  return obj;\n}\n",
			"file": "lib/dom.js",
			"file_size": 26330,
			"file_write_time": 132895722540286750,
			"settings":
			{
				"buffer_size": 26330,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					12157,
					1,
					"insert",
					{
						"characters": "type"
					},
					"BAAAABIJAAAAAAAAEwkAAAAAAAAAAAAAEwkAAAAAAAAUCQAAAAAAAAAAAAAUCQAAAAAAABUJAAAAAAAAAAAAABUJAAAAAAAAFgkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEgkAAAAAAAASCQAAAAAAAAAAAAAAAPC/"
				],
				[
					12158,
					1,
					"insert",
					{
						"characters": " ||"
					},
					"AwAAABYJAAAAAAAAFwkAAAAAAAAAAAAAFwkAAAAAAAAYCQAAAAAAAAAAAAAYCQAAAAAAABkJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgkAAAAAAAAWCQAAAAAAAAAAAAAAAPC/"
				],
				[
					12159,
					1,
					"insert",
					{
						"characters": " !"
					},
					"AgAAABkJAAAAAAAAGgkAAAAAAAAAAAAAGgkAAAAAAAAbCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGQkAAAAAAAAZCQAAAAAAAAAAAAAAAPC/"
				],
				[
					12168,
					1,
					"left_delete",
					null,
					"AQAAAFAJAAAAAAAAUAkAAAAAAAACAAAAw60",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUQkAAAAAAABRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					12169,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAFAJAAAAAAAAUQkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUAkAAAAAAABQCQAAAAAAAAAAAAAAAPC/"
				],
				[
					12195,
					1,
					"right_delete",
					null,
					"AQAAAMAQAAAAAAAAwBAAAAAAAAApAAAAaXNPYmplY3Qobm9kZSkgJiYgbm9kZSBpbnN0YW5jZW9mIE5vZGUgPyA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwBAAAAAAAADpEAAAAAAAAAAAAAAAAPC/"
				],
				[
					12199,
					1,
					"left_delete",
					null,
					"AQAAAM4QAAAAAAAAzhAAAAAAAAAHAAAAIDogbm9kZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzhAAAAAAAADVEAAAAAAAAAAAAAAAAPC/"
				],
				[
					12241,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFJNAAAAAAAAU00AAAAAAAAAAAAAU00AAAAAAABTTQAAAAAAAFUAAAAgICAgLy9jb25zb2xlLmxvZygnVGV4dC5jb25zdHJ1Y3RvcicsIHtrZXksb3duZXI6IG93bmVyICYmIG93bmVyLmNvbnN0cnVjdG9yLm5hbWV9KTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUk0AAAAAAACnTQAAAAAAAAAAAAAAAPC/"
				],
				[
					12248,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKlNAAAAAAAAqk0AAAAAAAAAAAAAqk0AAAAAAACqTQAAAAAAAD4AAAAgICAgICAvL2NvbnNvbGUubG9nKCdyYXcnLCB0eXBlb2YgcmF3LCByYXcuY29uc3RydWN0b3IubmFtZSk7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqU0AAAAAAADnTQAAAAAAAAAAAAAAAPC/"
				],
				[
					12251,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAAFNNAAAAAAAAG08AAAAAAADKAQAACiAgICBpZihvd25lcikgewogICAgICBsZXQgcmF3ID0gb3duZXIgaW5zdGFuY2VvZiBOb2RlTGlzdCA/IE5vZGUucmF3KG93bmVyKSA6IG93bmVyOwogICAgICAgaWYoa2V5IGluIHJhdykgewogICAgICB9IGVsc2UgaWYocmF3LmluZGV4T2Yoa2V5KSAhPSAtMSkgewogICAgICAgIGtleSA9IHJhdy5pbmRleE9mKGtleSk7CiAgICAgIH0KCiAgICAgIGdldCA9ICgpID0+IHJhd1trZXldID8/ICcnOwogICAgICBzZXQgPSB2YWx1ZSA9PiAocmF3W2tleV0gPSB2YWx1ZSk7CiAgICB9IGVsc2UgewogICAgICBUZXh0Q2FjaGUodGhpcywgeyB0ZXh0OiBrZXkgfSk7CiAgICAgIGdldCA9ICgpID0+IFRleHRDYWNoZSh0aGlzKS50ZXh0OwogICAgICBzZXQgPSB2YWx1ZSA9PiAoVGV4dENhY2hlKHRoaXMpLnRleHQgPSB2YWx1ZSk7CiAgICB9CiAgICBUZXh0VmFsdWUodGhpcywgbW9kaWZpZXIoZ2V0LCBzZXQpKTs",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAU00AAAAAAAAdTwAAAAAAAAAAAAAAAPC/"
				],
				[
					12255,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAACBPAAAAAAAAIU8AAAAAAAAAAAAAIU8AAAAAAAAiTwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIE8AAAAAAAAgTwAAAAAAAAAAAAAAAPC/"
				],
				[
					12310,
					1,
					"insert",
					{
						"characters": "stati"
					},
					"BgAAALNMAAAAAAAAtEwAAAAAAAAAAAAAtEwAAAAAAAC0TAAAAAAAAAkAAABUZXh0Q2FjaGW0TAAAAAAAALVMAAAAAAAAAAAAALVMAAAAAAAAtkwAAAAAAAAAAAAAtkwAAAAAAAC3TAAAAAAAAAAAAAC3TAAAAAAAALhMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAs0wAAAAAAAC8TAAAAAAAAAAAAAAAAPC/"
				],
				[
					12311,
					5,
					"left_delete",
					null,
					"BQAAALdMAAAAAAAAt0wAAAAAAAABAAAAabZMAAAAAAAAtkwAAAAAAAABAAAAdLVMAAAAAAAAtUwAAAAAAAABAAAAYbRMAAAAAAAAtEwAAAAAAAABAAAAdLNMAAAAAAAAs0wAAAAAAAABAAAAcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuEwAAAAAAAC4TAAAAAAAAAAAAAAAAPC/"
				],
				[
					12312,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BQAAALNMAAAAAAAAtEwAAAAAAAAAAAAAtEwAAAAAAAC1TAAAAAAAAAAAAAC1TAAAAAAAALZMAAAAAAAAAAAAALZMAAAAAAAAt0wAAAAAAAAAAAAAt0wAAAAAAAC4TAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAs0wAAAAAAACzTAAAAAAAAAAAAAAAAPC/"
				],
				[
					12314,
					5,
					"right_delete",
					null,
					"BQAAAK1MAAAAAAAArUwAAAAAAAABAAAAY61MAAAAAAAArUwAAAAAAAABAAAAb61MAAAAAAAArUwAAAAAAAABAAAAbq1MAAAAAAAArUwAAAAAAAABAAAAc61MAAAAAAAArUwAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArUwAAAAAAACtTAAAAAAAAAAAAAAAAAAA"
				],
				[
					12315,
					1,
					"insert",
					{
						"characters": "statoc"
					},
					"BgAAAK1MAAAAAAAArkwAAAAAAAAAAAAArkwAAAAAAACvTAAAAAAAAAAAAACvTAAAAAAAALBMAAAAAAAAAAAAALBMAAAAAAAAsUwAAAAAAAAAAAAAsUwAAAAAAACyTAAAAAAAAAAAAACyTAAAAAAAALNMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArUwAAAAAAACtTAAAAAAAAAAAAAAAAPC/"
				],
				[
					12316,
					2,
					"left_delete",
					null,
					"AgAAALJMAAAAAAAAskwAAAAAAAABAAAAY7FMAAAAAAAAsUwAAAAAAAABAAAAbw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAs0wAAAAAAACzTAAAAAAAAAAAAAAAAPC/"
				],
				[
					12317,
					1,
					"insert",
					{
						"characters": "ic"
					},
					"AgAAALFMAAAAAAAAskwAAAAAAAAAAAAAskwAAAAAAACzTAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsUwAAAAAAACxTAAAAAAAAAAAAAAAAPC/"
				],
				[
					12321,
					1,
					"insert",
					{
						"characters": "store"
					},
					"BgAAALRMAAAAAAAAtUwAAAAAAAAAAAAAtUwAAAAAAAC1TAAAAAAAAAUAAAB2YWx1ZbVMAAAAAAAAtkwAAAAAAAAAAAAAtkwAAAAAAAC3TAAAAAAAAAAAAAC3TAAAAAAAALhMAAAAAAAAAAAAALhMAAAAAAAAuUwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtEwAAAAAAAC5TAAAAAAAAAAAAAAAAPC/"
				],
				[
					12336,
					1,
					"",
					null,
					"AQAAAG1OAAAAAAAAd04AAAAAAAAJAAAAVGV4dENhY2hl",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbU4AAAAAAAB2TgAAAAAAAAAAAAAAAPC/"
				],
				[
					12337,
					1,
					"",
					null,
					"AQAAAKBOAAAAAAAAqk4AAAAAAAAJAAAAVGV4dENhY2hl",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoE4AAAAAAACpTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12338,
					1,
					"",
					null,
					"AQAAAM1OAAAAAAAA104AAAAAAAAJAAAAVGV4dENhY2hl",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzU4AAAAAAADWTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12349,
					1,
					"cut",
					null,
					"AQAAAK1MAAAAAAAArUwAAAAAAAAsAAAAc3RhdGljIHN0b3JlID0gZ2V0dGVyc2V0dGVyKG5ldyBXZWFrTWFwKCkpOwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArUwAAAAAAADZTAAAAAAAAAAAAAAAAPC/"
				],
				[
					12351,
					1,
					"paste",
					null,
					"AQAAAM9MAAAAAAAA+0wAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAz0wAAAAAAADPTAAAAAAAAAAAAAAAAAAA"
				],
				[
					12353,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAM9MAAAAAAAA0UwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAz0wAAAAAAADPTAAAAAAAAAAAAAAAAAAA"
				],
				[
					12355,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPxMAAAAAAAA/UwAAAAAAAAAAAAA/UwAAAAAAAD/TAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/EwAAAAAAAD8TAAAAAAAAP///////+9/"
				],
				[
					12370,
					1,
					"paste",
					null,
					"AgAAAO1MAAAAAAAA9EwAAAAAAAAAAAAA9EwAAAAAAAD0TAAAAAAAAA0AAABuZXcgV2Vha01hcCgp",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7UwAAAAAAAD6TAAAAAAAAAAAAAAAAPC/"
				],
				[
					12416,
					2,
					"left_delete",
					null,
					"AwAAALBOAAAAAAAAsE4AAAAAAAAEAAAAdGV4dPdMAAAAAAAA90wAAAAAAAACAAAAICCtTgAAAAAAAK1OAAAAAAAAAQAAAC4",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsE4AAAAAAAC0TgAAAAAAAAAAAAAAAPC/"
				],
				[
					12427,
					1,
					"left_delete",
					null,
					"AQAAAMROAAAAAAAAxE4AAAAAAAABAAAAKA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxU4AAAAAAADFTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12429,
					8,
					"right_delete",
					null,
					"CAAAANNOAAAAAAAA004AAAAAAAABAAAAKdNOAAAAAAAA004AAAAAAAABAAAALtNOAAAAAAAA004AAAAAAAABAAAAdNNOAAAAAAAA004AAAAAAAABAAAAZdNOAAAAAAAA004AAAAAAAABAAAAeNNOAAAAAAAA004AAAAAAAABAAAAdNNOAAAAAAAA004AAAAAAAABAAAAINNOAAAAAAAA004AAAAAAAABAAAAPQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA004AAAAAAADTTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12430,
					1,
					"insert",
					{
						"characters": ",m"
					},
					"AgAAANNOAAAAAAAA1E4AAAAAAAAAAAAA1E4AAAAAAADVTgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA004AAAAAAADTTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12431,
					1,
					"left_delete",
					null,
					"AQAAANROAAAAAAAA1E4AAAAAAAABAAAAbQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1U4AAAAAAADVTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12438,
					8,
					"right_delete",
					null,
					"CAAAAHtOAAAAAAAAe04AAAAAAAABAAAAe3tOAAAAAAAAe04AAAAAAAABAAAAIHtOAAAAAAAAe04AAAAAAAABAAAAdHtOAAAAAAAAe04AAAAAAAABAAAAZXtOAAAAAAAAe04AAAAAAAABAAAAeHtOAAAAAAAAe04AAAAAAAABAAAAdHtOAAAAAAAAe04AAAAAAAABAAAAOntOAAAAAAAAe04AAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAe04AAAAAAAB7TgAAAAAAAAAAAAAAAPC/"
				],
				[
					12441,
					2,
					"left_delete",
					null,
					"AgAAAH9OAAAAAAAAf04AAAAAAAABAAAAfX5OAAAAAAAAfk4AAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgE4AAAAAAACATgAAAAAAAAAAAAAAAPC/"
				],
				[
					12489,
					1,
					"cut",
					null,
					"AQAAAH5MAAAAAAAAfkwAAAAAAAAvAAAAY29uc3QgVGV4dFZhbHVlID0gZ2V0dGVyc2V0dGVyKG5ldyBXZWFrTWFwKCkpOwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfkwAAAAAAACtTAAAAAAAAAAAAAAAAPC/"
				],
				[
					12495,
					1,
					"paste",
					null,
					"AQAAAHACAAAAAAAAnwIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcAIAAAAAAABwAgAAAAAAAAAAAAAAAPC/"
				],
				[
					12500,
					1,
					"insert",
					{
						"characters": "textVales"
					},
					"CgAAAHYCAAAAAAAAdwIAAAAAAAAAAAAAdwIAAAAAAAB3AgAAAAAAAAkAAABUZXh0VmFsdWV3AgAAAAAAAHgCAAAAAAAAAAAAAHgCAAAAAAAAeQIAAAAAAAAAAAAAeQIAAAAAAAB6AgAAAAAAAAAAAAB6AgAAAAAAAHsCAAAAAAAAAAAAAHsCAAAAAAAAfAIAAAAAAAAAAAAAfAIAAAAAAAB9AgAAAAAAAAAAAAB9AgAAAAAAAH4CAAAAAAAAAAAAAH4CAAAAAAAAfwIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgIAAAAAAAB/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					12501,
					2,
					"left_delete",
					null,
					"AgAAAH4CAAAAAAAAfgIAAAAAAAABAAAAc30CAAAAAAAAfQIAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfwIAAAAAAAB/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					12502,
					1,
					"insert",
					{
						"characters": "ues"
					},
					"AwAAAH0CAAAAAAAAfgIAAAAAAAAAAAAAfgIAAAAAAAB/AgAAAAAAAAAAAAB/AgAAAAAAAIACAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfQIAAAAAAAB9AgAAAAAAAAAAAAAAAPC/"
				],
				[
					12521,
					1,
					"insert",
					{
						"characters": "textValzu"
					},
					"CgAAAN5OAAAAAAAA304AAAAAAAAAAAAA304AAAAAAADfTgAAAAAAAAkAAABUZXh0VmFsdWXfTgAAAAAAAOBOAAAAAAAAAAAAAOBOAAAAAAAA4U4AAAAAAAAAAAAA4U4AAAAAAADiTgAAAAAAAAAAAADiTgAAAAAAAONOAAAAAAAAAAAAAONOAAAAAAAA5E4AAAAAAAAAAAAA5E4AAAAAAADlTgAAAAAAAAAAAADlTgAAAAAAAOZOAAAAAAAAAAAAAOZOAAAAAAAA504AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3k4AAAAAAADnTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12522,
					2,
					"left_delete",
					null,
					"AgAAAOZOAAAAAAAA5k4AAAAAAAABAAAAdeVOAAAAAAAA5U4AAAAAAAABAAAAeg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA504AAAAAAADnTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12523,
					1,
					"insert",
					{
						"characters": "ûes"
					},
					"AwAAAOVOAAAAAAAA5k4AAAAAAAAAAAAA5k4AAAAAAADnTgAAAAAAAAAAAADnTgAAAAAAAOhOAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5U4AAAAAAADlTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12524,
					3,
					"left_delete",
					null,
					"AwAAAOdOAAAAAAAA504AAAAAAAABAAAAc+ZOAAAAAAAA5k4AAAAAAAABAAAAZeVOAAAAAAAA5U4AAAAAAAACAAAAw7s",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6E4AAAAAAADoTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12525,
					1,
					"insert",
					{
						"characters": "uies"
					},
					"BAAAAOVOAAAAAAAA5k4AAAAAAAAAAAAA5k4AAAAAAADnTgAAAAAAAAAAAADnTgAAAAAAAOhOAAAAAAAAAAAAAOhOAAAAAAAA6U4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5U4AAAAAAADlTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12526,
					3,
					"left_delete",
					null,
					"AwAAAOhOAAAAAAAA6E4AAAAAAAABAAAAc+dOAAAAAAAA504AAAAAAAABAAAAZeZOAAAAAAAA5k4AAAAAAAABAAAAaQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6U4AAAAAAADpTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12527,
					1,
					"insert",
					{
						"characters": "es"
					},
					"AgAAAOZOAAAAAAAA504AAAAAAAAAAAAA504AAAAAAADoTgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5k4AAAAAAADmTgAAAAAAAAAAAAAAAPC/"
				],
				[
					12537,
					1,
					"paste",
					null,
					"AgAAAEVPAAAAAAAAT08AAAAAAAAAAAAAT08AAAAAAABPTwAAAAAAAAkAAABUZXh0VmFsdWU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARU8AAAAAAABOTwAAAAAAAAAAAAAAAPC/"
				],
				[
					12542,
					1,
					"paste",
					null,
					"AgAAAItPAAAAAAAAlU8AAAAAAAAAAAAAlU8AAAAAAACVTwAAAAAAAAkAAABUZXh0VmFsdWU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAi08AAAAAAACUTwAAAAAAAAAAAAAAAPC/"
				],
				[
					12556,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAP8QAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAEEQAAAAAAAAAAAAAEEQAAAAAAAAURAAAAAAAAAAAAAAURAAAAAAAABhEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/xAAAAAAAAD/EAAAAAAAAAAAAAAAAPC/"
				],
				[
					12557,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAYRAAAAAAAACBEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABhEAAAAAAAAGEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12558,
					1,
					"insert",
					{
						"characters": "node"
					},
					"BAAAAAcRAAAAAAAACBEAAAAAAAAAAAAACBEAAAAAAAAJEQAAAAAAAAAAAAAJEQAAAAAAAAoRAAAAAAAAAAAAAAoRAAAAAAAACxEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABxEAAAAAAAAHEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12559,
					1,
					"insert",
					{
						"characters": " instanceof"
					},
					"CwAAAAsRAAAAAAAADBEAAAAAAAAAAAAADBEAAAAAAAANEQAAAAAAAAAAAAANEQAAAAAAAA4RAAAAAAAAAAAAAA4RAAAAAAAADxEAAAAAAAAAAAAADxEAAAAAAAAQEQAAAAAAAAAAAAAQEQAAAAAAABERAAAAAAAAAAAAABERAAAAAAAAEhEAAAAAAAAAAAAAEhEAAAAAAAATEQAAAAAAAAAAAAATEQAAAAAAABQRAAAAAAAAAAAAABQRAAAAAAAAFREAAAAAAAAAAAAAFREAAAAAAAAWEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACxEAAAAAAAALEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12560,
					1,
					"insert",
					{
						"characters": " Text"
					},
					"BQAAABYRAAAAAAAAFxEAAAAAAAAAAAAAFxEAAAAAAAAYEQAAAAAAAAAAAAAYEQAAAAAAABkRAAAAAAAAAAAAABkRAAAAAAAAGhEAAAAAAAAAAAAAGhEAAAAAAAAbEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFhEAAAAAAAAWEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12562,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwRAAAAAAAAHREAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHBEAAAAAAAAcEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12566,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAB0RAAAAAAAAHxEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHREAAAAAAAAdEQAAAAAAAP///////+9/"
				],
				[
					12567,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAB4RAAAAAAAAHxEAAAAAAAAAAAAAHxEAAAAAAAAjEQAAAAAAAAAAAAAjEQAAAAAAACQRAAAAAAAAAAAAACQRAAAAAAAAKBEAAAAAAAAAAAAAHxEAAAAAAAAfEQAAAAAAAAQAAAAgICAgHxEAAAAAAAAlEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHhEAAAAAAAAeEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12568,
					1,
					"insert",
					{
						"characters": "textValues"
					},
					"CgAAACURAAAAAAAAJhEAAAAAAAAAAAAAJhEAAAAAAAAnEQAAAAAAAAAAAAAnEQAAAAAAACgRAAAAAAAAAAAAACgRAAAAAAAAKREAAAAAAAAAAAAAKREAAAAAAAAqEQAAAAAAAAAAAAAqEQAAAAAAACsRAAAAAAAAAAAAACsRAAAAAAAALBEAAAAAAAAAAAAALBEAAAAAAAAtEQAAAAAAAAAAAAAtEQAAAAAAAC4RAAAAAAAAAAAAAC4RAAAAAAAALxEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJREAAAAAAAAlEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12569,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAC8RAAAAAAAAMBEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALxEAAAAAAAAvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12570,
					1,
					"left_delete",
					null,
					"AQAAAC8RAAAAAAAALxEAAAAAAAABAAAALg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMBEAAAAAAAAwEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12571,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAC8RAAAAAAAAMREAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALxEAAAAAAAAvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12572,
					1,
					"insert",
					{
						"characters": "node,"
					},
					"BQAAADARAAAAAAAAMREAAAAAAAAAAAAAMREAAAAAAAAyEQAAAAAAAAAAAAAyEQAAAAAAADMRAAAAAAAAAAAAADMRAAAAAAAANBEAAAAAAAAAAAAANBEAAAAAAAA1EQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMBEAAAAAAAAwEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12573,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADURAAAAAAAANhEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANREAAAAAAAA1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					12605,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAB4RAAAAAAAAHxEAAAAAAAAAAAAAHxEAAAAAAAAjEQAAAAAAAAAAAAAjEQAAAAAAACURAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHhEAAAAAAAAeEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12606,
					1,
					"paste",
					null,
					"AQAAACURAAAAAAAAHRIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJREAAAAAAAAlEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12609,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHARAAAAAAAAcREAAAAAAAAAAAAAcREAAAAAAABxEQAAAAAAAH4AAAAgfSBlbHNlIHsKICAgICAgVGV4dC5zdG9yZSh0aGlzLCBrZXkpOwogICAgICBnZXQgPSAoKSA9PiBUZXh0LnN0b3JlKHRoaXMpOwogICAgICBzZXQgPSB2YWx1ZSA9PiBUZXh0LnN0b3JlKHRoaXMsIHZhbHVlKTsKICAgIH0",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcBEAAAAAAADuEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12612,
					1,
					"cut",
					null,
					"AQAAAC4RAAAAAAAALhEAAAAAAAAUAAAAKCkgPT4gcmF3W2tleV0gPz8gJyc",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALhEAAAAAAABCEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12617,
					1,
					"paste",
					null,
					"AgAAAHwRAAAAAAAAkBEAAAAAAAAAAAAAkBEAAAAAAACQEQAAAAAAAAMAAABnZXQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfBEAAAAAAAB/EQAAAAAAAAAAAAAAAPC/"
				],
				[
					12634,
					1,
					"insert",
					{
						"characters": "kl"
					},
					"AgAAAF0RAAAAAAAAXhEAAAAAAAAAAAAAXhEAAAAAAABfEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXREAAAAAAABdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12635,
					2,
					"left_delete",
					null,
					"AgAAAF4RAAAAAAAAXhEAAAAAAAABAAAAbF0RAAAAAAAAXREAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXxEAAAAAAABfEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12636,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAF0RAAAAAAAAXhEAAAAAAAAAAAAAXhEAAAAAAABfEQAAAAAAAAAAAABfEQAAAAAAAGARAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXREAAAAAAABdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12637,
					1,
					"insert",
					{
						"characters": " key"
					},
					"BAAAAGARAAAAAAAAYREAAAAAAAAAAAAAYREAAAAAAABiEQAAAAAAAAAAAABiEQAAAAAAAGMRAAAAAAAAAAAAAGMRAAAAAAAAZBEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYBEAAAAAAABgEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12638,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGQRAAAAAAAAZREAAAAAAAAAAAAAZREAAAAAAABmEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZBEAAAAAAABkEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12639,
					1,
					"insert",
					{
						"characters": " children.le"
					},
					"DAAAAGYRAAAAAAAAZxEAAAAAAAAAAAAAZxEAAAAAAABoEQAAAAAAAAAAAABoEQAAAAAAAGkRAAAAAAAAAAAAAGkRAAAAAAAAahEAAAAAAAAAAAAAahEAAAAAAABrEQAAAAAAAAAAAABrEQAAAAAAAGwRAAAAAAAAAAAAAGwRAAAAAAAAbREAAAAAAAAAAAAAbREAAAAAAABuEQAAAAAAAAAAAABuEQAAAAAAAG8RAAAAAAAAAAAAAG8RAAAAAAAAcBEAAAAAAAAAAAAAcBEAAAAAAABxEQAAAAAAAAAAAABxEQAAAAAAAHIRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZhEAAAAAAABmEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12640,
					1,
					"insert",
					{
						"characters": "ngth;"
					},
					"BQAAAHIRAAAAAAAAcxEAAAAAAAAAAAAAcxEAAAAAAAB0EQAAAAAAAAAAAAB0EQAAAAAAAHURAAAAAAAAAAAAAHURAAAAAAAAdhEAAAAAAAAAAAAAdhEAAAAAAAB3EQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAchEAAAAAAAByEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12644,
					1,
					"left_delete",
					null,
					"AQAAAB8RAAAAAAAAHxEAAAAAAAA6AAAAICAgICAgICAgZ2V0ID0gOwogICAgICBzZXQgPSB2YWx1ZSA9PiAocmF3W2tleV0gPSB2YWx1ZSk7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWREAAAAAAAAfEQAAAAAAAAAAAAAAAAAA"
				],
				[
					12649,
					1,
					"insert",
					{
						"characters": "children"
					},
					"CQAAAGIRAAAAAAAAYxEAAAAAAAAAAAAAYxEAAAAAAABjEQAAAAAAAAMAAAByYXdjEQAAAAAAAGQRAAAAAAAAAAAAAGQRAAAAAAAAZREAAAAAAAAAAAAAZREAAAAAAABmEQAAAAAAAAAAAABmEQAAAAAAAGcRAAAAAAAAAAAAAGcRAAAAAAAAaBEAAAAAAAAAAAAAaBEAAAAAAABpEQAAAAAAAAAAAABpEQAAAAAAAGoRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYhEAAAAAAABlEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12665,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BgAAAHcRAAAAAAAAeBEAAAAAAAAAAAAAeBEAAAAAAAB4EQAAAAAAAAMAAABzZXR4EQAAAAAAAHkRAAAAAAAAAAAAAHkRAAAAAAAAehEAAAAAAAAAAAAAehEAAAAAAAB7EQAAAAAAAAAAAAB7EQAAAAAAAHwRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdxEAAAAAAAB6EQAAAAAAAAAAAAAAAPC/"
				],
				[
					12666,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAHwRAAAAAAAAfREAAAAAAAAAAAAAfREAAAAAAAB+EQAAAAAAAAAAAAB+EQAAAAAAAH8RAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfBEAAAAAAAB8EQAAAAAAAAAAAAAAAPC/"
				],
				[
					12667,
					1,
					"insert",
					{
						"characters": " children"
					},
					"CQAAAH8RAAAAAAAAgBEAAAAAAAAAAAAAgBEAAAAAAACBEQAAAAAAAAAAAACBEQAAAAAAAIIRAAAAAAAAAAAAAIIRAAAAAAAAgxEAAAAAAAAAAAAAgxEAAAAAAACEEQAAAAAAAAAAAACEEQAAAAAAAIURAAAAAAAAAAAAAIURAAAAAAAAhhEAAAAAAAAAAAAAhhEAAAAAAACHEQAAAAAAAAAAAACHEQAAAAAAAIgRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfxEAAAAAAAB/EQAAAAAAAAAAAAAAAPC/"
				],
				[
					12668,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIgRAAAAAAAAihEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiBEAAAAAAACIEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12669,
					1,
					"insert",
					{
						"characters": "key"
					},
					"AwAAAIkRAAAAAAAAihEAAAAAAAAAAAAAihEAAAAAAACLEQAAAAAAAAAAAACLEQAAAAAAAIwRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiREAAAAAAACJEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12671,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAI0RAAAAAAAAjhEAAAAAAAAAAAAAjhEAAAAAAACPEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjREAAAAAAACNEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12672,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAAI8RAAAAAAAAkBEAAAAAAAAAAAAAkBEAAAAAAACREQAAAAAAAAAAAACREQAAAAAAAJIRAAAAAAAAAAAAAJIRAAAAAAAAkxEAAAAAAAAAAAAAkxEAAAAAAACUEQAAAAAAAAAAAACUEQAAAAAAAJURAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjxEAAAAAAACPEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12677,
					1,
					"left_delete",
					null,
					"AQAAAJkRAAAAAAAAmREAAAAAAAAeAAAAICAgIAogICAgICB0ZXh0VmFsdWVzKG5vZGUsICkK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmREAAAAAAAC3EQAAAAAAAAAAAAAAAAAA"
				],
				[
					12680,
					1,
					"indent",
					null,
					"AgAAAB8RAAAAAAAAIREAAAAAAAAAAAAAQBEAAAAAAABCEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHxEAAAAAAACZEQAAAAAAAAAAAAAAAAAA"
				],
				[
					12698,
					1,
					"insert",
					{
						"characters": "\nownerElement"
					},
					"DgAAAJwRAAAAAAAAnREAAAAAAAAAAAAAnREAAAAAAACjEQAAAAAAAAAAAACjEQAAAAAAAKQRAAAAAAAAAAAAAKQRAAAAAAAApREAAAAAAAAAAAAApREAAAAAAACmEQAAAAAAAAAAAACmEQAAAAAAAKcRAAAAAAAAAAAAAKcRAAAAAAAAqBEAAAAAAAAAAAAAqBEAAAAAAACpEQAAAAAAAAAAAACpEQAAAAAAAKoRAAAAAAAAAAAAAKoRAAAAAAAAqxEAAAAAAAAAAAAAqxEAAAAAAACsEQAAAAAAAAAAAACsEQAAAAAAAK0RAAAAAAAAAAAAAK0RAAAAAAAArhEAAAAAAAAAAAAArhEAAAAAAACvEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnBEAAAAAAACcEQAAAAAAAP///////+9/"
				],
				[
					12699,
					1,
					"insert",
					{
						"characters": ".set"
					},
					"BAAAAK8RAAAAAAAAsBEAAAAAAAAAAAAAsBEAAAAAAACxEQAAAAAAAAAAAACxEQAAAAAAALIRAAAAAAAAAAAAALIRAAAAAAAAsxEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArxEAAAAAAACvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12700,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALMRAAAAAAAAtREAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsxEAAAAAAACzEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12702,
					5,
					"left_delete",
					null,
					"BQAAALQRAAAAAAAAtBEAAAAAAAABAAAAKbMRAAAAAAAAsxEAAAAAAAABAAAAKLIRAAAAAAAAshEAAAAAAAABAAAAdLERAAAAAAAAsREAAAAAAAABAAAAZbARAAAAAAAAsBEAAAAAAAABAAAAcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtREAAAAAAAC1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					12704,
					1,
					"cut",
					null,
					"AQAAAKMRAAAAAAAAoxEAAAAAAAANAAAAb3duZXJFbGVtZW50Lg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsBEAAAAAAACjEQAAAAAAAAAAAAAAAFJA"
				],
				[
					12705,
					1,
					"paste",
					null,
					"AQAAAKMRAAAAAAAAsBEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoxEAAAAAAACjEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12730,
					1,
					"cut",
					null,
					"AQAAAJ0RAAAAAAAAnREAAAAAAAAUAAAAICAgICAgb3duZXJFbGVtZW50Lgo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnREAAAAAAACxEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12732,
					1,
					"paste",
					null,
					"AQAAAKMRAAAAAAAAtxEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoxEAAAAAAACjEQAAAAAAAAAAAAAAAAAA"
				],
				[
					12734,
					1,
					"insert",
					{
						"characters": "set"
					},
					"AwAAALYRAAAAAAAAtxEAAAAAAAAAAAAAtxEAAAAAAAC4EQAAAAAAAAAAAAC4EQAAAAAAALkRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAthEAAAAAAAC2EQAAAAAAAAAAAAAAAPC/"
				],
				[
					12735,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALkRAAAAAAAAuxEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuREAAAAAAAC5EQAAAAAAAAAAAAAAAPC/"
				],
				[
					12736,
					1,
					"insert",
					{
						"characters": "node,"
					},
					"BQAAALoRAAAAAAAAuxEAAAAAAAAAAAAAuxEAAAAAAAC8EQAAAAAAAAAAAAC8EQAAAAAAAL0RAAAAAAAAAAAAAL0RAAAAAAAAvhEAAAAAAAAAAAAAvhEAAAAAAAC/EQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuhEAAAAAAAC6EQAAAAAAAAAAAAAAAPC/"
				],
				[
					12737,
					1,
					"insert",
					{
						"characters": " this"
					},
					"BQAAAL8RAAAAAAAAwBEAAAAAAAAAAAAAwBEAAAAAAADBEQAAAAAAAAAAAADBEQAAAAAAAMIRAAAAAAAAAAAAAMIRAAAAAAAAwxEAAAAAAAAAAAAAwxEAAAAAAADEEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvxEAAAAAAAC/EQAAAAAAAAAAAAAAAPC/"
				],
				[
					12739,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMURAAAAAAAAxhEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxREAAAAAAADFEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12742,
					2,
					"right_delete",
					null,
					"AgAAAKQRAAAAAAAApBEAAAAAAAABAAAAIKQRAAAAAAAApBEAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApBEAAAAAAACkEQAAAAAAAAAAAAAAAChA"
				],
				[
					12781,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMQRAAAAAAAAxREAAAAAAAAAAAAAxREAAAAAAADJEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxBEAAAAAAADEEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12782,
					1,
					"paste",
					null,
					"AQAAAMURAAAAAAAA1BEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyREAAAAAAADJEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12783,
					3,
					"left_delete",
					null,
					"AwAAANYRAAAAAAAA1hEAAAAAAAACAAAAICDUEQAAAAAAANQRAAAAAAAAAgAAACAg0xEAAAAAAADTEQAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2BEAAAAAAADYEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12784,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANMRAAAAAAAA1REAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0xEAAAAAAADTEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12785,
					1,
					"insert",
					{
						"characters": "node,"
					},
					"BQAAANQRAAAAAAAA1REAAAAAAAAAAAAA1REAAAAAAADWEQAAAAAAAAAAAADWEQAAAAAAANcRAAAAAAAAAAAAANcRAAAAAAAA2BEAAAAAAAAAAAAA2BEAAAAAAADZEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1BEAAAAAAADUEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12786,
					1,
					"insert",
					{
						"characters": " this"
					},
					"BQAAANkRAAAAAAAA2hEAAAAAAAAAAAAA2hEAAAAAAADbEQAAAAAAAAAAAADbEQAAAAAAANwRAAAAAAAAAAAAANwRAAAAAAAA3REAAAAAAAAAAAAA3REAAAAAAADeEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2REAAAAAAADZEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12788,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAN8RAAAAAAAA4BEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3xEAAAAAAADfEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12791,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAAMURAAAAAAAAxxEAAAAAAAAAAAAAxxEAAAAAAADJEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxREAAAAAAADFEQAAAAAAAAAAAAAAAAAA"
				],
				[
					12812,
					1,
					"insert",
					{
						"characters": ".childNodes"
					},
					"CwAAAMIRAAAAAAAAwxEAAAAAAAAAAAAAwxEAAAAAAADEEQAAAAAAAAAAAADEEQAAAAAAAMURAAAAAAAAAAAAAMURAAAAAAAAxhEAAAAAAAAAAAAAxhEAAAAAAADHEQAAAAAAAAAAAADHEQAAAAAAAMgRAAAAAAAAAAAAAMgRAAAAAAAAyREAAAAAAAAAAAAAyREAAAAAAADKEQAAAAAAAAAAAADKEQAAAAAAAMsRAAAAAAAAAAAAAMsRAAAAAAAAzBEAAAAAAAAAAAAAzBEAAAAAAADNEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwhEAAAAAAADCEQAAAAAAAAAAAAAAAPC/"
				],
				[
					12835,
					1,
					"cut",
					null,
					"AQAAAEEzAAAAAAAAQTMAAAAAAAAwAAAACiAgZ2V0IHBhdGgoKSB7CiAgICByZXR1cm4gTm9kZS5wYXRoKHRoaXMpOwogIH0K",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQTMAAAAAAABxMwAAAAAAAAAAAAAAAPC/"
				],
				[
					12838,
					1,
					"paste",
					null,
					"AQAAAGELAAAAAAAAkQsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQsAAAAAAABhCwAAAAAAAAAAAAAAAPC/"
				],
				[
					12841,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAJELAAAAAAAAkgsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkQsAAAAAAACRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					13015,
					6,
					"left_delete",
					null,
					"BgAAAPQRAAAAAAAA9BEAAAAAAAAKAAAAY2hpbGROb2Rlc/MRAAAAAAAA8xEAAAAAAAABAAAALvIRAAAAAAAA8hEAAAAAAAABAAAAc/ERAAAAAAAA8REAAAAAAAABAAAAafARAAAAAAAA8BEAAAAAAAABAAAAaO8RAAAAAAAA7xEAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9BEAAAAAAAD+EQAAAAAAAAAAAAAAAPC/"
				],
				[
					13016,
					1,
					"insert",
					{
						"characters": "chioldre"
					},
					"CAAAAO8RAAAAAAAA8BEAAAAAAAAAAAAA8BEAAAAAAADxEQAAAAAAAAAAAADxEQAAAAAAAPIRAAAAAAAAAAAAAPIRAAAAAAAA8xEAAAAAAAAAAAAA8xEAAAAAAAD0EQAAAAAAAAAAAAD0EQAAAAAAAPURAAAAAAAAAAAAAPURAAAAAAAA9hEAAAAAAAAAAAAA9hEAAAAAAAD3EQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7xEAAAAAAADvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					13017,
					5,
					"left_delete",
					null,
					"BQAAAPYRAAAAAAAA9hEAAAAAAAABAAAAZfURAAAAAAAA9REAAAAAAAABAAAAcvQRAAAAAAAA9BEAAAAAAAABAAAAZPMRAAAAAAAA8xEAAAAAAAABAAAAbPIRAAAAAAAA8hEAAAAAAAABAAAAbw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9xEAAAAAAAD3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					13018,
					1,
					"insert",
					{
						"characters": "ldren"
					},
					"BQAAAPIRAAAAAAAA8xEAAAAAAAAAAAAA8xEAAAAAAAD0EQAAAAAAAAAAAAD0EQAAAAAAAPURAAAAAAAAAAAAAPURAAAAAAAA9hEAAAAAAAAAAAAA9hEAAAAAAAD3EQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8hEAAAAAAADyEQAAAAAAAAAAAAAAAPC/"
				],
				[
					13028,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANgRAAAAAAAA2REAAAAAAAAAAAAA2REAAAAAAADaEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2BEAAAAAAADYEQAAAAAAAAAAAAAAAPC/"
				],
				[
					13057,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAFwZAAAAAAAAXRkAAAAAAAAAAAAAXRkAAAAAAABhGQAAAAAAAAAAAABhGQAAAAAAAGIZAAAAAAAAAAAAAGIZAAAAAAAAZhkAAAAAAAAAAAAAXRkAAAAAAABdGQAAAAAAAAQAAAAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXBkAAAAAAABcGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13061,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AgAAACQZAAAAAAAAJRkAAAAAAAAAAAAAXxkAAAAAAABfGQAAAAAAAAQAAAAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJBkAAAAAAAAkGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13062,
					1,
					"left_delete",
					null,
					"AQAAACQZAAAAAAAAJBkAAAAAAAABAAAAcA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJRkAAAAAAAAlGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13063,
					1,
					"insert",
					{
						"characters": ",parent"
					},
					"BwAAACQZAAAAAAAAJRkAAAAAAAAAAAAAJRkAAAAAAAAmGQAAAAAAAAAAAAAmGQAAAAAAACcZAAAAAAAAAAAAACcZAAAAAAAAKBkAAAAAAAAAAAAAKBkAAAAAAAApGQAAAAAAAAAAAAApGQAAAAAAACoZAAAAAAAAAAAAACoZAAAAAAAAKxkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJBkAAAAAAAAkGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13067,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGMZAAAAAAAAZBkAAAAAAAAAAAAAZBkAAAAAAABoGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYxkAAAAAAABjGQAAAAAAAP///////+9/"
				],
				[
					13070,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAGgZAAAAAAAAaRkAAAAAAAAAAAAAaRkAAAAAAABqGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaBkAAAAAAABoGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13071,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAGoZAAAAAAAAbBkAAAAAAAAAAAAAaxkAAAAAAABtGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAahkAAAAAAABqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13072,
					1,
					"insert",
					{
						"characters": "parnet"
					},
					"BgAAAGwZAAAAAAAAbRkAAAAAAAAAAAAAbRkAAAAAAABuGQAAAAAAAAAAAABuGQAAAAAAAG8ZAAAAAAAAAAAAAG8ZAAAAAAAAcBkAAAAAAAAAAAAAcBkAAAAAAABxGQAAAAAAAAAAAABxGQAAAAAAAHIZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbBkAAAAAAABsGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13073,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAHIZAAAAAAAAcxkAAAAAAAAAAAAAcxkAAAAAAAB0GQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAchkAAAAAAAByGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13074,
					1,
					"insert",
					{
						"characters": " parentElement"
					},
					"DgAAAHQZAAAAAAAAdRkAAAAAAAAAAAAAdRkAAAAAAAB2GQAAAAAAAAAAAAB2GQAAAAAAAHcZAAAAAAAAAAAAAHcZAAAAAAAAeBkAAAAAAAAAAAAAeBkAAAAAAAB5GQAAAAAAAAAAAAB5GQAAAAAAAHoZAAAAAAAAAAAAAHoZAAAAAAAAexkAAAAAAAAAAAAAexkAAAAAAAB8GQAAAAAAAAAAAAB8GQAAAAAAAH0ZAAAAAAAAAAAAAH0ZAAAAAAAAfhkAAAAAAAAAAAAAfhkAAAAAAAB/GQAAAAAAAAAAAAB/GQAAAAAAAIAZAAAAAAAAAAAAAIAZAAAAAAAAgRkAAAAAAAAAAAAAgRkAAAAAAACCGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdBkAAAAAAAB0GQAAAAAAAAAAAAAAAPC/"
				],
				[
					13075,
					1,
					"insert",
					{
						"characters": ".get"
					},
					"BAAAAIIZAAAAAAAAgxkAAAAAAAAAAAAAgxkAAAAAAACEGQAAAAAAAAAAAACEGQAAAAAAAIUZAAAAAAAAAAAAAIUZAAAAAAAAhhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAghkAAAAAAACCGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13076,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIYZAAAAAAAAiBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhhkAAAAAAACGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13077,
					1,
					"insert",
					{
						"characters": "ndoe"
					},
					"BAAAAIcZAAAAAAAAiBkAAAAAAAAAAAAAiBkAAAAAAACJGQAAAAAAAAAAAACJGQAAAAAAAIoZAAAAAAAAAAAAAIoZAAAAAAAAixkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhxkAAAAAAACHGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13079,
					5,
					"left_delete",
					null,
					"BQAAAIwZAAAAAAAAjBkAAAAAAAABAAAAKYsZAAAAAAAAixkAAAAAAAABAAAAKYoZAAAAAAAAihkAAAAAAAABAAAAZYkZAAAAAAAAiRkAAAAAAAABAAAAb4gZAAAAAAAAiBkAAAAAAAABAAAAZA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjRkAAAAAAACNGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13080,
					1,
					"left_delete",
					null,
					"AQAAAIcZAAAAAAAAhxkAAAAAAAABAAAAbg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiBkAAAAAAACIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13081,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAIYZAAAAAAAAhhkAAAAAAAABAAAAKIYZAAAAAAAAhhkAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhxkAAAAAAACHGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13082,
					3,
					"left_delete",
					null,
					"AwAAAIUZAAAAAAAAhRkAAAAAAAABAAAAdIQZAAAAAAAAhBkAAAAAAAABAAAAZYMZAAAAAAAAgxkAAAAAAAABAAAAZw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhhkAAAAAAACGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13083,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAAIMZAAAAAAAAhBkAAAAAAAAAAAAAhBkAAAAAAACFGQAAAAAAAAAAAACFGQAAAAAAAIYZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgxkAAAAAAACDGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13084,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIYZAAAAAAAAiBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhhkAAAAAAACGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13085,
					1,
					"insert",
					{
						"characters": "node"
					},
					"BAAAAIcZAAAAAAAAiBkAAAAAAAAAAAAAiBkAAAAAAACJGQAAAAAAAAAAAACJGQAAAAAAAIoZAAAAAAAAAAAAAIoZAAAAAAAAixkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhxkAAAAAAACHGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13087,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAAIwZAAAAAAAAjRkAAAAAAAAAAAAAjRkAAAAAAACOGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjBkAAAAAAACMGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13090,
					1,
					"right_delete",
					null,
					"AQAAAG8ZAAAAAAAAbxkAAAAAAAABAAAAbg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbxkAAAAAAABvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13091,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAG8ZAAAAAAAAcBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbxkAAAAAAABvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13092,
					1,
					"left_delete",
					null,
					"AQAAAG8ZAAAAAAAAbxkAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcBkAAAAAAABwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13094,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAHAZAAAAAAAAcRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcBkAAAAAAABwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13096,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI4ZAAAAAAAAjxkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjhkAAAAAAACOGQAAAAAAAP///////+9/"
				],
				[
					13101,
					1,
					"insert",
					{
						"characters": " %%"
					},
					"AwAAAI0ZAAAAAAAAjhkAAAAAAAAAAAAAjhkAAAAAAACPGQAAAAAAAAAAAACPGQAAAAAAAJAZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjRkAAAAAAACNGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13102,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJAZAAAAAAAAkRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkBkAAAAAAACQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13103,
					3,
					"left_delete",
					null,
					"AwAAAJAZAAAAAAAAkBkAAAAAAAABAAAAII8ZAAAAAAAAjxkAAAAAAAABAAAAJY4ZAAAAAAAAjhkAAAAAAAABAAAAJQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkRkAAAAAAACRGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13104,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAI4ZAAAAAAAAjxkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjhkAAAAAAACOGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13105,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI8ZAAAAAAAAkBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjxkAAAAAAACPGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13106,
					1,
					"left_delete",
					null,
					"AQAAAI8ZAAAAAAAAjxkAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkBkAAAAAAACQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13107,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAI8ZAAAAAAAAkBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjxkAAAAAAACPGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13108,
					1,
					"insert",
					{
						"characters": " Array.isA"
					},
					"CgAAAJAZAAAAAAAAkRkAAAAAAAAAAAAAkRkAAAAAAACSGQAAAAAAAAAAAACSGQAAAAAAAJMZAAAAAAAAAAAAAJMZAAAAAAAAlBkAAAAAAAAAAAAAlBkAAAAAAACVGQAAAAAAAAAAAACVGQAAAAAAAJYZAAAAAAAAAAAAAJYZAAAAAAAAlxkAAAAAAAAAAAAAlxkAAAAAAACYGQAAAAAAAAAAAACYGQAAAAAAAJkZAAAAAAAAAAAAAJkZAAAAAAAAmhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkBkAAAAAAACQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13109,
					1,
					"insert",
					{
						"characters": "rray"
					},
					"BAAAAJoZAAAAAAAAmxkAAAAAAAAAAAAAmxkAAAAAAACcGQAAAAAAAAAAAACcGQAAAAAAAJ0ZAAAAAAAAAAAAAJ0ZAAAAAAAAnhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmhkAAAAAAACaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13110,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ4ZAAAAAAAAoBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnhkAAAAAAACeGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13111,
					1,
					"insert",
					{
						"characters": "parent.children"
					},
					"DwAAAJ8ZAAAAAAAAoBkAAAAAAAAAAAAAoBkAAAAAAAChGQAAAAAAAAAAAAChGQAAAAAAAKIZAAAAAAAAAAAAAKIZAAAAAAAAoxkAAAAAAAAAAAAAoxkAAAAAAACkGQAAAAAAAAAAAACkGQAAAAAAAKUZAAAAAAAAAAAAAKUZAAAAAAAAphkAAAAAAAAAAAAAphkAAAAAAACnGQAAAAAAAAAAAACnGQAAAAAAAKgZAAAAAAAAAAAAAKgZAAAAAAAAqRkAAAAAAAAAAAAAqRkAAAAAAACqGQAAAAAAAAAAAACqGQAAAAAAAKsZAAAAAAAAAAAAAKsZAAAAAAAArBkAAAAAAAAAAAAArBkAAAAAAACtGQAAAAAAAAAAAACtGQAAAAAAAK4ZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnxkAAAAAAACfGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13113,
					1,
					"insert",
					{
						"characters": " rerturn"
					},
					"CAAAALAZAAAAAAAAsRkAAAAAAAAAAAAAsRkAAAAAAACyGQAAAAAAAAAAAACyGQAAAAAAALMZAAAAAAAAAAAAALMZAAAAAAAAtBkAAAAAAAAAAAAAtBkAAAAAAAC1GQAAAAAAAAAAAAC1GQAAAAAAALYZAAAAAAAAAAAAALYZAAAAAAAAtxkAAAAAAAAAAAAAtxkAAAAAAAC4GQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsBkAAAAAAACwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13114,
					5,
					"left_delete",
					null,
					"BQAAALcZAAAAAAAAtxkAAAAAAAABAAAAbrYZAAAAAAAAthkAAAAAAAABAAAAcrUZAAAAAAAAtRkAAAAAAAABAAAAdbQZAAAAAAAAtBkAAAAAAAABAAAAdLMZAAAAAAAAsxkAAAAAAAABAAAAcg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuBkAAAAAAAC4GQAAAAAAAAAAAAAAAPC/"
				],
				[
					13115,
					1,
					"insert",
					{
						"characters": "turn"
					},
					"BAAAALMZAAAAAAAAtBkAAAAAAAAAAAAAtBkAAAAAAAC1GQAAAAAAAAAAAAC1GQAAAAAAALYZAAAAAAAAAAAAALYZAAAAAAAAtxkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsxkAAAAAAACzGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13116,
					1,
					"insert",
					{
						"characters": " parent.chidlren;"
					},
					"EQAAALcZAAAAAAAAuBkAAAAAAAAAAAAAuBkAAAAAAAC5GQAAAAAAAAAAAAC5GQAAAAAAALoZAAAAAAAAAAAAALoZAAAAAAAAuxkAAAAAAAAAAAAAuxkAAAAAAAC8GQAAAAAAAAAAAAC8GQAAAAAAAL0ZAAAAAAAAAAAAAL0ZAAAAAAAAvhkAAAAAAAAAAAAAvhkAAAAAAAC/GQAAAAAAAAAAAAC/GQAAAAAAAMAZAAAAAAAAAAAAAMAZAAAAAAAAwRkAAAAAAAAAAAAAwRkAAAAAAADCGQAAAAAAAAAAAADCGQAAAAAAAMMZAAAAAAAAAAAAAMMZAAAAAAAAxBkAAAAAAAAAAAAAxBkAAAAAAADFGQAAAAAAAAAAAADFGQAAAAAAAMYZAAAAAAAAAAAAAMYZAAAAAAAAxxkAAAAAAAAAAAAAxxkAAAAAAADIGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtxkAAAAAAAC3GQAAAAAAAAAAAAAAAPC/"
				],
				[
					13119,
					5,
					"left_delete",
					null,
					"BQAAAMYZAAAAAAAAxhkAAAAAAAABAAAAbsUZAAAAAAAAxRkAAAAAAAABAAAAZcQZAAAAAAAAxBkAAAAAAAABAAAAcsMZAAAAAAAAwxkAAAAAAAABAAAAbMIZAAAAAAAAwhkAAAAAAAABAAAAZA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxxkAAAAAAADHGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13120,
					1,
					"insert",
					{
						"characters": "ldren"
					},
					"BQAAAMIZAAAAAAAAwxkAAAAAAAAAAAAAwxkAAAAAAADEGQAAAAAAAAAAAADEGQAAAAAAAMUZAAAAAAAAAAAAAMUZAAAAAAAAxhkAAAAAAAAAAAAAxhkAAAAAAADHGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwhkAAAAAAADCGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13122,
					1,
					"left_delete",
					null,
					"AQAAAMgZAAAAAAAAyBkAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyRkAAAAAAADJGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13124,
					1,
					"left_delete",
					null,
					"AQAAAMgZAAAAAAAAyBkAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyRkAAAAAAADJGQAAAAAAAAAAAAAAQI9A"
				],
				[
					13161,
					1,
					"paste",
					null,
					"AgAAAHUZAAAAAAAAfxkAAAAAAAAAAAAAfxkAAAAAAAB/GQAAAAAAAA0AAABwYXJlbnRFbGVtZW50",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdRkAAAAAAACCGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13179,
					1,
					"left_delete",
					null,
					"AQAAAMUZAAAAAAAAxRkAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxhkAAAAAAADGGQAAAAAAAAAAAAAAAAAA"
				],
				[
					13192,
					1,
					"cut",
					null,
					"AQAAAGUZAAAAAAAAZRkAAAAAAABhAAAAICAgaWYoKHBhcmVudCA9IHBhcmVudE5vZGUuZ2V0KG5vZGUpKSAmJiBBcnJheS5pc0FycmF5KHBhcmVudC5jaGlsZHJlbikpIHJldHVybiBwYXJlbnQuY2hpbGRyZW47Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZRkAAAAAAADGGQAAAAAAAAAAAAAAACRA"
				],
				[
					13193,
					1,
					"paste",
					null,
					"AQAAAGUZAAAAAAAAxhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZRkAAAAAAABlGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13195,
					1,
					"paste",
					null,
					"AQAAAOIZAAAAAAAAQxoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4hkAAAAAAADiGQAAAAAAAAAAAAAAAAAA"
				],
				[
					13231,
					1,
					"right_delete",
					null,
					"AQAAANgRAAAAAAAA2BEAAAAAAAACAAAALy8",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2BEAAAAAAADaEQAAAAAAAAAAAAAAAPC/"
				],
				[
					13246,
					1,
					"insert",
					{
						"characters": "tghi"
					},
					"BQAAAO8RAAAAAAAA8BEAAAAAAAAAAAAA8BEAAAAAAADwEQAAAAAAAAgAAABjaGlsZHJlbvARAAAAAAAA8REAAAAAAAAAAAAA8REAAAAAAADyEQAAAAAAAAAAAADyEQAAAAAAAPMRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7xEAAAAAAAD3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					13247,
					3,
					"left_delete",
					null,
					"AwAAAPIRAAAAAAAA8hEAAAAAAAABAAAAafERAAAAAAAA8REAAAAAAAABAAAAaPARAAAAAAAA8BEAAAAAAAABAAAAZw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8xEAAAAAAADzEQAAAAAAAAAAAAAAAPC/"
				],
				[
					13248,
					1,
					"insert",
					{
						"characters": "his.childNodes"
					},
					"DgAAAPARAAAAAAAA8REAAAAAAAAAAAAA8REAAAAAAADyEQAAAAAAAAAAAADyEQAAAAAAAPMRAAAAAAAAAAAAAPMRAAAAAAAA9BEAAAAAAAAAAAAA9BEAAAAAAAD1EQAAAAAAAAAAAAD1EQAAAAAAAPYRAAAAAAAAAAAAAPYRAAAAAAAA9xEAAAAAAAAAAAAA9xEAAAAAAAD4EQAAAAAAAAAAAAD4EQAAAAAAAPkRAAAAAAAAAAAAAPkRAAAAAAAA+hEAAAAAAAAAAAAA+hEAAAAAAAD7EQAAAAAAAAAAAAD7EQAAAAAAAPwRAAAAAAAAAAAAAPwRAAAAAAAA/REAAAAAAAAAAAAA/REAAAAAAAD+EQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8BEAAAAAAADwEQAAAAAAAAAAAAAAAPC/"
				],
				[
					13266,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACASAAAAAAAAIRIAAAAAAAAAAAAAIRIAAAAAAAAlEgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIBIAAAAAAAAgEgAAAAAAAP///////+9/"
				],
				[
					13299,
					1,
					"cut",
					null,
					"AQAAAG4ZAAAAAAAAbhkAAAAAAABiAAAAICAgIGlmKChwYXJlbnQgPSBwYXJlbnROb2RlLmdldChub2RlKSkgJiYgQXJyYXkuaXNBcnJheShwYXJlbnQuY2hpbGRyZW4pKSByZXR1cm4gcGFyZW50LmNoaWxkcmVuOwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbhkAAAAAAADQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13301,
					1,
					"paste",
					null,
					"AQAAADcZAAAAAAAAmRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANxkAAAAAAAA3GQAAAAAAAAAAAAAAAAAA"
				],
				[
					13321,
					1,
					"insert",
					{
						"characters": "let"
					},
					"BQAAANUZAAAAAAAA1hkAAAAAAAAAAAAA1hkAAAAAAADWGQAAAAAAAAQAAABub2RlIRIAAAAAAAAhEgAAAAAAAAQAAAAgICAg0hkAAAAAAADTGQAAAAAAAAAAAADTGQAAAAAAANQZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1RkAAAAAAADZGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13322,
					1,
					"insert",
					{
						"characters": " raw"
					},
					"BAAAANQZAAAAAAAA1RkAAAAAAAAAAAAA1RkAAAAAAADWGQAAAAAAAAAAAADWGQAAAAAAANcZAAAAAAAAAAAAANcZAAAAAAAA2BkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1BkAAAAAAADUGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13332,
					1,
					"paste",
					null,
					"AgAAAAoaAAAAAAAADRoAAAAAAAAAAAAADRoAAAAAAAANGgAAAAAAAAQAAABub2Rl",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAChoAAAAAAAAOGgAAAAAAAAAAAAAAAPC/"
				],
				[
					13346,
					1,
					"paste",
					null,
					"AgAAAGcaAAAAAAAAahoAAAAAAAAAAAAAahoAAAAAAABqGgAAAAAAAAQAAABub2Rl",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZxoAAAAAAABrGgAAAAAAAAAAAAAAAPC/"
				],
				[
					13384,
					1,
					"cut",
					null,
					"AQAAAJUZAAAAAAAAlRkAAAAAAAA3AAAAICAgIGlmKChvd25lciA9IG93bmVyRWxlbWVudC5nZXQobm9kZSkpKSByZXR1cm4gb3duZXI7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlRkAAAAAAADMGQAAAAAAAAAAAAAAAPC/"
				],
				[
					13388,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABQaAAAAAAAAFRoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFBoAAAAAAAAUGgAAAAAAAAAAAAAAAAAA"
				],
				[
					13389,
					1,
					"paste",
					null,
					"AQAAABUaAAAAAAAATBoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFRoAAAAAAAAVGgAAAAAAAAAAAAAAAPC/"
				],
				[
					13470,
					1,
					"insert",
					{
						"characters": ".children"
					},
					"CQAAAAU5AAAAAAAABjkAAAAAAAAAAAAABjkAAAAAAAAHOQAAAAAAAAAAAAAHOQAAAAAAAAg5AAAAAAAAAAAAAAg5AAAAAAAACTkAAAAAAAAAAAAACTkAAAAAAAAKOQAAAAAAAAAAAAAKOQAAAAAAAAs5AAAAAAAAAAAAAAs5AAAAAAAADDkAAAAAAAAAAAAADDkAAAAAAAANOQAAAAAAAAAAAAANOQAAAAAAAA45AAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABTkAAAAAAAAFOQAAAAAAAAAAAAAAAPC/"
				],
				[
					13477,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAojgAAAAAAACiOAAAAAAAAAAAAAAAAPC/"
				],
				[
					13484,
					1,
					"insert",
					{
						"characters": ".children"
					},
					"CQAAAEU4AAAAAAAARjgAAAAAAAAAAAAARjgAAAAAAABHOAAAAAAAAAAAAABHOAAAAAAAAEg4AAAAAAAAAAAAAEg4AAAAAAAASTgAAAAAAAAAAAAASTgAAAAAAABKOAAAAAAAAAAAAABKOAAAAAAAAEs4AAAAAAAAAAAAAEs4AAAAAAAATDgAAAAAAAAAAAAATDgAAAAAAABNOAAAAAAAAAAAAABNOAAAAAAAAE44AAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARTgAAAAAAABFOAAAAAAAAAAAAAAAAPC/"
				],
				[
					13507,
					1,
					"insert",
					{
						"characters": "[0,"
					},
					"AwAAAFgnAAAAAAAAWScAAAAAAAAAAAAAWScAAAAAAABaJwAAAAAAAAAAAABaJwAAAAAAAFsnAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWCcAAAAAAABYJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13508,
					1,
					"left_delete",
					null,
					"AQAAAFonAAAAAAAAWicAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWycAAAAAAABbJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13509,
					1,
					"insert",
					{
						"characters": "];"
					},
					"AgAAAFonAAAAAAAAWycAAAAAAAAAAAAAWycAAAAAAABcJwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWicAAAAAAABaJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13510,
					1,
					"insert",
					{
						"characters": " //"
					},
					"AwAAAFwnAAAAAAAAXScAAAAAAAAAAAAAXScAAAAAAABeJwAAAAAAAAAAAABeJwAAAAAAAF8nAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXCcAAAAAAABcJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13519,
					1,
					"insert",
					{
						"characters": "str"
					},
					"AwAAAFgnAAAAAAAAWScAAAAAAAAAAAAAWScAAAAAAABaJwAAAAAAAAAAAABaJwAAAAAAAFsnAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWCcAAAAAAABYJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13520,
					1,
					"insert",
					{
						"characters": "[0]=='["
					},
					"BwAAAFsnAAAAAAAAXCcAAAAAAAAAAAAAXCcAAAAAAABdJwAAAAAAAAAAAABdJwAAAAAAAF4nAAAAAAAAAAAAAF4nAAAAAAAAXycAAAAAAAAAAAAAXycAAAAAAABgJwAAAAAAAAAAAABgJwAAAAAAAGEnAAAAAAAAAAAAAGEnAAAAAAAAYicAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWycAAAAAAABbJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13521,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAGInAAAAAAAAYycAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYicAAAAAAABiJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13522,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAGMnAAAAAAAAZCcAAAAAAAAAAAAAZCcAAAAAAABlJwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYycAAAAAAABjJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13523,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGUnAAAAAAAAZicAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZScAAAAAAABlJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13525,
					1,
					"cut",
					null,
					"AQAAAGYnAAAAAAAAZicAAAAAAAADAAAAWzBd",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZicAAAAAAABpJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13526,
					4,
					"right_delete",
					null,
					"BAAAAGYnAAAAAAAAZicAAAAAAAABAAAAO2YnAAAAAAAAZicAAAAAAAABAAAAIGYnAAAAAAAAZicAAAAAAAABAAAAL2YnAAAAAAAAZicAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZicAAAAAAABmJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13529,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAJInAAAAAAAAkycAAAAAAAAAAAAAkycAAAAAAACUJwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkicAAAAAAACSJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13530,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJQnAAAAAAAAlScAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlCcAAAAAAACUJwAAAAAAAAAAAAAAAPC/"
				],
				[
					13531,
					1,
					"paste",
					null,
					"AQAAAJUnAAAAAAAAmCcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlScAAAAAAACVJwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "buffer-utils.h",
			"settings":
			{
				"buffer_size": 8859,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "char-utils.h",
			"settings":
			{
				"buffer_size": 9037,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					23,
					1,
					"paste",
					null,
					"AQAAAEEQAAAAAAAAVxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQRAAAAAAAABBEAAAAAAAAAAAAAAAAAAA"
				],
				[
					29,
					1,
					"cut",
					null,
					"AQAAAFgRAAAAAAAAWBEAAAAAAAAOAAAAc3RhdGljIGlubGluZSA",
					"AQAAAAAAAAABAAAAWBEAAAAAAABmEQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"paste",
					null,
					"AQAAAEMQAAAAAAAAURAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQxAAAAAAAABDEAAAAAAAAAAAAAAAAAAA"
				],
				[
					35,
					1,
					"left_delete",
					null,
					"AQAAAEEQAAAAAAAAQRAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAQhAAAAAAAABCEAAAAAAAAAAAAAAAgGFA"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAAJQQAAAAAAAAlBAAAAAAAAATAAAAY2hhciBjID0gbmVlZGxlOwogIA",
					"AQAAAAAAAAABAAAAlBAAAAAAAACnEAAAAAAAAAAAAAAAADRA"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAABwRAAAAAAAAHBEAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAHREAAAAAAAAdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "needle"
					},
					"BgAAABwRAAAAAAAAHREAAAAAAAAAAAAAHREAAAAAAAAeEQAAAAAAAAAAAAAeEQAAAAAAAB8RAAAAAAAAAAAAAB8RAAAAAAAAIBEAAAAAAAAAAAAAIBEAAAAAAAAhEQAAAAAAAAAAAAAhEQAAAAAAACIRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHBEAAAAAAAAcEQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAKEQAAAAAAAAohAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRAAAAAAAAChEAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAAKEQAAAAAAAAoRAAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAohAAAAAAAACiEAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": ";*t;"
					},
					"BAAAAKEQAAAAAAAAohAAAAAAAAAAAAAAohAAAAAAAACjEAAAAAAAAAAAAACjEAAAAAAAAKQQAAAAAAAAAAAAAKQQAAAAAAAApRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRAAAAAAAAChEAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAKUQAAAAAAAAphAAAAAAAAAAAAAAphAAAAAAAACnEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRAAAAAAAAClEAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKYQAAAAAAAApxAAAAAAAAAAAAAApxAAAAAAAACpEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphAAAAAAAACmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"cut",
					null,
					"AQAAAKkQAAAAAAAAqRAAAAAAAAAaAAAAcyA9IChjb25zdCBjaGFyKiloYXlzdGFjazs",
					"AQAAAAAAAAABAAAAqRAAAAAAAADDEAAAAAAAAP///////+9/"
				],
				[
					82,
					1,
					"paste",
					null,
					"AQAAAMsQAAAAAAAA5RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyxAAAAAAAADLEAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"left_delete",
					null,
					"AgAAAOQQAAAAAAAA5BAAAAAAAAABAAAAO6cQAAAAAAAApxAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA5RAAAAAAAADlEAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOIQAAAAAAAA4xAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4hAAAAAAAADiEAAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " t"
					},
					"AgAAAOMQAAAAAAAA5BAAAAAAAAAAAAAA5BAAAAAAAADlEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4xAAAAAAAADjEAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "=s+len"
					},
					"BgAAAOUQAAAAAAAA5hAAAAAAAAAAAAAA5hAAAAAAAADnEAAAAAAAAAAAAADnEAAAAAAAAOgQAAAAAAAAAAAAAOgQAAAAAAAA6RAAAAAAAAAAAAAA6RAAAAAAAADqEAAAAAAAAAAAAADqEAAAAAAAAOsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RAAAAAAAADlEAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					2,
					"left_delete",
					null,
					"AgAAAKgQAAAAAAAAqBAAAAAAAAAbAAAAICBjb25zdCBjaGFyKiB0ID0gcyArIGxlbjsKpxAAAAAAAACnEAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAwxAAAAAAAACoEAAAAAAAAAAAAAAAAAAA"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "--"
					},
					"AgAAAOkQAAAAAAAA6hAAAAAAAAAAAAAA6hAAAAAAAADrEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6RAAAAAAAADpEAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					2,
					"left_delete",
					null,
					"AgAAAOoQAAAAAAAA6hAAAAAAAAABAAAALekQAAAAAAAA6RAAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAA6xAAAAAAAADrEAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"left_delete",
					null,
					"AQAAAOwQAAAAAAAA7BAAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAA7RAAAAAAAADtEAAAAAAAAAAAAAAAoHlA"
				],
				[
					116,
					5,
					"left_delete",
					null,
					"BQAAAP8QAAAAAAAA/xAAAAAAAAABAAAAO/4QAAAAAAAA/hAAAAAAAAABAAAAffwQAAAAAAAA/BAAAAAAAAACAAAAICD6EAAAAAAAAPoQAAAAAAAAAgAAACAg+RAAAAAAAAD5EAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAABEAAAAAAAAAEQAAAAAAAAAAAAAAgGFA"
				],
				[
					129,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAANoRAAAAAAAA3BEAAAAAAAAAAAAAQhEAAAAAAABEEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQhEAAAAAAADaEQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"left_delete",
					null,
					"AQAAAKEQAAAAAAAAoRAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAohAAAAAAAACiEAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKEQAAAAAAAAohAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRAAAAAAAAChEAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAohAAAAAAAACiEAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "path.c",
			"settings":
			{
				"buffer_size": 14395,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					29,
					1,
					"insert",
					{
						"characters": "\n#ifdef"
					},
					"CAAAANMmAAAAAAAA1CYAAAAAAAAAAAAA1CYAAAAAAADWJgAAAAAAAAAAAADWJgAAAAAAANcmAAAAAAAAAAAAANcmAAAAAAAA2CYAAAAAAAAAAAAA2CYAAAAAAADZJgAAAAAAAAAAAADZJgAAAAAAANomAAAAAAAAAAAAANomAAAAAAAA2yYAAAAAAAAAAAAA2yYAAAAAAADcJgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0yYAAAAAAADTJgAAAAAAAP///////+9/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANwmAAAAAAAA3SYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3CYAAAAAAADcJgAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"paste",
					null,
					"AQAAAN0mAAAAAAAA5SYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3SYAAAAAAADdJgAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\n#end"
					},
					"BgAAAFEnAAAAAAAAUicAAAAAAAAAAAAAUicAAAAAAABUJwAAAAAAAAAAAABUJwAAAAAAAFUnAAAAAAAAAAAAAFUnAAAAAAAAVicAAAAAAAAAAAAAVicAAAAAAABXJwAAAAAAAAAAAABXJwAAAAAAAFgnAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUScAAAAAAABRJwAAAAAAAAAAAAAAQGVA"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAAFgnAAAAAAAAWScAAAAAAAAAAAAAWScAAAAAAABaJwAAAAAAAAAAAABaJwAAAAAAAFsnAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWCcAAAAAAABYJwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					3,
					"left_delete",
					null,
					"AwAAAFonAAAAAAAAWicAAAAAAAABAAAAZlknAAAAAAAAWScAAAAAAAABAAAAaVgnAAAAAAAAWCcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAWycAAAAAAABbJwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "oif"
					},
					"AwAAAFgnAAAAAAAAWScAAAAAAAAAAAAAWScAAAAAAABaJwAAAAAAAAAAAABaJwAAAAAAAFsnAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWCcAAAAAAABYJwAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					3,
					"left_delete",
					null,
					"AwAAAFonAAAAAAAAWicAAAAAAAABAAAAZlknAAAAAAAAWScAAAAAAAABAAAAaVgnAAAAAAAAWCcAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAWycAAAAAAABbJwAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAFgnAAAAAAAAWScAAAAAAAAAAAAAWScAAAAAAABaJwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWCcAAAAAAABYJwAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"unindent",
					null,
					"CAAAANQmAAAAAAAA1CYAAAAAAAACAAAAICDkJgAAAAAAAOQmAAAAAAAAAgAAACAg9CYAAAAAAAD0JgAAAAAAAAIAAAAgIPsmAAAAAAAA+yYAAAAAAAACAAAAICAZJwAAAAAAABknAAAAAAAAAgAAACAgNCcAAAAAAAA0JwAAAAAAAAIAAAAgIEInAAAAAAAAQicAAAAAAAACAAAAICBEJwAAAAAAAEQnAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAWicAAAAAAADWJgAAAAAAAAAAAAAAADRA"
				],
				[
					46,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAUScAAAAAAABRJwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "utils.c",
			"settings":
			{
				"buffer_size": 64393,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 19704,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					31,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMorAAAAAAAAyysAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyisAAAAAAADKKwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"paste",
					null,
					"AQAAAMsrAAAAAAAA4isAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyysAAAAAAADLKwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tests/test_dom.js",
			"settings":
			{
				"buffer_size": 4325,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					23,
					1,
					"insert",
					{
						"characters": ".replace(&/"
					},
					"CwAAAHkJAAAAAAAAegkAAAAAAAAAAAAAegkAAAAAAAB7CQAAAAAAAAAAAAB7CQAAAAAAAHwJAAAAAAAAAAAAAHwJAAAAAAAAfQkAAAAAAAAAAAAAfQkAAAAAAAB+CQAAAAAAAAAAAAB+CQAAAAAAAH8JAAAAAAAAAAAAAH8JAAAAAAAAgAkAAAAAAAAAAAAAgAkAAAAAAACBCQAAAAAAAAAAAACBCQAAAAAAAIIJAAAAAAAAAAAAAIIJAAAAAAAAgwkAAAAAAAAAAAAAgwkAAAAAAACECQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeQkAAAAAAAB5CQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					2,
					"left_delete",
					null,
					"AgAAAIMJAAAAAAAAgwkAAAAAAAABAAAAL4IJAAAAAAAAggkAAAAAAAABAAAAJg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAkAAAAAAACECQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "/test_/,"
					},
					"CAAAAIIJAAAAAAAAgwkAAAAAAAAAAAAAgwkAAAAAAACECQAAAAAAAAAAAACECQAAAAAAAIUJAAAAAAAAAAAAAIUJAAAAAAAAhgkAAAAAAAAAAAAAhgkAAAAAAACHCQAAAAAAAAAAAACHCQAAAAAAAIgJAAAAAAAAAAAAAIgJAAAAAAAAiQkAAAAAAAAAAAAAiQkAAAAAAACKCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAggkAAAAAAACCCQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " ''()"
					},
					"BQAAAIoJAAAAAAAAiwkAAAAAAAAAAAAAiwkAAAAAAACMCQAAAAAAAAAAAACMCQAAAAAAAI0JAAAAAAAAAAAAAI0JAAAAAAAAjgkAAAAAAAAAAAAAjgkAAAAAAACPCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAigkAAAAAAACKCQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					2,
					"left_delete",
					null,
					"AgAAAI4JAAAAAAAAjgkAAAAAAAABAAAAKY0JAAAAAAAAjQkAAAAAAAABAAAAKA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjwkAAAAAAACPCQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAI0JAAAAAAAAjgkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQkAAAAAAACNCQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "'0"
					},
					"AgAAAFQJAAAAAAAAVQkAAAAAAAAAAAAAVQkAAAAAAABWCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVAkAAAAAAABUCQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAAFUJAAAAAAAAVQkAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgkAAAAAAABWCQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\\x1b["
					},
					"BQAAAFUJAAAAAAAAVgkAAAAAAAAAAAAAVgkAAAAAAABXCQAAAAAAAAAAAABXCQAAAAAAAFgJAAAAAAAAAAAAAFgJAAAAAAAAWQkAAAAAAAAAAAAAWQkAAAAAAABaCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVQkAAAAAAABVCQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "1;32m'"
					},
					"BgAAAFoJAAAAAAAAWwkAAAAAAAAAAAAAWwkAAAAAAABcCQAAAAAAAAAAAABcCQAAAAAAAF0JAAAAAAAAAAAAAF0JAAAAAAAAXgkAAAAAAAAAAAAAXgkAAAAAAABfCQAAAAAAAAAAAABfCQAAAAAAAGAJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWgkAAAAAAABaCQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAGAJAAAAAAAAYQkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYAkAAAAAAABgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"paste",
					null,
					"AQAAAJsJAAAAAAAAqAkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmwkAAAAAAACbCQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"left_delete",
					null,
					"AQAAAKcJAAAAAAAApwkAAAAAAAABAAAAKw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqAkAAAAAAACoCQAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAJsJAAAAAAAAnAkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmwkAAAAAAACbCQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					4,
					"right_delete",
					null,
					"BAAAAKIJAAAAAAAAogkAAAAAAAABAAAAMaIJAAAAAAAAogkAAAAAAAABAAAAO6IJAAAAAAAAogkAAAAAAAABAAAAM6IJAAAAAAAAogkAAAAAAAABAAAAMg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAogkAAAAAAACiCQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAKIJAAAAAAAAowkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAogkAAAAAAACiCQAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"left_delete",
					null,
					"AQAAAFoJAAAAAAAAWgkAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWgkAAAAAAABbCQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "38;2;"
					},
					"BQAAAFoJAAAAAAAAWwkAAAAAAAAAAAAAWwkAAAAAAABcCQAAAAAAAAAAAABcCQAAAAAAAF0JAAAAAAAAAAAAAF0JAAAAAAAAXgkAAAAAAAAAAAAAXgkAAAAAAABfCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWgkAAAAAAABaCQAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "30,"
					},
					"AwAAAF8JAAAAAAAAYAkAAAAAAAAAAAAAYAkAAAAAAABhCQAAAAAAAAAAAABhCQAAAAAAAGIJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXwkAAAAAAABfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"left_delete",
					null,
					"AQAAAGEJAAAAAAAAYQkAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYgkAAAAAAABiCQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": ";0,"
					},
					"AwAAAGEJAAAAAAAAYgkAAAAAAAAAAAAAYgkAAAAAAABjCQAAAAAAAAAAAABjCQAAAAAAAGQJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQkAAAAAAABhCQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAAGMJAAAAAAAAYwkAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZAkAAAAAAABkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": ";255m"
					},
					"BQAAAGMJAAAAAAAAZAkAAAAAAAAAAAAAZAkAAAAAAABlCQAAAAAAAAAAAABlCQAAAAAAAGYJAAAAAAAAAAAAAGYJAAAAAAAAZwkAAAAAAAAAAAAAZwkAAAAAAABoCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwkAAAAAAABjCQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					4,
					"right_delete",
					null,
					"BAAAAGgJAAAAAAAAaAkAAAAAAAABAAAAO2gJAAAAAAAAaAkAAAAAAAABAAAAM2gJAAAAAAAAaAkAAAAAAAABAAAAMmgJAAAAAAAAaAkAAAAAAAABAAAAbQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaAkAAAAAAABoCQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"right_delete",
					null,
					"AQAAAGgJAAAAAAAAaAkAAAAAAAABAAAAJw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaAkAAAAAAABoCQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAGgJAAAAAAAAaQkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaAkAAAAAAABoCQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"left_delete",
					null,
					"AQAAAGgJAAAAAAAAaAkAAAAAAAABAAAAJw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaQkAAAAAAABpCQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAGgJAAAAAAAAaQkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaAkAAAAAAABoCQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"left_delete",
					null,
					"AQAAAGIJAAAAAAAAYgkAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwkAAAAAAABjCQAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "60"
					},
					"AgAAAGIJAAAAAAAAYwkAAAAAAAAAAAAAYwkAAAAAAABkCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYgkAAAAAAABiCQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAAF8JAAAAAAAAXwkAAAAAAAABAAAAMw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYAkAAAAAAABgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "92"
					},
					"AgAAAF8JAAAAAAAAYAkAAAAAAAAAAAAAYAkAAAAAAABhCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXwkAAAAAAABfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"right_delete",
					null,
					"AQAAAGEJAAAAAAAAYQkAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQkAAAAAAABhCQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					2,
					"left_delete",
					null,
					"AgAAAGAJAAAAAAAAYAkAAAAAAAABAAAAMl8JAAAAAAAAXwkAAAAAAAABAAAAOQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQkAAAAAAABhCQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "40"
					},
					"AgAAAF8JAAAAAAAAYAkAAAAAAAAAAAAAYAkAAAAAAABhCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXwkAAAAAAABfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"left_delete",
					null,
					"AQAAAGIJAAAAAAAAYgkAAAAAAAABAAAANg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwkAAAAAAABjCQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "15"
					},
					"AgAAAGIJAAAAAAAAYwkAAAAAAAAAAAAAYwkAAAAAAABkCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYgkAAAAAAABiCQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"left_delete",
					null,
					"AQAAAGMJAAAAAAAAYwkAAAAAAAABAAAANQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZAkAAAAAAABkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAGMJAAAAAAAAZAkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwkAAAAAAABjCQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"left_delete",
					null,
					"AQAAAF8JAAAAAAAAXwkAAAAAAAABAAAANA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYAkAAAAAAABgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "90"
					},
					"AgAAAF8JAAAAAAAAYAkAAAAAAAAAAAAAYAkAAAAAAABhCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXwkAAAAAAABfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"left_delete",
					null,
					"AQAAAGAJAAAAAAAAYAkAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQkAAAAAAABhCQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					2,
					"left_delete",
					null,
					"AgAAAGMJAAAAAAAAYwkAAAAAAAABAAAAOWIJAAAAAAAAYgkAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZAkAAAAAAABkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "24"
					},
					"AgAAAGIJAAAAAAAAYwkAAAAAAAAAAAAAYwkAAAAAAABkCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYgkAAAAAAABiCQAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"left_delete",
					null,
					"AQAAAGMJAAAAAAAAYwkAAAAAAAABAAAANA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZAkAAAAAAABkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAGMJAAAAAAAAZAkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwkAAAAAAABjCQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"left_delete",
					null,
					"AQAAAF8JAAAAAAAAXwkAAAAAAAABAAAAOQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYAkAAAAAAABgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "20"
					},
					"AgAAAF8JAAAAAAAAYAkAAAAAAAAAAAAAYAkAAAAAAABhCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXwkAAAAAAABfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					2,
					"left_delete",
					null,
					"AgAAAGAJAAAAAAAAYAkAAAAAAAABAAAAMF8JAAAAAAAAXwkAAAAAAAABAAAAMg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQkAAAAAAABhCQAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "12"
					},
					"AgAAAF8JAAAAAAAAYAkAAAAAAAAAAAAAYAkAAAAAAABhCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXwkAAAAAAABfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					2,
					"left_delete",
					null,
					"AgAAAGAJAAAAAAAAYAkAAAAAAAABAAAAMl8JAAAAAAAAXwkAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQkAAAAAAABhCQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "80"
					},
					"AgAAAF8JAAAAAAAAYAkAAAAAAAAAAAAAYAkAAAAAAABhCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXwkAAAAAAABfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"left_delete",
					null,
					"AQAAAGAJAAAAAAAAYAkAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQkAAAAAAABhCQAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKgJAAAAAAAAqQkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqAkAAAAAAACoCQAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADREAAAaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnOwppbXBvcnQgKiBhcyBzdGQgZnJvbSAnc3RkJzsKaW1wb3J0IHsKICBlc2NhcGUsCiAgcXVvdGUsCiAgaXNPYmplY3QsCiAgZGVmaW5lLAogIGdldENsYXNzTmFtZSwKICBtYXBPYmplY3QsCiAgZ2V0c2V0LAogIGdldHRlcnNldHRlciwKICBvbmNlLAogIG1lbW9pemUKfSBmcm9tICcuLi9saWIvdXRpbC5qcyc7CmltcG9ydCBpbnNwZWN0IGZyb20gJ2luc3BlY3QnOwppbXBvcnQgKiBhcyB4bWwgZnJvbSAneG1sJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnOwppbXBvcnQgeyBQb2ludGVyIH0gZnJvbSAncG9pbnRlcic7CmltcG9ydCAqIGFzIGRlZXAgZnJvbSAnZGVlcCc7CmltcG9ydCBDb25zb2xlIGZyb20gJy4uL2xpYi9jb25zb2xlLmpzJzsKaW1wb3J0IHsKICBub2RlVHlwZXMsCiAgUGFyc2VyLAogIE5vZGUsCiAgTm9kZUxpc3QsCiAgTmFtZWROb2RlTWFwLAogIEVsZW1lbnQsCiAgRG9jdW1lbnQsCiAgQXR0ciwKICBUZXh0LAogIFRva2VuTGlzdCwKICBGYWN0b3J5Cn0gZnJvbSAnLi4vbGliL2RvbS5qcyc7CmltcG9ydCB7IEltbXV0YWJsZVhQYXRoLCBNdXRhYmxlWFBhdGgsIGJ1aWxkWFBhdGgsIHBhcnNlWFBhdGgsIFhQYXRoIH0gZnJvbSAnLi4vbGliL3hwYXRoLmpzJzsKaW1wb3J0IFJFUEwgZnJvbSAnLi4vbGliL3JlcGwuanMnOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUocHJvY2Vzcy5zdGRvdXQsIHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgZGVwdGg6IDEwLAogICAgICBzdHJpbmdCcmVha05ld2xpbmU6IGZhbHNlLAogICAgICBtYXhBcnJheUxlbmd0aDogMTAwMDAsCiAgICAgIGNvbXBhY3Q6IGZhbHNlLAogICAgICBtYXhTdHJpbmdMZW5ndGg6IEluZmluaXR5LAogICAgICBjdXN0b21JbnNwZWN0OiB0cnVlIC8qLAogICAgICBoaWRlS2V5czogW1N5bWJvbC5pdGVyYXRvciwgU3ltYm9sLmZvcigncXVpY2tqcy5pbnNwZWN0LmN1c3RvbScpLCBTeW1ib2wuaW5zcGVjdF0qLwogICAgfQogIH0pOwogIGNvbnN0IGRvbSA9IHsgbm9kZVR5cGVzLCBQYXJzZXIsIE5vZGUsIE5vZGVMaXN0LCBOYW1lZE5vZGVNYXAsIEVsZW1lbnQsIERvY3VtZW50LCBBdHRyLCBUZXh0LCBUb2tlbkxpc3QsIEZhY3RvcnkgfTsKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsKICAgIG9zLAogICAgc3RkLAogICAgLi4ueyBlc2NhcGUsIHF1b3RlLCBpc09iamVjdCwgZGVmaW5lLCBnZXRDbGFzc05hbWUsIG1hcE9iamVjdCwgZ2V0c2V0LCBnZXR0ZXJzZXR0ZXIsIG1lbW9pemUgfSwKICAgIHhtbCwKICAgIHBhdGgsCiAgICBQb2ludGVyLAogICAgZGVlcCwKICAgIC4uLmRvbSwKICAgIGRvbSwKICAgIC4uLnsgSW1tdXRhYmxlWFBhdGgsIE11dGFibGVYUGF0aCwgYnVpbGRYUGF0aCwgcGFyc2VYUGF0aCwgWFBhdGggfQogIH0pOwoKICBsZXQgZmlsZSA9IGFyZ3NbMF0gPz8gJy4uLy4uLy4uL2FuLXRyb25pY3MvZWFnbGUvNTU1LU9zY2lsbGF0b3Iuc2NoJzsKCiAgbGV0IGJhc2UgPSBwYXRoLmJhc2VuYW1lKGZpbGUsIHBhdGguZXh0bmFtZShmaWxlKSk7CgogIGxldCBkYXRhID0gc3RkLmxvYWRGaWxlKGZpbGUsICd1dGYtOCcpOwogIGxldCBzdGFydCA9IERhdGUubm93KCk7CiAgbGV0IGVuZCA9IERhdGUubm93KCk7CiAgY29uc29sZS5sb2coYHBhcnNpbmcgdG9vayAke2VuZCAtIHN0YXJ0fW1zYCk7CgogIHN0YXJ0ID0gRGF0ZS5ub3coKTsKCiAgLyogIGxldCByZXN1bHQgPSB4bWwucmVhZChkYXRhLCBmaWxlLCBmYWxzZSk7CiAgbGV0IGRvYz1uZXcgRG9jdW1lbnQocmVzdWx0WzBdKTsqLwoKICBsZXQgcGFyc2VyID0gbmV3IFBhcnNlcigpOwogIGxldCBkb2MgPSBwYXJzZXIucGFyc2VGcm9tU3RyaW5nKGRhdGEsIGZpbGUsIHsgdG9sZXJhbnQ6IHRydWUgfSk7CgogIGxldCB3YWxrZXIgPSBkb2MuY3JlYXRlVHJlZVdhbGtlcihkb2MuYm9keSk7CgogIGNvbnNvbGUubG9nKCd3YWxrZXInLCB3YWxrZXIpOwoKICBsZXQgcmF3RG9jID0gTm9kZS5yYXcoZG9jKTsKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsgcmF3RG9jLCBkb2MgfSk7CgogIC8vY29uc29sZS5sb2coJ3Jhd0RvYycsIGluc3BlY3QocmF3RG9jLCB7IGRlcHRoOiA0LCBjb21wYWN0OiBmYWxzZSB9KSk7CgogIGZzLndyaXRlRmlsZVN5bmMoJ291dHB1dC54bWwnLCB4bWwud3JpdGUocmF3RG9jKSk7CgogIGNvbnNvbGUubG9nKCdkb2MnLCBpbnNwZWN0KGRvYywgeyBkZXB0aDogNCwgY29tcGFjdDogZmFsc2UgfSkpOwoKICBsZXQgaGlzdDsKICBnbG9iYWxUaGlzLmZzID0gZnM7CgogIGxldCByZXBsID0gbmV3IFJFUEwoJ1x4MWJbMzg7Mjs4MDsyMDA7MjU1bScrcGF0aC5iYXNlbmFtZShwcm9jZXNzLmFyZ3ZbMV0sICcuanMnKS5yZXBsYWNlKC90ZXN0Xy8sICcnKSsnIFx4MWJbMG0nLCBmYWxzZSk7CiAgcmVwbC5zaG93ID0gcmVwbC5wcmludEZ1bmN0aW9uKCguLi5hcmdzKSA9PiBjb25zb2xlLmxvZyguLi5hcmdzKSk7CiAgcmVwbC5oaXN0b3J5TG9hZChoaXN0KTsKICByZXBsLnJ1bigpOwoKICBsZXQgY291bnQgPSAwOwoKICBpZigwKQogICAgUmVjdXJzZShkb2MsIChub2RlLCBzdGFjaykgPT4gewogICAgICBjb25zdCByYXcgPSBOb2RlLnJhdyhub2RlKTsKICAgICAgY291bnQrKzsKICAgICAgaWYobm9kZS5ub2RlVHlwZSAhPSBub2RlLkVMRU1FTlRfTk9ERSAmJiBub2RlLm5vZGVUeXBlICE9IG5vZGUuRE9DVU1FTlRfTk9ERSkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBpZihyYXcuY2hpbGRyZW4pIHsKICAgICAgICBsZXQgY2wgPSBub2RlLmNoaWxkcmVuOwogICAgICAgIGlmKHJhdy5jaGlsZHJlblswXSkgewogICAgICAgICAgbGV0IHkgPSBjbC5wYXRoOwogICAgICAgICAgbGV0IGVsbSA9IGNsWzBdOwogICAgICAgICAgaWYoY2wubGVuZ3RoKSB7CiAgICAgICAgICAgIGlmKGVsbSkgewogICAgICAgICAgICAgIC8qICBpZihpc09iamVjdChlbG0pICYmICd0YWdOYW1lJyBpbiBlbG0pIGNvbnNvbGUubG9nKCdlbG0nLCBlbG0udGFnTmFtZSwgZWxtLnBhdGgpOyBlbHNlICovCiAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnZWxtJywgZWxtKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICBpZihyYXcuYXR0cmlidXRlcykgewogICAgICAgIGxldCBhbCA9IG5vZGUuYXR0cmlidXRlczsKICAgICAgICBsZXQgeiA9IGFsLnBhdGg7CiAgICAgICAgbGV0IGF0ID0gYWxbT2JqZWN0LmtleXMocmF3LmF0dHJpYnV0ZXMpWzBdXTsKICAgICAgICBpZihhdCkgewogICAgICAgICAgbGV0IHggPSBhdC5wYXRoOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CgogIGZ1bmN0aW9uIFJlY3Vyc2Uobm9kZSwgZm4sIHN0YWNrID0gW10pIHsKICAgIGlmKGlzT2JqZWN0KG5vZGUpKSB7CiAgICAgIGlmKGlzT2JqZWN0KG5vZGUuY2hpbGRyZW4pKQogICAgICAgIGZvcihsZXQgY2hpbGQgb2Ygbm9kZS5jaGlsZHJlbikgewogICAgICAgICAgUmVjdXJzZShjaGlsZCwgZm4sIFsuLi5zdGFjaywgbm9kZV0pOwogICAgICAgIH0KICAgICAgaWYoaXNPYmplY3Qobm9kZS5hdHRyaWJ1dGVzKSkgewogICAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSAvKk5vZGUucmF3KG5vZGUpPy5hdHRyaWJ1dGVzID8/Ki8gbm9kZS5hdHRyaWJ1dGVzOwogICAgICAgIGZvcihsZXQgYXR0ciBvZiAvKk5vZGUucmF3KG5vZGUpLiovIGF0dHJpYnV0ZXMpIHsKICAgICAgICAgIFJlY3Vyc2UoYXR0ciwgZm4sIFsuLi5zdGFjaywgbm9kZV0pOwogICAgICAgICAgLy9jb25zb2xlLmxvZygnQXR0cicsIGF0dHIsIE5vZGUucGF0aChhdHRyKSk7CiAgICAgICAgfSAvL1JlY3Vyc2UoeyBuYW1lOiBhdHRyLCB2YWx1ZTphdHRyaWJ1dGVzW2F0dHJdLFtTeW1ib2wudG9TdHJpbmdUYWddOiAnQXR0cicsIF9fcHJvdG9fXzogQXR0ci5wcm90b3R5cGUgfSwgZm4sIFsuLi5zdGFjaywgbm9kZV0pOwogICAgICB9CiAgICB9CiAgICBmbihub2RlLCBzdGFjayk7CiAgfQogIGVuZCA9IERhdGUubm93KCk7CgogIHJlcGwucHJpbnRTdGF0dXMoYHdhbGtpbmcgdG9vayAke2VuZCAtIHN0YXJ0fW1zICgke2NvdW50fSBub2RlcylgKTsKICBzdGQuZ2MoKTsKfQoKdHJ5IHsKICBtYWluKC4uLnNjcmlwdEFyZ3Muc2xpY2UoMSkpOwp9IGNhdGNoKGVycm9yKSB7CiAgY29uc29sZS5sb2coYEZBSUw6ICR7ZXJyb3IubWVzc2FnZX1cbiR7ZXJyb3Iuc3RhY2t9YCk7CiAgc3RkLmV4aXQoMSk7Cn0KAAAAAAAAAADhEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXgAAAAAAAABeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAAgIAAAAAAAACggAAAAAAAAAAAAAuAcAAAAAAAC6BwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACAgAAAAAAAC4BwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 33505,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					23,
					3,
					"left_delete",
					null,
					"AwAAAMQxAAAAAAAAxDEAAAAAAAAsAAAAICBjb25zb2xlLmxvZygnbW9kaWZpZXInLCB7IGdzOiBncyArICcnIH0pOwrDMQAAAAAAAMMxAAAAAAAAAQAAAArCMQAAAAAAAMIxAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxDEAAAAAAADwMQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-tree-walker.c",
			"settings":
			{
				"buffer_size": 17131,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJQXAAAAAAAAlRcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlBcAAAAAAACUFwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAAJUXAAAAAAAAlhcAAAAAAAAAAAAA1BcAAAAAAADYFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlRcAAAAAAACVFwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJYXAAAAAAAAlxcAAAAAAAAAAAAAlxcAAAAAAACZFwAAAAAAAAAAAACZFwAAAAAAAJsXAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlhcAAAAAAACWFwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"paste",
					null,
					"AQAAAJsXAAAAAAAAxRcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmxcAAAAAAACbFwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMUXAAAAAAAAxhcAAAAAAAAAAAAAxhcAAAAAAADKFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxRcAAAAAAADFFwAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJsXAAAAAAAAnBcAAAAAAAAAAAAAnBcAAAAAAACgFwAAAAAAAAAAAADLFwAAAAAAAMsXAAAAAAAABAAAACAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmxcAAAAAAACbFwAAAAAAAAAAAAAAAEhA"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "JSValue"
					},
					"BwAAAJsXAAAAAAAAnBcAAAAAAAAAAAAAnBcAAAAAAACdFwAAAAAAAAAAAACdFwAAAAAAAJ4XAAAAAAAAAAAAAJ4XAAAAAAAAnxcAAAAAAAAAAAAAnxcAAAAAAACgFwAAAAAAAAAAAACgFwAAAAAAAKEXAAAAAAAAAAAAAKEXAAAAAAAAohcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmxcAAAAAAACbFwAAAAAAAAAAAAAAAEhA"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " argsw"
					},
					"BgAAAKIXAAAAAAAAoxcAAAAAAAAAAAAAoxcAAAAAAACkFwAAAAAAAAAAAACkFwAAAAAAAKUXAAAAAAAAAAAAAKUXAAAAAAAAphcAAAAAAAAAAAAAphcAAAAAAACnFwAAAAAAAAAAAACnFwAAAAAAAKgXAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAohcAAAAAAACiFwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKgXAAAAAAAAqRcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqBcAAAAAAACoFwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					2,
					"left_delete",
					null,
					"AgAAAKgXAAAAAAAAqBcAAAAAAAABAAAAIKcXAAAAAAAApxcAAAAAAAABAAAAdw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqRcAAAAAAACpFwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAKcXAAAAAAAAqBcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApxcAAAAAAACnFwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAKcXAAAAAAAApxcAAAAAAAABAAAAcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqBcAAAAAAACoFwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAKcXAAAAAAAAqRcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApxcAAAAAAACnFwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKkXAAAAAAAAqhcAAAAAAAAAAAAAqhcAAAAAAACrFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqRcAAAAAAACpFwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKsXAAAAAAAArBcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqxcAAAAAAACrFwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKwXAAAAAAAArhcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArBcAAAAAAACsFwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK0XAAAAAAAArhcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArRcAAAAAAACtFwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"right_delete",
					null,
					"AQAAAK4XAAAAAAAArhcAAAAAAAABAAAAfQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArhcAAAAAAACuFwAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "ret,"
					},
					"BAAAAK4XAAAAAAAArxcAAAAAAAAAAAAArxcAAAAAAACwFwAAAAAAAAAAAACwFwAAAAAAALEXAAAAAAAAAAAAALEXAAAAAAAAshcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArhcAAAAAAACuFwAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIXAAAAAAAAsxcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAshcAAAAAAACyFwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					5,
					"right_delete",
					null,
					"BQAAALMXAAAAAAAAsxcAAAAAAAABAAAACrMXAAAAAAAAsxcAAAAAAAABAAAAILMXAAAAAAAAsxcAAAAAAAABAAAAILMXAAAAAAAAsxcAAAAAAAABAAAAILMXAAAAAAAAsxcAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsxcAAAAAAACzFwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAN0XAAAAAAAA3hcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3RcAAAAAAADdFwAAAAAAAP///////+9/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4XAAAAAAAA3xcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3hcAAAAAAADeFwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "this_val"
					},
					"CAAAAN8XAAAAAAAA4BcAAAAAAAAAAAAA4BcAAAAAAADhFwAAAAAAAAAAAADhFwAAAAAAAOIXAAAAAAAAAAAAAOIXAAAAAAAA4xcAAAAAAAAAAAAA4xcAAAAAAADkFwAAAAAAAAAAAADkFwAAAAAAAOUXAAAAAAAAAAAAAOUXAAAAAAAA5hcAAAAAAAAAAAAA5hcAAAAAAADnFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3xcAAAAAAADfFwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " };"
					},
					"AwAAAOcXAAAAAAAA6BcAAAAAAAAAAAAA6BcAAAAAAADpFwAAAAAAAAAAAADpFwAAAAAAAOoXAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5xcAAAAAAADnFwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AgAAAB8YAAAAAAAAIBgAAAAAAAAAAAAAIBgAAAAAAAAgGAAAAAAAAAEAAAAx",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHxgAAAAAAAAgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					2,
					"left_delete",
					null,
					"AgAAACMYAAAAAAAAIxgAAAAAAAADAAAAcmV0IhgAAAAAAAAiGAAAAAAAAAEAAAAm",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIxgAAAAAAAAmGAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "ars"
					},
					"AwAAACIYAAAAAAAAIxgAAAAAAAAAAAAAIxgAAAAAAAAkGAAAAAAAAAAAAAAkGAAAAAAAACUYAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIhgAAAAAAAAiGAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"left_delete",
					null,
					"AQAAACQYAAAAAAAAJBgAAAAAAAABAAAAcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJRgAAAAAAAAlGAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "gs"
					},
					"AgAAACQYAAAAAAAAJRgAAAAAAAAAAAAAJRgAAAAAAAAmGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJBgAAAAAAAAkGAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "\nJS_FreeValue"
					},
					"DgAAACgYAAAAAAAAKRgAAAAAAAAAAAAAKRgAAAAAAAAtGAAAAAAAAAAAAAAtGAAAAAAAAC4YAAAAAAAAAAAAAC4YAAAAAAAALxgAAAAAAAAAAAAALxgAAAAAAAAwGAAAAAAAAAAAAAAwGAAAAAAAADEYAAAAAAAAAAAAADEYAAAAAAAAMhgAAAAAAAAAAAAAMhgAAAAAAAAzGAAAAAAAAAAAAAAzGAAAAAAAADQYAAAAAAAAAAAAADQYAAAAAAAANRgAAAAAAAAAAAAANRgAAAAAAAA2GAAAAAAAAAAAAAA2GAAAAAAAADcYAAAAAAAAAAAAADcYAAAAAAAAOBgAAAAAAAAAAAAAOBgAAAAAAAA5GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKBgAAAAAAAAoGAAAAAAAAP///////+9/"
				],
				[
					63,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADkYAAAAAAAAOxgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAORgAAAAAAAA5GAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAADoYAAAAAAAAOxgAAAAAAAAAAAAAOxgAAAAAAAA8GAAAAAAAAAAAAAA8GAAAAAAAAD0YAAAAAAAAAAAAAD0YAAAAAAAAPhgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOhgAAAAAAAA6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " args"
					},
					"BQAAAD4YAAAAAAAAPxgAAAAAAAAAAAAAPxgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEEYAAAAAAAAAAAAAEEYAAAAAAAAQhgAAAAAAAAAAAAAQhgAAAAAAABDGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPhgAAAAAAAA+GAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAEMYAAAAAAAARRgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQxgAAAAAAABDGAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAEQYAAAAAAAARRgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARBgAAAAAAABEGAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"left_delete",
					null,
					"AQAAAEQYAAAAAAAARBgAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARRgAAAAAAABFGAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAEQYAAAAAAAARRgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARBgAAAAAAABEGAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"left_delete",
					null,
					"AQAAAEYYAAAAAAAARhgAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARxgAAAAAAABHGAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAEYYAAAAAAAARxgAAAAAAAAAAAAARxgAAAAAAABIGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARhgAAAAAAABGGAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEgYAAAAAAAASRgAAAAAAAAAAAAASRgAAAAAAABNGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASBgAAAAAAABIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"cut",
					null,
					"AQAAACkYAAAAAAAAKRgAAAAAAAAgAAAAICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGFyZ3NbMV0pOwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKRgAAAAAAABJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					2,
					"paste",
					null,
					"AgAAACkYAAAAAAAASRgAAAAAAAAAAAAASRgAAAAAAABpGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKRgAAAAAAAApGAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AwAAAEQYAAAAAAAARRgAAAAAAAAAAAAARRgAAAAAAABFGAAAAAAAAAEAAAAxaRgAAAAAAABpGAAAAAAAAAQAAAAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARBgAAAAAAABFGAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AQAAAGgYAAAAAAAAaBgAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaRgAAAAAAABpGAAAAAAAAAAAAAAAgHZA"
				],
				[
					117,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAShgAAAAAAABKGAAAAAAAAAAAAAAAAChA"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/doc",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_treewalker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/usr/lib/gcc/x86_64-linux-gnu/11/include/stdatomic.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debug.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debug.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/flexbox-intrinsic-sizing-horiz-1-ref.json",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/usr/i686-w64-mingw32/include/io.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/Makefile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/util.es",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/readlink.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/perf_hooks.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/bnflexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stack.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/stack.js",
		"/usr/include/zlib.h",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Niji.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_mmap.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/csv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/wasmedge-quickjs/example_js/es6_module_demo/c.",
		"/home/roman/.config/sublime-text/Packages/User/Themes/ES6 Next.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_deep.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_path.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/socklen_t.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.c.structs.c"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"archive_SOURCES",
			"dbuf_vprintf",
			"memrchr",
			"rchr",
			"'\\['",
			"lastElementChild",
			"get body",
			"get path",
			"parentNode.set",
			"ownerElement.set",
			"TextCache",
			"class Text",
			"appendChild",
			"class Text",
			"createTree",
			"class Text",
			"createTextNode",
			"'raw'",
			"GetNode",
			"new Text",
			"^\\s*f*printf",
			"^\\s*console",
			"console",
			"^\\s*console",
			"GetNode",
			"NEXT_NODE",
			"createTree",
			"'walk'",
			"modifier",
			"createTree",
			"GetNode",
			"createTree",
			"new Text",
			"js_tree_walker_next",
			"Document",
			"nodeName",
			"nodeType",
			"Comment",
			"nodeType",
			"weakAssign",
			"Symbol.iterator",
			"tokenModifiers",
			"TokenList.modifiers",
			"TokenList",
			"gettersetter",
			"isFunction",
			"getter",
			"TokenList",
			"\\.i",
			"\\.i ",
			"Node.constructor",
			"inspectSymbol",
			"Node.prototype",
			"'doc'",
			"inspect",
			"js_object_tmpmark",
			"js_object_tmpmark_clear",
			"debug_xml",
			"printf",
			"xml.write",
			"ParseOpt",
			"js_array_to",
			"\"meta\"",
			"xml_write_text",
			"QUOTE",
			"parse_close",
			"parse_getc",
			"parse_close",
			"parse_getc",
			"parse_close",
			"flat",
			"//\\s*(xml_debug)",
			"xml_debug",
			"printf",
			"yield_next",
			"out->idx",
			"element =",
			"yield_",
			"yield_push",
			"yield_next",
			"element =",
			"yield_next",
			"232",
			"\"mismatch",
			"check_func",
			"fork",
			"USE_SPAWN",
			"class NodeList",
			"NodeList",
			"class Element",
			"new REPL",
			"took",
			"historySave",
			"once",
			"history",
			"inspect",
			"waitRead",
			"setReadHa",
			"function read",
			"read\\(",
			"js_readable_callback",
			"writable_unlock",
			"js_writable_(start|write|close|abort)",
			"GET_READER:",
			"\"getRead",
			"FUNC_GET_WRITER",
			"FUNC_CLOSE",
			"writable_close",
			"writable_size",
			"reader_passthrough",
			"readable_close",
			"readable_enqueue",
			"writable_write",
			"struct streamreader",
			"js_input",
			"chunk_arraybuf",
			"JS_NewObjectProtoClass",
			"READER_CLOSED",
			"readable_abort",
			"READABLE_CANCEL",
			"READABLE_CLOSE",
			"writer_abort",
			"stream_",
			"stream_lock_rd",
			"stream_unlock_..",
			"js_stream_data",
			"writable_get_writeer",
			"readable_at"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"Text.store",
			"Tokens",
			"tokenModifiers",
			"xml_debug",
			"\\1",
			"xml_debug",
			"WRITABLE_GET_WRITER",
			"WRITABLE_CLOSE",
			"struct stream_reader",
			"readable_cancel",
			"READABLE_CANCEL",
			"readable_unlock",
			"writable_get_writer",
			"writable_\\1lock",
			"READABLE_",
			"writ",
			"FUNC_CLOSE",
			"js_reader_method",
			"js_writer_method",
			"js_stream_method",
			"STREAM_LOCKED",
			"->reader",
			"\"StreamReader",
			"Reader",
			"METHOD_",
			"array",
			"funcs.array",
			"js_resolve_functions",
			"js_resolvefunctions",
			"funcs[1]",
			"funcs[0]",
			"js_resolvingfunctions_free",
			"js_resolvingfunctions_ree",
			"length",
			"Chunk",
			"loc",
			"prevLength",
			"prevOffset",
			"compact(\\1)",
			"js_location_create",
			"lexer_token(",
			"token_lex(",
			"LOCATION_PROP_CHAROFFSET",
			"loc->",
			"\\1_release",
			"token",
			"ALLOC_PTR",
			"ALLOC_BLOCK(p)",
			"ALLOC_BLOCK_SIZE",
			"",
			"const char* str\\1",
			"void* p,",
			"size_t size)",
			"JSRuntime* rt,",
			"JSContext\\* ctx,",
			";",
			" &(((struct alloc_block*)p)[-1]);",
			"add_to_list",
			"",
			"DEFINES_H",
			"int",
			"log",
			"out",
			"array_",
			"[%p]",
			"pthread_self()",
			"js_token_data2(ctx,",
			"js_lexer_data2(ctx,",
			"\\1//console",
			"inspectSymbol",
			"parent",
			"gettersetter",
			"ELEMENT_NODE",
			"parent",
			"attributes",
			"Node.prototype.",
			"\\1static \\2 = \\3;",
			"const raw = Node.raw(this);",
			"\\1.set\\(\\2\\)",
			"\\1.get\\(this\\)",
			"ownerElement.get\\(this\\)",
			"rawNode.get\\(this\\)",
			"inspectSymbol",
			"CSV",
			"\\1//",
			"args->c",
			"args->",
			"\\1//\\2",
			"METHOD_VALUES",
			"pr->",
			"property",
			"size[0]",
			"s->",
			"(sock)->",
			", s,",
			"(sock).",
			", *s,",
			"s->",
			"obj",
			"js_socket_data(",
			"obj",
			"loc",
			"YIELD_",
			"if",
			"\\1//\\2",
			"",
			"\\1//\\2",
			"js_pointer_free_func",
			"BITFIELD_SET",
			"fd",
			"misc.IN_",
			"fd",
			"wd",
			"JSValueConst\\1",
			"s",
			"queue_alloc(",
			"queue_alloc",
			"rpt",
			"js_return_",
			"tmp",
			"repeater_execute",
			"queue_item",
			"linked_item",
			"queue_",
			"rpt",
			"Repeater",
			"resolvable_item",
			"resolvable_"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4838,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
							"function_name_status_row": 25,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									61,
									77
								],
								[
									377,
									394
								],
								[
									426,
									449
								],
								[
									523,
									540
								],
								[
									578,
									595
								],
								[
									709,
									726
								],
								[
									778,
									810
								],
								[
									915,
									932
								],
								[
									1125,
									1149
								],
								[
									1184,
									1208
								],
								[
									1245,
									1269
								],
								[
									1307,
									1331
								],
								[
									1370,
									1394
								],
								[
									1568,
									1592
								],
								[
									1633,
									1657
								],
								[
									1704,
									1707
								],
								[
									1711,
									1735
								],
								[
									1798,
									1802
								],
								[
									1806,
									1830
								],
								[
									2225,
									2245
								],
								[
									3019,
									3036
								],
								[
									3081,
									3091
								],
								[
									6044,
									6068
								],
								[
									6098,
									6122
								],
								[
									6193,
									6209
								],
								[
									6242,
									6255
								],
								[
									6299,
									6319
								],
								[
									6395,
									6417
								],
								[
									6455,
									6471
								],
								[
									6560,
									6584
								],
								[
									6696,
									6720
								],
								[
									6724,
									6744
								],
								[
									6766,
									6785
								],
								[
									6896,
									6911
								],
								[
									7082,
									7097
								],
								[
									7108,
									7123
								],
								[
									7194,
									7209
								],
								[
									7212,
									7227
								],
								[
									7312,
									7327
								],
								[
									7330,
									7345
								],
								[
									7431,
									7442
								],
								[
									7554,
									7563
								],
								[
									7574,
									7588
								],
								[
									7591,
									7599
								],
								[
									7603,
									7612
								],
								[
									7627,
									7647
								],
								[
									7683,
									7697
								],
								[
									7719,
									7733
								],
								[
									7754,
									7774
								],
								[
									7781,
									7799
								],
								[
									7831,
									7844
								],
								[
									7866,
									7879
								],
								[
									7898,
									7916
								],
								[
									7952,
									7968
								],
								[
									7996,
									8009
								],
								[
									8012,
									8025
								],
								[
									8042,
									8056
								],
								[
									8076,
									8089
								],
								[
									8093,
									8109
								],
								[
									8113,
									8126
								],
								[
									8130,
									8150
								],
								[
									8157,
									8174
								],
								[
									8201,
									8214
								],
								[
									8247,
									8260
								],
								[
									8263,
									8276
								],
								[
									8345,
									8358
								],
								[
									8361,
									8374
								],
								[
									8413,
									8426
								],
								[
									8448,
									8464
								],
								[
									8535,
									8548
								],
								[
									8552,
									8572
								],
								[
									8580,
									8600
								],
								[
									8652,
									8673
								],
								[
									8762,
									8775
								],
								[
									8779,
									8793
								],
								[
									8800,
									8812
								],
								[
									8819,
									8833
								],
								[
									8918,
									8931
								],
								[
									8935,
									8952
								],
								[
									8994,
									9008
								],
								[
									9040,
									9055
								],
								[
									9062,
									9076
								],
								[
									9092,
									9105
								],
								[
									9181,
									9200
								],
								[
									9203,
									9217
								],
								[
									9291,
									9304
								],
								[
									9311,
									9322
								],
								[
									9325,
									9339
								],
								[
									9405,
									9418
								],
								[
									9422,
									9438
								],
								[
									9442,
									9457
								],
								[
									9464,
									9476
								],
								[
									9493,
									9506
								],
								[
									9510,
									9530
								],
								[
									9558,
									9570
								],
								[
									9573,
									9585
								],
								[
									9626,
									9643
								],
								[
									9670,
									9684
								],
								[
									9710,
									9723
								],
								[
									9730,
									9745
								],
								[
									9768,
									9781
								],
								[
									9805,
									9825
								],
								[
									9832,
									9845
								],
								[
									9864,
									9880
								],
								[
									9884,
									9897
								],
								[
									9919,
									9932
								],
								[
									9936,
									9950
								],
								[
									9973,
									9988
								],
								[
									10007,
									10019
								],
								[
									10022,
									10035
								],
								[
									10039,
									10059
								],
								[
									10066,
									10082
								],
								[
									10085,
									10098
								],
								[
									10102,
									10115
								],
								[
									10119,
									10139
								],
								[
									10146,
									10161
								],
								[
									10164,
									10177
								],
								[
									10181,
									10194
								],
								[
									10198,
									10218
								],
								[
									10250,
									10265
								],
								[
									10268,
									10283
								],
								[
									10353,
									10368
								],
								[
									10371,
									10386
								],
								[
									10452,
									10469
								],
								[
									10492,
									10507
								],
								[
									10510,
									10525
								],
								[
									10574,
									10586
								],
								[
									10589,
									10603
								],
								[
									10607,
									10620
								],
								[
									10627,
									10648
								],
								[
									10733,
									10753
								],
								[
									10757,
									10770
								],
								[
									10774,
									10788
								],
								[
									10796,
									10808
								],
								[
									10884,
									10896
								],
								[
									10900,
									10916
								],
								[
									10920,
									10934
								],
								[
									10942,
									10954
								],
								[
									10974,
									10994
								],
								[
									10997,
									11010
								],
								[
									11014,
									11034
								],
								[
									11148,
									11171
								],
								[
									11178,
									11193
								],
								[
									11196,
									11209
								],
								[
									11213,
									11233
								],
								[
									11240,
									11257
								],
								[
									11260,
									11280
								],
								[
									11288,
									11306
								],
								[
									11309,
									11323
								],
								[
									11327,
									11347
								],
								[
									11391,
									11406
								],
								[
									11409,
									11424
								],
								[
									11502,
									11517
								],
								[
									11520,
									11535
								],
								[
									11551,
									11563
								],
								[
									11566,
									11578
								],
								[
									11800,
									11820
								],
								[
									12227,
									12246
								],
								[
									12274,
									12293
								],
								[
									12297,
									12316
								],
								[
									12385,
									12404
								],
								[
									12515,
									12534
								],
								[
									12564,
									12583
								],
								[
									12587,
									12606
								],
								[
									12677,
									12696
								],
								[
									12816,
									12835
								],
								[
									12867,
									12886
								],
								[
									12890,
									12909
								],
								[
									12982,
									13001
								],
								[
									13144,
									13168
								],
								[
									13173,
									13178
								],
								[
									13230,
									13235
								],
								[
									13259,
									13263
								],
								[
									13305,
									13309
								],
								[
									13341,
									13345
								],
								[
									13404,
									13428
								],
								[
									13432,
									13456
								],
								[
									13469,
									13472
								],
								[
									13487,
									13491
								],
								[
									13521,
									13545
								],
								[
									13901,
									13906
								],
								[
									14338,
									14353
								],
								[
									14393,
									14407
								],
								[
									14457,
									14468
								],
								[
									14472,
									14496
								],
								[
									14536,
									14553
								],
								[
									14587,
									14614
								],
								[
									14627,
									14654
								],
								[
									14687,
									14704
								],
								[
									14767,
									14782
								],
								[
									14801,
									14810
								],
								[
									14859,
									14868
								],
								[
									14899,
									14910
								],
								[
									15041,
									15052
								],
								[
									15056,
									15070
								],
								[
									15073,
									15084
								],
								[
									15087,
									15101
								],
								[
									15128,
									15143
								],
								[
									15166,
									15177
								],
								[
									15225,
									15244
								],
								[
									15247,
									15251
								],
								[
									15271,
									15288
								],
								[
									15311,
									15325
								],
								[
									15354,
									15358
								],
								[
									15365,
									15380
								],
								[
									15400,
									15410
								],
								[
									15549,
									15562
								],
								[
									15570,
									15574
								],
								[
									15578,
									15602
								],
								[
									15712,
									15725
								],
								[
									15764,
									15788
								],
								[
									15794,
									15805
								],
								[
									15832,
									15843
								],
								[
									15869,
									15878
								],
								[
									15891,
									15895
								],
								[
									15909,
									15920
								],
								[
									15955,
									15979
								],
								[
									16009,
									16022
								],
								[
									16045,
									16069
								],
								[
									16172,
									16177
								],
								[
									16194,
									16215
								],
								[
									16277,
									16288
								],
								[
									16463,
									16474
								],
								[
									16545,
									16555
								],
								[
									16585,
									16596
								],
								[
									16612,
									16636
								],
								[
									16659,
									16679
								],
								[
									16682,
									16706
								],
								[
									16725,
									16745
								],
								[
									16771,
									16791
								],
								[
									16864,
									16883
								],
								[
									16887,
									16907
								],
								[
									16966,
									16985
								],
								[
									17003,
									17027
								],
								[
									17076,
									17087
								],
								[
									17111,
									17115
								],
								[
									17134,
									17145
								],
								[
									17172,
									17196
								],
								[
									17224,
									17233
								],
								[
									17257,
									17281
								],
								[
									17359,
									17383
								],
								[
									17427,
									17439
								],
								[
									17457,
									17468
								],
								[
									17483,
									17494
								],
								[
									17512,
									17523
								],
								[
									17541,
									17552
								],
								[
									17569,
									17580
								],
								[
									17598,
									17609
								],
								[
									17622,
									17633
								],
								[
									17654,
									17665
								],
								[
									17683,
									17694
								],
								[
									17708,
									17719
								],
								[
									17734,
									17752
								],
								[
									17768,
									17792
								],
								[
									17848,
									17860
								],
								[
									17871,
									17883
								],
								[
									17895,
									17919
								],
								[
									17953,
									17977
								],
								[
									18011,
									18029
								],
								[
									18080,
									18104
								],
								[
									18173,
									18185
								],
								[
									18261,
									18279
								],
								[
									18355,
									18371
								],
								[
									18596,
									18607
								],
								[
									18614,
									18636
								],
								[
									18640,
									18662
								],
								[
									18668,
									18679
								],
								[
									18740,
									18751
								],
								[
									18757,
									18768
								],
								[
									18977,
									18999
								],
								[
									19088,
									19107
								],
								[
									19146,
									19161
								],
								[
									19165,
									19175
								],
								[
									19213,
									19223
								],
								[
									19227,
									19231
								],
								[
									19235,
									19240
								],
								[
									19244,
									19253
								],
								[
									19334,
									19349
								],
								[
									19379,
									19401
								],
								[
									19437,
									19456
								],
								[
									19568,
									19583
								]
							],
							"symlist":
							[
								"CMAKE_C_STANDARD",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_EXECUTABLE_SUFFIX",
								"BUILD_SHARED_LIBS",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QJS",
								"CMAKE_CURRENT_BINARY_DIR",
								"QJSC",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_REQUIRED_QUIET",
								"HAVE_POSIX_SPAWNP",
								"HAVE_SPAWN",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_C_COMPILER",
								"CMAKE_SYSROOT",
								"CMAKE_TOOLCHAIN_FILE",
								"CMAKE_VERBOSE_MAKEFILE",
								"CMAKE_BUILD_TYPE",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QUICKJS_INCLUDE_DIRS",
								"QUICKJS_LIBRARY_DIR",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"LIB_MODULES",
								"QUICKJS_H",
								"COMMON_HEADERS",
								"CUTILS_H",
								"QUICKJS_H",
								"  buffer_utils_SOURCES",
								"COMMON_SOURCES",
								"  vector_SOURCES",
								"  buffer_utils_SOURCES",
								"  char_utils_SOURCES",
								"  queue_SOURCES",
								"  utils_SOURCES",
								"  char_utils_SOURCES",
								"  js_utils_SOURCES",
								"  utils_SOURCES",
								"  utils_SOURCES",
								"  stream_SOURCES",
								"  queue_SOURCES",
								"  js_utils_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  predicate_SOURCES",
								"  utils_SOURCES",
								"  utils_SOURCES",
								"  utils_SOURCES",
								"  utils_SOURCES",
								"  utils_SOURCES",
								"  token_SOURCES",
								"  location_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  syscallerror_SOURCES",
								"  child_process_SOURCES",
								"  utils_SOURCES",
								"  vector_SOURCES",
								"  deep_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  predicate_SOURCES",
								"  deep_LIBRARIES",
								"  inspect_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  tree_walker_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  xml_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  location_SOURCES",
								"  inspect_SOURCES",
								"  path_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  path_SOURCES",
								"  path_SOURCES",
								"  predicate_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  pointer_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  lexer_SOURCES",
								"  location_SOURCES",
								"  token_SOURCES",
								"  utils_SOURCES",
								"  vector_SOURCES",
								"  lexer_LIBRARIES",
								"  mmap_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  repeater_SOURCES",
								"  queue_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  sockets_SOURCES",
								"  queue_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  sockets_SOURCES",
								"  sockets_SOURCES",
								"  sockets_SOURCES",
								"  sockets_SOURCES",
								"  sockets_LIBRARIES",
								"  sockets_SOURCES",
								"  sockets_SOURCES",
								"  blob_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  stringdecoder_SOURCES",
								"  buffer_utils_SOURCES",
								"  utils_SOURCES",
								"  vector_SOURCES",
								"  misc_SOURCES",
								"  path_SOURCES",
								"  location_SOURCES",
								"  vector_SOURCES",
								"  gpio_SOURCES",
								"  syscallerror_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"LibArchive_INCLUDE_DIRS",
								"  archive_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  archive_LIBRARIES",
								"LibArchive_LIBRARIES",
								"QJSM_EXTRA_SOURCES",
								"  vector_SOURCES",
								"  buffer_utils_SOURCES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"  mmap_SOURCES",
								"  mmap_SOURCES",
								"CMAKE_REQUIRED_QUIET",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_CURRENT_SOURCE_DIR",
								"TESTS",
								"TESTS",
								"TEST",
								"BASE",
								"BASE",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_BINARY_DIR",
								"QJS",
								"TEST",
								"CMAKE_CURRENT_SOURCE_DIR",
								"TESTS",
								"QUICKJS_MODULES",
								"SHARED_TARGETS",
								"QJSM_LIBDIR",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_IMPORT_LIBRARY_PREFIX",
								"CMAKE_IMPORT_LIBRARY_SUFFIX",
								"CMAKE_SYSTEM_NAME",
								"QUICKJS_MODULES",
								"JS_MODULE",
								"JS_MODULE",
								"QJSM_MODULE",
								"QJSM_LIBDIR",
								"LIBRARY_PREFIX",
								"QJSM_MODULE",
								"LIBRARY_SUFFIX",
								"QUICKJS_MODULES",
								"QJSM_LIBDIR",
								"  predicate_LIBRARIES",
								"LIBM",
								"  sockets_LIBRARIES",
								"  deep_LIBRARIES",
								"LIBM",
								"  lexer_LIBRARIES",
								"  lexer_DEPS",
								"TESTS_SOURCES",
								"QJSM",
								"CMAKE_CURRENT_BINARY_DIR",
								"TESTS_SOURCES",
								"CMAKE_CURRENT_SOURCE_DIR",
								"TEST_SOURCE",
								"TEST_SOURCE",
								"TEST_NAME",
								"QJSM",
								"TEST_SOURCE",
								"CMAKE_CURRENT_SOURCE_DIR",
								"TESTS_SOURCES",
								"CMAKE_CURRENT_SOURCE_DIR",
								"LIBJS",
								"QUICKJS_JS_MODULE_DIR",
								"LIB_MODULES",
								"LIB_MODULES",
								"LIB_MODULE",
								"LIB_MODULES",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QUICKJS_SOURCES_ROOT",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QUICKJS_SOURCES_ROOT",
								"QUICKJS_SOURCES_ROOT",
								"QUICKJS_INCLUDE_DIR",
								"QUICKJS_SOURCES_ROOT",
								"QUICKJS_INCLUDE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"MODULES_DIR",
								"QJSC",
								"MODULES_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QJSC_DEPS",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QJSM_SOURCES",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"QJSM_EXTRA_SOURCES",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QJSM_SOURCES",
								"QJSM_SOURCES",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"TRANSPORT_PLATFORM",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QJSM_SOURCES",
								"QJS_MODULES_STATIC",
								"COMPILED_MODULES",
								"QJSM_LIBDIR",
								"CMAKE_EXE_LINKER_FLAGS",
								"CMAKE_EXE_LINKER_FLAGS",
								"QJSM_LIBDIR",
								"LINK_EXPORT",
								"QJSM_LIBDIR",
								"QUICKJS_INSTALL_PREFIX",
								"QUICKJS_LIBRARY_DIR",
								"QUICKJS_LIBRARY",
								"QJSM_LDADD",
								"LIBPTHREAD",
								"LIBM",
								"LIBDL",
								"LIBWS2_32",
								"QUICKJS_VERSION",
								"QUICKJS_INSTALL_PREFIX",
								"QUICKJS_MODULE_PATH",
								"INSTALL_SCRIPTS"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1645093809.41,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/dom.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26330,
						"regions":
						{
							"col_0000DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										20038,
										20048
									]
								],
								"scope": "col_0000DDFF"
							},
							"col_0000DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000DDFF_circle.png",
								"regions":
								[
									[
										20009,
										20009
									]
								],
								"scope": "col_gutter"
							},
							"col_00DDDDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										12589,
										12599
									]
								],
								"scope": "col_00DDDDFF"
							},
							"col_00DDDDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DDDDFF_circle.png",
								"regions":
								[
									[
										12554,
										12554
									]
								],
								"scope": "col_gutter"
							},
							"col_7070FCFF":
							{
								"flags": 16,
								"regions":
								[
									[
										25094,
										25116
									],
									[
										25499,
										25521
									]
								],
								"scope": "col_7070FCFF"
							},
							"col_7070FCFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7070FCFF_circle.png",
								"regions":
								[
									[
										25077,
										25077
									],
									[
										25480,
										25480
									]
								],
								"scope": "col_gutter"
							},
							"col_B800EAFF":
							{
								"flags": 16,
								"regions":
								[
									[
										22047,
										22067
									]
								],
								"scope": "col_B800EAFF"
							},
							"col_B800EAFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_B800EAFF_circle.png",
								"regions":
								[
									[
										22027,
										22027
									]
								],
								"scope": "col_gutter"
							},
							"col_DD0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										5905,
										5915
									],
									[
										18813,
										18823
									],
									[
										21058,
										21068
									]
								],
								"scope": "col_DD0000FF"
							},
							"col_DD0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD0000FF_circle.png",
								"regions":
								[
									[
										5893,
										5893
									],
									[
										18801,
										18801
									],
									[
										21046,
										21046
									]
								],
								"scope": "col_gutter"
							},
							"col_DD00DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										12567,
										12577
									],
									[
										20021,
										20031
									]
								],
								"scope": "col_DD00DDFF"
							},
							"col_DD00DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD00DDFF_circle.png",
								"regions":
								[
									[
										12554,
										12554
									],
									[
										20009,
										20009
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								10136,
								10136
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 382,
							"rulers":
							[
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1645130022.92,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": false,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 6615.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "buffer-utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8859,
						"regions":
						{
						},
						"selection":
						[
							[
								347,
								350
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 20,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1645137153.41,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "char-utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9037,
						"regions":
						{
						},
						"selection":
						[
							[
								4258,
								4258
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 115,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1645138648.25,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1698.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "path.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14395,
						"regions":
						{
						},
						"selection":
						[
							[
								10296,
								10296
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 520,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1645138959.84,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9051.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64393,
						"regions":
						{
						},
						"selection":
						[
							[
								54678,
								54690
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2105,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1645138990.25,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 39580.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "CMakeLists.txt",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19704,
						"regions":
						{
						},
						"selection":
						[
							[
								11234,
								11234
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": -1,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1645152359.91,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5988.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "tests/test_dom.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4325,
						"regions":
						{
							"col_50C8FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2398,
										2419
									]
								],
								"scope": "col_50C8FFFF"
							},
							"col_50C8FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_50C8FFFF_circle.png",
								"regions":
								[
									[
										2393,
										2393
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								2040,
								2041
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 81,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1645098597.78,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1124.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33505,
						"regions":
						{
						},
						"selection":
						[
							[
								24825,
								24846
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 881,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1645090290.03,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 20734.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "quickjs-tree-walker.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17131,
						"regions":
						{
						},
						"selection":
						[
							[
								4850,
								4850
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 182,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1645090289.56,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3982.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.70781882123,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139700989780224)":
	{
		"height": 0.0
	},
	"output.Protocol(139713493134064)":
	{
		"height": 0.0
	},
	"output.Protocol(140020109919472)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752673856)":
	{
		"height": 0.0
	},
	"output.Protocol(140156677514432)":
	{
		"height": 0.0
	},
	"output.Protocol(140190208797904)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873537696)":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"path.c",
				"path.c"
			],
			[
				"char-ut",
				"char-utils.h"
			],
			[
				"buff",
				"buffer-utils.h"
			],
			[
				"test_dom",
				"tests/test_dom.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"location",
				"location.c"
			],
			[
				"quickjs-child",
				"quickjs-child-process.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"CMakeLi",
				"CMakeLists.txt"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"js-u",
				"js-utils.h"
			],
			[
				"defines.h",
				"defines.h"
			],
			[
				"queue.c",
				"queue.c"
			],
			[
				"extend",
				"lib/extendArray.js"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"quickjs-sockets",
				"quickjs-sockets.c"
			],
			[
				"lexer",
				"quickjs-lexer.c"
			],
			[
				"buffer-ut",
				"buffer-utils.h"
			],
			[
				"ringbuf",
				"ringbuffer.h"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"debug.h",
				"debug.h"
			],
			[
				"debug.c",
				"debug.c"
			],
			[
				"quickjs-lexer.c",
				"quickjs-lexer.c"
			],
			[
				"quickjs-loc",
				"quickjs-location.c"
			],
			[
				"xml.c",
				"quickjs-xml.c"
			],
			[
				"test-dia",
				"build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"resol",
				"resolve-imports.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"quickjs-mis",
				"quickjs-misc.c"
			],
			[
				"location.c",
				"quickjs-location.c"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"extra",
				"extract-structs.js"
			],
			[
				"-inspe",
				"quickjs-inspect.c"
			],
			[
				"proper",
				"property-enumeration.h"
			],
			[
				"vector",
				"vector.h"
			],
			[
				"dom.j",
				"lib/dom.js"
			],
			[
				"res",
				"resolve-imports.js"
			],
			[
				"lexre",
				"lexer.c"
			],
			[
				"lexer.c",
				"quickjs-lexer.c"
			],
			[
				"pointer",
				"pointer.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"archive",
				"quickjs-archive.c"
			],
			[
				"pointer.c",
				"quickjs-pointer.c"
			],
			[
				"spect.c",
				"quickjs-inspect.c"
			],
			[
				"blob.c",
				"quickjs-blob.c"
			],
			[
				"repea",
				"quickjs-repeater.c"
			],
			[
				"loca",
				"quickjs-location.c"
			],
			[
				"bjson.c",
				"quickjs-bjson.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"char-u",
				"char-utils.h"
			],
			[
				"buffer",
				"buffer-utils.h"
			],
			[
				"predi",
				"predicate.h"
			],
			[
				"virtua",
				"virtual-properties.c"
			],
			[
				"pointre",
				"pointer.c"
			],
			[
				"deep.c",
				"quickjs-deep.c"
			],
			[
				"child-",
				"child-process.c"
			],
			[
				"child-pro",
				"quickjs-child-process.c"
			],
			[
				"gpio.c",
				"quickjs-gpio.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"ointer.h",
				"pointer.h"
			],
			[
				"defin",
				"defines.h"
			],
			[
				"defines",
				"defines.h"
			],
			[
				"cutils.h",
				"char-utils.h"
			],
			[
				"debu",
				"debug.h"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"test_le",
				"tests/test_lexer.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"test",
				"tests/test_stack.js"
			],
			[
				"jsutils",
				"CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d"
			],
			[
				"jslexe",
				"lib/jslexer.js"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"xpath.j",
				"lib/xpath.js"
			],
			[
				"predicate.h",
				"predicate.h"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"list.h",
				"~/Projects/plot-cv/quickjs/list.h"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"queue",
				"queue.c"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"test_wa",
				"tests/test_watch.js"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"tree-wa",
				"quickjs-tree-walker.c"
			],
			[
				"quick",
				"quickjs-xml.c"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"cmakelis",
				"CMakeLists.txt"
			],
			[
				"",
				"tests/test_xml.js"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"doxy",
				"Doxyfile"
			],
			[
				"Doxyfile",
				"Doxyfile"
			],
			[
				"interna",
				"quickjs-internal.h"
			],
			[
				"console.js",
				"lib/console.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"child",
				"child-process.c"
			],
			[
				"qsort_r",
				"qsort_r.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"quicksj-misc",
				"quickjs-misc.c"
			],
			[
				"process.js",
				"lib/process.js"
			],
			[
				"quickjs-mm",
				"quickjs-mmap.c"
			],
			[
				"quickjs-m",
				"quickjs-misc.c"
			],
			[
				"redicate.c",
				"predicate.c"
			],
			[
				"sockets.h",
				"quickjs-sockets.h"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"char-",
				"char-utils.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 294.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
