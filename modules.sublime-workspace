{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"JS_Thr",
				"JS_ThrowOutOfMemory"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"js_sys",
				"js_syscallerror_data"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"JS_New",
				"JS_NewInt32"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					295,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11514,
								11549
							],
							[
								11592,
								11610
							],
							[
								11799,
								11820
							],
							[
								11844,
								11854
							],
							[
								11893,
								11923
							],
							[
								12212,
								12246
							],
							[
								12561,
								12595
							],
							[
								12865,
								12882
							],
							[
								12883,
								12892
							],
							[
								12946,
								12963
							],
							[
								12964,
								12973
							],
							[
								13035,
								13052
							],
							[
								13053,
								13076
							],
							[
								13134,
								13158
							],
							[
								15785,
								15813
							],
							[
								16439,
								16452
							],
							[
								16768,
								16780
							],
							[
								17043,
								17056
							],
							[
								17161,
								17175
							],
							[
								18062,
								18090
							],
							[
								18206,
								18219
							],
							[
								18331,
								18357
							],
							[
								19052,
								19114
							],
							[
								19148,
								19217
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAFAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQFAAAgIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGlzR2VuZXJhdG9yT2JqZWN0KHYpCiAgaXNUeXBlZEFycmF5KHYpCiAgaXNNb2R1bGVOYW1lc3BhY2VPYmplY3QodikKICBpc09iamVjdCh2KQogIGhhc0J1aWx0SW4obywgbSkKICBmb3JtYXQoLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9ucyhvcHRzLCAuLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zSW50ZXJuYWwobywgdikKICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBzZXRJbnRlcnZhbChjYWxsYmFjaywgbXMpCiAgc3RhcnQoKQogIGNsZWFySW50ZXJ2YWwoaWQpCiAgbWVtb2l6ZShmbikKICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCglmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBnZXRBbnNpU3R5bGVzKCkKICByYW5kSW50KC4uLmFyZ3MpAAAAAAAAAAAUBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					296,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11514,
								11549
							],
							[
								11587,
								11605
							],
							[
								11794,
								11815
							],
							[
								11839,
								11849
							],
							[
								11888,
								11918
							],
							[
								12207,
								12241
							],
							[
								12556,
								12590
							],
							[
								12860,
								12877
							],
							[
								12878,
								12887
							],
							[
								12941,
								12958
							],
							[
								12959,
								12968
							],
							[
								13030,
								13047
							],
							[
								13048,
								13071
							],
							[
								13129,
								13153
							],
							[
								15780,
								15808
							],
							[
								16434,
								16447
							],
							[
								16763,
								16775
							],
							[
								17038,
								17051
							],
							[
								17156,
								17170
							],
							[
								18057,
								18085
							],
							[
								18201,
								18214
							],
							[
								18326,
								18352
							],
							[
								19047,
								19109
							],
							[
								19143,
								19212
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAFAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQFAAAgIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGlzR2VuZXJhdG9yT2JqZWN0KHYpCiAgaXNUeXBlZEFycmF5KHYpCiAgaXNNb2R1bGVOYW1lc3BhY2VPYmplY3QodikKICBpc09iamVjdCh2KQogIGhhc0J1aWx0SW4obywgbSkKICBmb3JtYXQoLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9ucyhvcHRzLCAuLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zSW50ZXJuYWwobywgdikKICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBzZXRJbnRlcnZhbChjYWxsYmFjaywgbXMpCiAgc3RhcnQoKQogIGNsZWFySW50ZXJ2YWwoaWQpCiAgbWVtb2l6ZShmbikKICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCglmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBnZXRBbnNpU3R5bGVzKCkKICByYW5kSW50KC4uLmFyZ3MpAAAAAAAAAAAUBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					297,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11514,
								11549
							],
							[
								11587,
								11600
							],
							[
								11789,
								11810
							],
							[
								11834,
								11844
							],
							[
								11883,
								11913
							],
							[
								12202,
								12236
							],
							[
								12551,
								12585
							],
							[
								12855,
								12872
							],
							[
								12873,
								12882
							],
							[
								12936,
								12953
							],
							[
								12954,
								12963
							],
							[
								13025,
								13042
							],
							[
								13043,
								13066
							],
							[
								13124,
								13148
							],
							[
								15775,
								15803
							],
							[
								16429,
								16442
							],
							[
								16758,
								16770
							],
							[
								17033,
								17046
							],
							[
								17151,
								17165
							],
							[
								18052,
								18080
							],
							[
								18196,
								18209
							],
							[
								18321,
								18347
							],
							[
								19042,
								19104
							],
							[
								19138,
								19207
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" (...args) =>",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAAQUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					298,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11514,
								11549
							],
							[
								11587,
								11605
							],
							[
								11794,
								11815
							],
							[
								11839,
								11849
							],
							[
								11888,
								11918
							],
							[
								12207,
								12241
							],
							[
								12556,
								12590
							],
							[
								12860,
								12877
							],
							[
								12878,
								12887
							],
							[
								12941,
								12958
							],
							[
								12959,
								12968
							],
							[
								13030,
								13047
							],
							[
								13048,
								13071
							],
							[
								13129,
								13153
							],
							[
								15780,
								15808
							],
							[
								16434,
								16447
							],
							[
								16763,
								16775
							],
							[
								17038,
								17051
							],
							[
								17156,
								17170
							],
							[
								18057,
								18085
							],
							[
								18201,
								18214
							],
							[
								18326,
								18352
							],
							[
								19047,
								19109
							],
							[
								19143,
								19212
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAABBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQogIHdhaXRGb3IobXMpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBnZXRBbnNpU3R5bGVzKCkKICByYW5kSW50KC4uLmFyZ3MpAAAAAAAAAAAUBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAUAACAgdXRpbCgpCkFzeW5jRnVuY3Rpb24gPSBmdW5jdGlvbiB4KCkKR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKICBmdW5jdGlvbiooKQogIGlzQW55QXJyYXlCdWZmZXIodikKICBpc0FycmF5QnVmZmVyKHYpCiAgaXNCaWdJbnQ2NEFycmF5KHYpCiAgaXNCaWdVaW50NjRBcnJheSh2KQogIGlzRGF0ZSh2KQogIGlzRmxvYXQzMkFycmF5KHYpCiAgaXNGbG9hdDY0QXJyYXkodikKICBpc0ludDhBcnJheSh2KQogIGlzSW50MTZBcnJheSh2KQogIGlzSW50MzJBcnJheSh2KQogIGlzTWFwKHYpCiAgaXNQcm9taXNlKHYpCiAgaXNQcm94eSh2KQogIGlzUmVnRXhwKHYpCiAgaXNTZXQodikKICBpc1NoYXJlZEFycmF5QnVmZmVyKHYpCiAgaXNVaW50OEFycmF5KHYpCiAgaXNVaW50OENsYW1wZWRBcnJheSh2KQogIGlzVWludDE2QXJyYXkodikKICBpc1VpbnQzMkFycmF5KHYpCiAgaXNXZWFrTWFwKHYpCiAgaXNXZWFrU2V0KHYpCiAgaXNEYXRhVmlldyh2KQogIGlzQm9vbGVhbk9iamVjdCh2KQogIGlzQXN5bmNGdW5jdGlvbih2KQogIGlzR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc051bWJlck9iamVjdCh2KQogIGlzQmlnSW50T2JqZWN0KHYpCiAgaXNTeW1ib2xPYmplY3QodikKICBpc05hdGl2ZUVycm9yKHYpCiAgaXNNYXBJdGVyYXRvcih2KQogIGlzU2V0SXRlcmF0b3IodikKICBpc1N0cmluZ09iamVjdCh2KQogIGlzQXJyYXlCdWZmZXJWaWV3KHYpCiAgaXNBcmd1bWVudHNPYmplY3QodikKICBpc0JveGVkUHJpbWl0aXZlKHYpCiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKCWZ1bmN0aW9uKC4uLmFyZ3MpCiAgd2FpdEZvcihtcykKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHdlYWtBc3NpZ24ob2JqLCAuLi5hcmdzKQogIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKQogIGdldEFuc2lTdHlsZXMoKQogIHJhbmRJbnQoLi4uYXJncykAAAAAAAAAABQFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					299,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11514,
								11549
							],
							[
								11587,
								11605
							],
							[
								11795,
								11816
							],
							[
								11840,
								11850
							],
							[
								11889,
								11919
							],
							[
								12208,
								12242
							],
							[
								12557,
								12591
							],
							[
								12861,
								12878
							],
							[
								12879,
								12888
							],
							[
								12942,
								12959
							],
							[
								12960,
								12969
							],
							[
								13031,
								13048
							],
							[
								13049,
								13072
							],
							[
								13130,
								13154
							],
							[
								15781,
								15809
							],
							[
								16435,
								16448
							],
							[
								16764,
								16776
							],
							[
								17039,
								17052
							],
							[
								17157,
								17171
							],
							[
								18058,
								18086
							],
							[
								18202,
								18215
							],
							[
								18327,
								18353
							],
							[
								19048,
								19110
							],
							[
								19144,
								19213
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAFAUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					300,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11514,
								11549
							],
							[
								11587,
								11605
							],
							[
								11792,
								11813
							],
							[
								11837,
								11847
							],
							[
								11886,
								11916
							],
							[
								12205,
								12239
							],
							[
								12554,
								12588
							],
							[
								12858,
								12875
							],
							[
								12876,
								12885
							],
							[
								12939,
								12956
							],
							[
								12957,
								12966
							],
							[
								13028,
								13045
							],
							[
								13046,
								13069
							],
							[
								13127,
								13151
							],
							[
								15778,
								15806
							],
							[
								16432,
								16445
							],
							[
								16761,
								16773
							],
							[
								17036,
								17049
							],
							[
								17154,
								17168
							],
							[
								18055,
								18083
							],
							[
								18199,
								18212
							],
							[
								18324,
								18350
							],
							[
								19045,
								19107
							],
							[
								19141,
								19210
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAFAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQFAAAgIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGlzR2VuZXJhdG9yT2JqZWN0KHYpCiAgaXNUeXBlZEFycmF5KHYpCiAgaXNNb2R1bGVOYW1lc3BhY2VPYmplY3QodikKICBpc09iamVjdCh2KQogIGhhc0J1aWx0SW4obywgbSkKICBmb3JtYXQoLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9ucyhvcHRzLCAuLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zSW50ZXJuYWwobywgdikKICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBzZXRJbnRlcnZhbChjYWxsYmFjaywgbXMpCiAgc3RhcnQoKQogIGNsZWFySW50ZXJ2YWwoaWQpCiAgbWVtb2l6ZShmbikKICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCglmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBnZXRBbnNpU3R5bGVzKCkKICByYW5kSW50KC4uLmFyZ3MpAAAAAAAAAAAUBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					301,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11515,
								11550
							],
							[
								11588,
								11606
							],
							[
								11794,
								11815
							],
							[
								11839,
								11849
							],
							[
								11888,
								11918
							],
							[
								12207,
								12241
							],
							[
								12556,
								12590
							],
							[
								12860,
								12877
							],
							[
								12878,
								12887
							],
							[
								12941,
								12958
							],
							[
								12959,
								12968
							],
							[
								13030,
								13047
							],
							[
								13048,
								13071
							],
							[
								13129,
								13153
							],
							[
								15780,
								15808
							],
							[
								16434,
								16447
							],
							[
								16763,
								16775
							],
							[
								17038,
								17051
							],
							[
								17156,
								17170
							],
							[
								18057,
								18085
							],
							[
								18201,
								18214
							],
							[
								18326,
								18352
							],
							[
								19047,
								19109
							],
							[
								19143,
								19212
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAFAUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					302,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					303,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11515,
								11550
							],
							[
								11588,
								11606
							],
							[
								11794,
								11815
							],
							[
								11839,
								11849
							],
							[
								11888,
								11918
							],
							[
								12207,
								12241
							],
							[
								12556,
								12590
							],
							[
								12860,
								12877
							],
							[
								12878,
								12887
							],
							[
								12941,
								12958
							],
							[
								12959,
								12968
							],
							[
								13030,
								13047
							],
							[
								13048,
								13071
							],
							[
								13129,
								13153
							],
							[
								15780,
								15808
							],
							[
								16434,
								16447
							],
							[
								16763,
								16775
							],
							[
								17038,
								17051
							],
							[
								17156,
								17170
							],
							[
								18057,
								18085
							],
							[
								18201,
								18214
							],
							[
								18326,
								18352
							],
							[
								19047,
								19109
							],
							[
								19143,
								19212
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AQAAAAAAAAAAAAAAFAUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					304,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11515,
								11550
							],
							[
								11588,
								11606
							],
							[
								11794,
								11815
							],
							[
								11839,
								11849
							],
							[
								11888,
								11918
							],
							[
								12207,
								12241
							],
							[
								12556,
								12590
							],
							[
								12860,
								12877
							],
							[
								12878,
								12887
							],
							[
								12941,
								12958
							],
							[
								12959,
								12968
							],
							[
								13030,
								13047
							],
							[
								13048,
								13071
							],
							[
								13129,
								13153
							],
							[
								15780,
								15808
							],
							[
								16434,
								16447
							],
							[
								16763,
								16775
							],
							[
								17038,
								17051
							],
							[
								17156,
								17170
							],
							[
								18057,
								18085
							],
							[
								18201,
								18214
							],
							[
								18326,
								18352
							],
							[
								19065,
								19127
							],
							[
								19161,
								19230
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAFAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQFAAAgIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGlzR2VuZXJhdG9yT2JqZWN0KHYpCiAgaXNUeXBlZEFycmF5KHYpCiAgaXNNb2R1bGVOYW1lc3BhY2VPYmplY3QodikKICBpc09iamVjdCh2KQogIGhhc0J1aWx0SW4obywgbSkKICBmb3JtYXQoLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9ucyhvcHRzLCAuLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zSW50ZXJuYWwobywgdikKICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBzZXRJbnRlcnZhbChjYWxsYmFjaywgbXMpCiAgc3RhcnQoKQogIGNsZWFySW50ZXJ2YWwoaWQpCiAgbWVtb2l6ZShmbikKICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCglmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBnZXRBbnNpU3R5bGVzKCkKICByYW5kSW50KC4uLmFyZ3MpAAAAAAAAAAAUBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					305,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								297,
								300
							],
							[
								339,
								342
							],
							[
								725,
								744
							],
							[
								772,
								786
							],
							[
								899,
								913
							],
							[
								1222,
								1234
							],
							[
								1298,
								1314
							],
							[
								1382,
								1415
							],
							[
								3957,
								3966
							],
							[
								4080,
								4090
							],
							[
								4265,
								4286
							],
							[
								4367,
								4386
							],
							[
								4518,
								4542
							],
							[
								4681,
								4693
							],
							[
								4734,
								4746
							],
							[
								4769,
								4786
							],
							[
								5755,
								5767
							],
							[
								5784,
								5804
							],
							[
								5951,
								5978
							],
							[
								7291,
								7310
							],
							[
								8213,
								8234
							],
							[
								8380,
								8400
							],
							[
								8906,
								8928
							],
							[
								9411,
								9434
							],
							[
								10357,
								10376
							],
							[
								11973,
								11998
							],
							[
								12338,
								12354
							],
							[
								13004,
								13021
							],
							[
								13553,
								13574
							],
							[
								14092,
								14114
							],
							[
								14783,
								14808
							],
							[
								15578,
								15603
							],
							[
								16277,
								16306
							],
							[
								16545,
								16561
							],
							[
								17485,
								17501
							],
							[
								18591,
								18616
							],
							[
								19032,
								19046
							],
							[
								19854,
								19869
							],
							[
								20340,
								20353
							],
							[
								20947,
								20959
							],
							[
								21366,
								21378
							],
							[
								21794,
								21814
							],
							[
								22544,
								22564
							],
							[
								22903,
								22922
							],
							[
								23142,
								23154
							],
							[
								25058,
								25075
							],
							[
								25673,
								25691
							],
							[
								26783,
								26803
							],
							[
								27264,
								27285
							],
							[
								27759,
								27774
							],
							[
								28342,
								28362
							],
							[
								28814,
								28826
							],
							[
								29532,
								29547
							],
							[
								31050,
								31075
							],
							[
								31614,
								31639
							],
							[
								32817,
								32831
							],
							[
								37476,
								37488
							],
							[
								38554,
								38568
							],
							[
								38598,
								38612
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓜ– max ( ) … — macro function",
							"—Ⓜ– min ( ) … — macro function",
							"—Ⓒ– pcg_state_setseq_64 { … } ; — type",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– get_error ( ) { … } — function",
							"—Ⓕ– find_error ( ) { … } — function",
							"—Ⓕ– js_bytecode_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓒ– OffsetLength { … } ; — type",
							" Ⓣ  OffsetLength ; — typedef",
							"—Ⓕ– get_offset_length ( ) { … } — function",
							" Ⓣ  SyscallError ; — typedef",
							"—Ⓕ– js_syscallerror_data ( ) { … } — function",
							"—Ⓕ– js_syscallerror_constructor ( ) { … } — function",
							"—Ⓕ– js_syscallerror_new ( ) { … } — function",
							"—Ⓕ– js_syscallerror_throw ( ) { … } — function",
							"—Ⓕ– js_syscallerror_dump ( ) { … } — function",
							"—Ⓕ– js_syscallerror_method ( ) { … } — function",
							"—Ⓕ– js_syscallerror_inspect ( ) { … } — function",
							"—Ⓕ– js_syscallerror_get ( ) { … } — function",
							"—Ⓕ– js_syscallerror_finalizer ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concatarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile_file ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield_to_array ( ) { … } — function",
							"—Ⓕ– js_misc_array_to_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAAAoAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					306,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11515,
								11550
							],
							[
								11588,
								11606
							],
							[
								11794,
								11815
							],
							[
								11839,
								11849
							],
							[
								11888,
								11918
							],
							[
								12207,
								12241
							],
							[
								12556,
								12590
							],
							[
								12860,
								12877
							],
							[
								12878,
								12887
							],
							[
								12941,
								12958
							],
							[
								12959,
								12968
							],
							[
								13030,
								13047
							],
							[
								13048,
								13071
							],
							[
								13129,
								13153
							],
							[
								15780,
								15808
							],
							[
								16434,
								16447
							],
							[
								16763,
								16775
							],
							[
								17038,
								17051
							],
							[
								17156,
								17170
							],
							[
								18057,
								18085
							],
							[
								18201,
								18214
							],
							[
								18326,
								18352
							],
							[
								19065,
								19127
							],
							[
								19161,
								19230
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA6DAAACeKTgiAgX0dOVV9TT1VSQ0Ug4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pOC4oCTIG1heCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgbWluICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSuOKAkyBwY2dfc3RhdGVfc2V0c2VxXzY0IHsg4oCmIH0gOyDigJQgdHlwZQoJ4pOJICBwY2czMl9yYW5kb21fdCA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBwY2czMl9yYW5kb21fciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHBjZzMyX3JhbmRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHBjZzMyX2luaXRfc3RhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9yYW5kb21fYm91bmRlZF9kaXZpc2lvbmxlc3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZXRfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmaW5kX2Vycm9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnl0ZWNvZGVfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RyaW5nX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2FycmF5YnVmZmVyX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK44oCTIE9mZnNldExlbmd0aCB7IOKApiB9IDsg4oCUIHR5cGUKCeKTiSAgT2Zmc2V0TGVuZ3RoIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGdldF9vZmZzZXRfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgoJ4pOJICBTeXNjYWxsRXJyb3IgOyDigJQgdHlwZWRlZgrigJTikrvigJMganNfc3lzY2FsbGVycm9yX2RhdGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3lzY2FsbGVycm9yX3Rocm93ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3lzY2FsbGVycm9yX2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfbWV0aG9kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3lzY2FsbGVycm9yX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3lzY2FsbGVycm9yX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3RvcG9pbnRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZHVwYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb25jYXRhcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0cGVyZm9ybWFuY2Vjb3VudGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19wcm9jbGluayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfcHJvY3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2dldHByb3RvdHlwZWNoYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19ocnRpbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ZubWF0Y2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3VuYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19idG9hICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9iICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb21waWxlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3dyaXRlX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfcmVhZF9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2dldHggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3ZhbHVldHlwZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXZhbGJpbmFyeSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlX2FycmF5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19vcGNvZGVfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19vcGNvZGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXRfYnl0ZWNvZGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2F0b20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2NsYXNzaWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2JpdGZpZWxkX3RvX2FycmF5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hcnJheV90b19iaXRmaWVsZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfcmFuZG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgoJ4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAAAAAAAAAAAFAUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					307,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11515,
								11550
							],
							[
								11588,
								11606
							],
							[
								11794,
								11815
							],
							[
								11839,
								11849
							],
							[
								11888,
								11918
							],
							[
								12207,
								12241
							],
							[
								12556,
								12590
							],
							[
								12860,
								12877
							],
							[
								12878,
								12887
							],
							[
								12941,
								12958
							],
							[
								12959,
								12968
							],
							[
								13030,
								13047
							],
							[
								13048,
								13071
							],
							[
								13129,
								13153
							],
							[
								15780,
								15808
							],
							[
								16434,
								16447
							],
							[
								16763,
								16775
							],
							[
								17038,
								17051
							],
							[
								17156,
								17170
							],
							[
								18057,
								18085
							],
							[
								18201,
								18214
							],
							[
								18326,
								18352
							],
							[
								19065,
								19127
							],
							[
								19161,
								19230
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAFAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQFAAAgIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGlzR2VuZXJhdG9yT2JqZWN0KHYpCiAgaXNUeXBlZEFycmF5KHYpCiAgaXNNb2R1bGVOYW1lc3BhY2VPYmplY3QodikKICBpc09iamVjdCh2KQogIGhhc0J1aWx0SW4obywgbSkKICBmb3JtYXQoLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9ucyhvcHRzLCAuLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zSW50ZXJuYWwobywgdikKICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBzZXRJbnRlcnZhbChjYWxsYmFjaywgbXMpCiAgc3RhcnQoKQogIGNsZWFySW50ZXJ2YWwoaWQpCiAgbWVtb2l6ZShmbikKICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCglmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBnZXRBbnNpU3R5bGVzKCkKICByYW5kSW50KC4uLmFyZ3MpAAAAAAAAAAAUBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					308,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								120
							],
							[
								201,
								205
							],
							[
								248,
								253
							],
							[
								323,
								354
							],
							[
								1010,
								1017
							],
							[
								1135,
								1152
							],
							[
								1184,
								1194
							],
							[
								1195,
								1211
							],
							[
								1260,
								1290
							],
							[
								1445,
								1468
							],
							[
								1469,
								1490
							],
							[
								1831,
								1845
							],
							[
								2336,
								2370
							],
							[
								2698,
								2750
							],
							[
								2791,
								2824
							],
							[
								3003,
								3053
							],
							[
								3098,
								3144
							],
							[
								3252,
								3305
							]
						],
						"symlist":
						[
							" function Console(opts = {})",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAMgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					309,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZShvcHRzID0ge30pCkNvbnNvbGUKCWZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					310,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1092,
								1112
							],
							[
								1157,
								1173
							],
							[
								1227,
								1246
							],
							[
								1281,
								1297
							],
							[
								1353,
								1369
							],
							[
								1432,
								1466
							],
							[
								1489,
								1521
							],
							[
								1544,
								1587
							],
							[
								1828,
								1840
							],
							[
								3663,
								3682
							],
							[
								3780,
								3796
							],
							[
								3858,
								3876
							],
							[
								3940,
								3959
							],
							[
								4024,
								4033
							],
							[
								4088,
								4105
							],
							[
								4168,
								4185
							],
							[
								4248,
								4262
							],
							[
								4322,
								4337
							],
							[
								4398,
								4413
							],
							[
								4474,
								4482
							],
							[
								4536,
								4548
							],
							[
								4606,
								4616
							],
							[
								4672,
								4683
							],
							[
								4740,
								4748
							],
							[
								4802,
								4824
							],
							[
								4892,
								4907
							],
							[
								4968,
								4990
							],
							[
								5058,
								5074
							],
							[
								5136,
								5152
							],
							[
								5214,
								5226
							],
							[
								5284,
								5296
							],
							[
								5354,
								5367
							],
							[
								5426,
								5444
							],
							[
								5502,
								5520
							],
							[
								5584,
								5606
							],
							[
								5674,
								5701
							],
							[
								5774,
								5791
							],
							[
								5848,
								5865
							],
							[
								5922,
								5939
							],
							[
								5986,
								6002
							],
							[
								6085,
								6101
							],
							[
								6173,
								6189
							],
							[
								6261,
								6278
							],
							[
								6335,
								6355
							],
							[
								6414,
								6434
							],
							[
								6593,
								6612
							],
							[
								6688,
								6695
							],
							[
								6724,
								6744
							],
							[
								6814,
								6829
							],
							[
								6890,
								6916
							],
							[
								6994,
								7015
							],
							[
								7093,
								7119
							],
							[
								7165,
								7190
							],
							[
								7255,
								7297
							],
							[
								7431,
								7471
							],
							[
								10380,
								10423
							],
							[
								10876,
								10911
							],
							[
								11067,
								11085
							],
							[
								11115,
								11120
							],
							[
								11210,
								11237
							],
							[
								11356,
								11377
							],
							[
								11406,
								11422
							],
							[
								11515,
								11550
							],
							[
								11590,
								11608
							],
							[
								11795,
								11816
							],
							[
								11840,
								11850
							],
							[
								11889,
								11919
							],
							[
								12208,
								12242
							],
							[
								12557,
								12591
							],
							[
								12861,
								12878
							],
							[
								12879,
								12888
							],
							[
								12942,
								12959
							],
							[
								12960,
								12969
							],
							[
								13031,
								13048
							],
							[
								13049,
								13072
							],
							[
								13130,
								13154
							],
							[
								15781,
								15809
							],
							[
								16435,
								16448
							],
							[
								16764,
								16776
							],
							[
								17039,
								17052
							],
							[
								17157,
								17171
							],
							[
								18058,
								18086
							],
							[
								18202,
								18215
							],
							[
								18327,
								18353
							],
							[
								19066,
								19128
							],
							[
								19162,
								19231
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AQAAAAAAAAAAAAAAFAUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					311,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					312,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					313,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1093,
								1113
							],
							[
								1158,
								1174
							],
							[
								1228,
								1247
							],
							[
								1282,
								1298
							],
							[
								1354,
								1370
							],
							[
								1433,
								1467
							],
							[
								1490,
								1522
							],
							[
								1545,
								1588
							],
							[
								1829,
								1841
							],
							[
								3664,
								3683
							],
							[
								3781,
								3797
							],
							[
								3859,
								3877
							],
							[
								3941,
								3960
							],
							[
								4025,
								4034
							],
							[
								4089,
								4106
							],
							[
								4169,
								4186
							],
							[
								4249,
								4263
							],
							[
								4323,
								4338
							],
							[
								4399,
								4414
							],
							[
								4475,
								4483
							],
							[
								4537,
								4549
							],
							[
								4607,
								4617
							],
							[
								4673,
								4684
							],
							[
								4741,
								4749
							],
							[
								4803,
								4825
							],
							[
								4893,
								4908
							],
							[
								4969,
								4991
							],
							[
								5059,
								5075
							],
							[
								5137,
								5153
							],
							[
								5215,
								5227
							],
							[
								5285,
								5297
							],
							[
								5355,
								5368
							],
							[
								5427,
								5445
							],
							[
								5503,
								5521
							],
							[
								5585,
								5607
							],
							[
								5675,
								5702
							],
							[
								5775,
								5792
							],
							[
								5849,
								5866
							],
							[
								5923,
								5940
							],
							[
								5987,
								6003
							],
							[
								6086,
								6102
							],
							[
								6174,
								6190
							],
							[
								6262,
								6279
							],
							[
								6336,
								6356
							],
							[
								6415,
								6435
							],
							[
								6594,
								6613
							],
							[
								6689,
								6696
							],
							[
								6725,
								6745
							],
							[
								6815,
								6830
							],
							[
								6891,
								6917
							],
							[
								6995,
								7016
							],
							[
								7094,
								7120
							],
							[
								7166,
								7191
							],
							[
								7256,
								7298
							],
							[
								7432,
								7472
							],
							[
								10381,
								10424
							],
							[
								10877,
								10912
							],
							[
								11068,
								11086
							],
							[
								11116,
								11121
							],
							[
								11211,
								11238
							],
							[
								11357,
								11378
							],
							[
								11407,
								11423
							],
							[
								11516,
								11551
							],
							[
								11591,
								11609
							],
							[
								11796,
								11817
							],
							[
								11841,
								11851
							],
							[
								11890,
								11920
							],
							[
								12209,
								12243
							],
							[
								12558,
								12592
							],
							[
								12862,
								12879
							],
							[
								12880,
								12889
							],
							[
								12943,
								12960
							],
							[
								12961,
								12970
							],
							[
								13032,
								13049
							],
							[
								13050,
								13073
							],
							[
								13131,
								13155
							],
							[
								15782,
								15810
							],
							[
								16436,
								16449
							],
							[
								16765,
								16777
							],
							[
								17040,
								17053
							],
							[
								17158,
								17172
							],
							[
								18059,
								18087
							],
							[
								18203,
								18216
							],
							[
								18328,
								18354
							],
							[
								19067,
								19129
							],
							[
								19163,
								19232
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AwAAAAAAAAAAAAAAFAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQFAAAgIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGlzR2VuZXJhdG9yT2JqZWN0KHYpCiAgaXNUeXBlZEFycmF5KHYpCiAgaXNNb2R1bGVOYW1lc3BhY2VPYmplY3QodikKICBpc09iamVjdCh2KQogIGhhc0J1aWx0SW4obywgbSkKICBmb3JtYXQoLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9ucyhvcHRzLCAuLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zSW50ZXJuYWwobywgdikKICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBzZXRJbnRlcnZhbChjYWxsYmFjaywgbXMpCiAgc3RhcnQoKQogIGNsZWFySW50ZXJ2YWwoaWQpCiAgbWVtb2l6ZShmbikKICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCglmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBnZXRBbnNpU3R5bGVzKCkKICByYW5kSW50KC4uLmFyZ3MpAAAAAAAAAAAUBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					314,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1093,
								1113
							],
							[
								1158,
								1174
							],
							[
								1228,
								1247
							],
							[
								1282,
								1298
							],
							[
								1354,
								1370
							],
							[
								1433,
								1467
							],
							[
								1490,
								1522
							],
							[
								1545,
								1588
							],
							[
								1829,
								1841
							],
							[
								3664,
								3683
							],
							[
								3781,
								3797
							],
							[
								3859,
								3877
							],
							[
								3941,
								3960
							],
							[
								4025,
								4034
							],
							[
								4089,
								4106
							],
							[
								4169,
								4186
							],
							[
								4249,
								4263
							],
							[
								4323,
								4338
							],
							[
								4399,
								4414
							],
							[
								4475,
								4483
							],
							[
								4537,
								4549
							],
							[
								4607,
								4617
							],
							[
								4673,
								4684
							],
							[
								4741,
								4749
							],
							[
								4803,
								4825
							],
							[
								4893,
								4908
							],
							[
								4969,
								4991
							],
							[
								5059,
								5075
							],
							[
								5137,
								5153
							],
							[
								5215,
								5227
							],
							[
								5285,
								5297
							],
							[
								5355,
								5368
							],
							[
								5427,
								5445
							],
							[
								5503,
								5521
							],
							[
								5585,
								5607
							],
							[
								5675,
								5702
							],
							[
								5775,
								5792
							],
							[
								5849,
								5866
							],
							[
								5923,
								5940
							],
							[
								5987,
								6003
							],
							[
								6086,
								6102
							],
							[
								6174,
								6190
							],
							[
								6262,
								6279
							],
							[
								6336,
								6356
							],
							[
								6415,
								6435
							],
							[
								6594,
								6613
							],
							[
								6689,
								6696
							],
							[
								6725,
								6745
							],
							[
								6815,
								6830
							],
							[
								6891,
								6917
							],
							[
								6995,
								7016
							],
							[
								7094,
								7120
							],
							[
								7166,
								7191
							],
							[
								7256,
								7298
							],
							[
								7432,
								7472
							],
							[
								10381,
								10424
							],
							[
								10877,
								10912
							],
							[
								11068,
								11086
							],
							[
								11116,
								11121
							],
							[
								11211,
								11238
							],
							[
								11357,
								11378
							],
							[
								11407,
								11423
							],
							[
								11516,
								11551
							],
							[
								11591,
								11609
							],
							[
								11796,
								11817
							],
							[
								11841,
								11851
							],
							[
								11890,
								11920
							],
							[
								12209,
								12243
							],
							[
								12558,
								12592
							],
							[
								12862,
								12879
							],
							[
								12880,
								12889
							],
							[
								12943,
								12960
							],
							[
								12961,
								12970
							],
							[
								13032,
								13049
							],
							[
								13050,
								13073
							],
							[
								13131,
								13155
							],
							[
								15782,
								15810
							],
							[
								16436,
								16449
							],
							[
								16765,
								16777
							],
							[
								17040,
								17053
							],
							[
								17158,
								17172
							],
							[
								18059,
								18087
							],
							[
								18203,
								18216
							],
							[
								18328,
								18354
							],
							[
								19067,
								19129
							],
							[
								19163,
								19232
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAFAUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					315,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1093,
								1113
							],
							[
								1158,
								1174
							],
							[
								1228,
								1247
							],
							[
								1282,
								1298
							],
							[
								1354,
								1370
							],
							[
								1433,
								1467
							],
							[
								1490,
								1522
							],
							[
								1545,
								1588
							],
							[
								1829,
								1841
							],
							[
								3664,
								3683
							],
							[
								3781,
								3797
							],
							[
								3859,
								3877
							],
							[
								3941,
								3960
							],
							[
								4025,
								4034
							],
							[
								4089,
								4106
							],
							[
								4169,
								4186
							],
							[
								4249,
								4263
							],
							[
								4323,
								4338
							],
							[
								4399,
								4414
							],
							[
								4475,
								4483
							],
							[
								4537,
								4549
							],
							[
								4607,
								4617
							],
							[
								4673,
								4684
							],
							[
								4741,
								4749
							],
							[
								4803,
								4825
							],
							[
								4893,
								4908
							],
							[
								4969,
								4991
							],
							[
								5059,
								5075
							],
							[
								5137,
								5153
							],
							[
								5215,
								5227
							],
							[
								5285,
								5297
							],
							[
								5355,
								5368
							],
							[
								5427,
								5445
							],
							[
								5503,
								5521
							],
							[
								5585,
								5607
							],
							[
								5675,
								5702
							],
							[
								5775,
								5792
							],
							[
								5849,
								5866
							],
							[
								5923,
								5940
							],
							[
								5987,
								6003
							],
							[
								6086,
								6102
							],
							[
								6174,
								6190
							],
							[
								6262,
								6279
							],
							[
								6336,
								6356
							],
							[
								6415,
								6435
							],
							[
								6594,
								6613
							],
							[
								6689,
								6696
							],
							[
								6725,
								6745
							],
							[
								6815,
								6830
							],
							[
								6891,
								6917
							],
							[
								6995,
								7016
							],
							[
								7094,
								7120
							],
							[
								7166,
								7191
							],
							[
								7256,
								7298
							],
							[
								7432,
								7472
							],
							[
								10381,
								10424
							],
							[
								10877,
								10912
							],
							[
								11068,
								11086
							],
							[
								11116,
								11121
							],
							[
								11211,
								11238
							],
							[
								11357,
								11378
							],
							[
								11407,
								11423
							],
							[
								11516,
								11551
							],
							[
								11591,
								11609
							],
							[
								11796,
								11817
							],
							[
								11841,
								11851
							],
							[
								11890,
								11920
							],
							[
								12209,
								12243
							],
							[
								12558,
								12592
							],
							[
								12862,
								12879
							],
							[
								12880,
								12889
							],
							[
								12943,
								12960
							],
							[
								12961,
								12970
							],
							[
								13032,
								13049
							],
							[
								13050,
								13073
							],
							[
								13131,
								13155
							],
							[
								15782,
								15810
							],
							[
								16436,
								16449
							],
							[
								16765,
								16777
							],
							[
								17040,
								17053
							],
							[
								17158,
								17172
							],
							[
								18059,
								18087
							],
							[
								18203,
								18216
							],
							[
								18328,
								18354
							],
							[
								19067,
								19129
							],
							[
								19163,
								19232
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAFAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQFAAAgIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGlzR2VuZXJhdG9yT2JqZWN0KHYpCiAgaXNUeXBlZEFycmF5KHYpCiAgaXNNb2R1bGVOYW1lc3BhY2VPYmplY3QodikKICBpc09iamVjdCh2KQogIGhhc0J1aWx0SW4obywgbSkKICBmb3JtYXQoLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9ucyhvcHRzLCAuLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zSW50ZXJuYWwobywgdikKICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBzZXRJbnRlcnZhbChjYWxsYmFjaywgbXMpCiAgc3RhcnQoKQogIGNsZWFySW50ZXJ2YWwoaWQpCiAgbWVtb2l6ZShmbikKICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCglmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBnZXRBbnNpU3R5bGVzKCkKICByYW5kSW50KC4uLmFyZ3MpAAAAAAAAAAAUBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					316,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					317,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					318,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1093,
								1113
							],
							[
								1158,
								1174
							],
							[
								1228,
								1247
							],
							[
								1282,
								1298
							],
							[
								1354,
								1370
							],
							[
								1433,
								1467
							],
							[
								1490,
								1522
							],
							[
								1545,
								1588
							],
							[
								1829,
								1841
							],
							[
								3664,
								3683
							],
							[
								3781,
								3797
							],
							[
								3859,
								3877
							],
							[
								3941,
								3960
							],
							[
								4025,
								4034
							],
							[
								4089,
								4106
							],
							[
								4169,
								4186
							],
							[
								4249,
								4263
							],
							[
								4323,
								4338
							],
							[
								4399,
								4414
							],
							[
								4475,
								4483
							],
							[
								4537,
								4549
							],
							[
								4607,
								4617
							],
							[
								4673,
								4684
							],
							[
								4741,
								4749
							],
							[
								4803,
								4825
							],
							[
								4893,
								4908
							],
							[
								4969,
								4991
							],
							[
								5059,
								5075
							],
							[
								5137,
								5153
							],
							[
								5215,
								5227
							],
							[
								5285,
								5297
							],
							[
								5355,
								5368
							],
							[
								5427,
								5445
							],
							[
								5503,
								5521
							],
							[
								5585,
								5607
							],
							[
								5675,
								5702
							],
							[
								5775,
								5792
							],
							[
								5849,
								5866
							],
							[
								5923,
								5940
							],
							[
								5987,
								6003
							],
							[
								6086,
								6102
							],
							[
								6174,
								6190
							],
							[
								6262,
								6279
							],
							[
								6336,
								6356
							],
							[
								6415,
								6435
							],
							[
								6594,
								6613
							],
							[
								6689,
								6696
							],
							[
								6725,
								6745
							],
							[
								6815,
								6830
							],
							[
								6891,
								6917
							],
							[
								6995,
								7016
							],
							[
								7094,
								7120
							],
							[
								7166,
								7191
							],
							[
								7256,
								7298
							],
							[
								7432,
								7472
							],
							[
								10381,
								10424
							],
							[
								10877,
								10912
							],
							[
								11068,
								11086
							],
							[
								11116,
								11121
							],
							[
								11211,
								11238
							],
							[
								11357,
								11378
							],
							[
								11407,
								11423
							],
							[
								11516,
								11551
							],
							[
								11591,
								11609
							],
							[
								11796,
								11817
							],
							[
								11841,
								11851
							],
							[
								11890,
								11920
							],
							[
								12209,
								12243
							],
							[
								12558,
								12592
							],
							[
								12862,
								12879
							],
							[
								12880,
								12889
							],
							[
								12943,
								12960
							],
							[
								12961,
								12970
							],
							[
								13032,
								13049
							],
							[
								13050,
								13073
							],
							[
								13131,
								13155
							],
							[
								15782,
								15810
							],
							[
								16436,
								16449
							],
							[
								16765,
								16777
							],
							[
								17040,
								17053
							],
							[
								17158,
								17172
							],
							[
								18059,
								18087
							],
							[
								18203,
								18216
							],
							[
								18328,
								18354
							],
							[
								19067,
								19129
							],
							[
								19163,
								19232
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AQAAAAAAAAAAAAAAFAUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					319,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					320,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1093,
								1113
							],
							[
								1158,
								1174
							],
							[
								1228,
								1247
							],
							[
								1282,
								1298
							],
							[
								1354,
								1370
							],
							[
								1433,
								1467
							],
							[
								1490,
								1522
							],
							[
								1545,
								1588
							],
							[
								1829,
								1841
							],
							[
								3664,
								3683
							],
							[
								3781,
								3797
							],
							[
								3859,
								3877
							],
							[
								3941,
								3960
							],
							[
								4025,
								4034
							],
							[
								4089,
								4106
							],
							[
								4169,
								4186
							],
							[
								4249,
								4263
							],
							[
								4323,
								4338
							],
							[
								4399,
								4414
							],
							[
								4475,
								4483
							],
							[
								4537,
								4549
							],
							[
								4607,
								4617
							],
							[
								4673,
								4684
							],
							[
								4741,
								4749
							],
							[
								4803,
								4825
							],
							[
								4893,
								4908
							],
							[
								4969,
								4991
							],
							[
								5059,
								5075
							],
							[
								5137,
								5153
							],
							[
								5215,
								5227
							],
							[
								5285,
								5297
							],
							[
								5355,
								5368
							],
							[
								5427,
								5445
							],
							[
								5503,
								5521
							],
							[
								5585,
								5607
							],
							[
								5675,
								5702
							],
							[
								5775,
								5792
							],
							[
								5849,
								5866
							],
							[
								5923,
								5940
							],
							[
								5987,
								6003
							],
							[
								6086,
								6102
							],
							[
								6174,
								6190
							],
							[
								6262,
								6279
							],
							[
								6336,
								6356
							],
							[
								6415,
								6435
							],
							[
								6594,
								6613
							],
							[
								6689,
								6696
							],
							[
								6725,
								6745
							],
							[
								6815,
								6830
							],
							[
								6891,
								6917
							],
							[
								6995,
								7016
							],
							[
								7094,
								7120
							],
							[
								7166,
								7191
							],
							[
								7256,
								7298
							],
							[
								7432,
								7472
							],
							[
								10381,
								10424
							],
							[
								10877,
								10912
							],
							[
								11068,
								11086
							],
							[
								11116,
								11121
							],
							[
								11211,
								11238
							],
							[
								11357,
								11378
							],
							[
								11407,
								11423
							],
							[
								11516,
								11551
							],
							[
								11591,
								11609
							],
							[
								11796,
								11817
							],
							[
								11841,
								11851
							],
							[
								11890,
								11920
							],
							[
								12209,
								12243
							],
							[
								12558,
								12592
							],
							[
								12862,
								12879
							],
							[
								12880,
								12889
							],
							[
								12943,
								12960
							],
							[
								12961,
								12970
							],
							[
								13032,
								13049
							],
							[
								13050,
								13073
							],
							[
								13131,
								13155
							],
							[
								15782,
								15810
							],
							[
								16436,
								16449
							],
							[
								16765,
								16777
							],
							[
								17040,
								17053
							],
							[
								17158,
								17172
							],
							[
								18059,
								18087
							],
							[
								18203,
								18216
							],
							[
								18328,
								18354
							],
							[
								19067,
								19129
							],
							[
								19163,
								19232
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AwAAAAAAAAAAAAAAFAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQFAAAgIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGlzR2VuZXJhdG9yT2JqZWN0KHYpCiAgaXNUeXBlZEFycmF5KHYpCiAgaXNNb2R1bGVOYW1lc3BhY2VPYmplY3QodikKICBpc09iamVjdCh2KQogIGhhc0J1aWx0SW4obywgbSkKICBmb3JtYXQoLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9ucyhvcHRzLCAuLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zSW50ZXJuYWwobywgdikKICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBzZXRJbnRlcnZhbChjYWxsYmFjaywgbXMpCiAgc3RhcnQoKQogIGNsZWFySW50ZXJ2YWwoaWQpCiAgbWVtb2l6ZShmbikKICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCglmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBnZXRBbnNpU3R5bGVzKCkKICByYW5kSW50KC4uLmFyZ3MpAAAAAAAAAAAUBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					321,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1093,
								1113
							],
							[
								1158,
								1174
							],
							[
								1228,
								1247
							],
							[
								1282,
								1298
							],
							[
								1354,
								1370
							],
							[
								1433,
								1467
							],
							[
								1490,
								1522
							],
							[
								1545,
								1588
							],
							[
								1829,
								1841
							],
							[
								3664,
								3683
							],
							[
								3781,
								3797
							],
							[
								3859,
								3877
							],
							[
								3941,
								3960
							],
							[
								4025,
								4034
							],
							[
								4089,
								4106
							],
							[
								4169,
								4186
							],
							[
								4249,
								4263
							],
							[
								4323,
								4338
							],
							[
								4399,
								4414
							],
							[
								4475,
								4483
							],
							[
								4537,
								4549
							],
							[
								4607,
								4617
							],
							[
								4673,
								4684
							],
							[
								4741,
								4749
							],
							[
								4803,
								4825
							],
							[
								4893,
								4908
							],
							[
								4969,
								4991
							],
							[
								5059,
								5075
							],
							[
								5137,
								5153
							],
							[
								5215,
								5227
							],
							[
								5285,
								5297
							],
							[
								5355,
								5368
							],
							[
								5427,
								5445
							],
							[
								5503,
								5521
							],
							[
								5585,
								5607
							],
							[
								5675,
								5702
							],
							[
								5775,
								5792
							],
							[
								5849,
								5866
							],
							[
								5923,
								5940
							],
							[
								5987,
								6003
							],
							[
								6086,
								6102
							],
							[
								6174,
								6190
							],
							[
								6262,
								6279
							],
							[
								6336,
								6356
							],
							[
								6415,
								6435
							],
							[
								6594,
								6613
							],
							[
								6689,
								6696
							],
							[
								6725,
								6745
							],
							[
								6815,
								6830
							],
							[
								6891,
								6917
							],
							[
								6995,
								7016
							],
							[
								7094,
								7120
							],
							[
								7166,
								7191
							],
							[
								7256,
								7298
							],
							[
								7432,
								7472
							],
							[
								10381,
								10424
							],
							[
								10877,
								10912
							],
							[
								11068,
								11086
							],
							[
								11116,
								11121
							],
							[
								11211,
								11238
							],
							[
								11357,
								11378
							],
							[
								11407,
								11423
							],
							[
								11516,
								11551
							],
							[
								11591,
								11609
							],
							[
								11796,
								11817
							],
							[
								11841,
								11851
							],
							[
								11890,
								11920
							],
							[
								12209,
								12243
							],
							[
								12558,
								12592
							],
							[
								12862,
								12879
							],
							[
								12880,
								12889
							],
							[
								12943,
								12960
							],
							[
								12961,
								12970
							],
							[
								13032,
								13049
							],
							[
								13050,
								13073
							],
							[
								13131,
								13155
							],
							[
								15782,
								15810
							],
							[
								16436,
								16449
							],
							[
								16765,
								16777
							],
							[
								17040,
								17053
							],
							[
								17158,
								17172
							],
							[
								18059,
								18087
							],
							[
								18203,
								18216
							],
							[
								18328,
								18354
							],
							[
								19067,
								19129
							],
							[
								19163,
								19232
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAFAUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					322,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								120
							],
							[
								201,
								205
							],
							[
								248,
								253
							],
							[
								323,
								354
							],
							[
								1010,
								1017
							],
							[
								1135,
								1152
							],
							[
								1184,
								1194
							],
							[
								1195,
								1211
							],
							[
								1260,
								1290
							],
							[
								1445,
								1468
							],
							[
								1469,
								1490
							],
							[
								1831,
								1845
							],
							[
								2336,
								2370
							],
							[
								2698,
								2750
							],
							[
								2791,
								2824
							],
							[
								3003,
								3053
							],
							[
								3098,
								3144
							],
							[
								3252,
								3305
							]
						],
						"symlist":
						[
							" function Console(opts = {})",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQoJZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAMgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					323,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZShvcHRzID0ge30pCkNvbnNvbGUKCWZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					324,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					325,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/console.js",
			"settings":
			{
				"buffer_size": 3440,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					21,
					1,
					"insert",
					{
						"characters": "function"
					},
					"CQAAALUMAAAAAAAAtgwAAAAAAAAAAAAAtgwAAAAAAAC2DAAAAAAAAAcAAABDb25zb2xltgwAAAAAAAC3DAAAAAAAAAAAAAC3DAAAAAAAALgMAAAAAAAAAAAAALgMAAAAAAAAuQwAAAAAAAAAAAAAuQwAAAAAAAC6DAAAAAAAAAAAAAC6DAAAAAAAALsMAAAAAAAAAAAAALsMAAAAAAAAvAwAAAAAAAAAAAAAvAwAAAAAAAC9DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUMAAAAAAAAvAwAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " ConsoleSetup"
					},
					"DQAAAL0MAAAAAAAAvgwAAAAAAAAAAAAAvgwAAAAAAAC/DAAAAAAAAAAAAAC/DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAwQwAAAAAAAAAAAAAwQwAAAAAAADCDAAAAAAAAAAAAADCDAAAAAAAAMMMAAAAAAAAAAAAAMMMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADFDAAAAAAAAAAAAADFDAAAAAAAAMYMAAAAAAAAAAAAAMYMAAAAAAAAxwwAAAAAAAAAAAAAxwwAAAAAAADIDAAAAAAAAAAAAADIDAAAAAAAAMkMAAAAAAAAAAAAAMkMAAAAAAAAygwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0MAAAAAAAAvQwAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMoMAAAAAAAAzAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoMAAAAAAAAygwAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "options"
					},
					"BwAAAMsMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADNDAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANEMAAAAAAAAAAAAANEMAAAAAAAA0gwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsMAAAAAAAAywwAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANMMAAAAAAAA1AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMMAAAAAAAA0wwAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					2,
					"left_delete",
					null,
					"AgAAANMMAAAAAAAA0wwAAAAAAAABAAAAINIMAAAAAAAA0gwAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQMAAAAAAAA1AwAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAANIMAAAAAAAA0wwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANIMAAAAAAAA0gwAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " {})"
					},
					"BAAAANMMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADVDAAAAAAAAAAAAADVDAAAAAAAANYMAAAAAAAAAAAAANYMAAAAAAAA1wwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMMAAAAAAAA0wwAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAANcMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADZDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcMAAAAAAAA1wwAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANkMAAAAAAAA2gwAAAAAAAAAAAAA2gwAAAAAAADcDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkMAAAAAAAA2QwAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "callback"
					},
					"CQAAAMsMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADMDAAAAAAAAAcAAABvcHRpb25zzAwAAAAAAADNDAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANEMAAAAAAAAAAAAANEMAAAAAAAA0gwAAAAAAAAAAAAA0gwAAAAAAADTDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsMAAAAAAAA0gwAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANMMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADVDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMMAAAAAAAA0wwAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " ()"
					},
					"AwAAANUMAAAAAAAA1gwAAAAAAAAAAAAA1gwAAAAAAADXDAAAAAAAAAAAAADXDAAAAAAAANgMAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUMAAAAAAAA1QwAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANgMAAAAAAAA2QwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgMAAAAAAAA2AwAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					3,
					"left_delete",
					null,
					"AwAAANgMAAAAAAAA2AwAAAAAAAABAAAAINcMAAAAAAAA1wwAAAAAAAABAAAAKdYMAAAAAAAA1gwAAAAAAAABAAAAKA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkMAAAAAAAA2QwAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAANYMAAAAAAAA1wwAAAAAAAAAAAAA1wwAAAAAAADYDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYMAAAAAAAA1gwAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAANgMAAAAAAAA2QwAAAAAAAAAAAAA2QwAAAAAAADaDAAAAAAAAAAAAADaDAAAAAAAANsMAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgMAAAAAAAA2AwAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsMAAAAAAAA3AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsMAAAAAAAA2wwAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					2,
					"right_delete",
					null,
					"AgAAANwMAAAAAAAA3AwAAAAAAAABAAAAPdwMAAAAAAAA3AwAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwMAAAAAAAA3AwAAAAAAAAAAAAAAADwvw"
				],
				[
					46,
					1,
					"left_delete",
					null,
					"AQAAAOQMAAAAAAAA5AwAAAAAAAABAAAAOw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUMAAAAAAAA5QwAAAAAAAAAAAAAAAB8QA"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAOQMAAAAAAAA5QwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQMAAAAAAAA5AwAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\n\nglobalThis.conso"
					},
					"FQAAAOEMAAAAAAAA4gwAAAAAAAAAAAAA4gwAAAAAAADkDAAAAAAAAAAAAADkDAAAAAAAAOUMAAAAAAAAAAAAAOUMAAAAAAAA5wwAAAAAAAAAAAAA4gwAAAAAAADiDAAAAAAAAAIAAAAgIOUMAAAAAAAA5gwAAAAAAAAAAAAA5gwAAAAAAADnDAAAAAAAAAAAAADnDAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA6QwAAAAAAAAAAAAA6QwAAAAAAADqDAAAAAAAAAAAAADqDAAAAAAAAOsMAAAAAAAAAAAAAOsMAAAAAAAA7AwAAAAAAAAAAAAA7AwAAAAAAADtDAAAAAAAAAAAAADtDAAAAAAAAO4MAAAAAAAAAAAAAO4MAAAAAAAA7wwAAAAAAAAAAAAA7wwAAAAAAADwDAAAAAAAAAAAAADwDAAAAAAAAPEMAAAAAAAAAAAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA8gwAAAAAAADzDAAAAAAAAAAAAADzDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA9QwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEMAAAAAAAA4QwAAAAAAAD////////vfw"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "le"
					},
					"AgAAAPUMAAAAAAAA9gwAAAAAAAAAAAAA9gwAAAAAAAD3DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUMAAAAAAAA9QwAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAPcMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD5DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcMAAAAAAAA9wwAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAAPgMAAAAAAAA+AwAAAAAAAABAAAAMA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkMAAAAAAAA+QwAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAPgMAAAAAAAA+QwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgMAAAAAAAA+AwAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAPkMAAAAAAAA+gwAAAAAAAAAAAAA+gwAAAAAAAD7DAAAAAAAAAAAAAD7DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAAA/QwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkMAAAAAAAA+QwAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " Console"
					},
					"CAAAAP0MAAAAAAAA/gwAAAAAAAAAAAAA/gwAAAAAAAD/DAAAAAAAAAAAAAD/DAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAQ0AAAAAAAAAAAAAAQ0AAAAAAAACDQAAAAAAAAAAAAACDQAAAAAAAAMNAAAAAAAAAAAAAAMNAAAAAAAABA0AAAAAAAAAAAAABA0AAAAAAAAFDQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0MAAAAAAAA/QwAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "optiosn,"
					},
					"CAAAAMsMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADNDAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANEMAAAAAAAAAAAAANEMAAAAAAAA0gwAAAAAAAAAAAAA0gwAAAAAAADTDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsMAAAAAAAAywwAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANMMAAAAAAAA1AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMMAAAAAAAA0wwAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					4,
					"left_delete",
					null,
					"BAAAANMMAAAAAAAA0wwAAAAAAAABAAAAINIMAAAAAAAA0gwAAAAAAAABAAAALNEMAAAAAAAA0QwAAAAAAAABAAAAbtAMAAAAAAAA0AwAAAAAAAABAAAAcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQMAAAAAAAA1AwAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "ns={},"
					},
					"BgAAANAMAAAAAAAA0QwAAAAAAAAAAAAA0QwAAAAAAADSDAAAAAAAAAAAAADSDAAAAAAAANMMAAAAAAAAAAAAANMMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADVDAAAAAAAAAAAAADVDAAAAAAAANYMAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAMAAAAAAAA0AwAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYMAAAAAAAA1wwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYMAAAAAAAA1gwAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABENAAAAAAAAEw0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABENAAAAAAAAEQ0AAAAAAAAAAAAAAADwvw"
				],
				[
					84,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABINAAAAAAAAFA0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABINAAAAAAAAEg0AAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " inspect"
					},
					"CAAAABMNAAAAAAAAFA0AAAAAAAAAAAAAFA0AAAAAAAAVDQAAAAAAAAAAAAAVDQAAAAAAABYNAAAAAAAAAAAAABYNAAAAAAAAFw0AAAAAAAAAAAAAFw0AAAAAAAAYDQAAAAAAAAAAAAAYDQAAAAAAABkNAAAAAAAAAAAAABkNAAAAAAAAGg0AAAAAAAAAAAAAGg0AAAAAAAAbDQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMNAAAAAAAAEw0AAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"insert_completion",
					{
						"completion": "inspectOptions",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "inspectOptions"
					},
					"AgAAABQNAAAAAAAAFA0AAAAAAAAHAAAAaW5zcGVjdBQNAAAAAAAAIg0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsNAAAAAAAAGw0AAAAAAAAAAAAAAADwvw"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAACINAAAAAAAAIw0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACINAAAAAAAAIg0AAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " options"
					},
					"CAAAACMNAAAAAAAAJA0AAAAAAAAAAAAAJA0AAAAAAAAlDQAAAAAAAAAAAAAlDQAAAAAAACYNAAAAAAAAAAAAACYNAAAAAAAAJw0AAAAAAAAAAAAAJw0AAAAAAAAoDQAAAAAAAAAAAAAoDQAAAAAAACkNAAAAAAAAAAAAACkNAAAAAAAAKg0AAAAAAAAAAAAAKg0AAAAAAAArDQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMNAAAAAAAAIw0AAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACsNAAAAAAAALA0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsNAAAAAAAAKw0AAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"paste",
					null,
					"AgAAAMsMAAAAAAAA2QwAAAAAAAAAAAAA2QwAAAAAAADZDAAAAAAAAAcAAABvcHRpb25z",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsMAAAAAAAA0gwAAAAAAAAAAAAAAADwvw"
				],
				[
					102,
					3,
					"left_delete",
					null,
					"AwAAACsNAAAAAAAAKw0AAAAAAAAHAAAAb3B0aW9ucyoNAAAAAAAAKg0AAAAAAAABAAAAICkNAAAAAAAAKQ0AAAAAAAABAAAAOg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADINAAAAAAAAKw0AAAAAAAAAAAAAAADwvw"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACwNAAAAAAAALQ0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwNAAAAAAAALA0AAAAAAAAAAAAAAADwvw"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC0NAAAAAAAALg0AAAAAAAAAAAAALg0AAAAAAAAwDQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0NAAAAAAAALQ0AAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AgAAAPQMAAAAAAAA9AwAAAAAAAABAAAACi0NAAAAAAAALQ0AAAAAAAACAAAAICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUMAAAAAAAA9QwAAAAAAAAAAAAAAAAwQA"
				],
				[
					112,
					1,
					"cut",
					null,
					"AQAAAOcMAAAAAAAA5wwAAAAAAAAKAAAAPSAoKSA9PiB7fQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcMAAAAAAAA8QwAAAAAAAAAAAAAAADwvw"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAACMNAAAAAAAAJA0AAAAAAAAAAAAAJA0AAAAAAAAlDQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMNAAAAAAAAIw0AAAAAAAAAAAAAAADwvw"
				],
				[
					118,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACUNAAAAAAAAJw0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUNAAAAAAAAJQ0AAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "callback"
					},
					"CAAAACYNAAAAAAAAJw0AAAAAAAAAAAAAJw0AAAAAAAAoDQAAAAAAAAAAAAAoDQAAAAAAACkNAAAAAAAAAAAAACkNAAAAAAAAKg0AAAAAAAAAAAAAKg0AAAAAAAArDQAAAAAAAAAAAAArDQAAAAAAACwNAAAAAAAAAAAAACwNAAAAAAAALQ0AAAAAAAAAAAAALQ0AAAAAAAAuDQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYNAAAAAAAAJg0AAAAAAAAAAAAAAADwvw"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "\ncallback"
					},
					"CgAAAC8NAAAAAAAAMA0AAAAAAAAAAAAAMA0AAAAAAAAyDQAAAAAAAAAAAAAyDQAAAAAAADMNAAAAAAAAAAAAADMNAAAAAAAANA0AAAAAAAAAAAAANA0AAAAAAAA1DQAAAAAAAAAAAAA1DQAAAAAAADYNAAAAAAAAAAAAADYNAAAAAAAANw0AAAAAAAAAAAAANw0AAAAAAAA4DQAAAAAAAAAAAAA4DQAAAAAAADkNAAAAAAAAAAAAADkNAAAAAAAAOg0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8NAAAAAAAALw0AAAAAAAAAAAAAAADwvw"
				],
				[
					122,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADoNAAAAAAAAPA0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoNAAAAAAAAOg0AAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "globalThis.console"
					},
					"EgAAADsNAAAAAAAAPA0AAAAAAAAAAAAAPA0AAAAAAAA9DQAAAAAAAAAAAAA9DQAAAAAAAD4NAAAAAAAAAAAAAD4NAAAAAAAAPw0AAAAAAAAAAAAAPw0AAAAAAABADQAAAAAAAAAAAABADQAAAAAAAEENAAAAAAAAAAAAAEENAAAAAAAAQg0AAAAAAAAAAAAAQg0AAAAAAABDDQAAAAAAAAAAAABDDQAAAAAAAEQNAAAAAAAAAAAAAEQNAAAAAAAARQ0AAAAAAAAAAAAARQ0AAAAAAABGDQAAAAAAAAAAAABGDQAAAAAAAEcNAAAAAAAAAAAAAEcNAAAAAAAASA0AAAAAAAAAAAAASA0AAAAAAABJDQAAAAAAAAAAAABJDQAAAAAAAEoNAAAAAAAAAAAAAEoNAAAAAAAASw0AAAAAAAAAAAAASw0AAAAAAABMDQAAAAAAAAAAAABMDQAAAAAAAE0NAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsNAAAAAAAAOw0AAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAE4NAAAAAAAATw0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4NAAAAAAAATg0AAAAAAAAAAAAAAADwvw"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAE8NAAAAAAAAUA0AAAAAAAAAAAAAUA0AAAAAAABSDQAAAAAAAAAAAABQDQAAAAAAAFANAAAAAAAAAgAAACAgUA0AAAAAAABQDQAAAAAAAAAAAABQDQAAAAAAAFENAAAAAAAAAAAAAFENAAAAAAAAUg0AAAAAAAAAAAAAUg0AAAAAAABTDQAAAAAAAAAAAABTDQAAAAAAAFQNAAAAAAAAAAAAAFQNAAAAAAAAVQ0AAAAAAAAAAAAAVQ0AAAAAAABWDQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8NAAAAAAAATw0AAAAAAAAAAAAAAADwvw"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " gloalT"
					},
					"BwAAAFYNAAAAAAAAVw0AAAAAAAAAAAAAVw0AAAAAAABYDQAAAAAAAAAAAABYDQAAAAAAAFkNAAAAAAAAAAAAAFkNAAAAAAAAWg0AAAAAAAAAAAAAWg0AAAAAAABbDQAAAAAAAAAAAABbDQAAAAAAAFwNAAAAAAAAAAAAAFwNAAAAAAAAXQ0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYNAAAAAAAAVg0AAAAAAAAAAAAAAADwvw"
				],
				[
					128,
					3,
					"left_delete",
					null,
					"AwAAAFwNAAAAAAAAXA0AAAAAAAABAAAAVFsNAAAAAAAAWw0AAAAAAAABAAAAbFoNAAAAAAAAWg0AAAAAAAABAAAAYQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0NAAAAAAAAXQ0AAAAAAAAAAAAAAADwvw"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "balThis.consol"
					},
					"DgAAAFoNAAAAAAAAWw0AAAAAAAAAAAAAWw0AAAAAAABcDQAAAAAAAAAAAABcDQAAAAAAAF0NAAAAAAAAAAAAAF0NAAAAAAAAXg0AAAAAAAAAAAAAXg0AAAAAAABfDQAAAAAAAAAAAABfDQAAAAAAAGANAAAAAAAAAAAAAGANAAAAAAAAYQ0AAAAAAAAAAAAAYQ0AAAAAAABiDQAAAAAAAAAAAABiDQAAAAAAAGMNAAAAAAAAAAAAAGMNAAAAAAAAZA0AAAAAAAAAAAAAZA0AAAAAAABlDQAAAAAAAAAAAABlDQAAAAAAAGYNAAAAAAAAAAAAAGYNAAAAAAAAZw0AAAAAAAAAAAAAZw0AAAAAAABoDQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoNAAAAAAAAWg0AAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "e;"
					},
					"AgAAAGgNAAAAAAAAaQ0AAAAAAAAAAAAAaQ0AAAAAAABqDQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgNAAAAAAAAaA0AAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"left_delete",
					null,
					"AQAAAG4NAAAAAAAAbg0AAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8NAAAAAAAAbw0AAAAAAAAAAAAAAAAAAA"
				],
				[
					136,
					1,
					"revert",
					null,
					"BwAAAAAAAAAAAAAAAAAAAAAAAABuDQAAaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnOwppbXBvcnQgKiBhcyBzdGQgZnJvbSAnc3RkJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgZnVuY3Rpb24gQ29uc29sZShvcHRzID0ge30pIHsKICBsZXQgZW52ID0gc3RkLmdldGVudmlyb24oKTsKICBsZXQgc3RkaW9GZHMgPSBbc3RkLm91dCwgc3RkLmVyciwgc3RkLmluXS5tYXAoZiA9PiBmLmZpbGVubygpKTsKICBsZXQgdGVybUZkID0gc3RkaW9GZHMuZmluZChmZCA9PiBvcy5pc2F0dHkoZmQpKTsKICBpZih0eXBlb2YgdGVybUZkICE9ICdudW1iZXInKSB0ZXJtRmQgPSAxOwoKICBjb25zdCBjb25zb2xlV2lkdGggPSAoZmQgPSB0ZXJtRmQpID0+IHsKICAgIGxldCBzaXplOwogICAgdHJ5IHsKICAgICAgc2l6ZSA9IG9zLnR0eUdldFdpblNpemUoZmQpOwogICAgfSBjYXRjaChlcnIpIHt9CiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShzaXplKSA/IHNpemVbMF0gOiB1bmRlZmluZWQ7CiAgfTsKCiAgY29uc3QgaXNUZXJtaW5hbCA9IG9zLmlzYXR0eSh0ZXJtRmQpOwoKICBjb25zdCBkZWZhdWx0QnJlYWtMZW5ndGggPSAoaXNUZXJtaW5hbCAmJiBjb25zb2xlV2lkdGgoKSkgfHwgZW52LkNPTFVNTlMgfHwgSW5maW5pdHk7CiAgY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7CiAgICBkZXB0aDogMiwKICAgIGNvbG9yczogaXNUZXJtaW5hbCwKICAgIHN0cmluZ0JyZWFrTmV3bGluZTogZmFsc2UsCiAgICBtYXhBcnJheUxlbmd0aDogSW5maW5pdHksCiAgICBjb21wYWN0OiBmYWxzZSwKICAgIGN1c3RvbUluc3BlY3Q6IHRydWUKICB9OwogIGxldCBvcHRpb25zID0gewogICAgLi4uZGVmYXVsdE9wdGlvbnMsCiAgICAuLi4ob3B0cy5pbnNwZWN0T3B0aW9ucyA/PyB7fSkKICB9OwoKICBvcHRpb25zLmJyZWFrTGVuZ3RoID8/PSBkZWZhdWx0QnJlYWtMZW5ndGg7CgogIGxldCBjID0gZ2xvYmFsVGhpcy5jb25zb2xlOwoKICBsZXQgbG9nID0gYy5sb2c7CgogIGxldCBuZXdjb25zID0gT2JqZWN0LmNyZWF0ZShDb25zb2xlLnByb3RvdHlwZSk7CgogIGlmKGdsb2JhbFRoaXMuaW5zcGVjdCAhPT0gaW5zcGVjdCkgZ2xvYmFsVGhpcy5pbnNwZWN0ID0gaW5zcGVjdDsKCiAgaWYoIWdsb2JhbFRoaXMuaW5zcGVjdCkgZ2xvYmFsVGhpcy5pbnNwZWN0ID0gYXJnID0+IGFyZzsKCiAgY29uc3Qgb3V0cHV0RnVuY3Rpb24gPQogICAgb3V0ID0+CiAgICAoLi4uYXJncykgPT4KICAgICAgb3V0LnB1dHMoYXJncy5qb2luKCcgJykgKyAnXG4nKTsKCiAgY29uc3QgaW5zcGVjdEZ1bmN0aW9uID0gKC4uLmFyZ3MpID0+IHsKICAgIGxldCBbb2JqLCBvcHRzXSA9IGFyZ3M7CiAgICBpZihhcmdzLmxlbmd0aCA9PSAwKSBvYmogPSBuZXdjb25zOwogICAgcmV0dXJuIGluc3BlY3Qob2JqLCBDb25zb2xlT3B0aW9ucy5tZXJnZShuZXdjb25zLm9wdGlvbnMsIG9wdHMpKTsKICB9OwoKICBjb25zdCBsb2dGdW5jdGlvbiA9IG91dHB1dCA9PgogICAgZnVuY3Rpb24oLi4uYXJncykgewogICAgICBsZXQgdGVtcE9wdHMgPSBuZXcgQ29uc29sZU9wdGlvbnMobmV3Y29ucy5vcHRpb25zKTsKICAgICAgbGV0IGFjYyA9IHRlbXBPcHRzLnByZWZpeCA/IFt0ZW1wT3B0cy5wcmVmaXhdIDogW107CiAgICAgIGxldCBpID0gMDsKCiAgICAgIGZvcihsZXQgYXJnIG9mIGFyZ3MpIHsKICAgICAgICB0cnkgewogICAgICAgICAgaWYodHlwZW9mIGFyZyA9PSAnb2JqZWN0JykgewogICAgICAgICAgICBpZihhcmcgPT0gbnVsbCkgewogICAgICAgICAgICAgIGFjYy5wdXNoKCdudWxsJyk7CiAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0gZWxzZSBpZihhcmcubWVyZ2UgPT09IENvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSkgewogICAgICAgICAgICAgIHRlbXBPcHRzLm1lcmdlKGFyZyk7CiAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGlmKGkrKyA+PSAwKSB7CiAgICAgICAgICAgIGFjYy5wdXNoKHR5cGVvZiBhcmcgPT0gJ3N0cmluZycgPyBhcmcgOiBpbnNwZWN0RnVuY3Rpb24oYXJnLCB0ZW1wT3B0cykpOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgIH0KICAgICAgICAgIGFjYy5wdXNoKGFyZyk7CiAgICAgICAgfSBjYXRjaChlcnJvcikgewogICAgICAgICAgb3V0cHV0KCdlcnJvcjonLCBlcnJvcik7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gb3V0cHV0KC4uLmFjYyk7CiAgICB9OwoKICBuZXdjb25zLm9wdGlvbnMgPSBvcHRpb25zOwoKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXdjb25zOwoKICByZXR1cm4gYWRkTWlzc2luZ01ldGhvZHMobmV3Y29ucyk7CgogIGZ1bmN0aW9uIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpIHsKICAgIGxldCBmbnMgPSB7fTsKCiAgICBmb3IobGV0IFttZXRob2QsIG91dHB1dF0gb2YgWwogICAgICBbJ2xvZycsIHN0ZC5vdXRdLAogICAgICBbJ2luZm8nLCBzdGQub3V0XSwKICAgICAgWydlcnJvcicsIHN0ZC5lcnJdLAogICAgICBbJ3dhcm4nLCBzdGQuZXJyXSwKICAgICAgWydkZWJ1ZycsIHN0ZC5vdXRdCiAgICBdKSB7CiAgICAgIGlmKGNvbnNbbWV0aG9kXSA9PT0gdW5kZWZpbmVkKSBmbnNbbWV0aG9kXSA9IGxvZ0Z1bmN0aW9uKG91dHB1dEZ1bmN0aW9uKG91dHB1dCkpOwogICAgfQogICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oY29ucywgZm5zKTsKICB9Cn0KCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkgewogIHJldHVybiBuZXcgQ29uc29sZU9wdGlvbnMob2JqKTsKfTsKCmZ1bmN0aW9uIENvbnNvbGVPcHRpb25zKG9iaiA9IHt9KSB7CiAgbGV0IHsgbXVsdGlsaW5lID0gdHJ1ZSwgLi4ucmVzdCB9ID0gb2JqOwoKICBpZihtdWx0aWxpbmUgPT0gZmFsc2UpIHsKICAgIHJlc3QuYnJlYWtMZW5ndGggPSBJbmZpbml0eTsKICAgIHJlc3Quc3RyaW5nQnJlYWtOZXdsaW5lID0gZmFsc2U7CiAgfQogIE9iamVjdC5hc3NpZ24odGhpcywgcmVzdCk7Cn0KQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykgewogIHJldHVybiBPYmplY3QuYXNzaWduKHRoaXMsIC4uLmFyZ3MpOwp9OwpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpIHsKICByZXR1cm4gbmV3IENvbnNvbGVPcHRpb25zKG9wdHMpLm1lcmdlKC4uLmFyZ3MpOwp9OwoKZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoKTsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvbnNvbGVTZXR1cChpbnNwZWN0T3B0aW9ucz17fSwgY2FsbGJhY2sgKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoeyBpbnNwZWN0T3B0aW9ucyB9KTsKaWYoY2FsbGJhY2spCiAgY2FsbGJhY2soZ2xvYmFsVGhpcy5jb25zb2xlKTsKcmV0dXJuIGdsb2JhbFRoaXMuY29uc29sZTsKICB9AAAAAAAAAABwDQAAAAAAAAAAAAAAAAAAAAAAAHANAAAAAAAAAAAAAAAAAAAAAAAAcA0AAAAAAAAAAAAAAAAAAAAAAABwDQAAAAAAAAAAAAAAAAAAAAAAAHANAAAAAAAAAAAAAAAAAAAAAAAAcA0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUKAAAAAAAA5QoAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 20323,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAONPAAAAAAAA408AAAAAAAALAAAAICBtZW1vaXplLAo",
					"AQAAAAAAAAABAAAA408AAAAAAADuTwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOFPAAAAAAAA4k8AAAAAAAAAAAAA4k8AAAAAAADiTwAAAAAAAAgAAAAsCiAgb25jZQ",
					"AQAAAAAAAAABAAAA6U8AAAAAAADhTwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"cut",
					null,
					"AQAAAPUsAAAAAAAA9SwAAAAAAAAXAQAACmV4cG9ydCBmdW5jdGlvbiBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pIHsKICBsZXQgcmV0LAogICAgcmFuID0gZmFsc2U7CgogIHJldHVybiBmdW5jdGlvbiguLi5hcmdzKSB7CiAgICBpZighcmFuKSB7CiAgICAgIHJhbiA9IHRydWU7CiAgICAgIHJldCA9IGZuLmFwcGx5KHRoaXNBcmcgfHwgdGhpcywgYXJncyk7CiAgICB9IGVsc2UgaWYodHlwZW9mIG1lbW9GbiA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHJldCA9IG1lbW9GbihyZXQpOwogICAgfQogICAgcmV0dXJuIHJldDsKICB9Owp9",
					"AQAAAAAAAAABAAAA9SwAAAAAAAAMLgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"paste",
					null,
					"AQAAAPUsAAAAAAAADC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9SwAAAAAAAD1LAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAADC4AAAAAAAAMLgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/extendArray.js",
			"settings":
			{
				"buffer_size": 2787,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADjCgAAZXhwb3J0IGNvbnN0IEFycmF5RXh0ZW5zaW9ucyA9IHsKICBjb250YWlucyhpdGVtKSB7CiAgICByZXR1cm4gdGhpcy5pbmRleE9mKGl0ZW0pICE9IC0xOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBsYXN0KCkgewogICAgICAgIHJldHVybiB0aGlzW3RoaXMubGVuZ3RoIC0gMV07CiAgICAgIH0sCiAgYXQoaW5kZXgpIHsKICAgIGNvbnN0IHsgbGVuZ3RoIH0gPSB0aGlzOwogICAgcmV0dXJuIHRoaXNbKChpbmRleCAlIGxlbmd0aCkgKyBsZW5ndGgpICUgbGVuZ3RoXTsKICB9LAogIGNsZWFyKCkgewogICAgdGhpcy5zcGxpY2UoMCwgdGhpcy5sZW5ndGgpOwogIH0sCgogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKSB7CiAgICBmb3IobGV0IGkgPSB0aGlzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7CiAgICAgIGNvbnN0IHggPSB0aGlzW2ldOwogICAgICBpZihwcmVkaWNhdGUoeCwgaSwgdGhpcykpIHJldHVybiBpOwogICAgfQogICAgcmV0dXJuIC0xOwogIH0sCiAgZmluZExhc3QocHJlZGljYXRlKSB7CiAgICBsZXQgaTsKICAgIGlmKChpID0gdGhpcy5maW5kTGFzdEluZGV4KHByZWRpY2F0ZSkpID09IC0xKSByZXR1cm4gbnVsbDsKICAgIHJldHVybiB0aGlzW2ldOwogIH0sCiAgdW5pcXVlKCkgewogICAgcmV0dXJuIFsuLi5uZXcgU2V0KHRoaXMpXTsKICB9LAogIGFkZCguLi5pdGVtcykgewogICAgbGV0IHJldCA9IGZhbHNlOwogICAgZm9yKGxldCBpdGVtIG9mIGl0ZW1zKSB7CiAgICAgIGlmKHRoaXMuc2VhcmNoKGl0ZW0pID09IC0xKSB7CiAgICAgICAgcmV0ID0gdHJ1ZTsKICAgICAgICB0aGlzLnB1c2goaXRlbSk7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiB0aGlzOwogIH0sCiAgc2VhcmNoKAogICAgaXRlbSwKICAgIHByZWQgPSAoYSwgYikgPT4KICAgICAgYSA9PSBiCiAgICAgICAgPyB0cnVlCiAgICAgICAgOiBhICYmCiAgICAgICAgICBiICYmCiAgICAgICAgICBhLmNvbnN0cnVjdG9yICYmCiAgICAgICAgICBiLmNvbnN0cnVjdG9yICYmCiAgICAgICAgICBhLmNvbnN0cnVjdG9yID09PSBiLmNvbnN0cnVjdG9yICYmCiAgICAgICAgICBhLmNvbnN0cnVjdG9yLmVxdWFsCiAgICAgICAgPyBhLmNvbnN0cnVjdG9yLmVxdWFsKGEsIGIpCiAgICAgICAgOiBmYWxzZQogICkgewogICAgZm9yKGxldCBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIGlmKHByZWQoaXRlbSwgdGhpc1tpXSkpIHJldHVybiBpOwogICAgcmV0dXJuIC0xOwogIH0sCgogIHB1c2hJZihpdGVtLCBwcmVkID0gKGFyciwgaXRlbSkgPT4gYXJyLmluZGV4T2YoaXRlbSkgPT0gLTEpIHsKICAgIGlmKHByZWQodGhpcywgaXRlbSkpIHRoaXMucHVzaChpdGVtKTsKCiAgICByZXR1cm4gdGhpczsKICB9LAogIGluc2VydGVyKHByZWQgPSAoYXJyLCBpdGVtKSA9PiBhcnIuc2VhcmNoKGl0ZW0pID09IC0xKSB7CiAgICByZXR1cm4gKC4uLml0ZW1zKSA9PiB7CiAgICAgIGZvcihsZXQgaXRlbSBvZiBpdGVtcykgewogICAgICAgIGlmKHByZWQodGhpcywgaXRlbSkpIHRoaXMucHVzaChpdGVtKTsKICAgICAgfQogICAgICByZXR1cm4gdGhpczsKICAgIH07CiAgfSwKICBkZWxldGUoLi4uaXRlbXMpIHsKICAgIGZvcihsZXQgaXRlbSBvZiBpdGVtcykgewogICAgICBsZXQgaW5kZXg7CiAgICAgIGlmKChpbmRleCA9IHRoaXMuaW5kZXhPZihpdGVtKSkgIT0gLTEpIHRoaXMuc3BsaWNlKGluZGV4LCAxKTsKICAgIH0KICAgIHJldHVybiB0aGlzOwogIH0sCiAgcmVtb3ZlKHByZWRpY2F0ZSkgewogICAgaWYodHlwZW9mIHByZWRpY2F0ZSAhPSAnZnVuY3Rpb24nKSB7CiAgICAgIGxldCBuZWVkbGUgPSBwcmVkaWNhdGU7CiAgICAgIHByZWRpY2F0ZSA9IGl0ZW0gPT4gaXRlbSA9PSBuZWVkbGU7CiAgICB9CiAgICBmb3IobGV0IGkgPSB0aGlzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7CiAgICAgIGlmKHByZWRpY2F0ZSh0aGlzW2ldLCBpLCB0aGlzKSkgdGhpcy5zcGxpY2UoaSwgMSk7CiAgICB9CiAgICByZXR1cm4gdGhpczsKICB9LAogIHJvdGF0ZVJpZ2h0KG4pIHsKICAgIHRoaXMudW5zaGlmdCguLi50aGlzLnNwbGljZShuLCB0aGlzLmxlbmd0aCAtIG4pKTsKICAgIHJldHVybiB0aGlzOwogIH0sCiAgcm90YXRlTGVmdChuKSB7CiAgICB0aGlzLnB1c2goLi4udGhpcy5zcGxpY2UoMCwgbikpOwogICAgcmV0dXJuIHRoaXM7CiAgfSwKICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IGZpcnN0KCkgewogICAgcmV0dXJuIHRoaXNbMF07CiAgfSwKICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IGhlYWQoKSB7CiAgICByZXR1cm4gdGhpc1swXTsKICB9LAogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgdGFpbCgpIHsKICAgIHJldHVybiB0aGlzW3RoaXMubGVuZ3RoIC0gMV07CiAgfSwKICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IGxhc3QoKSB7CiAgICByZXR1cm4gdGhpc1t0aGlzLmxlbmd0aCAtIDFdOwogIH0KfTsKCmV4cG9ydCBmdW5jdGlvbiBleHRlbmRBcnJheShwcm90byA9IEFycmF5LnByb3RvdHlwZSkgewogIGxldCBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoQXJyYXlFeHRlbnNpb25zKTsKCiAgZm9yKGxldCBuYW1lIGluIGRlc2MpIHsKICAgIGRlc2NbbmFtZV0uZW51bWVyYWJsZSA9IGZhbHNlOwogICAgaWYoIWRlc2NbbmFtZV0uZ2V0KSBkZXNjW25hbWVdLndyaXRhYmxlID0gZmFsc2U7CiAgfQoKICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhwcm90bywgZGVzYyk7CiAgcmV0dXJuIHByb3RvOwp9CgpleHBvcnQgZGVmYXVsdCBleHRlbmRBcnJheTsKAAAAAAAAAACBCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4woAAAAAAADjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACBCgAAZXhwb3J0IGNvbnN0IEFycmF5RXh0ZW5zaW9ucyA9IHsKICBjb250YWlucyhpdGVtKSB7CiAgICByZXR1cm4gdGhpcy5pbmRleE9mKGl0ZW0pICE9IC0xOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBsYXN0KCkgewogICAgICAgIHJldHVybiB0aGlzW3RoaXMubGVuZ3RoIC0gMV07CiAgICAgIH0sCiAgYXQoaW5kZXgpIHsKICAgIGNvbnN0IHsgbGVuZ3RoIH0gPSB0aGlzOwogICAgcmV0dXJuIHRoaXNbKChpbmRleCAlIGxlbmd0aCkgKyBsZW5ndGgpICUgbGVuZ3RoXTsKICB9LAogIGNsZWFyKCkgewogICAgdGhpcy5zcGxpY2UoMCwgdGhpcy5sZW5ndGgpOwogIH0sCgogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKSB7CiAgICBmb3IobGV0IGkgPSB0aGlzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7CiAgICAgIGNvbnN0IHggPSB0aGlzW2ldOwogICAgICBpZihwcmVkaWNhdGUoeCwgaSwgdGhpcykpIHJldHVybiBpOwogICAgfQogICAgcmV0dXJuIC0xOwogIH0sCiAgZmluZExhc3QocHJlZGljYXRlKSB7CiAgICBsZXQgaTsKICAgIGlmKChpID0gdGhpcy5maW5kTGFzdEluZGV4KHByZWRpY2F0ZSkpID09IC0xKSByZXR1cm4gbnVsbDsKICAgIHJldHVybiB0aGlzW2ldOwogIH0sCiAgdW5pcXVlKCkgewogICAgcmV0dXJuIFsuLi5uZXcgU2V0KHRoaXMpXTsKICB9LAogIGFkZCguLi5pdGVtcykgewogICAgbGV0IHJldCA9IGZhbHNlOwogICAgZm9yKGxldCBpdGVtIG9mIGl0ZW1zKSB7CiAgICAgIGlmKHRoaXMuc2VhcmNoKGl0ZW0pID09IC0xKSB7CiAgICAgICAgcmV0ID0gdHJ1ZTsKICAgICAgICB0aGlzLnB1c2goaXRlbSk7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiB0aGlzOwogIH0sCiAgc2VhcmNoKGl0ZW0sIHByZWQgPSAoYSwgYikgPT4gKGEgPT0gYiA/IHRydWUgOiBhICYmIGIgJiYgYS5jb25zdHJ1Y3RvciAmJiBiLmNvbnN0cnVjdG9yICYmIGEuY29uc3RydWN0b3IgPT09IGIuY29uc3RydWN0b3IgJiYgYS5jb25zdHJ1Y3Rvci5lcXVhbCA/IGEuY29uc3RydWN0b3IuZXF1YWwoYSwgYikgOiBmYWxzZSkpIHsKICAgIGZvcihsZXQgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSBpZihwcmVkKGl0ZW0sIHRoaXNbaV0pKSByZXR1cm4gaTsKICAgIHJldHVybiAtMTsKICB9LAoKICBwdXNoSWYoaXRlbSwgcHJlZCA9IChhcnIsIGl0ZW0pID0+IGFyci5pbmRleE9mKGl0ZW0pID09IC0xKSB7CiAgICBpZihwcmVkKHRoaXMsIGl0ZW0pKSB0aGlzLnB1c2goaXRlbSk7CgogICAgcmV0dXJuIHRoaXM7CiAgfSwKICBpbnNlcnRlcihwcmVkID0gKGFyciwgaXRlbSkgPT4gYXJyLnNlYXJjaChpdGVtKSA9PSAtMSkgewogICAgcmV0dXJuICguLi5pdGVtcykgPT4gewogICAgICBmb3IobGV0IGl0ZW0gb2YgaXRlbXMpIHsKICAgICAgICBpZihwcmVkKHRoaXMsIGl0ZW0pKSB0aGlzLnB1c2goaXRlbSk7CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXM7CiAgICB9OwogIH0sCiAgZGVsZXRlKC4uLml0ZW1zKSB7CiAgICBmb3IobGV0IGl0ZW0gb2YgaXRlbXMpIHsKICAgICAgbGV0IGluZGV4OwogICAgICBpZigoaW5kZXggPSB0aGlzLmluZGV4T2YoaXRlbSkpICE9IC0xKSB0aGlzLnNwbGljZShpbmRleCwgMSk7CiAgICB9CiAgICByZXR1cm4gdGhpczsKICB9LAogIHJlbW92ZShwcmVkaWNhdGUpIHsKICAgIGlmKHR5cGVvZiBwcmVkaWNhdGUgIT0gJ2Z1bmN0aW9uJykgewogICAgICBsZXQgbmVlZGxlID0gcHJlZGljYXRlOwogICAgICBwcmVkaWNhdGUgPSBpdGVtID0+IGl0ZW0gPT0gbmVlZGxlOwogICAgfQogICAgZm9yKGxldCBpID0gdGhpcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgewogICAgICBpZihwcmVkaWNhdGUodGhpc1tpXSwgaSwgdGhpcykpIHRoaXMuc3BsaWNlKGksIDEpOwogICAgfQogICAgcmV0dXJuIHRoaXM7CiAgfSwKICByb3RhdGVSaWdodChuKSB7CiAgICB0aGlzLnVuc2hpZnQoLi4udGhpcy5zcGxpY2UobiwgdGhpcy5sZW5ndGggLSBuKSk7CiAgICByZXR1cm4gdGhpczsKICB9LAogIHJvdGF0ZUxlZnQobikgewogICAgdGhpcy5wdXNoKC4uLnRoaXMuc3BsaWNlKDAsIG4pKTsKICAgIHJldHVybiB0aGlzOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBmaXJzdCgpIHsKICAgIHJldHVybiB0aGlzWzBdOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBoZWFkKCkgewogICAgcmV0dXJuIHRoaXNbMF07CiAgfSwKICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IHRhaWwoKSB7CiAgICByZXR1cm4gdGhpc1t0aGlzLmxlbmd0aCAtIDFdOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBsYXN0KCkgewogICAgcmV0dXJuIHRoaXNbdGhpcy5sZW5ndGggLSAxXTsKICB9Cn07CgpleHBvcnQgZnVuY3Rpb24gZXh0ZW5kQXJyYXkocHJvdG8gPSBBcnJheS5wcm90b3R5cGUpIHsKICBsZXQgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKEFycmF5RXh0ZW5zaW9ucyk7CgogIGZvcihsZXQgbmFtZSBpbiBkZXNjKSB7CiAgICBkZXNjW25hbWVdLmVudW1lcmFibGUgPSBmYWxzZTsKICAgIGlmKCFkZXNjW25hbWVdLmdldCkgZGVzY1tuYW1lXS53cml0YWJsZSA9IGZhbHNlOwogIH0KCiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMocHJvdG8sIGRlc2MpOwogIHJldHVybiBwcm90bzsKfQoKZXhwb3J0IGRlZmF1bHQgZXh0ZW5kQXJyYXk7CgAAAAAAAAAA4woAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQoAAAAAAACBCgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/extendGenerator.js",
			"settings":
			{
				"buffer_size": 611,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAA4woAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAA9woAAAAAAAAAAAAA9woAAAAAAAD3CgAAAAAAAOMKAABleHBvcnQgY29uc3QgQXJyYXlFeHRlbnNpb25zID0gewogIGNvbnRhaW5zKGl0ZW0pIHsKICAgIHJldHVybiB0aGlzLmluZGV4T2YoaXRlbSkgIT0gLTE7CiAgfSwKICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IGxhc3QoKSB7CiAgICAgICAgcmV0dXJuIHRoaXNbdGhpcy5sZW5ndGggLSAxXTsKICAgICAgfSwKICBhdChpbmRleCkgewogICAgY29uc3QgeyBsZW5ndGggfSA9IHRoaXM7CiAgICByZXR1cm4gdGhpc1soKGluZGV4ICUgbGVuZ3RoKSArIGxlbmd0aCkgJSBsZW5ndGhdOwogIH0sCiAgY2xlYXIoKSB7CiAgICB0aGlzLnNwbGljZSgwLCB0aGlzLmxlbmd0aCk7CiAgfSwKCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpIHsKICAgIGZvcihsZXQgaSA9IHRoaXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsKICAgICAgY29uc3QgeCA9IHRoaXNbaV07CiAgICAgIGlmKHByZWRpY2F0ZSh4LCBpLCB0aGlzKSkgcmV0dXJuIGk7CiAgICB9CiAgICByZXR1cm4gLTE7CiAgfSwKICBmaW5kTGFzdChwcmVkaWNhdGUpIHsKICAgIGxldCBpOwogICAgaWYoKGkgPSB0aGlzLmZpbmRMYXN0SW5kZXgocHJlZGljYXRlKSkgPT0gLTEpIHJldHVybiBudWxsOwogICAgcmV0dXJuIHRoaXNbaV07CiAgfSwKICB1bmlxdWUoKSB7CiAgICByZXR1cm4gWy4uLm5ldyBTZXQodGhpcyldOwogIH0sCiAgYWRkKC4uLml0ZW1zKSB7CiAgICBsZXQgcmV0ID0gZmFsc2U7CiAgICBmb3IobGV0IGl0ZW0gb2YgaXRlbXMpIHsKICAgICAgaWYodGhpcy5zZWFyY2goaXRlbSkgPT0gLTEpIHsKICAgICAgICByZXQgPSB0cnVlOwogICAgICAgIHRoaXMucHVzaChpdGVtKTsKICAgICAgfQogICAgfQogICAgcmV0dXJuIHRoaXM7CiAgfSwKICBzZWFyY2goCiAgICBpdGVtLAogICAgcHJlZCA9IChhLCBiKSA9PgogICAgICBhID09IGIKICAgICAgICA/IHRydWUKICAgICAgICA6IGEgJiYKICAgICAgICAgIGIgJiYKICAgICAgICAgIGEuY29uc3RydWN0b3IgJiYKICAgICAgICAgIGIuY29uc3RydWN0b3IgJiYKICAgICAgICAgIGEuY29uc3RydWN0b3IgPT09IGIuY29uc3RydWN0b3IgJiYKICAgICAgICAgIGEuY29uc3RydWN0b3IuZXF1YWwKICAgICAgICA/IGEuY29uc3RydWN0b3IuZXF1YWwoYSwgYikKICAgICAgICA6IGZhbHNlCiAgKSB7CiAgICBmb3IobGV0IGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykgaWYocHJlZChpdGVtLCB0aGlzW2ldKSkgcmV0dXJuIGk7CiAgICByZXR1cm4gLTE7CiAgfSwKCiAgcHVzaElmKGl0ZW0sIHByZWQgPSAoYXJyLCBpdGVtKSA9PiBhcnIuaW5kZXhPZihpdGVtKSA9PSAtMSkgewogICAgaWYocHJlZCh0aGlzLCBpdGVtKSkgdGhpcy5wdXNoKGl0ZW0pOwoKICAgIHJldHVybiB0aGlzOwogIH0sCiAgaW5zZXJ0ZXIocHJlZCA9IChhcnIsIGl0ZW0pID0+IGFyci5zZWFyY2goaXRlbSkgPT0gLTEpIHsKICAgIHJldHVybiAoLi4uaXRlbXMpID0+IHsKICAgICAgZm9yKGxldCBpdGVtIG9mIGl0ZW1zKSB7CiAgICAgICAgaWYocHJlZCh0aGlzLCBpdGVtKSkgdGhpcy5wdXNoKGl0ZW0pOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzOwogICAgfTsKICB9LAogIGRlbGV0ZSguLi5pdGVtcykgewogICAgZm9yKGxldCBpdGVtIG9mIGl0ZW1zKSB7CiAgICAgIGxldCBpbmRleDsKICAgICAgaWYoKGluZGV4ID0gdGhpcy5pbmRleE9mKGl0ZW0pKSAhPSAtMSkgdGhpcy5zcGxpY2UoaW5kZXgsIDEpOwogICAgfQogICAgcmV0dXJuIHRoaXM7CiAgfSwKICByZW1vdmUocHJlZGljYXRlKSB7CiAgICBpZih0eXBlb2YgcHJlZGljYXRlICE9ICdmdW5jdGlvbicpIHsKICAgICAgbGV0IG5lZWRsZSA9IHByZWRpY2F0ZTsKICAgICAgcHJlZGljYXRlID0gaXRlbSA9PiBpdGVtID09IG5lZWRsZTsKICAgIH0KICAgIGZvcihsZXQgaSA9IHRoaXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsKICAgICAgaWYocHJlZGljYXRlKHRoaXNbaV0sIGksIHRoaXMpKSB0aGlzLnNwbGljZShpLCAxKTsKICAgIH0KICAgIHJldHVybiB0aGlzOwogIH0sCiAgcm90YXRlUmlnaHQobikgewogICAgdGhpcy51bnNoaWZ0KC4uLnRoaXMuc3BsaWNlKG4sIHRoaXMubGVuZ3RoIC0gbikpOwogICAgcmV0dXJuIHRoaXM7CiAgfSwKICByb3RhdGVMZWZ0KG4pIHsKICAgIHRoaXMucHVzaCguLi50aGlzLnNwbGljZSgwLCBuKSk7CiAgICByZXR1cm4gdGhpczsKICB9LAogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgZmlyc3QoKSB7CiAgICByZXR1cm4gdGhpc1swXTsKICB9LAogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgaGVhZCgpIHsKICAgIHJldHVybiB0aGlzWzBdOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCB0YWlsKCkgewogICAgcmV0dXJuIHRoaXNbdGhpcy5sZW5ndGggLSAxXTsKICB9LAogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgbGFzdCgpIHsKICAgIHJldHVybiB0aGlzW3RoaXMubGVuZ3RoIC0gMV07CiAgfQp9OwoKZXhwb3J0IGZ1bmN0aW9uIGV4dGVuZEFycmF5KHByb3RvID0gQXJyYXkucHJvdG90eXBlKSB7CiAgbGV0IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhBcnJheUV4dGVuc2lvbnMpOwoKICBmb3IobGV0IG5hbWUgaW4gZGVzYykgewogICAgZGVzY1tuYW1lXS5lbnVtZXJhYmxlID0gZmFsc2U7CiAgICBpZighZGVzY1tuYW1lXS5nZXQpIGRlc2NbbmFtZV0ud3JpdGFibGUgPSBmYWxzZTsKICB9CgogIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHByb3RvLCBkZXNjKTsKICByZXR1cm4gcHJvdG87Cn0KCmV4cG9ydCBkZWZhdWx0IGV4dGVuZEFycmF5Owo",
					"AQAAAAAAAAABAAAAAAAAAAAAAADjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAmAAAAAAAAAHoJAAAgIGNvbnRhaW5zKGl0ZW0pIHsKICAgIHJldHVybiB0aGlzLmluZGV4T2YoaXRlbSkgIT0gLTE7CiAgfSwKICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IGxhc3QoKSB7CiAgICAgICAgcmV0dXJuIHRoaXNbdGhpcy5sZW5ndGggLSAxXTsKICAgICAgfSwKICBhdChpbmRleCkgewogICAgY29uc3QgeyBsZW5ndGggfSA9IHRoaXM7CiAgICByZXR1cm4gdGhpc1soKGluZGV4ICUgbGVuZ3RoKSArIGxlbmd0aCkgJSBsZW5ndGhdOwogIH0sCiAgY2xlYXIoKSB7CiAgICB0aGlzLnNwbGljZSgwLCB0aGlzLmxlbmd0aCk7CiAgfSwKCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpIHsKICAgIGZvcihsZXQgaSA9IHRoaXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsKICAgICAgY29uc3QgeCA9IHRoaXNbaV07CiAgICAgIGlmKHByZWRpY2F0ZSh4LCBpLCB0aGlzKSkgcmV0dXJuIGk7CiAgICB9CiAgICByZXR1cm4gLTE7CiAgfSwKICBmaW5kTGFzdChwcmVkaWNhdGUpIHsKICAgIGxldCBpOwogICAgaWYoKGkgPSB0aGlzLmZpbmRMYXN0SW5kZXgocHJlZGljYXRlKSkgPT0gLTEpIHJldHVybiBudWxsOwogICAgcmV0dXJuIHRoaXNbaV07CiAgfSwKICB1bmlxdWUoKSB7CiAgICByZXR1cm4gWy4uLm5ldyBTZXQodGhpcyldOwogIH0sCiAgYWRkKC4uLml0ZW1zKSB7CiAgICBsZXQgcmV0ID0gZmFsc2U7CiAgICBmb3IobGV0IGl0ZW0gb2YgaXRlbXMpIHsKICAgICAgaWYodGhpcy5zZWFyY2goaXRlbSkgPT0gLTEpIHsKICAgICAgICByZXQgPSB0cnVlOwogICAgICAgIHRoaXMucHVzaChpdGVtKTsKICAgICAgfQogICAgfQogICAgcmV0dXJuIHRoaXM7CiAgfSwKICBzZWFyY2goCiAgICBpdGVtLAogICAgcHJlZCA9IChhLCBiKSA9PgogICAgICBhID09IGIKICAgICAgICA/IHRydWUKICAgICAgICA6IGEgJiYKICAgICAgICAgIGIgJiYKICAgICAgICAgIGEuY29uc3RydWN0b3IgJiYKICAgICAgICAgIGIuY29uc3RydWN0b3IgJiYKICAgICAgICAgIGEuY29uc3RydWN0b3IgPT09IGIuY29uc3RydWN0b3IgJiYKICAgICAgICAgIGEuY29uc3RydWN0b3IuZXF1YWwKICAgICAgICA/IGEuY29uc3RydWN0b3IuZXF1YWwoYSwgYikKICAgICAgICA6IGZhbHNlCiAgKSB7CiAgICBmb3IobGV0IGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykgaWYocHJlZChpdGVtLCB0aGlzW2ldKSkgcmV0dXJuIGk7CiAgICByZXR1cm4gLTE7CiAgfSwKCiAgcHVzaElmKGl0ZW0sIHByZWQgPSAoZ2VuLCBpdGVtKSA9PiBnZW4uaW5kZXhPZihpdGVtKSA9PSAtMSkgewogICAgaWYocHJlZCh0aGlzLCBpdGVtKSkgdGhpcy5wdXNoKGl0ZW0pOwoKICAgIHJldHVybiB0aGlzOwogIH0sCiAgaW5zZXJ0ZXIocHJlZCA9IChnZW4sIGl0ZW0pID0+IGdlbi5zZWFyY2goaXRlbSkgPT0gLTEpIHsKICAgIHJldHVybiAoLi4uaXRlbXMpID0+IHsKICAgICAgZm9yKGxldCBpdGVtIG9mIGl0ZW1zKSB7CiAgICAgICAgaWYocHJlZCh0aGlzLCBpdGVtKSkgdGhpcy5wdXNoKGl0ZW0pOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzOwogICAgfTsKICB9LAogIGRlbGV0ZSguLi5pdGVtcykgewogICAgZm9yKGxldCBpdGVtIG9mIGl0ZW1zKSB7CiAgICAgIGxldCBpbmRleDsKICAgICAgaWYoKGluZGV4ID0gdGhpcy5pbmRleE9mKGl0ZW0pKSAhPSAtMSkgdGhpcy5zcGxpY2UoaW5kZXgsIDEpOwogICAgfQogICAgcmV0dXJuIHRoaXM7CiAgfSwKICByZW1vdmUocHJlZGljYXRlKSB7CiAgICBpZih0eXBlb2YgcHJlZGljYXRlICE9ICdmdW5jdGlvbicpIHsKICAgICAgbGV0IG5lZWRsZSA9IHByZWRpY2F0ZTsKICAgICAgcHJlZGljYXRlID0gaXRlbSA9PiBpdGVtID09IG5lZWRsZTsKICAgIH0KICAgIGZvcihsZXQgaSA9IHRoaXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsKICAgICAgaWYocHJlZGljYXRlKHRoaXNbaV0sIGksIHRoaXMpKSB0aGlzLnNwbGljZShpLCAxKTsKICAgIH0KICAgIHJldHVybiB0aGlzOwogIH0sCiAgcm90YXRlUmlnaHQobikgewogICAgdGhpcy51bnNoaWZ0KC4uLnRoaXMuc3BsaWNlKG4sIHRoaXMubGVuZ3RoIC0gbikpOwogICAgcmV0dXJuIHRoaXM7CiAgfSwKICByb3RhdGVMZWZ0KG4pIHsKICAgIHRoaXMucHVzaCguLi50aGlzLnNwbGljZSgwLCBuKSk7CiAgICByZXR1cm4gdGhpczsKICB9LAogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgZmlyc3QoKSB7CiAgICByZXR1cm4gdGhpc1swXTsKICB9LAogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgaGVhZCgpIHsKICAgIHJldHVybiB0aGlzWzBdOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCB0YWlsKCkgewogICAgcmV0dXJuIHRoaXNbdGhpcy5sZW5ndGggLSAxXTsKICB9LAogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgbGFzdCgpIHsKICAgIHJldHVybiB0aGlzW3RoaXMubGVuZ3RoIC0gMV07CiAgfQp9Ow",
					"AQAAAAAAAAABAAAAJQAAAAAAAACfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAACUAAAAAAAAAJgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQAAAAAAAAAlAAAAAAAAAAAAAAAAAAAA"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\n\n\nexpoirt"
					},
					"CgAAACYAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADAAAAAAAAAAMQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					4,
					"left_delete",
					null,
					"BAAAADAAAAAAAAAAMAAAAAAAAAABAAAAIC8AAAAAAAAALwAAAAAAAAABAAAAdC4AAAAAAAAALgAAAAAAAAABAAAAci0AAAAAAAAALQAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAMQAAAAAAAAAxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "rt"
					},
					"AgAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " const"
					},
					"BgAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " Generato"
					},
					"CQAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAAD0AAAAAAAAAPQAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "orProto"
					},
					"BwAAAD0AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQAAAAAAAAA9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEQAAAAAAAAARQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAAEQAAAAAAAAARAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "type"
					},
					"BAAAAEQAAAAAAAAARQAAAAAAAAAAAAAARQAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAEcAAAAAAAAAAAAAAEcAAAAAAAAASAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEoAAAAAAAAASwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"paste",
					null,
					"AQAAAEsAAAAAAAAAhQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"left_delete",
					null,
					"AgAAAEsAAAAAAAAASwAAAAAAAAASAAAAY29uc3QgR2VuZXJhdG9yID0gcwAAAAAAAABzAAAAAAAAAAEAAAAg",
					"AQAAAAAAAAABAAAASwAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"cut",
					null,
					"AQAAACkAAAAAAAAAKQAAAAAAAABKAAAAZXhwb3J0IGNvbnN0IEdlbmVyYXRvclByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihmdW5jdGlvbiogKCkge30pOwo",
					"AQAAAAAAAAABAAAAKQAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					2,
					"paste",
					null,
					"AgAAACkAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAC9AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "Constructor"
					},
					"DAAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACKAAAAAAAAAAkAAABQcm90b3R5cGWKAAAAAAAAAIsAAAAAAAAAAAAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAACNAAAAAAAAAI4AAAAAAAAAAAAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQAAAAAAAACSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"paste",
					null,
					"AgAAAOgAAAAAAAAA+gAAAAAAAAAAAAAA+gAAAAAAAAD6AAAAAAAAABQAAAAgR2VuZXJhdG9yLnByb3RvdHlwZQ",
					"AQAAAAAAAAABAAAA6AAAAAAAAAD8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"paste",
					null,
					"AgAAAJcAAAAAAAAAqQAAAAAAAAAAAAAAqQAAAAAAAACpAAAAAAAAACYAAABPYmplY3QuZ2V0UHJvdG90eXBlT2YoZnVuY3Rpb24qICgpIHt9KQ",
					"AQAAAAAAAAABAAAAlwAAAAAAAAC9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": ".constructor"
					},
					"DAAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAALIAAAAAAAAAAAAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQAAAAAAAACpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACUAAAAAAAAAJgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQAAAAAAAAAlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"paste",
					null,
					"AQAAACUAAAAAAAAAigAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQAAAAAAAAAlAAAAAAAAAAAAAAAAAAAA"
				],
				[
					117,
					2,
					"left_delete",
					null,
					"AgAAAC4AAAAAAAAALgAAAAAAAAABAAAAIC0AAAAAAAAALQAAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "*map"
					},
					"BQAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAmAAAAAAAAAAgAAABmdW5jdGlvbiYAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQAAAAAAAAAlAAAAAAAAAAAAAAAAAAAA"
				],
				[
					122,
					1,
					"left_delete",
					null,
					"AQAAAEIAAAAAAAAAQgAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "ue"
					},
					"AgAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AwAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAArAAAAAAAAAAYAAABtYXBwZXIrAAAAAAAAACwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AwAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABhAAAAAAAAAAYAAABtYXBwZXJhAAAAAAAAAGIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAAAAAAAAABmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "vau"
					},
					"BAAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAAByAAAAAAAAAAMAAAB2YWxyAAAAAAAAAHMAAAAAAAAAAAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"left_delete",
					null,
					"AQAAAHMAAAAAAAAAcwAAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "lue"
					},
					"AwAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					2,
					"left_delete",
					null,
					"AgAAAFQAAAAAAAAAVAAAAAAAAAABAAAAe1MAAAAAAAAAUwAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAVQAAAAAAAABVAAAAAAAAAAAAAAAAAHJA"
				],
				[
					151,
					3,
					"left_delete",
					null,
					"AwAAAHkAAAAAAAAAeQAAAAAAAAABAAAAfXcAAAAAAAAAdwAAAAAAAAACAAAAICB2AAAAAAAAAHYAAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAQG1A"
				],
				[
					153,
					1,
					"left_delete",
					null,
					"AQAAAHgAAAAAAAAAeAAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAeQAAAAAAAAB5AAAAAAAAAAAAAAAAIHNA"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": ":;"
					},
					"AgAAAHoAAAAAAAAAewAAAAAAAAAAAAAAewAAAAAAAAB8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAACJA"
				],
				[
					156,
					2,
					"left_delete",
					null,
					"AgAAAHsAAAAAAAAAewAAAAAAAAABAAAAO3oAAAAAAAAAegAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAHoAAAAAAAAAewAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"left_delete",
					null,
					"AQAAAHoAAAAAAAAAegAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHoAAAAAAAAAewAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHsAAAAAAAAAfAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAAHsAAAAAAAAAewAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAAHsAAAAAAAAAewAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAADJA"
				],
				[
					164,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAZXhwb3J0IGNvbnN0IEdlbmVyYXRvckV4dGVuc2lvbnMgPSB7CiptYXAoZm4sIHRoaXNBcmcpIHsKICBmb3IoY29uc3QgdmFsdWUgb2YgdGhpcykKICAgIHlpZWxkIGZuLmNhbGwodGhpc0FyZywgdmFsdWUpOwp9Cn07CgpleHBvcnQgY29uc3QgR2VuZXJhdG9yUHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGZ1bmN0aW9uKiAoKSB7fSk7CmV4cG9ydCBjb25zdCBHZW5lcmF0b3JDb25zdHJ1Y3RvciA9IEdlbmVyYXRvclByb3RvdHlwZS5jb25zdHJ1Y3RvcjsKCgpleHBvcnQgZnVuY3Rpb24gZXh0ZW5kR2VuZXJhdG9yKHByb3RvID1HZW5lcmF0b3JQcm90b3R5cGUpIHsKICBsZXQgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKEdlbmVyYXRvckV4dGVuc2lvbnMpOwoKICBmb3IobGV0IG5hbWUgaW4gZGVzYykgewogICAgZGVzY1tuYW1lXS5lbnVtZXJhYmxlID0gZmFsc2U7CiAgICBpZighZGVzY1tuYW1lXS5nZXQpIGRlc2NbbmFtZV0ud3JpdGFibGUgPSBmYWxzZTsKICB9CgogIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHByb3RvLCBkZXNjKTsKICByZXR1cm4gcHJvdG87Cn0KCmV4cG9ydCBkZWZhdWx0IGV4dGVuZEdlbmVyYXRvcjsKAAAAAAAAAABjAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 9291,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					71,
					1,
					"paste",
					null,
					"AgAAAE4IAAAAAAAAXggAAAAAAAAAAAAAXggAAAAAAABeCAAAAAAAABAAAABMT0NBVElPTl9TT1VSQ0VT",
					"AQAAAAAAAAABAAAATggAAAAAAABeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"cut",
					null,
					"AQAAALEHAAAAAAAAsQcAAAAAAABSAAAAc2V0KGxvY2F0aW9uX1NPVVJDRVMgbG9jYXRpb24uYyBsb2NhdGlvbi5oIHF1aWNranMtbG9jYXRpb24uYyBxdWlja2pzLWxvY2F0aW9uLmgpCg",
					"AQAAAAAAAAABAAAAsQcAAAAAAAADCAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					2,
					"paste",
					null,
					"AgAAALEHAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAABVCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQcAAAAAAACxBwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					2,
					"left_delete",
					null,
					"AgAAAAgIAAAAAAAACAgAAAAAAAAHAAAAb2NhdGlvbgcIAAAAAAAABwgAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAACAgAAAAAAAAPCAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "stringdecoder"
					},
					"DQAAAAcIAAAAAAAACAgAAAAAAAAAAAAACAgAAAAAAAAJCAAAAAAAAAAAAAAJCAAAAAAAAAoIAAAAAAAAAAAAAAoIAAAAAAAACwgAAAAAAAAAAAAACwgAAAAAAAAMCAAAAAAAAAAAAAAMCAAAAAAAAA0IAAAAAAAAAAAAAA0IAAAAAAAADggAAAAAAAAAAAAADggAAAAAAAAPCAAAAAAAAAAAAAAPCAAAAAAAABAIAAAAAAAAAAAAABAIAAAAAAAAEQgAAAAAAAAAAAAAEQgAAAAAAAASCAAAAAAAAAAAAAASCAAAAAAAABMIAAAAAAAAAAAAABMIAAAAAAAAFAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwgAAAAAAAAHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABwIAAAAAAAAHQgAAAAAAAAAAAAAHQgAAAAAAAAdCAAAAAAAABYAAAAgbG9jYXRpb24uYyBsb2NhdGlvbi5o",
					"AQAAAAAAAAABAAAAHAgAAAAAAAAyCAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "stringds"
					},
					"CQAAACYIAAAAAAAAJwgAAAAAAAAAAAAAJwgAAAAAAAAnCAAAAAAAAAgAAABsb2NhdGlvbicIAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAApCAAAAAAAAAAAAAApCAAAAAAAACoIAAAAAAAAAAAAACoIAAAAAAAAKwgAAAAAAAAAAAAAKwgAAAAAAAAsCAAAAAAAAAAAAAAsCAAAAAAAAC0IAAAAAAAAAAAAAC0IAAAAAAAALggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJggAAAAAAAAuCAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAC4IAAAAAAAALwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALggAAAAAAAAuCAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					2,
					"left_delete",
					null,
					"AgAAAC4IAAAAAAAALggAAAAAAAABAAAAZS0IAAAAAAAALQgAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAALwgAAAAAAAAvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "ecoder"
					},
					"BgAAAC0IAAAAAAAALggAAAAAAAAAAAAALggAAAAAAAAvCAAAAAAAAAAAAAAvCAAAAAAAADAIAAAAAAAAAAAAADAIAAAAAAAAMQgAAAAAAAAAAAAAMQgAAAAAAAAyCAAAAAAAAAAAAAAyCAAAAAAAADMIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQgAAAAAAAAtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"paste",
					null,
					"AgAAAD4IAAAAAAAASwgAAAAAAAAAAAAASwgAAAAAAABLCAAAAAAAAAgAAABsb2NhdGlvbg",
					"AQAAAAAAAAABAAAAPggAAAAAAABGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " $"
					},
					"AgAAAKsIAAAAAAAArAgAAAAAAAAAAAAArAgAAAAAAACtCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwgAAAAAAACrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAK0IAAAAAAAArwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQgAAAAAAACtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"paste",
					null,
					"AQAAAK4IAAAAAAAAwwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArggAAAAAAACuCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Searching 1 file for \"extendArray\" (regex, case sensitive)\n\n/home/roman/Sources/plot-cv/quickjs/modules:\n    ERROR: Unable to open file\n\n0 matches\n\nSearching 127 files for \"extendArray\" (regex, case sensitive)\n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/test-repl.js:\n    7  import REPL from './lib/repl.js';\n    8  import inspect from 'inspect';\n    9: import { extendArray } from 'util';\n   10  \n   11  const base = path.basename(scriptArgs[0], /\\.[a-z]*$/);\n   12  const cmdhist = `.history-${base}`;\n   13  \n   14: extendArray(Array.prototype);\n   15  \n   16  function LoadHistory(filename) {\n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/tests/test_lexer.js:\n    9  import CLexer from '../lib/clexer.js';\n   10  import BNFLexer from '../lib/bnflexer.js';\n   11: import { extendArray } from 'util';\n   12  \n   13  ('use strict');\n   14  ('use math');\n   15  \n   16: extendArray(Array.prototype);\n   17  \n   18  const IntToDWord = ival => (isNaN(ival) === false && ival < 0 ? ival + 4294967296 : ival);\n   ..\n   28  ];\n   29  \n   30: extendArray(Array.prototype);\n   31  \n   32  function WriteFile(file, tok) {\n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/tests/test_parser.js:\n   10  import BNFLexer from '../lib/bnflexer.js';\n   11  import Parser, { DumpToken } from '../lib/parser.js';\n   12: import extendArray from '../lib/extendArray.js';\n   13  \n   14  ('use math');\n   ..\n   17  Error.stackTraceLimit = Infinity;\n   18  \n   19: extendArray(Array.prototype);\n   20  \n   21  function WriteFile(file, str) {\n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/tests/test_misc.js:\n    3  import { Console } from 'console';\n    4  import { Location } from 'misc';\n    5: import { extendArray } from 'util';\n    6  import * as misc from 'misc';\n    7  import * as fs from 'fs';\n    .\n   10  ('use math');\n   11  \n   12: extendArray(Array.prototype);\n   13  \n   14  function main(...args) {\n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/util.js:\n   58    srand\n   59  } from 'misc';\n   60: import { extendArray, ArrayExtensions } from './extendArray.js';\n   61  import * as os from 'os';\n   62  \n   ..\n  809  util.weakAssign = weakAssign;\n  810  util.ArrayExtensions = ArrayExtensions;\n  811: util.extendArray = (proto = Array.prototype, def = util.define) => def(proto, ArrayExtensions);\n  812  util.errors = errors;\n  813  util.getPrototypeChain = getPrototypeChain;\n  ...\n  824  });\n  825  \n  826: export { extendArray, ArrayExtensions } from './extendArray.js';\n  827  export {\n  828    SyscallError,\n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/extendArray.js:\n  109  };\n  110  \n  111: export function extendArray(proto = Array.prototype) {\n  112    let desc = Object.getOwnPropertyDescriptors(ArrayExtensions);\n  113  \n  ...\n  121  }\n  122  \n  123: export default extendArray;\n  124  \n\n17 matches across 6 files\n",
			"settings":
			{
				"buffer_size": 2846,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/util.js",
			"settings":
			{
				"buffer_size": 20323,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					84,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAIQMAAAAAAAAjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAIQMAAAAAAAAjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAIQMAAAAAAAAjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAIQMAAAAAAAAjAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/roman/Sources/plot-cv/quickjs/quickjs-libc.c",
			"settings":
			{
				"buffer_size": 112711,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/home/roman/Sources/plot-cv/quickjs/quickjs-libc.h",
			"settings":
			{
				"buffer_size": 2618,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "qjsm.c",
			"settings":
			{
				"buffer_size": 40171,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
			"settings":
			{
				"buffer_size": 42478,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.c",
			"settings":
			{
				"buffer_size": 1773395,
				"line_ending": "Unix"
			}
		},
		{
			"file": "utils.h",
			"settings":
			{
				"buffer_size": 38612,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/home/roman/Projects/plot-cv/quickjs/cutils.h",
			"settings":
			{
				"buffer_size": 7403,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs-misc.c",
			"settings":
			{
				"buffer_size": 38947,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALeRAAAAAAAAuJEAAAAAAAAAAAAAuJEAAAAAAAC8kQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAt5EAAAAAAAC3kQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"paste",
					null,
					"AQAAALyRAAAAAAAAH5IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvJEAAAAAAAC8kQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "StringDecoder"
					},
					"DgAAAM+RAAAAAAAA0JEAAAAAAAAAAAAA0JEAAAAAAADQkQAAAAAAAAUAAABFcnJvctCRAAAAAAAA0ZEAAAAAAAAAAAAA0ZEAAAAAAADSkQAAAAAAAAAAAADSkQAAAAAAANORAAAAAAAAAAAAANORAAAAAAAA1JEAAAAAAAAAAAAA1JEAAAAAAADVkQAAAAAAAAAAAADVkQAAAAAAANaRAAAAAAAAAAAAANaRAAAAAAAA15EAAAAAAAAAAAAA15EAAAAAAADYkQAAAAAAAAAAAADYkQAAAAAAANmRAAAAAAAAAAAAANmRAAAAAAAA2pEAAAAAAAAAAAAA2pEAAAAAAADbkQAAAAAAAAAAAADbkQAAAAAAANyRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAz5EAAAAAAADUkQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "stringdecoder"
					},
					"DgAAAOKRAAAAAAAA45EAAAAAAAAAAAAA45EAAAAAAADjkQAAAAAAAAkAAABzdGRfZXJyb3LjkQAAAAAAAOSRAAAAAAAAAAAAAOSRAAAAAAAA5ZEAAAAAAAAAAAAA5ZEAAAAAAADmkQAAAAAAAAAAAADmkQAAAAAAAOeRAAAAAAAAAAAAAOeRAAAAAAAA6JEAAAAAAAAAAAAA6JEAAAAAAADpkQAAAAAAAAAAAADpkQAAAAAAAOqRAAAAAAAAAAAAAOqRAAAAAAAA65EAAAAAAAAAAAAA65EAAAAAAADskQAAAAAAAAAAAADskQAAAAAAAO2RAAAAAAAAAAAAAO2RAAAAAAAA7pEAAAAAAAAAAAAA7pEAAAAAAADvkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4pEAAAAAAADrkQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"paste",
					null,
					"AgAAAP+RAAAAAAAAFZIAAAAAAAAAAAAAFZIAAAAAAAAVkgAAAAAAABIAAABqc19zdGRfZXJyb3JfcHJvcHM",
					"AQAAAAAAAAABAAAA/5EAAAAAAAARkgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"cut",
					null,
					"AQAAAByDAAAAAAAAHIMAAAAAAAA2AAAAc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX21pc2NfZnVuY3NbXSA9IHsK",
					"AQAAAAAAAAABAAAAHIMAAAAAAABSgwAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					2,
					"paste",
					null,
					"AgAAAByDAAAAAAAAUoMAAAAAAAAAAAAAUoMAAAAAAACIgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHIMAAAAAAAAcgwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "stringdecoder"
					},
					"DgAAAEGDAAAAAAAAQoMAAAAAAAAAAAAAQoMAAAAAAABCgwAAAAAAAAQAAABtaXNjQoMAAAAAAABDgwAAAAAAAAAAAABDgwAAAAAAAESDAAAAAAAAAAAAAESDAAAAAAAARYMAAAAAAAAAAAAARYMAAAAAAABGgwAAAAAAAAAAAABGgwAAAAAAAEeDAAAAAAAAAAAAAEeDAAAAAAAASIMAAAAAAAAAAAAASIMAAAAAAABJgwAAAAAAAAAAAABJgwAAAAAAAEqDAAAAAAAAAAAAAEqDAAAAAAAAS4MAAAAAAAAAAAAAS4MAAAAAAABMgwAAAAAAAAAAAABMgwAAAAAAAE2DAAAAAAAAAAAAAE2DAAAAAAAAToMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQYMAAAAAAABFgwAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "_props"
					},
					"BgAAAE6DAAAAAAAAT4MAAAAAAAAAAAAAT4MAAAAAAABQgwAAAAAAAAAAAABQgwAAAAAAAFGDAAAAAAAAAAAAAFGDAAAAAAAAUoMAAAAAAAAAAAAAUoMAAAAAAABTgwAAAAAAAAAAAABTgwAAAAAAAFSDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAToMAAAAAAABOgwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"left_delete",
					null,
					"AQAAAFSDAAAAAAAAVIMAAAAAAAAGAAAAX2Z1bmNz",
					"AQAAAAAAAAABAAAAVIMAAAAAAABagwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAFqDAAAAAAAAW4MAAAAAAAAAAAAAW4MAAAAAAABdgwAAAAAAAAAAAABdgwAAAAAAAF6DAAAAAAAAAAAAAFuDAAAAAAAAW4MAAAAAAAACAAAAICBbgwAAAAAAAFuDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWoMAAAAAAABagwAAAAAAAP///////+9/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFyDAAAAAAAAXYMAAAAAAAAAAAAAXYMAAAAAAABegwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXIMAAAAAAABcgwAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFyDAAAAAAAAXYMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXIMAAAAAAABcgwAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAGSAAAAAAAAApIAAAAAAAAAAAAAApIAAAAAAAADkgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAZIAAAAAAAABkgAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "funcs"
					},
					"BgAAAE+DAAAAAAAAUIMAAAAAAAAAAAAAUIMAAAAAAABQgwAAAAAAAAUAAABwcm9wc1CDAAAAAAAAUYMAAAAAAAAAAAAAUYMAAAAAAABSgwAAAAAAAAAAAABSgwAAAAAAAFODAAAAAAAAAAAAAFODAAAAAAAAVIMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAT4MAAAAAAABUgwAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFqDAAAAAAAAW4MAAAAAAAAAAAAAW4MAAAAAAABdgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWoMAAAAAAABagwAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					2,
					"paste",
					null,
					"AgAAAF2DAAAAAAAAjoMAAAAAAAAAAAAAjoMAAAAAAAC/gwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXYMAAAAAAABdgwAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "wi"
					},
					"AwAAAG+DAAAAAAAAcIMAAAAAAAAAAAAAcIMAAAAAAABwgwAAAAAAAAcAAABmbm1hdGNocIMAAAAAAABxgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb4MAAAAAAAB2gwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAAHCDAAAAAAAAcIMAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAcYMAAAAAAABxgwAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "rite"
					},
					"BAAAAHCDAAAAAAAAcYMAAAAAAAAAAAAAcYMAAAAAAABygwAAAAAAAAAAAABygwAAAAAAAHODAAAAAAAAAAAAAHODAAAAAAAAdIMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcIMAAAAAAABwgwAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAHeDAAAAAAAAeIMAAAAAAAAAAAAAeIMAAAAAAAB4gwAAAAAAAAEAAAAz",
					"AQAAAAAAAAABAAAAd4MAAAAAAAB4gwAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "end"
					},
					"BAAAAJ6DAAAAAAAAn4MAAAAAAAAAAAAAn4MAAAAAAACfgwAAAAAAAAcAAABmbm1hdGNon4MAAAAAAACggwAAAAAAAAAAAACggwAAAAAAAKGDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnoMAAAAAAAClgwAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAKSDAAAAAAAApYMAAAAAAAAAAAAApYMAAAAAAAClgwAAAAAAAAEAAAAz",
					"AQAAAAAAAAABAAAApIMAAAAAAAClgwAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"paste",
					null,
					"AgAAAHqDAAAAAAAAkIMAAAAAAAAAAAAAkIMAAAAAAACQgwAAAAAAAA8AAABqc19taXNjX2ZubWF0Y2g",
					"AQAAAAAAAAABAAAAeoMAAAAAAACJgwAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "wrute"
					},
					"BgAAAIuDAAAAAAAAjIMAAAAAAAAAAAAAjIMAAAAAAACMgwAAAAAAAAUAAABmdW5jc4yDAAAAAAAAjYMAAAAAAAAAAAAAjYMAAAAAAACOgwAAAAAAAAAAAACOgwAAAAAAAI+DAAAAAAAAAAAAAI+DAAAAAAAAkIMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkIMAAAAAAACLgwAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					3,
					"left_delete",
					null,
					"AwAAAI+DAAAAAAAAj4MAAAAAAAABAAAAZY6DAAAAAAAAjoMAAAAAAAABAAAAdI2DAAAAAAAAjYMAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAkIMAAAAAAACQgwAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "ite"
					},
					"AwAAAI2DAAAAAAAAjoMAAAAAAAAAAAAAjoMAAAAAAACPgwAAAAAAAAAAAACPgwAAAAAAAJCDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjYMAAAAAAACNgwAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"paste",
					null,
					"AgAAAK6DAAAAAAAAxIMAAAAAAAAAAAAAxIMAAAAAAADEgwAAAAAAAA8AAABqc19taXNjX2ZubWF0Y2g",
					"AQAAAAAAAAABAAAAroMAAAAAAAC9gwAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					5,
					"left_delete",
					null,
					"BQAAAMODAAAAAAAAw4MAAAAAAAABAAAAZcKDAAAAAAAAwoMAAAAAAAABAAAAdMGDAAAAAAAAwYMAAAAAAAABAAAAacCDAAAAAAAAwIMAAAAAAAABAAAAcr+DAAAAAAAAv4MAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAxIMAAAAAAADEgwAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "ed"
					},
					"AgAAAL+DAAAAAAAAwIMAAAAAAAAAAAAAwIMAAAAAAADBgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAv4MAAAAAAAC/gwAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"left_delete",
					null,
					"AQAAAMCDAAAAAAAAwIMAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAwYMAAAAAAADBgwAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "nd"
					},
					"AgAAAMCDAAAAAAAAwYMAAAAAAAAAAAAAwYMAAAAAAADCgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwIMAAAAAAADAgwAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"paste",
					null,
					"AQAAABuDAAAAAAAAGIcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAG4MAAAAAAAAbgwAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJmFAAAAAAAAmoUAAAAAAAAAAAAAmoUAAAAAAACahQAAAAAAAB4BAABkZWNvZGVyLT5sb2NfdmFsID0gSlNfVU5ERUZJTkVEOwoKICBpZihhcmdjID4gMCkKICAgIEpTX1RvSW50MzIoY3R4LCAmZGVjb2Rlci0+aWQsIGFyZ3ZbMF0pOwogIGlmKGFyZ2MgPiAxKQogICAgZGVjb2Rlci0+bGV4ZW1lID0ganNfdG9zdHJpbmcoY3R4LCBhcmd2WzFdKTsKICBpZihhcmdjID4gMikKICAgIGRlY29kZXItPmxvYyA9IGpzX2xvY2F0aW9uX2Zyb20oY3R4LCBhcmd2WzJdKTsKICBpZihhcmdjID4gMykKICAgIEpTX1RvSW50NjQoY3R4LCAmZGVjb2Rlci0+bG9jLnBvcywgYXJndlszXSk7",
					"AQAAAAAAAAABAAAAmYUAAAAAAAC3hgAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAAJmFAAAAAAAAmYUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAmoUAAAAAAACahQAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					3,
					"left_delete",
					null,
					"AwAAAJeFAAAAAAAAl4UAAAAAAAACAAAAICCWhQAAAAAAAJaFAAAAAAAAAQAAAAqVhQAAAAAAAJWFAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAmYUAAAAAAACZhQAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"paste",
					null,
					"AQAAAPECAAAAAAAAiQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QIAAAAAAADxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"",
					null,
					"AQAAABQDAAAAAAAAIQMAAAAAAAAIAAAAbG9jYXRpb24",
					"AQAAAAAAAAABAAAAFAMAAAAAAAAcAwAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"",
					null,
					"AQAAAEUDAAAAAAAAUgMAAAAAAAAIAAAAbG9jYXRpb24",
					"AQAAAAAAAAABAAAARQMAAAAAAABNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"",
					null,
					"AQAAAG8DAAAAAAAAfAMAAAAAAAAIAAAAbG9jYXRpb24",
					"AQAAAAAAAAABAAAAbwMAAAAAAAB3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"cut",
					null,
					"AQAAAGwAAAAAAAAAbAAAAAAAAAAaAAAAI2luY2x1ZGUgInF1aWNranMtbGliYy5oIgo",
					"AQAAAAAAAAABAAAAbAAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					2,
					"paste",
					null,
					"AgAAAGwAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAAAAAAAAABsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "stringdecoder"
					},
					"DgAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACZAAAAAAAAAAQAAABsaWJjmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ4AAAAAAAAAAAAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKEAAAAAAAAAAAAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"left_delete",
					null,
					"AQAAAIQAAAAAAAAAhAAAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAcHFA"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAIQAAAAAAAAAhQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"left_delete",
					null,
					"AQAAAHUAAAAAAAAAdQAAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAHUAAAAAAAAAdgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"cut",
					null,
					"AQAAAGwAAAAAAAAAbAAAAAAAAAAaAAAAI2luY2x1ZGUgPHF1aWNranMtbGliYy5oPgo",
					"AQAAAAAAAAABAAAAbAAAAAAAAACGAAAAAAAAAAAAAAAAAAAA"
				],
				[
					252,
					1,
					"paste",
					null,
					"AQAAADAAAAAAAAAASgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAA"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOWDAAAAAAAA5oMAAAAAAAAAAAAA5oMAAAAAAADmgwAAAAAAAIkDAAAKSlNWYWx1ZQpqc19zdHJpbmdkZWNvZGVyX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBTdHJpbmdEZWNvZGVyKiBkZWNvZGVyOwogIEpTVmFsdWUgb2JqID0gSlNfVU5ERUZJTkVEOwogIEpTVmFsdWUgcHJvdG87CgogIGlmKCEoZGVjb2RlciA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoU3RyaW5nRGVjb2RlcikpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBnb3RvIGZhaWw7CiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBqc19zdHJpbmdkZWNvZGVyX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgZGVjb2Rlcik7CgogIHJldHVybiBvYmo7CmZhaWw6CiAganNfZnJlZShjdHgsIGRlY29kZXIpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfc3RyaW5nZGVjb2Rlcl9mdW5jc1tdID0gewogICAgICBKU19DRlVOQ19ERUYoIndyaXRlIiwgMSwganNfc3RyaW5nZGVjb2Rlcl93cml0ZSksCiAgICBKU19DRlVOQ19ERUYoImVuZCIsIDEsIGpzX3N0cmluZ2RlY29kZXJfZW5kKSwKCn07Cg",
					"AQAAAAAAAAABAAAA5YMAAAAAAABuhwAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					2,
					"left_delete",
					null,
					"AgAAAOWDAAAAAAAA5YMAAAAAAAABAAAAIOSDAAAAAAAA5IMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA5oMAAAAAAADmgwAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAZpAAAAAAAABmkAAAAAAAAAAAAAAAACJA"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABQDAAAAAAAAFQMAAAAAAAAAAAAAFQMAAAAAAAAVAwAAAAAAAKcAAAAKdGhyZWFkX2xvY2FsIFZJU0lCTEUgSlNDbGFzc0lEIGpzX3N0cmluZ2RlY29kZXJfY2xhc3NfaWQgPSAwOwp0aHJlYWRfbG9jYWwgSlNWYWx1ZSBzdHJpbmdkZWNvZGVyX3Byb3RvID0ge0pTX1RBR19VTkRFRklORUR9LCBzdHJpbmdkZWNvZGVyX2N0b3IgPSB7SlNfVEFHX1VOREVGSU5FRH07Cg",
					"AQAAAAAAAAABAAAAFAMAAAAAAAC7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "\n\njs_strni"
					},
					"DQAAAPmVAAAAAAAA+pUAAAAAAAAAAAAA+pUAAAAAAAD8lQAAAAAAAAAAAAD8lQAAAAAAAP2VAAAAAAAAAAAAAP2VAAAAAAAA/5UAAAAAAAAAAAAA+pUAAAAAAAD6lQAAAAAAAAIAAAAgIP2VAAAAAAAA/pUAAAAAAAAAAAAA/pUAAAAAAAD/lQAAAAAAAAAAAAD/lQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAZYAAAAAAAAAAAAAAZYAAAAAAAAClgAAAAAAAAAAAAAClgAAAAAAAAOWAAAAAAAAAAAAAAOWAAAAAAAABJYAAAAAAAAAAAAABJYAAAAAAAAFlgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+ZUAAAAAAAD5lQAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "gh"
					},
					"AgAAAAWWAAAAAAAABpYAAAAAAAAAAAAABpYAAAAAAAAHlgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABZYAAAAAAAAFlgAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					4,
					"left_delete",
					null,
					"BAAAAAaWAAAAAAAABpYAAAAAAAABAAAAaAWWAAAAAAAABZYAAAAAAAABAAAAZwSWAAAAAAAABJYAAAAAAAABAAAAaQOWAAAAAAAAA5YAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAB5YAAAAAAAAHlgAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": "ing"
					},
					"AwAAAAOWAAAAAAAABJYAAAAAAAAAAAAABJYAAAAAAAAFlgAAAAAAAAAAAAAFlgAAAAAAAAaWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAA5YAAAAAAAADlgAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"paste",
					null,
					"AgAAAP2VAAAAAAAAEpYAAAAAAAAAAAAAEpYAAAAAAAASlgAAAAAAAAkAAABqc19zdHJpbmc",
					"AQAAAAAAAAABAAAA/ZUAAAAAAAAGlgAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABKWAAAAAAAAFJYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEpYAAAAAAAASlgAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": "ctx,m"
					},
					"BQAAABOWAAAAAAAAFJYAAAAAAAAAAAAAFJYAAAAAAAAVlgAAAAAAAAAAAAAVlgAAAAAAABaWAAAAAAAAAAAAABaWAAAAAAAAF5YAAAAAAAAAAAAAF5YAAAAAAAAYlgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAE5YAAAAAAAATlgAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABmWAAAAAAAAGpYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGZYAAAAAAAAZlgAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABqWAAAAAAAAG5YAAAAAAAAAAAAAG5YAAAAAAAAdlgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGpYAAAAAAAAalgAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmmAAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgPHF1aWNranMtbGliYy5oPgojaW5jbHVkZSAicXVpY2tqcy1pbnRlcm5hbC5oIgojaW5jbHVkZSAicXVpY2tqcy1sb2NhdGlvbi5oIgojaW5jbHVkZSAicXVpY2tqcy1zdHJpbmdkZWNvZGVyLmgiCiNpbmNsdWRlICJ1dGlscy5oIgojaW5jbHVkZSAicGF0aC5oIgojaW5jbHVkZSAiYmFzZTY0LmgiCiNpbmNsdWRlIDx0aW1lLmg+CiNpbmNsdWRlIDxzeXMvdXRzbmFtZS5oPgojaW5jbHVkZSA8ZXJybm8uaD4KCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCiNkZWZpbmUgbWluKGEsIGIpICgoYSkgPCAoYikgPyAoYSkgOiAoYikpCgplbnVtIHsKICBGVU5DX0dFVEVYRUNVVEFCTEUgPSAwLAogIEZVTkNfR0VUQ1dELAogIEZVTkNfR0VUUk9PVCwKICBGVU5DX0dFVEZELAogIEZVTkNfR0VUQ09NTUFORExJTkUsCiAgRlVOQ19HRVRQUk9DTUFQUywKICBGVU5DX0dFVFBST0NNT1VOVFMsCiAgRlVOQ19HRVRQUk9DU1RBVCwKICBGVU5DX0dFVFBJRCwKICBGVU5DX0dFVFBQSUQsCiAgRlVOQ19HRVRTSUQsCiAgRlVOQ19HRVRVSUQsCiAgRlVOQ19HRVRHSUQsCiAgRlVOQ19HRVRFVUlELAogIEZVTkNfR0VURUdJRCwKICBGVU5DX1NFVFVJRCwKICBGVU5DX1NFVEdJRCwKICBGVU5DX1NFVEVVSUQsCiAgRlVOQ19TRVRFR0lECn07Cgp0eXBlZGVmIHN0cnVjdCBwY2dfc3RhdGVfc2V0c2VxXzY0IHsKICB1aW50NjRfdCBzdGF0ZSwgaW5jOwp9IHBjZzMyX3JhbmRvbV90OwogCnN0YXRpYyBwY2czMl9yYW5kb21fdCBwY2czMl9nbG9iYWwgPSB7MHg4NTNjNDllNjc0OGZlYTliVUxMLCAweGRhM2UzOWNiOTRiOTViZGJVTEx9OwoKc3RhdGljIGlubGluZSB1aW50MzJfdApwY2czMl9yYW5kb21fcihwY2czMl9yYW5kb21fdCogcm5nKSB7CiAgdWludDY0X3Qgb2xkc3RhdGUgPSBybmctPnN0YXRlOwogIHJuZy0+c3RhdGUgPSBvbGRzdGF0ZSAqIDYzNjQxMzYyMjM4NDY3OTMwMDVVTEwgKyBybmctPmluYzsKICB1aW50MzJfdCB4b3JzaGlmdGVkID0gKHVpbnQzMl90KSgoKG9sZHN0YXRlID4+IDE4dSkgXiBvbGRzdGF0ZSkgPj4gMjd1KTsKICB1aW50MzJfdCByb3QgPSBvbGRzdGF0ZSA+PiA1OXU7CiAgcmV0dXJuICh4b3JzaGlmdGVkID4+IHJvdCkgfCAoeG9yc2hpZnRlZCA8PCAoKC1yb3QpICYgMzEpKTsKfQoKc3RhdGljIHVpbnQzMl90CnBjZzMyX3JhbmRvbSh2b2lkKSB7CiAgcmV0dXJuIHBjZzMyX3JhbmRvbV9yKCZwY2czMl9nbG9iYWwpOwp9CgpzdGF0aWMgdm9pZApwY2czMl9pbml0X3N0YXRlKHVpbnQzMl90IHN0YXRlKSB7CiAgcGNnMzJfZ2xvYmFsLnN0YXRlID0gc3RhdGU7Cn0KCnN0YXRpYyB1aW50MzJfdApwY2czMl9yYW5kb21fYm91bmRlZF9kaXZpc2lvbmxlc3ModWludDMyX3QgcmFuZ2UpIHsKICB1aW50NjRfdCByYW5kb20zMmJpdCwgbXVsdGlyZXN1bHQ7CiAgdWludDMyX3QgbGVmdG92ZXI7CiAgdWludDMyX3QgdGhyZXNob2xkOwogIHJhbmRvbTMyYml0ID0gcGNnMzJfcmFuZG9tKCk7CiAgbXVsdGlyZXN1bHQgPSByYW5kb20zMmJpdCAqIHJhbmdlOwogIGxlZnRvdmVyID0gKHVpbnQzMl90KW11bHRpcmVzdWx0OwogIGlmKGxlZnRvdmVyIDwgcmFuZ2UpIHsKICAgIHRocmVzaG9sZCA9IC1yYW5nZSAlIHJhbmdlOwogICAgd2hpbGUobGVmdG92ZXIgPCB0aHJlc2hvbGQpIHsKICAgICAgcmFuZG9tMzJiaXQgPSBwY2czMl9yYW5kb20oKTsKICAgICAgbXVsdGlyZXN1bHQgPSByYW5kb20zMmJpdCAqIHJhbmdlOwogICAgICBsZWZ0b3ZlciA9ICh1aW50MzJfdCltdWx0aXJlc3VsdDsKICAgIH0KICB9CiAgcmV0dXJuIG11bHRpcmVzdWx0ID4+IDMyOyAvLyBbMCwgcmFuZ2UpCn0KCnN0YXRpYyBjb25zdCBjaGFyKiBjb25zdCBlcnJvcnNbXSA9IHsKICAgIDAsCiAgICAiRVBFUk0iLAogICAgIkVOT0VOVCIsCiAgICAiRVNSQ0giLAogICAgIkVJTlRSIiwKICAgICJFSU8iLAogICAgIkVOWElPIiwKICAgICJFMkJJRyIsCiAgICAiRU5PRVhFQyIsCiAgICAiRUJBREYiLAogICAgIkVDSElMRCIsCiAgICAiRUFHQUlOIiwKICAgICJFTk9NRU0iLAogICAgIkVBQ0NFUyIsCiAgICAiRUZBVUxUIiwKICAgICJFTk9UQkxLIiwKICAgICJFQlVTWSIsCiAgICAiRUVYSVNUIiwKICAgICJFWERFViIsCiAgICAiRU5PREVWIiwKICAgICJFTk9URElSIiwKICAgICJFSVNESVIiLAogICAgIkVJTlZBTCIsCiAgICAiRU5GSUxFIiwKICAgICJFTUZJTEUiLAogICAgIkVOT1RUWSIsCiAgICAiRVRYVEJTWSIsCiAgICAiRUZCSUciLAogICAgIkVOT1NQQyIsCiAgICAiRVNQSVBFIiwKICAgICJFUk9GUyIsCiAgICAiRU1MSU5LIiwKICAgICJFUElQRSIsCiAgICAiRURPTSIsCiAgICAiRVJBTkdFIiwKICAgICJFREVBRExLIiwKICAgICJFTkFNRVRPT0xPTkciLAogICAgIkVOT0xDSyIsCiAgICAiRU5PU1lTIiwKICAgICJFTk9URU1QVFkiLAogICAgMCwKICAgIDAsCiAgICAiRU5PTVNHIiwKICAgICJFSURSTSIsCiAgICAiRUNIUk5HIiwKICAgICJFTDJOU1lOQyIsCiAgICAiRUwzSExUIiwKICAgICJFTDNSU1QiLAogICAgIkVMTlJORyIsCiAgICAiRVVOQVRDSCIsCiAgICAiRU5PQ1NJIiwKICAgICJFTDJITFQiLAogICAgIkVCQURFIiwKICAgICJFQkFEUiIsCiAgICAiRVhGVUxMIiwKICAgICJFTk9BTk8iLAogICAgIkVCQURSUUMiLAogICAgMCwKICAgIDAsCiAgICAiRUJGT05UIiwKICAgICJFTk9TVFIiLAogICAgIkVOT0RBVEEiLAogICAgIkVUSU1FIiwKICAgICJFTk9TUiIsCiAgICAiRU5PTkVUIiwKICAgICJFTk9QS0ciLAogICAgIkVSRU1PVEUiLAogICAgIkVOT0xJTksiLAogICAgIkVBRFYiLAogICAgIkVTUk1OVCIsCiAgICAiRUNPTU0iLAogICAgIkVQUk9UTyIsCiAgICAiRU1VTFRJSE9QIiwKICAgICJFRE9URE9UIiwKICAgICJFQkFETVNHIiwKICAgICJFT1ZFUkZMT1ciLAogICAgIkVOT1RVTklRIiwKICAgICJFQkFERkQiLAogICAgIkVSRU1DSEciLAogICAgIkVMSUJBQ0MiLAogICAgIkVMSUJCQUQiLAogICAgIkVMSUJTQ04iLAogICAgIkVMSUJNQVgiLAogICAgIkVMSUJFWEVDIiwKICAgICJFSUxTRVEiLAogICAgIkVSRVNUQVJUIiwKICAgICJFU1RSUElQRSIsCiAgICAiRVVTRVJTIiwKICAgICJFTk9UU09DSyIsCiAgICAiRURFU1RBRERSUkVRIiwKICAgICJFTVNHU0laRSIsCiAgICAiRVBST1RPVFlQRSIsCiAgICAiRU5PUFJPVE9PUFQiLAogICAgIkVQUk9UT05PU1VQUE9SVCIsCiAgICAiRVNPQ0tUTk9TVVBQT1JUIiwKICAgICJFT1BOT1RTVVBQIiwKICAgICJFUEZOT1NVUFBPUlQiLAogICAgIkVBRk5PU1VQUE9SVCIsCiAgICAiRUFERFJJTlVTRSIsCiAgICAiRUFERFJOT1RBVkFJTCIsCiAgICAiRU5FVERPV04iLAogICAgIkVORVRVTlJFQUNIIiwKICAgICJFTkVUUkVTRVQiLAogICAgIkVDT05OQUJPUlRFRCIsCiAgICAiRUNPTk5SRVNFVCIsCiAgICAiRU5PQlVGUyIsCiAgICAiRUlTQ09OTiIsCiAgICAiRU5PVENPTk4iLAogICAgIkVTSFVURE9XTiIsCiAgICAiRVRPT01BTllSRUZTIiwKICAgICJFVElNRURPVVQiLAogICAgIkVDT05OUkVGVVNFRCIsCiAgICAiRUhPU1RET1dOIiwKICAgICJFSE9TVFVOUkVBQ0giLAogICAgIkVBTFJFQURZIiwKICAgICJFSU5QUk9HUkVTUyIsCiAgICAiRVNUQUxFIiwKICAgICJFVUNMRUFOIiwKICAgICJFTk9UTkFNIiwKICAgICJFTkFWQUlMIiwKICAgICJFSVNOQU0iLAogICAgIkVSRU1PVEVJTyIsCiAgICAiRURRVU9UIiwKICAgICJFTk9NRURJVU0iLAogICAgIkVNRURJVU1UWVBFIiwKICAgICJFQ0FOQ0VMRUQiLAogICAgIkVOT0tFWSIsCiAgICAiRUtFWUVYUElSRUQiLAogICAgIkVLRVlSRVZPS0VEIiwKICAgICJFS0VZUkVKRUNURUQiLAogICAgIkVPV05FUkRFQUQiLAogICAgIkVOT1RSRUNPVkVSQUJMRSIsCiAgICAiRVJGS0lMTCIsCn07CgpzdGF0aWMgY29uc3QgY2hhcioKZ2V0X2Vycm9yKGludCBlcnJudW0pIHsKICBpZihlcnJudW0gPj0gMCAmJiBlcnJudW0gPCBjb3VudG9mKGVycm9ycykpCiAgICByZXR1cm4gZXJyb3JzW2Vycm51bV07CiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbnQKZmluZF9lcnJvcihjb25zdCBjaGFyKiBjb2RlKSB7CiAgaW50IGksIGxlbiA9IGNvdW50b2YoZXJyb3JzKTsKICBmb3IoaSA9IDE7IGkgPCBsZW47IGkrKykgewogICAgaWYoZXJyb3JzW2ldICYmICFzdHJjbXAoY29kZSwgZXJyb3JzW2ldKSkKICAgICAgcmV0dXJuIGk7CiAgfQogIHJldHVybiAwOwp9CgpzdGF0aWMgdm9pZApqc19ieXRlY29kZV9mcmVlX2Z1bmMoSlNSdW50aW1lKiBydCwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpIHsKICBqc19mcmVlX3J0KHJ0LCBwdHIpOwp9CgpzdGF0aWMgdm9pZApqc19zdHJpbmdfZnJlZV9mdW5jKEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgSlNWYWx1ZSB2YWx1ZSA9IGpzX2NzdHJpbmdfdmFsdWUob3BhcXVlKTsKCiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbHVlKTsKfQoKc3RhdGljIHZvaWQKanNfYXJyYXlidWZmZXJfZnJlZV9mdW5jKEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgSlNWYWx1ZSB2YWx1ZSA9IEpTX01LUFRSKEpTX1RBR19PQkpFQ1QsIHB0cik7CgogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCB2YWx1ZSk7Cn0KCnR5cGVkZWYgc3RydWN0IE9mZnNldExlbmd0aCB7CiAgaW50NjRfdCBvZmZzZXQ7CiAgaW50NjRfdCBsZW5ndGg7Cn0gT2Zmc2V0TGVuZ3RoOwoKc3RhdGljIE9mZnNldExlbmd0aApnZXRfb2Zmc2V0X2xlbmd0aChKU0NvbnRleHQqIGN0eCwgaW50NjRfdCBsZW4sIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgaW50NjRfdCBvZmZzZXQgPSAwLCBsZW5ndGggPSBsZW47CgogIGlmKGFyZ2MgPj0gMiAmJiBKU19Jc051bWJlcihhcmd2WzFdKSkKICAgIEpTX1RvSW50NjQoY3R4LCAmb2Zmc2V0LCBhcmd2WzFdKTsKICBpZihhcmdjID49IDMgJiYgSlNfSXNOdW1iZXIoYXJndlsyXSkpCiAgICBKU19Ub0ludDY0KGN0eCwgJmxlbmd0aCwgYXJndlsyXSk7CgogIGlmKG9mZnNldCA+PSAwKQogICAgb2Zmc2V0ID0gbWluKG9mZnNldCwgbGVuKTsKICBlbHNlCiAgICBvZmZzZXQgPSAoKG9mZnNldCAlIGxlbikgKyBvZmZzZXQpICUgbGVuOwoKICBpZihsZW5ndGggPj0gMCkKICAgIGxlbmd0aCA9IG1pbihsZW5ndGgsIGxlbiAtIG9mZnNldCk7CiAgZWxzZQogICAgbGVuZ3RoID0gbGVuIC0gb2Zmc2V0OwoKICByZXR1cm4gKE9mZnNldExlbmd0aCl7Lm9mZnNldCA9IG9mZnNldCwgLmxlbmd0aCA9IGxlbmd0aH07Cn0KCnRocmVhZF9sb2NhbCBWSVNJQkxFIEpTQ2xhc3NJRCBqc19zeXNjYWxsZXJyb3JfY2xhc3NfaWQgPSAwOwp0aHJlYWRfbG9jYWwgSlNWYWx1ZSBzeXNjYWxsZXJyb3JfcHJvdG8gPSB7SlNfVEFHX1VOREVGSU5FRH0sIHN5c2NhbGxlcnJvcl9jdG9yID0ge0pTX1RBR19VTkRFRklORUR9OwoKZW51bSB7CiAgU1lTQ0FMTEVSUk9SX1RPU1RSSU5HID0gMCwKICBTWVNDQUxMRVJST1JfU1lTQ0FMTCwKICBTWVNDQUxMRVJST1JfQ09ERSwKICBTWVNDQUxMRVJST1JfRVJSTk8sCiAgU1lTQ0FMTEVSUk9SX1NUQUNLLAogIFNZU0NBTExFUlJPUl9NRVNTQUdFCn07CgpleHRlcm4gdGhyZWFkX2xvY2FsIEpTQ2xhc3NJRCBqc19zeXNjYWxsZXJyb3JfY2xhc3NfaWQ7Cgp0eXBlZGVmIHN0cnVjdCB7CiAgY29uc3QgY2hhciogc3lzY2FsbDsKICBpbnQgZXJybnVtOwogIGNvbnN0IGNoYXIqIHN0YWNrOwp9IFN5c2NhbGxFcnJvcjsKClN5c2NhbGxFcnJvcioKanNfc3lzY2FsbGVycm9yX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIFN5c2NhbGxFcnJvciogZXJyOwogIGVyciA9IEpTX0dldE9wYXF1ZSh2YWx1ZSwganNfc3lzY2FsbGVycm9yX2NsYXNzX2lkKTsKICByZXR1cm4gZXJyOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19zeXNjYWxsZXJyb3JfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIFN5c2NhbGxFcnJvciogZXJyOwogIEpTVmFsdWUgb2JqID0gSlNfVU5ERUZJTkVELCBwcm90byA9IEpTX1VOREVGSU5FRCwgZXJyb3IgPSBqc19nbG9iYWxfbmV3KGN0eCwgIkVycm9yIiwgMCwgMCksIHN0OwogIGlmKCEoZXJyID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihTeXNjYWxsRXJyb3IpKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfc3lzY2FsbGVycm9yX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKICBpZihhcmdjID49IDEpCiAgICBlcnItPnN5c2NhbGwgPSBqc190b3N0cmluZyhjdHgsIGFyZ3ZbMF0pOwogIGlmKGFyZ2MgPj0gMikgewogICAgaW50MzJfdCBlcnJudW07CiAgICBpZihKU19Jc051bWJlcihhcmd2WzFdKSkgewogICAgICBKU19Ub0ludDMyKGN0eCwgJmVycm51bSwgYXJndlsxXSk7CiAgICB9IGVsc2UgewogICAgICBjb25zdCBjaGFyKiBjb2RlID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlsxXSk7CiAgICAgIGVycm51bSA9IGZpbmRfZXJyb3IoY29kZSk7CiAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgY29kZSk7CiAgICB9CiAgICBlcnItPmVycm51bSA9IGVycm51bTsKICB9CiAgaWYoIUpTX0lzVW5kZWZpbmVkKChzdCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgZXJyb3IsICJzdGFjayIpKSkpIHsKICAgIGNvbnN0IGNoYXIqIHN0YWNrID0gSlNfVG9DU3RyaW5nKGN0eCwgc3QpOwogICAgc2l6ZV90IHBvcyA9IHN0cl9jaHIoc3RhY2ssICdcbicpOwogICAgaWYoc3RhY2tbcG9zXSkKICAgICAgcG9zKys7CiAgICBlcnItPnN0YWNrID0ganNfc3RyZHVwKGN0eCwgc3RhY2sgKyBwb3MpOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdGFjayk7CiAgfQogIEpTX0ZyZWVWYWx1ZShjdHgsIHN0KTsKICBKU19GcmVlVmFsdWUoY3R4LCBlcnJvcik7CgogIEpTX1NldE9wYXF1ZShvYmosIGVycik7CiAgcmV0dXJuIG9iajsKZmFpbDoKICBqc19mcmVlKGN0eCwgZXJyKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3N5c2NhbGxlcnJvcl9uZXcoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIHN5c2NhbGwsIGludCBlcnJudW0pIHsKCiAgU3lzY2FsbEVycm9yKiBlcnI7CiAgSlNWYWx1ZSBvYmogPSBKU19VTkRFRklORUQsIHByb3RvID0gSlNfVU5ERUZJTkVELCBlcnJvciA9IGpzX2dsb2JhbF9uZXcoY3R4LCAiRXJyb3IiLCAwLCAwKSwgc3Q7CiAgaWYoIShlcnIgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKFN5c2NhbGxFcnJvcikpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBzeXNjYWxsZXJyb3JfcHJvdG8sIGpzX3N5c2NhbGxlcnJvcl9jbGFzc19pZCk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgZXJyLT5zeXNjYWxsID0ganNfc3RyZHVwKGN0eCwgc3lzY2FsbCk7CiAgZXJyLT5lcnJudW0gPSBlcnJudW07CgogIGlmKCFKU19Jc1VuZGVmaW5lZCgoc3QgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGVycm9yLCAic3RhY2siKSkpKSB7CiAgICBjb25zdCBjaGFyKiBzdGFjayA9IEpTX1RvQ1N0cmluZyhjdHgsIHN0KTsKICAgIHNpemVfdCBwb3MgPSBzdHJfY2hyKHN0YWNrLCAnXG4nKTsKICAgIGlmKHN0YWNrW3Bvc10pCiAgICAgIHBvcysrOwogICAgZXJyLT5zdGFjayA9IGpzX3N0cmR1cChjdHgsIHN0YWNrICsgcG9zKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RhY2spOwogIH0KICBKU19GcmVlVmFsdWUoY3R4LCBzdCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgZXJyb3IpOwoKICBKU19TZXRPcGFxdWUob2JqLCBlcnIpOwogIHJldHVybiBvYmo7CmZhaWw6CiAganNfZnJlZShjdHgsIGVycik7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19zeXNjYWxsZXJyb3JfdGhyb3coSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIHN5c2NhbGwpIHsKICBKU1ZhbHVlIGVycm9yID0ganNfc3lzY2FsbGVycm9yX25ldyhjdHgsIHN5c2NhbGwsIGVycm5vKTsKICByZXR1cm4gSlNfVGhyb3coY3R4LCBlcnJvcik7Cn0KCnN0YXRpYyB2b2lkCmpzX3N5c2NhbGxlcnJvcl9kdW1wKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIER5bkJ1ZiogZGJ1ZikgewogIFN5c2NhbGxFcnJvciogZXJyOwogIGlmKCEoZXJyID0ganNfc3lzY2FsbGVycm9yX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuOwoKICBkYnVmX3B1dHN0cihkYnVmLCAiU3lzY2FsbEVycm9yOiAiKTsKICBpZihlcnItPnN5c2NhbGwpIHsKICAgIGRidWZfcHV0c3RyKGRidWYsIGVyci0+c3lzY2FsbCk7CiAgICBkYnVmX3B1dHN0cihkYnVmLCAiKCkgIik7CiAgfQogIGlmKGVyci0+ZXJybnVtKSB7CiAgICBjb25zdCBjaGFyKiBtc2c7CgogICAgaWYoKG1zZyA9IHN0cmVycm9yKGVyci0+ZXJybnVtKSkpCiAgICAgIGRidWZfcHV0c3RyKGRidWYsIG1zZyk7CiAgfQogIGlmKGVyci0+c3RhY2spIHsKICAgIGRidWZfcHV0YyhkYnVmLCAnXG4nKTsKICAgIGRidWZfcHV0c3RyKGRidWYsIGVyci0+c3RhY2spOwogIH0KICBkYnVmXzAoZGJ1Zik7Cn07CgpzdGF0aWMgSlNWYWx1ZQpqc19zeXNjYWxsZXJyb3JfbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBTeXNjYWxsRXJyb3IqIGVycjsKICBpZighKGVyciA9IGpzX3N5c2NhbGxlcnJvcl9kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBTWVNDQUxMRVJST1JfVE9TVFJJTkc6IHsKICAgICAgRHluQnVmIGRidWYgPSB7MH07CiAgICAgIGpzX2RidWZfaW5pdChjdHgsICZkYnVmKTsKCiAgICAgIGpzX3N5c2NhbGxlcnJvcl9kdW1wKGN0eCwgdGhpc192YWwsICZkYnVmKTsKCiAgICAgIHJldCA9IEpTX05ld1N0cmluZ0xlbihjdHgsIGRidWYuYnVmLCBkYnVmLnNpemUpOwogICAgICBicmVhazsKICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfc3lzY2FsbGVycm9yX2luc3BlY3QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBTeXNjYWxsRXJyb3IqIGVycjsKICBjb25zdCBjaGFyKiBjb2RlID0gMDsKCiAgaWYoIShlcnIgPSBqc19zeXNjYWxsZXJyb3JfZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwogIEpTVmFsdWUgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG8oY3R4LCBzeXNjYWxsZXJyb3JfcHJvdG8pOwogIGlmKGVyci0+c3lzY2FsbCkKICAgIEpTX0RlZmluZVByb3BlcnR5VmFsdWVTdHIoY3R4LCBvYmosICJzeXNjYWxsIiwgSlNfTmV3U3RyaW5nKGN0eCwgZXJyLT5zeXNjYWxsKSwgSlNfUFJPUF9FTlVNRVJBQkxFKTsKICBpZigoY29kZSA9IGdldF9lcnJvcihlcnItPmVycm51bSkpKSB7CiAgICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAiY29kZSIsIEpTX05ld1N0cmluZyhjdHgsIGNvZGUpLCBKU19QUk9QX0VOVU1FUkFCTEUpOwogICAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIG9iaiwgImVycm5vIiwgSlNfTmV3SW50MzIoY3R4LCBlcnItPmVycm51bSksIEpTX1BST1BfRU5VTUVSQUJMRSk7CiAgfQogIGlmKGpzX2hhc19wcm9wZXJ0eXN0cihjdHgsIG9iaiwgInN0YWNrIikpCiAgICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAic3RhY2siLCBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIHRoaXNfdmFsLCAic3RhY2siKSwgSlNfUFJPUF9FTlVNRVJBQkxFKTsKCiAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIG9iaiwgIm1lc3NhZ2UiLCBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIHRoaXNfdmFsLCAibWVzc2FnZSIpLCBKU19QUk9QX0VOVU1FUkFCTEUpOwogIHJldHVybiBvYmo7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3N5c2NhbGxlcnJvcl9nZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgU3lzY2FsbEVycm9yKiBlcnI7CgogIGlmKCEoZXJyID0ganNfc3lzY2FsbGVycm9yX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFNZU0NBTExFUlJPUl9TWVNDQUxMOiB7CiAgICAgIHJldCA9IGVyci0+c3lzY2FsbCA/IEpTX05ld1N0cmluZyhjdHgsIGVyci0+c3lzY2FsbCkgOiBKU19OVUxMOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgU1lTQ0FMTEVSUk9SX0NPREU6IHsKICAgICAgY29uc3QgY2hhciogY29kZTsKICAgICAgcmV0ID0gKGNvZGUgPSBnZXRfZXJyb3IoZXJyLT5lcnJudW0pKSA/IEpTX05ld1N0cmluZyhjdHgsIGNvZGUpIDogSlNfTlVMTDsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFNZU0NBTExFUlJPUl9FUlJOTzogewogICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIGVyci0+ZXJybnVtKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFNZU0NBTExFUlJPUl9TVEFDSzogewogICAgICByZXQgPSBlcnItPnN0YWNrID8gSlNfTmV3U3RyaW5nKGN0eCwgZXJyLT5zdGFjaykgOiBKU19VTkRFRklORUQ7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBTWVNDQUxMRVJST1JfTUVTU0FHRTogewogICAgICBEeW5CdWYgZGJ1ZiA9IHswfTsKICAgICAganNfZGJ1Zl9pbml0KGN0eCwgJmRidWYpOwoKICAgICAganNfc3lzY2FsbGVycm9yX2R1bXAoY3R4LCB0aGlzX3ZhbCwgJmRidWYpOwoKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nTGVuKGN0eCwgZGJ1Zi5idWYsIGJ5dGVfY2hyKGRidWYuYnVmLCBkYnVmLnNpemUsICdcbicpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19zeXNjYWxsZXJyb3JfZnVuY3NbXSA9IHsKICAgIEpTX0NGVU5DX01BR0lDX0RFRigidG9TdHJpbmciLCAwLCBqc19zeXNjYWxsZXJyb3JfbWV0aG9kLCBTWVNDQUxMRVJST1JfVE9TVFJJTkcpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoInN5c2NhbGwiLCBqc19zeXNjYWxsZXJyb3JfZ2V0LCAwLCBTWVNDQUxMRVJST1JfU1lTQ0FMTCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiY29kZSIsIGpzX3N5c2NhbGxlcnJvcl9nZXQsIDAsIFNZU0NBTExFUlJPUl9DT0RFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJlcnJubyIsIGpzX3N5c2NhbGxlcnJvcl9nZXQsIDAsIFNZU0NBTExFUlJPUl9FUlJOTyksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigic3RhY2siLCBqc19zeXNjYWxsZXJyb3JfZ2V0LCAwLCBTWVNDQUxMRVJST1JfU1RBQ0spLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoIm1lc3NhZ2UiLCBqc19zeXNjYWxsZXJyb3JfZ2V0LCAwLCBTWVNDQUxMRVJST1JfTUVTU0FHRSksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIlN5c2NhbGxFcnJvciIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCnZvaWQKanNfc3lzY2FsbGVycm9yX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIFN5c2NhbGxFcnJvciogZXJyID0gSlNfR2V0T3BhcXVlKHZhbCwganNfc3lzY2FsbGVycm9yX2NsYXNzX2lkKTsKICBpZihlcnIpIHsKICAgIGlmKGVyci0+c3lzY2FsbCkKICAgICAganNfZnJlZV9ydChydCwgZXJyLT5zeXNjYWxsKTsKICAgIGpzX2ZyZWVfcnQocnQsIGVycik7CiAgfQp9CgpzdGF0aWMgSlNDbGFzc0RlZiBqc19zeXNjYWxsZXJyb3JfY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJTeXNjYWxsRXJyb3IiLAogICAgLmZpbmFsaXplciA9IGpzX3N5c2NhbGxlcnJvcl9maW5hbGl6ZXIsCn07CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX3Rvc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgSlNWYWx1ZSBhcnJheWJ1ZmZlcl9jdG9yID0ganNfZ2xvYmFsX2dldChjdHgsICJBcnJheUJ1ZmZlciIpOwoKICBpZihqc192YWx1ZV9pc2NsYXNzKGN0eCwgYXJndlswXSwgSlNfQ0xBU1NfQVJSQVlfQlVGRkVSKSB8fCBqc19pc19hcnJheWJ1ZmZlcihjdHgsIGFyZ3ZbMF0pIHx8CiAgICAgSlNfSXNJbnN0YW5jZU9mKGN0eCwgYXJndlswXSwgYXJyYXlidWZmZXJfY3RvcikpIHsKICAgIHVpbnQ4X3QqIGRhdGE7CiAgICBzaXplX3QgbGVuOwoKICAgIGlmKChkYXRhID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmd2WzBdKSkpIHsKICAgICAgT2Zmc2V0TGVuZ3RoIG9sOwoKICAgICAgb2wgPSBnZXRfb2Zmc2V0X2xlbmd0aChjdHgsIGxlbiwgYXJnYywgYXJndik7CgogICAgICByZXQgPSBKU19OZXdTdHJpbmdMZW4oY3R4LCAoY29uc3QgY2hhciopZGF0YSArIG9sLm9mZnNldCwgb2wubGVuZ3RoKTsKICAgIH0KICB9CgogIEpTX0ZyZWVWYWx1ZShjdHgsIGFycmF5YnVmZmVyX2N0b3IpOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX3RvcG9pbnRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIHZvaWQqIHB0ciA9IDA7CiAgY2hhciBidWZbMTI4XTsKCiAgaWYoanNfdmFsdWVfaXNjbGFzcyhjdHgsIGFyZ3ZbMF0sIEpTX0NMQVNTX0FSUkFZX0JVRkZFUikgfHwganNfaXNfYXJyYXlidWZmZXIoY3R4LCBhcmd2WzBdKSkgewogICAgc2l6ZV90IGxlbjsKICAgIHB0ciA9IEpTX0dldEFycmF5QnVmZmVyKGN0eCwgJmxlbiwgYXJndlswXSk7CiAgfSBlbHNlIGlmKEpTX0lzU3RyaW5nKGFyZ3ZbMF0pKSB7CiAgICBwdHIgPSBqc19jc3RyaW5nX3B0cihhcmd2WzBdKTsKICB9CgogIGlmKHB0cikgewogICAgc25wcmludGYoYnVmLCBzaXplb2YoYnVmKSwgIiVwIiwgcHRyKTsKICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIGJ1Zik7CiAgfSBlbHNlIHsKICAgIHJldCA9IEpTX05VTEw7CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX3RvYXJyYXlidWZmZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoSlNfSXNTdHJpbmcoYXJndlswXSkpIHsKICAgIEpTVmFsdWVDb25zdCB2YWx1ZSA9IGFyZ3ZbMF07IC8vIEpTX0R1cFZhbHVlKGN0eCwgYXJndlswXSk7CiAgICBzaXplX3QgbGVuOwogICAgY29uc3QgY2hhciogc3RyOwogICAgaWYoKHN0ciA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZsZW4sIHZhbHVlKSkpIHsKICAgICAgT2Zmc2V0TGVuZ3RoIG9sOwogICAgICBvbCA9IGdldF9vZmZzZXRfbGVuZ3RoKGN0eCwgbGVuLCBhcmdjLCBhcmd2KTsKICAgICAgcmV0ID0gSlNfTmV3QXJyYXlCdWZmZXIoY3R4LCAodWludDhfdCopc3RyICsgb2wub2Zmc2V0LCBvbC5sZW5ndGgsIGpzX3N0cmluZ19mcmVlX2Z1bmMsICh2b2lkKilzdHIsIEZBTFNFKTsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfZHVwYXJyYXlidWZmZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBKU1ZhbHVlIGFycmF5YnVmZmVyX2N0b3IgPSBqc19nbG9iYWxfZ2V0KGN0eCwgIkFycmF5QnVmZmVyIik7CgogIGlmKEpTX0lzSW5zdGFuY2VPZihjdHgsIGFyZ3ZbMF0sIGFycmF5YnVmZmVyX2N0b3IpKSB7CiAgICBKU1ZhbHVlIHZhbHVlID0gSlNfRHVwVmFsdWUoY3R4LCBhcmd2WzBdKTsKICAgIHVpbnQ4X3QqIGRhdGE7CiAgICBzaXplX3QgbGVuOwoKICAgIGlmKChkYXRhID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmd2WzBdKSkpIHsKICAgICAgT2Zmc2V0TGVuZ3RoIG9sID0gZ2V0X29mZnNldF9sZW5ndGgoY3R4LCBsZW4sIGFyZ2MsIGFyZ3YpOwogICAgICBKU09iamVjdCogb2JqID0gSlNfVkFMVUVfR0VUX09CSih2YWx1ZSk7CiAgICAgIHJldCA9IEpTX05ld0FycmF5QnVmZmVyKGN0eCwgZGF0YSArIG9sLm9mZnNldCwgb2wubGVuZ3RoLCBqc19hcnJheWJ1ZmZlcl9mcmVlX2Z1bmMsICh2b2lkKilvYmosIEZBTFNFKTsKICAgIH0KICB9CgogIEpTX0ZyZWVWYWx1ZShjdHgsIGFycmF5YnVmZmVyX2N0b3IpOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKGpzX2lzX2FycmF5YnVmZmVyKGN0eCwgYXJndlswXSkpIHsKICAgIEpTT2JqZWN0KiBvYmogPSBKU19WQUxVRV9HRVRfT0JKKGFyZ3ZbMF0pOwogICAgSlNBcnJheUJ1ZmZlciogYXJyYXlidWYgPSBvYmotPnUuYXJyYXlfYnVmZmVyOwogICAgdWludDY0X3QgbmV3bGVuOwogICAgSlNfVG9JbmRleChjdHgsICZuZXdsZW4sIGFyZ3ZbMV0pOwoKICAgIGlmKGFycmF5YnVmLT5zaGFyZWQpCiAgICAgIHJldCA9IEpTX1Rocm93VHlwZUVycm9yKGN0eCwgIkFycmF5QnVmZmVyIG11c3Qgbm90IGJlIHNoYXJlZCIpOwogICAgZWxzZSBpZihhcnJheWJ1Zi0+c2hhcmVkKQogICAgICByZXQgPSBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJBcnJheUJ1ZmZlciBtdXN0IGhhdmUgb3BhcXVlID09IDAiKTsKICAgIGVsc2UgewogICAgICBhcnJheWJ1Zi0+ZGF0YSA9IGpzX3JlYWxsb2MoY3R4LCBhcnJheWJ1Zi0+ZGF0YSwgbmV3bGVuKTsKICAgICAgYXJyYXlidWYtPmJ5dGVfbGVuZ3RoID0gbmV3bGVuOwoKICAgICAgcmV0ID0gSlNfTUtQVFIoSlNfVEFHX09CSkVDVCwgb2JqKTsKICAgIH0KICB9IGVsc2UgewogICAgcmV0ID0gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiRXhwZWN0aW5nIEFycmF5QnVmZmVyIik7CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2NvbmNhdGFycmF5YnVmZmVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgaW50IGk7CiAgc2l6ZV90IHRvdGFsX2xlbiA9IDAsIHBvcyA9IDA7CiAgdWludDhfdCogYnVmOwoKICBmb3IoaSA9IDA7IGkgPCBhcmdjOyBpKyspIHsKICAgIGlmKCFqc19pc19hcnJheWJ1ZmZlcihjdHgsIGFyZ3ZbMF0pKQogICAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgJWQgaXMgbm90IEFycmF5QnVmZmVyIiwgaSArIDEpOwogICAgdG90YWxfbGVuICs9IGpzX2FycmF5YnVmZmVyX2xlbmd0aChjdHgsIGFyZ3ZbaV0pOwogIH0KCiAgYnVmID0ganNfbWFsbG9jKGN0eCwgdG90YWxfbGVuKTsKCiAgZm9yKGkgPSAwOyBpIDwgYXJnYzsgaSsrKSB7CiAgICBzaXplX3QgbGVuOwogICAgdWludDhfdCogcHRyOwogICAgcHRyID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmd2W2ldKTsKCiAgICBtZW1jcHkoJmJ1Zltwb3NdLCBwdHIsIGxlbik7CiAgICBwb3MgKz0gbGVuOwogIH0KCiAgcmV0dXJuIEpTX05ld0FycmF5QnVmZmVyKGN0eCwgYnVmLCB0b3RhbF9sZW4sIGpzX2J5dGVjb2RlX2ZyZWVfZnVuYywgMCwgRkFMU0UpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2dldHBlcmZvcm1hbmNlY291bnRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHN0cnVjdCB0aW1lc3BlYyB0czsKCiAgY2xvY2tfZ2V0dGltZShDTE9DS19NT05PVE9OSUMsICZ0cyk7CgogIHJldHVybiBKU19OZXdGbG9hdDY0KGN0eCwgKGRvdWJsZSl0cy50dl9zZWMgKiAxMDAwICsgKChkb3VibGUpdHMudHZfbnNlYyAvIDFlMDYpKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19wcm9jbGluayhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgRHluQnVmIGRidWYgPSB7MH07CiAgY29uc3QgY2hhciAqbGluaywgcGF0aFsyNTZdOwogIHNpemVfdCBuOwogIHNzaXplX3QgcjsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIEZVTkNfR0VURVhFQ1VUQUJMRTogbGluayA9ICJleGUiOyBicmVhazsKICAgIGNhc2UgRlVOQ19HRVRDV0Q6IGxpbmsgPSAiY3dkIjsgYnJlYWs7CiAgICBjYXNlIEZVTkNfR0VUUk9PVDogbGluayA9ICJyb290IjsgYnJlYWs7CiAgICBjYXNlIEZVTkNfR0VURkQ6IGxpbmsgPSAiZmQvIjsgYnJlYWs7CiAgfQoKICBuID0gc25wcmludGYocGF0aCwgc2l6ZW9mKHBhdGgpLCAiL3Byb2Mvc2VsZi8lcyIsIGxpbmspOwoKICBpZihtYWdpYyA9PSBGVU5DX0dFVEZEKSB7CiAgICBpbnQzMl90IGZkOwogICAgaWYoYXJnYyA8IDEgfHwgIUpTX0lzTnVtYmVyKGFyZ3ZbMF0pKQogICAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgMSBtdXN0IGJlIE51bWJlciIpOwoKICAgIEpTX1RvSW50MzIoY3R4LCAmZmQsIGFyZ3ZbMF0pOwogICAgc25wcmludGYoJnBhdGhbbl0sIHNpemVvZihwYXRoKSAtIG4sICIlZCIsIGZkKTsKICB9CgogIGpzX2RidWZfaW5pdChjdHgsICZkYnVmKTsKCiAgaWYoKHIgPSBwYXRoX3JlYWRsaW5rKHBhdGgsICZkYnVmKSkgPiAwKSB7CiAgICByZXQgPSBkYnVmX3Rvc3RyaW5nX2ZyZWUoJmRidWYsIGN0eCk7CiAgfSBlbHNlIGlmKHIgPCAwKSB7CiAgICByZXQgPSBqc19zeXNjYWxsZXJyb3JfdGhyb3coY3R4LCAicmVhZGxpbmsiKTsKICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfcHJvY3JlYWQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIER5bkJ1ZiBkYnVmID0gezB9OwogIHNzaXplX3QgaSwgaiA9IDAsIHNpemUsIG47CiAgY29uc3QgY2hhciogZmlsZTsKICBjaGFyIHNlcCA9ICdcbic7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBGVU5DX0dFVENPTU1BTkRMSU5FOgogICAgICBmaWxlID0gIi9wcm9jL3NlbGYvY21kbGluZSI7CiAgICAgIHNlcCA9ICdcMCc7CiAgICAgIGJyZWFrOwogICAgY2FzZSBGVU5DX0dFVFBST0NNQVBTOgogICAgICBmaWxlID0gIi9wcm9jL3NlbGYvbWFwcyI7CiAgICAgIHNlcCA9ICdcbic7CiAgICAgIGJyZWFrOwogICAgY2FzZSBGVU5DX0dFVFBST0NNT1VOVFM6CiAgICAgIGZpbGUgPSAiL3Byb2Mvc2VsZi9tb3VudHMiOwogICAgICBzZXAgPSAnXG4nOwogICAgICBicmVhazsKICAgIGNhc2UgRlVOQ19HRVRQUk9DU1RBVDoKICAgICAgZmlsZSA9ICIvcHJvYy9zZWxmL3N0YXQiOwogICAgICBzZXAgPSAnICc7CiAgICAgIGJyZWFrOwogIH0KCiAganNfZGJ1Zl9pbml0KGN0eCwgJmRidWYpOwoKICBpZigoc2l6ZSA9IGRidWZfbG9hZCgmZGJ1ZiwgZmlsZSkpID4gMCkgewoKICAgIHdoaWxlKHNpemUgPiAwICYmIGRidWYuYnVmW3NpemUgLSAxXSA9PSAnXG4nKSBzaXplLS07CgogICAgcmV0ID0gSlNfTmV3QXJyYXkoY3R4KTsKICAgIGZvcihpID0gMDsgaSA8IHNpemU7IGkgKz0gbiArIDEpIHsKICAgICAgc2l6ZV90IGxlbjsKICAgICAgbGVuID0gbiA9IGJ5dGVfY2hyKCZkYnVmLmJ1ZltpXSwgc2l6ZSAtIGksIHNlcCk7CiAgICAgIHdoaWxlKGxlbiA+IDAgJiYgaXNfd2hpdGVzcGFjZV9jaGFyKGRidWYuYnVmW2kgKyBsZW4gLSAxXSkpIGxlbi0tOwogICAgICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgaisrLCBKU19OZXdTdHJpbmdMZW4oY3R4LCAmZGJ1Zi5idWZbaV0sIGxlbikpOwogICAgfQogIH0KCiAgZGJ1Zl9mcmVlKCZkYnVmKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19nZXRwcm90b3R5cGVjaGFpbihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZihhcmdjID49IDEgJiYgSlNfSXNPYmplY3QoYXJndlswXSkpIHsKICAgIEpTVmFsdWUgcHJvdG8gPSBKU19HZXRQcm90b3R5cGUoY3R4LCBhcmd2WzBdKTsKICAgIHNpemVfdCBqID0gMDsKICAgIHJldCA9IEpTX05ld0FycmF5KGN0eCk7CgogICAgZG8gewogICAgICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgaisrLCBwcm90byk7CiAgICAgIHByb3RvID0gSlNfR2V0UHJvdG90eXBlKGN0eCwgcHJvdG8pOwoKICAgIH0gd2hpbGUoSlNfSXNPYmplY3QocHJvdG8pKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19ocnRpbWUoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBzdHJ1Y3QgdGltZXNwZWMgdHM7CiAgSlNWYWx1ZSByZXQ7CgogIGNsb2NrX2dldHRpbWUoQ0xPQ0tfTU9OT1RPTklDLCAmdHMpOwoKICBpZihhcmdjID49IDEgJiYgSlNfSXNBcnJheShjdHgsIGFyZ3ZbMF0pKSB7CiAgICBpbnQ2NF90IHNlYywgbnNlYzsKICAgIEpTVmFsdWUgcHNlYywgcG5zZWM7CgogICAgcHNlYyA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgYXJndlswXSwgMCk7CiAgICBwbnNlYyA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgYXJndlswXSwgMSk7CgogICAgSlNfVG9JbnQ2NChjdHgsICZzZWMsIHBzZWMpOwogICAgSlNfVG9JbnQ2NChjdHgsICZuc2VjLCBwbnNlYyk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBwc2VjKTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHBuc2VjKTsKCiAgICBpZihuc2VjID4gdHMudHZfbnNlYykgewogICAgICB0cy50dl9zZWMgLT0gMTsKICAgICAgdHMudHZfbnNlYyArPSAxMDAwMDAwMDAwOwogICAgfQoKICAgIHRzLnR2X3NlYyAtPSBzZWM7CiAgICB0cy50dl9uc2VjIC09IG5zZWM7CiAgfQoKICByZXQgPSBKU19OZXdBcnJheShjdHgpOwogIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCAwLCBKU19OZXdJbnQ2NChjdHgsIHRzLnR2X3NlYykpOwogIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCAxLCBKU19OZXdJbnQ2NChjdHgsIHRzLnR2X25zZWMpKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19mbm1hdGNoKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgc2l6ZV90IHBsZW4sIHNsZW47CiAgaW50MzJfdCBmbGFncyA9IDAsIHJldDsKCiAgY29uc3QgY2hhciogcGF0dGVybiA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZwbGVuLCBhcmd2WzBdKTsKICBjb25zdCBjaGFyKiBzdHJpbmcgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmc2xlbiwgYXJndlsxXSk7CgogIGlmKGFyZ2MgPj0gMykKICAgIEpTX1RvSW50MzIoY3R4LCAmZmxhZ3MsIGFyZ3ZbMl0pOwoKICByZXQgPSBwYXRoX2ZubWF0Y2gocGF0dGVybiwgcGxlbiwgc3RyaW5nLCBzbGVuLCBmbGFncyk7CiAgSlNfRnJlZUNTdHJpbmcoY3R4LCBwYXR0ZXJuKTsKICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cmluZyk7CiAgcmV0dXJuIEpTX05ld0Jvb2woY3R4LCAhcmV0KTsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY191bmFtZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHN0cnVjdCB1dHNuYW1lIHVuOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZih1bmFtZSgmdW4pICE9IC0xKSB7CiAgICByZXQgPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgInN5c25hbWUiLCBKU19OZXdTdHJpbmcoY3R4LCB1bi5zeXNuYW1lKSk7CiAgICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgIm5vZGVuYW1lIiwgSlNfTmV3U3RyaW5nKGN0eCwgdW4ubm9kZW5hbWUpKTsKICAgIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAicmVsZWFzZSIsIEpTX05ld1N0cmluZyhjdHgsIHVuLnJlbGVhc2UpKTsKICAgIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAidmVyc2lvbiIsIEpTX05ld1N0cmluZyhjdHgsIHVuLnZlcnNpb24pKTsKICAgIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAibWFjaGluZSIsIEpTX05ld1N0cmluZyhjdHgsIHVuLm1hY2hpbmUpKTsKICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfYnRvYShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0OwogIElucHV0QnVmZmVyIGlucHV0ID0ganNfaW5wdXRfYnVmZmVyKGN0eCwgYXJndlswXSk7CiAgc2l6ZV90IGVuY2xlbiA9IGI2NF9nZXRfZW5jb2RlZF9idWZmZXJfc2l6ZShpbnB1dC5zaXplKTsKICB1aW50OF90KiBlbmNidWYgPSBqc19tYWxsb2MoY3R4LCBlbmNsZW4pOwoKICBiNjRfZW5jb2RlKGlucHV0LmRhdGEsIGlucHV0LnNpemUsIGVuY2J1Zik7CgogIHJldCA9IEpTX05ld1N0cmluZ0xlbihjdHgsIChjb25zdCBjaGFyKillbmNidWYsIGVuY2xlbik7CiAganNfZnJlZShjdHgsIGVuY2J1Zik7CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19hdG9iKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQ7CiAgSW5wdXRCdWZmZXIgaW5wdXQgPSBqc19pbnB1dF9idWZmZXIoY3R4LCBhcmd2WzBdKTsKICBzaXplX3QgZGVjbGVuID0gYjY0X2dldF9kZWNvZGVkX2J1ZmZlcl9zaXplKGlucHV0LnNpemUpOwogIHVpbnQ4X3QqIGRlY2J1ZiA9IGpzX21hbGxvYyhjdHgsIGRlY2xlbik7CgogIGI2NF9kZWNvZGUoaW5wdXQuZGF0YSwgaW5wdXQuc2l6ZSwgZGVjYnVmKTsKCiAgcmV0ID0gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KGN0eCwgKGNvbnN0IHVpbnQ4X3QqKWRlY2J1ZiwgZGVjbGVuKTsKICBqc19mcmVlKGN0eCwgZGVjYnVmKTsKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2NvbXBpbGVfZmlsZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGNvbnN0IGNoYXIqIGZpbGVuYW1lID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSk7CiAgQk9PTCBtb2R1bGUgPSBGQUxTRTsKICB1aW50OF90KiBidWY7CiAgc2l6ZV90IGJ1Zl9sZW47CiAgaW50IGV2YWxfZmxhZ3MgPSBKU19FVkFMX0ZMQUdfQ09NUElMRV9PTkxZOwoKICBpZihhcmdjID49IDIpCiAgICBtb2R1bGUgPSBKU19Ub0Jvb2woY3R4LCBhcmd2WzFdKTsKICBlbHNlIGlmKHN0cl9lbmRzKGZpbGVuYW1lLCAiLmpzbSIpKQogICAgbW9kdWxlID0gVFJVRTsKCiAgLyogbG9hZCBKUyBmcm9tIGZpbGUgdG8gYnVmZmVyICovCiAgaWYoKGJ1ZiA9IGpzX2xvYWRfZmlsZShjdHgsICZidWZfbGVuLCBmaWxlbmFtZSkpKSB7CgogICAgaWYoIW1vZHVsZSAmJiBKU19EZXRlY3RNb2R1bGUoKGNvbnN0IGNoYXIqKWJ1ZiwgYnVmX2xlbikpCiAgICAgIG1vZHVsZSA9IFRSVUU7CgogICAgZXZhbF9mbGFncyB8PSAobW9kdWxlID8gSlNfRVZBTF9UWVBFX01PRFVMRSA6IEpTX0VWQUxfVFlQRV9HTE9CQUwpOwoKICAgIHJldCA9IEpTX0V2YWwoY3R4LCAoY29uc3QgY2hhciopYnVmLCBidWZfbGVuLCBmaWxlbmFtZSwgZXZhbF9mbGFncyk7CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX3dyaXRlX29iamVjdChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIHNpemVfdCBzaXplOwogIHVpbnQ4X3QqIGJ5dGVjb2RlOwoKICBpZigoYnl0ZWNvZGUgPSBKU19Xcml0ZU9iamVjdChjdHgsICZzaXplLCBhcmd2WzBdLCBKU19XUklURV9PQkpfQllURUNPREUpKSkgewogICAgcmV0ID0gSlNfTmV3QXJyYXlCdWZmZXIoY3R4LCBieXRlY29kZSwgc2l6ZSwganNfYnl0ZWNvZGVfZnJlZV9mdW5jLCAwLCBGQUxTRSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfcmVhZF9vYmplY3QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBJbnB1dEJ1ZmZlciBpbnB1dCA9IGpzX2lucHV0X2J1ZmZlcihjdHgsIGFyZ3ZbMF0pOwoKICByZXR1cm4gSlNfUmVhZE9iamVjdChjdHgsIGlucHV0LmRhdGEsIGlucHV0LnNpemUsIEpTX1JFQURfT0JKX0JZVEVDT0RFKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19nZXR4KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKCiAgaW50MzJfdCByZXQgPSAwOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgRlVOQ19HRVRQSUQ6IHsKICAgICAgcmV0ID0gZ2V0cGlkKCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBGVU5DX0dFVFBQSUQ6IHsKICAgICAgcmV0ID0gZ2V0cHBpZCgpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRlVOQ19HRVRTSUQ6IHsKICAgICAgLy8gc3JldCA9IGdldHNpZCgpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRlVOQ19HRVRVSUQ6IHsKICAgICAgcmV0ID0gZ2V0dWlkKCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBGVU5DX0dFVEdJRDogewogICAgICByZXQgPSBnZXRnaWQoKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEZVTkNfR0VURVVJRDogewogICAgICByZXQgPSBnZXRldWlkKCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBGVU5DX0dFVEVHSUQ6IHsKICAgICAgcmV0ID0gZ2V0ZWdpZCgpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRlVOQ19TRVRVSUQ6IHsKICAgICAgaW50MzJfdCB1aWQ7CiAgICAgIEpTX1RvSW50MzIoY3R4LCAmdWlkLCBhcmd2WzBdKTsKICAgICAgcmV0ID0gc2V0dWlkKHVpZCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBGVU5DX1NFVEdJRDogewogICAgICBpbnQzMl90IGdpZDsKICAgICAgSlNfVG9JbnQzMihjdHgsICZnaWQsIGFyZ3ZbMF0pOwogICAgICByZXQgPSBzZXRnaWQoZ2lkKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEZVTkNfU0VURVVJRDogewogICAgICBpbnQzMl90IGV1aWQ7CiAgICAgIEpTX1RvSW50MzIoY3R4LCAmZXVpZCwgYXJndlswXSk7CiAgICAgIHJldCA9IHNldHVpZChldWlkKTsKICAgICAgYnJlYWs7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBGVU5DX1NFVEVHSUQ6IHsKICAgICAgaW50MzJfdCBlZ2lkOwogICAgICBKU19Ub0ludDMyKGN0eCwgJmVnaWQsIGFyZ3ZbMF0pOwogICAgICByZXQgPSBzZXRnaWQoZWdpZCk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICBpZihyZXQgPT0gLTEpCiAgICByZXR1cm4ganNfc3lzY2FsbGVycm9yX3Rocm93KGN0eCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKChjb25zdCBjaGFyKiBjb25zdFtdKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJnZXRwaWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImdldHBwaWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImdldHNpZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZ2V0dWlkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJnZXRnaWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImdldGV1aWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImdldGVnaWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNldHVpZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2V0Z2lkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZXRldWlkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZXRlZ2lkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlbbWFnaWMgLSBGVU5DX0dFVFBJRF0pOwoKICByZXR1cm4gSlNfTmV3SW50MzIoY3R4LCByZXQpOwp9CgplbnVtIHsgVkFMVUVfVFlQRSA9IDAsIFZBTFVFX1RBRywgVkFMVUVfUFRSIH07CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX3ZhbHVldHlwZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBWQUxVRV9UWVBFOiB7CiAgICAgIGNvbnN0IGNoYXIqIHR5cGVzdHIgPSBqc192YWx1ZV90eXBlc3RyKGN0eCwgYXJndlswXSk7CiAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIHR5cGVzdHIpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgVkFMVUVfVEFHOiB7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgSlNfVkFMVUVfR0VUX1RBRyhhcmd2WzBdKSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBWQUxVRV9QVFI6IHsKICAgICAgdm9pZCogcHRyID0gSlNfVkFMVUVfR0VUX1BUUihhcmd2WzBdKTsKICAgICAgY2hhciBidWZbMTI4XTsKCiAgICAgIHNucHJpbnRmKGJ1Ziwgc2l6ZW9mKGJ1ZiksICIlcCIsIHB0cik7CiAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIGJ1Zik7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2V2YWxiaW5hcnkoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBCT09MIGxvYWRfb25seSA9IEZBTFNFOwogIEpTVmFsdWVDb25zdCBvYmo7CgogIGlmKGFyZ2MgPj0gMikKICAgIGxvYWRfb25seSA9IEpTX1RvQm9vbChjdHgsIGFyZ3ZbMV0pOwoKICBpZihKU19WQUxVRV9HRVRfVEFHKGFyZ3ZbMF0pICE9IEpTX1RBR19NT0RVTEUgJiYgSlNfVkFMVUVfR0VUX1RBRyhhcmd2WzBdKSAhPSBKU19UQUdfRlVOQ1RJT05fQllURUNPREUpCiAgICBvYmogPSBqc19taXNjX3JlYWRfb2JqZWN0KGN0eCwgdGhpc192YWwsIGFyZ2MsIGFyZ3YpOwogIGVsc2UKICAgIG9iaiA9IGFyZ3ZbMF07CgogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICByZXR1cm4gb2JqOwoKICBpZihsb2FkX29ubHkpIHsKICAgIGlmKEpTX1ZBTFVFX0dFVF9UQUcob2JqKSA9PSBKU19UQUdfTU9EVUxFKQogICAgICBqc19tb2R1bGVfc2V0X2ltcG9ydF9tZXRhKGN0eCwgb2JqLCBGQUxTRSwgRkFMU0UpOwogIH0gZWxzZSB7CiAgICBpZihKU19WQUxVRV9HRVRfVEFHKG9iaikgPT0gSlNfVEFHX01PRFVMRSkgewogICAgICBpZihKU19SZXNvbHZlTW9kdWxlKGN0eCwgb2JqKSA8IDApIHsKICAgICAgICBKU01vZHVsZURlZiogbSA9IEpTX1ZBTFVFX0dFVF9QVFIob2JqKTsKICAgICAgICBjb25zdCBjaGFyKiBuYW1lID0gSlNfQXRvbVRvQ1N0cmluZyhjdHgsIG0tPm1vZHVsZV9uYW1lKTsKICAgICAgICByZXQgPSBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiRmFpbGVkIHJlc29sdmluZyBtb2R1bGUgJyVzJyIsIG5hbWUpOwogICAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbmFtZSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICAgICAgICByZXR1cm4gcmV0OwogICAgICB9CiAgICAgIGpzX21vZHVsZV9zZXRfaW1wb3J0X21ldGEoY3R4LCBvYmosIEZBTFNFLCBUUlVFKTsKICAgIH0KICAgIHJldCA9IEpTX0V2YWxGdW5jdGlvbihjdHgsIG9iaik7CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX29wY29kZV9hcnJheShKU0NvbnRleHQqIGN0eCwgY29uc3QgSlNPcENvZGUqIG9wY29kZSkgewogIEpTVmFsdWUgcmV0ID0gSlNfTmV3QXJyYXkoY3R4KTsKICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgMCwgSlNfTmV3VWludDMyKGN0eCwgb3Bjb2RlLT5zaXplKSk7CiAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIDEsIEpTX05ld1VpbnQzMihjdHgsIG9wY29kZS0+bl9wb3ApKTsKICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgMiwgSlNfTmV3VWludDMyKGN0eCwgb3Bjb2RlLT5uX3B1c2gpKTsKICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgMywgSlNfTmV3VWludDMyKGN0eCwgb3Bjb2RlLT5mbXQpKTsKICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgNCwgSlNfTmV3U3RyaW5nKGN0eCwgb3Bjb2RlLT5uYW1lKSk7CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19vcGNvZGVfb2JqZWN0KEpTQ29udGV4dCogY3R4LCBjb25zdCBKU09wQ29kZSogb3Bjb2RlKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3QoY3R4KTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgInNpemUiLCBKU19OZXdVaW50MzIoY3R4LCBvcGNvZGUtPnNpemUpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgIm5fcG9wIiwgSlNfTmV3VWludDMyKGN0eCwgb3Bjb2RlLT5uX3BvcCkpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAibl9wdXNoIiwgSlNfTmV3VWludDMyKGN0eCwgb3Bjb2RlLT5uX3B1c2gpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgImZtdCIsIEpTX05ld1VpbnQzMihjdHgsIG9wY29kZS0+Zm10KSk7CiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJuYW1lIiwgSlNfTmV3U3RyaW5nKGN0eCwgb3Bjb2RlLT5uYW1lKSk7CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19vcGNvZGVzKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdBcnJheShjdHgpOwogIHNpemVfdCBpLCBqLCBsZW4gPSBjb3VudG9mKGpzX29wY29kZXMpOwogIEJPT0wgYXNfb2JqZWN0ID0gRkFMU0U7CgogIGlmKGFyZ2MgPj0gMSkKICAgIGFzX29iamVjdCA9IEpTX1RvQm9vbChjdHgsIGFyZ3ZbMF0pOwoKICBmb3IoaSA9IDAsIGogPSAwOyBpIDwgbGVuOyBpKyspIHsKCiAgICBpZihpID49IE9QX1RFTVBfU1RBUlQgJiYgaSA8IE9QX1RFTVBfRU5EKQogICAgICBjb250aW51ZTsKCiAgICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsCiAgICAgICAgICAgICAgICAgICAgICAgICByZXQsCiAgICAgICAgICAgICAgICAgICAgICAgICBqKyssCiAgICAgICAgICAgICAgICAgICAgICAgICAoYXNfb2JqZWN0ID8ganNfbWlzY19vcGNvZGVfb2JqZWN0IDoganNfbWlzY19vcGNvZGVfYXJyYXkpKGN0eCwgJmpzX29wY29kZXNbaV0pKTsKICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfZ2V0X2J5dGVjb2RlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKEpTX0lzRnVuY3Rpb24oY3R4LCBhcmd2WzBdKSkgewogICAgSlNPYmplY3QqIG9iaiA9IEpTX1ZBTFVFX0dFVF9PQkooYXJndlswXSk7CiAgICBKU0Z1bmN0aW9uQnl0ZWNvZGUqIGZuYmM7CgogICAgaWYoKGZuYmMgPSBvYmotPnUuZnVuYy5mdW5jdGlvbl9ieXRlY29kZSkpIHsKICAgICAgcmV0ID0gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KGN0eCwgZm5iYy0+Ynl0ZV9jb2RlX2J1ZiwgZm5iYy0+Ynl0ZV9jb2RlX2xlbik7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CgplbnVtIHsgQVRPTV9UT19TVFJJTkcgPSAwLCBBVE9NX1RPX1ZBTFVFLCBWQUxVRV9UT19BVE9NIH07CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2F0b20oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgQVRPTV9UT19TVFJJTkc6IHsKICAgICAgaW50MzJfdCBhdG9tOwogICAgICBKU19Ub0ludDMyKGN0eCwgJmF0b20sIGFyZ3ZbMF0pOwogICAgICByZXQgPSBKU19BdG9tVG9TdHJpbmcoY3R4LCBhdG9tKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEFUT01fVE9fVkFMVUU6IHsKICAgICAgaW50MzJfdCBhdG9tOwogICAgICBKU19Ub0ludDMyKGN0eCwgJmF0b20sIGFyZ3ZbMF0pOwogICAgICByZXQgPSBKU19BdG9tVG9WYWx1ZShjdHgsIGF0b20pOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgVkFMVUVfVE9fQVRPTTogewogICAgICBKU0F0b20gYXRvbSA9IEpTX1ZhbHVlVG9BdG9tKGN0eCwgYXJndlswXSk7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIGF0b20pOwogICAgICBicmVhazsKICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKZW51bSB7IEdFVF9DTEFTU19JRCA9IDAsIEdFVF9DTEFTU19OQU1FLCBHRVRfQ0xBU1NfQVRPTSwgR0VUX0NMQVNTX0NPVU5ULCBHRVRfQ0xBU1NfUFJPVE8sIEdFVF9DTEFTU19DT05TVFJVQ1RPUiB9OwoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19jbGFzc2lkKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBKU09iamVjdCogb2JqOwogIGludDMyX3QgY2xhc3NfaWQgPSAwOwoKICBpZihhcmdjID49IDEpIHsKICAgIGlmKEpTX0lzTnVtYmVyKGFyZ3ZbMF0pKQogICAgICBKU19Ub0ludDMyKGN0eCwgJmNsYXNzX2lkLCBhcmd2WzBdKTsKICAgIGVsc2UgaWYoKG9iaiA9IGpzX3ZhbHVlX2dldF9vYmooYXJndlswXSkpKQogICAgICBjbGFzc19pZCA9IG9iai0+Y2xhc3NfaWQ7CiAgfQoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgR0VUX0NMQVNTX0lEOiB7CiAgICAgIGlmKGNsYXNzX2lkID4gMCkKICAgICAgICByZXQgPSBKU19OZXdVaW50MzIoY3R4LCBjbGFzc19pZCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHRVRfQ0xBU1NfTkFNRTogewogICAgICBpZihjbGFzc19pZCA+IDApIHsKICAgICAgICBKU0F0b20gYXRvbTsKICAgICAgICBpZigoYXRvbSA9IGpzX2NsYXNzX2F0b20oY3R4LCBjbGFzc19pZCkpKQogICAgICAgICAgcmV0ID0gSlNfQXRvbVRvVmFsdWUoY3R4LCBhdG9tKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR0VUX0NMQVNTX0FUT006IHsKICAgICAgaWYoY2xhc3NfaWQgPiAwKSB7CiAgICAgICAgSlNBdG9tIGF0b207CiAgICAgICAgaWYoKGF0b20gPSBqc19jbGFzc19hdG9tKGN0eCwgY2xhc3NfaWQpKSkKICAgICAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgYXRvbSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdFVF9DTEFTU19DT1VOVDogewogICAgICB1aW50MzJfdCBpLCBjbGFzc19jb3VudCA9IGN0eC0+cnQtPmNsYXNzX2NvdW50OwogICAgICBmb3IoaSA9IDE7IGkgPCBjbGFzc19jb3VudDsgaSsrKQogICAgICAgIGlmKCFKU19Jc1JlZ2lzdGVyZWRDbGFzcyhjdHgtPnJ0LCBpKSkKICAgICAgICAgIGJyZWFrOwoKICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgaSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHRVRfQ0xBU1NfUFJPVE86IHsKICAgICAgaWYoY2xhc3NfaWQgPiAwKQogICAgICAgIHJldCA9IEpTX0dldENsYXNzUHJvdG8oY3R4LCBjbGFzc19pZCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHRVRfQ0xBU1NfQ09OU1RSVUNUT1I6IHsKICAgICAgaWYoY2xhc3NfaWQgPiAwKSB7CiAgICAgICAgSlNWYWx1ZSBwcm90byA9IEpTX0dldENsYXNzUHJvdG8oY3R4LCBjbGFzc19pZCk7CiAgICAgICAgaWYoSlNfSXNPYmplY3QocHJvdG8pKQogICAgICAgICAgcmV0ID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBwcm90bywgImNvbnN0cnVjdG9yIik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQoKanNfbWlzY19iaXRmaWVsZF90b19hcnJheShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIGNvbnN0IHVpbnQ4X3QqIGJ1ZjsKICBzaXplX3QgbGVuOwogIGludDY0X3Qgb2Zmc2V0ID0gMDsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoYXJnYyA+PSAyKQogICAgSlNfVG9JbnQ2NChjdHgsICZvZmZzZXQsIGFyZ3ZbMV0pOwoKICBpZigoYnVmID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmd2WzBdKSkpIHsKICAgIHNpemVfdCBpLCBqID0gMCwgYml0cyA9IGxlbiAqIDg7CiAgICByZXQgPSBKU19OZXdBcnJheShjdHgpOwoKICAgIGZvcihpID0gMDsgaSA8IGJpdHM7IGkrKykgewogICAgICBpZihidWZbaSA+PiAzXSAmICgxdSA8PCAoaSAmIDB4NykpKSB7CiAgICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIGorKywgSlNfTmV3SW50NjQoY3R4LCBpICsgb2Zmc2V0KSk7CiAgICAgIH0KICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19hcnJheV90b19iaXRmaWVsZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHNpemVfdCBsZW47CiAgaW50NjRfdCBvZmZzZXQgPSAwOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZihhcmdjID49IDIpCiAgICBKU19Ub0ludDY0KGN0eCwgJm9mZnNldCwgYXJndlsxXSk7CgogIGlmKCFKU19Jc0FycmF5KGN0eCwgYXJndlswXSkpCiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgbXVzdCBiZSBhbiBhcnJheSIpOwoKICBpZigobGVuID0ganNfYXJyYXlfbGVuZ3RoKGN0eCwgYXJndlswXSkpKSB7CiAgICBzaXplX3QgaTsKICAgIGludDY0X3QgbWF4ID0gLTE7CiAgICB1aW50OF90KiBidWZwdHI7CiAgICBzaXplX3QgYnVmc2l6ZTsKCiAgICBmb3IoaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICBKU1ZhbHVlIHZhbHVlID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmd2WzBdLCBpKTsKICAgICAgdWludDMyX3QgbnVtYmVyOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZudW1iZXIsIHZhbHVlKTsKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwoKICAgICAgaWYobWF4IDwgbnVtYmVyKQogICAgICAgIG1heCA9IG51bWJlcjsKICAgIH0KICAgIGJ1ZnNpemUgPSAoKG1heCArIDEpICsgNykgPj4gMzsKICAgIGlmKChidWZwdHIgPSBqc19tYWxsb2N6KGN0eCwgYnVmc2l6ZSkpID09IDApCiAgICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogICAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgICAgSlNWYWx1ZSB2YWx1ZSA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgYXJndlswXSwgaSk7CiAgICAgIHVpbnQzMl90IG51bWJlcjsKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmbnVtYmVyLCB2YWx1ZSk7CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKCiAgICAgIG51bWJlciAtPSBvZmZzZXQ7CgogICAgICBidWZwdHJbbnVtYmVyID4+IDNdIHw9IDF1IDw8IChudW1iZXIgJiAweDcpOwogICAgfQoKICAgIHJldCA9IEpTX05ld0FycmF5QnVmZmVyKGN0eCwgYnVmcHRyLCBidWZzaXplLCBqc19hcnJheWJ1ZmZlcl9mcmVlX2Z1bmMsIE5VTEwsIEZBTFNFKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19yYW5kb20oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIHVpbnQzMl90IGJvdW5kID0gMDsKICBpZihhcmdjID4gMCAmJiBKU19Jc051bWJlcihhcmd2WzBdKSkKICAgIEpTX1RvVWludDMyKGN0eCwgJmJvdW5kLCBhcmd2WzBdKTsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIDA6IHsKICAgICAgdWludDMyX3QgbnVtID0gYXJnYyA+IDAgPyBwY2czMl9yYW5kb21fYm91bmRlZF9kaXZpc2lvbmxlc3MoYm91bmQpIDogcGNnMzJfcmFuZG9tKCk7CiAgICAgIHJldHVybiBKU19OZXdVaW50MzIoY3R4LCBudW0pOwogICAgfQogICAgY2FzZSAxOiB7CiAgICAgIGludDMyX3QgbnVtID0gYXJnYyA+IDAgPyBwY2czMl9yYW5kb21fYm91bmRlZF9kaXZpc2lvbmxlc3MoYm91bmQgKiAyKSAtIGJvdW5kIDogcGNnMzJfcmFuZG9tKCk7CiAgICAgIHJldHVybiBKU19OZXdJbnQzMihjdHgsIG51bSk7CiAgICB9CgogICAgY2FzZSAyOiB7CiAgICAgIHVpbnQzMl90IG51bSA9IHBjZzMyX3JhbmRvbSgpOwogICAgICByZXR1cm4gSlNfTmV3RmxvYXQ2NChjdHgsIChkb3VibGUpbnVtIC8gVUlOVDMyX01BWCk7CiAgICB9CiAgICBjYXNlIDM6IHsKICAgICAgdWludDMyX3Qgc3QgPSAwOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZzdCwgYXJndlswXSk7CiAgICAgIHBjZzMyX2luaXRfc3RhdGUoc3QpOwogICAgICByZXR1cm4gSlNfVU5ERUZJTkVEOwogICAgfQogIH0KfQoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX21pc2NfZnVuY3NbXSA9IHsKICAgIEpTX0NGVU5DX0RFRigiZm5tYXRjaCIsIDMsIGpzX21pc2NfZm5tYXRjaCksCiAgICBKU19DRlVOQ19ERUYoInRvU3RyaW5nIiwgMSwganNfbWlzY190b3N0cmluZyksCiAgICBKU19DRlVOQ19ERUYoInRvUG9pbnRlciIsIDEsIGpzX21pc2NfdG9wb2ludGVyKSwKICAgIEpTX0NGVU5DX0RFRigidG9BcnJheUJ1ZmZlciIsIDEsIGpzX21pc2NfdG9hcnJheWJ1ZmZlciksCiAgICBKU19DRlVOQ19ERUYoImR1cEFycmF5QnVmZmVyIiwgMSwganNfbWlzY19kdXBhcnJheWJ1ZmZlciksCiAgICBKU19DRlVOQ19ERUYoInJlc2l6ZUFycmF5QnVmZmVyIiwgMSwganNfbWlzY19yZXNpemVhcnJheWJ1ZmZlciksCiAgICBKU19DRlVOQ19ERUYoImNvbmNhdEFycmF5QnVmZmVyIiwgMSwganNfbWlzY19jb25jYXRhcnJheWJ1ZmZlciksCiAgICBKU19DRlVOQ19ERUYoImdldFBlcmZvcm1hbmNlQ291bnRlciIsIDAsIGpzX21pc2NfZ2V0cGVyZm9ybWFuY2Vjb3VudGVyKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0RXhlY3V0YWJsZSIsIDAsIGpzX21pc2NfcHJvY2xpbmssIEZVTkNfR0VURVhFQ1VUQUJMRSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldEN1cnJlbnRXb3JraW5nRGlyZWN0b3J5IiwgMCwganNfbWlzY19wcm9jbGluaywgRlVOQ19HRVRDV0QpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRSb290RGlyZWN0b3J5IiwgMCwganNfbWlzY19wcm9jbGluaywgRlVOQ19HRVRST09UKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0RmlsZURlc2NyaXB0b3IiLCAwLCBqc19taXNjX3Byb2NsaW5rLCBGVU5DX0dFVEZEKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0Q29tbWFuZExpbmUiLCAwLCBqc19taXNjX3Byb2NyZWFkLCBGVU5DX0dFVENPTU1BTkRMSU5FKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0UHJvY01hcHMiLCAwLCBqc19taXNjX3Byb2NyZWFkLCBGVU5DX0dFVFBST0NNQVBTKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0UHJvY01vdW50cyIsIDAsIGpzX21pc2NfcHJvY3JlYWQsIEZVTkNfR0VUUFJPQ01PVU5UUyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFByb2NTdGF0IiwgMCwganNfbWlzY19wcm9jcmVhZCwgRlVOQ19HRVRQUk9DU1RBVCksCiAgICBKU19DRlVOQ19ERUYoImdldFByb3RvdHlwZUNoYWluIiwgMCwganNfbWlzY19nZXRwcm90b3R5cGVjaGFpbiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldHBpZCIsIDAsIGpzX21pc2NfZ2V0eCwgRlVOQ19HRVRQSUQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRwcGlkIiwgMCwganNfbWlzY19nZXR4LCBGVU5DX0dFVFBQSUQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRzaWQiLCAwLCBqc19taXNjX2dldHgsIEZVTkNfR0VUU0lEKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0dWlkIiwgMCwganNfbWlzY19nZXR4LCBGVU5DX0dFVFVJRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldGdpZCIsIDAsIGpzX21pc2NfZ2V0eCwgRlVOQ19HRVRHSUQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRldWlkIiwgMCwganNfbWlzY19nZXR4LCBGVU5DX0dFVEVVSUQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRlZ2lkIiwgMCwganNfbWlzY19nZXR4LCBGVU5DX0dFVEVHSUQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzZXR1aWQiLCAxLCBqc19taXNjX2dldHgsIEZVTkNfU0VUVUlEKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic2V0Z2lkIiwgMSwganNfbWlzY19nZXR4LCBGVU5DX1NFVEdJRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNldGV1aWQiLCAxLCBqc19taXNjX2dldHgsIEZVTkNfU0VURVVJRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNldGVnaWQiLCAxLCBqc19taXNjX2dldHgsIEZVTkNfU0VURUdJRCksCiAgICBKU19DRlVOQ19ERUYoImhydGltZSIsIDAsIGpzX21pc2NfaHJ0aW1lKSwKICAgIEpTX0NGVU5DX0RFRigidW5hbWUiLCAwLCBqc19taXNjX3VuYW1lKSwKICAgIEpTX0NGVU5DX0RFRigiYnRvYSIsIDEsIGpzX21pc2NfYnRvYSksCiAgICBKU19DRlVOQ19ERUYoImF0b2IiLCAxLCBqc19taXNjX2F0b2IpLAogICAgSlNfQ0ZVTkNfREVGKCJiaXRmaWVsZFRvQXJyYXkiLCAxLCBqc19taXNjX2JpdGZpZWxkX3RvX2FycmF5KSwKICAgIEpTX0NGVU5DX0RFRigiYXJyYXlUb0JpdGZpZWxkIiwgMSwganNfbWlzY19hcnJheV90b19iaXRmaWVsZCksCiAgICBKU19DRlVOQ19ERUYoImNvbXBpbGVGaWxlIiwgMSwganNfbWlzY19jb21waWxlX2ZpbGUpLAogICAgSlNfQ0ZVTkNfREVGKCJ3cml0ZU9iamVjdCIsIDEsIGpzX21pc2Nfd3JpdGVfb2JqZWN0KSwKICAgIEpTX0NGVU5DX0RFRigicmVhZE9iamVjdCIsIDEsIGpzX21pc2NfcmVhZF9vYmplY3QpLAogICAgSlNfQ0ZVTkNfREVGKCJnZXRPcENvZGVzIiwgMCwganNfbWlzY19vcGNvZGVzKSwKICAgIEpTX0NGVU5DX0RFRigiZ2V0Qnl0ZUNvZGUiLCAxLCBqc19taXNjX2dldF9ieXRlY29kZSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInZhbHVlVHlwZSIsIDEsIGpzX21pc2NfdmFsdWV0eXBlLCBWQUxVRV9UWVBFKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigidmFsdWVUYWciLCAxLCBqc19taXNjX3ZhbHVldHlwZSwgVkFMVUVfVEFHKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigidmFsdWVQdHIiLCAxLCBqc19taXNjX3ZhbHVldHlwZSwgVkFMVUVfUFRSKSwKICAgIEpTX0NGVU5DX0RFRigiZXZhbEJpbmFyeSIsIDEsIGpzX21pc2NfZXZhbGJpbmFyeSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImF0b21Ub1N0cmluZyIsIDEsIGpzX21pc2NfYXRvbSwgQVRPTV9UT19TVFJJTkcpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJhdG9tVG9WYWx1ZSIsIDEsIGpzX21pc2NfYXRvbSwgQVRPTV9UT19WQUxVRSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInZhbHVlVG9BdG9tIiwgMSwganNfbWlzY19hdG9tLCBWQUxVRV9UT19BVE9NKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0Q2xhc3NJRCIsIDEsIGpzX21pc2NfY2xhc3NpZCwgR0VUX0NMQVNTX0lEKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0Q2xhc3NOYW1lIiwgMSwganNfbWlzY19jbGFzc2lkLCBHRVRfQ0xBU1NfTkFNRSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldENsYXNzQXRvbSIsIDEsIGpzX21pc2NfY2xhc3NpZCwgR0VUX0NMQVNTX0FUT00pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRDbGFzc0NvdW50IiwgMSwganNfbWlzY19jbGFzc2lkLCBHRVRfQ0xBU1NfQ09VTlQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRDbGFzc1Byb3RvIiwgMSwganNfbWlzY19jbGFzc2lkLCBHRVRfQ0xBU1NfUFJPVE8pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRDbGFzc0NvbnN0cnVjdG9yIiwgMSwganNfbWlzY19jbGFzc2lkLCBHRVRfQ0xBU1NfQ09OU1RSVUNUT1IpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyYW5kIiwgMCwganNfbWlzY19yYW5kb20sIDApLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyYW5kaSIsIDAsIGpzX21pc2NfcmFuZG9tLCAxKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigicmFuZGYiLCAwLCBqc19taXNjX3JhbmRvbSwgMiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNyYW5kIiwgMSwganNfbWlzY19yYW5kb20sIDMpLAogICAgLy8gICBKU19PQkpFQ1RfREVGKCJTdHJpbmdEZWNvZGVyIiwganNfc3RyaW5nZGVjb2Rlcl9wcm9wcywgY291bnRvZihqc19zdHJpbmdkZWNvZGVyX3Byb3BzKSwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAoKfTsKCnN0YXRpYyBpbnQKanNfbWlzY19pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBqc19sb2NhdGlvbl9pbml0KGN0eCwgbSk7CgogIEpTX05ld0NsYXNzSUQoJmpzX3N5c2NhbGxlcnJvcl9jbGFzc19pZCk7CiAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19zeXNjYWxsZXJyb3JfY2xhc3NfaWQsICZqc19zeXNjYWxsZXJyb3JfY2xhc3MpOwoKICBzeXNjYWxsZXJyb3JfY3RvciA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19zeXNjYWxsZXJyb3JfY29uc3RydWN0b3IsICJTeXNjYWxsRXJyb3IiLCAxLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgc3lzY2FsbGVycm9yX3Byb3RvID0ganNfZ2xvYmFsX25ldyhjdHgsICJFcnJvciIsIDAsIDApOwoKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIHN5c2NhbGxlcnJvcl9wcm90bywganNfc3lzY2FsbGVycm9yX2Z1bmNzLCBjb3VudG9mKGpzX3N5c2NhbGxlcnJvcl9mdW5jcykpOwogIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19zeXNjYWxsZXJyb3JfY2xhc3NfaWQsIHN5c2NhbGxlcnJvcl9wcm90byk7CgogIGpzX3NldF9pbnNwZWN0X21ldGhvZChjdHgsIHN5c2NhbGxlcnJvcl9wcm90bywganNfc3lzY2FsbGVycm9yX2luc3BlY3QpOwoKICBKU19TZXRDb25zdHJ1Y3RvcihjdHgsIHN5c2NhbGxlcnJvcl9jdG9yLCBzeXNjYWxsZXJyb3JfcHJvdG8pOwoKICBpZihtKSB7CiAgICAvLyBKU19TZXRNb2R1bGVFeHBvcnRMaXN0KGN0eCwgbSwgbG9jYXRpb25fY3Rvcik7CiAgICBKU19TZXRNb2R1bGVFeHBvcnRMaXN0KGN0eCwgbSwganNfbWlzY19mdW5jcywgY291bnRvZihqc19taXNjX2Z1bmNzKSk7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiU3lzY2FsbEVycm9yIiwgc3lzY2FsbGVycm9yX2N0b3IpOwogIH0KCiAganNfc3RyaW5nZGVjb2Rlcl9pbml0KGN0eCxtKTsKICAKCiAgLy8gcHJpbnRmKCIlc1xuIiwganNfb3Bjb2Rlc1swXS5uYW1lKTsKCiAgcmV0dXJuIDA7Cn0KCiNpZiBkZWZpbmVkKEpTX1NIQVJFRF9MSUJSQVJZKSAmJiBkZWZpbmVkKEpTX01JU0NfTU9EVUxFKQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfbWlzYwojZW5kaWYKClZJU0lCTEUgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsIGpzX21pc2NfaW5pdCk7CiAgaWYoIW0pCiAgICByZXR1cm4gTlVMTDsKICBKU19BZGRNb2R1bGVFeHBvcnRMaXN0KGN0eCwgbSwganNfbWlzY19mdW5jcywgY291bnRvZihqc19taXNjX2Z1bmNzKSk7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlN5c2NhbGxFcnJvciIpOwogIHJldHVybiBtOwp9CgAAAAAAAAAAI5gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3JEAAAAAAADckQAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "quickjs-lexer.c",
			"settings":
			{
				"buffer_size": 43587,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs-location.c",
			"settings":
			{
				"buffer_size": 11261,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					44,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAJcqAAAAAAAAmCoAAAAAAAAAAAAAmCoAAAAAAACZKgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlyoAAAAAAACXKgAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " //"
					},
					"AwAAAJkqAAAAAAAAmioAAAAAAAAAAAAAmioAAAAAAACbKgAAAAAAAAAAAACbKgAAAAAAAJwqAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmSoAAAAAAACZKgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAnCoAAAAAAACcKgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/repl.js",
			"settings":
			{
				"buffer_size": 49516,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					82,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAi5YAAAAAAACLlgAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAi5YAAAAAAACLlgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-stringdecoder.c",
			"settings":
			{
				"buffer_size": 3937,
				"line_ending": "Unix",
				"name": "#ifndef _GNU_SOURCE"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAay4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACYGAAAAAAAAJwYAAAAAAAAAAAAAJwYAAAAAAAAnBgAAAAAAAM0EAAAKSlNWYWx1ZQpqc19zdHJpbmdkZWNvZGVyX3Rvc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgU3RyaW5nRGVjb2RlciogZGVjOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIHNpemVfdCBsZW47CgogIGlmKCEoZGVjID0ganNfc3RyaW5nZGVjb2Rlcl9kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiByZXQ7CgogIGlmKCFkZWMtPnN0cikgewogICAgbGVuID0gZGVjLT5maWxlID8gc3RybGVuKGRlYy0+ZmlsZSkgOiAwOwogICAgbGVuICs9IDQ2OwogICAgZGVjLT5zdHIgPSBqc19tYWxsb2MoY3R4LCBsZW4pOwogICAgaWYoZGVjLT5maWxlKQogICAgICBzbnByaW50ZihkZWMtPnN0ciwgbGVuLCAiJXM6JSIgUFJJaTMyICI6JSIgUFJJaTMyICIiLCBkZWMtPmZpbGUsIGRlYy0+bGluZSArIDEsIGRlYy0+Y29sdW1uICsgMSk7CiAgICBlbHNlCiAgICAgIHNucHJpbnRmKGRlYy0+c3RyLCBsZW4sICIlIiBQUklpMzIgIjolIiBQUklpMzIgIiIsIGRlYy0+bGluZSArIDEsIGRlYy0+Y29sdW1uICsgMSk7CiAgfQogIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIGRlYy0+c3RyKTsKICByZXR1cm4gcmV0Owp9CgpCT09MCmpzX2lzX3N0cmluZ2RlY29kZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICBCT09MIHJldDsKICBKU0F0b20gbGluZSwgY29sdW1uOwogIGxpbmUgPSBKU19OZXdBdG9tKGN0eCwgImxpbmUiKTsKICBjb2x1bW4gPSBKU19OZXdBdG9tKGN0eCwgImNvbHVtbiIpOwogIHJldCA9IEpTX0lzT2JqZWN0KG9iaikgJiYgSlNfSGFzUHJvcGVydHkoY3R4LCBvYmosIGxpbmUpICYmIEpTX0hhc1Byb3BlcnR5KGN0eCwgb2JqLCBjb2x1bW4pOwogIEpTX0ZyZWVBdG9tKGN0eCwgbGluZSk7CiAgSlNfRnJlZUF0b20oY3R4LCBjb2x1bW4pOwogIGlmKHJldCkKICAgIHJldHVybiByZXQ7CiAgbGluZSA9IEpTX05ld0F0b20oY3R4LCAibGluZU51bWJlciIpOwogIGNvbHVtbiA9IEpTX05ld0F0b20oY3R4LCAiY29sdW1uTnVtYmVyIik7CiAgcmV0ID0gSlNfSXNPYmplY3Qob2JqKSAmJiBKU19IYXNQcm9wZXJ0eShjdHgsIG9iaiwgbGluZSkgJiYgSlNfSGFzUHJvcGVydHkoY3R4LCBvYmosIGNvbHVtbik7CiAgSlNfRnJlZUF0b20oY3R4LCBsaW5lKTsKICBKU19GcmVlQXRvbShjdHgsIGNvbHVtbik7CiAgcmV0dXJuIHJldDsKfQ",
					"AQAAAAAAAAABAAAAJgYAAAAAAADzCgAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABQHAAAAAAAAFQcAAAAAAAAAAAAAFQcAAAAAAAAVBwAAAAAAAB8CAABjYXNlIFNUUklOR19ERUNPREVSX1BST1BfTElORTogewogICAgICBpZihkZWMtPmxpbmUgIT0gVUlOVDMyX01BWCkKICAgICAgICByZXQgPSBKU19OZXdVaW50MzIoY3R4LCBkZWMtPmxpbmUgKyAxKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFNUUklOR19ERUNPREVSX1BST1BfQ09MVU1OOiB7CiAgICAgIGlmKGRlYy0+Y29sdW1uICE9IFVJTlQzMl9NQVgpCiAgICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgZGVjLT5jb2x1bW4gKyAxKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFNUUklOR19ERUNPREVSX1BST1BfUE9TOiB7CiAgICAgIGlmKGRlYy0+cG9zID49IDAgJiYgZGVjLT5wb3MgPD0gSU5UNjRfTUFYKQogICAgICAgIHJldCA9IEpTX05ld0ludDY0KGN0eCwgZGVjLT5wb3MpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgU1RSSU5HX0RFQ09ERVJfUFJPUF9GSUxFOiB7CiAgICAgIGlmKGRlYy0+ZmlsZSkKICAgICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBkZWMtPmZpbGUpOwogICAgICBicmVhazsKICAgIH0",
					"AQAAAAAAAAABAAAAFAcAAAAAAAAzCQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACkIAAAAAAAAKggAAAAAAAAAAAAAKggAAAAAAAAqCAAAAAAAAJUAAAAgY2FzZSBTVFJJTkdfREVDT0RFUl9QUk9QX0ZJTEU6IHsKICAgICAgaWYoZGVjLT5maWxlKQogICAgICAgIGpzX2ZyZWUoY3R4LCBkZWMtPmZpbGUpOwoKICAgICAgZGVjLT5maWxlID0ganNfdG9zdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQ",
					"AQAAAAAAAAABAAAAKQgAAAAAAAC+CAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAD4IAAAAAAAAPwgAAAAAAAAAAAAAPwgAAAAAAAA/CAAAAAAAAMsFAAAKClN0cmluZ0RlY29kZXIKanNfc3RyaW5nZGVjb2Rlcl9mcm9tKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwpIHsKICBTdHJpbmdEZWNvZGVyIGRlYyA9IHswLCAwLCAwLCAtMSwgMH07CiAgaWYoanNfaGFzX3Byb3BlcnR5c3RyKGN0eCwgdGhpc192YWwsICJsaW5lIikpCiAgICBkZWMubGluZSA9IGpzX2dldF9wcm9wZXJ0eXN0cl9pbnQzMihjdHgsIHRoaXNfdmFsLCAibGluZSIpIC0gMTsKICBpZihqc19oYXNfcHJvcGVydHlzdHIoY3R4LCB0aGlzX3ZhbCwgImxpbmVOdW1iZXIiKSkKICAgIGRlYy5saW5lID0ganNfZ2V0X3Byb3BlcnR5c3RyX2ludDMyKGN0eCwgdGhpc192YWwsICJsaW5lTnVtYmVyIikgLSAxOwogIGlmKGpzX2hhc19wcm9wZXJ0eXN0cihjdHgsIHRoaXNfdmFsLCAiY29sdW1uIikpCiAgICBkZWMuY29sdW1uID0ganNfZ2V0X3Byb3BlcnR5c3RyX2ludDMyKGN0eCwgdGhpc192YWwsICJjb2x1bW4iKSAtIDE7CiAgaWYoanNfaGFzX3Byb3BlcnR5c3RyKGN0eCwgdGhpc192YWwsICJjb2x1bW5OdW1iZXIiKSkKICAgIGRlYy5jb2x1bW4gPSBqc19nZXRfcHJvcGVydHlzdHJfaW50MzIoY3R4LCB0aGlzX3ZhbCwgImNvbHVtbk51bWJlciIpIC0gMTsKICBpZihqc19oYXNfcHJvcGVydHlzdHIoY3R4LCB0aGlzX3ZhbCwgImZpbGUiKSkKICAgIGRlYy5maWxlID0ganNfZ2V0X3Byb3BlcnR5c3RyX3N0cmluZyhjdHgsIHRoaXNfdmFsLCAiZmlsZSIpOwogIGlmKGpzX2hhc19wcm9wZXJ0eXN0cihjdHgsIHRoaXNfdmFsLCAiZmlsZU5hbWUiKSkKICAgIGRlYy5maWxlID0ganNfZ2V0X3Byb3BlcnR5c3RyX3N0cmluZyhjdHgsIHRoaXNfdmFsLCAiZmlsZU5hbWUiKTsKICBpZihqc19oYXNfcHJvcGVydHlzdHIoY3R4LCB0aGlzX3ZhbCwgInBvcyIpKQogICAgZGVjLnBvcyA9IGpzX2dldF9wcm9wZXJ0eXN0cl91aW50NjQoY3R4LCB0aGlzX3ZhbCwgInBvcyIpOwogIHJldHVybiBkZWM7Cn0KCkpTVmFsdWUKanNfc3RyaW5nZGVjb2Rlcl90b3ByaW1pdGl2ZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIFN0cmluZ0RlY29kZXIqIGRlYzsKICBjb25zdCBjaGFyKiBoaW50OwogIEpTVmFsdWUgcmV0OwoKICBpZighKGRlYyA9IGpzX3N0cmluZ2RlY29kZXJfZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBoaW50ID0gYXJnYyA+IDAgPyBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzBdKSA6IDA7CiAgaWYoaGludCAmJiAhc3RyY21wKGhpbnQsICJudW1iZXIiKSkKICAgIHJldCA9IEpTX05ld0ludDY0KGN0eCwgZGVjLT5wb3MpOwogIGVsc2UKICAgIHJldCA9IGpzX3N0cmluZ2RlY29kZXJfdG9zdHJpbmcoY3R4LCB0aGlzX3ZhbCwgYXJnYywgYXJndik7CiAgaWYoaGludCkKICAgIGpzX2NzdHJpbmdfZnJlZShjdHgsIGhpbnQpOwogIHJldHVybiByZXQ7Cn0K",
					"AQAAAAAAAAABAAAAPggAAAAAAAAJDgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAD8IAAAAAAAAQAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwgAAAAAAAA/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAO8IAAAAAAAA8AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wgAAAAAAADvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPQIAAAAAAAA9QgAAAAAAAAAAAAA9QgAAAAAAAD1CAAAAAAAABwAAAAKICBzdHJpbmdkZWNvZGVyX2luaXQoJmRlYyk7",
					"AQAAAAAAAAABAAAA9AgAAAAAAAAQCQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAPUIAAAAAAAA9ggAAAAAAAAAAAAA9ggAAAAAAAD4CAAAAAAAAAAAAAD4CAAAAAAAAPkIAAAAAAAAAAAAAPkIAAAAAAAA+wgAAAAAAAAAAAAA9ggAAAAAAAD2CAAAAAAAAAIAAAAgIPkIAAAAAAAA+ggAAAAAAAAAAAAA+ggAAAAAAAD7CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QgAAAAAAAD1CAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPsIAAAAAAAA/QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wgAAAAAAAD7CAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "!/"
					},
					"AgAAAPwIAAAAAAAA/QgAAAAAAAAAAAAA/QgAAAAAAAD+CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AgAAAAAAAD8CAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"left_delete",
					null,
					"AQAAAP0IAAAAAAAA/QgAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA/ggAAAAAAAD+CAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP0IAAAAAAAA/wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QgAAAAAAAD9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "dec"
					},
					"AwAAAP4IAAAAAAAA/wgAAAAAAAAAAAAA/wgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAEJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/ggAAAAAAAD+CAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAEJAAAAAAAAAgkAAAAAAAAAAAAAAgkAAAAAAAADCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQkAAAAAAAABCQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " js_mallocz"
					},
					"CwAAAAMJAAAAAAAABAkAAAAAAAAAAAAABAkAAAAAAAAFCQAAAAAAAAAAAAAFCQAAAAAAAAYJAAAAAAAAAAAAAAYJAAAAAAAABwkAAAAAAAAAAAAABwkAAAAAAAAICQAAAAAAAAAAAAAICQAAAAAAAAkJAAAAAAAAAAAAAAkJAAAAAAAACgkAAAAAAAAAAAAACgkAAAAAAAALCQAAAAAAAAAAAAALCQAAAAAAAAwJAAAAAAAAAAAAAAwJAAAAAAAADQkAAAAAAAAAAAAADQkAAAAAAAAOCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwkAAAAAAAADCQAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA4JAAAAAAAAEAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgkAAAAAAAAOCQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAA8JAAAAAAAAEAkAAAAAAAAAAAAAEAkAAAAAAAARCQAAAAAAAAAAAAARCQAAAAAAABIJAAAAAAAAAAAAABIJAAAAAAAAEwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwkAAAAAAAAPCQAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " sizeof"
					},
					"BwAAABMJAAAAAAAAFAkAAAAAAAAAAAAAFAkAAAAAAAAVCQAAAAAAAAAAAAAVCQAAAAAAABYJAAAAAAAAAAAAABYJAAAAAAAAFwkAAAAAAAAAAAAAFwkAAAAAAAAYCQAAAAAAAAAAAAAYCQAAAAAAABkJAAAAAAAAAAAAABkJAAAAAAAAGgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwkAAAAAAAATCQAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABoJAAAAAAAAHAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgkAAAAAAAAaCQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "String"
					},
					"BgAAABsJAAAAAAAAHAkAAAAAAAAAAAAAHAkAAAAAAAAdCQAAAAAAAAAAAAAdCQAAAAAAAB4JAAAAAAAAAAAAAB4JAAAAAAAAHwkAAAAAAAAAAAAAHwkAAAAAAAAgCQAAAAAAAAAAAAAgCQAAAAAAACEJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwkAAAAAAAAbCQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert_completion",
					{
						"completion": "StringDecoder",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "StringDecoder"
					},
					"AgAAABsJAAAAAAAAGwkAAAAAAAAGAAAAU3RyaW5nGwkAAAAAAAAoCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQkAAAAAAAAhCQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAACwJAAAAAAAALQkAAAAAAAAAAAAALQkAAAAAAAAvCQAAAAAAAAAAAAAtCQAAAAAAAC0JAAAAAAAAAgAAACAgLQkAAAAAAAAxCQAAAAAAAAAAAAAxCQAAAAAAADIJAAAAAAAAAAAAADIJAAAAAAAAMwkAAAAAAAAAAAAAMwkAAAAAAAA0CQAAAAAAAAAAAAA0CQAAAAAAADUJAAAAAAAAAAAAADUJAAAAAAAANgkAAAAAAAAAAAAANgkAAAAAAAA3CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAkAAAAAAAAsCQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " JS_Thr"
					},
					"BwAAADcJAAAAAAAAOAkAAAAAAAAAAAAAOAkAAAAAAAA5CQAAAAAAAAAAAAA5CQAAAAAAADoJAAAAAAAAAAAAADoJAAAAAAAAOwkAAAAAAAAAAAAAOwkAAAAAAAA8CQAAAAAAAAAAAAA8CQAAAAAAAD0JAAAAAAAAAAAAAD0JAAAAAAAAPgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwkAAAAAAAA3CQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert_completion",
					{
						"completion": "JS_ThrowOutOfMemory",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JS_ThrowOutOfMemory"
					},
					"AgAAADgJAAAAAAAAOAkAAAAAAAAGAAAASlNfVGhyOAkAAAAAAABLCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgkAAAAAAAA+CQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEsJAAAAAAAATQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwkAAAAAAABLCQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "ctx"
					},
					"AwAAAEwJAAAAAAAATQkAAAAAAAAAAAAATQkAAAAAAABOCQAAAAAAAAAAAABOCQAAAAAAAE8JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAkAAAAAAABMCQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "K;"
					},
					"AgAAAFAJAAAAAAAAUQkAAAAAAAAAAAAAUQkAAAAAAABSCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAkAAAAAAABQCQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					2,
					"left_delete",
					null,
					"AgAAAFEJAAAAAAAAUQkAAAAAAAABAAAAO1AJAAAAAAAAUAkAAAAAAAABAAAASw",
					"AQAAAAAAAAABAAAAUgkAAAAAAABSCQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFAJAAAAAAAAUQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAkAAAAAAABQCQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAFEJAAAAAAAAUgkAAAAAAAAAAAAAUgkAAAAAAABWCQAAAAAAAAAAAABSCQAAAAAAAFIJAAAAAAAABAAAACAgICBSCQAAAAAAAFQJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQkAAAAAAABRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAABgKAAAAAAAAGQoAAAAAAAAAAAAAGQoAAAAAAAAZCgAAAAAAADIGAAAKICBkZWMucG9zID0gLTE7CgogIC8qIEZyb20gc3RyaW5nICovCiAgaWYoYXJnYyA9PSAxICYmIGpzX2lzX2lucHV0KGN0eCwgYXJndlswXSkpIHsKICAgIElucHV0QnVmZmVyIGluID0ganNfaW5wdXRfYnVmZmVyKGN0eCwgYXJndlswXSk7CiAgICBjb25zdCB1aW50OF90ICpwLCAqYmVnaW4gPSBpbnB1dF9idWZmZXJfYmVnaW4oJmluKSwgKmVuZCA9IGlucHV0X2J1ZmZlcl9lbmQoJmluKTsKICAgIHVuc2lnbmVkIGxvbmcgdiwgblsyXTsKICAgIHNpemVfdCBuaSA9IG1heCgyLCBzdHJfY291bnQoYmVnaW4sICc6JykpOwoKICAgIHdoaWxlKGVuZCA+PSBiZWdpbikgewogICAgICBmb3IocCA9IGVuZDsgcCA+IGJlZ2luICYmICoocCAtIDEpICE9ICc6JzsgcC0tKSB7fQogICAgICBpZihuaSA+IDApIHsKICAgICAgICB2ID0gc3RydG91bCgoY29uc3QgY2hhciopcCwgKGNoYXIqKikmZW5kLCAxMCk7CiAgICAgICAgaWYoZW5kID4gcCkKICAgICAgICAgIG5bLS1uaV0gPSB2OwogICAgICB9IGVsc2UgewogICAgICAgIGRlYy5maWxlID0ganNfc3RybmR1cChjdHgsIChjb25zdCBjaGFyKilwLCBlbmQgLSBwKTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBlbmQgPSBwIC0gMTsKICAgIH0KICAgIGlmKG5pID09IDApIHsKICAgICAgZGVjLmxpbmUgPSBuWzBdOwogICAgICBkZWMuY29sdW1uID0gblsxXTsKICAgIH0KICAgIGRlYy5saW5lLS07CiAgICBkZWMuY29sdW1uLS07CiAgICAvKiBEdXAgZnJvbSBvYmplY3QgKi8KICB9IGVsc2UgaWYoYXJnYyA+PSAxICYmIEpTX0lzT2JqZWN0KGFyZ3ZbMF0pKSB7CiAgICBTdHJpbmdEZWNvZGVyKiBvdGhlcjsKICAgIGlmKChvdGhlciA9IGpzX3N0cmluZ2RlY29kZXJfZGF0YShjdHgsIGFyZ3ZbMF0pKSkgewogICAgICBkZWMgPSBzdHJpbmdkZWNvZGVyX2Nsb25lKG90aGVyLCBjdHgpOwogICAgfSBlbHNlIHsKICAgICAgZGVjID0ganNfc3RyaW5nZGVjb2Rlcl9mcm9tKGN0eCwgYXJndlswXSk7CiAgICB9CiAgICAvKiBGcm9tIGFyZ3VtZW50cyAobGluZSxjb2x1bW4scG9zLGZpbGUpICovCiAgfSBlbHNlIGlmKGFyZ2MgPiAxKSB7CiAgICBpbnQgaSA9IDA7CiAgICBpZihpIDwgYXJnYyAmJiBKU19Jc1N0cmluZyhhcmd2W2ldKSkKICAgICAgZGVjLmZpbGUgPSBqc190b3N0cmluZyhjdHgsIGFyZ3ZbaSsrXSk7CiAgICBpZihpIDwgYXJnYyAmJiBKU19Jc051bWJlcihhcmd2W2ldKSkKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmZGVjLmxpbmUsIGFyZ3ZbaSsrXSk7CiAgICBpZihpIDwgYXJnYyAmJiBKU19Jc051bWJlcihhcmd2W2ldKSkKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmZGVjLmNvbHVtbiwgYXJndltpKytdKTsKICAgIGlmKGkgPCBhcmdjICYmIEpTX0lzTnVtYmVyKGFyZ3ZbaV0pKQogICAgICBKU19Ub0luZGV4KGN0eCwgKHVpbnQ2NF90KikmZGVjLnBvcywgYXJndltpKytdKTsKICAgIGlmKGRlYy5maWxlID09IDAgJiYgaSA8IGFyZ2MgJiYgSlNfSXNTdHJpbmcoYXJndltpXSkpCiAgICAgIGRlYy5maWxlID0ganNfdG9zdHJpbmcoY3R4LCBhcmd2W2krK10pOwoKICAgIGRlYy5saW5lLS07CiAgICBkZWMuY29sdW1uLS07CiAgfVIJAAAAAAAAUgkAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAShAAAAAAAAAYCgAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\nJS_Set"
					},
					"CAAAABcKAAAAAAAAGAoAAAAAAAAAAAAAGAoAAAAAAAAZCgAAAAAAAAAAAAAZCgAAAAAAABoKAAAAAAAAAAAAABoKAAAAAAAAGwoAAAAAAAAAAAAAGwoAAAAAAAAcCgAAAAAAAAAAAAAcCgAAAAAAAB0KAAAAAAAAAAAAAB0KAAAAAAAAHgoAAAAAAAAAAAAAHgoAAAAAAAAfCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwoAAAAAAAAXCgAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert_completion",
					{
						"completion": "JS_SetOpaque",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JS_SetOpaque"
					},
					"AgAAABkKAAAAAAAAGQoAAAAAAAAGAAAASlNfU2V0GQoAAAAAAAAlCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwoAAAAAAAAfCgAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACUKAAAAAAAAJwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQoAAAAAAAAlCgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAACYKAAAAAAAAJwoAAAAAAAAAAAAAJwoAAAAAAAAoCgAAAAAAAAAAAAAoCgAAAAAAACkKAAAAAAAAAAAAACkKAAAAAAAAKgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgoAAAAAAAAmCgAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " dec"
					},
					"BAAAACoKAAAAAAAAKwoAAAAAAAAAAAAAKwoAAAAAAAAsCgAAAAAAAAAAAAAsCgAAAAAAAC0KAAAAAAAAAAAAAC0KAAAAAAAALgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgoAAAAAAAAqCgAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAC8KAAAAAAAAMAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwoAAAAAAAAvCgAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADAKAAAAAAAAMQoAAAAAAAAAAAAAMQoAAAAAAAAyCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAoAAAAAAAAwCgAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"CAAAABUKAAAAAAAAFgoAAAAAAAAAAAAAFgoAAAAAAAAaCgAAAAAAAAAAAAA2CgAAAAAAADYKAAAAAAAAAQAAACAWCgAAAAAAABYKAAAAAAAABAAAACAgICAWCgAAAAAAABgKAAAAAAAAAAAAABgKAAAAAAAAGQoAAAAAAAAAAAAAGQoAAAAAAAAbCgAAAAAAAAAAAAAWCgAAAAAAABYKAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAFQoAAAAAAAAVCgAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"paste",
					null,
					"AQAAABkKAAAAAAAAgwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQoAAAAAAAAZCgAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAIMLAAAAAAAAhAsAAAAAAAAAAAAAhAsAAAAAAACGCwAAAAAAAAAAAACGCwAAAAAAAIcLAAAAAAAAAAAAAIcLAAAAAAAAiQsAAAAAAAAAAAAAhAsAAAAAAACECwAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAgwsAAAAAAACDCwAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAABYKAAAAAAAAFwoAAAAAAAAAAAAAFwoAAAAAAAAXCgAAAAAAAHwAAAAKICAgaWYoanNfbG9jYXRpb25fY2xhc3NfaWQgPT0gMCkKICAgIGpzX2xvY2F0aW9uX2luaXQoY3R4LCAwKTsKICBpZihqc19pc19udWxsaXNoKGN0eCwgcHJvdG8pKQogICAgcHJvdG8gPSBsb2NhdGlvbl9wcm90bzsKCgsAAAAAAAAKCwAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAFgoAAAAAAACSCgAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					2,
					"left_delete",
					null,
					"AgAAAAoLAAAAAAAACgsAAAAAAABUAAAACiAKIEpTX1NldE9wYXF1ZShjdHgsIGRlYyk7CgogIHJldHVybiBqc19zdHJpbmdkZWNvZGVyX25ld19wcm90byhjdHgsIHByb3RvLCAmZGVjKTsKCQsAAAAAAAAJCwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAACgsAAAAAAABeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "js_:fr"
					},
					"BgAAABILAAAAAAAAEwsAAAAAAAAAAAAAEwsAAAAAAAAUCwAAAAAAAAAAAAAUCwAAAAAAABULAAAAAAAAAAAAABULAAAAAAAAFgsAAAAAAAAAAAAAFgsAAAAAAAAXCwAAAAAAAAAAAAAXCwAAAAAAABgLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgsAAAAAAAASCwAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					3,
					"left_delete",
					null,
					"AwAAABcLAAAAAAAAFwsAAAAAAAABAAAAchYLAAAAAAAAFgsAAAAAAAABAAAAZhULAAAAAAAAFQsAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAGAsAAAAAAAAYCwAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "free(cx"
					},
					"BwAAABULAAAAAAAAFgsAAAAAAAAAAAAAFgsAAAAAAAAXCwAAAAAAAAAAAAAXCwAAAAAAABgLAAAAAAAAAAAAABgLAAAAAAAAGQsAAAAAAAAAAAAAGQsAAAAAAAAaCwAAAAAAAAAAAAAaCwAAAAAAABsLAAAAAAAAAAAAABsLAAAAAAAAHAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQsAAAAAAAAVCwAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"left_delete",
					null,
					"AQAAABsLAAAAAAAAGwsAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAHAsAAAAAAAAcCwAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": "tx,"
					},
					"AwAAABsLAAAAAAAAHAsAAAAAAAAAAAAAHAsAAAAAAAAdCwAAAAAAAAAAAAAdCwAAAAAAAB4LAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwsAAAAAAAAbCwAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": " dec);"
					},
					"BgAAAB4LAAAAAAAAHwsAAAAAAAAAAAAAHwsAAAAAAAAgCwAAAAAAAAAAAAAgCwAAAAAAACELAAAAAAAAAAAAACELAAAAAAAAIgsAAAAAAAAAAAAAIgsAAAAAAAAjCwAAAAAAAAAAAAAjCwAAAAAAACQLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgsAAAAAAAAeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"left_delete",
					null,
					"AQAAACQLAAAAAAAAJAsAAAAAAAAeAAAAc3RyaW5nZGVjb2Rlcl9mcmVlKCZkZWMsIGN0eCk7",
					"AQAAAAAAAAABAAAAJAsAAAAAAABCCwAAAAAAAP///////+9/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAF0CAAAAAAAAXgIAAAAAAAAAAAAAXgIAAAAAAABeAgAAAAAAAMsDAAAKanNfc3RyaW5nZGVjb2Rlcl9uZXdfcHJvdG8oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBwcm90bywgY29uc3QgU3RyaW5nRGVjb2Rlciogc3RyaW5nZGVjb2RlcikgewogIEpTVmFsdWUgb2JqOwogIFN0cmluZ0RlY29kZXIqIGRlYzsKCiAgaWYoIShkZWMgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKFN0cmluZ0RlY29kZXIpKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICAqZGVjID0gc3RyaW5nZGVjb2Rlcl9jbG9uZShzdHJpbmdkZWNvZGVyLCBjdHgpOwogIGlmKGpzX3N0cmluZ2RlY29kZXJfY2xhc3NfaWQgPT0gMCkKICAgIGpzX3N0cmluZ2RlY29kZXJfaW5pdChjdHgsIDApOwogIGlmKGpzX2lzX251bGxpc2goY3R4LCBwcm90bykpCiAgICBwcm90byA9IHN0cmluZ2RlY29kZXJfcHJvdG87CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBqc19zdHJpbmdkZWNvZGVyX2NsYXNzX2lkKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwoKICBKU19TZXRPcGFxdWUob2JqLCBkZWMpOwoKICByZXR1cm4gb2JqOwpmYWlsOgogIGpzX2ZyZWUoY3R4LCBkZWMpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKSlNWYWx1ZQpqc19zdHJpbmdkZWNvZGVyX25ldyhKU0NvbnRleHQqIGN0eCwgY29uc3QgU3RyaW5nRGVjb2Rlciogc3RyaW5nZGVjb2RlcikgewogIGlmKGpzX3N0cmluZ2RlY29kZXJfY2xhc3NfaWQgPT0gMCkKICAgIGpzX3N0cmluZ2RlY29kZXJfaW5pdChjdHgsIDApOwoKICByZXR1cm4ganNfc3RyaW5nZGVjb2Rlcl9uZXdfcHJvdG8oY3R4LCBzdHJpbmdkZWNvZGVyX3Byb3RvLCBzdHJpbmdkZWNvZGVyKTsKfQogCg",
					"AQAAAAAAAAABAAAAKAYAAAAAAABdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFUCAAAAAAAAVgIAAAAAAAAAAAAAVgIAAAAAAABWAgAAAAAAAAkAAAAKSlNWYWx1ZSA",
					"AQAAAAAAAAABAAAAXgIAAAAAAABVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"",
					null,
					"BQAAAC8RAAAAAAAAQxEAAAAAAAAXAAAAanNfc3RyaW5nZGVjb2Rlcl9nZXR0ZXLYEAAAAAAAAOwQAAAAAAAAFwAAAGpzX3N0cmluZ2RlY29kZXJfZ2V0dGVyfxAAAAAAAACTEAAAAAAAABcAAABqc19zdHJpbmdkZWNvZGVyX2dldHRlciUQAAAAAAAAORAAAAAAAAAXAAAAanNfc3RyaW5nZGVjb2Rlcl9nZXR0ZXJmAgAAAAAAAHoCAAAAAAAAFwAAAGpzX3N0cmluZ2RlY29kZXJfZ2V0dGVy",
					"AQAAAAAAAAABAAAAJRAAAAAAAAA8EAAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"",
					null,
					"AgAAADkRAAAAAAAATREAAAAAAAAXAAAAanNfc3RyaW5nZGVjb2Rlcl9zZXR0ZXJlAwAAAAAAAHkDAAAAAAAAFwAAAGpzX3N0cmluZ2RlY29kZXJfc2V0dGVy",
					"AQAAAAAAAAABAAAAOREAAAAAAABQEQAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAP8PAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAGgBAAAgICBKU19DR0VUU0VUX01BR0lDX0RFRigibGluZSIsIGpzX3N0cmluZ2RlY29kZXJfZ2V0LCAwLCBTVFJJTkdfREVDT0RFUl9QUk9QX0xJTkUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImNvbHVtbiIsIGpzX3N0cmluZ2RlY29kZXJfZ2V0LCAwLCBTVFJJTkdfREVDT0RFUl9QUk9QX0NPTFVNTiksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigicG9zIiwganNfc3RyaW5nZGVjb2Rlcl9nZXQsIDAsIFNUUklOR19ERUNPREVSX1BST1BfUE9TKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJmaWxlIiwganNfc3RyaW5nZGVjb2Rlcl9nZXQsIGpzX3N0cmluZ2RlY29kZXJfc2V0LCBTVFJJTkdfREVDT0RFUl9QUk9QX0ZJTEUpLAo",
					"AQAAAAAAAAABAAAA/w8AAAAAAABnEQAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"left_delete",
					null,
					"AQAAAF0QAAAAAAAAXRAAAAAAAAAFAAAAY2xvbmU",
					"AQAAAAAAAAABAAAAXRAAAAAAAABiEAAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": "w"
					},
					"AQAAAF0QAAAAAAAAXhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRAAAAAAAABdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"left_delete",
					null,
					"AQAAAF0QAAAAAAAAXRAAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAXhAAAAAAAABeEAAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "write"
					},
					"BQAAAF0QAAAAAAAAXhAAAAAAAAAAAAAAXhAAAAAAAABfEAAAAAAAAAAAAABfEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAYRAAAAAAAAAAAAAAYRAAAAAAAABiEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRAAAAAAAABdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": "end"
					},
					"BAAAAJMQAAAAAAAAlBAAAAAAAAAAAAAAlBAAAAAAAACUEAAAAAAAAAgAAAB0b1N0cmluZ5QQAAAAAAAAlRAAAAAAAAAAAAAAlRAAAAAAAACWEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmxAAAAAAAACTEAAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"left_delete",
					null,
					"AQAAAJkQAAAAAAAAmRAAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAmhAAAAAAAACaEAAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJkQAAAAAAAAmhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRAAAAAAAACZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"left_delete",
					null,
					"AQAAAGUQAAAAAAAAZRAAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAZhAAAAAAAABmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAGUQAAAAAAAAZhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRAAAAAAAABlEAAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": "Write"
					},
					"BgAAAHkQAAAAAAAAehAAAAAAAAAAAAAAehAAAAAAAAB6EAAAAAAAAAUAAABjbG9uZXoQAAAAAAAAexAAAAAAAAAAAAAAexAAAAAAAAB8EAAAAAAAAAAAAAB8EAAAAAAAAH0QAAAAAAAAAAAAAH0QAAAAAAAAfhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeRAAAAAAAAB+EAAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "write"
					},
					"BgAAAHkQAAAAAAAAehAAAAAAAAAAAAAAehAAAAAAAAB6EAAAAAAAAAUAAABXcml0ZXoQAAAAAAAAexAAAAAAAAAAAAAAexAAAAAAAAB8EAAAAAAAAAAAAAB8EAAAAAAAAH0QAAAAAAAAAAAAAH0QAAAAAAAAfhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhAAAAAAAAB5EAAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": "end)"
					},
					"BQAAAK0QAAAAAAAArhAAAAAAAAAAAAAArhAAAAAAAACuEAAAAAAAAAkAAAB0b3N0cmluZymuEAAAAAAAAK8QAAAAAAAAAAAAAK8QAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAACxEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArRAAAAAAAAC2EAAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAANcCAAAAAAAASgMAAAAAAAB7AAAAX1VOREVGSU5FRDsKCiAgaWYoIShkZWMgPSBqc19zdHJpbmdkZWNvZGVyX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICAgCiAgfQogIHJldHVybiByZXQ7",
					"AQAAAAAAAAABAAAA1wIAAAAAAABSAwAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAAN0DAAAAAAAARwQAAAAAAABxAAAAID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGRlYyA9IGpzX3N0cmluZ2RlY29kZXJfZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIAogIH0",
					"AQAAAAAAAAABAAAA3QMAAAAAAABOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"left_delete",
					null,
					"AQAAAGoFAAAAAAAAagUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAawUAAAAAAABrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					2,
					"left_delete",
					null,
					"AgAAAJIHAAAAAAAAkgcAAAAAAAAGAAAAbnNwZWN0kQcAAAAAAACRBwAAAAAAAAEAAABp",
					"AQAAAAAAAAABAAAAkgcAAAAAAACYBwAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": "method"
					},
					"BgAAAJEHAAAAAAAAkgcAAAAAAAAAAAAAkgcAAAAAAACTBwAAAAAAAAAAAACTBwAAAAAAAJQHAAAAAAAAAAAAAJQHAAAAAAAAlQcAAAAAAAAAAAAAlQcAAAAAAACWBwAAAAAAAAAAAACWBwAAAAAAAJcHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQcAAAAAAACRBwAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANwHAAAAAAAA3QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AcAAAAAAADcBwAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAN0HAAAAAAAA3gcAAAAAAAAAAAAA3gcAAAAAAADfBwAAAAAAAAAAAADfBwAAAAAAAOAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QcAAAAAAADdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"left_delete",
					null,
					"AQAAAN8HAAAAAAAA3wcAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA4AcAAAAAAADgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": "nt"
					},
					"AgAAAN8HAAAAAAAA4AcAAAAAAAAAAAAA4AcAAAAAAADhBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wcAAAAAAADfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": " mat"
					},
					"BAAAAOEHAAAAAAAA4gcAAAAAAAAAAAAA4gcAAAAAAADjBwAAAAAAAAAAAADjBwAAAAAAAOQHAAAAAAAAAAAAAOQHAAAAAAAA5QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QcAAAAAAADhBwAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"left_delete",
					null,
					"AQAAAOQHAAAAAAAA5AcAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA5QcAAAAAAADlBwAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "gic"
					},
					"AwAAAOQHAAAAAAAA5QcAAAAAAAAAAAAA5QcAAAAAAADmBwAAAAAAAAAAAADmBwAAAAAAAOcHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AcAAAAAAADkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "\n\nswitc8"
					},
					"DQAAAE4IAAAAAAAATwgAAAAAAAAAAAAATwgAAAAAAABTCAAAAAAAAAAAAABPCAAAAAAAAE8IAAAAAAAABAAAACAgICBPCAAAAAAAAFEIAAAAAAAAAAAAAFEIAAAAAAAAUggAAAAAAAAAAAAAUggAAAAAAABUCAAAAAAAAAAAAABPCAAAAAAAAE8IAAAAAAAAAgAAACAgUggAAAAAAABTCAAAAAAAAAAAAABTCAAAAAAAAFQIAAAAAAAAAAAAAFQIAAAAAAAAVQgAAAAAAAAAAAAAVQgAAAAAAABWCAAAAAAAAAAAAABWCAAAAAAAAFcIAAAAAAAAAAAAAFcIAAAAAAAAWAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATggAAAAAAABOCAAAAAAAAAAAAAAA+IxA"
				],
				[
					323,
					1,
					"left_delete",
					null,
					"AQAAAFcIAAAAAAAAVwgAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAAWAgAAAAAAABYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAAFcIAAAAAAAAWAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwgAAAAAAABXCAAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFgIAAAAAAAAWggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAgAAAAAAABYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": "magic"
					},
					"BQAAAFkIAAAAAAAAWggAAAAAAAAAAAAAWggAAAAAAABbCAAAAAAAAAAAAABbCAAAAAAAAFwIAAAAAAAAAAAAAFwIAAAAAAAAXQgAAAAAAAAAAAAAXQgAAAAAAABeCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQgAAAAAAABZCAAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF8IAAAAAAAAYAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwgAAAAAAABfCAAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGAIAAAAAAAAYggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAgAAAAAAABgCAAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAGEIAAAAAAAAYggAAAAAAAAAAAAAYggAAAAAAABkCAAAAAAAAAAAAABkCAAAAAAAAGUIAAAAAAAAAAAAAGUIAAAAAAAAZwgAAAAAAAAAAAAAYggAAAAAAABiCAAAAAAAAAIAAAAgIGIIAAAAAAAAZggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQgAAAAAAABhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					1,
					"left_delete",
					null,
					"AgAAAGsIAAAAAAAAawgAAAAAAAC7AgAACiAgSlNWYWx1ZSBvYmogPSBKU19OZXdPYmplY3RQcm90byhjdHgsIHN0cmluZ2RlY29kZXJfcHJvdG8pOwogIGlmKGRlYy0+bGluZSA8IFVJTlQzMl9NQVgpCiAgICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAibGluZSIsIEpTX05ld1VpbnQzMihjdHgsIGRlYy0+bGluZSArIDEpLCBKU19QUk9QX0VOVU1FUkFCTEUpOwogIGlmKGRlYy0+Y29sdW1uIDwgVUlOVDMyX01BWCkKICAgIEpTX0RlZmluZVByb3BlcnR5VmFsdWVTdHIoY3R4LCBvYmosICJjb2x1bW4iLCBKU19OZXdVaW50MzIoY3R4LCBkZWMtPmNvbHVtbiArIDEpLCBKU19QUk9QX0VOVU1FUkFCTEUpOwogIGlmKGRlYy0+cG9zID49IDAgJiYgZGVjLT5wb3MgPD0gSU5UNjRfTUFYKQogICAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIG9iaiwgInBvcyIsIEpTX05ld0ludDY0KGN0eCwgZGVjLT5wb3MpLCBKU19QUk9QX0VOVU1FUkFCTEUpOwogIGlmKGRlYy0+ZmlsZSkKICAgIEpTX0RlZmluZVByb3BlcnR5VmFsdWVTdHIoY3R4LCBvYmosICJmaWxlIiwgSlNfTmV3U3RyaW5nKGN0eCwgZGVjLT5maWxlKSwgSlNfUFJPUF9FTlVNRVJBQkxFKTsKICBpZihkZWMtPnN0cikKICAgIEpTX0RlZmluZVByb3BlcnR5VmFsdWVTdHIoY3R4LCBvYmosICJzdHIiLCBKU19OZXdTdHJpbmcoY3R4LCBkZWMtPnN0ciksIEpTX1BST1BfRU5VTUVSQUJMRSk7YggAAAAAAABiCAAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAawgAAAAAAAAmCwAAAAAAAP///////+9/"
				],
				[
					338,
					3,
					"left_delete",
					null,
					"AwAAAHMIAAAAAAAAcwgAAAAAAAABAAAAanIIAAAAAAAAcggAAAAAAAABAAAAYnEIAAAAAAAAcQgAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAdAgAAAAAAAB0CAAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAHEIAAAAAAAAcggAAAAAAAAAAAAAcggAAAAAAABzCAAAAAAAAAAAAABzCAAAAAAAAHQIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQgAAAAAAABxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "JSValue"
					},
					"BwAAAAEIAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAQIAAAAAAAAAAAAAAQIAAAAAAAABQgAAAAAAAAAAAAABQgAAAAAAAAGCAAAAAAAAAAAAAAGCAAAAAAAAAcIAAAAAAAAAAAAAAcIAAAAAAAACAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAFtA"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAAAgIAAAAAAAACQgAAAAAAAAAAAAACQgAAAAAAAAKCAAAAAAAAAAAAAAKCAAAAAAAAAsIAAAAAAAAAAAAAAsIAAAAAAAADAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAgAAAAAAAAICAAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAwIAAAAAAAADQgAAAAAAAAAAAAADQgAAAAAAAAOCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAgAAAAAAAAMCAAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": " JS_UNDEFIMED"
					},
					"DQAAAA4IAAAAAAAADwgAAAAAAAAAAAAADwgAAAAAAAAQCAAAAAAAAAAAAAAQCAAAAAAAABEIAAAAAAAAAAAAABEIAAAAAAAAEggAAAAAAAAAAAAAEggAAAAAAAATCAAAAAAAAAAAAAATCAAAAAAAABQIAAAAAAAAAAAAABQIAAAAAAAAFQgAAAAAAAAAAAAAFQgAAAAAAAAWCAAAAAAAAAAAAAAWCAAAAAAAABcIAAAAAAAAAAAAABcIAAAAAAAAGAgAAAAAAAAAAAAAGAgAAAAAAAAZCAAAAAAAAAAAAAAZCAAAAAAAABoIAAAAAAAAAAAAABoIAAAAAAAAGwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADggAAAAAAAAOCAAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					3,
					"left_delete",
					null,
					"AwAAABoIAAAAAAAAGggAAAAAAAABAAAARBkIAAAAAAAAGQgAAAAAAAABAAAARRgIAAAAAAAAGAgAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAGwgAAAAAAAAbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": "NE;"
					},
					"AwAAABgIAAAAAAAAGQgAAAAAAAAAAAAAGQgAAAAAAAAaCAAAAAAAAAAAAAAaCAAAAAAAABsIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAgAAAAAAAAYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"left_delete",
					null,
					"AQAAABoIAAAAAAAAGggAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAGwgAAAAAAAAbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": "D;"
					},
					"AgAAABoIAAAAAAAAGwgAAAAAAAAAAAAAGwgAAAAAAAAcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGggAAAAAAAAaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABwIAAAAAAAAHQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAgAAAAAAAAcCAAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJQIAAAAAAAAlQgAAAAAAAAAAAAAlQgAAAAAAACVCAAAAAAAAEcDAAAKc3RhdGljIEpTVmFsdWUKanNfc3RyaW5nZGVjb2Rlcl9jbG9uZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIFN0cmluZ0RlY29kZXIqIGRlYzsKCiAgaWYoIShkZWMgPSBqc19zdHJpbmdkZWNvZGVyX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgcmV0dXJuIGpzX3N0cmluZ2RlY29kZXJfbmV3X3Byb3RvKGN0eCwgSlNfR2V0UHJvdG90eXBlKGN0eCwgdGhpc192YWwpLCBkZWMpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19zdHJpbmdkZWNvZGVyX2NvdW50KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgU3RyaW5nRGVjb2RlciBkZWM7CiAgSW5wdXRCdWZmZXIgaW5wdXQ7CiAgc2l6ZV90IGk7CiAgaW50NjRfdCBsaW1pdCA9IC0xOwogIHN0cmluZ2RlY29kZXJfaW5pdCgmZGVjKTsKCiAgaWYoYXJnYyA+PSAyKQogICAgSlNfVG9JbnQ2NChjdHgsICZsaW1pdCwgYXJndlsxXSk7CgogIGlucHV0ID0ganNfaW5wdXRfYnVmZmVyKGN0eCwgYXJndlswXSk7CiAgaWYobGltaXQgPT0gLTEgfHwgKHNpemVfdClsaW1pdCA+IGlucHV0LnNpemUpCiAgICBsaW1pdCA9IGlucHV0LnNpemU7CiAgc3RyaW5nZGVjb2Rlcl9jb3VudCgmZGVjLCAoY29uc3QgY2hhciopaW5wdXQuZGF0YSwgbGltaXQpOwogIHJldHVybiBqc19zdHJpbmdkZWNvZGVyX25ld19wcm90byhjdHgsIHN0cmluZ2RlY29kZXJfcHJvdG8sICZkZWMpOwp9Cg",
					"AQAAAAAAAAABAAAAlAgAAAAAAADbCwAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": "js_free_rt("
					},
					"DAAAACkJAAAAAAAAKgkAAAAAAAAAAAAAKgkAAAAAAAAqCQAAAAAAABUAAABzdHJpbmdkZWNvZGVyX2ZyZWVfcnQqCQAAAAAAACsJAAAAAAAAAAAAACsJAAAAAAAALAkAAAAAAAAAAAAALAkAAAAAAAAtCQAAAAAAAAAAAAAtCQAAAAAAAC4JAAAAAAAAAAAAAC4JAAAAAAAALwkAAAAAAAAAAAAALwkAAAAAAAAwCQAAAAAAAAAAAAAwCQAAAAAAADEJAAAAAAAAAAAAADEJAAAAAAAAMgkAAAAAAAAAAAAAMgkAAAAAAAAzCQAAAAAAAAAAAAAzCQAAAAAAADQJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQkAAAAAAAA+CQAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": "rtm,"
					},
					"BAAAADQJAAAAAAAANQkAAAAAAAAAAAAANQkAAAAAAAA2CQAAAAAAAAAAAAA2CQAAAAAAADcJAAAAAAAAAAAAADcJAAAAAAAAOAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAkAAAAAAAA0CQAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADgJAAAAAAAAOQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAkAAAAAAAA4CQAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					3,
					"left_delete",
					null,
					"AwAAADgJAAAAAAAAOAkAAAAAAAABAAAAIDcJAAAAAAAANwkAAAAAAAABAAAALDYJAAAAAAAANgkAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAOQkAAAAAAAA5CQAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADYJAAAAAAAANwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgkAAAAAAAA2CQAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": " dec"
					},
					"BAAAADcJAAAAAAAAOAkAAAAAAAAAAAAAOAkAAAAAAAA5CQAAAAAAAAAAAAA5CQAAAAAAADoJAAAAAAAAAAAAADoJAAAAAAAAOwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwkAAAAAAAA3CQAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"left_delete",
					null,
					"AQAAADsJAAAAAAAAOwkAAAAAAAAIAAAAKGRlYywgcnQ",
					"AQAAAAAAAAABAAAAOwkAAAAAAABDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACIKAAAAAAAAIwoAAAAAAAAAAAAAIwoAAAAAAAAjCgAAAAAAAE0AAAAgICAgSlNfQ0ZVTkNfREVGKCJbU3ltYm9sLnRvUHJpbWl0aXZlXSIsIDAsIGpzX3N0cmluZ2RlY29kZXJfdG9wcmltaXRpdmUpLAogIA",
					"AQAAAAAAAAABAAAAIgoAAAAAAABvCgAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOMKAAAAAAAA5AoAAAAAAAAAAAAA5AoAAAAAAADkCgAAAAAAAIAAAAAKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX3N0cmluZ2RlY29kZXJfc3RhdGljX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19ERUYoImNvdW50IiwgMSwganNfc3RyaW5nZGVjb2Rlcl9jb3VudCksCn07Cg",
					"AQAAAAAAAAABAAAA4woAAAAAAABjCwAAAAAAAAAAAAAAAPC/"
				],
				[
					424,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAO4MAAAAAAAA7wwAAAAAAAAAAAAA7wwAAAAAAADvDAAAAAAAAIAAAAAgICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBzdHJpbmdkZWNvZGVyX2N0b3IsIGpzX3N0cmluZ2RlY29kZXJfc3RhdGljX2Z1bmNzLCBjb3VudG9mKGpzX3N0cmluZ2RlY29kZXJfc3RhdGljX2Z1bmNzKSk7Cg",
					"AQAAAAAAAAABAAAA7gwAAAAAAABuDQAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					3,
					"left_delete",
					null,
					"AwAAAA4HAAAAAAAADgcAAAAAAAABAAAAYw0HAAAAAAAADQcAAAAAAAABAAAAbwwHAAAAAAAADAcAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAADwcAAAAAAAAPBwAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					1,
					"insert",
					{
						"characters": "dec"
					},
					"AwAAAAwHAAAAAAAADQcAAAAAAAAAAAAADQcAAAAAAAAOBwAAAAAAAAAAAAAOBwAAAAAAAA8HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAcAAAAAAAAMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					464,
					1,
					"",
					null,
					"AQAAALoGAAAAAAAAxwYAAAAAAAAIAAAAbG9jYXRpb24",
					"AQAAAAAAAAABAAAAugYAAAAAAADCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"insert",
					{
						"characters": "MAGIC_"
					},
					"BgAAADMKAAAAAAAANAoAAAAAAAAAAAAANAoAAAAAAAA1CgAAAAAAAAAAAAA1CgAAAAAAADYKAAAAAAAAAAAAADYKAAAAAAAANwoAAAAAAAAAAAAANwoAAAAAAAA4CgAAAAAAAAAAAAA4CgAAAAAAADkKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwoAAAAAAAAzCgAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"cut",
					null,
					"AQAAADMKAAAAAAAAMwoAAAAAAAAGAAAATUFHSUNf",
					"AQAAAAAAAAABAAAAOQoAAAAAAAAzCgAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					1,
					"paste",
					null,
					"AQAAADMKAAAAAAAAOQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwoAAAAAAAAzCgAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"paste",
					null,
					"AQAAAG8KAAAAAAAAdQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwoAAAAAAABvCgAAAAAAAAAAAAAAAPC/"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": ",STRINGDECODER_"
					},
					"DwAAAF8KAAAAAAAAYAoAAAAAAAAAAAAAYAoAAAAAAABhCgAAAAAAAAAAAABhCgAAAAAAAGIKAAAAAAAAAAAAAGIKAAAAAAAAYwoAAAAAAAAAAAAAYwoAAAAAAABkCgAAAAAAAAAAAABkCgAAAAAAAGUKAAAAAAAAAAAAAGUKAAAAAAAAZgoAAAAAAAAAAAAAZgoAAAAAAABnCgAAAAAAAAAAAABnCgAAAAAAAGgKAAAAAAAAAAAAAGgKAAAAAAAAaQoAAAAAAAAAAAAAaQoAAAAAAABqCgAAAAAAAAAAAABqCgAAAAAAAGsKAAAAAAAAAAAAAGsKAAAAAAAAbAoAAAAAAAAAAAAAbAoAAAAAAABtCgAAAAAAAAAAAABtCgAAAAAAAG4KAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwoAAAAAAABfCgAAAAAAAAAAAAAAAPC/"
				],
				[
					490,
					1,
					"insert",
					{
						"characters": "WRITE"
					},
					"BQAAAG4KAAAAAAAAbwoAAAAAAAAAAAAAbwoAAAAAAABwCgAAAAAAAAAAAABwCgAAAAAAAHEKAAAAAAAAAAAAAHEKAAAAAAAAcgoAAAAAAAAAAAAAcgoAAAAAAABzCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgoAAAAAAABuCgAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"paste",
					null,
					"AQAAAKsKAAAAAAAAvwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwoAAAAAAACrCgAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"insert",
					{
						"characters": "END"
					},
					"BAAAALoKAAAAAAAAuwoAAAAAAAAAAAAAuwoAAAAAAAC7CgAAAAAAAAUAAABXUklURbsKAAAAAAAAvAoAAAAAAAAAAAAAvAoAAAAAAAC9CgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwoAAAAAAAC6CgAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert",
					{
						"characters": "STRINGDEC"
					},
					"CgAAAEABAAAAAAAAQQEAAAAAAAAAAAAAQQEAAAAAAABBAQAAAAAAABgAAABTVFJJTkdfREVDT0RFUl9QUk9QX0xJTkVBAQAAAAAAAEIBAAAAAAAAAAAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAABEAQAAAAAAAEUBAAAAAAAAAAAAAEUBAAAAAAAARgEAAAAAAAAAAAAARgEAAAAAAABHAQAAAAAAAAAAAABHAQAAAAAAAEgBAAAAAAAAAAAAAEgBAAAAAAAASQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAEAAAAAAABYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					510,
					1,
					"insert_completion",
					{
						"completion": "STRINGDECODER_WRITE",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "STRINGDECODER_WRITE"
					},
					"AgAAAEABAAAAAAAAQAEAAAAAAAAJAAAAU1RSSU5HREVDQAEAAAAAAABTAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQEAAAAAAABJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					511,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFMBAAAAAAAAVAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwEAAAAAAABTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					512,
					1,
					"insert",
					{
						"characters": " SITNR"
					},
					"BgAAAFQBAAAAAAAAVQEAAAAAAAAAAAAAVQEAAAAAAABWAQAAAAAAAAAAAABWAQAAAAAAAFcBAAAAAAAAAAAAAFcBAAAAAAAAWAEAAAAAAAAAAAAAWAEAAAAAAABZAQAAAAAAAAAAAABZAQAAAAAAAFoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAEAAAAAAABUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					513,
					4,
					"left_delete",
					null,
					"BAAAAFkBAAAAAAAAWQEAAAAAAAABAAAAUlgBAAAAAAAAWAEAAAAAAAABAAAATlcBAAAAAAAAVwEAAAAAAAABAAAAVFYBAAAAAAAAVgEAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAWgEAAAAAAABaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": "TRINGDEC"
					},
					"CAAAAFYBAAAAAAAAVwEAAAAAAAAAAAAAVwEAAAAAAABYAQAAAAAAAAAAAABYAQAAAAAAAFkBAAAAAAAAAAAAAFkBAAAAAAAAWgEAAAAAAAAAAAAAWgEAAAAAAABbAQAAAAAAAAAAAABbAQAAAAAAAFwBAAAAAAAAAAAAAFwBAAAAAAAAXQEAAAAAAAAAAAAAXQEAAAAAAABeAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgEAAAAAAABWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					516,
					1,
					"insert_completion",
					{
						"completion": "STRINGDECODER_END",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "STRINGDECODER_END"
					},
					"AgAAAFUBAAAAAAAAVQEAAAAAAAAJAAAAU1RSSU5HREVDVQEAAAAAAABmAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					520,
					1,
					"left_delete",
					null,
					"AQAAAGYBAAAAAAAAZgEAAAAAAABPAAAALCBTVFJJTkdfREVDT0RFUl9QUk9QX0NPTFVNTiwgU1RSSU5HX0RFQ09ERVJfUFJPUF9QT1MsIFNUUklOR19ERUNPREVSX1BST1BfRklMRQ",
					"AQAAAAAAAAABAAAAZgEAAAAAAAC1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "method"
					},
					"BwAAAGcKAAAAAAAAaAoAAAAAAAAAAAAAaAoAAAAAAABoCgAAAAAAAAMAAABlbmRoCgAAAAAAAGkKAAAAAAAAAAAAAGkKAAAAAAAAagoAAAAAAAAAAAAAagoAAAAAAABrCgAAAAAAAAAAAABrCgAAAAAAAGwKAAAAAAAAAAAAAGwKAAAAAAAAbQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwoAAAAAAABqCgAAAAAAAAAAAAAAAPC/"
				],
				[
					542,
					1,
					"paste",
					null,
					"AgAAAAgKAAAAAAAAHwoAAAAAAAAAAAAAHwoAAAAAAAAfCgAAAAAAABYAAABqc19zdHJpbmdkZWNvZGVyX3dyaXRl",
					"AQAAAAAAAAABAAAACAoAAAAAAAAeCgAAAAAAAAAAAAAAAPC/"
				],
				[
					546,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABeDwAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgInF1aWNranMtc3RyaW5nZGVjb2Rlci5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfc3RyaW5nZGVjb2Rlcl9jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIHN0cmluZ2RlY29kZXJfcHJvdG8gPSB7SlNfVEFHX1VOREVGSU5FRH0sIHN0cmluZ2RlY29kZXJfY3RvciA9IHtKU19UQUdfVU5ERUZJTkVEfTsKCmVudW0geyBTVFJJTkdERUNPREVSX1dSSVRFLCBTVFJJTkdERUNPREVSX0VORCB9OwoKU3RyaW5nRGVjb2RlcioKanNfc3RyaW5nZGVjb2Rlcl9kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBTdHJpbmdEZWNvZGVyKiBkZWM7CiAgZGVjID0gSlNfR2V0T3BhcXVlKHZhbHVlLCBqc19zdHJpbmdkZWNvZGVyX2NsYXNzX2lkKTsKICByZXR1cm4gZGVjOwp9CiAKc3RhdGljIEpTVmFsdWUKanNfc3RyaW5nZGVjb2Rlcl9nZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgU3RyaW5nRGVjb2RlciogZGVjOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGlmKCEoZGVjID0ganNfc3RyaW5nZGVjb2Rlcl9kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiByZXQ7CiAgc3dpdGNoKG1hZ2ljKSB7CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3N0cmluZ2RlY29kZXJfc2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIEpTVmFsdWVDb25zdCB2YWx1ZSwgaW50IG1hZ2ljKSB7CiAgU3RyaW5nRGVjb2RlciogZGVjOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGlmKCEoZGVjID0ganNfc3RyaW5nZGVjb2Rlcl9kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiByZXQ7CiAgc3dpdGNoKG1hZ2ljKSB7CiAgfQogIHJldHVybiByZXQ7Cn0gCgpKU1ZhbHVlCmpzX3N0cmluZ2RlY29kZXJfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgb2JqID0gSlNfVU5ERUZJTkVEOwogIEpTVmFsdWUgcHJvdG87CiAgU3RyaW5nRGVjb2RlciAqZGVjOyAKCiAgaWYoIShkZWMgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKFN0cmluZ0RlY29kZXIpKSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX3N0cmluZ2RlY29kZXJfY2xhc3NfaWQpOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIGRlYyk7CgogIHJldHVybiBvYmo7CgpmYWlsOgogIGpzX2ZyZWUoY3R4LCBkZWMpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIEpTVmFsdWUKanNfc3RyaW5nZGVjb2Rlcl9tZXRob2QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIFN0cmluZ0RlY29kZXIqIGRlYzsKSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZGVjID0ganNfc3RyaW5nZGVjb2Rlcl9kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykgewoKICB9CgogIHJldHVybiByZXQ7Cn0KIAp2b2lkCmpzX3N0cmluZ2RlY29kZXJfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgU3RyaW5nRGVjb2RlciogZGVjID0gSlNfR2V0T3BhcXVlKHZhbCwganNfc3RyaW5nZGVjb2Rlcl9jbGFzc19pZCk7CiAgaWYoZGVjKSB7CiAgICBqc19mcmVlX3J0KHJ0LCBkZWMpOwogIH0KICBKU19GcmVlVmFsdWVSVChydCwgdmFsKTsKfQoKc3RhdGljIEpTQ2xhc3NEZWYganNfc3RyaW5nZGVjb2Rlcl9jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIlN0cmluZ0RlY29kZXIiLAogICAgLmZpbmFsaXplciA9IGpzX3N0cmluZ2RlY29kZXJfZmluYWxpemVyLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX3N0cmluZ2RlY29kZXJfZnVuY3NbXSA9IHsKICAgICBKU19DRlVOQ19NQUdJQ19ERUYoIndyaXRlIiwgMSwganNfc3RyaW5nZGVjb2Rlcl9tZXRob2QsU1RSSU5HREVDT0RFUl9XUklURSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImVuZCIsIDEsIGpzX3N0cmluZ2RlY29kZXJfbWV0aG9kLFNUUklOR0RFQ09ERVJfRU5EKSwKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiU3RyaW5nRGVjb2RlciIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKIAppbnQKanNfc3RyaW5nZGVjb2Rlcl9pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBpZihqc19zdHJpbmdkZWNvZGVyX2NsYXNzX2lkID09IDApIHsKICAgIEpTX05ld0NsYXNzSUQoJmpzX3N0cmluZ2RlY29kZXJfY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19zdHJpbmdkZWNvZGVyX2NsYXNzX2lkLCAmanNfc3RyaW5nZGVjb2Rlcl9jbGFzcyk7CgogICAgc3RyaW5nZGVjb2Rlcl9jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX3N0cmluZ2RlY29kZXJfY29uc3RydWN0b3IsICJTdHJpbmdEZWNvZGVyIiwgMSwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogICAgc3RyaW5nZGVjb2Rlcl9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwoKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgc3RyaW5nZGVjb2Rlcl9wcm90bywganNfc3RyaW5nZGVjb2Rlcl9mdW5jcywgY291bnRvZihqc19zdHJpbmdkZWNvZGVyX2Z1bmNzKSk7CiAgICAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIGpzX3N0cmluZ2RlY29kZXJfY2xhc3NfaWQsIHN0cmluZ2RlY29kZXJfcHJvdG8pOwoKICAgIGpzX3NldF9pbnNwZWN0X21ldGhvZChjdHgsIHN0cmluZ2RlY29kZXJfcHJvdG8sIGpzX3N0cmluZ2RlY29kZXJfaW5zcGVjdCk7CiAgfQoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiU3RyaW5nRGVjb2RlciIsIHN0cmluZ2RlY29kZXJfY3Rvcik7CiAgfQoKICByZXR1cm4gMDsKfQoKI2lmZGVmIEpTX1NIQVJFRF9MSUJSQVJZCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9zdHJpbmdkZWNvZGVyCiNlbmRpZgoKVklTSUJMRSBKU01vZHVsZURlZioKSlNfSU5JVF9NT0RVTEUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKSB7CiAgSlNNb2R1bGVEZWYqIG07CiAgaWYoIShtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfc3RyaW5nZGVjb2Rlcl9pbml0KSkpCiAgICByZXR1cm4gbTsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiU3RyaW5nRGVjb2RlciIpOwogIHJldHVybiBtOwp9CgAAAAAAAAAAWA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwoAAAAAAAAfCgAAAAAAAAAAAAAAAPC/"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAADMNAAAAAAAANA0AAAAAAAAAAAAANA0AAAAAAAA1DQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMw0AAAAAAAAzDQAAAAAAAAAAAAAAAPC/"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAOsNAAAAAAAA7A0AAAAAAAAAAAAA7A0AAAAAAADtDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6w0AAAAAAADrDQAAAAAAAAAAAAAAAPC/"
				],
				[
					561,
					1,
					"insert",
					{
						"characters": " //"
					},
					"AwAAAO0NAAAAAAAA7g0AAAAAAAAAAAAA7g0AAAAAAADvDQAAAAAAAAAAAADvDQAAAAAAAPANAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7Q0AAAAAAADtDQAAAAAAAAAAAAAAAPC/"
				],
				[
					573,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfDwAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgInF1aWNranMtc3RyaW5nZGVjb2Rlci5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfc3RyaW5nZGVjb2Rlcl9jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIHN0cmluZ2RlY29kZXJfcHJvdG8gPSB7SlNfVEFHX1VOREVGSU5FRH0sIHN0cmluZ2RlY29kZXJfY3RvciA9IHtKU19UQUdfVU5ERUZJTkVEfTsKCmVudW0geyBTVFJJTkdERUNPREVSX1dSSVRFLCBTVFJJTkdERUNPREVSX0VORCB9OwoKU3RyaW5nRGVjb2RlcioKanNfc3RyaW5nZGVjb2Rlcl9kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBTdHJpbmdEZWNvZGVyKiBkZWM7CiAgZGVjID0gSlNfR2V0T3BhcXVlKHZhbHVlLCBqc19zdHJpbmdkZWNvZGVyX2NsYXNzX2lkKTsKICByZXR1cm4gZGVjOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19zdHJpbmdkZWNvZGVyX2dldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBTdHJpbmdEZWNvZGVyKiBkZWM7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgaWYoIShkZWMgPSBqc19zdHJpbmdkZWNvZGVyX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfc3RyaW5nZGVjb2Rlcl9zZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnQgbWFnaWMpIHsKICBTdHJpbmdEZWNvZGVyKiBkZWM7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgaWYoIShkZWMgPSBqc19zdHJpbmdkZWNvZGVyX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKSlNWYWx1ZQpqc19zdHJpbmdkZWNvZGVyX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRDsKICBKU1ZhbHVlIHByb3RvOwogIFN0cmluZ0RlY29kZXIqIGRlYzsKCiAgaWYoIShkZWMgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKFN0cmluZ0RlY29kZXIpKSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfc3RyaW5nZGVjb2Rlcl9jbGFzc19pZCk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgZGVjKTsKCiAgcmV0dXJuIG9iajsKCmZhaWw6CiAganNfZnJlZShjdHgsIGRlYyk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19zdHJpbmdkZWNvZGVyX21ldGhvZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgU3RyaW5nRGVjb2RlciogZGVjOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGRlYyA9IGpzX3N0cmluZ2RlY29kZXJfZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHt9CgogIHJldHVybiByZXQ7Cn0KCnZvaWQKanNfc3RyaW5nZGVjb2Rlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBTdHJpbmdEZWNvZGVyKiBkZWMgPSBKU19HZXRPcGFxdWUodmFsLCBqc19zdHJpbmdkZWNvZGVyX2NsYXNzX2lkKTsKICBpZihkZWMpIHsKICAgIGpzX2ZyZWVfcnQocnQsIGRlYyk7CiAgfQogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCB2YWwpOwp9CgpzdGF0aWMgSlNDbGFzc0RlZiBqc19zdHJpbmdkZWNvZGVyX2NsYXNzID0gewogICAgLmNsYXNzX25hbWUgPSAiU3RyaW5nRGVjb2RlciIsCiAgICAuZmluYWxpemVyID0ganNfc3RyaW5nZGVjb2Rlcl9maW5hbGl6ZXIsCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfc3RyaW5nZGVjb2Rlcl9mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ3cml0ZSIsIDEsIGpzX3N0cmluZ2RlY29kZXJfbWV0aG9kLCBTVFJJTkdERUNPREVSX1dSSVRFKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZW5kIiwgMSwganNfc3RyaW5nZGVjb2Rlcl9tZXRob2QsIFNUUklOR0RFQ09ERVJfRU5EKSwKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiU3RyaW5nRGVjb2RlciIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCmludApqc19zdHJpbmdkZWNvZGVyX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX3N0cmluZ2RlY29kZXJfY2xhc3NfaWQgPT0gMCkgewogICAgSlNfTmV3Q2xhc3NJRCgmanNfc3RyaW5nZGVjb2Rlcl9jbGFzc19pZCk7CiAgICBKU19OZXdDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIGpzX3N0cmluZ2RlY29kZXJfY2xhc3NfaWQsICZqc19zdHJpbmdkZWNvZGVyX2NsYXNzKTsKCiAgICBzdHJpbmdkZWNvZGVyX2N0b3IgPQogICAgICAgIEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19zdHJpbmdkZWNvZGVyX2NvbnN0cnVjdG9yLCAiU3RyaW5nRGVjb2RlciIsIDEsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKICAgIHN0cmluZ2RlY29kZXJfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIHN0cmluZ2RlY29kZXJfcHJvdG8sIGpzX3N0cmluZ2RlY29kZXJfZnVuY3MsIGNvdW50b2YoanNfc3RyaW5nZGVjb2Rlcl9mdW5jcykpOwogICAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIGpzX3N0cmluZ2RlY29kZXJfY2xhc3NfaWQsIHN0cmluZ2RlY29kZXJfcHJvdG8pOwoKICAgIC8vanNfc2V0X2luc3BlY3RfbWV0aG9kKGN0eCwgc3RyaW5nZGVjb2Rlcl9wcm90bywganNfc3RyaW5nZGVjb2Rlcl9pbnNwZWN0KTsKICB9CgogIGlmKG0pIHsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJTdHJpbmdEZWNvZGVyIiwgc3RyaW5nZGVjb2Rlcl9jdG9yKTsKICB9CgogIHJldHVybiAwOwp9CgojaWYgMCAvL2RlZiBKU19TSEFSRURfTElCUkFSWQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfc3RyaW5nZGVjb2RlcgojZW5kaWYKClZJU0lCTEUgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIGlmKCEobSA9IEpTX05ld0NNb2R1bGUoY3R4LCBtb2R1bGVfbmFtZSwgJmpzX3N0cmluZ2RlY29kZXJfaW5pdCkpKQogICAgcmV0dXJuIG07CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlN0cmluZ0RlY29kZXIiKTsKICByZXR1cm4gbTsKfQoAAAAAAAAAAGEPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1goAAAAAAADrCgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-pointer.c",
			"settings":
			{
				"buffer_size": 15537,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs-stringdecoder.h",
			"settings":
			{
				"buffer_size": 673,
				"line_ending": "Unix",
				"name": "#ifndef QUICKJS_STRING_DECODER_H"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAGwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\n#include"
					},
					"CQAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEUAAAAAAAAAAAAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " cu"
					},
					"AwAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					2,
					"left_delete",
					null,
					"AgAAAE0AAAAAAAAATQAAAAAAAAABAAAAdUwAAAAAAAAATAAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "<cutils.h>"
					},
					"CgAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAE8AAAAAAAAAAAAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n#include"
					},
					"CQAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEUAAAAAAAAAAAAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAYGVA"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " <quickjs.h>"
					},
					"DAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABWAAAAAAAAAAAAAABWAAAAAAAAAFcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAAGwAAAAAAAAAbAAAAAAAAAAbAAAAI2luY2x1ZGUgInN0cmluZ2RlY29kZXIuaCIK",
					"AQAAAAAAAAABAAAAbAAAAAAAAACHAAAAAAAAAAAAAAAAAAAA"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAAAA"
				],
				[
					38,
					1,
					"paste",
					null,
					"AQAAAIAAAAAAAAAAjQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "typde"
					},
					"BQAAAIAAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAACCAAAAAAAAAAAAAACCAAAAAAAAAIMAAAAAAAAAAAAAAIMAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					42,
					2,
					"left_delete",
					null,
					"AgAAAIQAAAAAAAAAhAAAAAAAAAABAAAAZYMAAAAAAAAAgwAAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "edef"
					},
					"BAAAAIMAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACFAAAAAAAAAAAAAACFAAAAAAAAAIYAAAAAAAAAAAAAAIYAAAAAAAAAhwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " strut"
					},
					"BgAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAIoAAAAAAAAAAAAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"left_delete",
					null,
					"AQAAAIwAAAAAAAAAjAAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAjQAAAAAAAACNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "ct"
					},
					"AgAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " stsring_"
					},
					"CQAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					6,
					"left_delete",
					null,
					"BgAAAJYAAAAAAAAAlgAAAAAAAAABAAAAX5UAAAAAAAAAlQAAAAAAAAABAAAAZ5QAAAAAAAAAlAAAAAAAAAABAAAAbpMAAAAAAAAAkwAAAAAAAAABAAAAaZIAAAAAAAAAkgAAAAAAAAABAAAAcpEAAAAAAAAAkQAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "ring_decoder"
					},
					"DAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACZAAAAAAAAAAAAAACZAAAAAAAAAJoAAAAAAAAAAAAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAJ0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQAAAAAAAACRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAAChAAAAAAAAAAAAAAChAAAAAAAAAKIAAAAAAAAAAAAAAKAAAAAAAAAAoAAAAAAAAAABAAAACaAAAAAAAAAAoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAK4AAAAAAAAArwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAAChAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwAAAAAAAACfAAAAAAAAAP///////+9/"
				],
				[
					59,
					1,
					"paste",
					null,
					"AQAAAKEAAAAAAAAApwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQAAAAAAAAChAAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAKcAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAAKcAAAAAAAAApwAAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " bu"
					},
					"AwAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAACpAAAAAAAAAKoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					2,
					"left_delete",
					null,
					"AgAAAKkAAAAAAAAAqQAAAAAAAAABAAAAdagAAAAAAAAAqAAAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "input;"
					},
					"BgAAAKgAAAAAAAAAqQAAAAAAAAAAAAAAqQAAAAAAAACqAAAAAAAAAAAAAACqAAAAAAAAAKsAAAAAAAAAAAAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAK4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALIAAAAAAAAAswAAAAAAAAAAAAAArwAAAAAAAACvAAAAAAAAAAEAAAAJ",
					"AQAAAAAAAAABAAAAsgAAAAAAAACyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwAAAAAAAACvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					3,
					"left_delete",
					null,
					"AwAAALAAAAAAAAAAsAAAAAAAAAABAAAAIK8AAAAAAAAArwAAAAAAAAABAAAAIK4AAAAAAAAArgAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAsQAAAAAAAACxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAK8AAAAAAAAAsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwAAAAAAAACvAAAAAAAAAAAAAAAAAAAA"
				],
				[
					88,
					1,
					"left_delete",
					null,
					"AQAAAK8AAAAAAAAArwAAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"paste",
					null,
					"AgAAAPsAAAAAAAAAjgIAAAAAAAAAAAAAjgIAAAAAAACOAgAAAAAAAD8DAABTdHJpbmdEZWNvZGVyKiBqc19zdHJpbmdkZWNvZGVyX2RhdGEoSlNDb250ZXh0KiwgSlNWYWx1ZSB2YWx1ZSk7CkpTVmFsdWUganNfc3RyaW5nZGVjb2Rlcl9uZXdfcHJvdG8oSlNDb250ZXh0KiwgSlNWYWx1ZSBwcm90bywgY29uc3QgU3RyaW5nRGVjb2Rlciogc3RyaW5nZGVjb2Rlcik7CkpTVmFsdWUganNfc3RyaW5nZGVjb2Rlcl9uZXcoSlNDb250ZXh0KiwgY29uc3QgU3RyaW5nRGVjb2Rlciogc3RyaW5nZGVjb2Rlcik7CkpTVmFsdWUganNfc3RyaW5nZGVjb2Rlcl90b3N0cmluZyhKU0NvbnRleHQqLCBKU1ZhbHVlIHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZSogYXJndik7CkJPT0wganNfaXNfc3RyaW5nZGVjb2RlcihKU0NvbnRleHQqLCBKU1ZhbHVlIG9iaik7ClN0cmluZ0RlY29kZXIganNfc3RyaW5nZGVjb2Rlcl9mcm9tKEpTQ29udGV4dCosIEpTVmFsdWUgdGhpc192YWwpOwpKU1ZhbHVlIGpzX3N0cmluZ2RlY29kZXJfdG9wcmltaXRpdmUoSlNDb250ZXh0KiwgSlNWYWx1ZSB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwpKU1ZhbHVlIGpzX3N0cmluZ2RlY29kZXJfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSogYXJndik7CnZvaWQganNfc3RyaW5nZGVjb2Rlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiwgSlNWYWx1ZSB2YWwpOwppbnQganNfc3RyaW5nZGVjb2Rlcl9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKiBtKTsKSlNNb2R1bGVEZWYqIGpzX2luaXRfbW9kdWxlX3N0cmluZ2RlY29kZXIoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpOwo",
					"AQAAAAAAAAABAAAA+wAAAAAAAAA6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC+AgAAI2lmbmRlZiBRVUlDS0pTX1NUUklOR19ERUNPREVSX0gKI2RlZmluZSBRVUlDS0pTX1NUUklOR19ERUNPREVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgInV0aWxzLmgiCgp0eXBlZGVmIHN0cnVjdCBzdHJpbmdfZGVjb2RlciB7CglEeW5CdWYgaW5wdXQ7Cn0gU3RyaW5nRGVjb2RlcjsKCmV4dGVybiB0aHJlYWRfbG9jYWwgSlNDbGFzc0lEIGpzX3N0cmluZ2RlY29kZXJfY2xhc3NfaWQ7CgpTdHJpbmdEZWNvZGVyKiBqc19zdHJpbmdkZWNvZGVyX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgdmFsdWUpOwpKU1ZhbHVlICAgICAgICBqc19zdHJpbmdkZWNvZGVyX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CnZvaWQgICAgICAgICAgIGpzX3N0cmluZ2RlY29kZXJfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKTsKaW50ICAgICAgICAgICAganNfc3RyaW5nZGVjb2Rlcl9pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSk7CkpTTW9kdWxlRGVmKiAgIGpzX2luaXRfbW9kdWxlX3N0cmluZ2RlY29kZXIoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKTsKCiNlbmRpZiAvKiBkZWZpbmVkKFFVSUNLSlNfU1RSSU5HX0RFQ09ERVJfSCkgKi8KAAAAAAAAAAChAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgIAAAAAAACOAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-archive.c",
			"settings":
			{
				"buffer_size": 38590,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-libc.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/stack.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/pigpio/pigpiod_if2.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/pigpio/pigpio.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/test-gpio.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/Findpigpio.cmake",
		"/home/roman/Sources/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/test-archive.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-archive.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.c",
		"/usr/include/archive_entry.h",
		"/usr/include/archive.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry.h",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_acl.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_copy_bhfi.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_copy_stat.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_link_resolver.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_linkify.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_locale.h",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_misc.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_paths.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_perms.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_private.h",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_sparse.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_stat.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_stat.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_strmode.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_time.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_xattr.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-deep.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/pointer.c",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Django (Smoothy).tmTheme",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Stark Contrast (rainglow).tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.h",
		"/home/raven/Sources/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/lib/stack.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/cmake/FindQuickJS.cmake",
		"/home/raven/Sources/plot-cv/quickjs/modules/quickjs-xml.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/utils.h",
		"/home/raven/Sources/plot-cv/quickjs/modules/utils.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/build/x86_64-linux-gnu/modules/repl.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_predicate.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_misc.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/test-minnet.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/lib/core-net/pollfd.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/include/libwebsockets/lws-callbacks.h"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"once",
			"memoize",
			"once",
			" fs\\.",
			"fs\\.",
			"fs =",
			"waitRead",
			"fs",
			"location",
			"loc",
			"stringdecoder_write",
			"misc",
			"location_SOU",
			"location",
			"misc",
			"js_stringdecoder_setter",
			"js_stringdecoder_getter",
			"location",
			"js_std_error_props",
			"\"Error\"",
			"InputBuffer",
			"extendArray",
			"extendArra",
			"'<'",
			"flushSync",
			"openSync",
			"fopen",
			"readF",
			"\\.so",
			"str_end",
			"debug_mod",
			"flushSync",
			"flush",
			"CONFIG_PREFIX",
			"^(\\s*)fprintf",
			"QUICKJS_PREFIX",
			"struct GPIO",
			"GPIO",
			"GPIO\\*",
			"entry",
			"JS_GetRuntime\\(ctx\\)",
			"JS_GetRuntime",
			"js_class_id",
			"^js_cstring_free",
			"cstring_free",
			"js_propertydescriptor_free",
			"js_get_propertydescriptor",
			"atom_to",
			"js_is_typedarray",
			"js_get_classid",
			"js_is_typedarray",
			"js_is_array",
			"js_get_classid",
			"js_is_typedarray",
			"is_array",
			"is_arraybuffer",
			"js_inspect_init",
			"vector_free",
			"^dbuf_put",
			"put_escaped",
			"^dbuf_put_escaped\\(",
			"dbuf_put_escaped",
			"escape_char_pred",
			"js_object_tostring",
			"js_inspect_arraybuffer",
			"js_value_tostring",
			"value_tostr",
			"_header",
			"header",
			"archive_next",
			"JS_NewString",
			"_close",
			"ARCHIVE_PROP_FILTERS",
			"JS_ThrowTypeError",
			"seek",
			"_seek\\(",
			"_seek",
			"SEEK_SET",
			"js_misc_resizearraybuffer",
			"js_misc_tostring",
			"arraybuffer",
			"archive_read_data",
			"ARCHIVE_PROP",
			"ARCHIVE_PROP_FILTERS",
			"archive_filter",
			"compression",
			"js_generator_next",
			"JS_ITERATOR_NEXT",
			"^-",
			"archiveentry_free",
			"_free",
			"dev_",
			"_link",
			"_utf8",
			"archive_entry_link",
			"js_archiveentry_init",
			"fflags",
			"archive_entry_fflags",
			"filetype",
			"__LA_MODE_T",
			"dev_is_set",
			"dev_is",
			"set_dev",
			"archive_entry_set_pathname_utf8",
			"pathname_utf8",
			"archive_read_next_header",
			"_LA_DECL struct",
			"_entry",
			"block size",
			"utf8",
			"_disk",
			"_all",
			"deep_LIB",
			"deep_LIB ",
			"_SOURCES",
			"}_SOURCES",
			"_filename",
			"_file",
			"js_is_archive",
			"_new",
			"js_lexer_next",
			"js_global_get",
			"js_global_gewt",
			"js_symbol_static_atom",
			"is_iterator",
			"iterator",
			"generator",
			"cstring_value"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			" this.fs.",
			"stringdecoder",
			"js_stringdecoder_set",
			"js_stringdecoder_get",
			"stringdecoder",
			"\\1if(gpio->debug) fprintf",
			"struct gpio",
			"struct GPIO",
			"struct GPIO*",
			"ctx->rt",
			"",
			": ",
			"\"",
			"ret = \\1;",
			"->errnum",
			"(",
			"error",
			"JS_NewInt32",
			"",
			",",
			"left, right",
			"predicate_nextarg(ctx, &args)",
			"predicate_nextarg(ctx, &args),predicate_nextarg(ctx, &args))",
			"predicate_argument_shift(ctx, &args)",
			"js_arguments_shift(&args)",
			"",
			"ret = PRECEDENCE_",
			"args",
			"",
			"dbuf",
			": left",
			"pred",
			"args->",
			"r",
			"predicate_value",
			"",
			"'x'",
			"0",
			"\\1this.last_cmd",
			"\\1this.cmd",
			"level",
			"cmd",
			"  ",
			"",
			"\\1this.prompt",
			"",
			" globalThis.",
			"evalAnd",
			"commands",
			"",
			"handlers",
			"events",
			"this.",
			"\\1",
			"listeners",
			"events",
			"\\1",
			"jsm_pending_signals",
			"jsm_module_native",
			"js_pointer_data(ctx, obj)",
			"ShiftPredicate",
			".buf",
			"\\1",
			"file.close",
			"std.open",
			"js_misc_free_arraybuffer",
			"JS_SetPropertyStr",
			"jsm_load_module",
			"",
			"_?",
			"sockets",
			"qjsc_perf_hooks",
			"output->",
			"output",
			"\\1//printf",
			"",
			"sizeSync",
			"CreateOperatorSet",
			"",
			"loc",
			"location",
			"loc->",
			"jsm_load_package_json",
			"tmp",
			"    ",
			"  ",
			"BOOL\\njs_is_",
			"GeneratorPrototype",
			"SetIteratorPrototype",
			"MapIteratorPrototype",
			"hasBuiltIn",
			"hbiTs",
			"sSl",
			"ccAt",
			"formatNumber(",
			"isObject(value) && ",
			"pointer_toarray( ptr, ctx)",
			"moduleStack.size",
			"require('${m}')",
			"globalThis.code ?? 'C'",
			"code",
			"fs.",
			"jsm_load_script",
			"jsm_load_file",
			"require.",
			"dirname",
			"dir",
			"script",
			"this.id",
			"jsm_std_dump_error",
			"if(",
			"",
			")",
			"",
			"break;\n    }\n    \n    case",
			"lexer_continue",
			" property-enumeration.c property-enumeration.h",
			" ",
			"*",
			"jslex",
			"this."
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": null,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1629343146.04,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/console.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3440,
						"regions":
						{
						},
						"selection":
						[
							[
								3388,
								3398
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629389583.5,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 450.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20323,
						"regions":
						{
						},
						"selection":
						[
							[
								11788,
								11788
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629343777.18,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8636.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/extendArray.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2787,
						"regions":
						{
						},
						"selection":
						[
							[
								2689,
								2689
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629332882.17,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1203.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/extendGenerator.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 611,
						"regions":
						{
						},
						"selection":
						[
							[
								123,
								123
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629333022.58,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9291,
						"regions":
						{
						},
						"selection":
						[
							[
								617,
								617
							]
						],
						"settings":
						{
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629342983.09,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 51.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2846,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										368,
										379
									],
									[
										524,
										535
									],
									[
										784,
										795
									],
									[
										878,
										889
									],
									[
										1045,
										1056
									],
									[
										1318,
										1329
									],
									[
										1343,
										1354
									],
									[
										1451,
										1462
									],
									[
										1695,
										1706
									],
									[
										1834,
										1845
									],
									[
										2019,
										2030
									],
									[
										2058,
										2069
									],
									[
										2218,
										2229
									],
									[
										2430,
										2441
									],
									[
										2469,
										2480
									],
									[
										2635,
										2646
									],
									[
										2798,
										2809
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								2057,
								2057
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1629333065.93,
							"tabs_extra_last_activated_sheet_index": 5
						},
						"translation.x": 0.0,
						"translation.y": 969.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20323,
						"regions":
						{
						},
						"selection":
						[
							[
								801,
								803
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629342145.96,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 408.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/home/roman/Sources/plot-cv/quickjs/quickjs-libc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 112711,
						"regions":
						{
						},
						"selection":
						[
							[
								42671,
								43692
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"tabs_extra_last_activated": 1629342198.34,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 25704.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/roman/Sources/plot-cv/quickjs/quickjs-libc.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2618,
						"regions":
						{
						},
						"selection":
						[
							[
								214,
								215
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629342201.34,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "qjsm.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40171,
						"regions":
						{
						},
						"selection":
						[
							[
								26747,
								26761
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629336450.4,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16354.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42478,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"tabs_extra_last_activated": 1629336455.2,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1773395,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"tabs_extra_last_activated": 1629341999.43,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38612,
						"regions":
						{
						},
						"selection":
						[
							[
								21710,
								21727
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629342599.37,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12563.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/home/roman/Projects/plot-cv/quickjs/cutils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7403,
						"regions":
						{
						},
						"selection":
						[
							[
								5793,
								5799
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"tabs_extra_last_activated": 1629342623.77,
							"tabs_extra_last_activated_sheet_index": 13,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3366.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "quickjs-misc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38947,
						"regions":
						{
						},
						"selection":
						[
							[
								37340,
								37340
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629343592.07,
							"tabs_extra_last_activated_sheet_index": 14,
							"tabs_extra_moving":
							[
								7,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 22661.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "quickjs-lexer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43587,
						"regions":
						{
						},
						"selection":
						[
							[
								8819,
								7866
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629342369.19,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5049.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "quickjs-location.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11261,
						"regions":
						{
						},
						"selection":
						[
							[
								10908,
								10908
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629343189.95,
							"tabs_extra_last_activated_sheet_index": 16,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5846.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "lib/repl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49516,
						"regions":
						{
							"col_000080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2336,
										2344
									]
								],
								"scope": "col_000080FF"
							},
							"col_000080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_000080FF_circle.png",
								"regions":
								[
									[
										2327,
										2327
									]
								],
								"scope": "col_gutter"
							},
							"col_0000DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2560,
										2570
									]
								],
								"scope": "col_0000DDFF"
							},
							"col_0000DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000DDFF_circle.png",
								"regions":
								[
									[
										2544,
										2544
									]
								],
								"scope": "col_gutter"
							},
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2329,
										2333
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										2327,
										2327
									]
								],
								"scope": "col_gutter"
							},
							"col_008000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2286,
										2291
									],
									[
										2294,
										2302
									],
									[
										2923,
										2928
									]
								],
								"scope": "col_008000FF"
							},
							"col_008000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_008000FF_circle.png",
								"regions":
								[
									[
										2284,
										2284
									],
									[
										2912,
										2912
									]
								],
								"scope": "col_gutter"
							},
							"col_008080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2379,
										2387
									]
								],
								"scope": "col_008080FF"
							},
							"col_008080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_008080FF_circle.png",
								"regions":
								[
									[
										2370,
										2370
									]
								],
								"scope": "col_gutter"
							},
							"col_00DD00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2500,
										2510
									]
								],
								"scope": "col_00DD00FF"
							},
							"col_00DD00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DD00FF_circle.png",
								"regions":
								[
									[
										2483,
										2483
									]
								],
								"scope": "col_gutter"
							},
							"col_00DDDDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2621,
										2631
									]
								],
								"scope": "col_00DDDDFF"
							},
							"col_00DDDDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DDDDFF_circle.png",
								"regions":
								[
									[
										2605,
										2605
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2372,
										2376
									]
								],
								"scope": "col_00FFFFFF"
							},
							"col_00FFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFFF_circle.png",
								"regions":
								[
									[
										2370,
										2370
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2246,
										2251
									],
									[
										2254,
										2262
									],
									[
										2420,
										2430
									],
									[
										2442,
										2452
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										2244,
										2244
									],
									[
										2411,
										2411
									],
									[
										2433,
										2433
									]
								],
								"scope": "col_gutter"
							},
							"col_800000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2273,
										2281
									]
								],
								"scope": "col_800000FF"
							},
							"col_800000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_800000FF_circle.png",
								"regions":
								[
									[
										2265,
										2265
									]
								],
								"scope": "col_gutter"
							},
							"col_800080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2359,
										2367
									]
								],
								"scope": "col_800080FF"
							},
							"col_800080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_800080FF_circle.png",
								"regions":
								[
									[
										2347,
										2347
									]
								],
								"scope": "col_gutter"
							},
							"col_808000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2316,
										2324
									]
								],
								"scope": "col_808000FF"
							},
							"col_808000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808000FF_circle.png",
								"regions":
								[
									[
										2305,
										2305
									]
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2413,
										2417
									],
									[
										2435,
										2439
									]
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
									[
										2411,
										2411
									],
									[
										2433,
										2433
									]
								],
								"scope": "col_gutter"
							},
							"col_C0C0C0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2400,
										2408
									]
								],
								"scope": "col_C0C0C0FF"
							},
							"col_C0C0C0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_C0C0C0FF_circle.png",
								"regions":
								[
									[
										2390,
										2390
									]
								],
								"scope": "col_gutter"
							},
							"col_DD0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2470,
										2480
									]
								],
								"scope": "col_DD0000FF"
							},
							"col_DD0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD0000FF_circle.png",
								"regions":
								[
									[
										2455,
										2455
									]
								],
								"scope": "col_gutter"
							},
							"col_DD00DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2592,
										2602
									]
								],
								"scope": "col_DD00DDFF"
							},
							"col_DD00DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD00DDFF_circle.png",
								"regions":
								[
									[
										2573,
										2573
									]
								],
								"scope": "col_gutter"
							},
							"col_DD8800FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2531,
										2541
									]
								],
								"scope": "col_DD8800FF"
							},
							"col_DD8800FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD8800FF_circle.png",
								"regions":
								[
									[
										2513,
										2513
									]
								],
								"scope": "col_gutter"
							},
							"col_DDDDDDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2651,
										2661
									]
								],
								"scope": "col_DDDDDDFF"
							},
							"col_DDDDDDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DDDDDDFF_circle.png",
								"regions":
								[
									[
										2634,
										2634
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2267,
										2270
									],
									[
										3048,
										3051
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										2265,
										2265
									],
									[
										3038,
										3038
									]
								],
								"scope": "col_gutter"
							},
							"col_FF00FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2349,
										2356
									]
								],
								"scope": "col_FF00FFFF"
							},
							"col_FF00FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF00FFFF_circle.png",
								"regions":
								[
									[
										2347,
										2347
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2307,
										2313
									]
								],
								"scope": "col_FFFF00FF"
							},
							"col_FFFF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFF00FF_circle.png",
								"regions":
								[
									[
										2305,
										2305
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2392,
										2397
									],
									[
										3065,
										3070
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										2390,
										2390
									],
									[
										3054,
										3054
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								38539,
								38539
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629389595.05,
							"tabs_extra_last_activated_sheet_index": 17,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 23907.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "quickjs-stringdecoder.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3937,
						"regions":
						{
						},
						"selection":
						[
							[
								2774,
								2795
							]
						],
						"settings":
						{
							"auto_name": "#ifndef _GNU_SOURCE",
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629343393.77,
							"tabs_extra_last_activated_sheet_index": 18,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1579.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "quickjs-pointer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15537,
						"regions":
						{
						},
						"selection":
						[
							[
								4214,
								4231
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629342800.73,
							"tabs_extra_last_activated_sheet_index": 18,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2361.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "quickjs-stringdecoder.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 673,
						"regions":
						{
						},
						"selection":
						[
							[
								654,
								654
							]
						],
						"settings":
						{
							"auto_name": "#ifndef QUICKJS_STRING_DECODER_H",
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629342921.75,
							"tabs_extra_last_activated_sheet_index": 19,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "quickjs-archive.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38590,
						"regions":
						{
						},
						"selection":
						[
							[
								5569,
								6030
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629342298.09,
							"tabs_extra_last_activated_sheet_index": 16,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3315.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"util.js",
				"lib/util.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"",
				"tests/test_qjsm.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"str.h",
				"lib/str.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			],
			[
				"source.h",
				"src/source.h"
			],
			[
				"fdtable",
				"src/fdtable.h"
			],
			[
				"fd.h",
				"src/fd.h"
			],
			[
				"eval",
				"src/eval.h"
			],
			[
				"ieee",
				"doc/posix/ieee-p1003.2-d11.2-s3.txt"
			],
			[
				"expand.h",
				"src/expand.h"
			],
			[
				"builtin_dum",
				"src/builtin/builtin_dump.c"
			],
			[
				"h_main",
				"src/sh/sh_main.c"
			],
			[
				"parse_cha",
				"src/parse/parse_chartable.c"
			],
			[
				"debug.h",
				"src/debug.h"
			],
			[
				"exec_c",
				"src/exec/exec_command.c"
			],
			[
				"eval.h",
				"src/eval.h"
			],
			[
				"test-op",
				"test-operators.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 251.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
