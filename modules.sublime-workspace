{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_Set",
				"JS_SetProperty"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "NonWS = t =>\nWS = t =>\n  parse(lexer, fn = (tok, arr) => {}, ...args)\n  main(...args)\n  file =>\n  () =>\n  (tok, arr) =>\n  (tok, arr) =>\n  (tok, arr) =>\n(s, t) =>",
			"settings":
			{
				"buffer_size": 161,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					84,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								787,
								813
							],
							[
								872,
								892
							],
							[
								963,
								981
							],
							[
								1509,
								1534
							],
							[
								2079,
								2107
							],
							[
								2137,
								2141
							],
							[
								2160,
								2188
							],
							[
								2221,
								2240
							],
							[
								2299,
								2326
							],
							[
								2359,
								2378
							],
							[
								2453,
								2482
							],
							[
								2600,
								2623
							],
							[
								2763,
								2786
							],
							[
								3061,
								3083
							],
							[
								3624,
								3648
							],
							[
								3953,
								3977
							],
							[
								4006,
								4012
							],
							[
								4163,
								4187
							],
							[
								4216,
								4222
							],
							[
								4313,
								4339
							],
							[
								4366,
								4372
							],
							[
								4420,
								4426
							],
							[
								4483,
								4489
							],
							[
								4807,
								4833
							],
							[
								4946,
								4952
							],
							[
								5000,
								5006
							],
							[
								5256,
								5262
							],
							[
								5298,
								5304
							],
							[
								5405,
								5411
							],
							[
								5447,
								5453
							],
							[
								5550,
								5556
							],
							[
								6063,
								6091
							],
							[
								6140,
								6161
							],
							[
								6235,
								6256
							],
							[
								6317,
								6338
							],
							[
								6411,
								6457
							],
							[
								6506,
								6512
							],
							[
								6586,
								6592
							],
							[
								6658,
								6664
							],
							[
								6735,
								6757
							],
							[
								7251,
								7257
							],
							[
								7594,
								7616
							],
							[
								7779,
								7807
							],
							[
								7861,
								7879
							],
							[
								8673,
								8691
							],
							[
								8889,
								8906
							],
							[
								9335,
								9352
							],
							[
								9860,
								9876
							],
							[
								9980,
								9986
							],
							[
								10479,
								10497
							],
							[
								10591,
								10607
							],
							[
								10708,
								10747
							],
							[
								11104,
								11108
							],
							[
								11263,
								11270
							],
							[
								11339,
								11350
							],
							[
								11793,
								11811
							],
							[
								13507,
								13511
							],
							[
								13847,
								13863
							],
							[
								14001,
								14009
							],
							[
								14375,
								14381
							],
							[
								14456,
								14469
							],
							[
								14569,
								14573
							],
							[
								14906,
								14912
							],
							[
								14990,
								14996
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							" () =>",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(acc, col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"i =>",
							"(acc, tok, i) =>",
							"index =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAABFgAAUFJPSkVDVF9OQU1FCkNNQUtFX0NfU1RBTkRBUkQKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfRVhFQ1VUQUJMRV9TVUZGSVgKQlVJTERfU0hBUkVEX0xJQlMKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfV0lORE9XU19FWFBPUlRfQUxMX1NZTUJPTFMKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKUwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTQwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfUkVRVUlSRURfUVVJRVQKSEFWRV9QT1NJWF9TUEFXTlAKSEFWRV9TUEFXTgpIQVZFX1NZU0lORk8KSEFWRV9TWVNJTkZPCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUlMKUVVJQ0tKU19MSUJSQVJZX0RJUgpRVUlDS0pTX01PRFVMRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX1NZU1JPT1QKQ01BS0VfVE9PTENIQUlOX0ZJTEUKQ01BS0VfVkVSQk9TRV9NQUtFRklMRQpDTUFLRV9CVUlMRF9UWVBFCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpMSUJfTU9EVUxFUwpRVUlDS0pTX0gKQ09NTU9OX0hFQURFUlMKQ1VUSUxTX0gKUVVJQ0tKU19ICiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKQ09NTU9OX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgbGlidXRmX1NPVVJDRVMKICBjaGFyX3V0aWxzX1NPVVJDRVMKICBsaWJ1dGZfU09VUkNFUwogIHF1ZXVlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgY2hhcl91dGlsc19TT1VSQ0VTCiAganNfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgc3RyZWFtX1NPVVJDRVMKICBxdWV1ZV9TT1VSQ0VTCiAganNfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHByZWRpY2F0ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB0b2tlbl9TT1VSQ0VTCiAgbG9jYXRpb25fU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgY2hpbGRfcHJvY2Vzc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgZGVlcF9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICBkZWVwX0xJQlJBUklFUwogIGluc3BlY3RfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHRyZWVfd2Fsa2VyX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB4bWxfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICBpbnNwZWN0X1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwcmVkaWNhdGVfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHBvaW50ZXJfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIGxleGVyX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgdG9rZW5fU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGxleGVyX0xJQlJBUklFUwogIG1tYXBfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHJlcGVhdGVyX1NPVVJDRVMKICBxdWV1ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgcXVldWVfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfTElCUkFSSUVTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgYmxvYl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdGV4dGNvZGVfU09VUkNFUwogIGxpYnV0Zl9TT1VSQ0VTCiAgdHV0ZjhlX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIG1pc2NfU09VUkNFUwogIHBhdGhfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGdwaW9fU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCkxpYkFyY2hpdmVfSU5DTFVERV9ESVJTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKICBhcmNoaXZlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBhcmNoaXZlX0xJQlJBUklFUwpMaWJBcmNoaXZlX0xJQlJBUklFUwpRSlNNX0VYVFJBX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwogIG1tYXBfU09VUkNFUwogIG1tYXBfU09VUkNFUwpDTUFLRV9SRVFVSVJFRF9RVUlFVApDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVFMKVEVTVFMKVEVTVApCQVNFCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTTQpURVNUClRFU1RTClFVSUNLSlNfTU9EVUxFUwpTSEFSRURfVEFSR0VUUwpRSlNNX0xJQkRJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfSU1QT1JUX0xJQlJBUllfUFJFRklYCkNNQUtFX0lNUE9SVF9MSUJSQVJZX1NVRkZJWApDTUFLRV9TWVNURU1fTkFNRQpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRSlNNX0xJQkRJUgpRSlNNX01PRFVMRQpMSUJSQVJZX1NVRkZJWApRVUlDS0pTX01PRFVMRVMKUUpTTV9MSUJESVIKICBwcmVkaWNhdGVfTElCUkFSSUVTCkxJQk0KICBzb2NrZXRzX0xJQlJBUklFUwogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9MSUJSQVJJRVMKICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNClRFU1RfU09VUkNFClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpMSUJKUwpRVUlDS0pTX0pTX01PRFVMRV9ESVIKTElCTEVYRVIKUVVJQ0tKU19KU19NT0RVTEVfRElSCkxJQl9NT0RVTEVTCkxJQl9NT0RVTEVTCkxJQl9NT0RVTEUKTElCX01PRFVMRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfU09VUkNFU19ST09UCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSClFVSUNLSlNfU09VUkNFU19ST09UClFVSUNLSlNfSU5DTFVERV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRVNfRElSClFKU0MKTU9EVUxFU19ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU0NfREVQUwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpRSlNNX0VYVFJBX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpRSlNNX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpUUkFOU1BPUlRfUExBVEZPUk0KQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpRSlNNX1NPVVJDRVMKICBhcmNoaXZlX1NPVVJDRVMKICBibG9iX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIGNoYXJfdXRpbHNfU09VUkNFUwogIGNoaWxkX3Byb2Nlc3NfU09VUkNFUwogIGRlZXBfU09VUkNFUwogIGdwaW9fU09VUkNFUwogIGluc3BlY3RfU09VUkNFUwogIGpzX3V0aWxzX1NPVVJDRVMKICBsZXhlcl9TT1VSQ0VTCiAgbGlidXRmX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgbWlzY19TT1VSQ0VTCiAgbW1hcF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcG9pbnRlcl9TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICBxdWV1ZV9TT1VSQ0VTCiAgcmVwZWF0ZXJfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHN0cmVhbV9TT1VSQ0VTCiAgc3lzY2FsbGVycm9yX1NPVVJDRVMKICB0ZXh0Y29kZV9TT1VSQ0VTCiAgdG9rZW5fU09VUkNFUwogIHRyZWVfd2Fsa2VyX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB4bWxfU09VUkNFUwpRSlNNX1NPVVJDRVMKUUpTX01PRFVMRVNfU1RBVElDCkNPTVBJTEVEX01PRFVMRVMKUUpTTV9MSUJESVIKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTClFKU01fTElCRElSCkxJTktfRVhQT1JUClFKU01fTElCRElSClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKUVVJQ0tKU19MSUJSQVJZX0RJUgpRSlNNX0xEQUREClFVSUNLSlNfTElCUkFSWQpMSUJQVEhSRUFECkxJQk0KTElCREwKTElCV1MyXzMyClFVSUNLSlNfVkVSU0lPTgpRVUlDS0pTX0lOU1RBTExfUFJFRklYCklOU1RBTExfU0NSSVBUUwpDTUFLRV9DT01NQU5ECkNNQUtFX0lOU1RBTExfUFJFRklYCkNNQUtFX0NPTU1BTkQKQ01BS0VfSU5TVEFMTF9QUkVGSVgAAAAAAAAAAN0DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					85,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdAwAAQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CkJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCih0eXBlLCBsZXhlbWUsIHRvaykgPT4KSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQogIHRvayA9PgpFeHBvcnROYW1lKHNlcSkKICB0b2sgPT4KQWRkRXhwb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4KQWRkSW1wb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICAoKSA9PgogIHRvayA9PgogICgpID0+CiAgdG9rID0+CiAgKCkgPT4KUHJpbnRFUzZJbXBvcnQoaW1wKQogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KICAoeyBsb2NhbCwgZmlsZSB9KSA9PgpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgbWFpbiguLi5hcmdzKQogICgpID0+ClJlbGF0aXZlUGF0aCA9IGZpbGUgPT4KUHJvY2Vzc0ZpbGUoZmlsZSkKICBsb2cgPSAoLi4uYXJncykgPT4KKGFjYywgbmFtZSwgaWQpID0+CiAgLmhhbmRsZXIgPSBsZXggPT4KICAodG9rLCBwcmVmaXgpID0+CihhY2MsIGNvbCwgaSkgPT4KICAoKSA9PgogIC5iZWdpbkNvZGUgPSAoKSA9PgogIGJhbGFuY2VyID0gKCkgPT4KICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICBzID0+CiAgcmVzZXQoKQogIGdldCBkZXB0aCgpCiAgc2hvd1Rva2VuID0gdG9rID0+CiAgaSA9PgooYWNjLCB0b2ssIGkpID0+CiAgaW5kZXggPT4KICBpbXAgPT4KKGFjYywgaW1wKSA9PgogIGIgPT4KICBpbXAgPT4KICBpbXAgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					86,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								787,
								813
							],
							[
								872,
								892
							],
							[
								963,
								981
							],
							[
								1509,
								1534
							],
							[
								2079,
								2107
							],
							[
								2137,
								2141
							],
							[
								2160,
								2188
							],
							[
								2221,
								2240
							],
							[
								2299,
								2326
							],
							[
								2359,
								2378
							],
							[
								2453,
								2482
							],
							[
								2600,
								2623
							],
							[
								2763,
								2786
							],
							[
								3061,
								3083
							],
							[
								3624,
								3648
							],
							[
								3953,
								3977
							],
							[
								4006,
								4012
							],
							[
								4163,
								4187
							],
							[
								4216,
								4222
							],
							[
								4313,
								4339
							],
							[
								4366,
								4372
							],
							[
								4420,
								4426
							],
							[
								4483,
								4489
							],
							[
								4807,
								4833
							],
							[
								4946,
								4952
							],
							[
								5000,
								5006
							],
							[
								5256,
								5262
							],
							[
								5298,
								5304
							],
							[
								5405,
								5411
							],
							[
								5447,
								5453
							],
							[
								5550,
								5556
							],
							[
								6063,
								6091
							],
							[
								6140,
								6161
							],
							[
								6235,
								6256
							],
							[
								6317,
								6338
							],
							[
								6411,
								6457
							],
							[
								6506,
								6512
							],
							[
								6586,
								6592
							],
							[
								6658,
								6664
							],
							[
								6735,
								6757
							],
							[
								7251,
								7257
							],
							[
								7594,
								7616
							],
							[
								7779,
								7807
							],
							[
								7861,
								7879
							],
							[
								8673,
								8691
							],
							[
								8889,
								8906
							],
							[
								9336,
								9353
							],
							[
								9861,
								9877
							],
							[
								9981,
								9987
							],
							[
								10480,
								10498
							],
							[
								10592,
								10608
							],
							[
								10709,
								10748
							],
							[
								11105,
								11109
							],
							[
								11264,
								11271
							],
							[
								11340,
								11351
							],
							[
								11794,
								11812
							],
							[
								13508,
								13512
							],
							[
								13848,
								13864
							],
							[
								14002,
								14010
							],
							[
								14376,
								14382
							],
							[
								14457,
								14470
							],
							[
								14570,
								14574
							],
							[
								14907,
								14913
							],
							[
								14991,
								14997
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							" () =>",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(acc, col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"i =>",
							"(acc, tok, i) =>",
							"index =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AQAAAAAAAAAAAAAA3QMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					87,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdAwAAQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CkJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCih0eXBlLCBsZXhlbWUsIHRvaykgPT4KSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQogIHRvayA9PgpFeHBvcnROYW1lKHNlcSkKICB0b2sgPT4KQWRkRXhwb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4KQWRkSW1wb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICAoKSA9PgogIHRvayA9PgogICgpID0+CiAgdG9rID0+CiAgKCkgPT4KUHJpbnRFUzZJbXBvcnQoaW1wKQogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KICAoeyBsb2NhbCwgZmlsZSB9KSA9PgpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgbWFpbiguLi5hcmdzKQogICgpID0+ClJlbGF0aXZlUGF0aCA9IGZpbGUgPT4KUHJvY2Vzc0ZpbGUoZmlsZSkKICBsb2cgPSAoLi4uYXJncykgPT4KKGFjYywgbmFtZSwgaWQpID0+CiAgLmhhbmRsZXIgPSBsZXggPT4KICAodG9rLCBwcmVmaXgpID0+CihhY2MsIGNvbCwgaSkgPT4KICAoKSA9PgogIC5iZWdpbkNvZGUgPSAoKSA9PgogIGJhbGFuY2VyID0gKCkgPT4KICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICBzID0+CiAgcmVzZXQoKQogIGdldCBkZXB0aCgpCiAgc2hvd1Rva2VuID0gdG9rID0+CiAgaSA9PgooYWNjLCB0b2ssIGkpID0+CiAgaW5kZXggPT4KICBpbXAgPT4KKGFjYywgaW1wKSA9PgogIGIgPT4KICBpbXAgPT4KICBpbXAgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					88,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								787,
								813
							],
							[
								872,
								892
							],
							[
								963,
								981
							],
							[
								1509,
								1534
							],
							[
								2079,
								2107
							],
							[
								2137,
								2141
							],
							[
								2160,
								2188
							],
							[
								2221,
								2240
							],
							[
								2299,
								2326
							],
							[
								2359,
								2378
							],
							[
								2453,
								2482
							],
							[
								2600,
								2623
							],
							[
								2763,
								2786
							],
							[
								3061,
								3083
							],
							[
								3624,
								3648
							],
							[
								3953,
								3977
							],
							[
								4006,
								4012
							],
							[
								4163,
								4187
							],
							[
								4216,
								4222
							],
							[
								4313,
								4339
							],
							[
								4366,
								4372
							],
							[
								4420,
								4426
							],
							[
								4483,
								4489
							],
							[
								4807,
								4833
							],
							[
								4946,
								4952
							],
							[
								5000,
								5006
							],
							[
								5256,
								5262
							],
							[
								5298,
								5304
							],
							[
								5405,
								5411
							],
							[
								5447,
								5453
							],
							[
								5550,
								5556
							],
							[
								6063,
								6091
							],
							[
								6140,
								6161
							],
							[
								6235,
								6256
							],
							[
								6317,
								6338
							],
							[
								6411,
								6457
							],
							[
								6506,
								6512
							],
							[
								6586,
								6592
							],
							[
								6658,
								6664
							],
							[
								6735,
								6757
							],
							[
								7251,
								7257
							],
							[
								7594,
								7616
							],
							[
								7779,
								7807
							],
							[
								7861,
								7879
							],
							[
								8673,
								8691
							],
							[
								8889,
								8906
							],
							[
								9335,
								9352
							],
							[
								9860,
								9876
							],
							[
								9980,
								9986
							],
							[
								10479,
								10497
							],
							[
								10591,
								10607
							],
							[
								10708,
								10747
							],
							[
								11104,
								11108
							],
							[
								11263,
								11270
							],
							[
								11339,
								11350
							],
							[
								11793,
								11811
							],
							[
								13507,
								13511
							],
							[
								13847,
								13863
							],
							[
								14001,
								14009
							],
							[
								14375,
								14381
							],
							[
								14456,
								14469
							],
							[
								14569,
								14573
							],
							[
								14906,
								14912
							],
							[
								14990,
								14996
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							" () =>",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(acc, col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"i =>",
							"(acc, tok, i) =>",
							"index =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AQAAAAAAAAAAAAAA3QMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					89,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								787,
								813
							],
							[
								872,
								892
							],
							[
								963,
								981
							],
							[
								1509,
								1534
							],
							[
								2079,
								2107
							],
							[
								2137,
								2141
							],
							[
								2160,
								2188
							],
							[
								2221,
								2240
							],
							[
								2299,
								2326
							],
							[
								2359,
								2378
							],
							[
								2453,
								2482
							],
							[
								2600,
								2623
							],
							[
								2763,
								2786
							],
							[
								3061,
								3083
							],
							[
								3624,
								3648
							],
							[
								3953,
								3977
							],
							[
								4006,
								4012
							],
							[
								4163,
								4187
							],
							[
								4216,
								4222
							],
							[
								4313,
								4339
							],
							[
								4366,
								4372
							],
							[
								4420,
								4426
							],
							[
								4483,
								4489
							],
							[
								4807,
								4833
							],
							[
								4946,
								4952
							],
							[
								5000,
								5006
							],
							[
								5256,
								5262
							],
							[
								5298,
								5304
							],
							[
								5405,
								5411
							],
							[
								5447,
								5453
							],
							[
								5550,
								5556
							],
							[
								6063,
								6091
							],
							[
								6140,
								6161
							],
							[
								6235,
								6256
							],
							[
								6317,
								6338
							],
							[
								6411,
								6457
							],
							[
								6506,
								6512
							],
							[
								6586,
								6592
							],
							[
								6658,
								6664
							],
							[
								6735,
								6757
							],
							[
								7251,
								7257
							],
							[
								7594,
								7616
							],
							[
								7779,
								7807
							],
							[
								7861,
								7879
							],
							[
								8673,
								8691
							],
							[
								8889,
								8906
							],
							[
								9335,
								9352
							],
							[
								9860,
								9876
							],
							[
								9980,
								9986
							],
							[
								10479,
								10497
							],
							[
								10591,
								10607
							],
							[
								10708,
								10747
							],
							[
								11104,
								11108
							],
							[
								11263,
								11270
							],
							[
								11339,
								11350
							],
							[
								11793,
								11811
							],
							[
								13507,
								13511
							],
							[
								13872,
								13888
							],
							[
								14026,
								14034
							],
							[
								14400,
								14406
							],
							[
								14481,
								14494
							],
							[
								14594,
								14598
							],
							[
								14931,
								14937
							],
							[
								15015,
								15021
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							" () =>",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(acc, col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"i =>",
							"(acc, tok, i) =>",
							"index =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdAwAAQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CkJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCih0eXBlLCBsZXhlbWUsIHRvaykgPT4KSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQogIHRvayA9PgpFeHBvcnROYW1lKHNlcSkKICB0b2sgPT4KQWRkRXhwb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4KQWRkSW1wb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICAoKSA9PgogIHRvayA9PgogICgpID0+CiAgdG9rID0+CiAgKCkgPT4KUHJpbnRFUzZJbXBvcnQoaW1wKQogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KICAoeyBsb2NhbCwgZmlsZSB9KSA9PgpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgbWFpbiguLi5hcmdzKQogICgpID0+ClJlbGF0aXZlUGF0aCA9IGZpbGUgPT4KUHJvY2Vzc0ZpbGUoZmlsZSkKICBsb2cgPSAoLi4uYXJncykgPT4KKGFjYywgbmFtZSwgaWQpID0+CiAgLmhhbmRsZXIgPSBsZXggPT4KICAodG9rLCBwcmVmaXgpID0+CihhY2MsIGNvbCwgaSkgPT4KICAoKSA9PgogIC5iZWdpbkNvZGUgPSAoKSA9PgogIGJhbGFuY2VyID0gKCkgPT4KICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICBzID0+CiAgcmVzZXQoKQogIGdldCBkZXB0aCgpCiAgc2hvd1Rva2VuID0gdG9rID0+CiAgaSA9PgooYWNjLCB0b2ssIGkpID0+CiAgaW5kZXggPT4KICBpbXAgPT4KKGFjYywgaW1wKSA9PgogIGIgPT4KICBpbXAgPT4KICBpbXAgPT4AAAAAAAAAAN0DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					90,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
						"symkeys":
						[
							[
								35,
								49
							],
							[
								118,
								128
							],
							[
								180,
								189
							],
							[
								283,
								290
							],
							[
								333,
								357
							],
							[
								503,
								522
							],
							[
								626,
								634
							],
							[
								675,
								688
							],
							[
								873,
								889
							],
							[
								1156,
								1177
							],
							[
								1272,
								1296
							],
							[
								1322,
								1336
							],
							[
								1418,
								1439
							],
							[
								1476,
								1490
							],
							[
								1611,
								1627
							],
							[
								1774,
								1789
							],
							[
								1802,
								1821
							],
							[
								1892,
								1911
							],
							[
								2044,
								2063
							],
							[
								2206,
								2220
							],
							[
								2301,
								2314
							],
							[
								2400,
								2411
							],
							[
								2463,
								2473
							],
							[
								2525,
								2535
							],
							[
								2601,
								2611
							],
							[
								2655,
								2681
							],
							[
								2780,
								2800
							],
							[
								2881,
								2927
							]
						],
						"symlist":
						[
							"contains(item)",
							"get last()",
							"at(index)",
							"clear()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"unique()",
							"add(...items)",
							"pred = (a, b) =>",
							"pred = (arr, item) =>",
							"pushUnique(arr, ...args)",
							"(acc, item) =>",
							"pred = (arr, item) =>",
							" (...items) =>",
							"delete(...items)",
							"remove(...args)",
							"predicate = item =>",
							"removeIf(predicate)",
							"predicate = item =>",
							"rotateRight(n)",
							"rotateLeft(n)",
							"get first()",
							"get head()",
							"get tail()",
							"get last()",
							"match(callbackFn, thisArg)",
							"callbackFn = item =>",
							" function extendArray(proto = Array.prototype)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdAwAAQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CkJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCih0eXBlLCBsZXhlbWUsIHRvaykgPT4KSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQogIHRvayA9PgpFeHBvcnROYW1lKHNlcSkKICB0b2sgPT4KQWRkRXhwb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4KQWRkSW1wb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICAoKSA9PgogIHRvayA9PgogICgpID0+CiAgdG9rID0+CiAgKCkgPT4KUHJpbnRFUzZJbXBvcnQoaW1wKQogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KICAoeyBsb2NhbCwgZmlsZSB9KSA9PgpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgbWFpbiguLi5hcmdzKQogICgpID0+ClJlbGF0aXZlUGF0aCA9IGZpbGUgPT4KUHJvY2Vzc0ZpbGUoZmlsZSkKICBsb2cgPSAoLi4uYXJncykgPT4KKGFjYywgbmFtZSwgaWQpID0+CiAgLmhhbmRsZXIgPSBsZXggPT4KICAodG9rLCBwcmVmaXgpID0+CihhY2MsIGNvbCwgaSkgPT4KICAoKSA9PgogIC5iZWdpbkNvZGUgPSAoKSA9PgogIGJhbGFuY2VyID0gKCkgPT4KICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICBzID0+CiAgcmVzZXQoKQogIGdldCBkZXB0aCgpCiAgc2hvd1Rva2VuID0gdG9rID0+CiAgaSA9PgooYWNjLCB0b2ssIGkpID0+CiAgaW5kZXggPT4KICBpbXAgPT4KKGFjYywgaW1wKSA9PgogIGIgPT4KICBpbXAgPT4KICBpbXAgPT4AAAAAAAAAABQCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					91,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAgAAICBjb250YWlucyhpdGVtKQogIGdldCBsYXN0KCkKICBhdChpbmRleCkKICBjbGVhcigpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIHVuaXF1ZSgpCiAgYWRkKC4uLml0ZW1zKQogIHByZWQgPSAoYSwgYikgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICBwdXNoVW5pcXVlKGFyciwgLi4uYXJncykKKGFjYywgaXRlbSkgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICAoLi4uaXRlbXMpID0+CiAgZGVsZXRlKC4uLml0ZW1zKQogIHJlbW92ZSguLi5hcmdzKQogIHByZWRpY2F0ZSA9IGl0ZW0gPT4KICByZW1vdmVJZihwcmVkaWNhdGUpCiAgcHJlZGljYXRlID0gaXRlbSA9PgogIHJvdGF0ZVJpZ2h0KG4pCiAgcm90YXRlTGVmdChuKQogIGdldCBmaXJzdCgpCiAgZ2V0IGhlYWQoKQogIGdldCB0YWlsKCkKICBnZXQgbGFzdCgpCiAgbWF0Y2goY2FsbGJhY2tGbiwgdGhpc0FyZykKICBjYWxsYmFja0ZuID0gaXRlbSA9PgogIGV4dGVuZEFycmF5KHByb3RvID0gQXJyYXkucHJvdG90eXBlKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					92,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
						"symkeys":
						[
							[
								35,
								49
							],
							[
								118,
								128
							],
							[
								180,
								189
							],
							[
								283,
								290
							],
							[
								333,
								357
							],
							[
								503,
								522
							],
							[
								626,
								634
							],
							[
								675,
								688
							],
							[
								873,
								889
							],
							[
								1156,
								1177
							],
							[
								1272,
								1296
							],
							[
								1322,
								1336
							],
							[
								1418,
								1439
							],
							[
								1476,
								1490
							],
							[
								1611,
								1627
							],
							[
								1774,
								1789
							],
							[
								1802,
								1821
							],
							[
								1892,
								1911
							],
							[
								2044,
								2063
							],
							[
								2206,
								2220
							],
							[
								2301,
								2314
							],
							[
								2400,
								2411
							],
							[
								2463,
								2473
							],
							[
								2525,
								2535
							],
							[
								2601,
								2611
							],
							[
								2655,
								2681
							],
							[
								2780,
								2800
							],
							[
								2881,
								2927
							]
						],
						"symlist":
						[
							"contains(item)",
							"get last()",
							"at(index)",
							"clear()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"unique()",
							"add(...items)",
							"pred = (a, b) =>",
							"pred = (arr, item) =>",
							"pushUnique(arr, ...args)",
							"(acc, item) =>",
							"pred = (arr, item) =>",
							" (...items) =>",
							"delete(...items)",
							"remove(...args)",
							"predicate = item =>",
							"removeIf(predicate)",
							"predicate = item =>",
							"rotateRight(n)",
							"rotateLeft(n)",
							"get first()",
							"get head()",
							"get tail()",
							"get last()",
							"match(callbackFn, thisArg)",
							"callbackFn = item =>",
							" function extendArray(proto = Array.prototype)"
						]
					},
					"AQAAAAAAAAAAAAAAFAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					93,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								752,
								766
							],
							[
								846,
								869
							],
							[
								1007,
								1024
							],
							[
								1065,
								1082
							],
							[
								1115,
								1124
							],
							[
								1158,
								1168
							],
							[
								1202,
								1212
							],
							[
								1247,
								1258
							],
							[
								1292,
								1302
							],
							[
								1337,
								1348
							],
							[
								1385,
								1398
							],
							[
								1436,
								1450
							],
							[
								1486,
								1498
							],
							[
								1534,
								1546
							],
							[
								1599,
								1619
							],
							[
								1881,
								1897
							],
							[
								1951,
								1970
							],
							[
								2005,
								2021
							],
							[
								2063,
								2078
							],
							[
								2099,
								2103
							],
							[
								2141,
								2175
							],
							[
								2198,
								2230
							],
							[
								2253,
								2296
							],
							[
								4125,
								4144
							],
							[
								4242,
								4258
							],
							[
								4320,
								4338
							],
							[
								4402,
								4421
							],
							[
								4486,
								4495
							],
							[
								4550,
								4567
							],
							[
								4630,
								4647
							],
							[
								4710,
								4724
							],
							[
								4784,
								4799
							],
							[
								4860,
								4875
							],
							[
								4936,
								4944
							],
							[
								4998,
								5010
							],
							[
								5068,
								5078
							],
							[
								5134,
								5145
							],
							[
								5202,
								5210
							],
							[
								5264,
								5286
							],
							[
								5354,
								5369
							],
							[
								5430,
								5452
							],
							[
								5520,
								5536
							],
							[
								5598,
								5614
							],
							[
								5676,
								5688
							],
							[
								5746,
								5758
							],
							[
								5816,
								5829
							],
							[
								5888,
								5906
							],
							[
								5964,
								5982
							],
							[
								6046,
								6068
							],
							[
								6136,
								6163
							],
							[
								6236,
								6253
							],
							[
								6310,
								6327
							],
							[
								6384,
								6401
							],
							[
								6448,
								6464
							],
							[
								6547,
								6563
							],
							[
								6635,
								6651
							],
							[
								6723,
								6740
							],
							[
								6797,
								6817
							],
							[
								6876,
								6896
							],
							[
								7055,
								7074
							],
							[
								7150,
								7157
							],
							[
								7186,
								7206
							],
							[
								7276,
								7291
							],
							[
								7352,
								7378
							],
							[
								7449,
								7465
							],
							[
								7521,
								7534
							],
							[
								7611,
								7629
							],
							[
								7711,
								7724
							],
							[
								7789,
								7803
							],
							[
								7905,
								7931
							],
							[
								7977,
								8002
							],
							[
								8087,
								8129
							],
							[
								8263,
								8303
							],
							[
								11232,
								11275
							],
							[
								11692,
								11727
							],
							[
								11883,
								11901
							],
							[
								11931,
								11936
							],
							[
								12026,
								12053
							],
							[
								12172,
								12207
							],
							[
								12268,
								12272
							],
							[
								12288,
								12292
							],
							[
								12319,
								12328
							],
							[
								12491,
								12524
							],
							[
								12578,
								12610
							],
							[
								12774,
								12807
							],
							[
								13003,
								13024
							],
							[
								13094,
								13100
							],
							[
								13117,
								13133
							],
							[
								13202,
								13208
							],
							[
								13221,
								13237
							],
							[
								13410,
								13415
							],
							[
								13429,
								13438
							],
							[
								13488,
								13515
							],
							[
								13560,
								13566
							],
							[
								13611,
								13623
							],
							[
								13653,
								13686
							],
							[
								13744,
								13750
							],
							[
								13865,
								13877
							],
							[
								13931,
								13943
							],
							[
								14091,
								14102
							],
							[
								14144,
								14177
							],
							[
								14235,
								14244
							],
							[
								14366,
								14387
							],
							[
								14448,
								14469
							],
							[
								14627,
								14641
							],
							[
								14690,
								14729
							],
							[
								14802,
								14816
							],
							[
								14971,
								14988
							],
							[
								15129,
								15146
							],
							[
								15177,
								15194
							],
							[
								15294,
								15311
							],
							[
								15603,
								15617
							],
							[
								15663,
								15687
							],
							[
								15737,
								15741
							],
							[
								15781,
								15808
							],
							[
								16038,
								16058
							],
							[
								16088,
								16099
							],
							[
								16198,
								16233
							],
							[
								16273,
								16291
							],
							[
								16478,
								16499
							],
							[
								16523,
								16533
							],
							[
								16572,
								16602
							],
							[
								17150,
								17184
							],
							[
								17491,
								17546
							],
							[
								17822,
								17866
							],
							[
								18033,
								18067
							],
							[
								18133,
								18169
							],
							[
								18244,
								18261
							],
							[
								18420,
								18457
							],
							[
								18458,
								18472
							],
							[
								18478,
								18482
							],
							[
								18557,
								18589
							],
							[
								18617,
								18643
							],
							[
								18968,
								18990
							],
							[
								19041,
								19057
							],
							[
								19072,
								19079
							],
							[
								19107,
								19123
							],
							[
								19164,
								19192
							],
							[
								19411,
								19428
							],
							[
								19429,
								19438
							],
							[
								19490,
								19507
							],
							[
								19508,
								19517
							],
							[
								19577,
								19594
							],
							[
								19595,
								19618
							],
							[
								19674,
								19698
							],
							[
								22325,
								22353
							],
							[
								22784,
								22788
							],
							[
								22916,
								22929
							],
							[
								23245,
								23257
							],
							[
								23520,
								23533
							],
							[
								23638,
								23652
							],
							[
								24545,
								24573
							],
							[
								24689,
								24702
							],
							[
								24814,
								24840
							],
							[
								25030,
								25078
							],
							[
								25126,
								25238
							],
							[
								25343,
								25366
							],
							[
								25505,
								25557
							],
							[
								25651,
								25667
							],
							[
								25751,
								25762
							],
							[
								25875,
								25879
							],
							[
								26158,
								26191
							],
							[
								26305,
								26357
							],
							[
								26531,
								26567
							],
							[
								26724,
								26740
							],
							[
								26758,
								26780
							],
							[
								26893,
								26899
							],
							[
								27003,
								27016
							],
							[
								28424,
								28466
							],
							[
								28661,
								28692
							],
							[
								28742,
								28784
							],
							[
								28904,
								28928
							],
							[
								29148,
								29158
							],
							[
								29211,
								29215
							],
							[
								29254,
								29281
							],
							[
								29328,
								29340
							],
							[
								29410,
								29422
							],
							[
								29485,
								29510
							],
							[
								29555,
								29586
							],
							[
								29597,
								29614
							],
							[
								29755,
								29790
							],
							[
								29838,
								29865
							],
							[
								29956,
								29994
							],
							[
								30203,
								30251
							],
							[
								30839,
								30866
							],
							[
								31069,
								31083
							],
							[
								31132,
								31138
							],
							[
								31179,
								31245
							],
							[
								31247,
								31251
							],
							[
								31409,
								31416
							],
							[
								31508,
								31518
							],
							[
								31629,
								31638
							],
							[
								31744,
								31770
							],
							[
								31903,
								31934
							],
							[
								32109,
								32128
							],
							[
								32179,
								32187
							],
							[
								32216,
								32250
							]
						],
						"symlist":
						[
							"sliceFn = x =>",
							"ArrayBuffer(start, end)",
							"SharedArrayBuffer",
							"Uint8ClampedArray",
							"Int8Array",
							"Uint8Array",
							"Int16Array",
							"Uint16Array",
							"Int32Array",
							"Uint32Array",
							"BigInt64Array",
							"BigUint64Array",
							"Float32Array",
							"Float64Array",
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							"function util()",
							"util",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterable(v)",
							"isAsyncIterable(v)",
							"isIterator(v)",
							"isArrayLike(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function memoize(fn, cache = {})",
							" function Memoize(n, ...rest)",
							" function getset(target, ...args)",
							"GetSet = (...args) =>",
							"key =>",
							" (key, value) =>",
							"key =>",
							" (key, value) =>",
							"() =>",
							" value =>",
							" function modifier(...args)",
							" fn =>",
							" newValue =>",
							" function getter(target, ...args)",
							" () =>",
							"ret = key =>",
							"ret = key =>",
							"ret = () =>",
							" function setter(target, ...args)",
							" value =>",
							"ret = (key, value) =>",
							"ret = (key, value) =>",
							"ret = value =>",
							" function gettersetter(target, ...args)",
							" (...args2) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							" (...args2) =>",
							" function hasGetSet(obj)",
							"m =>",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getPrototypeChain(obj, limit = -1, start = 0)",
							" function getConstructorChain(obj, ...range)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							"(acc, arg) =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function shorten(str, max = 40, suffix = '...')",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function arrayFacade(proto, itemFn = (container, i) => container.",
							"(i))",
							"*keys()",
							"*entries()",
							"*values()",
							"forEach(callback, thisArg)",
							"reduce(callback, accu, thisArg)",
							" function mod(a, b)",
							"b : n =>",
							" function pushUnique(arr, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAgAAICBjb250YWlucyhpdGVtKQogIGdldCBsYXN0KCkKICBhdChpbmRleCkKICBjbGVhcigpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIHVuaXF1ZSgpCiAgYWRkKC4uLml0ZW1zKQogIHByZWQgPSAoYSwgYikgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICBwdXNoVW5pcXVlKGFyciwgLi4uYXJncykKKGFjYywgaXRlbSkgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICAoLi4uaXRlbXMpID0+CiAgZGVsZXRlKC4uLml0ZW1zKQogIHJlbW92ZSguLi5hcmdzKQogIHByZWRpY2F0ZSA9IGl0ZW0gPT4KICByZW1vdmVJZihwcmVkaWNhdGUpCiAgcHJlZGljYXRlID0gaXRlbSA9PgogIHJvdGF0ZVJpZ2h0KG4pCiAgcm90YXRlTGVmdChuKQogIGdldCBmaXJzdCgpCiAgZ2V0IGhlYWQoKQogIGdldCB0YWlsKCkKICBnZXQgbGFzdCgpCiAgbWF0Y2goY2FsbGJhY2tGbiwgdGhpc0FyZykKICBjYWxsYmFja0ZuID0gaXRlbSA9PgogIGV4dGVuZEFycmF5KHByb3RvID0gQXJyYXkucHJvdG90eXBlKQAAAAAAAAAAWQ8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					94,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZDwAAICBzbGljZUZuID0geCA9PgpBcnJheUJ1ZmZlcihzdGFydCwgZW5kKQpTaGFyZWRBcnJheUJ1ZmZlcgpVaW50OENsYW1wZWRBcnJheQpJbnQ4QXJyYXkKVWludDhBcnJheQpJbnQxNkFycmF5ClVpbnQxNkFycmF5CkludDMyQXJyYXkKVWludDMyQXJyYXkKQmlnSW50NjRBcnJheQpCaWdVaW50NjRBcnJheQpGbG9hdDMyQXJyYXkKRmxvYXQ2NEFycmF5CiAgc2xpY2UgPSAoeCwgcywgZSkgPT4KICBzdHJpbmdpZnkgPSB2ID0+CiAgZm9ybWF0TnVtYmVyID0gbiA9PgogIGlzTmF0aXZlID0gZm4gPT4KICB1dGlsKCkKICB1dGlsCkFzeW5jRnVuY3Rpb24gPSBmdW5jdGlvbiB4KCkKR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGN0b3IgPT4KICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNDb25zdHJ1Y3Rvcih2KQogIGlzSXRlcmFibGUodikKICBpc0FzeW5jSXRlcmFibGUodikKICBpc0l0ZXJhdG9yKHYpCiAgaXNBcnJheUxpa2UodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKKCkgPT4KICBjbGVhckludGVydmFsKGlkKQogIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3RvcikKICBjdG9yCiAgY3RvcgogIHN1cGVyQ3RvcgogIG1lbW9pemUoZm4sIGNhY2hlID0ge30pCk1lbW9pemUobiwgLi4ucmVzdCkKICBnZXRzZXQodGFyZ2V0LCAuLi5hcmdzKQpHZXRTZXQgPSAoLi4uYXJncykgPT4KICBrZXkgPT4KICAoa2V5LCB2YWx1ZSkgPT4KICBrZXkgPT4KICAoa2V5LCB2YWx1ZSkgPT4KKCkgPT4KICB2YWx1ZSA9PgogIG1vZGlmaWVyKC4uLmFyZ3MpCiAgZm4gPT4KICBuZXdWYWx1ZSA9PgogIGdldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgKCkgPT4KICByZXQgPSBrZXkgPT4KICByZXQgPSBrZXkgPT4KICByZXQgPSAoKSA9PgogIHNldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgdmFsdWUgPT4KICByZXQgPSAoa2V5LCB2YWx1ZSkgPT4KICByZXQgPSAoa2V5LCB2YWx1ZSkgPT4KICByZXQgPSB2YWx1ZSA9PgogIGdldHRlcnNldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgKC4uLmFyZ3MyKSA9PgogIGZuID0gKC4uLmFyZ3MpID0+CiAgZm4gPSAoLi4uYXJncykgPT4KICBmbiA9ICguLi5hcmdzKSA9PgogIGZuID0gKC4uLmFyZ3MpID0+CiAgKC4uLmFyZ3MyKSA9PgogIGhhc0dldFNldChvYmopCiAgbSA9PgogIG1hcE9iamVjdCh0YXJnZXQpCiAgc2V0OiAoa2V5LCB2YWx1ZSkgPT4KICBnZXQ6IGtleSA9PgogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0UHJvdG90eXBlQ2hhaW4ob2JqLCBsaW1pdCA9IC0xLCBzdGFydCA9IDApCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmosIC4uLnJhbmdlKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgcHJlZCA9IChlbCwgaSkgPT4KICAoZiwgYXJyID0gW10sIGxlbmd0aCA9IGYubGVuZ3RoKSA9PgogICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAoZWwsIGksIGFycikgPT4KICBpdGVtID0+CiAgKGVsLCBpLCBhcnIpID0+CiAgZ2V0RnVuY3Rpb25Bcmd1bWVudHMgPSBmbiA9PgogIChvZmZzZXQgPSAwKSA9PgogIGNvZGUgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgZ2V0QW5zaVN0eWxlcygpCiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGMgPT4KICB2YWx1ZTogaGV4ID0+CiAgY2hhcmFjdGVyID0+CiAgdmFsdWU6IGhleCA9PgogIHZhbHVlOiBjb2RlID0+CiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIHZhbHVlOiBoZXggPT4KICByYW5kSW50KC4uLmFyZ3MpCiAgcmFuZEZsb2F0KG1pbiwgbWF4LCBybmcgPSBNYXRoLnJhbmRvbSkKICByYW5kU3RyKG4sIHNldCA9ICdfMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonLCBybmcgPSBNYXRoLnJhbmRvbSkKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogIGZ1bmN0aW9uKCkKICB2ID0+CiAgcmVwbGFjZVByb3BlcnR5KHZhbHVlKQogIGxhenlQcm9wZXJ0aWVzKG9iaiwgZ2V0dGVyc09iaiwgb3B0cyA9IHt9KQogIGdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGFyZyA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgb3B0ID0+CihhY2MsIGFyZykgPT4KICB0b1VuaXhUaW1lKGRhdGVPYmosIHV0YyA9IGZhbHNlKQogIHVuaXhUaW1lKHV0YyA9IGZhbHNlKQogIGZyb21Vbml4VGltZShlcG9jaCwgdXRjID0gZmFsc2UpCiAgcmFuZ2UoLi4uYXJncykKICAodiwgaykgPT4KICBuID0+CiAgcmVwZWF0ZXIobiwgd2hhdCkKKCkKKCkKICByZXBlYXQobiwgd2hhdCkKICBjaHVua0FycmF5KGFyciwgc2l6ZSkKICBmbiA9IChhLCB2LCBpKSA9PgogIGNhbWVsaXplKHN0ciwgZGVsaW0gPSAnJykKICAobWF0Y2gsIHAxLCBwMiwgb2Zmc2V0KSA9PgogIGRlY2FtZWxpemUoc3RyLCBkZWxpbSA9ICctJykKICBzaG9ydGVuKHN0ciwgbWF4ID0gNDAsIHN1ZmZpeCA9ICcuLi4nKQogIGFycmF5c0luQ29tbW9uKGEpCihpdG0sIGluZHgpID0+CiAgYXJyID0+CiAgYXJyYXlGYWNhZGUocHJvdG8sIGl0ZW1GbiA9IChjb250YWluZXIsIGkpID0+IGNvbnRhaW5lci4KKGkpKQoqa2V5cygpCiplbnRyaWVzKCkKKnZhbHVlcygpCiAgZm9yRWFjaChjYWxsYmFjaywgdGhpc0FyZykKICByZWR1Y2UoY2FsbGJhY2ssIGFjY3UsIHRoaXNBcmcpCiAgbW9kKGEsIGIpCiAgYiA6IG4gPT4KICBwdXNoVW5pcXVlKGFyciwgLi4uYXJncykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					95,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								752,
								766
							],
							[
								846,
								869
							],
							[
								1007,
								1024
							],
							[
								1065,
								1082
							],
							[
								1115,
								1124
							],
							[
								1158,
								1168
							],
							[
								1202,
								1212
							],
							[
								1247,
								1258
							],
							[
								1292,
								1302
							],
							[
								1337,
								1348
							],
							[
								1385,
								1398
							],
							[
								1436,
								1450
							],
							[
								1486,
								1498
							],
							[
								1534,
								1546
							],
							[
								1599,
								1619
							],
							[
								1881,
								1897
							],
							[
								1951,
								1970
							],
							[
								2005,
								2021
							],
							[
								2063,
								2078
							],
							[
								2099,
								2103
							],
							[
								2141,
								2175
							],
							[
								2198,
								2230
							],
							[
								2253,
								2296
							],
							[
								4125,
								4144
							],
							[
								4242,
								4258
							],
							[
								4320,
								4338
							],
							[
								4402,
								4421
							],
							[
								4486,
								4495
							],
							[
								4550,
								4567
							],
							[
								4630,
								4647
							],
							[
								4710,
								4724
							],
							[
								4784,
								4799
							],
							[
								4860,
								4875
							],
							[
								4936,
								4944
							],
							[
								4998,
								5010
							],
							[
								5068,
								5078
							],
							[
								5134,
								5145
							],
							[
								5202,
								5210
							],
							[
								5264,
								5286
							],
							[
								5354,
								5369
							],
							[
								5430,
								5452
							],
							[
								5520,
								5536
							],
							[
								5598,
								5614
							],
							[
								5676,
								5688
							],
							[
								5746,
								5758
							],
							[
								5816,
								5829
							],
							[
								5888,
								5906
							],
							[
								5964,
								5982
							],
							[
								6046,
								6068
							],
							[
								6136,
								6163
							],
							[
								6236,
								6253
							],
							[
								6310,
								6327
							],
							[
								6384,
								6401
							],
							[
								6448,
								6464
							],
							[
								6547,
								6563
							],
							[
								6635,
								6651
							],
							[
								6723,
								6740
							],
							[
								6797,
								6817
							],
							[
								6876,
								6896
							],
							[
								7055,
								7074
							],
							[
								7150,
								7157
							],
							[
								7186,
								7206
							],
							[
								7276,
								7291
							],
							[
								7352,
								7378
							],
							[
								7449,
								7465
							],
							[
								7521,
								7534
							],
							[
								7611,
								7629
							],
							[
								7711,
								7724
							],
							[
								7789,
								7803
							],
							[
								7905,
								7931
							],
							[
								7977,
								8002
							],
							[
								8087,
								8129
							],
							[
								8263,
								8303
							],
							[
								11232,
								11275
							],
							[
								11692,
								11727
							],
							[
								11883,
								11901
							],
							[
								11931,
								11936
							],
							[
								12026,
								12053
							],
							[
								12172,
								12207
							],
							[
								12268,
								12272
							],
							[
								12288,
								12292
							],
							[
								12319,
								12328
							],
							[
								12491,
								12524
							],
							[
								12578,
								12610
							],
							[
								12774,
								12807
							],
							[
								13003,
								13024
							],
							[
								13094,
								13100
							],
							[
								13117,
								13133
							],
							[
								13202,
								13208
							],
							[
								13221,
								13237
							],
							[
								13410,
								13415
							],
							[
								13429,
								13438
							],
							[
								13488,
								13515
							],
							[
								13560,
								13566
							],
							[
								13611,
								13623
							],
							[
								13653,
								13686
							],
							[
								13744,
								13750
							],
							[
								13865,
								13877
							],
							[
								13931,
								13943
							],
							[
								14091,
								14102
							],
							[
								14144,
								14177
							],
							[
								14235,
								14244
							],
							[
								14366,
								14387
							],
							[
								14448,
								14469
							],
							[
								14627,
								14641
							],
							[
								14690,
								14729
							],
							[
								14802,
								14816
							],
							[
								14971,
								14988
							],
							[
								15129,
								15146
							],
							[
								15177,
								15194
							],
							[
								15294,
								15311
							],
							[
								15603,
								15617
							],
							[
								15663,
								15687
							],
							[
								15737,
								15741
							],
							[
								15781,
								15808
							],
							[
								16038,
								16058
							],
							[
								16088,
								16099
							],
							[
								16198,
								16233
							],
							[
								16273,
								16291
							],
							[
								16478,
								16499
							],
							[
								16523,
								16533
							],
							[
								16572,
								16602
							],
							[
								17150,
								17184
							],
							[
								17491,
								17546
							],
							[
								17822,
								17866
							],
							[
								18033,
								18067
							],
							[
								18133,
								18169
							],
							[
								18244,
								18261
							],
							[
								18420,
								18457
							],
							[
								18458,
								18472
							],
							[
								18478,
								18482
							],
							[
								18557,
								18589
							],
							[
								18617,
								18643
							],
							[
								18968,
								18990
							],
							[
								19041,
								19057
							],
							[
								19072,
								19079
							],
							[
								19107,
								19123
							],
							[
								19164,
								19192
							],
							[
								19411,
								19428
							],
							[
								19429,
								19438
							],
							[
								19490,
								19507
							],
							[
								19508,
								19517
							],
							[
								19577,
								19594
							],
							[
								19595,
								19618
							],
							[
								19674,
								19698
							],
							[
								22325,
								22353
							],
							[
								22784,
								22788
							],
							[
								22916,
								22929
							],
							[
								23245,
								23257
							],
							[
								23520,
								23533
							],
							[
								23638,
								23652
							],
							[
								24545,
								24573
							],
							[
								24689,
								24702
							],
							[
								24814,
								24840
							],
							[
								25030,
								25078
							],
							[
								25126,
								25238
							],
							[
								25343,
								25366
							],
							[
								25505,
								25557
							],
							[
								25651,
								25667
							],
							[
								25751,
								25762
							],
							[
								25875,
								25879
							],
							[
								26158,
								26191
							],
							[
								26305,
								26357
							],
							[
								26531,
								26567
							],
							[
								26724,
								26740
							],
							[
								26758,
								26780
							],
							[
								26893,
								26899
							],
							[
								27003,
								27016
							],
							[
								28424,
								28466
							],
							[
								28661,
								28692
							],
							[
								28742,
								28784
							],
							[
								28904,
								28928
							],
							[
								29148,
								29158
							],
							[
								29211,
								29215
							],
							[
								29254,
								29281
							],
							[
								29328,
								29340
							],
							[
								29410,
								29422
							],
							[
								29485,
								29510
							],
							[
								29555,
								29586
							],
							[
								29597,
								29614
							],
							[
								29755,
								29790
							],
							[
								29838,
								29865
							],
							[
								29956,
								29994
							],
							[
								30203,
								30251
							],
							[
								30839,
								30866
							],
							[
								31069,
								31083
							],
							[
								31132,
								31138
							],
							[
								31179,
								31245
							],
							[
								31247,
								31251
							],
							[
								31409,
								31416
							],
							[
								31508,
								31518
							],
							[
								31629,
								31638
							],
							[
								31744,
								31770
							],
							[
								31903,
								31934
							],
							[
								32109,
								32128
							],
							[
								32179,
								32187
							],
							[
								32216,
								32250
							]
						],
						"symlist":
						[
							"sliceFn = x =>",
							"ArrayBuffer(start, end)",
							"SharedArrayBuffer",
							"Uint8ClampedArray",
							"Int8Array",
							"Uint8Array",
							"Int16Array",
							"Uint16Array",
							"Int32Array",
							"Uint32Array",
							"BigInt64Array",
							"BigUint64Array",
							"Float32Array",
							"Float64Array",
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							"function util()",
							"util",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterable(v)",
							"isAsyncIterable(v)",
							"isIterator(v)",
							"isArrayLike(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function memoize(fn, cache = {})",
							" function Memoize(n, ...rest)",
							" function getset(target, ...args)",
							"GetSet = (...args) =>",
							"key =>",
							" (key, value) =>",
							"key =>",
							" (key, value) =>",
							"() =>",
							" value =>",
							" function modifier(...args)",
							" fn =>",
							" newValue =>",
							" function getter(target, ...args)",
							" () =>",
							"ret = key =>",
							"ret = key =>",
							"ret = () =>",
							" function setter(target, ...args)",
							" value =>",
							"ret = (key, value) =>",
							"ret = (key, value) =>",
							"ret = value =>",
							" function gettersetter(target, ...args)",
							" (...args2) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							" (...args2) =>",
							" function hasGetSet(obj)",
							"m =>",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getPrototypeChain(obj, limit = -1, start = 0)",
							" function getConstructorChain(obj, ...range)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							"(acc, arg) =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function shorten(str, max = 40, suffix = '...')",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function arrayFacade(proto, itemFn = (container, i) => container.",
							"(i))",
							"*keys()",
							"*entries()",
							"*values()",
							"forEach(callback, thisArg)",
							"reduce(callback, accu, thisArg)",
							" function mod(a, b)",
							"b : n =>",
							" function pushUnique(arr, ...args)"
						]
					},
					"AQAAAAAAAAAAAAAAWQ8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					96,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
						"symkeys":
						[
							[
								35,
								49
							],
							[
								118,
								128
							],
							[
								180,
								189
							],
							[
								283,
								290
							],
							[
								333,
								357
							],
							[
								503,
								522
							],
							[
								626,
								634
							],
							[
								675,
								688
							],
							[
								873,
								889
							],
							[
								1156,
								1177
							],
							[
								1272,
								1296
							],
							[
								1322,
								1336
							],
							[
								1418,
								1439
							],
							[
								1476,
								1490
							],
							[
								1611,
								1627
							],
							[
								1774,
								1789
							],
							[
								1802,
								1821
							],
							[
								1892,
								1911
							],
							[
								2044,
								2063
							],
							[
								2206,
								2220
							],
							[
								2301,
								2314
							],
							[
								2400,
								2411
							],
							[
								2463,
								2473
							],
							[
								2525,
								2535
							],
							[
								2601,
								2611
							],
							[
								2655,
								2681
							],
							[
								2780,
								2800
							],
							[
								2881,
								2927
							]
						],
						"symlist":
						[
							"contains(item)",
							"get last()",
							"at(index)",
							"clear()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"unique()",
							"add(...items)",
							"pred = (a, b) =>",
							"pred = (arr, item) =>",
							"pushUnique(arr, ...args)",
							"(acc, item) =>",
							"pred = (arr, item) =>",
							" (...items) =>",
							"delete(...items)",
							"remove(...args)",
							"predicate = item =>",
							"removeIf(predicate)",
							"predicate = item =>",
							"rotateRight(n)",
							"rotateLeft(n)",
							"get first()",
							"get head()",
							"get tail()",
							"get last()",
							"match(callbackFn, thisArg)",
							"callbackFn = item =>",
							" function extendArray(proto = Array.prototype)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZDwAAICBzbGljZUZuID0geCA9PgpBcnJheUJ1ZmZlcihzdGFydCwgZW5kKQpTaGFyZWRBcnJheUJ1ZmZlcgpVaW50OENsYW1wZWRBcnJheQpJbnQ4QXJyYXkKVWludDhBcnJheQpJbnQxNkFycmF5ClVpbnQxNkFycmF5CkludDMyQXJyYXkKVWludDMyQXJyYXkKQmlnSW50NjRBcnJheQpCaWdVaW50NjRBcnJheQpGbG9hdDMyQXJyYXkKRmxvYXQ2NEFycmF5CiAgc2xpY2UgPSAoeCwgcywgZSkgPT4KICBzdHJpbmdpZnkgPSB2ID0+CiAgZm9ybWF0TnVtYmVyID0gbiA9PgogIGlzTmF0aXZlID0gZm4gPT4KICB1dGlsKCkKICB1dGlsCkFzeW5jRnVuY3Rpb24gPSBmdW5jdGlvbiB4KCkKR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGN0b3IgPT4KICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNDb25zdHJ1Y3Rvcih2KQogIGlzSXRlcmFibGUodikKICBpc0FzeW5jSXRlcmFibGUodikKICBpc0l0ZXJhdG9yKHYpCiAgaXNBcnJheUxpa2UodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKKCkgPT4KICBjbGVhckludGVydmFsKGlkKQogIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3RvcikKICBjdG9yCiAgY3RvcgogIHN1cGVyQ3RvcgogIG1lbW9pemUoZm4sIGNhY2hlID0ge30pCk1lbW9pemUobiwgLi4ucmVzdCkKICBnZXRzZXQodGFyZ2V0LCAuLi5hcmdzKQpHZXRTZXQgPSAoLi4uYXJncykgPT4KICBrZXkgPT4KICAoa2V5LCB2YWx1ZSkgPT4KICBrZXkgPT4KICAoa2V5LCB2YWx1ZSkgPT4KKCkgPT4KICB2YWx1ZSA9PgogIG1vZGlmaWVyKC4uLmFyZ3MpCiAgZm4gPT4KICBuZXdWYWx1ZSA9PgogIGdldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgKCkgPT4KICByZXQgPSBrZXkgPT4KICByZXQgPSBrZXkgPT4KICByZXQgPSAoKSA9PgogIHNldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgdmFsdWUgPT4KICByZXQgPSAoa2V5LCB2YWx1ZSkgPT4KICByZXQgPSAoa2V5LCB2YWx1ZSkgPT4KICByZXQgPSB2YWx1ZSA9PgogIGdldHRlcnNldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgKC4uLmFyZ3MyKSA9PgogIGZuID0gKC4uLmFyZ3MpID0+CiAgZm4gPSAoLi4uYXJncykgPT4KICBmbiA9ICguLi5hcmdzKSA9PgogIGZuID0gKC4uLmFyZ3MpID0+CiAgKC4uLmFyZ3MyKSA9PgogIGhhc0dldFNldChvYmopCiAgbSA9PgogIG1hcE9iamVjdCh0YXJnZXQpCiAgc2V0OiAoa2V5LCB2YWx1ZSkgPT4KICBnZXQ6IGtleSA9PgogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0UHJvdG90eXBlQ2hhaW4ob2JqLCBsaW1pdCA9IC0xLCBzdGFydCA9IDApCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmosIC4uLnJhbmdlKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgcHJlZCA9IChlbCwgaSkgPT4KICAoZiwgYXJyID0gW10sIGxlbmd0aCA9IGYubGVuZ3RoKSA9PgogICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAoZWwsIGksIGFycikgPT4KICBpdGVtID0+CiAgKGVsLCBpLCBhcnIpID0+CiAgZ2V0RnVuY3Rpb25Bcmd1bWVudHMgPSBmbiA9PgogIChvZmZzZXQgPSAwKSA9PgogIGNvZGUgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgZ2V0QW5zaVN0eWxlcygpCiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGMgPT4KICB2YWx1ZTogaGV4ID0+CiAgY2hhcmFjdGVyID0+CiAgdmFsdWU6IGhleCA9PgogIHZhbHVlOiBjb2RlID0+CiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIHZhbHVlOiBoZXggPT4KICByYW5kSW50KC4uLmFyZ3MpCiAgcmFuZEZsb2F0KG1pbiwgbWF4LCBybmcgPSBNYXRoLnJhbmRvbSkKICByYW5kU3RyKG4sIHNldCA9ICdfMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonLCBybmcgPSBNYXRoLnJhbmRvbSkKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogIGZ1bmN0aW9uKCkKICB2ID0+CiAgcmVwbGFjZVByb3BlcnR5KHZhbHVlKQogIGxhenlQcm9wZXJ0aWVzKG9iaiwgZ2V0dGVyc09iaiwgb3B0cyA9IHt9KQogIGdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGFyZyA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgb3B0ID0+CihhY2MsIGFyZykgPT4KICB0b1VuaXhUaW1lKGRhdGVPYmosIHV0YyA9IGZhbHNlKQogIHVuaXhUaW1lKHV0YyA9IGZhbHNlKQogIGZyb21Vbml4VGltZShlcG9jaCwgdXRjID0gZmFsc2UpCiAgcmFuZ2UoLi4uYXJncykKICAodiwgaykgPT4KICBuID0+CiAgcmVwZWF0ZXIobiwgd2hhdCkKKCkKKCkKICByZXBlYXQobiwgd2hhdCkKICBjaHVua0FycmF5KGFyciwgc2l6ZSkKICBmbiA9IChhLCB2LCBpKSA9PgogIGNhbWVsaXplKHN0ciwgZGVsaW0gPSAnJykKICAobWF0Y2gsIHAxLCBwMiwgb2Zmc2V0KSA9PgogIGRlY2FtZWxpemUoc3RyLCBkZWxpbSA9ICctJykKICBzaG9ydGVuKHN0ciwgbWF4ID0gNDAsIHN1ZmZpeCA9ICcuLi4nKQogIGFycmF5c0luQ29tbW9uKGEpCihpdG0sIGluZHgpID0+CiAgYXJyID0+CiAgYXJyYXlGYWNhZGUocHJvdG8sIGl0ZW1GbiA9IChjb250YWluZXIsIGkpID0+IGNvbnRhaW5lci4KKGkpKQoqa2V5cygpCiplbnRyaWVzKCkKKnZhbHVlcygpCiAgZm9yRWFjaChjYWxsYmFjaywgdGhpc0FyZykKICByZWR1Y2UoY2FsbGJhY2ssIGFjY3UsIHRoaXNBcmcpCiAgbW9kKGEsIGIpCiAgYiA6IG4gPT4KICBwdXNoVW5pcXVlKGFyciwgLi4uYXJncykAAAAAAAAAABQCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					97,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
						"symkeys":
						[
							[
								68,
								82
							],
							[
								151,
								161
							],
							[
								213,
								222
							],
							[
								316,
								323
							],
							[
								366,
								390
							],
							[
								536,
								555
							],
							[
								659,
								667
							],
							[
								708,
								721
							],
							[
								906,
								922
							],
							[
								1189,
								1210
							],
							[
								1305,
								1329
							],
							[
								1355,
								1369
							],
							[
								1451,
								1472
							],
							[
								1509,
								1523
							],
							[
								1644,
								1660
							],
							[
								1807,
								1822
							],
							[
								1835,
								1854
							],
							[
								1925,
								1944
							],
							[
								2077,
								2096
							],
							[
								2239,
								2253
							],
							[
								2334,
								2347
							],
							[
								2433,
								2444
							],
							[
								2496,
								2506
							],
							[
								2558,
								2568
							],
							[
								2634,
								2644
							],
							[
								2688,
								2714
							],
							[
								2813,
								2833
							],
							[
								2914,
								2960
							]
						],
						"symlist":
						[
							"contains(item)",
							"get last()",
							"at(index)",
							"clear()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"unique()",
							"add(...items)",
							"pred = (a, b) =>",
							"pred = (arr, item) =>",
							"pushUnique(arr, ...args)",
							"(acc, item) =>",
							"pred = (arr, item) =>",
							" (...items) =>",
							"delete(...items)",
							"remove(...args)",
							"predicate = item =>",
							"removeIf(predicate)",
							"predicate = item =>",
							"rotateRight(n)",
							"rotateLeft(n)",
							"get first()",
							"get head()",
							"get tail()",
							"get last()",
							"match(callbackFn, thisArg)",
							"callbackFn = item =>",
							" function extendArray(proto = Array.prototype)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAgAAICBjb250YWlucyhpdGVtKQogIGdldCBsYXN0KCkKICBhdChpbmRleCkKICBjbGVhcigpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIHVuaXF1ZSgpCiAgYWRkKC4uLml0ZW1zKQogIHByZWQgPSAoYSwgYikgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICBwdXNoVW5pcXVlKGFyciwgLi4uYXJncykKKGFjYywgaXRlbSkgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICAoLi4uaXRlbXMpID0+CiAgZGVsZXRlKC4uLml0ZW1zKQogIHJlbW92ZSguLi5hcmdzKQogIHByZWRpY2F0ZSA9IGl0ZW0gPT4KICByZW1vdmVJZihwcmVkaWNhdGUpCiAgcHJlZGljYXRlID0gaXRlbSA9PgogIHJvdGF0ZVJpZ2h0KG4pCiAgcm90YXRlTGVmdChuKQogIGdldCBmaXJzdCgpCiAgZ2V0IGhlYWQoKQogIGdldCB0YWlsKCkKICBnZXQgbGFzdCgpCiAgbWF0Y2goY2FsbGJhY2tGbiwgdGhpc0FyZykKICBjYWxsYmFja0ZuID0gaXRlbSA9PgogIGV4dGVuZEFycmF5KHByb3RvID0gQXJyYXkucHJvdG90eXBlKQAAAAAAAAAAFAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					98,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
						"symkeys":
						[
							[
								68,
								82
							],
							[
								151,
								161
							],
							[
								213,
								222
							],
							[
								316,
								323
							],
							[
								366,
								390
							],
							[
								536,
								555
							],
							[
								659,
								667
							],
							[
								708,
								721
							],
							[
								906,
								922
							],
							[
								1189,
								1210
							],
							[
								1305,
								1329
							],
							[
								1355,
								1369
							],
							[
								1451,
								1472
							],
							[
								1509,
								1523
							],
							[
								1644,
								1660
							],
							[
								1807,
								1822
							],
							[
								1835,
								1854
							],
							[
								1925,
								1944
							],
							[
								2077,
								2096
							],
							[
								2239,
								2253
							],
							[
								2334,
								2347
							],
							[
								2433,
								2444
							],
							[
								2496,
								2506
							],
							[
								2558,
								2568
							],
							[
								2634,
								2644
							],
							[
								2688,
								2714
							],
							[
								2813,
								2833
							],
							[
								2914,
								2960
							]
						],
						"symlist":
						[
							"contains(item)",
							"get last()",
							"at(index)",
							"clear()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"unique()",
							"add(...items)",
							"pred = (a, b) =>",
							"pred = (arr, item) =>",
							"pushUnique(arr, ...args)",
							"(acc, item) =>",
							"pred = (arr, item) =>",
							" (...items) =>",
							"delete(...items)",
							"remove(...args)",
							"predicate = item =>",
							"removeIf(predicate)",
							"predicate = item =>",
							"rotateRight(n)",
							"rotateLeft(n)",
							"get first()",
							"get head()",
							"get tail()",
							"get last()",
							"match(callbackFn, thisArg)",
							"callbackFn = item =>",
							" function extendArray(proto = Array.prototype)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAgAAICBjb250YWlucyhpdGVtKQogIGdldCBsYXN0KCkKICBhdChpbmRleCkKICBjbGVhcigpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIHVuaXF1ZSgpCiAgYWRkKC4uLml0ZW1zKQogIHByZWQgPSAoYSwgYikgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICBwdXNoVW5pcXVlKGFyciwgLi4uYXJncykKKGFjYywgaXRlbSkgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICAoLi4uaXRlbXMpID0+CiAgZGVsZXRlKC4uLml0ZW1zKQogIHJlbW92ZSguLi5hcmdzKQogIHByZWRpY2F0ZSA9IGl0ZW0gPT4KICByZW1vdmVJZihwcmVkaWNhdGUpCiAgcHJlZGljYXRlID0gaXRlbSA9PgogIHJvdGF0ZVJpZ2h0KG4pCiAgcm90YXRlTGVmdChuKQogIGdldCBmaXJzdCgpCiAgZ2V0IGhlYWQoKQogIGdldCB0YWlsKCkKICBnZXQgbGFzdCgpCiAgbWF0Y2goY2FsbGJhY2tGbiwgdGhpc0FyZykKICBjYWxsYmFja0ZuID0gaXRlbSA9PgogIGV4dGVuZEFycmF5KHByb3RvID0gQXJyYXkucHJvdG90eXBlKQAAAAAAAAAAFAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					99,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1007,
								1015
							],
							[
								1090,
								1096
							],
							[
								2073,
								2087
							],
							[
								2239,
								2253
							],
							[
								2338,
								2352
							],
							[
								2427,
								2436
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAgAAICBjb250YWlucyhpdGVtKQogIGdldCBsYXN0KCkKICBhdChpbmRleCkKICBjbGVhcigpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIHVuaXF1ZSgpCiAgYWRkKC4uLml0ZW1zKQogIHByZWQgPSAoYSwgYikgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICBwdXNoVW5pcXVlKGFyciwgLi4uYXJncykKKGFjYywgaXRlbSkgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICAoLi4uaXRlbXMpID0+CiAgZGVsZXRlKC4uLml0ZW1zKQogIHJlbW92ZSguLi5hcmdzKQogIHByZWRpY2F0ZSA9IGl0ZW0gPT4KICByZW1vdmVJZihwcmVkaWNhdGUpCiAgcHJlZGljYXRlID0gaXRlbSA9PgogIHJvdGF0ZVJpZ2h0KG4pCiAgcm90YXRlTGVmdChuKQogIGdldCBmaXJzdCgpCiAgZ2V0IGhlYWQoKQogIGdldCB0YWlsKCkKICBnZXQgbGFzdCgpCiAgbWF0Y2goY2FsbGJhY2tGbiwgdGhpc0FyZykKICBjYWxsYmFja0ZuID0gaXRlbSA9PgogIGV4dGVuZEFycmF5KHByb3RvID0gQXJyYXkucHJvdG90eXBlKQAAAAAAAAAAoQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					100,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/c-mcp3301/fast-arduino-lib/cores/fastarduino/devices/mcp3001.h",
						"symkeys":
						[
							[
								729,
								739
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMCP3001_HH‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAACAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					101,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAICDik4IgIE1DUDMwMDFfSEgg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					102,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								118
							],
							[
								488,
								492
							],
							[
								587,
								618
							],
							[
								1325,
								1332
							],
							[
								1448,
								1465
							],
							[
								1480,
								1502
							],
							[
								1536,
								1544
							],
							[
								1614,
								1637
							],
							[
								1688,
								1706
							],
							[
								1791,
								1821
							],
							[
								1976,
								1999
							],
							[
								2000,
								2021
							],
							[
								2362,
								2376
							],
							[
								2866,
								2900
							],
							[
								3263,
								3315
							],
							[
								3356,
								3389
							],
							[
								3569,
								3619
							],
							[
								3665,
								3711
							],
							[
								3819,
								3872
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							"printFunction = out =>",
							" text =>",
							"outputFunction = out =>",
							" function(...args)",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AQAAAAAAAAAAAAAA+gEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					103,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAQ29uc29sZSguLi5hcmdzKQogIGYgPT4KICBjb25zb2xlV2lkdGggPSAoZmQgPSB0ZXJtRmQpID0+CkNvbnNvbGUKICAuaW5zcGVjdCA9IGFyZyA9PgogIHByaW50RnVuY3Rpb24gPSBvdXQgPT4KICB0ZXh0ID0+CiAgb3V0cHV0RnVuY3Rpb24gPSBvdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQogIGluc3BlY3RGdW5jdGlvbiA9ICguLi5hcmdzKSA9PgogIGxvZ0Z1bmN0aW9uID0gb3V0cHV0ID0+CiAgZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMKICBhZGRNaXNzaW5nTWV0aG9kcyhjb25zKQpDb25zb2xlLnByb3RvdHlwZS5jb25maWcgPSBmdW5jdGlvbiBjb25maWcob2JqID0ge30pCkNvbnNvbGVPcHRpb25zKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucy5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpCkNvbnNvbGVTZXR1cChpbnNwZWN0T3B0aW9ucyA9IHt9LCBjYWxsYmFjaykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					104,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								118
							],
							[
								488,
								492
							],
							[
								587,
								618
							],
							[
								1325,
								1332
							],
							[
								1448,
								1465
							],
							[
								1480,
								1502
							],
							[
								1536,
								1544
							],
							[
								1614,
								1637
							],
							[
								1688,
								1706
							],
							[
								1791,
								1821
							],
							[
								1976,
								1999
							],
							[
								2000,
								2021
							],
							[
								2362,
								2376
							],
							[
								2866,
								2900
							],
							[
								3263,
								3315
							],
							[
								3356,
								3389
							],
							[
								3569,
								3619
							],
							[
								3665,
								3711
							],
							[
								3819,
								3872
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							"printFunction = out =>",
							" text =>",
							"outputFunction = out =>",
							" function(...args)",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"BwAAAAAAAAAAAAAA+gEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPoBAABDb25zb2xlKC4uLmFyZ3MpCiAgZiA9PgogIGNvbnNvbGVXaWR0aCA9IChmZCA9IHRlcm1GZCkgPT4KQ29uc29sZQogIC5pbnNwZWN0ID0gYXJnID0+CiAgcHJpbnRGdW5jdGlvbiA9IG91dCA9PgogIHRleHQgPT4KICBvdXRwdXRGdW5jdGlvbiA9IG91dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgaW5zcGVjdEZ1bmN0aW9uID0gKC4uLmFyZ3MpID0+CiAgbG9nRnVuY3Rpb24gPSBvdXRwdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwogIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMob2JqID0ge30pCkNvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zLm1lcmdlID0gZnVuY3Rpb24ob3B0cywgLi4uYXJncykKQ29uc29sZVNldHVwKGluc3BlY3RPcHRpb25zID0ge30sIGNhbGxiYWNrKQAAAAAAAAAA+gEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPoBAABDb25zb2xlKC4uLmFyZ3MpCiAgZiA9PgogIGNvbnNvbGVXaWR0aCA9IChmZCA9IHRlcm1GZCkgPT4KQ29uc29sZQogIC5pbnNwZWN0ID0gYXJnID0+CiAgcHJpbnRGdW5jdGlvbiA9IG91dCA9PgogIHRleHQgPT4KICBvdXRwdXRGdW5jdGlvbiA9IG91dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgaW5zcGVjdEZ1bmN0aW9uID0gKC4uLmFyZ3MpID0+CiAgbG9nRnVuY3Rpb24gPSBvdXRwdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwogIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMob2JqID0ge30pCkNvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zLm1lcmdlID0gZnVuY3Rpb24ob3B0cywgLi4uYXJncykKQ29uc29sZVNldHVwKGluc3BlY3RPcHRpb25zID0ge30sIGNhbGxiYWNrKQAAAAAAAAAA+gEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPoBAABDb25zb2xlKC4uLmFyZ3MpCiAgZiA9PgogIGNvbnNvbGVXaWR0aCA9IChmZCA9IHRlcm1GZCkgPT4KQ29uc29sZQogIC5pbnNwZWN0ID0gYXJnID0+CiAgcHJpbnRGdW5jdGlvbiA9IG91dCA9PgogIHRleHQgPT4KICBvdXRwdXRGdW5jdGlvbiA9IG91dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgaW5zcGVjdEZ1bmN0aW9uID0gKC4uLmFyZ3MpID0+CiAgbG9nRnVuY3Rpb24gPSBvdXRwdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwogIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMob2JqID0ge30pCkNvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zLm1lcmdlID0gZnVuY3Rpb24ob3B0cywgLi4uYXJncykKQ29uc29sZVNldHVwKGluc3BlY3RPcHRpb25zID0ge30sIGNhbGxiYWNrKQAAAAAAAAAA+gEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					105,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1007,
								1015
							],
							[
								1090,
								1096
							],
							[
								2073,
								2087
							],
							[
								2239,
								2253
							],
							[
								2338,
								2352
							],
							[
								2427,
								2436
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAQ29uc29sZSguLi5hcmdzKQogIGYgPT4KICBjb25zb2xlV2lkdGggPSAoZmQgPSB0ZXJtRmQpID0+CkNvbnNvbGUKICAuaW5zcGVjdCA9IGFyZyA9PgogIHByaW50RnVuY3Rpb24gPSBvdXQgPT4KICB0ZXh0ID0+CiAgb3V0cHV0RnVuY3Rpb24gPSBvdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQogIGluc3BlY3RGdW5jdGlvbiA9ICguLi5hcmdzKSA9PgogIGxvZ0Z1bmN0aW9uID0gb3V0cHV0ID0+CiAgZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMKICBhZGRNaXNzaW5nTWV0aG9kcyhjb25zKQpDb25zb2xlLnByb3RvdHlwZS5jb25maWcgPSBmdW5jdGlvbiBjb25maWcob2JqID0ge30pCkNvbnNvbGVPcHRpb25zKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucy5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpCkNvbnNvbGVTZXR1cChpbnNwZWN0T3B0aW9ucyA9IHt9LCBjYWxsYmFjaykAAAAAAAAAAKEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					106,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					107,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1007,
								1015
							],
							[
								1090,
								1096
							],
							[
								2073,
								2087
							],
							[
								2239,
								2253
							],
							[
								2338,
								2352
							],
							[
								2427,
								2436
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AQAAAAAAAAAAAAAAoQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					112,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1007,
								1015
							],
							[
								1090,
								1096
							],
							[
								2073,
								2087
							],
							[
								2243,
								2257
							],
							[
								2342,
								2356
							],
							[
								2431,
								2440
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAKEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					113,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								2113,
								2127
							],
							[
								2283,
								2297
							],
							[
								2382,
								2396
							],
							[
								2471,
								2480
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAKEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					114,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								1726,
								1740
							],
							[
								1896,
								1910
							],
							[
								1995,
								2009
							],
							[
								2084,
								2093
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAKEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					115,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								1736,
								1750
							],
							[
								1906,
								1920
							],
							[
								2005,
								2019
							],
							[
								2094,
								2103
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAKEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					116,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								1726,
								1740
							],
							[
								1892,
								1906
							],
							[
								1991,
								2005
							],
							[
								2080,
								2089
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAKEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAKEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAKEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					117,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/c-mcp3301/mcp3001/src/mcp3001.c",
						"symkeys":
						[
							[
								672,
								685
							],
							[
								723,
								736
							],
							[
								759,
								767
							],
							[
								843,
								848
							],
							[
								895,
								899
							],
							[
								1780,
								1793
							],
							[
								2656,
								2664
							],
							[
								3250,
								3255
							],
							[
								3921,
								3926
							],
							[
								4878,
								4891
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉparse_cmdline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconfigure_spi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhex_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmunge‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconfigure_spi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhex_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmunge‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉusage‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉparse_cmdline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAFoBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					118,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/c-mcp3301/mcp300x/mcp300x.c",
						"symkeys":
						[
							[
								198,
								214
							],
							[
								539,
								558
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉmcp300x_spi_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmcp300x_read_single‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC+AQAA4oCU4pK74oCTIHBhcnNlX2NtZGxpbmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25maWd1cmVfc3BpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaGV4X2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtdW5nZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25maWd1cmVfc3BpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaGV4X2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtdW5nZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVzYWdlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGFyc2VfY21kbGluZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAFYAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					119,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/c-mcp3301/fast-arduino-lib/cores/fastarduino/devices/mcp3x0x.h",
						"symkeys":
						[
							[
								787,
								797
							],
							[
								906,
								913
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMCP3X0X_HH‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉdevices‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABqAAAA4oCU4pK74oCTIG1jcDMwMHhfc3BpX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtY3AzMDB4X3JlYWRfc2luZ2xlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAQQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					120,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/c-mcp3301/mcp300x/mcp300x.c",
						"symkeys":
						[
							[
								198,
								214
							],
							[
								539,
								558
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉmcp300x_spi_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmcp300x_read_single‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABRAAAAICDik4IgIE1DUDNYMFhfSEgg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGRldmljZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAABWAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					121,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								1726,
								1740
							],
							[
								1892,
								1906
							],
							[
								1991,
								2005
							],
							[
								2080,
								2089
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABqAAAA4oCU4pK74oCTIG1jcDMwMHhfc3BpX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtY3AzMDB4X3JlYWRfc2luZ2xlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAoQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					122,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								787,
								813
							],
							[
								872,
								892
							],
							[
								963,
								981
							],
							[
								1509,
								1534
							],
							[
								2079,
								2107
							],
							[
								2137,
								2141
							],
							[
								2160,
								2188
							],
							[
								2221,
								2240
							],
							[
								2299,
								2326
							],
							[
								2359,
								2378
							],
							[
								2453,
								2482
							],
							[
								2600,
								2623
							],
							[
								2763,
								2786
							],
							[
								3061,
								3083
							],
							[
								3624,
								3648
							],
							[
								3953,
								3977
							],
							[
								4006,
								4012
							],
							[
								4163,
								4187
							],
							[
								4216,
								4222
							],
							[
								4313,
								4339
							],
							[
								4366,
								4372
							],
							[
								4420,
								4426
							],
							[
								4483,
								4489
							],
							[
								4807,
								4833
							],
							[
								4946,
								4952
							],
							[
								5000,
								5006
							],
							[
								5256,
								5262
							],
							[
								5298,
								5304
							],
							[
								5405,
								5411
							],
							[
								5447,
								5453
							],
							[
								5550,
								5556
							],
							[
								6063,
								6091
							],
							[
								6140,
								6161
							],
							[
								6235,
								6256
							],
							[
								6317,
								6338
							],
							[
								6411,
								6457
							],
							[
								6506,
								6512
							],
							[
								6586,
								6592
							],
							[
								6658,
								6664
							],
							[
								6735,
								6757
							],
							[
								7251,
								7257
							],
							[
								7594,
								7616
							],
							[
								7779,
								7807
							],
							[
								7861,
								7879
							],
							[
								8673,
								8691
							],
							[
								8889,
								8906
							],
							[
								9335,
								9352
							],
							[
								9860,
								9876
							],
							[
								9980,
								9986
							],
							[
								10479,
								10497
							],
							[
								10591,
								10607
							],
							[
								10708,
								10747
							],
							[
								11104,
								11108
							],
							[
								11263,
								11270
							],
							[
								11339,
								11350
							],
							[
								11793,
								11811
							],
							[
								13507,
								13511
							],
							[
								13876,
								13892
							],
							[
								14030,
								14038
							],
							[
								14404,
								14410
							],
							[
								14485,
								14498
							],
							[
								14598,
								14602
							],
							[
								14935,
								14941
							],
							[
								15019,
								15025
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							" () =>",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(acc, col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"i =>",
							"(acc, tok, i) =>",
							"index =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAN0DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					123,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
						"symkeys":
						[
							[
								68,
								82
							],
							[
								151,
								161
							],
							[
								213,
								222
							],
							[
								316,
								323
							],
							[
								366,
								390
							],
							[
								536,
								555
							],
							[
								659,
								667
							],
							[
								708,
								721
							],
							[
								915,
								931
							],
							[
								1237,
								1258
							],
							[
								1353,
								1377
							],
							[
								1403,
								1417
							],
							[
								1499,
								1520
							],
							[
								1557,
								1571
							],
							[
								1692,
								1708
							],
							[
								1855,
								1870
							],
							[
								1883,
								1902
							],
							[
								1973,
								1992
							],
							[
								2125,
								2144
							],
							[
								2287,
								2301
							],
							[
								2382,
								2395
							],
							[
								2481,
								2492
							],
							[
								2544,
								2554
							],
							[
								2606,
								2616
							],
							[
								2682,
								2692
							],
							[
								2736,
								2762
							],
							[
								2861,
								2881
							],
							[
								2962,
								3008
							]
						],
						"symlist":
						[
							"contains(item)",
							"get last()",
							"at(index)",
							"clear()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"unique()",
							"add(...items)",
							"pred = (a, b) =>",
							"pred = (arr, item) =>",
							"pushUnique(arr, ...args)",
							"(acc, item) =>",
							"pred = (arr, item) =>",
							" (...items) =>",
							"delete(...items)",
							"remove(...args)",
							"predicate = item =>",
							"removeIf(predicate)",
							"predicate = item =>",
							"rotateRight(n)",
							"rotateLeft(n)",
							"get first()",
							"get head()",
							"get tail()",
							"get last()",
							"match(callbackFn, thisArg)",
							"callbackFn = item =>",
							" function extendArray(proto = Array.prototype)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdAwAAQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CkJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCih0eXBlLCBsZXhlbWUsIHRvaykgPT4KSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQogIHRvayA9PgpFeHBvcnROYW1lKHNlcSkKICB0b2sgPT4KQWRkRXhwb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4KQWRkSW1wb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICAoKSA9PgogIHRvayA9PgogICgpID0+CiAgdG9rID0+CiAgKCkgPT4KUHJpbnRFUzZJbXBvcnQoaW1wKQogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KICAoeyBsb2NhbCwgZmlsZSB9KSA9PgpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgbWFpbiguLi5hcmdzKQogICgpID0+ClJlbGF0aXZlUGF0aCA9IGZpbGUgPT4KUHJvY2Vzc0ZpbGUoZmlsZSkKICBsb2cgPSAoLi4uYXJncykgPT4KKGFjYywgbmFtZSwgaWQpID0+CiAgLmhhbmRsZXIgPSBsZXggPT4KICAodG9rLCBwcmVmaXgpID0+CihhY2MsIGNvbCwgaSkgPT4KICAoKSA9PgogIC5iZWdpbkNvZGUgPSAoKSA9PgogIGJhbGFuY2VyID0gKCkgPT4KICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICBzID0+CiAgcmVzZXQoKQogIGdldCBkZXB0aCgpCiAgc2hvd1Rva2VuID0gdG9rID0+CiAgaSA9PgooYWNjLCB0b2ssIGkpID0+CiAgaW5kZXggPT4KICBpbXAgPT4KKGFjYywgaW1wKSA9PgogIGIgPT4KICBpbXAgPT4KICBpbXAgPT4AAAAAAAAAABQCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					124,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								1726,
								1740
							],
							[
								1892,
								1906
							],
							[
								1991,
								2005
							],
							[
								2080,
								2089
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAgAAICBjb250YWlucyhpdGVtKQogIGdldCBsYXN0KCkKICBhdChpbmRleCkKICBjbGVhcigpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIHVuaXF1ZSgpCiAgYWRkKC4uLml0ZW1zKQogIHByZWQgPSAoYSwgYikgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICBwdXNoVW5pcXVlKGFyciwgLi4uYXJncykKKGFjYywgaXRlbSkgPT4KICBwcmVkID0gKGFyciwgaXRlbSkgPT4KICAoLi4uaXRlbXMpID0+CiAgZGVsZXRlKC4uLml0ZW1zKQogIHJlbW92ZSguLi5hcmdzKQogIHByZWRpY2F0ZSA9IGl0ZW0gPT4KICByZW1vdmVJZihwcmVkaWNhdGUpCiAgcHJlZGljYXRlID0gaXRlbSA9PgogIHJvdGF0ZVJpZ2h0KG4pCiAgcm90YXRlTGVmdChuKQogIGdldCBmaXJzdCgpCiAgZ2V0IGhlYWQoKQogIGdldCB0YWlsKCkKICBnZXQgbGFzdCgpCiAgbWF0Y2goY2FsbGJhY2tGbiwgdGhpc0FyZykKICBjYWxsYmFja0ZuID0gaXRlbSA9PgogIGV4dGVuZEFycmF5KHByb3RvID0gQXJyYXkucHJvdG90eXBlKQAAAAAAAAAAoQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					125,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/c-mcp3301/mcp3001/src/mcp3001.c",
						"symkeys":
						[
							[
								672,
								685
							],
							[
								723,
								736
							],
							[
								759,
								767
							],
							[
								843,
								848
							],
							[
								895,
								899
							],
							[
								1780,
								1793
							],
							[
								2656,
								2664
							],
							[
								3250,
								3255
							],
							[
								3921,
								3926
							],
							[
								4878,
								4891
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉparse_cmdline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconfigure_spi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhex_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmunge‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconfigure_spi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhex_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmunge‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉusage‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉparse_cmdline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAFoBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					126,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								1726,
								1740
							],
							[
								1892,
								1906
							],
							[
								1991,
								2005
							],
							[
								2080,
								2089
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC+AQAA4oCU4pK74oCTIHBhcnNlX2NtZGxpbmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25maWd1cmVfc3BpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaGV4X2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtdW5nZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25maWd1cmVfc3BpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaGV4X2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtdW5nZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVzYWdlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGFyc2VfY21kbGluZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAKEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					127,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/c-mcp3301/mcp300x/mcp300x.c",
						"symkeys":
						[
							[
								198,
								214
							],
							[
								539,
								558
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉmcp300x_spi_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmcp300x_read_single‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAFYAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					128,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								1726,
								1740
							],
							[
								1892,
								1906
							],
							[
								1991,
								2005
							],
							[
								2080,
								2089
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABqAAAA4oCU4pK74oCTIG1jcDMwMHhfc3BpX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtY3AzMDB4X3JlYWRfc2luZ2xlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAoQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					129,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/c-mcp3301/fast-arduino-lib/cores/fastarduino/devices/mcp3001.h",
						"symkeys":
						[
							[
								729,
								739
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMCP3001_HH‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAACAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					130,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								1726,
								1740
							],
							[
								1892,
								1906
							],
							[
								1991,
								2005
							],
							[
								2080,
								2089
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAICDik4IgIE1DUDMwMDFfSEgg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAKEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					131,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								118
							],
							[
								488,
								492
							],
							[
								587,
								618
							],
							[
								1325,
								1332
							],
							[
								1448,
								1465
							],
							[
								1480,
								1502
							],
							[
								1536,
								1544
							],
							[
								1614,
								1637
							],
							[
								1688,
								1706
							],
							[
								1791,
								1821
							],
							[
								1976,
								1999
							],
							[
								2000,
								2021
							],
							[
								2362,
								2376
							],
							[
								2866,
								2900
							],
							[
								3263,
								3315
							],
							[
								3356,
								3389
							],
							[
								3569,
								3619
							],
							[
								3665,
								3711
							],
							[
								3819,
								3872
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							"printFunction = out =>",
							" text =>",
							"outputFunction = out =>",
							" function(...args)",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAPoBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					132,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								1726,
								1740
							],
							[
								1892,
								1906
							],
							[
								1991,
								2005
							],
							[
								2080,
								2089
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAQ29uc29sZSguLi5hcmdzKQogIGYgPT4KICBjb25zb2xlV2lkdGggPSAoZmQgPSB0ZXJtRmQpID0+CkNvbnNvbGUKICAuaW5zcGVjdCA9IGFyZyA9PgogIHByaW50RnVuY3Rpb24gPSBvdXQgPT4KICB0ZXh0ID0+CiAgb3V0cHV0RnVuY3Rpb24gPSBvdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQogIGluc3BlY3RGdW5jdGlvbiA9ICguLi5hcmdzKSA9PgogIGxvZ0Z1bmN0aW9uID0gb3V0cHV0ID0+CiAgZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMKICBhZGRNaXNzaW5nTWV0aG9kcyhjb25zKQpDb25zb2xlLnByb3RvdHlwZS5jb25maWcgPSBmdW5jdGlvbiBjb25maWcob2JqID0ge30pCkNvbnNvbGVPcHRpb25zKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucy5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpCkNvbnNvbGVTZXR1cChpbnNwZWN0T3B0aW9ucyA9IHt9LCBjYWxsYmFjaykAAAAAAAAAAKEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					133,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								59,
								71
							],
							[
								121,
								137
							],
							[
								478,
								495
							],
							[
								527,
								550
							],
							[
								624,
								641
							],
							[
								679,
								696
							],
							[
								810,
								827
							],
							[
								879,
								911
							],
							[
								1016,
								1033
							],
							[
								1230,
								1254
							],
							[
								1289,
								1313
							],
							[
								1350,
								1374
							],
							[
								1412,
								1436
							],
							[
								1475,
								1499
							],
							[
								1673,
								1697
							],
							[
								1738,
								1762
							],
							[
								1809,
								1812
							],
							[
								1816,
								1840
							],
							[
								1903,
								1907
							],
							[
								1911,
								1935
							],
							[
								2330,
								2350
							],
							[
								3429,
								3446
							],
							[
								3491,
								3501
							],
							[
								5838,
								5850
							],
							[
								5934,
								5946
							],
							[
								6735,
								6759
							],
							[
								6763,
								6787
							],
							[
								6799,
								6819
							],
							[
								6841,
								6860
							],
							[
								6868,
								6883
							],
							[
								7141,
								7165
							],
							[
								7191,
								7215
							],
							[
								7282,
								7298
							],
							[
								7325,
								7338
							],
							[
								7376,
								7396
							],
							[
								7483,
								7505
							],
							[
								7537,
								7553
							],
							[
								7640,
								7664
							],
							[
								7900,
								7915
							],
							[
								7926,
								7941
							],
							[
								8036,
								8051
							],
							[
								8054,
								8069
							],
							[
								8154,
								8169
							],
							[
								8172,
								8187
							],
							[
								8273,
								8284
							],
							[
								8399,
								8408
							],
							[
								8419,
								8433
							],
							[
								8436,
								8444
							],
							[
								8448,
								8457
							],
							[
								8472,
								8492
							],
							[
								8540,
								8554
							],
							[
								8588,
								8602
							],
							[
								8635,
								8655
							],
							[
								8662,
								8676
							],
							[
								8726,
								8744
							],
							[
								8785,
								8799
							],
							[
								8806,
								8819
							],
							[
								8853,
								8866
							],
							[
								8897,
								8915
							],
							[
								8959,
								8975
							],
							[
								9015,
								9028
							],
							[
								9031,
								9044
							],
							[
								9065,
								9079
							],
							[
								9099,
								9112
							],
							[
								9116,
								9132
							],
							[
								9136,
								9149
							],
							[
								9153,
								9173
							],
							[
								9180,
								9197
							],
							[
								9236,
								9249
							],
							[
								9282,
								9295
							],
							[
								9298,
								9311
							],
							[
								9384,
								9397
							],
							[
								9400,
								9413
							],
							[
								9456,
								9469
							],
							[
								9503,
								9519
							],
							[
								9594,
								9607
							],
							[
								9611,
								9631
							],
							[
								9639,
								9659
							],
							[
								9711,
								9732
							],
							[
								9837,
								9850
							],
							[
								9854,
								9868
							],
							[
								9875,
								9887
							],
							[
								9890,
								9904
							],
							[
								10005,
								10018
							],
							[
								10022,
								10039
							],
							[
								10140,
								10154
							],
							[
								10183,
								10198
							],
							[
								10201,
								10215
							],
							[
								10239,
								10252
							],
							[
								10336,
								10355
							],
							[
								10358,
								10372
							],
							[
								10434,
								10447
							],
							[
								10454,
								10465
							],
							[
								10468,
								10482
							],
							[
								10544,
								10557
							],
							[
								10561,
								10577
							],
							[
								10581,
								10596
							],
							[
								10603,
								10615
							],
							[
								10644,
								10657
							],
							[
								10661,
								10681
							],
							[
								10709,
								10721
							],
							[
								10724,
								10736
							],
							[
								10781,
								10798
							],
							[
								10837,
								10851
							],
							[
								10855,
								10868
							],
							[
								10875,
								10890
							],
							[
								10925,
								10938
							],
							[
								10942,
								10962
							],
							[
								10969,
								10982
							],
							[
								11001,
								11017
							],
							[
								11021,
								11034
							],
							[
								11038,
								11051
							],
							[
								11055,
								11069
							],
							[
								11104,
								11119
							],
							[
								11138,
								11150
							],
							[
								11153,
								11166
							],
							[
								11170,
								11190
							],
							[
								11197,
								11213
							],
							[
								11216,
								11229
							],
							[
								11233,
								11246
							],
							[
								11250,
								11270
							],
							[
								11277,
								11292
							],
							[
								11295,
								11308
							],
							[
								11312,
								11325
							],
							[
								11329,
								11349
							],
							[
								11381,
								11396
							],
							[
								11399,
								11414
							],
							[
								11488,
								11503
							],
							[
								11506,
								11521
							],
							[
								11591,
								11608
							],
							[
								11631,
								11646
							],
							[
								11649,
								11664
							],
							[
								11717,
								11729
							],
							[
								11732,
								11746
							],
							[
								11750,
								11763
							],
							[
								11916,
								11932
							],
							[
								12011,
								12025
							],
							[
								12029,
								12043
							],
							[
								12047,
								12067
							],
							[
								12071,
								12084
							],
							[
								12088,
								12102
							],
							[
								12110,
								12122
							],
							[
								12193,
								12205
							],
							[
								12209,
								12225
							],
							[
								12229,
								12243
							],
							[
								12251,
								12263
							],
							[
								12295,
								12315
							],
							[
								12318,
								12331
							],
							[
								12335,
								12355
							],
							[
								12469,
								12492
							],
							[
								12496,
								12520
							],
							[
								12539,
								12563
							],
							[
								12585,
								12600
							],
							[
								12603,
								12616
							],
							[
								12620,
								12640
							],
							[
								12647,
								12664
							],
							[
								12667,
								12687
							],
							[
								12695,
								12713
							],
							[
								12716,
								12730
							],
							[
								12734,
								12754
							],
							[
								12798,
								12813
							],
							[
								12816,
								12831
							],
							[
								12909,
								12924
							],
							[
								12927,
								12942
							],
							[
								12958,
								12970
							],
							[
								12973,
								12985
							],
							[
								13227,
								13247
							],
							[
								13649,
								13668
							],
							[
								13696,
								13715
							],
							[
								13719,
								13738
							],
							[
								13797,
								13816
							],
							[
								13927,
								13946
							],
							[
								13976,
								13995
							],
							[
								13999,
								14018
							],
							[
								14079,
								14098
							],
							[
								14218,
								14237
							],
							[
								14269,
								14288
							],
							[
								14292,
								14311
							],
							[
								14374,
								14393
							],
							[
								14536,
								14560
							],
							[
								14565,
								14570
							],
							[
								14622,
								14627
							],
							[
								14651,
								14655
							],
							[
								14697,
								14701
							],
							[
								14726,
								14730
							],
							[
								14754,
								14778
							],
							[
								14815,
								14839
							],
							[
								14843,
								14867
							],
							[
								14872,
								14876
							],
							[
								14891,
								14895
							],
							[
								15251,
								15256
							],
							[
								15686,
								15701
							],
							[
								15741,
								15755
							],
							[
								15805,
								15816
							],
							[
								15820,
								15844
							],
							[
								15884,
								15901
							],
							[
								15935,
								15962
							],
							[
								15975,
								16002
							],
							[
								16035,
								16052
							],
							[
								16115,
								16130
							],
							[
								16149,
								16158
							],
							[
								16207,
								16216
							],
							[
								16247,
								16258
							],
							[
								16382,
								16393
							],
							[
								16405,
								16416
							],
							[
								16419,
								16433
							],
							[
								16460,
								16475
							],
							[
								16498,
								16509
							],
							[
								16547,
								16566
							],
							[
								16569,
								16573
							],
							[
								16593,
								16610
							],
							[
								16633,
								16647
							],
							[
								16676,
								16680
							],
							[
								16687,
								16702
							],
							[
								16722,
								16732
							],
							[
								16871,
								16884
							],
							[
								16892,
								16896
							],
							[
								16900,
								16924
							],
							[
								17030,
								17043
							],
							[
								17082,
								17106
							],
							[
								17112,
								17123
							],
							[
								17150,
								17161
							],
							[
								17187,
								17196
							],
							[
								17220,
								17244
							],
							[
								17257,
								17261
							],
							[
								17275,
								17286
							],
							[
								17316,
								17329
							],
							[
								17351,
								17375
							],
							[
								17408,
								17432
							],
							[
								17540,
								17545
							],
							[
								17562,
								17583
							],
							[
								17603,
								17611
							],
							[
								17628,
								17649
							],
							[
								17717,
								17728
							],
							[
								17903,
								17914
							],
							[
								17984,
								17994
							],
							[
								18024,
								18035
							],
							[
								18051,
								18075
							],
							[
								18098,
								18118
							],
							[
								18121,
								18145
							],
							[
								18164,
								18184
							],
							[
								18210,
								18230
							],
							[
								18303,
								18322
							],
							[
								18326,
								18346
							],
							[
								18405,
								18424
							],
							[
								18442,
								18466
							],
							[
								18512,
								18523
							],
							[
								18545,
								18549
							],
							[
								18568,
								18579
							],
							[
								18596,
								18620
							],
							[
								18646,
								18655
							],
							[
								18677,
								18701
							],
							[
								18786,
								18810
							],
							[
								18857,
								18869
							],
							[
								18909,
								18920
							],
							[
								18931,
								18942
							],
							[
								18956,
								18967
							],
							[
								18981,
								18992
							],
							[
								19005,
								19016
							],
							[
								19030,
								19041
							],
							[
								19050,
								19061
							],
							[
								19095,
								19106
							],
							[
								19120,
								19131
							],
							[
								19141,
								19152
							],
							[
								19163,
								19181
							],
							[
								19197,
								19221
							],
							[
								19277,
								19289
							],
							[
								19292,
								19304
							],
							[
								19308,
								19332
							],
							[
								19358,
								19382
							],
							[
								19416,
								19434
							],
							[
								19480,
								19504
							],
							[
								19565,
								19577
							],
							[
								19580,
								19592
							],
							[
								19596,
								19611
							],
							[
								19615,
								19627
							],
							[
								19631,
								19651
							],
							[
								19655,
								19673
							],
							[
								19677,
								19698
							],
							[
								19702,
								19714
							],
							[
								19718,
								19730
							],
							[
								19734,
								19749
							],
							[
								19753,
								19769
							],
							[
								19773,
								19786
							],
							[
								19790,
								19804
							],
							[
								19808,
								19824
							],
							[
								19828,
								19840
							],
							[
								19844,
								19856
							],
							[
								19860,
								19872
							],
							[
								19876,
								19891
							],
							[
								19895,
								19912
							],
							[
								19916,
								19929
							],
							[
								19933,
								19949
							],
							[
								19953,
								19968
							],
							[
								19972,
								19986
							],
							[
								19990,
								20010
							],
							[
								20014,
								20030
							],
							[
								20034,
								20047
							],
							[
								20051,
								20070
							],
							[
								20074,
								20087
							],
							[
								20091,
								20105
							],
							[
								20109,
								20120
							],
							[
								20199,
								20211
							],
							[
								20345,
								20363
							],
							[
								20469,
								20485
							],
							[
								20710,
								20721
							],
							[
								20728,
								20750
							],
							[
								20754,
								20776
							],
							[
								20782,
								20793
							],
							[
								20851,
								20862
							],
							[
								20868,
								20879
							],
							[
								20983,
								21005
							],
							[
								21094,
								21113
							],
							[
								21152,
								21162
							],
							[
								21166,
								21181
							],
							[
								21185,
								21195
							],
							[
								21199,
								21203
							],
							[
								21207,
								21212
							],
							[
								21216,
								21225
							],
							[
								21301,
								21316
							],
							[
								21336,
								21358
							],
							[
								21470,
								21485
							],
							[
								21619,
								21632
							],
							[
								21673,
								21693
							],
							[
								21758,
								21771
							],
							[
								21812,
								21832
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"HAVE_SPAWN",
							"HAVE_SYSINFO",
							"HAVE_SYSINFO",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"COMMON_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"libutf_SOURCES",
							"char_utils_SOURCES",
							"libutf_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"stream_SOURCES",
							"queue_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"token_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"location_SOURCES",
							"token_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"textcode_SOURCES",
							"libutf_SOURCES",
							"tutf8e_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"archive_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSM",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QJSM_LIBDIR",
							"QJSM_MODULE",
							"LIBRARY_SUFFIX",
							"QUICKJS_MODULES",
							"QJSM_LIBDIR",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM",
							"TEST_SOURCE",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIBLEXER",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"archive_SOURCES",
							"blob_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"child_process_SOURCES",
							"deep_SOURCES",
							"gpio_SOURCES",
							"inspect_SOURCES",
							"js_utils_SOURCES",
							"lexer_SOURCES",
							"libutf_SOURCES",
							"location_SOURCES",
							"misc_SOURCES",
							"mmap_SOURCES",
							"path_SOURCES",
							"pointer_SOURCES",
							"predicate_SOURCES",
							"queue_SOURCES",
							"repeater_SOURCES",
							"sockets_SOURCES",
							"stream_SOURCES",
							"syscallerror_SOURCES",
							"textcode_SOURCES",
							"token_SOURCES",
							"tree_walker_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"xml_SOURCES",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QJSM_LDADD",
							"QUICKJS_LIBRARY",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"INSTALL_SCRIPTS",
							"CMAKE_COMMAND",
							"CMAKE_INSTALL_PREFIX",
							"CMAKE_COMMAND",
							"CMAKE_INSTALL_PREFIX"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAAEWAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					134,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								1726,
								1740
							],
							[
								1892,
								1906
							],
							[
								1991,
								2005
							],
							[
								2080,
								2089
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAABFgAAUFJPSkVDVF9OQU1FCkNNQUtFX0NfU1RBTkRBUkQKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfRVhFQ1VUQUJMRV9TVUZGSVgKQlVJTERfU0hBUkVEX0xJQlMKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfV0lORE9XU19FWFBPUlRfQUxMX1NZTUJPTFMKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKUwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTQwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfUkVRVUlSRURfUVVJRVQKSEFWRV9QT1NJWF9TUEFXTlAKSEFWRV9TUEFXTgpIQVZFX1NZU0lORk8KSEFWRV9TWVNJTkZPCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUlMKUVVJQ0tKU19MSUJSQVJZX0RJUgpRVUlDS0pTX01PRFVMRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX1NZU1JPT1QKQ01BS0VfVE9PTENIQUlOX0ZJTEUKQ01BS0VfVkVSQk9TRV9NQUtFRklMRQpDTUFLRV9CVUlMRF9UWVBFCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpMSUJfTU9EVUxFUwpRVUlDS0pTX0gKQ09NTU9OX0hFQURFUlMKQ1VUSUxTX0gKUVVJQ0tKU19ICiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKQ09NTU9OX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgbGlidXRmX1NPVVJDRVMKICBjaGFyX3V0aWxzX1NPVVJDRVMKICBsaWJ1dGZfU09VUkNFUwogIHF1ZXVlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgY2hhcl91dGlsc19TT1VSQ0VTCiAganNfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgc3RyZWFtX1NPVVJDRVMKICBxdWV1ZV9TT1VSQ0VTCiAganNfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHByZWRpY2F0ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB0b2tlbl9TT1VSQ0VTCiAgbG9jYXRpb25fU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgY2hpbGRfcHJvY2Vzc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgZGVlcF9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICBkZWVwX0xJQlJBUklFUwogIGluc3BlY3RfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHRyZWVfd2Fsa2VyX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB4bWxfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICBpbnNwZWN0X1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwcmVkaWNhdGVfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHBvaW50ZXJfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIGxleGVyX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgdG9rZW5fU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGxleGVyX0xJQlJBUklFUwogIG1tYXBfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHJlcGVhdGVyX1NPVVJDRVMKICBxdWV1ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgcXVldWVfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfTElCUkFSSUVTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgYmxvYl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdGV4dGNvZGVfU09VUkNFUwogIGxpYnV0Zl9TT1VSQ0VTCiAgdHV0ZjhlX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIG1pc2NfU09VUkNFUwogIHBhdGhfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGdwaW9fU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCkxpYkFyY2hpdmVfSU5DTFVERV9ESVJTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKICBhcmNoaXZlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBhcmNoaXZlX0xJQlJBUklFUwpMaWJBcmNoaXZlX0xJQlJBUklFUwpRSlNNX0VYVFJBX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwogIG1tYXBfU09VUkNFUwogIG1tYXBfU09VUkNFUwpDTUFLRV9SRVFVSVJFRF9RVUlFVApDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVFMKVEVTVFMKVEVTVApCQVNFCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTTQpURVNUClRFU1RTClFVSUNLSlNfTU9EVUxFUwpTSEFSRURfVEFSR0VUUwpRSlNNX0xJQkRJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfSU1QT1JUX0xJQlJBUllfUFJFRklYCkNNQUtFX0lNUE9SVF9MSUJSQVJZX1NVRkZJWApDTUFLRV9TWVNURU1fTkFNRQpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRSlNNX0xJQkRJUgpRSlNNX01PRFVMRQpMSUJSQVJZX1NVRkZJWApRVUlDS0pTX01PRFVMRVMKUUpTTV9MSUJESVIKICBwcmVkaWNhdGVfTElCUkFSSUVTCkxJQk0KICBzb2NrZXRzX0xJQlJBUklFUwogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9MSUJSQVJJRVMKICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNClRFU1RfU09VUkNFClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpMSUJKUwpRVUlDS0pTX0pTX01PRFVMRV9ESVIKTElCTEVYRVIKUVVJQ0tKU19KU19NT0RVTEVfRElSCkxJQl9NT0RVTEVTCkxJQl9NT0RVTEVTCkxJQl9NT0RVTEUKTElCX01PRFVMRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfU09VUkNFU19ST09UCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSClFVSUNLSlNfU09VUkNFU19ST09UClFVSUNLSlNfSU5DTFVERV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRVNfRElSClFKU0MKTU9EVUxFU19ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU0NfREVQUwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpRSlNNX0VYVFJBX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpRSlNNX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpUUkFOU1BPUlRfUExBVEZPUk0KQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpRSlNNX1NPVVJDRVMKICBhcmNoaXZlX1NPVVJDRVMKICBibG9iX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIGNoYXJfdXRpbHNfU09VUkNFUwogIGNoaWxkX3Byb2Nlc3NfU09VUkNFUwogIGRlZXBfU09VUkNFUwogIGdwaW9fU09VUkNFUwogIGluc3BlY3RfU09VUkNFUwogIGpzX3V0aWxzX1NPVVJDRVMKICBsZXhlcl9TT1VSQ0VTCiAgbGlidXRmX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgbWlzY19TT1VSQ0VTCiAgbW1hcF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcG9pbnRlcl9TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICBxdWV1ZV9TT1VSQ0VTCiAgcmVwZWF0ZXJfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHN0cmVhbV9TT1VSQ0VTCiAgc3lzY2FsbGVycm9yX1NPVVJDRVMKICB0ZXh0Y29kZV9TT1VSQ0VTCiAgdG9rZW5fU09VUkNFUwogIHRyZWVfd2Fsa2VyX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB4bWxfU09VUkNFUwpRSlNNX1NPVVJDRVMKUUpTX01PRFVMRVNfU1RBVElDCkNPTVBJTEVEX01PRFVMRVMKUUpTTV9MSUJESVIKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTClFKU01fTElCRElSCkxJTktfRVhQT1JUClFKU01fTElCRElSClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKUVVJQ0tKU19MSUJSQVJZX0RJUgpRSlNNX0xEQUREClFVSUNLSlNfTElCUkFSWQpMSUJQVEhSRUFECkxJQk0KTElCREwKTElCV1MyXzMyClFVSUNLSlNfVkVSU0lPTgpRVUlDS0pTX0lOU1RBTExfUFJFRklYCklOU1RBTExfU0NSSVBUUwpDTUFLRV9DT01NQU5ECkNNQUtFX0lOU1RBTExfUFJFRklYCkNNQUtFX0NPTU1BTkQKQ01BS0VfSU5TVEFMTF9QUkVGSVgAAAAAAAAAAKEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					135,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAAAATm9uV1MgPSB0ID0+CldTID0gdCA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					136,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								277,
								289
							],
							[
								320,
								329
							],
							[
								355,
								408
							],
							[
								654,
								676
							],
							[
								1047,
								1055
							],
							[
								1130,
								1136
							],
							[
								1726,
								1740
							],
							[
								1892,
								1906
							],
							[
								1991,
								2005
							],
							[
								2080,
								2089
							]
						],
						"symlist":
						[
							"NonWS = t =>",
							"WS = t =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>"
						]
					},
					"AQAAAAAAAAAAAAAAoQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				]
			]
		},
		{
			"file": "extract-structs.js",
			"settings":
			{
				"buffer_size": 2411,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJoEAAAAAAAAmwQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoEAAAAAAAAmgQAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAJsEAAAAAAAAnAQAAAAAAAAAAAAAnAQAAAAAAACdBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsEAAAAAAAAmwQAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAJwEAAAAAAAAnAQAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0EAAAAAAAAnQQAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJwEAAAAAAAAngQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwEAAAAAAAAnAQAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "utf-8"
					},
					"BQAAAJ0EAAAAAAAAngQAAAAAAAAAAAAAngQAAAAAAACfBAAAAAAAAAAAAACfBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAAoQQAAAAAAAAAAAAAoQQAAAAAAACiBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0EAAAAAAAAnQQAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAKMEAAAAAAAApAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMEAAAAAAAAowQAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					2,
					"left_delete",
					null,
					"AgAAAKMEAAAAAAAAowQAAAAAAAABAAAAMKIEAAAAAAAAogQAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQEAAAAAAAApAQAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAKIEAAAAAAAAowQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIEAAAAAAAAogQAAAAAAAAAAAAAAADwvw"
				],
				[
					46,
					1,
					"paste",
					null,
					"AQAAAKoEAAAAAAAAxgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoEAAAAAAAAqgQAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMYEAAAAAAAAxwQAAAAAAAAAAAAAxwQAAAAAAADLBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYEAAAAAAAAxgQAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAALYEAAAAAAAAtgQAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcEAAAAAAAAtwQAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "`"
					},
					"AQAAALYEAAAAAAAAtwQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYEAAAAAAAAtgQAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					1,
					"paste",
					null,
					"AQAAALcEAAAAAAAAxQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcEAAAAAAAAtwQAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "'${file'"
					},
					"CAAAAMUEAAAAAAAAxgQAAAAAAAAAAAAAxgQAAAAAAADHBAAAAAAAAAAAAADHBAAAAAAAAMgEAAAAAAAAAAAAAMgEAAAAAAAAyQQAAAAAAAAAAAAAyQQAAAAAAADKBAAAAAAAAAAAAADKBAAAAAAAAMsEAAAAAAAAAAAAAMsEAAAAAAAAzAQAAAAAAAAAAAAAzAQAAAAAAADNBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUEAAAAAAAAxQQAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"left_delete",
					null,
					"AQAAAMwEAAAAAAAAzAQAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0EAAAAAAAAzQQAAAAAAAAAAAAAAADwvw"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "}',"
					},
					"AwAAAMwEAAAAAAAAzQQAAAAAAAAAAAAAzQQAAAAAAADOBAAAAAAAAAAAAADOBAAAAAAAAM8EAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " 'utf-80"
					},
					"CAAAAM8EAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADRBAAAAAAAAAAAAADRBAAAAAAAANIEAAAAAAAAAAAAANIEAAAAAAAA0wQAAAAAAAAAAAAA0wQAAAAAAADUBAAAAAAAAAAAAADUBAAAAAAAANUEAAAAAAAAAAAAANUEAAAAAAAA1gQAAAAAAAAAAAAA1gQAAAAAAADXBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8EAAAAAAAAzwQAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAANYEAAAAAAAA1gQAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcEAAAAAAAA1wQAAAAAAAAAAAAAAADwvw"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "')"
					},
					"AgAAANYEAAAAAAAA1wQAAAAAAAAAAAAA1wQAAAAAAADYBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYEAAAAAAAA1gQAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANgEAAAAAAAA2QQAAAAAAAAAAAAA2QQAAAAAAADaBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgEAAAAAAAA2AQAAAAAAAAAAAAAAADwvw"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANoEAAAAAAAA2wQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoEAAAAAAAA2gQAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"left_delete",
					null,
					"AQAAANoEAAAAAAAA2gQAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsEAAAAAAAA2wQAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "`"
					},
					"AQAAANoEAAAAAAAA2wQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoEAAAAAAAA2gQAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": ",tr"
					},
					"BAAAANsEAAAAAAAA3AQAAAAAAAAAAAAA3AQAAAAAAADcBAAAAAAAAA0AAABsZXhlcicsIGxleGVy3AQAAAAAAADdBAAAAAAAAAAAAADdBAAAAAAAAN4EAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsEAAAAAAAA6AQAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"left_delete",
					null,
					"AQAAAN0EAAAAAAAA3QQAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4EAAAAAAAA3gQAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAN0EAAAAAAAA3gQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0EAAAAAAAA3QQAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					2,
					"left_delete",
					null,
					"AgAAAN0EAAAAAAAA3QQAAAAAAAABAAAAc9wEAAAAAAAA3AQAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4EAAAAAAAA3gQAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "str"
					},
					"AwAAANwEAAAAAAAA3QQAAAAAAAAAAAAA3QQAAAAAAADeBAAAAAAAAAAAAADeBAAAAAAAAN8EAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwEAAAAAAAA3AQAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " f"
					},
					"AgAAANwEAAAAAAAA3QQAAAAAAAAAAAAA3QQAAAAAAADeBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwEAAAAAAAA3AQAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"left_delete",
					null,
					"AQAAAN0EAAAAAAAA3QQAAAAAAAABAAAAZg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4EAAAAAAAA3gQAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "typeof"
					},
					"BgAAAN0EAAAAAAAA3gQAAAAAAAAAAAAA3gQAAAAAAADfBAAAAAAAAAAAAADfBAAAAAAAAOAEAAAAAAAAAAAAAOAEAAAAAAAA4QQAAAAAAAAAAAAA4QQAAAAAAADiBAAAAAAAAAAAAADiBAAAAAAAAOMEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0EAAAAAAAA3QQAAAAAAAAAAAAAAADwvw"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOMEAAAAAAAA5AQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMEAAAAAAAA4wQAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAN0EAAAAAAAA3gQAAAAAAAAAAAAA3gQAAAAAAADeBAAAAAAAAAYAAAB0eXBlb2Y",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0EAAAAAAAA4wQAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"right_delete",
					null,
					"AQAAADoEAAAAAAAAOgQAAAAAAAABAAAAQA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoEAAAAAAAAOgQAAAAAAAAAAAAAAADwvw"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "fui"
					},
					"AwAAADoEAAAAAAAAOwQAAAAAAAAAAAAAOwQAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAAD0EAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoEAAAAAAAAOgQAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					2,
					"left_delete",
					null,
					"AgAAADwEAAAAAAAAPAQAAAAAAAABAAAAaTsEAAAAAAAAOwQAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0EAAAAAAAAPQQAAAAAAAAAAAAAAADwvw"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "iles"
					},
					"BAAAADsEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAAA9BAAAAAAAAAAAAAA9BAAAAAAAAD4EAAAAAAAAAAAAAD4EAAAAAAAAPwQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsEAAAAAAAAOwQAAAAAAAAAAAAAAADwvw"
				],
				[
					156,
					5,
					"left_delete",
					null,
					"BQAAAD4EAAAAAAAAPgQAAAAAAAABAAAAcz0EAAAAAAAAPQQAAAAAAAABAAAAZTwEAAAAAAAAPAQAAAAAAAABAAAAbDsEAAAAAAAAOwQAAAAAAAABAAAAaToEAAAAAAAAOgQAAAAAAAABAAAAZg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8EAAAAAAAAPwQAAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "@"
					},
					"AQAAADoEAAAAAAAAOwQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoEAAAAAAAAOgQAAAAAAAAAAAAAAADwvw"
				],
				[
					173,
					1,
					"cut",
					null,
					"AQAAAKkDAAAAAAAAqQMAAAAAAABTAAAAICAgICAgb3V0cHV0OiBbdHJ1ZSwgZmlsZSA9PiAob3V0cHV0ID0gc3RkLm9wZW4oKG91dHB1dE5hbWUgPSBmaWxlKSwgJ3crJykpLCAnbyddLAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkDAAAAAAAA/AMAAAAAAAAAAAAAAADwvw"
				],
				[
					174,
					2,
					"paste",
					null,
					"AgAAAKkDAAAAAAAA/AMAAAAAAAAAAAAA/AMAAAAAAABPBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkDAAAAAAAAqQMAAAAAAAAAAAAAAADwvw"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "debug"
					},
					"BgAAAAIEAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADBAAAAAAAAAYAAABvdXRwdXQDBAAAAAAAAAQEAAAAAAAAAAAAAAQEAAAAAAAABQQAAAAAAAAAAAAABQQAAAAAAAAGBAAAAAAAAAAAAAAGBAAAAAAAAAcEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIEAAAAAAAACAQAAAAAAAAAAAAAAADwvw"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "fa√∂"
					},
					"BAAAAAoEAAAAAAAACwQAAAAAAAAAAAAACwQAAAAAAAALBAAAAAAAAAQAAAB0cnVlCwQAAAAAAAAMBAAAAAAAAAAAAAAMBAAAAAAAAA0EAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoEAAAAAAAADgQAAAAAAAAAAAAAAADwvw"
				],
				[
					187,
					1,
					"left_delete",
					null,
					"AQAAAAwEAAAAAAAADAQAAAAAAAACAAAAw7Y",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0EAAAAAAAADQQAAAAAAAAAAAAAAADwvw"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "lse"
					},
					"AwAAAAwEAAAAAAAADQQAAAAAAAAAAAAADQQAAAAAAAAOBAAAAAAAAAAAAAAOBAAAAAAAAA8EAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwEAAAAAAAADAQAAAAAAAAAAAAAAADwvw"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "debug,"
					},
					"BgAAAHUDAAAAAAAAdgMAAAAAAAAAAAAAdgMAAAAAAAB3AwAAAAAAAAAAAAB3AwAAAAAAAHgDAAAAAAAAAAAAAHgDAAAAAAAAeQMAAAAAAAAAAAAAeQMAAAAAAAB6AwAAAAAAAAAAAAB6AwAAAAAAAHsDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUDAAAAAAAAdQMAAAAAAAAAAAAAAADwvw"
				],
				[
					202,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAABcEAAAAAAAAFwQAAAAAAAAEAAAAZmlsZRcEAAAAAAAAHQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcEAAAAAAAAGwQAAAAAAAAAAAAAAADwvw"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AgAAABgEAAAAAAAAGQQAAAAAAAAAAAAAGQQAAAAAAAAZBAAAAAAAAAQAAABmaWxl",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgEAAAAAAAAHAQAAAAAAAAAAAAAAADwvw"
				],
				[
					204,
					1,
					"right_delete",
					null,
					"AQAAABkEAAAAAAAAGQQAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkEAAAAAAAAGQQAAAAAAAAAAAAAAADwvw"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "debug"
					},
					"BQAAAB0EAAAAAAAAHgQAAAAAAAAAAAAAHgQAAAAAAAAfBAAAAAAAAAAAAAAfBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAIQQAAAAAAAAAAAAAIQQAAAAAAAAiBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0EAAAAAAAAHQQAAAAAAAAAAAAAAADwvw"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAACIEAAAAAAAAIwQAAAAAAAAAAAAAIwQAAAAAAAAkBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIEAAAAAAAAIgQAAAAAAAAAAAAAAADwvw"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": " (debug|0)"
					},
					"CgAAACQEAAAAAAAAJQQAAAAAAAAAAAAAJQQAAAAAAAAmBAAAAAAAAAAAAAAmBAAAAAAAACcEAAAAAAAAAAAAACcEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAApBAAAAAAAAAAAAAApBAAAAAAAACoEAAAAAAAAAAAAACoEAAAAAAAAKwQAAAAAAAAAAAAAKwQAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAAC0EAAAAAAAAAAAAAC0EAAAAAAAALgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAADwvw"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "+1"
					},
					"AgAAAC4EAAAAAAAALwQAAAAAAAAAAAAALwQAAAAAAAAwBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4EAAAAAAAALgQAAAAAAAAAAAAAAADwvw"
				],
				[
					212,
					1,
					"right_delete",
					null,
					"AQAAADAEAAAAAAAAMAQAAAAAAAAuAAAAKG91dHB1dCA9IHN0ZC5vcGVuKChvdXRwdXROYW1lID0gZmlsZSksICd3KycpKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAEAAAAAAAAXgQAAAAAAAAAAAAAAADwvw"
				],
				[
					214,
					1,
					"right_delete",
					null,
					"AQAAADMEAAAAAAAAMwQAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMEAAAAAAAAMwQAAAAAAAAAAAAAAADwvw"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAADMEAAAAAAAANAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMEAAAAAAAAMwQAAAAAAAAAAAAAAADwvw"
				],
				[
					220,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACUCgAAIyEvdXNyL2Jpbi9lbnYgcWpzbQppbXBvcnQgKiBhcyBvcyBmcm9tICdvcyc7CmltcG9ydCAqIGFzIHN0ZCBmcm9tICdzdGQnOwppbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7CmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IENMZXhlciBmcm9tICdsaWIvbGV4ZXIvYy5qcyc7CmltcG9ydCB7IGdldE9wdCwgZXNjYXBlLCBleHRlbmRBcnJheSB9IGZyb20gJ3V0aWwnOwoKZXh0ZW5kQXJyYXkoKTsKCmNvbnN0IE5vbldTID0gdCA9PiB0LnR5cGUgIT0gJ3doaXRlc3BhY2UnOwpjb25zdCBXUyA9IHQgPT4gdC50eXBlID09ICd3aGl0ZXNwYWNlJzsKCmZ1bmN0aW9uIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpIHsKICBsZXQgaSA9IDAsCiAgICB0b2ssCiAgICBhcnIgPSBbLi4uYXJnc107CgogIHdoaWxlKCh0b2sgPSBsZXhlci5uZXh0VG9rZW4oKSkpIHsKICAgIC8vY29uc29sZS5sb2coJ3BhcnNlJywgeyBpOiBpKyssIHRvaywgZm46IGZuICsgJycgfSk7CiAgICBsZXQgdiA9IGZuKHRvaywgYXJyKTsKICAgIGlmKHYgPCAwKSBicmVhazsKICAgIGFyci5wdXNoKHRvayk7CiAgICBpZih2KSBicmVhazsKICB9CiAgcmV0dXJuIGFycjsKfQoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUocHJvY2Vzcy5zdGRlcnIsIHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgbWF4U3RyaW5nTGVuZ3RoOiAxMDAsCiAgICAgIG1heEFycmF5TGVuZ3RoOiBJbmZpbml0eSwKICAgICAgY29tcGFjdDogZmFsc2UKICAgIH0KICB9KTsKCiAgbGV0IG91dHB1dE5hbWUsZGVidWcsCiAgICBvdXRwdXQgPSBzdGQub3V0OwogIGxldCBwYXJhbXMgPSBnZXRPcHQoCiAgICB7CiAgICAgIG91dHB1dDogW3RydWUsIGZpbGUgPT4gKG91dHB1dCA9IHN0ZC5vcGVuKChvdXRwdXROYW1lID0gZmlsZSksICd3KycpKSwgJ28nXSwKICAgICAgZGVidWc6IFtmYWxzZSwgKCkgPT4gZGVidWcgPSAoZGVidWd8MCkrMSwgJ3gnXSwKICAgICAgJ0AnOiAnZmlsZXMnCiAgICB9LAogICAgYXJncwogICk7CiAgbGV0IGZpbGVzID0gcGFyYW1zWydAJ107CgogIGZvcihsZXQgZmlsZSBvZiBmaWxlcykgewogICAgY29uc29sZS5sb2coJ2ZpbGUnLCBmaWxlKTsKCiAgICBsZXQgc3RyID0gc3RkLmxvYWRGaWxlKGZpbGUsICd1dGYtOCcpOwogICAgY29uc29sZS5sb2coYCBzdGQubG9hZEZpbGUoJyR7ZmlsZX0nLCAndXRmLTgnKSA9YCwgICBzdHIpOwogICAgY29uc29sZS5sb2coJ3N0cicsIHN0ci5zcGxpdCgnXG4nKVswXSk7CgogICAgbGV0IGxleGVyID0gbmV3IENMZXhlcihzdHIsIGZpbGUpOwogICAgLyogIGNvbnNvbGUubG9nKCdsZXhlcicsIGxleGVyKTsKICAgIGNvbnNvbGUubG9nKGBsZXhlci50b2tlbnNgLCBsZXhlci50b2tlbnMpOwogICAgY29uc29sZS5sb2coYGxleGVyLnJ1bGVzWydzdHJ1Y3QnXWAsIGxleGVyLnJ1bGVzWydzdHJ1Y3QnXSk7CiAgICBjb25zb2xlLmxvZyhgbGV4ZXIucnVsZXNbJ3R5cGVkZWYnXWAsIGxleGVyLnJ1bGVzWyd0eXBlZGVmJ10pOwogICAgY29uc29sZS5sb2coYGxleGVyLmdldFJ1bGUoJ3N0cnVjdCcpYCwgbGV4ZXIuZ2V0UnVsZSgnc3RydWN0JykpOyovCiAgICBjb25zdCB7IHJ1bGVzLCB0b2tlbnMgfSA9IGxleGVyOwoKICAgIC8vbGV0IGlkOyB3aGlsZSgoaWQgPSBsZXhlci5uZXh0KCkpKQogICAgZm9yKGxldCBpZCBvZiBsZXhlcikgewogICAgICBpZihpZCA9PSBydWxlc1snc3RydWN0J10gfHwgaWQgPT0gcnVsZXNbJ3R5cGVkZWYnXSkgewogICAgICAgIGNvbnN0IHsgbG9jLCB0b2tlbjogdG9rIH0gPSBsZXhlcjsKCiAgICAgICAgaWYobG9jLmNvbHVtbiA9PSAxKSB7CiAgICAgICAgICBsZXQgc2VxLAogICAgICAgICAgICBsaW5lID0gbG9jLmxpbmUsCiAgICAgICAgICAgIHRleHQgPSAnJzsKICAgICAgICAgIHNlcSA9IHBhcnNlKGxleGVyLCAodG9rLCBhcnIpID0+IHRvay5sb2MubGluZSAhPSBsaW5lICYmIC0xLCB0b2spOwogICAgICAgICAgY29uc3QgbGFzdCA9IHNlcS5maWx0ZXIoTm9uV1MpLmF0KC0xKTsKICAgICAgICAgIGlmKGxhc3QudHlwZSA9PSAnbGJyYWNlJykgewogICAgICAgICAgICBzZXEgPSBwYXJzZShsZXhlciwgKHRvaywgYXJyKSA9PiB0b2subG9jLmNvbHVtbiA9PSAxICYmIHRvay50eXBlID09ICdyYnJhY2UnLCAuLi5zZXEpOwogICAgICAgICAgICBzZXEgPSBwYXJzZShsZXhlciwgKHRvaywgYXJyKSA9PiB0b2sudHlwZSA9PSAnc2VtaScsIC4uLnNlcSk7CiAgICAgICAgICB9CiAgICAgICAgICBvdXRwdXQucHV0cyhzZXEucmVkdWNlKChzLCB0KSA9PiBzICsgdC5sZXhlbWUsICcnKS50cmltKCkgKyAnXG5cbicpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgb3V0cHV0LmZsdXNoKCk7CiAgICB9CiAgfQoKICBpZihvdXRwdXROYW1lKSBjb25zb2xlLmxvZyhvdXRwdXQudGVsbCgpICsgYCBieXRlcyB3cml0dGVuIHRvICcke291dHB1dE5hbWV9J2ApOwogIG91dHB1dC5jbG9zZSgpOwp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvci5tZXNzYWdlfVxuJHtlcnJvci5zdGFja31gKTsKICBzdGQuZXhpdCgxKTsKfQoAAAAAAAAAAJ0KAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQEAAAAAAAANAQAAAAAAAAAAAAAAADwvw"
				],
				[
					251,
					1,
					"paste",
					null,
					"AQAAAGMDAAAAAAAAggMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMDAAAAAAAAYwMAAAAAAAAAAAAAAADwvw"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BQAAAHQDAAAAAAAAdQMAAAAAAAAAAAAAdQMAAAAAAAB1AwAAAAAAAAQAAABmaWxldQMAAAAAAAB2AwAAAAAAAAAAAAB2AwAAAAAAAHcDAAAAAAAAAAAAAHcDAAAAAAAAeAMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQDAAAAAAAAeAMAAAAAAAAAAAAAAADwvw"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BQAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB8AwAAAAAAAAQAAABmaWxlfAMAAAAAAAB9AwAAAAAAAAAAAAB9AwAAAAAAAH4DAAAAAAAAAAAAAH4DAAAAAAAAfwMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsDAAAAAAAAfwMAAAAAAAAAAAAAAADwvw"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "scriptArgs"
					},
					"CwAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB8AwAAAAAAAAQAAABhcmdzfAMAAAAAAAB9AwAAAAAAAAAAAAB9AwAAAAAAAH4DAAAAAAAAAAAAAH4DAAAAAAAAfwMAAAAAAAAAAAAAfwMAAAAAAACAAwAAAAAAAAAAAACAAwAAAAAAAIEDAAAAAAAAAAAAAIEDAAAAAAAAggMAAAAAAAAAAAAAggMAAAAAAACDAwAAAAAAAAAAAACDAwAAAAAAAIQDAAAAAAAAAAAAAIQDAAAAAAAAhQMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsDAAAAAAAAfwMAAAAAAAAAAAAAAADwvw"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAGcDAAAAAAAAaAMAAAAAAAAAAAAAaAMAAAAAAABpAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcDAAAAAAAAZwMAAAAAAAAAAAAAAADwvw"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABgFAAAAAAAAGQUAAAAAAAAAAAAAGQUAAAAAAAAaBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgFAAAAAAAAGAUAAAAAAAAAAAAAAADwvw"
				],
				[
					294,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADGCgAAIyEvdXNyL2Jpbi9lbnYgcWpzbQppbXBvcnQgKiBhcyBvcyBmcm9tICdvcyc7CmltcG9ydCAqIGFzIHN0ZCBmcm9tICdzdGQnOwppbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7CmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IENMZXhlciBmcm9tICdsaWIvbGV4ZXIvYy5qcyc7CmltcG9ydCB7IGdldE9wdCwgZXNjYXBlLCBleHRlbmRBcnJheSB9IGZyb20gJ3V0aWwnOwoKZXh0ZW5kQXJyYXkoKTsKCmNvbnN0IE5vbldTID0gdCA9PiB0LnR5cGUgIT0gJ3doaXRlc3BhY2UnOwpjb25zdCBXUyA9IHQgPT4gdC50eXBlID09ICd3aGl0ZXNwYWNlJzsKCmZ1bmN0aW9uIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpIHsKICBsZXQgaSA9IDAsCiAgICB0b2ssCiAgICBhcnIgPSBbLi4uYXJnc107CgogIHdoaWxlKCh0b2sgPSBsZXhlci5uZXh0VG9rZW4oKSkpIHsKICAgIC8vY29uc29sZS5sb2coJ3BhcnNlJywgeyBpOiBpKyssIHRvaywgZm46IGZuICsgJycgfSk7CiAgICBsZXQgdiA9IGZuKHRvaywgYXJyKTsKICAgIGlmKHYgPCAwKSBicmVhazsKICAgIGFyci5wdXNoKHRvayk7CiAgICBpZih2KSBicmVhazsKICB9CiAgcmV0dXJuIGFycjsKfQoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUocHJvY2Vzcy5zdGRlcnIsIHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgbWF4U3RyaW5nTGVuZ3RoOiAxMDAsCiAgICAgIG1heEFycmF5TGVuZ3RoOiBJbmZpbml0eSwKICAgICAgY29tcGFjdDogZmFsc2UKICAgIH0KICB9KTsKICAgIC8vY29uc29sZS5sb2coJ2FyZ3MnLCBzY3JpcHRBcmdzKTsKCiAgbGV0IG91dHB1dE5hbWUsCiAgICBkZWJ1ZywKICAgIG91dHB1dCA9IHN0ZC5vdXQ7CiAgbGV0IHBhcmFtcyA9IGdldE9wdCgKICAgIHsKICAgICAgb3V0cHV0OiBbdHJ1ZSwgZmlsZSA9PiAob3V0cHV0ID0gc3RkLm9wZW4oKG91dHB1dE5hbWUgPSBmaWxlKSwgJ3crJykpLCAnbyddLAogICAgICBkZWJ1ZzogW2ZhbHNlLCAoKSA9PiAoZGVidWcgPSAoZGVidWcgfCAwKSArIDEpLCAneCddLAogICAgICAnQCc6ICdmaWxlcycKICAgIH0sCiAgICBhcmdzCiAgKTsKICBsZXQgZmlsZXMgPSBwYXJhbXNbJ0AnXTsKCiAgZm9yKGxldCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zb2xlLmxvZygnZmlsZScsIGZpbGUpOwoKICAgIGxldCBzdHIgPSBzdGQubG9hZEZpbGUoZmlsZSwgJ3V0Zi04Jyk7CiAgICAvL2NvbnNvbGUubG9nKGAgc3RkLmxvYWRGaWxlKCcke2ZpbGV9JywgJ3V0Zi04JykgPWAsIHN0cik7CiAgICBjb25zb2xlLmxvZygnc3RyJywgc3RyLnNwbGl0KCdcbicpWzBdKTsKCiAgICBsZXQgbGV4ZXIgPSBuZXcgQ0xleGVyKHN0ciwgZmlsZSk7CiAgICAvKiAgY29uc29sZS5sb2coJ2xleGVyJywgbGV4ZXIpOwogICAgY29uc29sZS5sb2coYGxleGVyLnRva2Vuc2AsIGxleGVyLnRva2Vucyk7CiAgICBjb25zb2xlLmxvZyhgbGV4ZXIucnVsZXNbJ3N0cnVjdCddYCwgbGV4ZXIucnVsZXNbJ3N0cnVjdCddKTsKICAgIGNvbnNvbGUubG9nKGBsZXhlci5ydWxlc1sndHlwZWRlZiddYCwgbGV4ZXIucnVsZXNbJ3R5cGVkZWYnXSk7CiAgICBjb25zb2xlLmxvZyhgbGV4ZXIuZ2V0UnVsZSgnc3RydWN0JylgLCBsZXhlci5nZXRSdWxlKCdzdHJ1Y3QnKSk7Ki8KICAgIGNvbnN0IHsgcnVsZXMsIHRva2VucyB9ID0gbGV4ZXI7CgogICAgLy9sZXQgaWQ7IHdoaWxlKChpZCA9IGxleGVyLm5leHQoKSkpCiAgICBmb3IobGV0IGlkIG9mIGxleGVyKSB7CiAgICAgIGlmKGlkID09IHJ1bGVzWydzdHJ1Y3QnXSB8fCBpZCA9PSBydWxlc1sndHlwZWRlZiddKSB7CiAgICAgICAgY29uc3QgeyBsb2MsIHRva2VuOiB0b2sgfSA9IGxleGVyOwoKICAgICAgICBpZihsb2MuY29sdW1uID09IDEpIHsKICAgICAgICAgIGxldCBzZXEsCiAgICAgICAgICAgIGxpbmUgPSBsb2MubGluZSwKICAgICAgICAgICAgdGV4dCA9ICcnOwogICAgICAgICAgc2VxID0gcGFyc2UobGV4ZXIsICh0b2ssIGFycikgPT4gdG9rLmxvYy5saW5lICE9IGxpbmUgJiYgLTEsIHRvayk7CiAgICAgICAgICBjb25zdCBsYXN0ID0gc2VxLmZpbHRlcihOb25XUykuYXQoLTEpOwogICAgICAgICAgaWYobGFzdC50eXBlID09ICdsYnJhY2UnKSB7CiAgICAgICAgICAgIHNlcSA9IHBhcnNlKGxleGVyLCAodG9rLCBhcnIpID0+IHRvay5sb2MuY29sdW1uID09IDEgJiYgdG9rLnR5cGUgPT0gJ3JicmFjZScsIC4uLnNlcSk7CiAgICAgICAgICAgIHNlcSA9IHBhcnNlKGxleGVyLCAodG9rLCBhcnIpID0+IHRvay50eXBlID09ICdzZW1pJywgLi4uc2VxKTsKICAgICAgICAgIH0KICAgICAgICAgIG91dHB1dC5wdXRzKHNlcS5yZWR1Y2UoKHMsIHQpID0+IHMgKyB0LmxleGVtZSwgJycpLnRyaW0oKSArICdcblxuJyk7CiAgICAgICAgfQogICAgICB9CgogICAgICBvdXRwdXQuZmx1c2goKTsKICAgIH0KICB9CgogIGlmKG91dHB1dE5hbWUpIGNvbnNvbGUubG9nKG91dHB1dC50ZWxsKCkgKyBgIGJ5dGVzIHdyaXR0ZW4gdG8gJyR7b3V0cHV0TmFtZX0nYCk7CiAgb3V0cHV0LmNsb3NlKCk7Cn0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIGNvbnNvbGUubG9nKGBGQUlMOiAke2Vycm9yLm1lc3NhZ2V9XG4ke2Vycm9yLnN0YWNrfWApOwogIHN0ZC5leGl0KDEpOwp9CgAAAAAAAAAAxgoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoFAAAAAAAAGgUAAAAAAAAAAAAAAADwvw"
				],
				[
					382,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAEIIAAAAAAAARAgAAAAAAAAAAAAAPAgAAAAAAAA+CAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwIAAAAAAAAQggAAAAAAAAAAAAAAADwvw"
				],
				[
					389,
					1,
					"cut",
					null,
					"AQAAAMoCAAAAAAAAygIAAAAAAAAOAAAAcHJvY2Vzcy5zdGRlcnI",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoCAAAAAAAA2AIAAAAAAAAAAAAAAADwvw"
				],
				[
					390,
					2,
					"right_delete",
					null,
					"AgAAAMoCAAAAAAAAygIAAAAAAAABAAAALMoCAAAAAAAAygIAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoCAAAAAAAAygIAAAAAAAAAAAAAAADwvw"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "\nstdout:"
					},
					"CgAAAMsCAAAAAAAAzAIAAAAAAAAAAAAAzAIAAAAAAADOAgAAAAAAAAAAAADOAgAAAAAAANACAAAAAAAAAAAAANACAAAAAAAA0QIAAAAAAAAAAAAA0QIAAAAAAADSAgAAAAAAAAAAAADSAgAAAAAAANMCAAAAAAAAAAAAANMCAAAAAAAA1AIAAAAAAAAAAAAA1AIAAAAAAADVAgAAAAAAAAAAAADVAgAAAAAAANYCAAAAAAAAAAAAANYCAAAAAAAA1wIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsCAAAAAAAAywIAAAAAAAD////////vfw"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": " process.d"
					},
					"CgAAANcCAAAAAAAA2AIAAAAAAAAAAAAA2AIAAAAAAADZAgAAAAAAAAAAAADZAgAAAAAAANoCAAAAAAAAAAAAANoCAAAAAAAA2wIAAAAAAAAAAAAA2wIAAAAAAADcAgAAAAAAAAAAAADcAgAAAAAAAN0CAAAAAAAAAAAAAN0CAAAAAAAA3gIAAAAAAAAAAAAA3gIAAAAAAADfAgAAAAAAAAAAAADfAgAAAAAAAOACAAAAAAAAAAAAAOACAAAAAAAA4QIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcCAAAAAAAA1wIAAAAAAAAAAAAAAADwvw"
				],
				[
					394,
					1,
					"left_delete",
					null,
					"AQAAAOACAAAAAAAA4AIAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOECAAAAAAAA4QIAAAAAAAAAAAAAAADwvw"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "stdout,"
					},
					"BwAAAOACAAAAAAAA4QIAAAAAAAAAAAAA4QIAAAAAAADiAgAAAAAAAAAAAADiAgAAAAAAAOMCAAAAAAAAAAAAAOMCAAAAAAAA5AIAAAAAAAAAAAAA5AIAAAAAAADlAgAAAAAAAAAAAADlAgAAAAAAAOYCAAAAAAAAAAAAAOYCAAAAAAAA5wIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOACAAAAAAAA4AIAAAAAAAAAAAAAAADwvw"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "\nstderr:"
					},
					"CQAAAOcCAAAAAAAA6AIAAAAAAAAAAAAA6AIAAAAAAADsAgAAAAAAAAAAAADsAgAAAAAAAO0CAAAAAAAAAAAAAO0CAAAAAAAA7gIAAAAAAAAAAAAA7gIAAAAAAADvAgAAAAAAAAAAAADvAgAAAAAAAPACAAAAAAAAAAAAAPACAAAAAAAA8QIAAAAAAAAAAAAA8QIAAAAAAADyAgAAAAAAAAAAAADyAgAAAAAAAPMCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcCAAAAAAAA5wIAAAAAAAAAAAAAAADwvw"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": " process.stderr,"
					},
					"EAAAAPMCAAAAAAAA9AIAAAAAAAAAAAAA9AIAAAAAAAD1AgAAAAAAAAAAAAD1AgAAAAAAAPYCAAAAAAAAAAAAAPYCAAAAAAAA9wIAAAAAAAAAAAAA9wIAAAAAAAD4AgAAAAAAAAAAAAD4AgAAAAAAAPkCAAAAAAAAAAAAAPkCAAAAAAAA+gIAAAAAAAAAAAAA+gIAAAAAAAD7AgAAAAAAAAAAAAD7AgAAAAAAAPwCAAAAAAAAAAAAAPwCAAAAAAAA/QIAAAAAAAAAAAAA/QIAAAAAAAD+AgAAAAAAAAAAAAD+AgAAAAAAAP8CAAAAAAAAAAAAAP8CAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAABAwAAAAAAAAAAAAABAwAAAAAAAAIDAAAAAAAAAAAAAAIDAAAAAAAAAwMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMCAAAAAAAA8wIAAAAAAAAAAAAAAADwvw"
				],
				[
					404,
					1,
					"paste",
					null,
					"AgAAAA8FAAAAAAAAbQYAAAAAAAAAAAAAbQYAAAAAAABtBgAAAAAAAOECAAAKCiAgICBsZXQgc3RyID0gc3RkLmxvYWRGaWxlKGZpbGUsICd1dGYtOCcpOwogICAgLy9jb25zb2xlLmxvZyhgIHN0ZC5sb2FkRmlsZSgnJHtmaWxlfScsICd1dGYtOCcpID1gLCBzdHIpOwogICAgY29uc29sZS5sb2coJ3N0cicsIHN0ci5zcGxpdCgnXG4nKVswXSk7CgogICAgbGV0IGxleGVyID0gbmV3IENMZXhlcihzdHIsIGZpbGUpOwogICAgLyogIGNvbnNvbGUubG9nKCdsZXhlcicsIGxleGVyKTsKICAgIGNvbnNvbGUubG9nKGBsZXhlci50b2tlbnNgLCBsZXhlci50b2tlbnMpOwogICAgY29uc29sZS5sb2coYGxleGVyLnJ1bGVzWydzdHJ1Y3QnXWAsIGxleGVyLnJ1bGVzWydzdHJ1Y3QnXSk7CiAgICBjb25zb2xlLmxvZyhgbGV4ZXIucnVsZXNbJ3R5cGVkZWYnXWAsIGxleGVyLnJ1bGVzWyd0eXBlZGVmJ10pOwogICAgY29uc29sZS5sb2coYGxleGVyLmdldFJ1bGUoJ3N0cnVjdCcpYCwgbGV4ZXIuZ2V0UnVsZSgnc3RydWN0JykpOyovCiAgICBjb25zdCB7IHJ1bGVzLCB0b2tlbnMgfSA9IGxleGVyOwoKICAgIC8vbGV0IGlkOyB3aGlsZSgoaWQgPSBsZXhlci5uZXh0KCkpKQogICAgZm9yKGxldCBpZCBvZiBsZXhlcikgewogICAgICBpZihpZCA9PSBydWxlc1snc3RydWN0J10gfHwgaWQgPT0gcnVsZXNbJ3R5cGVkZWYnXSkgewogICAgICAgIGNvbnN0IHsgbG9jLCB0b2tlbjogdG9rIH0gPSBsZXhlcjsKCiAgICAgICAgaWYobG9jLmNvbHVtbiA9PSAxKSB7CiAgICAgICAgICBsZXQgc2VxLA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8FAAAAAAAA8AcAAAAAAAAAAAAAAADwvw"
				],
				[
					407,
					1,
					"reindent",
					null,
					"AQAAAG0GAAAAAAAAdwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0GAAAAAAAAbQYAAAAAAAAAAAAAAADwvw"
				],
				[
					441,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAAOsGAAAAAAAA7AYAAAAAAAAAAAAA7AYAAAAAAADsBgAAAAAAAAMAAAAvKiBtBgAAAAAAAG0GAAAAAAAACgAAACAgICAgICAgICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsGAAAAAAAA7gYAAAAAAAAAAAAAAADwvw"
				],
				[
					444,
					2,
					"left_delete",
					null,
					"AgAAAOgGAAAAAAAA6AYAAAAAAAABAAAAL+cGAAAAAAAA5wYAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkGAAAAAAAA6QYAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libarchive"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/c-mcp3301/fast-arduino-lib/cores/fastarduino/devices/mcp3001.h",
		"/home/roman/Projects/c-mcp3301/mcp300x/mcp300x.c",
		"/home/roman/Projects/c-mcp3301/mcp3001/src/mcp3001.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/c-mcp3301/fast-arduino-lib/cores/fastarduino/devices/mcp3x0x.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/deep.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/css3-selectors.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_css3_selectors.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml/write.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tree_walker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml/read.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/predicate.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/require.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/timers.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tree-walker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_textcode.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml-write.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml-parse.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_css3_selector.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/callgrind.out.142973",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/src/tutf8e.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e/iso_8859_15.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/ecmascript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/csv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/include/libutf.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/src/libutf.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/debug.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stream.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/err",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/doc/latex/unionVector.tex",
		"/home/roman/.config/sublime-text/Packages/User/Themes/[ Argonaut ].tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"printTok",
			"deep_",
			"events",
			"escape",
			"xml\\.write",
			"xml\\.read",
			"^JSValue js_eval_",
			" js_eval_",
			"js_eval_",
			"js_eval_f",
			"js_eval_file",
			"load_file",
			"jsm*_eval_(buf|file)",
			"^js_eval_buf",
			"eval_buf",
			"jsm_eval_buf",
			"js_eval_buf",
			"jsm_eval_buf",
			"mmap",
			"jsm_eval_file",
			"jsm_script_load",
			"jsm_eval_script",
			"\t",
			"jsm_eval_script",
			"jsm_eval_file",
			"EventEmitter",
			"events",
			"path\\.",
			"fs\\.",
			"import",
			"jsm_builtin_init",
			"events",
			"builtin_init",
			"inspect",
			"require\\(",
			"requireModule",
			"require\\(",
			"std\\.",
			"util'",
			"debug",
			"constants\\.\\.",
			"\\.\\.constants",
			"os\\.",
			"std.loadFile",
			"std\\.",
			"fs.readFileSync",
			"std\\.",
			"stdout",
			"function puts",
			"readFileSync",
			"fs\\.read",
			"std\\.",
			"StartREPL",
			"process.release.name\\s*==\\s*'quickjs'\\s*\\?\\s*requireModule",
			"process.release.name\\s*==\\s*'quickjs'\\s*\\?\\s*require",
			"process.release.name\\s*==\\s*'quickjs'\\s*\\?\\s*require\\(",
			"process.release.name == 'quickjs'\\s*\\?\\s*require\\(",
			"\\.so'",
			"process.release.name == 'quickjs' \\? require\\(",
			"glob",
			"glob\\",
			"glob",
			"getClassName",
			"isFunction\\(([^)]*)\\)",
			"getClassName",
			"js_pointer_new",
			"Util\\.",
			"Util\\.inspect",
			"Util\\.",
			"Pointer",
			"xml",
			"deep",
			"Pointer",
			"POinter",
			"xml\\.write",
			"xml\\.read",
			"misc'",
			"misc",
			"inspect\\(",
			"inspect",
			"console",
			"\\.inspect",
			"toString",
			"GLOB ",
			"\\.js",
			"*\\.js",
			"misc.js",
			"isObject\\(([^)]*)\\)",
			"isFunction\\(([^)]*)\\)",
			"quote",
			"memoize",
			"SCRIPT_FILENAME",
			"jsm_script_file",
			"scriptList\"",
			"jsm_script_push",
			"jsm_script_load",
			"jsm_script_push",
			"jsm_scripts",
			"Vector",
			"memoize",
			"path\\.",
			"normalize",
			"js_strdup",
			"std\\.",
			"misc\\.is(Function|Object)",
			"isFunction",
			"eval_buf",
			"return \"(.*)\"",
			"js_value",
			";\\\\n",
			"^js_eval_buf",
			"^js_eval_binary",
			"struct JSModuleDef",
			"js_inspect_print_module",
			"module_exports",
			"module_default_export",
			"mod",
			"module_default_export",
			"jsm_module_loader",
			"jsm_builtin_init",
			"TextDecoder",
			"module_name",
			"jsm_module_search",
			"jsm_module_find",
			"jsm_search_module",
			"require",
			"isObject",
			"TextDec"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"writeXML",
			"readXML",
			"fs.readFileSync",
			"process.release.name == 'quickjs' ? requireModule",
			"process.release.name == 'quickjs' ? requireModule(",
			"typeof \\1 == 'function'",
			"typeof(\\1) == 'function'",
			"inspect",
			"writeXML",
			"readXML",
			"(typeof \\1 == 'object' && \\1 != null)",
			"typeof \\1 == 'function'",
			"is\\1",
			"return TYPE_\\1",
			";\\\\n\" \"",
			"timers.",
			"",
			"\\1\\2(",
			"\\1function \\2(",
			"\\1//console.",
			"createModule",
			"static \\1\\2 {",
			"static ",
			"pnws",
			"sel = \\1;",
			"js_is_array",
			"if(debug_module_loader >= 2)",
			"INSPECT_LEVEL(opts, depth)",
			"BOOL compact =",
			"INSPECT_IS_COMPACT\\(opts, depth\\)",
			"path_skip_component(\\1, \\2, 0);",
			"-18s",
			"%-\\1s",
			"__FUNCTION__",
			".value",
			"->value",
			"\\1//printf",
			"stream",
			"_ENDIANNESS",
			"_ENDIAN",
			"be'",
			"le'",
			"'utf-",
			"-BE'",
			"'UTF-",
			"endian",
			"->endian == BIG",
			"transform_terminate",
			"transform_",
			"\\1",
			"type",
			"js_misc_duparraybuffer",
			"out.puts",
			"putline",
			"\\1: \\2,",
			"",
			"{ return",
			"\\\\\"",
			"\\1if(debug_module_loader) \\2",
			"",
			"BuiltinModule",
			"Text.store",
			"Tokens",
			"tokenModifiers",
			"xml_debug",
			"\\1",
			"xml_debug",
			"WRITABLE_GET_WRITER",
			"WRITABLE_CLOSE",
			"struct stream_reader",
			"readable_cancel",
			"READABLE_CANCEL",
			"readable_unlock",
			"writable_get_writer",
			"writable_\\1lock",
			"READABLE_",
			"writ",
			"FUNC_CLOSE",
			"js_reader_method",
			"js_writer_method",
			"js_stream_method",
			"STREAM_LOCKED",
			"->reader",
			"\"StreamReader",
			"Reader",
			"METHOD_",
			"array",
			"funcs.array",
			"js_resolve_functions",
			"js_resolvefunctions",
			"funcs[1]",
			"funcs[0]",
			"js_resolvingfunctions_free",
			"js_resolvingfunctions_ree",
			"length",
			"Chunk",
			"loc",
			"prevLength",
			"prevOffset",
			"compact(\\1)",
			"js_location_create",
			"lexer_token(",
			"token_lex(",
			"LOCATION_PROP_CHAROFFSET",
			"loc->",
			"\\1_release",
			"token",
			"ALLOC_PTR",
			"ALLOC_BLOCK(p)",
			"ALLOC_BLOCK_SIZE",
			"",
			"const char* str\\1",
			"void* p,",
			"size_t size)",
			"JSRuntime* rt,",
			"JSContext\\* ctx,",
			";",
			" &(((struct alloc_block*)p)[-1]);",
			"add_to_list",
			"",
			"DEFINES_H",
			"int",
			"log",
			"out",
			"array_",
			"[%p]",
			"pthread_self()",
			"js_token_data2(ctx,"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 161,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"color_scheme": "Packages/Outline/outline-Dark.hidden-tmTheme",
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
							"function_name_status_row": 2,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									277,
									289
								],
								[
									320,
									329
								],
								[
									355,
									408
								],
								[
									654,
									676
								],
								[
									1047,
									1055
								],
								[
									1130,
									1136
								],
								[
									1726,
									1740
								],
								[
									1892,
									1906
								],
								[
									1991,
									2005
								],
								[
									2080,
									2089
								]
							],
							"symlist":
							[
								"NonWS = t =>",
								"WS = t =>",
								"  parse(lexer, fn = (tok, arr) => {}, ...args)",
								"  main(...args)",
								"\tfile =>",
								"\t() =>",
								"\t(tok, arr) =>",
								"\t(tok, arr) =>",
								"\t(tok, arr) =>",
								"(s, t) =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648101925.44,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "extract-structs.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2411,
						"regions":
						{
						},
						"selection":
						[
							[
								1767,
								1767
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": -1,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648193328.09,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 561.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.703749060074,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139621680902448)":
	{
		"height": 0.0
	},
	"output.Protocol(139700989780224)":
	{
		"height": 0.0
	},
	"output.Protocol(139713493134064)":
	{
		"height": 0.0
	},
	"output.Protocol(139717986633232)":
	{
		"height": 0.0
	},
	"output.Protocol(139737089962816)":
	{
		"height": 0.0
	},
	"output.Protocol(139742375937312)":
	{
		"height": 0.0
	},
	"output.Protocol(139743392563408)":
	{
		"height": 0.0
	},
	"output.Protocol(139869175351088)":
	{
		"height": 0.0
	},
	"output.Protocol(140020109919472)":
	{
		"height": 0.0
	},
	"output.Protocol(140057995247920)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752673856)":
	{
		"height": 0.0
	},
	"output.Protocol(140156677514432)":
	{
		"height": 0.0
	},
	"output.Protocol(140172266688720)":
	{
		"height": 0.0
	},
	"output.Protocol(140190208797904)":
	{
		"height": 0.0
	},
	"output.Protocol(140274144834032)":
	{
		"height": 0.0
	},
	"output.Protocol(140329701419328)":
	{
		"height": 0.0
	},
	"output.Protocol(140434608857040)":
	{
		"height": 0.0
	},
	"output.Protocol(140444770579072)":
	{
		"height": 0.0
	},
	"output.Protocol(140481508459424)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873537696)":
	{
		"height": 0.0
	},
	"output.Protocol(140517145188336)":
	{
		"height": 0.0
	},
	"output.Protocol(140557325510688)":
	{
		"height": 0.0
	},
	"output.Protocol(140569677099648)":
	{
		"height": 0.0
	},
	"output.Protocol(140571426803920)":
	{
		"height": 0.0
	},
	"output.Protocol(140585353818944)":
	{
		"height": 0.0
	},
	"output.Protocol(140589364043584)":
	{
		"height": 0.0
	},
	"output.Protocol(140603239164464)":
	{
		"height": 0.0
	},
	"output.Protocol(140614610715648)":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"console",
				"lib/console.js"
			],
			[
				"extract",
				"extract-structs.js"
			],
			[
				"test_lexe",
				"tests/test_lexer.js"
			],
			[
				"test_css",
				"tests/test_css3_selectors.js"
			],
			[
				"events.j",
				"lib/events.js"
			],
			[
				"test_dom",
				"tests/test_dom.js"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"utils.h",
				"include/utils.h"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			],
			[
				"qjsm",
				"src/qjsm.c"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"resolve-import",
				"resolve-imports.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"require.js",
				"lib/require.js"
			],
			[
				"test_do",
				"tests/test_dom.js"
			],
			[
				"css3-se",
				"lib/css3-selectors.js"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"console.",
				"lib/console.js"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_dom.js",
				"tests/test_dom.js"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"write.js",
				"lib/xml/write.js"
			],
			[
				"css-",
				"lib/css3-selectors.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"resolve-impo",
				"resolve-imports.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"path.h",
				"include/path.h"
			],
			[
				"location.h",
				"include/location.h"
			],
			[
				"l",
				"quickjs-lexer.c"
			],
			[
				"path.c",
				"src/path.c"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"repl.j",
				"lib/repl.js"
			],
			[
				"js-u",
				"src/js-utils.c"
			],
			[
				"js-ut",
				"include/js-utils.h"
			],
			[
				"streams.js",
				"tests/test_streams.js"
			],
			[
				"buffer",
				"src/buffer-utils.c"
			],
			[
				"test_te",
				"tests/test_textcode.js"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"extract-str",
				"extract-structs.js"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"list-exp",
				"list-exports.js"
			],
			[
				"token.c",
				"token.c"
			],
			[
				"quickjs-le",
				"quickjs-lexer.c"
			],
			[
				"jsutil",
				"js-utils.c"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.h"
			],
			[
				"quickjs-location",
				"quickjs-location.h"
			],
			[
				"quickjs-loca",
				"quickjs-location.c"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"char-ut",
				"char-utils.h"
			],
			[
				"buff",
				"buffer-utils.h"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"location",
				"location.c"
			],
			[
				"quickjs-child",
				"quickjs-child-process.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"CMakeLi",
				"CMakeLists.txt"
			],
			[
				"defines.h",
				"defines.h"
			],
			[
				"queue.c",
				"queue.c"
			],
			[
				"extend",
				"lib/extendArray.js"
			],
			[
				"quickjs-sockets",
				"quickjs-sockets.c"
			],
			[
				"lexer",
				"quickjs-lexer.c"
			],
			[
				"buffer-ut",
				"buffer-utils.h"
			],
			[
				"ringbuf",
				"ringbuffer.h"
			],
			[
				"debug.h",
				"debug.h"
			],
			[
				"debug.c",
				"debug.c"
			],
			[
				"quickjs-lexer.c",
				"quickjs-lexer.c"
			],
			[
				"quickjs-loc",
				"quickjs-location.c"
			],
			[
				"xml.c",
				"quickjs-xml.c"
			],
			[
				"test-dia",
				"build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"resol",
				"resolve-imports.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"quickjs-mis",
				"quickjs-misc.c"
			],
			[
				"location.c",
				"quickjs-location.c"
			],
			[
				"extra",
				"extract-structs.js"
			],
			[
				"-inspe",
				"quickjs-inspect.c"
			],
			[
				"proper",
				"property-enumeration.h"
			],
			[
				"vector",
				"vector.h"
			],
			[
				"dom.j",
				"lib/dom.js"
			],
			[
				"res",
				"resolve-imports.js"
			],
			[
				"lexre",
				"lexer.c"
			],
			[
				"lexer.c",
				"quickjs-lexer.c"
			],
			[
				"pointer",
				"pointer.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"archive",
				"quickjs-archive.c"
			],
			[
				"pointer.c",
				"quickjs-pointer.c"
			],
			[
				"spect.c",
				"quickjs-inspect.c"
			],
			[
				"blob.c",
				"quickjs-blob.c"
			],
			[
				"repea",
				"quickjs-repeater.c"
			],
			[
				"loca",
				"quickjs-location.c"
			],
			[
				"bjson.c",
				"quickjs-bjson.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"char-u",
				"char-utils.h"
			],
			[
				"predi",
				"predicate.h"
			],
			[
				"virtua",
				"virtual-properties.c"
			],
			[
				"pointre",
				"pointer.c"
			],
			[
				"deep.c",
				"quickjs-deep.c"
			],
			[
				"child-",
				"child-process.c"
			],
			[
				"child-pro",
				"quickjs-child-process.c"
			],
			[
				"gpio.c",
				"quickjs-gpio.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"ointer.h",
				"pointer.h"
			],
			[
				"defin",
				"defines.h"
			],
			[
				"defines",
				"defines.h"
			],
			[
				"cutils.h",
				"char-utils.h"
			],
			[
				"debu",
				"debug.h"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"test_le",
				"tests/test_lexer.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"test",
				"tests/test_stack.js"
			],
			[
				"jsutils",
				"CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d"
			],
			[
				"jslexe",
				"lib/jslexer.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"xpath.j",
				"lib/xpath.js"
			],
			[
				"predicate.h",
				"predicate.h"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"list.h",
				"~/Projects/plot-cv/quickjs/list.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 294.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
