{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"JS_Get",
				"JS_GetArrayBuffer"
			],
			[
				"JS_",
				"JS_ThrowTypeError"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Throw",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_Set",
				"JS_SetPropertyStr"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"js_sys",
				"js_syscallerror_get"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_",
				"js_sockaddr_class_id"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"JS_New",
				"JS_NewStringLen"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"get",
				"getOwnPropertyNames"
			],
			[
				"JS_Thr",
				"JS_ThrowInternalError"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  strerr(ret)\n  numerr(ret)\nStats\n  constructor(st)\n  isDirectory()\n  isCharacterDevice()\n  isBlockDevice()\n  isFile()\n  isFIFO()\n  isSymbolicLink()\n  isSocket()\n  get errno()\n  get errstr()\n  get stdin()\n  get stdout()\n  get stderr()\n  buffer(length)\n  bufferFrom(chunk, offset, length)\n  bufferSize(buf)\n  bufferToString(buf, offset, length)\n  fopen(filename, flags = 'r', mode = 0o644)\n  fdopen(fd, flags = 'r')\n  puts(fd, str)\n  flushSync(file)\n  seek(fd, offset, whence)\n  tell(file)\n  sizeSync(file)\n  getcwd()\n  chdir(path)\n  isatty(file)\n  fileno(file)\n  readFileSync(filename, options = {})\n  writeFileSync(filename, data, overwrite = true)\n  closeSync(fd)\n  existsSync(path)\n  lstatSync(path, cb)\n  mkdirSync(path, mode = 0o777)\n  openSync(filename, flags = O_RDONLY, mode = 0x1a4)\n  readSync(fd, buf, offset, length)\n  readdirSync(path)\n  readlinkSync(path)\n  realpathSync(path)\n  renameSync(oldname, newname)\n  statSync(path, cb)\n  symlinkSync(target, path)\n  unlinkSync(path)\n  writeSync(fd, data, offset, length)\n  pipe()\n  setReadHandler(file, handler)\n  setWriteHandler(file, handler)\n  onRead(file, handler = null)\n  waitRead(file)\n  onWrite(file, handler = null)\n  waitWrite(file)\n  readAll(input, bufSize = 1024)\nEncoding2Bytes(encoding)",
			"settings":
			{
				"buffer_size": 1256,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					1175,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1176,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5747,
								5804
							],
							[
								6573,
								6596
							],
							[
								6676,
								6702
							],
							[
								6813,
								6842
							],
							[
								6941,
								6980
							],
							[
								7031,
								7091
							],
							[
								7312,
								7355
							],
							[
								7676,
								7703
							],
							[
								7750,
								7778
							],
							[
								7826,
								7854
							],
							[
								7902,
								7940
							],
							[
								7998,
								8026
							],
							[
								8124,
								8159
							],
							[
								8214,
								8240
							],
							[
								8286,
								8331
							],
							[
								8821,
								8837
							],
							[
								8896,
								8935
							],
							[
								9047,
								9087
							],
							[
								9200,
								9238
							],
							[
								9343,
								9367
							],
							[
								9391,
								9411
							],
							[
								9430,
								9436
							],
							[
								9509,
								9548
							],
							[
								9654,
								9679
							],
							[
								9703,
								9723
							],
							[
								9743,
								9749
							],
							[
								9823,
								9863
							],
							[
								10719,
								10752
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAA6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1177,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1178,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1179,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5747,
								5804
							],
							[
								6573,
								6596
							],
							[
								6676,
								6702
							],
							[
								6813,
								6842
							],
							[
								6941,
								6980
							],
							[
								7031,
								7091
							],
							[
								7312,
								7355
							],
							[
								7676,
								7703
							],
							[
								7750,
								7778
							],
							[
								7826,
								7854
							],
							[
								7902,
								7940
							],
							[
								7998,
								8026
							],
							[
								8124,
								8159
							],
							[
								8214,
								8240
							],
							[
								8286,
								8331
							],
							[
								8821,
								8837
							],
							[
								8896,
								8935
							],
							[
								9047,
								9087
							],
							[
								9200,
								9238
							],
							[
								9343,
								9367
							],
							[
								9391,
								9411
							],
							[
								9430,
								9436
							],
							[
								9509,
								9548
							],
							[
								9654,
								9679
							],
							[
								9703,
								9723
							],
							[
								9743,
								9749
							],
							[
								9823,
								9863
							],
							[
								10719,
								10752
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAA6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1180,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5747,
								5804
							],
							[
								6573,
								6596
							],
							[
								6676,
								6702
							],
							[
								6813,
								6842
							],
							[
								6941,
								6980
							],
							[
								7031,
								7091
							],
							[
								7312,
								7355
							],
							[
								7676,
								7703
							],
							[
								7750,
								7778
							],
							[
								7826,
								7854
							],
							[
								7902,
								7940
							],
							[
								7998,
								8026
							],
							[
								8124,
								8159
							],
							[
								8214,
								8240
							],
							[
								8286,
								8331
							],
							[
								8821,
								8837
							],
							[
								8896,
								8935
							],
							[
								9047,
								9087
							],
							[
								9200,
								9238
							],
							[
								9343,
								9367
							],
							[
								9391,
								9411
							],
							[
								9430,
								9436
							],
							[
								9509,
								9548
							],
							[
								9654,
								9679
							],
							[
								9703,
								9723
							],
							[
								9743,
								9749
							],
							[
								9823,
								9863
							],
							[
								10719,
								10752
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1181,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5755,
								5812
							],
							[
								6581,
								6604
							],
							[
								6684,
								6710
							],
							[
								6821,
								6850
							],
							[
								6949,
								6988
							],
							[
								7039,
								7099
							],
							[
								7320,
								7363
							],
							[
								7684,
								7711
							],
							[
								7758,
								7786
							],
							[
								7834,
								7862
							],
							[
								7910,
								7948
							],
							[
								8006,
								8034
							],
							[
								8132,
								8167
							],
							[
								8222,
								8248
							],
							[
								8294,
								8339
							],
							[
								8829,
								8845
							],
							[
								8904,
								8943
							],
							[
								9055,
								9095
							],
							[
								9208,
								9246
							],
							[
								9351,
								9375
							],
							[
								9399,
								9419
							],
							[
								9438,
								9444
							],
							[
								9517,
								9556
							],
							[
								9662,
								9687
							],
							[
								9711,
								9731
							],
							[
								9751,
								9757
							],
							[
								9831,
								9871
							],
							[
								10727,
								10760
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1182,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5758,
								5815
							],
							[
								6584,
								6607
							],
							[
								6687,
								6713
							],
							[
								6824,
								6853
							],
							[
								6952,
								6991
							],
							[
								7042,
								7102
							],
							[
								7323,
								7366
							],
							[
								7687,
								7714
							],
							[
								7761,
								7789
							],
							[
								7837,
								7865
							],
							[
								7913,
								7951
							],
							[
								8009,
								8037
							],
							[
								8135,
								8170
							],
							[
								8225,
								8251
							],
							[
								8297,
								8342
							],
							[
								8832,
								8848
							],
							[
								8907,
								8946
							],
							[
								9058,
								9098
							],
							[
								9211,
								9249
							],
							[
								9354,
								9378
							],
							[
								9402,
								9422
							],
							[
								9441,
								9447
							],
							[
								9520,
								9559
							],
							[
								9665,
								9690
							],
							[
								9714,
								9734
							],
							[
								9754,
								9760
							],
							[
								9834,
								9874
							],
							[
								10730,
								10763
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1183,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5758,
								5815
							],
							[
								6584,
								6607
							],
							[
								6687,
								6713
							],
							[
								6824,
								6853
							],
							[
								6952,
								6991
							],
							[
								7042,
								7102
							],
							[
								7323,
								7366
							],
							[
								7687,
								7714
							],
							[
								7761,
								7789
							],
							[
								7837,
								7865
							],
							[
								7913,
								7951
							],
							[
								8009,
								8037
							],
							[
								8135,
								8170
							],
							[
								8225,
								8251
							],
							[
								8297,
								8342
							],
							[
								8832,
								8848
							],
							[
								8907,
								8946
							],
							[
								9058,
								9098
							],
							[
								9211,
								9249
							],
							[
								9354,
								9378
							],
							[
								9402,
								9422
							],
							[
								9441,
								9447
							],
							[
								9520,
								9559
							],
							[
								9665,
								9690
							],
							[
								9714,
								9734
							],
							[
								9754,
								9760
							],
							[
								9834,
								9874
							],
							[
								10730,
								10763
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1184,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5758,
								5815
							],
							[
								6584,
								6607
							],
							[
								6687,
								6713
							],
							[
								6824,
								6853
							],
							[
								6952,
								6991
							],
							[
								7042,
								7102
							],
							[
								7323,
								7366
							],
							[
								7687,
								7714
							],
							[
								7761,
								7789
							],
							[
								7837,
								7865
							],
							[
								7913,
								7951
							],
							[
								8009,
								8037
							],
							[
								8135,
								8170
							],
							[
								8225,
								8251
							],
							[
								8297,
								8342
							],
							[
								8832,
								8848
							],
							[
								8907,
								8946
							],
							[
								9058,
								9098
							],
							[
								9211,
								9249
							],
							[
								9354,
								9378
							],
							[
								9402,
								9422
							],
							[
								9441,
								9447
							],
							[
								9520,
								9559
							],
							[
								9665,
								9690
							],
							[
								9714,
								9734
							],
							[
								9754,
								9760
							],
							[
								9834,
								9874
							],
							[
								10730,
								10763
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1185,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1186,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5758,
								5815
							],
							[
								6584,
								6607
							],
							[
								6687,
								6713
							],
							[
								6824,
								6853
							],
							[
								6952,
								6991
							],
							[
								7042,
								7102
							],
							[
								7323,
								7366
							],
							[
								7687,
								7714
							],
							[
								7761,
								7789
							],
							[
								7837,
								7865
							],
							[
								7913,
								7951
							],
							[
								8009,
								8037
							],
							[
								8135,
								8170
							],
							[
								8225,
								8251
							],
							[
								8297,
								8342
							],
							[
								8832,
								8848
							],
							[
								8907,
								8946
							],
							[
								9058,
								9098
							],
							[
								9211,
								9249
							],
							[
								9354,
								9378
							],
							[
								9402,
								9422
							],
							[
								9441,
								9447
							],
							[
								9520,
								9559
							],
							[
								9665,
								9690
							],
							[
								9714,
								9734
							],
							[
								9754,
								9760
							],
							[
								9834,
								9874
							],
							[
								10730,
								10763
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAA6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1187,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1188,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5758,
								5815
							],
							[
								6584,
								6607
							],
							[
								6687,
								6713
							],
							[
								6824,
								6853
							],
							[
								6952,
								6991
							],
							[
								7042,
								7102
							],
							[
								7323,
								7366
							],
							[
								7687,
								7714
							],
							[
								7761,
								7789
							],
							[
								7837,
								7865
							],
							[
								7913,
								7951
							],
							[
								8009,
								8037
							],
							[
								8135,
								8170
							],
							[
								8225,
								8251
							],
							[
								8297,
								8342
							],
							[
								8832,
								8848
							],
							[
								8907,
								8946
							],
							[
								9058,
								9098
							],
							[
								9211,
								9249
							],
							[
								9354,
								9378
							],
							[
								9402,
								9422
							],
							[
								9441,
								9447
							],
							[
								9520,
								9559
							],
							[
								9665,
								9690
							],
							[
								9714,
								9734
							],
							[
								9754,
								9760
							],
							[
								9834,
								9874
							],
							[
								10730,
								10763
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAA6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1189,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1190,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5758,
								5815
							],
							[
								6584,
								6607
							],
							[
								6687,
								6713
							],
							[
								6824,
								6853
							],
							[
								6952,
								6991
							],
							[
								7042,
								7102
							],
							[
								7323,
								7366
							],
							[
								7687,
								7714
							],
							[
								7761,
								7789
							],
							[
								7837,
								7865
							],
							[
								7913,
								7951
							],
							[
								8009,
								8037
							],
							[
								8135,
								8170
							],
							[
								8225,
								8251
							],
							[
								8297,
								8342
							],
							[
								8832,
								8848
							],
							[
								8907,
								8946
							],
							[
								9058,
								9098
							],
							[
								9211,
								9249
							],
							[
								9354,
								9378
							],
							[
								9402,
								9422
							],
							[
								9441,
								9447
							],
							[
								9520,
								9559
							],
							[
								9665,
								9690
							],
							[
								9714,
								9734
							],
							[
								9754,
								9760
							],
							[
								9834,
								9874
							],
							[
								10730,
								10763
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAA6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1191,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1192,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5758,
								5815
							],
							[
								6584,
								6607
							],
							[
								6687,
								6713
							],
							[
								6824,
								6853
							],
							[
								6952,
								6991
							],
							[
								7042,
								7102
							],
							[
								7323,
								7366
							],
							[
								7687,
								7714
							],
							[
								7761,
								7789
							],
							[
								7837,
								7865
							],
							[
								7913,
								7951
							],
							[
								8009,
								8037
							],
							[
								8135,
								8170
							],
							[
								8225,
								8251
							],
							[
								8297,
								8342
							],
							[
								8832,
								8848
							],
							[
								8907,
								8946
							],
							[
								9058,
								9098
							],
							[
								9211,
								9249
							],
							[
								9354,
								9378
							],
							[
								9402,
								9422
							],
							[
								9441,
								9447
							],
							[
								9520,
								9559
							],
							[
								9665,
								9690
							],
							[
								9714,
								9734
							],
							[
								9754,
								9760
							],
							[
								9834,
								9874
							],
							[
								10730,
								10763
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAA6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1193,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1194,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1195,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5758,
								5815
							],
							[
								6584,
								6607
							],
							[
								6687,
								6713
							],
							[
								6824,
								6853
							],
							[
								6952,
								6991
							],
							[
								7042,
								7102
							],
							[
								7323,
								7366
							],
							[
								7687,
								7714
							],
							[
								7761,
								7789
							],
							[
								7837,
								7865
							],
							[
								7913,
								7951
							],
							[
								8009,
								8037
							],
							[
								8135,
								8170
							],
							[
								8225,
								8251
							],
							[
								8297,
								8342
							],
							[
								8832,
								8848
							],
							[
								8907,
								8946
							],
							[
								9058,
								9098
							],
							[
								9211,
								9249
							],
							[
								9354,
								9378
							],
							[
								9402,
								9422
							],
							[
								9441,
								9447
							],
							[
								9520,
								9559
							],
							[
								9665,
								9690
							],
							[
								9714,
								9734
							],
							[
								9754,
								9760
							],
							[
								9834,
								9874
							],
							[
								10730,
								10763
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAA6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1196,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5763,
								5820
							],
							[
								6589,
								6612
							],
							[
								6692,
								6718
							],
							[
								6829,
								6858
							],
							[
								6957,
								6996
							],
							[
								7047,
								7107
							],
							[
								7328,
								7371
							],
							[
								7692,
								7719
							],
							[
								7766,
								7794
							],
							[
								7842,
								7870
							],
							[
								7918,
								7956
							],
							[
								8014,
								8042
							],
							[
								8140,
								8175
							],
							[
								8230,
								8256
							],
							[
								8302,
								8347
							],
							[
								8837,
								8853
							],
							[
								8912,
								8951
							],
							[
								9063,
								9103
							],
							[
								9216,
								9254
							],
							[
								9359,
								9383
							],
							[
								9407,
								9427
							],
							[
								9446,
								9452
							],
							[
								9525,
								9564
							],
							[
								9670,
								9695
							],
							[
								9719,
								9739
							],
							[
								9759,
								9765
							],
							[
								9839,
								9879
							],
							[
								10735,
								10768
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1197,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5763,
								5820
							],
							[
								6589,
								6612
							],
							[
								6692,
								6718
							],
							[
								6829,
								6858
							],
							[
								6957,
								6996
							],
							[
								7047,
								7107
							],
							[
								7328,
								7371
							],
							[
								7692,
								7719
							],
							[
								7766,
								7794
							],
							[
								7842,
								7870
							],
							[
								7918,
								7956
							],
							[
								8014,
								8042
							],
							[
								8140,
								8175
							],
							[
								8230,
								8256
							],
							[
								8302,
								8347
							],
							[
								8837,
								8853
							],
							[
								8912,
								8951
							],
							[
								9063,
								9103
							],
							[
								9216,
								9254
							],
							[
								9359,
								9383
							],
							[
								9407,
								9427
							],
							[
								9446,
								9452
							],
							[
								9525,
								9564
							],
							[
								9670,
								9695
							],
							[
								9719,
								9739
							],
							[
								9759,
								9765
							],
							[
								9839,
								9879
							],
							[
								10735,
								10768
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAOgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1198,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1199,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5763,
								5820
							],
							[
								6589,
								6612
							],
							[
								6692,
								6718
							],
							[
								6829,
								6858
							],
							[
								6957,
								6996
							],
							[
								7047,
								7107
							],
							[
								7328,
								7371
							],
							[
								7692,
								7719
							],
							[
								7766,
								7794
							],
							[
								7842,
								7870
							],
							[
								7918,
								7956
							],
							[
								8014,
								8042
							],
							[
								8140,
								8175
							],
							[
								8230,
								8256
							],
							[
								8302,
								8347
							],
							[
								8837,
								8853
							],
							[
								8912,
								8951
							],
							[
								9063,
								9103
							],
							[
								9216,
								9254
							],
							[
								9359,
								9383
							],
							[
								9407,
								9427
							],
							[
								9446,
								9452
							],
							[
								9525,
								9564
							],
							[
								9670,
								9695
							],
							[
								9719,
								9739
							],
							[
								9759,
								9765
							],
							[
								9839,
								9879
							],
							[
								10735,
								10768
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"BQAAAAAAAAAAAAAA6AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOgEAAAgIHN0cmVycihyZXQpCiAgbnVtZXJyKHJldCkKU3RhdHMKICBjb25zdHJ1Y3RvcihzdCkKICBpc0RpcmVjdG9yeSgpCiAgaXNDaGFyYWN0ZXJEZXZpY2UoKQogIGlzQmxvY2tEZXZpY2UoKQogIGlzRmlsZSgpCiAgaXNGSUZPKCkKICBpc1N5bWJvbGljTGluaygpCiAgaXNTb2NrZXQoKQogIGdldCBlcnJubygpCiAgZ2V0IGVycnN0cigpCiAgZ2V0IHN0ZGluKCkKICBnZXQgc3Rkb3V0KCkKICBnZXQgc3RkZXJyKCkKICBidWZmZXIobGVuZ3RoKQogIGJ1ZmZlckZyb20oY2h1bmssIG9mZnNldCwgbGVuZ3RoKQogIGJ1ZmZlclNpemUoYnVmKQogIGJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCiAgZm9wZW4oZmlsZW5hbWUsIGZsYWdzID0gJ3InLCBtb2RlID0gMG82NDQpCiAgZmRvcGVuKGZkLCBmbGFncyA9ICdyJykKICBwdXRzKGZkLCBzdHIpCiAgZmx1c2hTeW5jKGZpbGUpCiAgc2VlayhmZCwgb2Zmc2V0LCB3aGVuY2UpCiAgdGVsbChmaWxlKQogIHNpemVTeW5jKGZpbGUpCiAgZ2V0Y3dkKCkKICBjaGRpcihwYXRoKQogIGlzYXR0eShmaWxlKQogIGZpbGVubyhmaWxlKQogIHJlYWRGaWxlU3luYyhmaWxlbmFtZSwgb3B0aW9ucyA9IHt9KQogIHdyaXRlRmlsZVN5bmMoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgY2xvc2VTeW5jKGZkKQogIGV4aXN0c1N5bmMocGF0aCkKICBsc3RhdFN5bmMocGF0aCwgY2IpCiAgbWtkaXJTeW5jKHBhdGgsIG1vZGUgPSAwbzc3NykKICBvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQogIHJlYWRTeW5jKGZkLCBidWYsIG9mZnNldCwgbGVuZ3RoKQogIHJlYWRkaXJTeW5jKHBhdGgpCiAgcmVhZGxpbmtTeW5jKHBhdGgpCiAgcmVhbHBhdGhTeW5jKHBhdGgpCiAgcmVuYW1lU3luYyhvbGRuYW1lLCBuZXduYW1lKQogIHN0YXRTeW5jKHBhdGgsIGNiKQogIHN5bWxpbmtTeW5jKHRhcmdldCwgcGF0aCkKICB1bmxpbmtTeW5jKHBhdGgpCiAgd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKICBwaXBlKCkKICBzZXRSZWFkSGFuZGxlcihmaWxlLCBoYW5kbGVyKQogIHNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQogIG9uUmVhZChmaWxlLCBoYW5kbGVyID0gbnVsbCkKICB3YWl0UmVhZChmaWxlKQogIG9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFdyaXRlKGZpbGUpCiAgcmVhZEFsbChpbnB1dCwgYnVmU2l6ZSA9IDEwMjQpCkVuY29kaW5nMkJ5dGVzKGVuY29kaW5nKQAAAAAAAAAA6AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOgEAAAgIHN0cmVycihyZXQpCiAgbnVtZXJyKHJldCkKU3RhdHMKICBjb25zdHJ1Y3RvcihzdCkKICBpc0RpcmVjdG9yeSgpCiAgaXNDaGFyYWN0ZXJEZXZpY2UoKQogIGlzQmxvY2tEZXZpY2UoKQogIGlzRmlsZSgpCiAgaXNGSUZPKCkKICBpc1N5bWJvbGljTGluaygpCiAgaXNTb2NrZXQoKQogIGdldCBlcnJubygpCiAgZ2V0IGVycnN0cigpCiAgZ2V0IHN0ZGluKCkKICBnZXQgc3Rkb3V0KCkKICBnZXQgc3RkZXJyKCkKICBidWZmZXIobGVuZ3RoKQogIGJ1ZmZlckZyb20oY2h1bmssIG9mZnNldCwgbGVuZ3RoKQogIGJ1ZmZlclNpemUoYnVmKQogIGJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCiAgZm9wZW4oZmlsZW5hbWUsIGZsYWdzID0gJ3InLCBtb2RlID0gMG82NDQpCiAgZmRvcGVuKGZkLCBmbGFncyA9ICdyJykKICBwdXRzKGZkLCBzdHIpCiAgZmx1c2hTeW5jKGZpbGUpCiAgc2VlayhmZCwgb2Zmc2V0LCB3aGVuY2UpCiAgdGVsbChmaWxlKQogIHNpemVTeW5jKGZpbGUpCiAgZ2V0Y3dkKCkKICBjaGRpcihwYXRoKQogIGlzYXR0eShmaWxlKQogIGZpbGVubyhmaWxlKQogIHJlYWRGaWxlU3luYyhmaWxlbmFtZSwgb3B0aW9ucyA9IHt9KQogIHdyaXRlRmlsZVN5bmMoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgY2xvc2VTeW5jKGZkKQogIGV4aXN0c1N5bmMocGF0aCkKICBsc3RhdFN5bmMocGF0aCwgY2IpCiAgbWtkaXJTeW5jKHBhdGgsIG1vZGUgPSAwbzc3NykKICBvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQogIHJlYWRTeW5jKGZkLCBidWYsIG9mZnNldCwgbGVuZ3RoKQogIHJlYWRkaXJTeW5jKHBhdGgpCiAgcmVhZGxpbmtTeW5jKHBhdGgpCiAgcmVhbHBhdGhTeW5jKHBhdGgpCiAgcmVuYW1lU3luYyhvbGRuYW1lLCBuZXduYW1lKQogIHN0YXRTeW5jKHBhdGgsIGNiKQogIHN5bWxpbmtTeW5jKHRhcmdldCwgcGF0aCkKICB1bmxpbmtTeW5jKHBhdGgpCiAgd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKICBwaXBlKCkKICBzZXRSZWFkSGFuZGxlcihmaWxlLCBoYW5kbGVyKQogIHNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQogIG9uUmVhZChmaWxlLCBoYW5kbGVyID0gbnVsbCkKICB3YWl0UmVhZChmaWxlKQogIG9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFdyaXRlKGZpbGUpCiAgcmVhZEFsbChpbnB1dCwgYnVmU2l6ZSA9IDEwMjQpCkVuY29kaW5nMkJ5dGVzKGVuY29kaW5nKQAAAAAAAAAA6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1200,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1201,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5763,
								5820
							],
							[
								6589,
								6612
							],
							[
								6692,
								6718
							],
							[
								6829,
								6858
							],
							[
								6957,
								6996
							],
							[
								7047,
								7107
							],
							[
								7328,
								7371
							],
							[
								7692,
								7719
							],
							[
								7766,
								7794
							],
							[
								7842,
								7870
							],
							[
								7918,
								7956
							],
							[
								8014,
								8042
							],
							[
								8140,
								8175
							],
							[
								8230,
								8256
							],
							[
								8302,
								8347
							],
							[
								8837,
								8853
							],
							[
								8912,
								8951
							],
							[
								9063,
								9103
							],
							[
								9216,
								9254
							],
							[
								9359,
								9383
							],
							[
								9407,
								9427
							],
							[
								9446,
								9452
							],
							[
								9525,
								9564
							],
							[
								9670,
								9695
							],
							[
								9719,
								9739
							],
							[
								9759,
								9765
							],
							[
								9839,
								9879
							],
							[
								10735,
								10768
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AwAAAAAAAAAAAAAA6AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOgEAAAgIHN0cmVycihyZXQpCiAgbnVtZXJyKHJldCkKU3RhdHMKICBjb25zdHJ1Y3RvcihzdCkKICBpc0RpcmVjdG9yeSgpCiAgaXNDaGFyYWN0ZXJEZXZpY2UoKQogIGlzQmxvY2tEZXZpY2UoKQogIGlzRmlsZSgpCiAgaXNGSUZPKCkKICBpc1N5bWJvbGljTGluaygpCiAgaXNTb2NrZXQoKQogIGdldCBlcnJubygpCiAgZ2V0IGVycnN0cigpCiAgZ2V0IHN0ZGluKCkKICBnZXQgc3Rkb3V0KCkKICBnZXQgc3RkZXJyKCkKICBidWZmZXIobGVuZ3RoKQogIGJ1ZmZlckZyb20oY2h1bmssIG9mZnNldCwgbGVuZ3RoKQogIGJ1ZmZlclNpemUoYnVmKQogIGJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCiAgZm9wZW4oZmlsZW5hbWUsIGZsYWdzID0gJ3InLCBtb2RlID0gMG82NDQpCiAgZmRvcGVuKGZkLCBmbGFncyA9ICdyJykKICBwdXRzKGZkLCBzdHIpCiAgZmx1c2hTeW5jKGZpbGUpCiAgc2VlayhmZCwgb2Zmc2V0LCB3aGVuY2UpCiAgdGVsbChmaWxlKQogIHNpemVTeW5jKGZpbGUpCiAgZ2V0Y3dkKCkKICBjaGRpcihwYXRoKQogIGlzYXR0eShmaWxlKQogIGZpbGVubyhmaWxlKQogIHJlYWRGaWxlU3luYyhmaWxlbmFtZSwgb3B0aW9ucyA9IHt9KQogIHdyaXRlRmlsZVN5bmMoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgY2xvc2VTeW5jKGZkKQogIGV4aXN0c1N5bmMocGF0aCkKICBsc3RhdFN5bmMocGF0aCwgY2IpCiAgbWtkaXJTeW5jKHBhdGgsIG1vZGUgPSAwbzc3NykKICBvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQogIHJlYWRTeW5jKGZkLCBidWYsIG9mZnNldCwgbGVuZ3RoKQogIHJlYWRkaXJTeW5jKHBhdGgpCiAgcmVhZGxpbmtTeW5jKHBhdGgpCiAgcmVhbHBhdGhTeW5jKHBhdGgpCiAgcmVuYW1lU3luYyhvbGRuYW1lLCBuZXduYW1lKQogIHN0YXRTeW5jKHBhdGgsIGNiKQogIHN5bWxpbmtTeW5jKHRhcmdldCwgcGF0aCkKICB1bmxpbmtTeW5jKHBhdGgpCiAgd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKICBwaXBlKCkKICBzZXRSZWFkSGFuZGxlcihmaWxlLCBoYW5kbGVyKQogIHNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQogIG9uUmVhZChmaWxlLCBoYW5kbGVyID0gbnVsbCkKICB3YWl0UmVhZChmaWxlKQogIG9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFdyaXRlKGZpbGUpCiAgcmVhZEFsbChpbnB1dCwgYnVmU2l6ZSA9IDEwMjQpCkVuY29kaW5nMkJ5dGVzKGVuY29kaW5nKQAAAAAAAAAA6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1202,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADoBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIG9wdGlvbnMgPSB7fSkKICB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGNsb3NlU3luYyhmZCkKICBleGlzdHNTeW5jKHBhdGgpCiAgbHN0YXRTeW5jKHBhdGgsIGNiKQogIG1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCiAgb3BlblN5bmMoZmlsZW5hbWUsIGZsYWdzID0gT19SRE9OTFksIG1vZGUgPSAweDFhNCkKICByZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKICByZWFkZGlyU3luYyhwYXRoKQogIHJlYWRsaW5rU3luYyhwYXRoKQogIHJlYWxwYXRoU3luYyhwYXRoKQogIHJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKICBzdGF0U3luYyhwYXRoLCBjYikKICBzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCiAgdW5saW5rU3luYyhwYXRoKQogIHdyaXRlU3luYyhmZCwgZGF0YSwgb2Zmc2V0LCBsZW5ndGgpCiAgcGlwZSgpCiAgc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBzZXRXcml0ZUhhbmRsZXIoZmlsZSwgaGFuZGxlcikKICBvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFJlYWQoZmlsZSkKICBvbldyaXRlKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRXcml0ZShmaWxlKQogIHJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1203,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1204,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								363,
								383
							],
							[
								479,
								499
							],
							[
								655,
								660
							],
							[
								665,
								680
							],
							[
								762,
								775
							],
							[
								823,
								842
							],
							[
								890,
								905
							],
							[
								953,
								961
							],
							[
								1009,
								1017
							],
							[
								1065,
								1081
							],
							[
								1129,
								1139
							],
							[
								1304,
								1315
							],
							[
								1369,
								1381
							],
							[
								1846,
								1857
							],
							[
								1912,
								1924
							],
							[
								1980,
								1992
							],
							[
								2261,
								2285
							],
							[
								2543,
								2586
							],
							[
								2772,
								2797
							],
							[
								3034,
								3079
							],
							[
								3183,
								3235
							],
							[
								3378,
								3411
							],
							[
								3550,
								3573
							],
							[
								3833,
								3858
							],
							[
								3972,
								4006
							],
							[
								4325,
								4345
							],
							[
								4497,
								4521
							],
							[
								4720,
								4738
							],
							[
								4780,
								4801
							],
							[
								4846,
								4868
							],
							[
								4929,
								4951
							],
							[
								5110,
								5156
							],
							[
								5763,
								5820
							],
							[
								6589,
								6612
							],
							[
								6692,
								6718
							],
							[
								6829,
								6858
							],
							[
								6957,
								6996
							],
							[
								7047,
								7107
							],
							[
								7328,
								7371
							],
							[
								7692,
								7719
							],
							[
								7766,
								7794
							],
							[
								7842,
								7870
							],
							[
								7918,
								7956
							],
							[
								8014,
								8042
							],
							[
								8140,
								8175
							],
							[
								8230,
								8256
							],
							[
								8302,
								8347
							],
							[
								8837,
								8853
							],
							[
								8912,
								8951
							],
							[
								9063,
								9103
							],
							[
								9216,
								9254
							],
							[
								9359,
								9383
							],
							[
								9407,
								9427
							],
							[
								9446,
								9452
							],
							[
								9525,
								9564
							],
							[
								9670,
								9695
							],
							[
								9719,
								9739
							],
							[
								9759,
								9765
							],
							[
								9839,
								9879
							],
							[
								10735,
								10768
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAA6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "child-process.h",
			"settings":
			{
				"buffer_size": 1588,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\nextern"
					},
					"BwAAAEQDAAAAAAAARQMAAAAAAAAAAAAARQMAAAAAAABGAwAAAAAAAAAAAABGAwAAAAAAAEcDAAAAAAAAAAAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAABJAwAAAAAAAEoDAAAAAAAAAAAAAEoDAAAAAAAASwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAMAAAAAAABEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEsDAAAAAAAATAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAAEwDAAAAAAAAcwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAMAAAAAAABMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAAHIDAAAAAAAAcgMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAcwMAAAAAAABzAwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHIDAAAAAAAAcwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgMAAAAAAAByAwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHMDAAAAAAAAdAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwMAAAAAAABzAwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAwAAI2lmbmRlZiBDSElMRF9QUk9DRVNTX0gKI2RlZmluZSBDSElMRF9QUk9DRVNTX0gKCiNpbmNsdWRlICJxdWlja2pzLmgiCiNpbmNsdWRlICJsaXN0LmgiCgojaW5jbHVkZSA8c3RkaW50Lmg+Cgp0eXBlZGVmIHN0cnVjdCBDaGlsZFByb2Nlc3MgewogIGNoYXIqIGZpbGU7CiAgY2hhciogY3dkOwogIGNoYXIqKiBhcmdzOwogIGNoYXIqKiBlbnY7CiAgaW50IHBpZDsKICBpbnQgZXhpdGNvZGU7CiAgaW50IHRlcm1zaWc7CiAgaW50IHN0b3BzaWc7CiAgdW5zaWduZWQgc2lnbmFsZWQgOiAxLCBzdG9wcGVkIDogMSwgY29udGludWVkIDogMTsKICB1aW50MzJfdCB1aWQsIGdpZDsKICBpbnQgbnVtX2ZkczsKICBpbnQgKmNoaWxkX2ZkcywgKnBhcmVudF9mZHM7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwp9IENoaWxkUHJvY2VzczsKCmNoYXIqKiBjaGlsZF9wcm9jZXNzX2Vudmlyb25tZW50KEpTQ29udGV4dCosIEpTVmFsdWUgb2JqZWN0KTsKQ2hpbGRQcm9jZXNzKiBjaGlsZF9wcm9jZXNzX25ldyhKU0NvbnRleHQqKTsKQ2hpbGRQcm9jZXNzKiBjaGlsZF9wcm9jZXNzX2dldChpbnQgcGlkKTsKdm9pZCBjaGlsZF9wcm9jZXNzX3NpZ2NobGQoaW50IHBpZCk7CmludCBjaGlsZF9wcm9jZXNzX3NwYXduKENoaWxkUHJvY2VzcyopOwppbnQgY2hpbGRfcHJvY2Vzc193YWl0KENoaWxkUHJvY2VzcyosIGludCk7CmludCBjaGlsZF9wcm9jZXNzX2tpbGwoQ2hpbGRQcm9jZXNzKiwgaW50KTsKdm9pZCBjaGlsZF9wcm9jZXNzX2ZyZWUoQ2hpbGRQcm9jZXNzKiwgSlNDb250ZXh0Kik7CnZvaWQgY2hpbGRfcHJvY2Vzc19mcmVlX3J0KENoaWxkUHJvY2VzcyosIEpTUnVudGltZSopOwoKZXh0ZXJuIGNvbnN0IGNoYXIqIGNoaWxkX3Byb2Nlc3Nfc2lnbmFscyBbMzJdOwoKI2VuZGlmIC8qIGRlZmluZWQoQ0hJTERfUFJPQ0VTU19IKSAqLwoAAAAAAAAAAJoDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAMAAAAAAABtAwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\n\n#ifdef"
					},
					"CAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAABuAAAAAAAAAG8AAAAAAAAAAAAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAAAAAAAAABsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " _WIHN"
					},
					"BgAAAHQAAAAAAAAAdQAAAAAAAAAAAAAAdQAAAAAAAAB2AAAAAAAAAAAAAAB2AAAAAAAAAHcAAAAAAAAAAAAAAHcAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB5AAAAAAAAAAAAAAB5AAAAAAAAAHoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					2,
					"left_delete",
					null,
					"AgAAAHkAAAAAAAAAeQAAAAAAAAABAAAATngAAAAAAAAAeAAAAAAAAAABAAAASA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "N32"
					},
					"AwAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHsAAAAAAAAAfAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"paste",
					null,
					"AQAAAHwAAAAAAAAAOQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "#endif"
					},
					"BgAAADkDAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA7AwAAAAAAAAAAAAA7AwAAAAAAADwDAAAAAAAAAAAAADwDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQMAAAAAAAA5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJgAAAAAAAAAmQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"paste",
					null,
					"AQAAAJkAAAAAAAAArgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQAAAAAAAACZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAK0AAAAAAAAArQAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "intptr_t"
					},
					"CQAAAK4DAAAAAAAArwMAAAAAAAAAAAAArwMAAAAAAACvAwAAAAAAAAMAAABpbnSvAwAAAAAAALADAAAAAAAAAAAAALADAAAAAAAAsQMAAAAAAAAAAAAAsQMAAAAAAACyAwAAAAAAAAAAAACyAwAAAAAAALMDAAAAAAAAAAAAALMDAAAAAAAAtAMAAAAAAAAAAAAAtAMAAAAAAAC1AwAAAAAAAAAAAAC1AwAAAAAAALYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgMAAAAAAACxAwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACHBgAAI2lmbmRlZiBDSElMRF9QUk9DRVNTX0gKI2RlZmluZSBDSElMRF9QUk9DRVNTX0gKCiNpbmNsdWRlICJxdWlja2pzLmgiCiNpbmNsdWRlICJsaXN0LmgiCgojaW5jbHVkZSA8c3RkaW50Lmg+CgojaWZkZWYgX1dJTjMyCiNkZWZpbmUgV05PV0FJVCAgICAweDEwMDAwMDAKI2RlZmluZSBXTk9IQU5HICAgIDEKI2RlZmluZSBXVU5UUkFDRUQgIDIKI2RlZmluZSBTSUdIVVAgICAgIDEKI2RlZmluZSBTSUdJTlQgICAgIDIKI2RlZmluZSBTSUdRVUlUICAgIDMKI2RlZmluZSBTSUdJTEwgICAgIDQKI2RlZmluZSBTSUdUUkFQICAgIDUKI2RlZmluZSBTSUdBQlJUICAgIDYKI2RlZmluZSBTSUdCVVMgICAgIDcKI2RlZmluZSBTSUdGUEUgICAgIDgKI2RlZmluZSBTSUdLSUxMICAgIDkKI2RlZmluZSBTSUdVU1IxICAgMTAKI2RlZmluZSBTSUdTRUdWICAgMTEKI2RlZmluZSBTSUdVU1IyICAgMTIKI2RlZmluZSBTSUdQSVBFICAgMTMKI2RlZmluZSBTSUdBTFJNICAgMTQKI2RlZmluZSBTSUdURVJNICAgMTUKI2RlZmluZSBTSUdTVEtGTFQgMTYKI2RlZmluZSBTSUdDSExEICAgMTcKI2RlZmluZSBTSUdDT05UICAgMTgKI2RlZmluZSBTSUdTVE9QICAgMTkKI2RlZmluZSBTSUdUU1RQICAgMjAKI2RlZmluZSBTSUdUVElOICAgMjEKI2RlZmluZSBTSUdUVE9VICAgMjIKI2RlZmluZSBTSUdVUkcgICAgMjMKI2RlZmluZSBTSUdYQ1BVICAgMjQKI2RlZmluZSBTSUdYRlNaICAgMjUKI2RlZmluZSBTSUdWVEFMUk0gMjYKI2RlZmluZSBTSUdQUk9GICAgMjcKI2RlZmluZSBTSUdXSU5DSCAgMjgKI2RlZmluZSBTSUdJTyAgICAgMjkKI2RlZmluZSBTSUdQV1IgICAgMzAKI2RlZmluZSBTSUdTWVMgICAgMzEKI2VuZGlmCgp0eXBlZGVmIHN0cnVjdCBDaGlsZFByb2Nlc3MgewogIGNoYXIqIGZpbGU7CiAgY2hhciogY3dkOwogIGNoYXIqKiBhcmdzOwogIGNoYXIqKiBlbnY7CiAgaW50cHRyX3QgcGlkOwogIGludCBleGl0Y29kZTsKICBpbnQgdGVybXNpZzsKICBpbnQgc3RvcHNpZzsKICB1bnNpZ25lZCBzaWduYWxlZCA6IDEsIHN0b3BwZWQgOiAxLCBjb250aW51ZWQgOiAxOwogIHVpbnQzMl90IHVpZCwgZ2lkOwogIGludCBudW1fZmRzOwogIGludCAqY2hpbGRfZmRzLCAqcGFyZW50X2ZkczsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn0gQ2hpbGRQcm9jZXNzOwoKY2hhcioqIGNoaWxkX3Byb2Nlc3NfZW52aXJvbm1lbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSBvYmplY3QpOwpDaGlsZFByb2Nlc3MqIGNoaWxkX3Byb2Nlc3NfbmV3KEpTQ29udGV4dCopOwpDaGlsZFByb2Nlc3MqIGNoaWxkX3Byb2Nlc3NfZ2V0KGludCBwaWQpOwp2b2lkIGNoaWxkX3Byb2Nlc3Nfc2lnY2hsZChpbnQgcGlkKTsKaW50IGNoaWxkX3Byb2Nlc3Nfc3Bhd24oQ2hpbGRQcm9jZXNzKik7CmludCBjaGlsZF9wcm9jZXNzX3dhaXQoQ2hpbGRQcm9jZXNzKiwgaW50KTsKaW50IGNoaWxkX3Byb2Nlc3Nfa2lsbChDaGlsZFByb2Nlc3MqLCBpbnQpOwp2b2lkIGNoaWxkX3Byb2Nlc3NfZnJlZShDaGlsZFByb2Nlc3MqLCBKU0NvbnRleHQqKTsKdm9pZCBjaGlsZF9wcm9jZXNzX2ZyZWVfcnQoQ2hpbGRQcm9jZXNzKiwgSlNSdW50aW1lKik7CgpleHRlcm4gY29uc3QgY2hhciogY2hpbGRfcHJvY2Vzc19zaWduYWxzWzMyXTsKCiNlbmRpZiAvKiBkZWZpbmVkKENISUxEX1BST0NFU1NfSCkgKi8KAAAAAAAAAAA0BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgMAAAAAAAC2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA0BgAAI2lmbmRlZiBDSElMRF9QUk9DRVNTX0gKI2RlZmluZSBDSElMRF9QUk9DRVNTX0gKCiNpbmNsdWRlICJxdWlja2pzLmgiCiNpbmNsdWRlICJsaXN0LmgiCgojaW5jbHVkZSA8c3RkaW50Lmg+CgojaWZkZWYgX1dJTjMyCiNkZWZpbmUgV05PV0FJVCAweDEwMDAwMDAKI2RlZmluZSBXTk9IQU5HIDEKI2RlZmluZSBXVU5UUkFDRUQgMgojZGVmaW5lIFNJR0hVUCAxCiNkZWZpbmUgU0lHSU5UIDIKI2RlZmluZSBTSUdRVUlUIDMKI2RlZmluZSBTSUdJTEwgNAojZGVmaW5lIFNJR1RSQVAgNQojZGVmaW5lIFNJR0FCUlQgNgojZGVmaW5lIFNJR0JVUyA3CiNkZWZpbmUgU0lHRlBFIDgKI2RlZmluZSBTSUdLSUxMIDkKI2RlZmluZSBTSUdVU1IxIDEwCiNkZWZpbmUgU0lHU0VHViAxMQojZGVmaW5lIFNJR1VTUjIgMTIKI2RlZmluZSBTSUdQSVBFIDEzCiNkZWZpbmUgU0lHQUxSTSAxNAojZGVmaW5lIFNJR1RFUk0gMTUKI2RlZmluZSBTSUdTVEtGTFQgMTYKI2RlZmluZSBTSUdDSExEIDE3CiNkZWZpbmUgU0lHQ09OVCAxOAojZGVmaW5lIFNJR1NUT1AgMTkKI2RlZmluZSBTSUdUU1RQIDIwCiNkZWZpbmUgU0lHVFRJTiAyMQojZGVmaW5lIFNJR1RUT1UgMjIKI2RlZmluZSBTSUdVUkcgMjMKI2RlZmluZSBTSUdYQ1BVIDI0CiNkZWZpbmUgU0lHWEZTWiAyNQojZGVmaW5lIFNJR1ZUQUxSTSAyNgojZGVmaW5lIFNJR1BST0YgMjcKI2RlZmluZSBTSUdXSU5DSCAyOAojZGVmaW5lIFNJR0lPIDI5CiNkZWZpbmUgU0lHUFdSIDMwCiNkZWZpbmUgU0lHU1lTIDMxCiNlbmRpZgoKdHlwZWRlZiBzdHJ1Y3QgQ2hpbGRQcm9jZXNzIHsKICBjaGFyKiBmaWxlOwogIGNoYXIqIGN3ZDsKICBjaGFyKiogYXJnczsKICBjaGFyKiogZW52OwogIGludHB0cl90IHBpZDsKICBpbnQgZXhpdGNvZGU7CiAgaW50IHRlcm1zaWc7CiAgaW50IHN0b3BzaWc7CiAgdW5zaWduZWQgc2lnbmFsZWQgOiAxLCBzdG9wcGVkIDogMSwgY29udGludWVkIDogMTsKICB1aW50MzJfdCB1aWQsIGdpZDsKICBpbnQgbnVtX2ZkczsKICBpbnQgKmNoaWxkX2ZkcywgKnBhcmVudF9mZHM7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwp9IENoaWxkUHJvY2VzczsKCmNoYXIqKiBjaGlsZF9wcm9jZXNzX2Vudmlyb25tZW50KEpTQ29udGV4dCosIEpTVmFsdWUgb2JqZWN0KTsKQ2hpbGRQcm9jZXNzKiBjaGlsZF9wcm9jZXNzX25ldyhKU0NvbnRleHQqKTsKQ2hpbGRQcm9jZXNzKiBjaGlsZF9wcm9jZXNzX2dldChpbnQgcGlkKTsKdm9pZCBjaGlsZF9wcm9jZXNzX3NpZ2NobGQoaW50IHBpZCk7CmludCBjaGlsZF9wcm9jZXNzX3NwYXduKENoaWxkUHJvY2VzcyopOwppbnQgY2hpbGRfcHJvY2Vzc193YWl0KENoaWxkUHJvY2VzcyosIGludCk7CmludCBjaGlsZF9wcm9jZXNzX2tpbGwoQ2hpbGRQcm9jZXNzKiwgaW50KTsKdm9pZCBjaGlsZF9wcm9jZXNzX2ZyZWUoQ2hpbGRQcm9jZXNzKiwgSlNDb250ZXh0Kik7CnZvaWQgY2hpbGRfcHJvY2Vzc19mcmVlX3J0KENoaWxkUHJvY2VzcyosIEpTUnVudGltZSopOwoKZXh0ZXJuIGNvbnN0IGNoYXIqIGNoaWxkX3Byb2Nlc3Nfc2lnbmFsc1szMl07CgojZW5kaWYgLyogZGVmaW5lZChDSElMRF9QUk9DRVNTX0gpICovCgAAAAAAAAAANAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgMAAAAAAAC2AwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "child-process.c",
			"settings":
			{
				"buffer_size": 7200,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n#ifdef"
					},
					"CAAAAJMSAAAAAAAAlBIAAAAAAAAAAAAAlBIAAAAAAACWEgAAAAAAAAAAAACWEgAAAAAAAJcSAAAAAAAAAAAAAJcSAAAAAAAAmBIAAAAAAAAAAAAAmBIAAAAAAACZEgAAAAAAAAAAAACZEgAAAAAAAJoSAAAAAAAAAAAAAJoSAAAAAAAAmxIAAAAAAAAAAAAAmxIAAAAAAACcEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxIAAAAAAACTEgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " _WIN32"
					},
					"BwAAAJwSAAAAAAAAnRIAAAAAAAAAAAAAnRIAAAAAAACeEgAAAAAAAAAAAACeEgAAAAAAAJ8SAAAAAAAAAAAAAJ8SAAAAAAAAoBIAAAAAAAAAAAAAoBIAAAAAAAChEgAAAAAAAAAAAAChEgAAAAAAAKISAAAAAAAAAAAAAKISAAAAAAAAoxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBIAAAAAAACcEgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "\n#else"
					},
					"BwAAAKMSAAAAAAAApBIAAAAAAAAAAAAApBIAAAAAAACmEgAAAAAAAAAAAACmEgAAAAAAAKcSAAAAAAAAAAAAAKcSAAAAAAAAqBIAAAAAAAAAAAAAqBIAAAAAAACpEgAAAAAAAAAAAACpEgAAAAAAAKoSAAAAAAAAAAAAAKoSAAAAAAAAqxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoxIAAAAAAACjEgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "#endif"
					},
					"BgAAAIAUAAAAAAAAgRQAAAAAAAAAAAAAgRQAAAAAAACCFAAAAAAAAAAAAACCFAAAAAAAAIMUAAAAAAAAAAAAAIMUAAAAAAAAhBQAAAAAAAAAAAAAhBQAAAAAAACFFAAAAAAAAAAAAACFFAAAAAAAAIYUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgBQAAAAAAACAFAAAAAAAAAAAAAAAAAAA"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKMSAAAAAAAApBIAAAAAAAAAAAAApBIAAAAAAACmEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoxIAAAAAAACjEgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"paste",
					null,
					"AQAAAKYSAAAAAAAAoBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphIAAAAAAACmEgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"cut",
					null,
					"AQAAAIQWAAAAAAAAhBYAAAAAAAAOAAAAICByZXR1cm4gcGlkOwo",
					"AQAAAAAAAAABAAAAhBYAAAAAAACSFgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"paste",
					null,
					"AQAAAH0WAAAAAAAAixYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfRYAAAAAAAB9FgAAAAAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAH0WAAAAAAAAfhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfRYAAAAAAAB9FgAAAAAAAAAAAAAAAAAA"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "cp-"
					},
					"AwAAACYTAAAAAAAAJxMAAAAAAAAAAAAAJxMAAAAAAAAoEwAAAAAAAAAAAAAoEwAAAAAAACkTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJhMAAAAAAAAmEwAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAACkTAAAAAAAAKhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKRMAAAAAAAApEwAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"left_delete",
					null,
					"AQAAADwTAAAAAAAAPBMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAPRMAAAAAAAA9EwAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANMSAAAAAAAA1BIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xIAAAAAAADTEgAAAAAAAAAAAAAAQFNA"
				],
				[
					75,
					2,
					"left_delete",
					null,
					"AgAAANMSAAAAAAAA0xIAAAAAAAABAAAALNISAAAAAAAA0hIAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA1BIAAAAAAADUEgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": ",ret"
					},
					"BAAAANISAAAAAAAA0xIAAAAAAAAAAAAA0xIAAAAAAADUEgAAAAAAAAAAAADUEgAAAAAAANUSAAAAAAAAAAAAANUSAAAAAAAA1hIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hIAAAAAAADSEgAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AgAAANYSAAAAAAAA1xIAAAAAAAAAAAAA1xIAAAAAAADXEgAAAAAAAAsAAAAKICBpbnQgcmV0Ow",
					"AQAAAAAAAAABAAAA1hIAAAAAAADhEgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "cp->exit"
					},
					"CQAAAGIUAAAAAAAAYxQAAAAAAAAAAAAAYxQAAAAAAABjFAAAAAAAAAYAAAAqd3N0YXRjFAAAAAAAAGQUAAAAAAAAAAAAAGQUAAAAAAAAZRQAAAAAAAAAAAAAZRQAAAAAAABmFAAAAAAAAAAAAABmFAAAAAAAAGcUAAAAAAAAAAAAAGcUAAAAAAAAaBQAAAAAAAAAAAAAaBQAAAAAAABpFAAAAAAAAAAAAABpFAAAAAAAAGoUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhQAAAAAAABoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "code"
					},
					"BAAAAGoUAAAAAAAAaxQAAAAAAAAAAAAAaxQAAAAAAABsFAAAAAAAAAAAAABsFAAAAAAAAG0UAAAAAAAAAAAAAG0UAAAAAAAAbhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahQAAAAAAABqFAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "cp->pid"
					},
					"CAAAAIgUAAAAAAAAiRQAAAAAAAAAAAAAiRQAAAAAAACJFAAAAAAAAAEAAAAxiRQAAAAAAACKFAAAAAAAAAAAAACKFAAAAAAAAIsUAAAAAAAAAAAAAIsUAAAAAAAAjBQAAAAAAAAAAAAAjBQAAAAAAACNFAAAAAAAAAAAAACNFAAAAAAAAI4UAAAAAAAAAAAAAI4UAAAAAAAAjxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBQAAAAAAACJFAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAqBQAAAAAAACoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMcbAAAAAAAAyBsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxsAAAAAAADHGwAAAAAAAAAAAAAA4HVA"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "\n#ifdef"
					},
					"CAAAAMEWAAAAAAAAwhYAAAAAAAAAAAAAwhYAAAAAAADEFgAAAAAAAAAAAADEFgAAAAAAAMUWAAAAAAAAAAAAAMUWAAAAAAAAxhYAAAAAAAAAAAAAxhYAAAAAAADHFgAAAAAAAAAAAADHFgAAAAAAAMgWAAAAAAAAAAAAAMgWAAAAAAAAyRYAAAAAAAAAAAAAyRYAAAAAAADKFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwRYAAAAAAADBFgAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": " _WIN32_"
					},
					"CAAAAMoWAAAAAAAAyxYAAAAAAAAAAAAAyxYAAAAAAADMFgAAAAAAAAAAAADMFgAAAAAAAM0WAAAAAAAAAAAAAM0WAAAAAAAAzhYAAAAAAAAAAAAAzhYAAAAAAADPFgAAAAAAAAAAAADPFgAAAAAAANAWAAAAAAAAAAAAANAWAAAAAAAA0RYAAAAAAAAAAAAA0RYAAAAAAADSFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyhYAAAAAAADKFgAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"left_delete",
					null,
					"AQAAANEWAAAAAAAA0RYAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAA0hYAAAAAAADSFgAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "\n#else"
					},
					"BwAAANEWAAAAAAAA0hYAAAAAAAAAAAAA0hYAAAAAAADUFgAAAAAAAAAAAADUFgAAAAAAANUWAAAAAAAAAAAAANUWAAAAAAAA1hYAAAAAAAAAAAAA1hYAAAAAAADXFgAAAAAAAAAAAADXFgAAAAAAANgWAAAAAAAAAAAAANgWAAAAAAAA2RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RYAAAAAAADRFgAAAAAAAAAAAAAAQFpA"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "\n#‚Ç¨ndif"
					},
					"CAAAAO4XAAAAAAAA7xcAAAAAAAAAAAAA7xcAAAAAAADxFwAAAAAAAAAAAADxFwAAAAAAAPIXAAAAAAAAAAAAAPIXAAAAAAAA8xcAAAAAAAAAAAAA8xcAAAAAAAD0FwAAAAAAAAAAAAD0FwAAAAAAAPUXAAAAAAAAAAAAAPUXAAAAAAAA9hcAAAAAAAAAAAAA9hcAAAAAAAD3FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hcAAAAAAADuFwAAAAAAAP///////+9/"
				],
				[
					178,
					3,
					"left_delete",
					null,
					"AwAAAPYXAAAAAAAA9hcAAAAAAAABAAAAZvUXAAAAAAAA9RcAAAAAAAABAAAAafQXAAAAAAAA9BcAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAA9xcAAAAAAAD3FwAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAPQXAAAAAAAA9RcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BcAAAAAAAD0FwAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					3,
					"left_delete",
					null,
					"AwAAAPQXAAAAAAAA9BcAAAAAAAABAAAAZfMXAAAAAAAA8xcAAAAAAAABAAAAbvIXAAAAAAAA8hcAAAAAAAADAAAA4oKs",
					"AQAAAAAAAAABAAAA9RcAAAAAAAD1FwAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "endif"
					},
					"BQAAAPIXAAAAAAAA8xcAAAAAAAAAAAAA8xcAAAAAAAD0FwAAAAAAAAAAAAD0FwAAAAAAAPUXAAAAAAAAAAAAAPUXAAAAAAAA9hcAAAAAAAAAAAAA9hcAAAAAAAD3FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hcAAAAAAADyFwAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANEWAAAAAAAA0hYAAAAAAAAAAAAA0hYAAAAAAADUFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RYAAAAAAADRFgAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"paste",
					null,
					"AQAAANQWAAAAAAAA5BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BYAAAAAAADUFgAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOQWAAAAAAAA5hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5BYAAAAAAADkFgAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "cp->pid,"
					},
					"CAAAAOUWAAAAAAAA5hYAAAAAAAAAAAAA5hYAAAAAAADnFgAAAAAAAAAAAADnFgAAAAAAAOgWAAAAAAAAAAAAAOgWAAAAAAAA6RYAAAAAAAAAAAAA6RYAAAAAAADqFgAAAAAAAAAAAADqFgAAAAAAAOsWAAAAAAAAAAAAAOsWAAAAAAAA7BYAAAAAAAAAAAAA7BYAAAAAAADtFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RYAAAAAAADlFgAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO0WAAAAAAAA7hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RYAAAAAAADtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAO4WAAAAAAAA7xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hYAAAAAAADuFgAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPAWAAAAAAAA8RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BYAAAAAAADwFgAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAPEWAAAAAAAA8hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RYAAAAAAADxFgAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"left_delete",
					null,
					"AQAAAPEWAAAAAAAA8RYAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA8hYAAAAAAADyFgAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "8if"
					},
					"AwAAANQWAAAAAAAA1RYAAAAAAAAAAAAA1RYAAAAAAADWFgAAAAAAAAAAAADWFgAAAAAAANcWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BYAAAAAAADUFgAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					2,
					"left_delete",
					null,
					"AgAAANYWAAAAAAAA1hYAAAAAAAABAAAAZtUWAAAAAAAA1RYAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA1xYAAAAAAADXFgAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAANUWAAAAAAAA1hYAAAAAAAAAAAAA1hYAAAAAAADXFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1RYAAAAAAADVFgAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					3,
					"left_delete",
					null,
					"AwAAANYWAAAAAAAA1hYAAAAAAAABAAAAZtUWAAAAAAAA1RYAAAAAAAABAAAAadQWAAAAAAAA1BYAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAA1xYAAAAAAADXFgAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "if("
					},
					"AwAAANQWAAAAAAAA1RYAAAAAAAAAAAAA1RYAAAAAAADWFgAAAAAAAAAAAADWFgAAAAAAANcWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BYAAAAAAADUFgAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"left_delete",
					null,
					"AQAAAPMWAAAAAAAA8xYAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA9BYAAAAAAAD0FgAAAAAAAP///////+9/"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAPMWAAAAAAAA9BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8xYAAAAAAADzFgAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAPQWAAAAAAAA9RYAAAAAAAAAAAAA9RYAAAAAAAD3FgAAAAAAAAAAAAD1FgAAAAAAAPUWAAAAAAAAAgAAACAg9RYAAAAAAAD5FgAAAAAAAAAAAAD5FgAAAAAAAPoWAAAAAAAAAAAAAPoWAAAAAAAA+xYAAAAAAAAAAAAA+xYAAAAAAAD8FgAAAAAAAAAAAAD8FgAAAAAAAP0WAAAAAAAAAAAAAP0WAAAAAAAA/hYAAAAAAAAAAAAA/hYAAAAAAAD/FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BYAAAAAAAD0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": " 0;"
					},
					"AwAAAP8WAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAABFwAAAAAAAAAAAAABFwAAAAAAAAIXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xYAAAAAAAD/FgAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAAIXAAAAAAAAAxcAAAAAAAAAAAAAAxcAAAAAAAAHFwAAAAAAAAAAAAADFwAAAAAAAAMXAAAAAAAABAAAACAgICADFwAAAAAAAAUXAAAAAAAAAAAAAAUXAAAAAAAABhcAAAAAAAAAAAAABhcAAAAAAAAHFwAAAAAAAAAAAAAHFwAAAAAAAAgXAAAAAAAAAAAAAAgXAAAAAAAACRcAAAAAAAAAAAAACRcAAAAAAAAKFwAAAAAAAAAAAAAKFwAAAAAAAAsXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAhcAAAAAAAACFwAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": " -1;"
					},
					"BAAAAAsXAAAAAAAADBcAAAAAAAAAAAAADBcAAAAAAAANFwAAAAAAAAAAAAANFwAAAAAAAA4XAAAAAAAAAAAAAA4XAAAAAAAADxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxcAAAAAAAALFwAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAADxcAAAAAAAAPFwAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "\n#defin"
					},
					"BwAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALEAAAAAAAAAAAAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAACzAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAtQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					2,
					"left_delete",
					null,
					"AgAAAK8AAAAAAAAArwAAAAAAAAAGAAAAI2RlZmlurgAAAAAAAACuAAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAtQAAAAAAAACvAAAAAAAAAAAAAAAAAAAA"
				],
				[
					241,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-child-process.c",
			"settings":
			{
				"buffer_size": 14477,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					75,
					1,
					"paste",
					null,
					"AQAAAEshAAAAAAAAmSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASyEAAAAAAABLIQAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "child"
					},
					"BgAAAHQhAAAAAAAAdSEAAAAAAAAAAAAAdSEAAAAAAAB1IQAAAAAAAAgAAAB0aGlzX3ZhbHUhAAAAAAAAdiEAAAAAAAAAAAAAdiEAAAAAAAB3IQAAAAAAAAAAAAB3IQAAAAAAAHghAAAAAAAAAAAAAHghAAAAAAAAeSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdCEAAAAAAAB8IQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAB0jAAAAAAAAHiMAAAAAAAAAAAAAHiMAAAAAAAAeIwAAAAAAAEAAAABpZigoY3AgPSBqc19jaGlsZF9wcm9jZXNzX2RhdGEobWFnaWMgPyBhcmd2WzBdIDogdGhpc192YWwpKSkgewog",
					"AQAAAAAAAAABAAAAXSMAAAAAAAAdIwAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAEgjAAAAAAAASSMAAAAAAAAAAAAASSMAAAAAAABJIwAAAAAAAJEAAAAgfSBlbHNlIHsKICAgIGludDMyX3QgcGlkOwogICAgaW50IHN0YXR1czsKICAgIEpTX1RvSW50MzIoY3R4LCAmcGlkLCBjaGlsZCk7CiAgICByZXQgPSBraWxsKHBpZCwgc2lnbnVtKTsKICAgIHdhaXRwaWQocGlkLCAmc3RhdHVzLCBXTk9IQU5HKTsKICB9",
					"AQAAAAAAAAABAAAASCMAAAAAAADZIwAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAASSMAAAAAAABJIwAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "\n#define"
					},
					"CAAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIkAAAAAAAAAAAAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACLAAAAAAAAAAAAAACLAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": " pipe"
					},
					"BQAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJMAAAAAAAAAlQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwAAAAAAAACTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "fds"
					},
					"AwAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " _pipe"
					},
					"BgAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ4AAAAAAAAAoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "fds"
					},
					"AwAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAACiAAAAAAAAAKMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					4,
					"left_delete",
					null,
					"BAAAAKIAAAAAAAAAogAAAAAAAAABAAAAc6EAAAAAAAAAoQAAAAAAAAABAAAAZKAAAAAAAAAAoAAAAAAAAAABAAAAZp8AAAAAAAAAnwAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAowAAAAAAAACjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "fds,"
					},
					"BAAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAAChAAAAAAAAAAAAAAChAAAAAAAAAKIAAAAAAAAAAAAAAKIAAAAAAAAAowAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAClAAAAAAAAAKYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowAAAAAAAACjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " 0);"
					},
					"BAAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAKkAAAAAAAAAqgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgAAAAAAAACmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AQAAAKkAAAAAAAAAqQAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"left_delete",
					null,
					"AQAAAKQAAAAAAAAApAAAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAApQAAAAAAAAClAAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "4095"
					},
					"BAAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAKcAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"left_delete",
					null,
					"AQAAAKcAAAAAAAAApwAAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAKcAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 16171,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					39,
					1,
					"cut",
					null,
					"AQAAAOAXAAAAAAAA4BcAAAAAAAAtAAAAICBzZXQodXRpbF9TT1VSQ0VTICR7dXRpbF9TT1VSQ0VTfSBtZW1tZW0uYykK",
					"AQAAAAAAAAABAAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"paste",
					null,
					"AQAAAOAXAAAAAAAADRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4BcAAAAAAADgFwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"paste",
					null,
					"AQAAACQYAAAAAAAAURgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJBgAAAAAAAAkGAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAEcYAAAAAAAASBgAAAAAAAAAAAAASBgAAAAAAABIGAAAAAAAAAYAAABtZW1tZW0",
					"AQAAAAAAAAABAAAARxgAAAAAAABNGAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAAEcYAAAAAAAARxgAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAASBgAAAAAAABIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "qsort_r"
					},
					"BwAAAEcYAAAAAAAASBgAAAAAAAAAAAAASBgAAAAAAABJGAAAAAAAAAAAAABJGAAAAAAAAEoYAAAAAAAAAAAAAEoYAAAAAAAASxgAAAAAAAAAAAAASxgAAAAAAABMGAAAAAAAAAAAAABMGAAAAAAAAE0YAAAAAAAAAAAAAE0YAAAAAAAAThgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARxgAAAAAAABHGAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAAD4ZAAAAAAAAPhkAAAAAAAAKAAAAIHFzb3J0X3IuYw",
					"AQAAAAAAAAABAAAAPhkAAAAAAABIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"",
					null,
					"AQAAAPsZAAAAAAAA+xkAAAAAAAAKAAAAIHFzb3J0X3IuYw",
					"AQAAAAAAAAABAAAA+xkAAAAAAAAFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"",
					null,
					"AQAAAJMaAAAAAAAAkxoAAAAAAAAKAAAAIHFzb3J0X3IuYw",
					"AQAAAAAAAAABAAAAkxoAAAAAAACdGgAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"",
					null,
					"AQAAAIUbAAAAAAAAhRsAAAAAAAAKAAAAIHFzb3J0X3IuYw",
					"AQAAAAAAAAABAAAAhRsAAAAAAACPGwAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"join_lines",
					null,
					"AwAAAHUbAAAAAAAAdRsAAAAAAAABAAAACnUbAAAAAAAAdRsAAAAAAAAPAAAAICAgICAgICAgICAgICAgdRsAAAAAAAB2GwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJBsAAAAAAAAkGwAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALgdAAAAAAAAuR0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuB0AAAAAAAC4HQAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"paste",
					null,
					"AQAAALkdAAAAAAAAER4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuR0AAAAAAAC5HQAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"paste",
					null,
					"AgAAANIdAAAAAAAA4R0AAAAAAAAAAAAA4R0AAAAAAADhHQAAAAAAAAwAAABwYXRoX1NPVVJDRVM",
					"AQAAAAAAAAABAAAA0h0AAAAAAADeHQAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "LIBRARIES"
					},
					"CgAAANodAAAAAAAA2x0AAAAAAAAAAAAA2x0AAAAAAADbHQAAAAAAAAcAAABTT1VSQ0VT2x0AAAAAAADcHQAAAAAAAAAAAADcHQAAAAAAAN0dAAAAAAAAAAAAAN0dAAAAAAAA3h0AAAAAAAAAAAAA3h0AAAAAAADfHQAAAAAAAAAAAADfHQAAAAAAAOAdAAAAAAAAAAAAAOAdAAAAAAAA4R0AAAAAAAAAAAAA4R0AAAAAAADiHQAAAAAAAAAAAADiHQAAAAAAAOMdAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2h0AAAAAAADhHQAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " wso"
					},
					"BAAAAOMdAAAAAAAA5B0AAAAAAAAAAAAA5B0AAAAAAADlHQAAAAAAAAAAAADlHQAAAAAAAOYdAAAAAAAAAAAAAOYdAAAAAAAA5x0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4x0AAAAAAADjHQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"left_delete",
					null,
					"AQAAAOYdAAAAAAAA5h0AAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAA5x0AAAAAAADnHQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "2_342"
					},
					"BQAAAOYdAAAAAAAA5x0AAAAAAAAAAAAA5x0AAAAAAADoHQAAAAAAAAAAAADoHQAAAAAAAOkdAAAAAAAAAAAAAOkdAAAAAAAA6h0AAAAAAAAAAAAA6h0AAAAAAADrHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5h0AAAAAAADmHQAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					2,
					"left_delete",
					null,
					"AgAAAOodAAAAAAAA6h0AAAAAAAABAAAAMukdAAAAAAAA6R0AAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAA6x0AAAAAAADrHQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "2)"
					},
					"AgAAAOkdAAAAAAAA6h0AAAAAAAAAAAAA6h0AAAAAAADrHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6R0AAAAAAADpHQAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"left_delete",
					null,
					"AQAAAOsdAAAAAAAA6x0AAAAAAAAcAAAAICR7cGF0aF9TT1VSQ0VTfSByZWFkbGluay5jKQ",
					"AQAAAAAAAAABAAAA6x0AAAAAAAAHHgAAAAAAAP///////+9/"
				],
				[
					154,
					1,
					"paste",
					null,
					"AgAAAOQdAAAAAAAA6x0AAAAAAAAAAAAA6x0AAAAAAADrHQAAAAAAAAYAAAB3czJfMzI",
					"AQAAAAAAAAABAAAA5B0AAAAAAADqHQAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"cut",
					null,
					"AQAAAHkdAAAAAAAAeR0AAAAAAABAAAAAc2V0KHNvY2tldHNfU09VUkNFUyAke3V0aWxfU09VUkNFU30gYmMtZmRfc2V0LmMgYmMtc29ja2xlbl90LmMpCg",
					"AQAAAAAAAAABAAAAeR0AAAAAAAC5HQAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					2,
					"paste",
					null,
					"AgAAAHkdAAAAAAAAuR0AAAAAAAAAAAAAuR0AAAAAAAD5HQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeR0AAAAAAAB5HQAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"paste",
					null,
					"AgAAAM8dAAAAAAAA3h0AAAAAAAAAAAAA3h0AAAAAAADeHQAAAAAAAAwAAAB1dGlsX1NPVVJDRVM",
					"AQAAAAAAAAABAAAAzx0AAAAAAADbHQAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "sop"
					},
					"BAAAAOAdAAAAAAAA4R0AAAAAAAAAAAAA4R0AAAAAAADhHQAAAAAAABkAAABiYy1mZF9zZXQuYyBiYy1zb2NrbGVuX3Qu4R0AAAAAAADiHQAAAAAAAAAAAADiHQAAAAAAAOMdAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4B0AAAAAAAD5HQAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					3,
					"left_delete",
					null,
					"AwAAAOIdAAAAAAAA4h0AAAAAAAABAAAAcOEdAAAAAAAA4R0AAAAAAAABAAAAb+AdAAAAAAAA4B0AAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA4x0AAAAAAADjHQAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"right_delete",
					null,
					"AQAAAOAdAAAAAAAA4B0AAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAA4B0AAAAAAADgHQAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"paste",
					null,
					"AQAAAOAdAAAAAAAA8h0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4B0AAAAAAADgHQAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"cut",
					null,
					"AQAAALkdAAAAAAAAuR0AAAAAAAA7AAAAc2V0KHNvY2tldHNfU09VUkNFUyAke3NvY2tldHNfU09VUkNFU30gc29ja2V0cGFpcl93aW4zMi5jKQo",
					"AQAAAAAAAAABAAAAuR0AAAAAAAD0HQAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOwdAAAAAAAA7R0AAAAAAAAAAAAA7R0AAAAAAADvHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7B0AAAAAAADsHQAAAAAAAP///////+9/"
				],
				[
					209,
					1,
					"paste",
					null,
					"AQAAAO8dAAAAAAAAKh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7x0AAAAAAADvHQAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"left_delete",
					null,
					"AQAAACkeAAAAAAAAKR4AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAKh4AAAAAAAAqHgAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"cut",
					null,
					"AQAAAA4XAAAAAAAADhcAAAAAAABaAAAAc2V0KHV0aWxfU09VUkNFUyB1dGlscy5jIHV0aWxzLmggY2hhci11dGlscy5jIGNoYXItdXRpbHMuaCBidWZmZXItdXRpbHMuYyBidWZmZXItdXRpbHMuaCkK",
					"AQAAAAAAAAABAAAADhcAAAAAAABoFwAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					2,
					"paste",
					null,
					"AgAAAA4XAAAAAAAAaBcAAAAAAAAAAAAAaBcAAAAAAADCFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhcAAAAAAAAOFwAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "vector"
					},
					"BwAAABIXAAAAAAAAExcAAAAAAAAAAAAAExcAAAAAAAATFwAAAAAAAAQAAAB1dGlsExcAAAAAAAAUFwAAAAAAAAAAAAAUFwAAAAAAABUXAAAAAAAAAAAAABUXAAAAAAAAFhcAAAAAAAAAAAAAFhcAAAAAAAAXFwAAAAAAAAAAAAAXFwAAAAAAABgXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhcAAAAAAAASFwAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					3,
					"left_delete",
					null,
					"AwAAACIXAAAAAAAAIhcAAAAAAAAEAAAAdGlscyEXAAAAAAAAIRcAAAAAAAABAAAAdSAXAAAAAAAAIBcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAIhcAAAAAAAAmFwAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": "vector"
					},
					"BgAAACAXAAAAAAAAIRcAAAAAAAAAAAAAIRcAAAAAAAAiFwAAAAAAAAAAAAAiFwAAAAAAACMXAAAAAAAAAAAAACMXAAAAAAAAJBcAAAAAAAAAAAAAJBcAAAAAAAAlFwAAAAAAAAAAAAAlFwAAAAAAACYXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBcAAAAAAAAgFwAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAXAAAAAAAAIRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBcAAAAAAAAgFwAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "vector.h)"
					},
					"CgAAACoXAAAAAAAAKxcAAAAAAAAAAAAAKxcAAAAAAAArFwAAAAAAAEAAAAB1dGlscy5oIGNoYXItdXRpbHMuYyBjaGFyLXV0aWxzLmggYnVmZmVyLXV0aWxzLmMgYnVmZmVyLXV0aWxzLmgpKxcAAAAAAAAsFwAAAAAAAAAAAAAsFwAAAAAAAC0XAAAAAAAAAAAAAC0XAAAAAAAALhcAAAAAAAAAAAAALhcAAAAAAAAvFwAAAAAAAAAAAAAvFwAAAAAAADAXAAAAAAAAAAAAADAXAAAAAAAAMRcAAAAAAAAAAAAAMRcAAAAAAAAyFwAAAAAAAAAAAAAyFwAAAAAAADMXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhcAAAAAAABqFwAAAAAAAP///////+9/"
				],
				[
					286,
					1,
					"",
					null,
					"AQAAAFMZAAAAAAAAZBkAAAAAAAARAAAAdmVjdG9yLmMgdmVjdG9yLmg",
					"AQAAAAAAAAABAAAAUxkAAAAAAABkGQAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"",
					null,
					"AQAAAHsZAAAAAAAAjBkAAAAAAAARAAAAdmVjdG9yLmMgdmVjdG9yLmg",
					"AQAAAAAAAAABAAAAexkAAAAAAACMGQAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"",
					null,
					"AQAAADcaAAAAAAAASBoAAAAAAAARAAAAdmVjdG9yLmMgdmVjdG9yLmg",
					"AQAAAAAAAAABAAAANxoAAAAAAABIGgAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"",
					null,
					"AQAAANMaAAAAAAAA5BoAAAAAAAARAAAAdmVjdG9yLmMgdmVjdG9yLmg",
					"AQAAAAAAAAABAAAA0xoAAAAAAADkGgAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"",
					null,
					"AQAAAEwbAAAAAAAAXRsAAAAAAAARAAAAdmVjdG9yLmMgdmVjdG9yLmg",
					"AQAAAAAAAAABAAAATBsAAAAAAABdGwAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"",
					null,
					"AQAAAFUcAAAAAAAAZhwAAAAAAAARAAAAdmVjdG9yLmMgdmVjdG9yLmg",
					"AQAAAAAAAAABAAAAVRwAAAAAAABmHAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"",
					null,
					"AQAAAPkcAAAAAAAACh0AAAAAAAARAAAAdmVjdG9yLmMgdmVjdG9yLmg",
					"AQAAAAAAAAABAAAA+RwAAAAAAAAKHQAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"",
					null,
					"AQAAANoeAAAAAAAA6x4AAAAAAAARAAAAdmVjdG9yLmMgdmVjdG9yLmg",
					"AQAAAAAAAAABAAAA2h4AAAAAAADrHgAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIofAAAAAAAAix8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAih8AAAAAAACKHwAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"paste",
					null,
					"AQAAAIsfAAAAAAAAnB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAix8AAAAAAACLHwAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					2,
					"left_delete",
					null,
					"AgAAAC8dAAAAAAAALx0AAAAAAAABAAAAIC4dAAAAAAAALh0AAAAAAAABAAAAIw",
					"AQAAAAAAAAABAAAAMB0AAAAAAAAwHQAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": "qjs-location)"
					},
					"DgAAAEIdAAAAAAAAQx0AAAAAAAAAAAAAQx0AAAAAAABDHQAAAAAAAAcAAABxdWlja2pzQx0AAAAAAABEHQAAAAAAAAAAAABEHQAAAAAAAEUdAAAAAAAAAAAAAEUdAAAAAAAARh0AAAAAAAAAAAAARh0AAAAAAABHHQAAAAAAAAAAAABHHQAAAAAAAEgdAAAAAAAAAAAAAEgdAAAAAAAASR0AAAAAAAAAAAAASR0AAAAAAABKHQAAAAAAAAAAAABKHQAAAAAAAEsdAAAAAAAAAAAAAEsdAAAAAAAATB0AAAAAAAAAAAAATB0AAAAAAABNHQAAAAAAAAAAAABNHQAAAAAAAE4dAAAAAAAAAAAAAE4dAAAAAAAATx0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQh0AAAAAAABJHQAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"left_delete",
					null,
					"AQAAAE8dAAAAAAAATx0AAAAAAAALAAAALXByZWRpY2F0ZSk",
					"AQAAAAAAAAABAAAATx0AAAAAAABaHQAAAAAAAP///////+9/"
				],
				[
					370,
					1,
					"cut",
					null,
					"AQAAAA4XAAAAAAAADhcAAAAAAAAmAAAAc2V0KHZlY3Rvcl9TT1VSQ0VTIHZlY3Rvci5jIHZlY3Rvci5oKQo",
					"AQAAAAAAAAABAAAADhcAAAAAAAA0FwAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					2,
					"paste",
					null,
					"AgAAAA4XAAAAAAAANBcAAAAAAAAAAAAANBcAAAAAAABaFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhcAAAAAAAAOFwAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": "buffer_utils"
					},
					"DQAAADgXAAAAAAAAORcAAAAAAAAAAAAAORcAAAAAAAA5FwAAAAAAAAYAAAB2ZWN0b3I5FwAAAAAAADoXAAAAAAAAAAAAADoXAAAAAAAAOxcAAAAAAAAAAAAAOxcAAAAAAAA8FwAAAAAAAAAAAAA8FwAAAAAAAD0XAAAAAAAAAAAAAD0XAAAAAAAAPhcAAAAAAAAAAAAAPhcAAAAAAAA/FwAAAAAAAAAAAAA/FwAAAAAAAEAXAAAAAAAAAAAAAEAXAAAAAAAAQRcAAAAAAAAAAAAAQRcAAAAAAABCFwAAAAAAAAAAAABCFwAAAAAAAEMXAAAAAAAAAAAAAEMXAAAAAAAARBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBcAAAAAAAA+FwAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"left_delete",
					null,
					"AQAAAEMXAAAAAAAAQxcAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAARBcAAAAAAABEFwAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAEMXAAAAAAAARBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQxcAAAAAAABDFwAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AgAAAE0XAAAAAAAAThcAAAAAAAAAAAAAThcAAAAAAABOFwAAAAAAAAYAAAB2ZWN0b3I",
					"AQAAAAAAAAABAAAATRcAAAAAAABTFwAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"left_delete",
					null,
					"AQAAAE0XAAAAAAAATRcAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAThcAAAAAAABOFwAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": "buffer-tu"
					},
					"CQAAAE0XAAAAAAAAThcAAAAAAAAAAAAAThcAAAAAAABPFwAAAAAAAAAAAABPFwAAAAAAAFAXAAAAAAAAAAAAAFAXAAAAAAAAURcAAAAAAAAAAAAAURcAAAAAAABSFwAAAAAAAAAAAABSFwAAAAAAAFMXAAAAAAAAAAAAAFMXAAAAAAAAVBcAAAAAAAAAAAAAVBcAAAAAAABVFwAAAAAAAAAAAABVFwAAAAAAAFYXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATRcAAAAAAABNFwAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					2,
					"left_delete",
					null,
					"AgAAAFUXAAAAAAAAVRcAAAAAAAABAAAAdVQXAAAAAAAAVBcAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAVhcAAAAAAABWFwAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": "utils"
					},
					"BQAAAFQXAAAAAAAAVRcAAAAAAAAAAAAAVRcAAAAAAABWFwAAAAAAAAAAAABWFwAAAAAAAFcXAAAAAAAAAAAAAFcXAAAAAAAAWBcAAAAAAAAAAAAAWBcAAAAAAABZFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBcAAAAAAABUFwAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"paste",
					null,
					"AgAAAFwXAAAAAAAAaBcAAAAAAAAAAAAAaBcAAAAAAABoFwAAAAAAAAYAAAB2ZWN0b3I",
					"AQAAAAAAAAABAAAAXBcAAAAAAABiFwAAAAAAAAAAAAAAAPC/"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": " $"
					},
					"AgAAAPgeAAAAAAAA+R4AAAAAAAAAAAAA+R4AAAAAAAD6HgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+B4AAAAAAAD4HgAAAAAAAAAAAAAAAPC/"
				],
				[
					408,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPoeAAAAAAAA/B4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+h4AAAAAAAD6HgAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"paste",
					null,
					"AQAAAPseAAAAAAAADx8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+x4AAAAAAAD7HgAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"paste",
					null,
					"AgAAAOkeAAAAAAAA+R4AAAAAAAAAAAAA+R4AAAAAAAD5HgAAAAAAABAAAAB1dGlscy5jIHV0aWxzLmgg",
					"AQAAAAAAAAABAAAA6R4AAAAAAAD5HgAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPkeAAAAAAAA+h4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+R4AAAAAAAD5HgAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"left_delete",
					null,
					"AQAAAOkeAAAAAAAA6R4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA6h4AAAAAAADqHgAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"",
					null,
					"AQAAAP0WAAAAAAAADBcAAAAAAAAPAAAAdXRpbHMuYyB1dGlscy5o",
					"AQAAAAAAAAABAAAA/RYAAAAAAAAMFwAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					1,
					"",
					null,
					"AQAAAH0XAAAAAAAAjBcAAAAAAAAPAAAAdXRpbHMuYyB1dGlscy5o",
					"AQAAAAAAAAABAAAAfRcAAAAAAACMFwAAAAAAAAAAAAAAAPC/"
				],
				[
					450,
					1,
					"cut",
					null,
					"AQAAAM8WAAAAAAAAzxYAAAAAAAA/AAAAc2V0KHByZWRpY2F0ZV9TT1VSQ0VTIHByZWRpY2F0ZS5jIHByZWRpY2F0ZS5oICR7dXRpbF9TT1VSQ0VTfSkK",
					"AQAAAAAAAAABAAAAzxYAAAAAAAAOFwAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"paste",
					null,
					"AQAAAIcXAAAAAAAAxhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxcAAAAAAACHFwAAAAAAAAAAAAAAAAAA"
				],
				[
					471,
					1,
					"cut",
					null,
					"AQAAAC0XAAAAAAAALRcAAAAAAABaAAAAc2V0KHV0aWxfU09VUkNFUyAke3V0aWxfU09VUkNFU30gY2hhci11dGlscy5jIGNoYXItdXRpbHMuaCBidWZmZXItdXRpbHMuYyBidWZmZXItdXRpbHMuaCkK",
					"AQAAAAAAAAABAAAALRcAAAAAAACHFwAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					2,
					"paste",
					null,
					"AgAAAC0XAAAAAAAAhxcAAAAAAAAAAAAAhxcAAAAAAADhFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRcAAAAAAAAtFwAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"left_delete",
					null,
					"AQAAAIcXAAAAAAAAhxcAAAAAAABaAAAAc2V0KHV0aWxfU09VUkNFUyAke3V0aWxfU09VUkNFU30gY2hhci11dGlscy5jIGNoYXItdXRpbHMuaCBidWZmZXItdXRpbHMuYyBidWZmZXItdXRpbHMuaCkK",
					"AQAAAAAAAAABAAAAhxcAAAAAAADhFwAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"cut",
					null,
					"AQAAAPUWAAAAAAAA9RYAAAAAAAA4AAAAc2V0KGJ1ZmZlcl91dGlsc19TT1VSQ0VTIGJ1ZmZlci11dGlscy5jIGJ1ZmZlci11dGlscy5oKQo",
					"AQAAAAAAAAABAAAA9RYAAAAAAAAtFwAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					2,
					"paste",
					null,
					"AgAAAPUWAAAAAAAALRcAAAAAAAAAAAAALRcAAAAAAABlFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RYAAAAAAAD1FgAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": "char"
					},
					"BQAAADEXAAAAAAAAMhcAAAAAAAAAAAAAMhcAAAAAAAAyFwAAAAAAAAYAAABidWZmZXIyFwAAAAAAADMXAAAAAAAAAAAAADMXAAAAAAAANBcAAAAAAAAAAAAANBcAAAAAAAA1FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMRcAAAAAAAA3FwAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": "char"
					},
					"BQAAAEQXAAAAAAAARRcAAAAAAAAAAAAARRcAAAAAAABFFwAAAAAAAAYAAABidWZmZXJFFwAAAAAAAEYXAAAAAAAAAAAAAEYXAAAAAAAARxcAAAAAAAAAAAAARxcAAAAAAABIFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARBcAAAAAAABKFwAAAAAAAAAAAAAAAPC/"
				],
				[
					520,
					1,
					"insert",
					{
						"characters": "char"
					},
					"BQAAAFEXAAAAAAAAUhcAAAAAAAAAAAAAUhcAAAAAAABSFwAAAAAAAAYAAABidWZmZXJSFwAAAAAAAFMXAAAAAAAAAAAAAFMXAAAAAAAAVBcAAAAAAAAAAAAAVBcAAAAAAABVFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURcAAAAAAABXFwAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "utils.c"
					},
					"BwAAAHAXAAAAAAAAcRcAAAAAAAAAAAAAcRcAAAAAAAByFwAAAAAAAAAAAAByFwAAAAAAAHMXAAAAAAAAAAAAAHMXAAAAAAAAdBcAAAAAAAAAAAAAdBcAAAAAAAB1FwAAAAAAAAAAAAB1FwAAAAAAAHYXAAAAAAAAAAAAAHYXAAAAAAAAdxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBcAAAAAAABwFwAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					1,
					"insert",
					{
						"characters": " utils.h"
					},
					"CAAAAHcXAAAAAAAAeBcAAAAAAAAAAAAAeBcAAAAAAAB5FwAAAAAAAAAAAAB5FwAAAAAAAHoXAAAAAAAAAAAAAHoXAAAAAAAAexcAAAAAAAAAAAAAexcAAAAAAAB8FwAAAAAAAAAAAAB8FwAAAAAAAH0XAAAAAAAAAAAAAH0XAAAAAAAAfhcAAAAAAAAAAAAAfhcAAAAAAAB/FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxcAAAAAAAB3FwAAAAAAAAAAAAAAAPC/"
				],
				[
					531,
					1,
					"left_delete",
					null,
					"AQAAAH8XAAAAAAAAfxcAAAAAAABHAAAAJHt1dGlsX1NPVVJDRVN9IGNoYXItdXRpbHMuYyBjaGFyLXV0aWxzLmggYnVmZmVyLXV0aWxzLmMgYnVmZmVyLXV0aWxzLmg",
					"AQAAAAAAAAABAAAAfxcAAAAAAADGFwAAAAAAAAAAAAAAAPC/"
				],
				[
					539,
					1,
					"",
					null,
					"GAAAAHwgAAAAAAAAiSAAAAAAAAAMAAAAdXRpbF9TT1VSQ0VTwB8AAAAAAADNHwAAAAAAAAwAAAB1dGlsX1NPVVJDRVMxHwAAAAAAAD4fAAAAAAAADAAAAHV0aWxfU09VUkNFU+UeAAAAAAAA8h4AAAAAAAAMAAAAdXRpbF9TT1VSQ0VT4B0AAAAAAADtHQAAAAAAAAwAAAB1dGlsX1NPVVJDRVO7HQAAAAAAAMgdAAAAAAAADAAAAHV0aWxfU09VUkNFU5UdAAAAAAAAoh0AAAAAAAAMAAAAdXRpbF9TT1VSQ0VTHR0AAAAAAAAqHQAAAAAAAAwAAAB1dGlsX1NPVVJDRVPUHAAAAAAAAOEcAAAAAAAADAAAAHV0aWxfU09VUkNFU5scAAAAAAAAqBwAAAAAAAAMAAAAdXRpbF9TT1VSQ0VT8RsAAAAAAAD+GwAAAAAAAAwAAAB1dGlsX1NPVVJDRVPAGwAAAAAAAM0bAAAAAAAADAAAAHV0aWxfU09VUkNFU18bAAAAAAAAbBsAAAAAAAAMAAAAdXRpbF9TT1VSQ0VTiRoAAAAAAACWGgAAAAAAAAwAAAB1dGlsX1NPVVJDRVMSGgAAAAAAAB8aAAAAAAAADAAAAHV0aWxfU09VUkNFU3cZAAAAAAAAhBkAAAAAAAAMAAAAdXRpbF9TT1VSQ0VTkRgAAAAAAACeGAAAAAAAAAwAAAB1dGlsX1NPVVJDRVOCGAAAAAAAAI8YAAAAAAAADAAAAHV0aWxfU09VUkNFU00YAAAAAAAAWhgAAAAAAAAMAAAAdXRpbF9TT1VSQ0VTPhgAAAAAAABLGAAAAAAAAAwAAAB1dGlsX1NPVVJDRVPtFwAAAAAAAPoXAAAAAAAADAAAAHV0aWxfU09VUkNFU94XAAAAAAAA6xcAAAAAAAAMAAAAdXRpbF9TT1VSQ0VTsRcAAAAAAAC+FwAAAAAAAAwAAAB1dGlsX1NPVVJDRVNjFwAAAAAAAHAXAAAAAAAADAAAAHV0aWxfU09VUkNFUw",
					"AQAAAAAAAAABAAAAYxcAAAAAAABvFwAAAAAAAAAAAAAAAPC/"
				],
				[
					556,
					1,
					"insert",
					{
						"characters": "${"
					},
					"AgAAAAIeAAAAAAAAAx4AAAAAAAAAAAAAAx4AAAAAAAAEHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAh4AAAAAAAACHgAAAAAAAAAAAAAAAPC/"
				],
				[
					557,
					1,
					"paste",
					null,
					"AQAAAAQeAAAAAAAAFh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABB4AAAAAAAAEHgAAAAAAAAAAAAAAAPC/"
				],
				[
					558,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAABYeAAAAAAAAFx4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFh4AAAAAAAAWHgAAAAAAAAAAAAAAAPC/"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABceAAAAAAAAGB4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFx4AAAAAAAAXHgAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"cut",
					null,
					"AQAAAAEeAAAAAAAAAR4AAAAAAAAXAAAAICR7Y2hhcl91dGlsc19TT1VSQ0VTfSA",
					"AQAAAAAAAAABAAAAGB4AAAAAAAABHgAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					2,
					"paste",
					null,
					"AgAAAAEeAAAAAAAAGB4AAAAAAAAAAAAAGB4AAAAAAAAvHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAR4AAAAAAAABHgAAAAAAAAAAAAAAAPC/"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": "buffer"
					},
					"BwAAABseAAAAAAAAHB4AAAAAAAAAAAAAHB4AAAAAAAAcHgAAAAAAAAQAAABjaGFyHB4AAAAAAAAdHgAAAAAAAAAAAAAdHgAAAAAAAB4eAAAAAAAAAAAAAB4eAAAAAAAAHx4AAAAAAAAAAAAAHx4AAAAAAAAgHgAAAAAAAAAAAAAgHgAAAAAAACEeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGx4AAAAAAAAfHgAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"left_delete",
					null,
					"AQAAABgeAAAAAAAAGB4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAGR4AAAAAAAAZHgAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"paste",
					null,
					"AQAAAAIgAAAAAAAAGiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABogAAAAAAAAGyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGiAAAAAAAAAaIAAAAAAAAAAAAAAAAPC/"
				],
				[
					591,
					1,
					"join_lines",
					null,
					"AwAAAOcfAAAAAAAA5x8AAAAAAAABAAAACucfAAAAAAAA5x8AAAAAAAAbAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAg5x8AAAAAAADoHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnx8AAAAAAACfHwAAAAAAAAAAAAAAAPC/"
				],
				[
					605,
					1,
					"insert",
					{
						"characters": " $"
					},
					"AwAAAH8XAAAAAAAAgBcAAAAAAAAAAAAAgBcAAAAAAACAFwAAAAAAAAEAAABogBcAAAAAAACBFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxcAAAAAAACAFwAAAAAAAAAAAAAAAPC/"
				],
				[
					606,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIEXAAAAAAAAgxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRcAAAAAAACBFwAAAAAAAAAAAAAAAPC/"
				],
				[
					607,
					1,
					"paste",
					null,
					"AQAAAIIXAAAAAAAAlBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghcAAAAAAACCFwAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABceAAAAAAAAGB4AAAAAAAAAAAAAGB4AAAAAAAAYHgAAAAAAABYAAAAke2NoYXJfdXRpbHNfU09VUkNFU30g",
					"AQAAAAAAAAABAAAAFx4AAAAAAAAtHgAAAAAAAAAAAAAAAPC/"
				],
				[
					628,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAAH8XAAAAAAAAgBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxcAAAAAAAB/FwAAAAAAAAAAAAAAAPC/"
				],
				[
					639,
					1,
					"insert",
					{
						"characters": " $"
					},
					"AgAAAPMWAAAAAAAA9BYAAAAAAAAAAAAA9BYAAAAAAAD1FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8xYAAAAAAADzFgAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPUWAAAAAAAA9xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RYAAAAAAAD1FgAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					1,
					"insert",
					{
						"characters": "buz"
					},
					"AwAAAPYWAAAAAAAA9xYAAAAAAAAAAAAA9xYAAAAAAAD4FgAAAAAAAAAAAAD4FgAAAAAAAPkWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hYAAAAAAAD2FgAAAAAAAAAAAAAAAPC/"
				],
				[
					642,
					1,
					"left_delete",
					null,
					"AQAAAPgWAAAAAAAA+BYAAAAAAAABAAAAeg",
					"AQAAAAAAAAABAAAA+RYAAAAAAAD5FgAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"insert",
					{
						"characters": "ffer:_"
					},
					"BgAAAPgWAAAAAAAA+RYAAAAAAAAAAAAA+RYAAAAAAAD6FgAAAAAAAAAAAAD6FgAAAAAAAPsWAAAAAAAAAAAAAPsWAAAAAAAA/BYAAAAAAAAAAAAA/BYAAAAAAAD9FgAAAAAAAAAAAAD9FgAAAAAAAP4WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BYAAAAAAAD4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					644,
					1,
					"left_delete",
					null,
					"AQAAAP0WAAAAAAAA/RYAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAA/hYAAAAAAAD+FgAAAAAAAAAAAAAAAPC/"
				],
				[
					645,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAP0WAAAAAAAA/hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RYAAAAAAAD9FgAAAAAAAAAAAAAAAPC/"
				],
				[
					646,
					2,
					"left_delete",
					null,
					"AgAAAP0WAAAAAAAA/RYAAAAAAAABAAAAX/wWAAAAAAAA/BYAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAA/hYAAAAAAAD+FgAAAAAAAAAAAAAAAPC/"
				],
				[
					647,
					1,
					"insert",
					{
						"characters": "_utils_SOURCES"
					},
					"DgAAAPwWAAAAAAAA/RYAAAAAAAAAAAAA/RYAAAAAAAD+FgAAAAAAAAAAAAD+FgAAAAAAAP8WAAAAAAAAAAAAAP8WAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAABFwAAAAAAAAAAAAABFwAAAAAAAAIXAAAAAAAAAAAAAAIXAAAAAAAAAxcAAAAAAAAAAAAAAxcAAAAAAAAEFwAAAAAAAAAAAAAEFwAAAAAAAAUXAAAAAAAAAAAAAAUXAAAAAAAABhcAAAAAAAAAAAAABhcAAAAAAAAHFwAAAAAAAAAAAAAHFwAAAAAAAAgXAAAAAAAAAAAAAAgXAAAAAAAACRcAAAAAAAAAAAAACRcAAAAAAAAKFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BYAAAAAAAD8FgAAAAAAAAAAAAAAAPC/"
				],
				[
					700,
					1,
					"insert",
					{
						"characters": " $"
					},
					"AwAAAEo4AAAAAAAASzgAAAAAAAAAAAAASzgAAAAAAABLOAAAAAAAAAoAAAAgIHZlY3Rvci5jSzgAAAAAAABMOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVDgAAAAAAABKOAAAAAAAAAAAAAAAAPC/"
				],
				[
					701,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEw4AAAAAAAATjgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATDgAAAAAAABMOAAAAAAAAAAAAAAAAPC/"
				],
				[
					702,
					1,
					"insert",
					{
						"characters": "vector_SOURCES"
					},
					"DgAAAE04AAAAAAAATjgAAAAAAAAAAAAATjgAAAAAAABPOAAAAAAAAAAAAABPOAAAAAAAAFA4AAAAAAAAAAAAAFA4AAAAAAAAUTgAAAAAAAAAAAAAUTgAAAAAAABSOAAAAAAAAAAAAABSOAAAAAAAAFM4AAAAAAAAAAAAAFM4AAAAAAAAVDgAAAAAAAAAAAAAVDgAAAAAAABVOAAAAAAAAAAAAABVOAAAAAAAAFY4AAAAAAAAAAAAAFY4AAAAAAAAVzgAAAAAAAAAAAAAVzgAAAAAAABYOAAAAAAAAAAAAABYOAAAAAAAAFk4AAAAAAAAAAAAAFk4AAAAAAAAWjgAAAAAAAAAAAAAWjgAAAAAAABbOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATTgAAAAAAABNOAAAAAAAAAAAAAAAAPC/"
				],
				[
					731,
					1,
					"cut",
					null,
					"AQAAAM8WAAAAAAAAzxYAAAAAAAA+AAAAc2V0KHZlY3Rvcl9TT1VSQ0VTIHZlY3Rvci5jIHZlY3Rvci5oICR7YnVmZmVyX3V0aWxzX1NPVVJDRVN9KQo",
					"AQAAAAAAAAABAAAAzxYAAAAAAAANFwAAAAAAAAAAAAAAAPC/"
				],
				[
					733,
					1,
					"paste",
					null,
					"AQAAAAcXAAAAAAAARRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxcAAAAAAAAHFwAAAAAAAAAAAAAAAAAA"
				],
				[
					776,
					1,
					"cut",
					null,
					"AQAAAEg4AAAAAAAASDgAAAAAAAAVAAAAICAgJHt2ZWN0b3JfU09VUkNFU30K",
					"AQAAAAAAAAABAAAASDgAAAAAAABdOAAAAAAAAAAAAAAAAPC/"
				],
				[
					777,
					2,
					"paste",
					null,
					"AgAAAEg4AAAAAAAAXTgAAAAAAAAAAAAAXTgAAAAAAAByOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASDgAAAAAAABIOAAAAAAAAAAAAAAAAPC/"
				],
				[
					782,
					1,
					"insert",
					{
						"characters": "buffer_ut"
					},
					"CgAAAGI4AAAAAAAAYzgAAAAAAAAAAAAAYzgAAAAAAABjOAAAAAAAAAYAAAB2ZWN0b3JjOAAAAAAAAGQ4AAAAAAAAAAAAAGQ4AAAAAAAAZTgAAAAAAAAAAAAAZTgAAAAAAABmOAAAAAAAAAAAAABmOAAAAAAAAGc4AAAAAAAAAAAAAGc4AAAAAAAAaDgAAAAAAAAAAAAAaDgAAAAAAABpOAAAAAAAAAAAAABpOAAAAAAAAGo4AAAAAAAAAAAAAGo4AAAAAAAAazgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYjgAAAAAAABoOAAAAAAAAAAAAAAAAPC/"
				],
				[
					783,
					1,
					"insert",
					{
						"characters": "ils"
					},
					"AwAAAGs4AAAAAAAAbDgAAAAAAAAAAAAAbDgAAAAAAABtOAAAAAAAAAAAAABtOAAAAAAAAG44AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAazgAAAAAAABrOAAAAAAAAAAAAAAAAPC/"
				],
				[
					820,
					2,
					"left_delete",
					null,
					"AgAAAE8fAAAAAAAATx8AAAAAAAAXAAAAJHtidWZmZXJfdXRpbHNfU09VUkNFU31OHwAAAAAAAE4fAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAATx8AAAAAAABmHwAAAAAAAAAAAAAAAPC/"
				],
				[
					836,
					1,
					"cut",
					null,
					"AQAAADI4AAAAAAAAMjgAAAAAAAAtAAAAICR7dmVjdG9yX1NPVVJDRVN9CiAgICR7YnVmZmVyX3V0aWxzX1NPVVJDRVN9",
					"AQAAAAAAAAABAAAAMjgAAAAAAABfOAAAAAAAAAAAAAAAAPC/"
				],
				[
					851,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMchAAAAAAAAyCEAAAAAAAAAAAAAyCEAAAAAAADKIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxyEAAAAAAADHIQAAAAAAAAAAAAAAAPC/"
				],
				[
					852,
					1,
					"paste",
					null,
					"AQAAAMohAAAAAAAA9yEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyiEAAAAAAADKIQAAAAAAAAAAAAAAAPC/"
				],
				[
					863,
					2,
					"left_delete",
					null,
					"AgAAALQhAAAAAAAAtCEAAAAAAAATAAAAJHtsb2NhdGlvbl9TT1VSQ0VTfbMhAAAAAAAAsyEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAtCEAAAAAAADHIQAAAAAAAP///////+9/"
				],
				[
					865,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAsyEAAAAAAACzIQAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"reindent",
					null,
					"AQAAALMhAAAAAAAAtSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsyEAAAAAAACzIQAAAAAAAAAAAAAAAPC/"
				],
				[
					888,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN0cAAAAAAAA3hwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3RwAAAAAAADdHAAAAAAAAAAAAAAAAPC/"
				],
				[
					891,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOwcAAAAAAAA7RwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BwAAAAAAADsHAAAAAAAAAAAAAAAAPC/"
				],
				[
					892,
					1,
					"left_delete",
					null,
					"AQAAAOwcAAAAAAAA7BwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA7RwAAAAAAADtHAAAAAAAAAAAAAAAAPC/"
				],
				[
					894,
					1,
					"insert",
					{
						"characters": " $"
					},
					"AgAAAO0cAAAAAAAA7hwAAAAAAAAAAAAA7hwAAAAAAADvHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RwAAAAAAADtHAAAAAAAAAAAAAAAAPC/"
				],
				[
					895,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAO8cAAAAAAAA8RwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7xwAAAAAAADvHAAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					1,
					"insert",
					{
						"characters": "char_"
					},
					"BQAAAPAcAAAAAAAA8RwAAAAAAAAAAAAA8RwAAAAAAADyHAAAAAAAAAAAAADyHAAAAAAAAPMcAAAAAAAAAAAAAPMcAAAAAAAA9BwAAAAAAAAAAAAA9BwAAAAAAAD1HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BwAAAAAAADwHAAAAAAAAAAAAAAAAPC/"
				],
				[
					897,
					1,
					"left_delete",
					null,
					"AQAAAPQcAAAAAAAA9BwAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAA9RwAAAAAAAD1HAAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					1,
					"insert",
					{
						"characters": "_utils_SOURCES"
					},
					"DgAAAPQcAAAAAAAA9RwAAAAAAAAAAAAA9RwAAAAAAAD2HAAAAAAAAAAAAAD2HAAAAAAAAPccAAAAAAAAAAAAAPccAAAAAAAA+BwAAAAAAAAAAAAA+BwAAAAAAAD5HAAAAAAAAAAAAAD5HAAAAAAAAPocAAAAAAAAAAAAAPocAAAAAAAA+xwAAAAAAAAAAAAA+xwAAAAAAAD8HAAAAAAAAAAAAAD8HAAAAAAAAP0cAAAAAAAAAAAAAP0cAAAAAAAA/hwAAAAAAAAAAAAA/hwAAAAAAAD/HAAAAAAAAAAAAAD/HAAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAR0AAAAAAAAAAAAAAR0AAAAAAAACHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BwAAAAAAAD0HAAAAAAAAAAAAAAAAPC/"
				],
				[
					902,
					1,
					"left_delete",
					null,
					"AQAAAN0cAAAAAAAA3RwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3RwAAAAAAADeHAAAAAAAAAAAAAAAAPC/"
				],
				[
					913,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOwcAAAAAAAA7RwAAAAAAAAAAAAA7RwAAAAAAADtHAAAAAAAABYAAAAgJHtjaGFyX3V0aWxzX1NPVVJDRVN9",
					"AQAAAAAAAAABAAAA7BwAAAAAAAACHQAAAAAAAAAAAAAAAPC/"
				],
				[
					915,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAAO0cAAAAAAAA7hwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RwAAAAAAADtHAAAAAAAAAAAAAAAAPC/"
				],
				[
					916,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAO4cAAAAAAAA8BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hwAAAAAAADuHAAAAAAAAAAAAAAAAPC/"
				],
				[
					917,
					1,
					"insert",
					{
						"characters": "buffer"
					},
					"BgAAAO8cAAAAAAAA8BwAAAAAAAAAAAAA8BwAAAAAAADxHAAAAAAAAAAAAADxHAAAAAAAAPIcAAAAAAAAAAAAAPIcAAAAAAAA8xwAAAAAAAAAAAAA8xwAAAAAAAD0HAAAAAAAAAAAAAD0HAAAAAAAAPUcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7xwAAAAAAADvHAAAAAAAAAAAAAAAAPC/"
				],
				[
					918,
					1,
					"insert_completion",
					{
						"completion": "buffer_utils_SOURCES",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "buffer_utils_SOURCES"
					},
					"AgAAAO8cAAAAAAAA7xwAAAAAAAAGAAAAYnVmZmVy7xwAAAAAAAADHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RwAAAAAAAD1HAAAAAAAAAAAAAAAAPC/"
				],
				[
					932,
					1,
					"paste",
					null,
					"AQAAANwdAAAAAAAA3R0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3B0AAAAAAADcHQAAAAAAAAAAAAAAAPC/"
				],
				[
					952,
					1,
					"left_delete",
					null,
					"AQAAANwdAAAAAAAA3B0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3R0AAAAAAADdHQAAAAAAAAAAAAAAAPC/"
				],
				[
					953,
					1,
					"paste",
					null,
					"AQAAANwdAAAAAAAA9B0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3B0AAAAAAADcHQAAAAAAAAAAAAAAAPC/"
				],
				[
					989,
					1,
					"paste",
					null,
					"AgAAANwdAAAAAAAA9B0AAAAAAAAAAAAA9B0AAAAAAAD0HQAAAAAAABgAAAAgJHtidWZmZXJfdXRpbHNfU09VUkNFU30",
					"AQAAAAAAAAABAAAA3B0AAAAAAAD0HQAAAAAAAAAAAAAAAPC/"
				],
				[
					992,
					1,
					"paste",
					null,
					"AQAAADgfAAAAAAAAUB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOB8AAAAAAAA4HwAAAAAAAAAAAAAAAPC/"
				],
				[
					1013,
					1,
					"insert",
					{
						"characters": " ${path"
					},
					"BwAAAIsgAAAAAAAAjCAAAAAAAAAAAAAAjCAAAAAAAACNIAAAAAAAAAAAAACNIAAAAAAAAI4gAAAAAAAAAAAAAI4gAAAAAAAAjyAAAAAAAAAAAAAAjyAAAAAAAACQIAAAAAAAAAAAAACQIAAAAAAAAJEgAAAAAAAAAAAAAJEgAAAAAAAAkiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiyAAAAAAAACLIAAAAAAAAAAAAAAAAPC/"
				],
				[
					1014,
					1,
					"insert",
					{
						"characters": "_SOURCES}"
					},
					"CQAAAJIgAAAAAAAAkyAAAAAAAAAAAAAAkyAAAAAAAACUIAAAAAAAAAAAAACUIAAAAAAAAJUgAAAAAAAAAAAAAJUgAAAAAAAAliAAAAAAAAAAAAAAliAAAAAAAACXIAAAAAAAAAAAAACXIAAAAAAAAJggAAAAAAAAAAAAAJggAAAAAAAAmSAAAAAAAAAAAAAAmSAAAAAAAACaIAAAAAAAAAAAAACaIAAAAAAAAJsgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkiAAAAAAAACSIAAAAAAAAAAAAAAAAPC/"
				],
				[
					1015,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJsgAAAAAAAAnCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmyAAAAAAAACbIAAAAAAAAAAAAAAAAPC/"
				],
				[
					1057,
					2,
					"left_delete",
					null,
					"AgAAAPcbAAAAAAAA9xsAAAAAAAARAAAAJHt1dGlsc19TT1VSQ0VTfSn2GwAAAAAAAPYbAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAA9xsAAAAAAAAIHAAAAAAAAAAAAAAAAPC/"
				],
				[
					1058,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAPYbAAAAAAAA9xsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hsAAAAAAAD2GwAAAAAAAAAAAAAAAPC/"
				],
				[
					1070,
					1,
					"paste",
					null,
					"AQAAAOogAAAAAAAAAiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6iAAAAAAAADqIAAAAAAAAAAAAAAAAPC/"
				],
				[
					1075,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AgAAAAIhAAAAAAAAAyEAAAAAAAAAAAAAAyEAAAAAAAADIQAAAAAAABsAAAAgY2hhci11dGlscy5jIGNoYXItdXRpbHMuaCk",
					"AQAAAAAAAAABAAAAAiEAAAAAAAAdIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1084,
					1,
					"insert",
					{
						"characters": " $"
					},
					"AgAAAPYbAAAAAAAA9xsAAAAAAAAAAAAA9xsAAAAAAAD4GwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hsAAAAAAAD2GwAAAAAAAAAAAAAAAPC/"
				],
				[
					1085,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPgbAAAAAAAA+hsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BsAAAAAAAD4GwAAAAAAAAAAAAAAAPC/"
				],
				[
					1086,
					1,
					"insert",
					{
						"characters": "utils_SOURCES"
					},
					"DQAAAPkbAAAAAAAA+hsAAAAAAAAAAAAA+hsAAAAAAAD7GwAAAAAAAAAAAAD7GwAAAAAAAPwbAAAAAAAAAAAAAPwbAAAAAAAA/RsAAAAAAAAAAAAA/RsAAAAAAAD+GwAAAAAAAAAAAAD+GwAAAAAAAP8bAAAAAAAAAAAAAP8bAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAAEHAAAAAAAAAAAAAAEHAAAAAAAAAUcAAAAAAAAAAAAAAUcAAAAAAAABhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RsAAAAAAAD5GwAAAAAAAAAAAAAAAPC/"
				],
				[
					1096,
					1,
					"cut",
					null,
					"AQAAAPYbAAAAAAAA9hsAAAAAAAARAAAAICR7dXRpbHNfU09VUkNFU30",
					"AQAAAAAAAAABAAAA9hsAAAAAAAAHHAAAAAAAAAAAAAAAAPC/"
				],
				[
					1097,
					2,
					"paste",
					null,
					"AgAAAPYbAAAAAAAABxwAAAAAAAAAAAAABxwAAAAAAAAYHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hsAAAAAAAD2GwAAAAAAAAAAAAAAAPC/"
				],
				[
					1102,
					1,
					"insert",
					{
						"characters": "bufer_"
					},
					"BgAAAAocAAAAAAAACxwAAAAAAAAAAAAACxwAAAAAAAAMHAAAAAAAAAAAAAAMHAAAAAAAAA0cAAAAAAAAAAAAAA0cAAAAAAAADhwAAAAAAAAAAAAADhwAAAAAAAAPHAAAAAAAAAAAAAAPHAAAAAAAABAcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChwAAAAAAAAKHAAAAAAAAAAAAAAAAPC/"
				],
				[
					1103,
					3,
					"left_delete",
					null,
					"AwAAAA8cAAAAAAAADxwAAAAAAAABAAAAXw4cAAAAAAAADhwAAAAAAAABAAAAcg0cAAAAAAAADRwAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAEBwAAAAAAAAQHAAAAAAAAAAAAAAAAPC/"
				],
				[
					1104,
					1,
					"insert",
					{
						"characters": "fer_"
					},
					"BAAAAA0cAAAAAAAADhwAAAAAAAAAAAAADhwAAAAAAAAPHAAAAAAAAAAAAAAPHAAAAAAAABAcAAAAAAAAAAAAABAcAAAAAAAAERwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADRwAAAAAAAANHAAAAAAAAAAAAAAAAPC/"
				],
				[
					1110,
					1,
					"paste",
					null,
					"AQAAAM0dAAAAAAAA3h0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzR0AAAAAAADNHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1115,
					1,
					"insert",
					{
						"characters": "buffer_"
					},
					"BwAAANAdAAAAAAAA0R0AAAAAAAAAAAAA0R0AAAAAAADSHQAAAAAAAAAAAADSHQAAAAAAANMdAAAAAAAAAAAAANMdAAAAAAAA1B0AAAAAAAAAAAAA1B0AAAAAAADVHQAAAAAAAAAAAADVHQAAAAAAANYdAAAAAAAAAAAAANYdAAAAAAAA1x0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0B0AAAAAAADQHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1130,
					1,
					"paste",
					null,
					"AQAAAHMaAAAAAAAAlRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxoAAAAAAABzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1133,
					1,
					"insert",
					{
						"characters": "deep"
					},
					"BQAAAHcaAAAAAAAAeBoAAAAAAAAAAAAAeBoAAAAAAAB4GgAAAAAAAAUAAABsZXhlcngaAAAAAAAAeRoAAAAAAAAAAAAAeRoAAAAAAAB6GgAAAAAAAAAAAAB6GgAAAAAAAHsaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxoAAAAAAAB8GgAAAAAAAAAAAAAAAPC/"
				],
				[
					1136,
					4,
					"left_delete",
					null,
					"BAAAAJAaAAAAAAAAkBoAAAAAAAABAAAAb48aAAAAAAAAjxoAAAAAAAABAAAAaY4aAAAAAAAAjhoAAAAAAAABAAAAdI0aAAAAAAAAjRoAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAkRoAAAAAAACRGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1138,
					4,
					"left_delete",
					null,
					"BAAAAI0aAAAAAAAAjRoAAAAAAAABAAAAbowaAAAAAAAAjBoAAAAAAAABAAAAY4saAAAAAAAAixoAAAAAAAABAAAAb4oaAAAAAAAAihoAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAjhoAAAAAAACOGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1139,
					1,
					"insert",
					{
						"characters": "p√º"
					},
					"AgAAAIoaAAAAAAAAixoAAAAAAAAAAAAAixoAAAAAAACMGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihoAAAAAAACKGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1140,
					1,
					"left_delete",
					null,
					"AQAAAIsaAAAAAAAAixoAAAAAAAACAAAAw7w",
					"AQAAAAAAAAABAAAAjBoAAAAAAACMGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1141,
					1,
					"insert",
					{
						"characters": "redicate"
					},
					"CAAAAIsaAAAAAAAAjBoAAAAAAAAAAAAAjBoAAAAAAACNGgAAAAAAAAAAAACNGgAAAAAAAI4aAAAAAAAAAAAAAI4aAAAAAAAAjxoAAAAAAAAAAAAAjxoAAAAAAACQGgAAAAAAAAAAAACQGgAAAAAAAJEaAAAAAAAAAAAAAJEaAAAAAAAAkhoAAAAAAAAAAAAAkhoAAAAAAACTGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixoAAAAAAACLGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1144,
					1,
					"insert",
					{
						"characters": " qjs-poiunter"
					},
					"DQAAAJMaAAAAAAAAlBoAAAAAAAAAAAAAlBoAAAAAAACVGgAAAAAAAAAAAACVGgAAAAAAAJYaAAAAAAAAAAAAAJYaAAAAAAAAlxoAAAAAAAAAAAAAlxoAAAAAAACYGgAAAAAAAAAAAACYGgAAAAAAAJkaAAAAAAAAAAAAAJkaAAAAAAAAmhoAAAAAAAAAAAAAmhoAAAAAAACbGgAAAAAAAAAAAACbGgAAAAAAAJwaAAAAAAAAAAAAAJwaAAAAAAAAnRoAAAAAAAAAAAAAnRoAAAAAAACeGgAAAAAAAAAAAACeGgAAAAAAAJ8aAAAAAAAAAAAAAJ8aAAAAAAAAoBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxoAAAAAAACTGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1147,
					5,
					"left_delete",
					null,
					"BQAAAJ8aAAAAAAAAnxoAAAAAAAABAAAAcp4aAAAAAAAAnhoAAAAAAAABAAAAZZ0aAAAAAAAAnRoAAAAAAAABAAAAdJwaAAAAAAAAnBoAAAAAAAABAAAAbpsaAAAAAAAAmxoAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAoBoAAAAAAACgGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1148,
					1,
					"insert",
					{
						"characters": "nter"
					},
					"BAAAAJsaAAAAAAAAnBoAAAAAAAAAAAAAnBoAAAAAAACdGgAAAAAAAAAAAACdGgAAAAAAAJ4aAAAAAAAAAAAAAJ4aAAAAAAAAnxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmxoAAAAAAACbGgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-predicate.h",
			"settings":
			{
				"buffer_size": 393,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACQAAAAAAAAAA4AAABzdGF0aWMgaW5saW5lIA",
					"AQAAAAAAAAABAAAAnQAAAAAAAACPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD7AAAAAAAAAA8AAAAKc3RhdGljIGlubGluZSA",
					"AQAAAAAAAAABAAAACQEAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"cut",
					null,
					"AQAAAI4AAAAAAAAAjgAAAAAAAADuAAAACiBQcmVkaWNhdGUqCmpzX3ByZWRpY2F0ZV9kYXRhKEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHJldHVybiBKU19HZXRPcGFxdWUodmFsdWUsIGpzX3ByZWRpY2F0ZV9jbGFzc19pZCk7Cn0KIFByZWRpY2F0ZSoKanNfcHJlZGljYXRlX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIHZhbHVlLCBqc19wcmVkaWNhdGVfY2xhc3NfaWQpOwp9Cg",
					"AQAAAAAAAAABAAAAjgAAAAAAAAB8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABSAAAAAAAAAD0AAABleHRlcm4gVklTSUJMRSB0aHJlYWRfbG9jYWwgSlNDbGFzc0lEIGpzX3ByZWRpY2F0ZV9jbGFzc19pZDsK",
					"AQAAAAAAAAABAAAAUQAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"paste",
					null,
					"AQAAAFIAAAAAAAAAtwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAK8AAAAAAAAArwAAAAAAAAAFAAAAdmFsdWU",
					"AQAAAAAAAAABAAAArwAAAAAAAAC0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAALEAAAAAAAAAsQAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAsgAAAAAAAACyAAAAAAAAAAAAAAAAwHZA"
				],
				[
					37,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNAQAAI2lmbmRlZiBRVUlDS0pTX1BSRURJQ0FURV9ICiNkZWZpbmUgUVVJQ0tKU19QUkVESUNBVEVfSAoKI2luY2x1ZGUgInByZWRpY2F0ZS5oIgoKIFByZWRpY2F0ZSogICBqc19wcmVkaWNhdGVfZGF0YShKU1ZhbHVlKTsKUHJlZGljYXRlKiAgIGpzX3ByZWRpY2F0ZV9kYXRhMihKU0NvbnRleHQqLCBKU1ZhbHVlICk7CkpTVmFsdWUganNfcHJlZGljYXRlX3dyYXAoSlNDb250ZXh0KiwgUHJlZGljYXRlKTsKSlNWYWx1ZSBqc19wcmVkaWNhdGVfbmV3KEpTQ29udGV4dCosIEpTVmFsdWUgcHJvdG8sIEpTVmFsdWUpOwoKI2VuZGlmIC8qIGRlZmluZWQoUVVJQ0tKU19QUkVESUNBVEVfSCkgKi8KAAAAAAAAAABHAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABHAQAAI2lmbmRlZiBRVUlDS0pTX1BSRURJQ0FURV9ICiNkZWZpbmUgUVVJQ0tKU19QUkVESUNBVEVfSAoKI2luY2x1ZGUgInByZWRpY2F0ZS5oIgoKUHJlZGljYXRlKiBqc19wcmVkaWNhdGVfZGF0YShKU1ZhbHVlKTsKUHJlZGljYXRlKiBqc19wcmVkaWNhdGVfZGF0YTIoSlNDb250ZXh0KiwgSlNWYWx1ZSk7CkpTVmFsdWUganNfcHJlZGljYXRlX3dyYXAoSlNDb250ZXh0KiwgUHJlZGljYXRlKTsKSlNWYWx1ZSBqc19wcmVkaWNhdGVfbmV3KEpTQ29udGV4dCosIEpTVmFsdWUgcHJvdG8sIEpTVmFsdWUpOwoKI2VuZGlmIC8qIGRlZmluZWQoUVVJQ0tKU19QUkVESUNBVEVfSCkgKi8KAAAAAAAAAABHAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"paste",
					null,
					"AQAAAKwAAAAAAAAA1QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "C9hs"
					},
					"BAAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					3,
					"left_delete",
					null,
					"AwAAAHgAAAAAAAAAeAAAAAAAAAABAAAAc3cAAAAAAAAAdwAAAAAAAAABAAAAaHYAAAAAAAAAdgAAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAeQAAAAAAAAB5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "nst"
					},
					"AwAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					3,
					"left_delete",
					null,
					"AwAAAHgAAAAAAAAAeAAAAAAAAAABAAAAdHcAAAAAAAAAdwAAAAAAAAABAAAAc3YAAAAAAAAAdgAAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAeQAAAAAAAAB5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "onst"
					},
					"BAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"paste",
					null,
					"AgAAAKcAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAACzAAAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAApwAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"paste",
					null,
					"AgAAAEUBAAAAAAAAUQEAAAAAAAAAAAAAUQEAAAAAAABRAQAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAARQEAAAAAAABMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"paste",
					null,
					"AgAAADYBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABCAQAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAANgEAAAAAAAA9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"paste",
					null,
					"AgAAANUAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADhAAAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAA1QAAAAAAAADcAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-predicate.c",
			"settings":
			{
				"buffer_size": 30421,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "VISIBLE"
					},
					"BwAAAHUGAAAAAAAAdgYAAAAAAAAAAAAAdgYAAAAAAAB3BgAAAAAAAAAAAAB3BgAAAAAAAHgGAAAAAAAAAAAAAHgGAAAAAAAAeQYAAAAAAAAAAAAAeQYAAAAAAAB6BgAAAAAAAAAAAAB6BgAAAAAAAHsGAAAAAAAAAAAAAHsGAAAAAAAAfAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQYAAAAAAAB1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHwGAAAAAAAAfQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAYAAAAAAAB8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"cut",
					null,
					"AQAAAHUGAAAAAAAAdQYAAAAAAAAIAAAAVklTSUJMRSA",
					"AQAAAAAAAAABAAAAfQYAAAAAAAB1BgAAAAAAAAAAAAAAAAAA"
				],
				[
					7,
					1,
					"paste",
					null,
					"AQAAAHUGAAAAAAAAfQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQYAAAAAAAB1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"paste",
					null,
					"AQAAAMgEAAAAAAAA0AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAQAAAAAAADIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFwAAAAAAAAAXQAAAAAAAAAAAAAAXQAAAAAAAABdAAAAAAAAAAcAAABWSVNJQkxF",
					"AQAAAAAAAAABAAAAXAAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"paste",
					null,
					"AQAAAMoBAAAAAAAAuAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygEAAAAAAADKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "VIUS"
					},
					"BAAAAMsBAAAAAAAAzAEAAAAAAAAAAAAAzAEAAAAAAADNAQAAAAAAAAAAAADNAQAAAAAAAM4BAAAAAAAAAAAAAM4BAAAAAAAAzwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywEAAAAAAADLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					2,
					"left_delete",
					null,
					"AgAAAM4BAAAAAAAAzgEAAAAAAAABAAAAU80BAAAAAAAAzQEAAAAAAAABAAAAVQ",
					"AQAAAAAAAAABAAAAzwEAAAAAAADPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "SIBLE"
					},
					"BQAAAM0BAAAAAAAAzgEAAAAAAAAAAAAAzgEAAAAAAADPAQAAAAAAAAAAAADPAQAAAAAAANABAAAAAAAAAAAAANABAAAAAAAA0QEAAAAAAAAAAAAA0QEAAAAAAADSAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQEAAAAAAADNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"cut",
					null,
					"AQAAAMsBAAAAAAAAywEAAAAAAAAIAAAAVklTSUJMRSA",
					"AQAAAAAAAAABAAAA0wEAAAAAAADLAQAAAAAAAAAAAAAAAAAA"
				],
				[
					34,
					1,
					"paste",
					null,
					"AQAAAMsBAAAAAAAA0wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywEAAAAAAADLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"paste",
					null,
					"AQAAAD4CAAAAAAAARgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgIAAAAAAAA+AgAAAAAAAAAAAAAAABxA"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADwCAAAAAAAAPQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAIAAAAAAAA8AgAAAAAAAAAAAAAAgE9A"
				],
				[
					44,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAPgIAAAAAAAA+AgAAAAAAAAAAAAAAAAAA"
				],
				[
					49,
					1,
					"cut",
					null,
					"AQAAAJEBAAAAAAAAkQEAAAAAAAA2AAAACgplbnVtIHsKICBQUk9QX0lEID0gMCwKICBQUk9QX1ZBTFVFUywKICBQUk9QX0FSR0MsCn07",
					"AQAAAAAAAAABAAAAkQEAAAAAAADHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"paste",
					null,
					"AQAAAMgmAAAAAAAA/iYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyCYAAAAAAADIJgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAP4mAAAAAAAA/yYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/iYAAAAAAAD+JgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"left_delete",
					null,
					"AQAAAMgmAAAAAAAAyCYAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAySYAAAAAAADJJgAAAAAAAAAAAAAAAAAA"
				],
				[
					61,
					1,
					"cut",
					null,
					"AQAAAP8AAAAAAAAA/wAAAAAAAACTAAAACmVudW0gewogIE9QRVJBVE9SX1BMVVMgPSAwLAogIE9QRVJBVE9SX01JTlVTLAogIE9QRVJBVE9SX01VTCwKICBPUEVSQVRPUl9ESVYsCiAgT1BFUkFUT1JfTU9ELAogIE9QRVJBVE9SX0JPUiwKICBPUEVSQVRPUl9CQU5ELAogIE9QRVJBVE9SX1BPVywKfTsK",
					"AQAAAAAAAAABAAAA/wAAAAAAAACSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"paste",
					null,
					"AQAAAIQfAAAAAAAAFyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhB8AAAAAAACEHwAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABcgAAAAAAAAGCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFyAAAAAAAAAXIAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"left_delete",
					null,
					"AQAAABcgAAAAAAAAFyAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAGCAAAAAAAAAYIAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"cut",
					null,
					"AQAAAOEAAAAAAAAA4QAAAAAAAAAeAAAACmVudW0gewogIE1FVEhPRF9FVkFMID0gMCwKfTsK",
					"AQAAAAAAAAABAAAA4QAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"paste",
					null,
					"AQAAAMEdAAAAAAAA3x0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwR0AAAAAAADBHQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"left_delete",
					null,
					"AQAAAAkAAAAAAAAACQAAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAAkAAAAAAAAACgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"left_delete",
					null,
					"AQAAABMAAAAAAAAAEwAAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAP///////+9/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAABMAAAAAAAAAFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"paste",
					null,
					"AQAAAN4BAAAAAAAApAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gEAAAAAAADeAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "#ifndef PREDICATE_H\n#define PREDICATE_H\n\n#include \"vector.h\"\n#include \"utils.h\"\n#include <cutils.h>\n\nenum predicate_id {\n  // PREDICATE_NONE = -1,\n  PREDICATE_TYPE = 0,\n  PREDICATE_CHARSET,\n  PREDICATE_STRING,\n  PREDICATE_NOTNOT,\n  PREDICATE_NOT,\n  PREDICATE_BNOT,\n  PREDICATE_SQRT,\n  PREDICATE_ADD,\n  PREDICATE_SUB,\n  PREDICATE_MUL,\n  PREDICATE_DIV,\n  PREDICATE_MOD,\n  PREDICATE_BOR,\n  PREDICATE_BAND,\n  PREDICATE_POW,\n  PREDICATE_ATAN2,\n  PREDICATE_OR,\n  PREDICATE_AND,\n  PREDICATE_XOR,\n  PREDICATE_REGEXP,\n  PREDICATE_INSTANCEOF,\n  PREDICATE_PROTOTYPEIS,\n  PREDICATE_EQUAL,\n  PREDICATE_PROPERTY,\n  PREDICATE_MEMBER,\n  PREDICATE_SHIFT,\n  PREDICATE_FUNCTION\n};\n\ntypedef struct {\n  int flags;\n} TypePredicate;\n\ntypedef struct {\n  char* set;\n  size_t len;\n  Vector chars;\n} CharsetPredicate;\n\ntypedef struct {\n  char* str;\n  size_t len;\n} StringPredicate;\n\ntypedef struct {\n  JSValue predicate;\n} UnaryPredicate;\n\ntypedef struct {\n  JSValueConst left, right;\n} BinaryPredicate;\n\ntypedef struct {\n  size_t npredicates;\n  JSValue* predicates;\n} BooleanPredicate;\n\ntypedef struct {\n  RegExp expr;\n  uint8_t* bytecode;\n} RegExpPredicate;\n\ntypedef struct {\n  JSAtom atom;\n  JSValue predicate;\n} PropertyPredicate;\n\ntypedef struct {\n  JSValue object;\n} MemberPredicate;\n\ntypedef struct {\n  int n;\n  JSValue predicate;\n} ShiftPredicate;\n\ntypedef struct {\n  JSValue func, this_val;\n  int arity;\n} FunctionPredicate;\n\ntypedef struct Predicate {\n  enum predicate_id id;\n  union {\n    TypePredicate type;\n    CharsetPredicate charset;\n    StringPredicate string;\n    UnaryPredicate unary;\n    BinaryPredicate binary;\n    BooleanPredicate boolean;\n    RegExpPredicate regexp;\n    PropertyPredicate property;\n    MemberPredicate member;\n    ShiftPredicate shift;\n    FunctionPredicate function;\n  };\n} Predicate;\n\n#define PREDICATE_INIT(id) \\\n  { \\\n    id, { \\\n      { 0 } \\\n    } \\\n  }\nstatic const size_t CAPTURE_COUNT_MAX = 255;\n\nBOOL predicate_is(JSValueConst);\nBOOL predicate_callable(JSContext*, JSValueConst);\nJSValue predicate_eval(Predicate*, JSContext* ctx, JSArguments* args);\nJSValue predicate_call(JSContext*, JSValue value, int argc, JSValue argv[]);\nJSValue predicate_value(JSContext*, JSValue value, JSArguments* args);\nconst char* predicate_typename(const Predicate*);\nvoid predicate_tostring(const Predicate*, JSContext* ctx, DynBuf* dbuf);\nvoid predicate_tosource(const Predicate*, JSContext* ctx, DynBuf* dbuf, Arguments* args);\nJSValue predicate_regexp_capture(uint8_t**, int capture_count, uint8_t* input, JSContext* ctx);\nvoid predicate_free_rt(Predicate*, JSRuntime* rt);\nJSValue predicate_values(const Predicate*, JSContext* ctx);\nPredicate* predicate_clone(const Predicate*, JSContext* ctx);\nint predicate_regexp_compile(Predicate*, JSContext* ctx);\nint predicate_recursive_num_args(const Predicate*);\nint predicate_direct_num_args(const Predicate*);\nJSPrecedence predicate_precedence(const Predicate*);\n\nstatic inline void\npredicate_free(Predicate* pred, JSContext* ctx) {\n  predicate_free_rt(pred, JS_GetRuntime(ctx));\n}\n\n#define predicate_is_undefined() predicate_type(TYPE_UNDEFINED)\n#define predicate_is_null() predicate_type(TYPE_NULL)\n#define predicate_is_bool() predicate_type(TYPE_BOOL)\n#define predicate_is_int() predicate_type(TYPE_INT)\n#define predicate_is_object() predicate_type(TYPE_OBJECT)\n#define predicate_is_string() predicate_type(TYPE_STRING)\n#define predicate_is_symbol() predicate_type(TYPE_SYMBOL)\n#define predicate_is_big_float() predicate_type(TYPE_BIG_FLOAT)\n#define predicate_is_big_int() predicate_type(TYPE_BIG_INT)\n#define predicate_is_big_decimal() predicate_type(TYPE_BIG_DECIMAL)\n#define predicate_is_float64() predicate_type(TYPE_FLOAT64)\n#define predicate_is_number() predicate_type(TYPE_NUMBER)\n#define predicate_is_primitive() predicate_type(TYPE_PRIMITIVE)\n#define predicate_is_all() predicate_type(TYPE_ALL)\n#define predicate_is_function() predicate_type(TYPE_FUNCTION)\n#define predicate_is_array() predicate_type(TYPE_ARRAY)\n\nstatic inline Predicate\npredicate_charset(const char* str, size_t len) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_CHARSET);\n  ret.charset.set = (char*)str;\n  ret.charset.len = len;\n  memset(&ret.charset.chars, 0, sizeof(Vector));\n  return ret;\n}\n\nstatic inline Predicate\npredicate_string(const char* str, size_t len) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_STRING);\n  ret.string.str = (char*)str;\n  ret.string.len = len;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_regexp(char* source, size_t len, int flags) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_REGEXP);\n  ret.regexp.bytecode = 0;\n  ret.regexp.expr.source = source;\n  ret.regexp.expr.len = len;\n  ret.regexp.expr.flags = flags;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_type(int type) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_TYPE);\n  ret.type.flags = type;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_instanceof(JSValue ctor) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_INSTANCEOF);\n  ret.unary.predicate = ctor;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_prototype(JSValue proto) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_PROTOTYPEIS);\n  ret.unary.predicate = proto;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_add(JSValue left, JSValue right) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_ADD);\n  ret.binary.left = js_is_null_or_undefined(left) ? JS_UNDEFINED : left;\n  ret.binary.right = js_is_null_or_undefined(right) ? JS_UNDEFINED : right;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_sub(JSValue left, JSValue right) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_SUB);\n  ret.binary.left = js_is_null_or_undefined(left) ? JS_UNDEFINED : left;\n  ret.binary.right = js_is_null_or_undefined(right) ? JS_UNDEFINED : right;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_mul(JSValue left, JSValue right) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_MUL);\n  ret.binary.left = js_is_null_or_undefined(left) ? JS_UNDEFINED : left;\n  ret.binary.right = js_is_null_or_undefined(right) ? JS_UNDEFINED : right;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_div(JSValue left, JSValue right) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_DIV);\n  ret.binary.left = js_is_null_or_undefined(left) ? JS_UNDEFINED : left;\n  ret.binary.right = js_is_null_or_undefined(right) ? JS_UNDEFINED : right;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_mod(JSValue left, JSValue right) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_MOD);\n  ret.binary.left = js_is_null_or_undefined(left) ? JS_UNDEFINED : left;\n  ret.binary.right = js_is_null_or_undefined(right) ? JS_UNDEFINED : right;\n  return ret;\n}\n\n#define PREDICATE_BINARY(op, id) \\\n  static inline Predicate predicate_##op(JSValue left, JSValue right) { \\\n    Predicate ret = PREDICATE_INIT(PREDICATE_##id); \\\n    ret.binary.left = js_is_null_or_undefined(left) ? JS_UNDEFINED : left; \\\n    ret.binary.right = js_is_null_or_undefined(right) ? JS_UNDEFINED : right; \\\n    return ret; \\\n  }\n#define PREDICATE_UNARY(op, id) \\\n  static inline Predicate predicate_##op(JSValue value) { \\\n    Predicate ret = PREDICATE_INIT(PREDICATE_##id); \\\n    ret.unary.predicate = value; \\\n    return ret; \\\n  }\n\nPREDICATE_BINARY(bor, BOR)\nPREDICATE_BINARY(band, BAND)\nPREDICATE_BINARY(pow, POW)\n\nstatic inline Predicate\npredicate_or(size_t npredicates, JSValue* predicates) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_OR);\n  ret.boolean.npredicates = npredicates;\n  ret.boolean.predicates = predicates;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_and(size_t npredicates, JSValue* predicates) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_AND);\n  ret.boolean.npredicates = npredicates;\n  ret.boolean.predicates = predicates;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_xor(size_t npredicates, JSValue* predicates) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_XOR);\n  ret.boolean.npredicates = npredicates;\n  ret.boolean.predicates = predicates;\n  return ret;\n}\n\nPREDICATE_UNARY(equal, EQUAL)\nPREDICATE_UNARY(notnot, NOTNOT)\nPREDICATE_UNARY(not, NOT)\nPREDICATE_UNARY(bnot, BNOT)\nPREDICATE_UNARY(sqrt, SQRT)\n\nstatic inline Predicate\npredicate_property(JSAtom prop, JSValue pred) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_PROPERTY);\n  ret.property.atom = prop;\n  ret.property.predicate = pred;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_member(JSValue obj) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_MEMBER);\n  ret.member.object = obj;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_shift(int n, JSValue pred) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_SHIFT);\n  ret.shift.n = n;\n  ret.shift.predicate = pred;\n  return ret;\n}\n\nstatic inline Predicate\npredicate_function(JSValue func, JSValue this_val, int arity) {\n  Predicate ret = PREDICATE_INIT(PREDICATE_FUNCTION);\n  ret.function.func = func;\n  ret.function.this_val = this_val;\n  ret.function.arity = arity;\n  return ret;\n}\n\n#endif /* defined(PREDICATE_H) */\n",
			"file": "predicate.h",
			"file_size": 8910,
			"file_write_time": 132778774429103680,
			"settings":
			{
				"buffer_size": 8869,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"cut",
					null,
					"AQAAANMHAAAAAAAA0wcAAAAAAAApAAAAZW51bSBwcmVkaWNhdGVfaWQgcHJlZGljYXRlX2lkKEpTVmFsdWUpOwo",
					"AQAAAAAAAAABAAAA0wcAAAAAAAD8BwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "predicate.c",
			"settings":
			{
				"buffer_size": 30287,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					26,
					1,
					"cut",
					null,
					"AQAAAAQFAAAAAAAABAUAAAAAAADGAAAACmVudW0gcHJlZGljYXRlX2lkCnByZWRpY2F0ZV9pZChKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBQcmVkaWNhdGUqIHByZWQ7CiAgZW51bSBwcmVkaWNhdGVfaWQgcmV0ID0gLTE7CgogIGlmKChwcmVkID0gSlNfR2V0T3BhcXVlKHZhbHVlLCBqc19wcmVkaWNhdGVfY2xhc3NfaWQpKSkKICAgIHJldCA9IHByZWQtPmlkOwogIHJldHVybiByZXQ7Cn0K",
					"AQAAAAAAAAABAAAABAUAAAAAAADKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "js_predicate_"
					},
					"DgAAAFoEAAAAAAAAWwQAAAAAAAAAAAAAWwQAAAAAAABbBAAAAAAAAAwAAABKU19HZXRPcGFxdWVbBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAXQQAAAAAAAAAAAAAXQQAAAAAAABeBAAAAAAAAAAAAABeBAAAAAAAAF8EAAAAAAAAAAAAAF8EAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABhBAAAAAAAAAAAAABhBAAAAAAAAGIEAAAAAAAAAAAAAGIEAAAAAAAAYwQAAAAAAAAAAAAAYwQAAAAAAABkBAAAAAAAAAAAAABkBAAAAAAAAGUEAAAAAAAAAAAAAGUEAAAAAAAAZgQAAAAAAAAAAAAAZgQAAAAAAABnBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgQAAAAAAABmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BAAAAGcEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABpBAAAAAAAAAAAAABpBAAAAAAAAGoEAAAAAAAAAAAAAGoEAAAAAAAAawQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwQAAAAAAABnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAAHEEAAAAAAAAcQQAAAAAAAAXAAAALCBqc19wcmVkaWNhdGVfY2xhc3NfaWQ",
					"AQAAAAAAAAABAAAAcQQAAAAAAACIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "jhs"
					},
					"BAAAAGgkAAAAAAAAaSQAAAAAAAAAAAAAaSQAAAAAAABpJAAAAAAAAAwAAABKU19HZXRPcGFxdWVpJAAAAAAAAGokAAAAAAAAAAAAAGokAAAAAAAAayQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaCQAAAAAAAB0JAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					2,
					"left_delete",
					null,
					"AgAAAGokAAAAAAAAaiQAAAAAAAABAAAAc2kkAAAAAAAAaSQAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAayQAAAAAAABrJAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "s_predia"
					},
					"CAAAAGkkAAAAAAAAaiQAAAAAAAAAAAAAaiQAAAAAAABrJAAAAAAAAAAAAABrJAAAAAAAAGwkAAAAAAAAAAAAAGwkAAAAAAAAbSQAAAAAAAAAAAAAbSQAAAAAAABuJAAAAAAAAAAAAABuJAAAAAAAAG8kAAAAAAAAAAAAAG8kAAAAAAAAcCQAAAAAAAAAAAAAcCQAAAAAAABxJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaSQAAAAAAABpJAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"left_delete",
					null,
					"AQAAAHAkAAAAAAAAcCQAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAcSQAAAAAAABxJAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "cate_data"
					},
					"CQAAAHAkAAAAAAAAcSQAAAAAAAAAAAAAcSQAAAAAAAByJAAAAAAAAAAAAAByJAAAAAAAAHMkAAAAAAAAAAAAAHMkAAAAAAAAdCQAAAAAAAAAAAAAdCQAAAAAAAB1JAAAAAAAAAAAAAB1JAAAAAAAAHYkAAAAAAAAAAAAAHYkAAAAAAAAdyQAAAAAAAAAAAAAdyQAAAAAAAB4JAAAAAAAAAAAAAB4JAAAAAAAAHkkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcCQAAAAAAABwJAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"left_delete",
					null,
					"AQAAAH8kAAAAAAAAfyQAAAAAAAAXAAAALCBqc19wcmVkaWNhdGVfY2xhc3NfaWQ",
					"AQAAAAAAAAABAAAAfyQAAAAAAACWJAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "jhs"
					},
					"BAAAAO4lAAAAAAAA7yUAAAAAAAAAAAAA7yUAAAAAAADvJQAAAAAAAAwAAABKU19HZXRPcGFxdWXvJQAAAAAAAPAlAAAAAAAAAAAAAPAlAAAAAAAA8SUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7iUAAAAAAAD6JQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					2,
					"left_delete",
					null,
					"AgAAAPAlAAAAAAAA8CUAAAAAAAABAAAAc+8lAAAAAAAA7yUAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAA8SUAAAAAAADxJQAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "s_predicate_data"
					},
					"EAAAAO8lAAAAAAAA8CUAAAAAAAAAAAAA8CUAAAAAAADxJQAAAAAAAAAAAADxJQAAAAAAAPIlAAAAAAAAAAAAAPIlAAAAAAAA8yUAAAAAAAAAAAAA8yUAAAAAAAD0JQAAAAAAAAAAAAD0JQAAAAAAAPUlAAAAAAAAAAAAAPUlAAAAAAAA9iUAAAAAAAAAAAAA9iUAAAAAAAD3JQAAAAAAAAAAAAD3JQAAAAAAAPglAAAAAAAAAAAAAPglAAAAAAAA+SUAAAAAAAAAAAAA+SUAAAAAAAD6JQAAAAAAAAAAAAD6JQAAAAAAAPslAAAAAAAAAAAAAPslAAAAAAAA/CUAAAAAAAAAAAAA/CUAAAAAAAD9JQAAAAAAAAAAAAD9JQAAAAAAAP4lAAAAAAAAAAAAAP4lAAAAAAAA/yUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7yUAAAAAAADvJQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					3,
					"left_delete",
					null,
					"AwAAAAcmAAAAAAAAByYAAAAAAAAVAAAAanNfcHJlZGljYXRlX2NsYXNzX2lkBiYAAAAAAAAGJgAAAAAAAAEAAAAgBSYAAAAAAAAFJgAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAByYAAAAAAAAcJgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "utils.c",
			"settings":
			{
				"buffer_size": 56483,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"paste",
					null,
					"AQAAANIBAAAAAAAA/AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gEAAAAAAADSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"paste",
					null,
					"AgAAAF4BAAAAAAAAtgEAAAAAAAAAAAAAtgEAAAAAAAC2AQAAAAAAAHQAAAB2b2lkIHF1aWNrc29ydF9yKHZvaWQqIGJhc2UsIHNpemVfdCBubWVtYiwgc2l6ZV90IHNpemUsIGludCAoKmNvbXBhcikoY29uc3Qgdm9pZCosIGNvbnN0IHZvaWQqLCB2b2lkKiksIHZvaWQqIHB0cik7Cg",
					"AQAAAAAAAAABAAAAXgEAAAAAAADSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKABAAAAAAAAoQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAEAAAAAAACgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"paste",
					null,
					"AQAAAKEBAAAAAAAApwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQEAAAAAAAChAQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJkBAAAAAAAAmgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQEAAAAAAACZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"paste",
					null,
					"AQAAAJoBAAAAAAAAoAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgEAAAAAAACaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIwBAAAAAAAAjQEAAAAAAAAAAAAAjQEAAAAAAACNAQAAAAAAAAYAAABjb21wYXI",
					"AQAAAAAAAAABAAAAjAEAAAAAAACSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					2,
					"left_delete",
					null,
					"AgAAALkBAAAAAAAAuQEAAAAAAAADAAAAcHRyuAEAAAAAAAC4AQAAAAAAAAEAAAAg",
					"AQAAAAAAAAABAAAAuQEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAuAEAAAAAAAC4AQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/fs.js",
			"settings":
			{
				"buffer_size": 10990,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					43,
					1,
					"insert",
					{
						"characters": "options."
					},
					"CAAAAPoVAAAAAAAA+xUAAAAAAAAAAAAA+xUAAAAAAAD8FQAAAAAAAAAAAAD8FQAAAAAAAP0VAAAAAAAAAAAAAP0VAAAAAAAA/hUAAAAAAAAAAAAA/hUAAAAAAAD/FQAAAAAAAAAAAAD/FQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAARYAAAAAAAAAAAAAARYAAAAAAAACFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hUAAAAAAAD6FQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "=="
					},
					"AwAAAAsWAAAAAAAADBYAAAAAAAAAAAAADBYAAAAAAAAMFgAAAAAAAAcAAAAhPSBudWxsDBYAAAAAAAANFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxYAAAAAAAASFgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA0WAAAAAAAADhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADRYAAAAAAAANFgAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAA4WAAAAAAAAEBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhYAAAAAAAAOFgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "ut-8"
					},
					"BAAAAA8WAAAAAAAAEBYAAAAAAAAAAAAAEBYAAAAAAAARFgAAAAAAAAAAAAARFgAAAAAAABIWAAAAAAAAAAAAABIWAAAAAAAAExYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxYAAAAAAAAPFgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAABEWAAAAAAAAEhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERYAAAAAAAARFgAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "!="
					},
					"AwAAAAoWAAAAAAAACxYAAAAAAAAAAAAACxYAAAAAAAALFgAAAAAAAAMAAAAgPT0LFgAAAAAAAAwWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChYAAAAAAAANFgAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " null0"
					},
					"BgAAAAwWAAAAAAAADRYAAAAAAAAAAAAADRYAAAAAAAAOFgAAAAAAAAAAAAAOFgAAAAAAAA8WAAAAAAAAAAAAAA8WAAAAAAAAEBYAAAAAAAAAAAAAEBYAAAAAAAARFgAAAAAAAAAAAAARFgAAAAAAABIWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBYAAAAAAAAMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "0000000"
					},
					"BwAAABIWAAAAAAAAExYAAAAAAAAAAAAAExYAAAAAAAAUFgAAAAAAAAAAAAAUFgAAAAAAABUWAAAAAAAAAAAAABUWAAAAAAAAFhYAAAAAAAAAAAAAFhYAAAAAAAAXFgAAAAAAAAAAAAAXFgAAAAAAABgWAAAAAAAAAAAAABgWAAAAAAAAGRYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEhYAAAAAAAASFgAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					9,
					"left_delete",
					null,
					"CQAAABgWAAAAAAAAGBYAAAAAAAABAAAAMBcWAAAAAAAAFxYAAAAAAAABAAAAMBYWAAAAAAAAFhYAAAAAAAABAAAAMBUWAAAAAAAAFRYAAAAAAAABAAAAMBQWAAAAAAAAFBYAAAAAAAABAAAAMBMWAAAAAAAAExYAAAAAAAABAAAAMBIWAAAAAAAAEhYAAAAAAAABAAAAMBEWAAAAAAAAERYAAAAAAAABAAAAMBAWAAAAAAAAEBYAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAGRYAAAAAAAAZFgAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAABAWAAAAAAAAERYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBYAAAAAAAAQFgAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"left_delete",
					null,
					"AQAAABEWAAAAAAAAERYAAAAAAAAIAAAAICd1dGYtOCc",
					"AQAAAAAAAAABAAAAERYAAAAAAAAZFgAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAoWAAAAAAAACxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChYAAAAAAAAKFgAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "op√º"
					},
					"AwAAADUWAAAAAAAANhYAAAAAAAAAAAAANhYAAAAAAAA3FgAAAAAAAAAAAAA3FgAAAAAAADgWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANRYAAAAAAAA1FgAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"left_delete",
					null,
					"AQAAADcWAAAAAAAANxYAAAAAAAACAAAAw7w",
					"AQAAAAAAAAABAAAAOBYAAAAAAAA4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "tions."
					},
					"BgAAADcWAAAAAAAAOBYAAAAAAAAAAAAAOBYAAAAAAAA5FgAAAAAAAAAAAAA5FgAAAAAAADoWAAAAAAAAAAAAADoWAAAAAAAAOxYAAAAAAAAAAAAAOxYAAAAAAAA8FgAAAAAAAAAAAAA8FgAAAAAAAD0WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxYAAAAAAAA3FgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "location.c",
			"settings":
			{
				"buffer_size": 2153,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs-pointer.c",
			"settings":
			{
				"buffer_size": 14645,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"paste",
					null,
					"AQAAALIJAAAAAAAAugkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgkAAAAAAACyCQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"paste",
					null,
					"AQAAAGAHAAAAAAAAaAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAcAAAAAAABgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"cut",
					null,
					"AQAAACoCAAAAAAAAKgIAAAAAAAA0BQAACnZvaWQKcG9pbnRlcl90b3N0cmluZyhQb2ludGVyKiBwdHIsIEpTQ29udGV4dCogY3R4LCBEeW5CdWYqIGRiKSB7CiAgc2l6ZV90IGksIGo7CiAgY29uc3QgY2hhciogc3RyOwogIGZvcihpID0gMDsgaSA8IHB0ci0+bjsgaSsrKSB7CiAgICBpZihqc19hdG9tX2lzaW50KHB0ci0+YXRvbXNbaV0pKSB7CiAgICAgIGRidWZfcHJpbnRmKGRiLCAiWyUiIFBSSXUzMiAiXSIsIGpzX2F0b21fdG9pbnQocHRyLT5hdG9tc1tpXSkpOwogICAgICBjb250aW51ZTsKICAgIH0KICAgIGlmKGkgPiAwKQogICAgICBkYnVmX3B1dGMoZGIsICcuJyk7CiAgICBzdHIgPSBKU19BdG9tVG9DU3RyaW5nKGN0eCwgcHRyLT5hdG9tc1tpXSk7CiAgICBmb3IoaiA9IDA7IHN0cltqXTsgaisrKSB7CiAgICAgIGlmKHN0cltqXSA9PSAnLicpCiAgICAgICAgZGJ1Zl9wdXRjKGRiLCAnXFwnKTsKICAgICAgZGJ1Zl9wdXRjKGRiLCBzdHJbal0pOwogICAgfQogIH0KfQoKSlNWYWx1ZQpwb2ludGVyX3RvYXJyYXkoUG9pbnRlciogcHRyLCBKU0NvbnRleHQqIGN0eCkgewogIHNpemVfdCBpOwogIEpTVmFsdWUgYXJyYXkgPSBKU19OZXdBcnJheShjdHgpOwogIGZvcihpID0gMDsgaSA8IHB0ci0+bjsgaSsrKSB7IEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgYXJyYXksIGksIGpzX2F0b21fdG92YWx1ZShjdHgsIHB0ci0+YXRvbXNbaV0pKTsgfQogIHJldHVybiBhcnJheTsKfQoKSlNWYWx1ZQpwb2ludGVyX3RvYXRvbXMoUG9pbnRlciogcHRyLCBKU0NvbnRleHQqIGN0eCkgewogIHNpemVfdCBpOwogIEpTVmFsdWUgYXJyYXkgPSBKU19OZXdBcnJheShjdHgpOwogIGZvcihpID0gMDsgaSA8IHB0ci0+bjsgaSsrKSB7IEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgYXJyYXksIGksIEpTX05ld1VpbnQzMihjdHgsIHB0ci0+YXRvbXNbaV0pKTsgfQogIHJldHVybiBhcnJheTsKfQoKaW50CnBvaW50ZXJfZnJvbWF0b21zKFBvaW50ZXIqIHB0ciwgSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBhcnIpIHsKICBzaXplX3QgbGVuID0ganNfYXJyYXlfbGVuZ3RoKGN0eCwgYXJyKTsKICBzaXplX3QgaTsKICBwb2ludGVyX3Jlc2V0KHB0ciwgY3R4KTsKCiAgcHRyLT5hdG9tcyA9IGpzX3JlYWxsb2MoY3R4LCBwdHItPmF0b21zLCBzaXplb2YoSlNBdG9tKSAqIGxlbik7CiAgcHRyLT5uID0gbGVuOwogIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICB1aW50MzJfdCBhdG9tOwogICAgSlNfVG9VaW50MzIoY3R4LCAmYXRvbSwgSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcnIsIGkpKTsKICAgIHB0ci0+YXRvbXNbaV0gPSBhdG9tOwogIH0KICByZXR1cm4gcHRyLT5uOwp9",
					"AQAAAAAAAAABAAAAKgIAAAAAAABeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAvAwAAAAAAADLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAvAwAAAAAAADLDAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-pointer.h",
			"settings":
			{
				"buffer_size": 588,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA2AgAAI2lmbmRlZiBRVUlDS0pTX1BPSU5URVJfSAojZGVmaW5lIFFVSUNLSlNfUE9JTlRFUl9ICgojaW5jbHVkZSAicG9pbnRlci5oIgojaW5jbHVkZSAidXRpbHMuaCIKI2luY2x1ZGUgInV0aWxzLmgiCgpleHRlcm4gdGhyZWFkX2xvY2FsIEpTQ2xhc3NJRCBqc19wb2ludGVyX2NsYXNzX2lkOwoKc3RhdGljIGlubGluZSBQb2ludGVyKgpqc19wb2ludGVyX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIHZhbHVlLCBqc19wb2ludGVyX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBQb2ludGVyKgpqc19wb2ludGVyX2RhdGEoSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZSh2YWx1ZSwganNfcG9pbnRlcl9jbGFzc19pZCk7Cn0KCkpTVmFsdWUganNfcG9pbnRlcl93cmFwKEpTQ29udGV4dCosIFBvaW50ZXIqKTsKSlNWYWx1ZSBqc19wb2ludGVyX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlIHByb3RvLCBKU1ZhbHVlKTsKCiNlbmRpZiAvKiBkZWZpbmVkKFFVSUNLSlNfUE9JTlRFUl9IKSAqLwoAAAAAAAAAADYCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgIAAAAAAAA2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"paste",
					null,
					"AgAAAP8BAAAAAAAACwIAAAAAAAAAAAAA+QEAAAAAAAAFAgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAA+QEAAAAAAAD5AQAAAAAAAAAAAAAAAPC//wEAAAAAAAD/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"paste",
					null,
					"AgAAAPQBAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAgAAAAAAABMAAABKU1ZhbEpTVmFsdWVDb25zdHVl",
					"AQAAAAAAAAABAAAA9AEAAAAAAAAHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"paste",
					null,
					"AgAAABQCAAAAAAAAIAIAAAAAAAAAAAAAIAIAAAAAAAAgAgAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAAFAIAAAAAAAAbAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "pointer.c",
			"settings":
			{
				"buffer_size": 8201,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AQAAANQaAAAAAAAACCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BoAAAAAAADUGgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAAggAAAAAAAACSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACCAAAAAAAAAIIAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAyAUAAAAAAADIBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "pointer.h",
			"settings":
			{
				"buffer_size": 2277,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"",
					null,
					"AgAAANQCAAAAAAAAHQMAAAAAAAAAAAAAbQQAAAAAAABtBAAAAAAAAEkAAAAKUG9pbnRlciogcG9pbnRlcl9jb25jYXQoUG9pbnRlciogcHRyLCBKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGFycik7",
					"AQAAAAAAAAABAAAAbQQAAAAAAAAkBAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"paste_and_indent",
					null,
					"AgAAANsAAAAAAAAA7gUAAAAAAAAAAAAA7gUAAAAAAADuBQAAAAAAAJIDAAB2b2lkIHBvaW50ZXJfY29weShQb2ludGVyKiwgUG9pbnRlciosIEpTQ29udGV4dCopOwpKU1ZhbHVlIHBvaW50ZXJfZGVyZWYoUG9pbnRlciosIEpTQ29udGV4dCosIEpTVmFsdWUpOwpKU1ZhbHVlIHBvaW50ZXJfYWNxdWlyZShQb2ludGVyKiwgSlNDb250ZXh0KiwgSlNWYWx1ZSk7CnZvaWQgcG9pbnRlcl9kdW1wKFBvaW50ZXIqLCBKU0NvbnRleHQqLCBEeW5CdWYqLCBCT09MLCBzaXplX3QpOwp2b2lkIHBvaW50ZXJfZGVidWcoUG9pbnRlciosIEpTQ29udGV4dCopOwp2b2lkIHBvaW50ZXJfZnJvbWFycmF5KFBvaW50ZXIqLCBKU0NvbnRleHQqLCBKU1ZhbHVlKTsKdm9pZCBwb2ludGVyX2Zyb21pdGVyYWJsZShQb2ludGVyKiwgSlNDb250ZXh0KiwgSlNWYWx1ZSk7CnZvaWQgcG9pbnRlcl9mcm9tc3RyaW5nKFBvaW50ZXIqLCBKU0NvbnRleHQqLCBKU1ZhbHVlKTsKc2l6ZV90IHBvaW50ZXJfcGFyc2UoUG9pbnRlciosIEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBzaXplX3QpOwp2b2lkClBvaW50ZXIqIHBvaW50ZXJfY29uY2F0KFBvaW50ZXIqIHB0ciwgSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBhcnIpOyBwb2ludGVyX3Jlc2V0KFBvaW50ZXIqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBwb2ludGVyX3NoaWZ0KFBvaW50ZXIqLCBKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwp2b2lkIHBvaW50ZXJfcHVzaChQb2ludGVyKiwgSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKUG9pbnRlciogcG9pbnRlcl9zbGljZShQb2ludGVyKiwgSlNDb250ZXh0KiwgaW50NjRfdCwgaW50NjRfdCk7CnZvaWQgcG9pbnRlcl90cnVuY2F0ZShQb2ludGVyKiwgSlNDb250ZXh0Kiwgc2l6ZV90KTsKaW50IHBvaW50ZXJfZnJvbShQb2ludGVyKiBwdHIsIEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpOw",
					"AQAAAAAAAAABAAAAbQQAAAAAAADbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAfCQAAI2lmbmRlZiBQT0lOVEVSX0gKI2RlZmluZSBQT0lOVEVSX0gKCiNpbmNsdWRlICJxdWlja2pzLmgiCiNpbmNsdWRlICJjdXRpbHMuaCIKI2luY2x1ZGUgPHN0ZGludC5oPgoKdHlwZWRlZiBzdHJ1Y3QgUG9pbnRlciB7CiAgc2l6ZV90IG47CiAgSlNBdG9tKiBhdG9tczsKfSBQb2ludGVyOwoKdHlwZWRlZiBQb2ludGVyKiBEYXRhRnVuYyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwoKdm9pZCAgICAgcG9pbnRlcl9yZXNldChQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkICAgICBwb2ludGVyX2NvcHkoUG9pbnRlciosIFBvaW50ZXIqIHNyYywgSlNDb250ZXh0KiBjdHgpOwp2b2lkICAgICBwb2ludGVyX3RydW5jYXRlKFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCwgc2l6ZV90IHNpemUpOwp2b2lkICAgICBwb2ludGVyX2R1bXAoUG9pbnRlciosIEpTQ29udGV4dCogY3R4LCBEeW5CdWYqIGRiLCBCT09MIGNvbG9yLCBzaXplX3QgaW5kZXgpOwp2b2lkICAgICBwb2ludGVyX2RlYnVnKFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCk7CnNpemVfdCAgIHBvaW50ZXJfcGFyc2UoUG9pbnRlciosIEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBzdHIsIHNpemVfdCBsZW4pOwpQb2ludGVyKiBwb2ludGVyX3NsaWNlKFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCwgaW50NjRfdCBzdGFydCwgaW50NjRfdCBlbmQpOwpKU1ZhbHVlICBwb2ludGVyX3NoaWZ0KFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSBvYmopOwp2b2lkICAgICBwb2ludGVyX3B1c2goUG9pbnRlciosIEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIGtleSk7CkpTVmFsdWUgIHBvaW50ZXJfZGVyZWYoUG9pbnRlciosIEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIGFyZyk7CkpTVmFsdWUgIHBvaW50ZXJfYWNxdWlyZShQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgYXJnKTsKdm9pZCAgICAgcG9pbnRlcl9mcm9tc3RyaW5nKFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSB2YWx1ZSk7CnZvaWQgICAgIHBvaW50ZXJfZnJvbWFycmF5KFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSBhcnJheSk7CnZvaWQgICAgIHBvaW50ZXJfZnJvbWl0ZXJhYmxlKFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSBhcmcpOwppbnQgICAgICBwb2ludGVyX2Zyb20oUG9pbnRlciosIEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIHZhbHVlKTsKUG9pbnRlciogcG9pbnRlcl9jb25jYXQoUG9pbnRlciosIEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIGFycik7CnZvaWQgICAgIHBvaW50ZXJfdG9zdHJpbmcoUG9pbnRlciosIEpTQ29udGV4dCogY3R4LCBEeW5CdWYqIGRiKTsKSlNWYWx1ZSAgcG9pbnRlcl90b2FycmF5KFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCk7CkpTVmFsdWUgIHBvaW50ZXJfdG9hdG9tcyhQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgpOwppbnQgICAgICBwb2ludGVyX2Zyb21hdG9tcyhQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgYXJyKTsKCgpzdGF0aWMgaW5saW5lIFBvaW50ZXIqCnBvaW50ZXJfbmV3KEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGpzX21hbGxvY3ooY3R4LCBzaXplb2YoUG9pbnRlcikpOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKcG9pbnRlcl9mcmVlKFBvaW50ZXIqIHB0ciwgSlNDb250ZXh0KiBjdHgpIHsKICBwb2ludGVyX3Jlc2V0KHB0ciwgY3R4KTsKICBqc19mcmVlKGN0eCwgcHRyKTsKfQoKc3RhdGljIGlubGluZSBQb2ludGVyKgpwb2ludGVyX2Nsb25lKFBvaW50ZXIqIG90aGVyLCBKU0NvbnRleHQqIGN0eCkgewogIFBvaW50ZXIqIHB0cjsKICBpZigocHRyID0gcG9pbnRlcl9uZXcoY3R4KSkpCiAgICBwb2ludGVyX2NvcHkocHRyLCBvdGhlciwgY3R4KTsKICByZXR1cm4gcHRyOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKcG9pbnRlcl9wdXNoYXRvbShQb2ludGVyKiBwdHIsIEpTQ29udGV4dCogY3R4LCBKU0F0b20gYXRvbSkgewogIGlmKChwdHItPmF0b21zID0ganNfcmVhbGxvYyhjdHgsIHB0ci0+YXRvbXMsIChwdHItPm4gKyAxKSAqIHNpemVvZihKU0F0b20pKSkpCiAgICBwdHItPmF0b21zW3B0ci0+bisrXSA9IGF0b207Cn0KCnN0YXRpYyBpbmxpbmUgSlNBdG9tCnBvaW50ZXJfcG9wKFBvaW50ZXIqIHB0cikgewogIEpTQXRvbSByZXQgPSBKU19BVE9NX05VTEw7CiAgc2l6ZV90IHNpemUgPSBwdHItPm47CiAgaWYoc2l6ZSA+IDApIHsKICAgIHJldCA9IHB0ci0+YXRvbXNbc2l6ZSAtIDFdOwogICAgcHRyLT5hdG9tc1stLXB0ci0+bl0gPSAwOwogIH0KICByZXR1cm4gcmV0Owp9CgojZW5kaWYgLyogZGVmaW5lZChQT0lOVEVSX0gpICovCgAAAAAAAAAA5QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gUAAAAAAADuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlCAAAI2lmbmRlZiBQT0lOVEVSX0gKI2RlZmluZSBQT0lOVEVSX0gKCiNpbmNsdWRlICJxdWlja2pzLmgiCiNpbmNsdWRlICJjdXRpbHMuaCIKI2luY2x1ZGUgPHN0ZGludC5oPgoKdHlwZWRlZiBzdHJ1Y3QgUG9pbnRlciB7CiAgc2l6ZV90IG47CiAgSlNBdG9tKiBhdG9tczsKfSBQb2ludGVyOwoKdHlwZWRlZiBQb2ludGVyKiBEYXRhRnVuYyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwoKdm9pZCBwb2ludGVyX3Jlc2V0KFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgcG9pbnRlcl9jb3B5KFBvaW50ZXIqLCBQb2ludGVyKiBzcmMsIEpTQ29udGV4dCogY3R4KTsKdm9pZCBwb2ludGVyX3RydW5jYXRlKFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCwgc2l6ZV90IHNpemUpOwp2b2lkIHBvaW50ZXJfZHVtcChQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgsIER5bkJ1ZiogZGIsIEJPT0wgY29sb3IsIHNpemVfdCBpbmRleCk7CnZvaWQgcG9pbnRlcl9kZWJ1ZyhQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgpOwpzaXplX3QgcG9pbnRlcl9wYXJzZShQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIHN0ciwgc2l6ZV90IGxlbik7ClBvaW50ZXIqIHBvaW50ZXJfc2xpY2UoUG9pbnRlciosIEpTQ29udGV4dCogY3R4LCBpbnQ2NF90IHN0YXJ0LCBpbnQ2NF90IGVuZCk7CkpTVmFsdWUgcG9pbnRlcl9zaGlmdChQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgb2JqKTsKdm9pZCBwb2ludGVyX3B1c2goUG9pbnRlciosIEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIGtleSk7CkpTVmFsdWUgcG9pbnRlcl9kZXJlZihQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgYXJnKTsKSlNWYWx1ZSBwb2ludGVyX2FjcXVpcmUoUG9pbnRlciosIEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIGFyZyk7CnZvaWQgcG9pbnRlcl9mcm9tc3RyaW5nKFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSB2YWx1ZSk7CnZvaWQgcG9pbnRlcl9mcm9tYXJyYXkoUG9pbnRlciosIEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIGFycmF5KTsKdm9pZCBwb2ludGVyX2Zyb21pdGVyYWJsZShQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgYXJnKTsKaW50IHBvaW50ZXJfZnJvbShQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgdmFsdWUpOwpQb2ludGVyKiBwb2ludGVyX2NvbmNhdChQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgYXJyKTsKdm9pZCBwb2ludGVyX3Rvc3RyaW5nKFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCwgRHluQnVmKiBkYik7CkpTVmFsdWUgcG9pbnRlcl90b2FycmF5KFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCk7CkpTVmFsdWUgcG9pbnRlcl90b2F0b21zKFBvaW50ZXIqLCBKU0NvbnRleHQqIGN0eCk7CmludCBwb2ludGVyX2Zyb21hdG9tcyhQb2ludGVyKiwgSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgYXJyKTsKCnN0YXRpYyBpbmxpbmUgUG9pbnRlcioKcG9pbnRlcl9uZXcoSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4ganNfbWFsbG9jeihjdHgsIHNpemVvZihQb2ludGVyKSk7Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZApwb2ludGVyX2ZyZWUoUG9pbnRlciogcHRyLCBKU0NvbnRleHQqIGN0eCkgewogIHBvaW50ZXJfcmVzZXQocHRyLCBjdHgpOwogIGpzX2ZyZWUoY3R4LCBwdHIpOwp9CgpzdGF0aWMgaW5saW5lIFBvaW50ZXIqCnBvaW50ZXJfY2xvbmUoUG9pbnRlciogb3RoZXIsIEpTQ29udGV4dCogY3R4KSB7CiAgUG9pbnRlciogcHRyOwogIGlmKChwdHIgPSBwb2ludGVyX25ldyhjdHgpKSkKICAgIHBvaW50ZXJfY29weShwdHIsIG90aGVyLCBjdHgpOwogIHJldHVybiBwdHI7Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZApwb2ludGVyX3B1c2hhdG9tKFBvaW50ZXIqIHB0ciwgSlNDb250ZXh0KiBjdHgsIEpTQXRvbSBhdG9tKSB7CiAgaWYoKHB0ci0+YXRvbXMgPSBqc19yZWFsbG9jKGN0eCwgcHRyLT5hdG9tcywgKHB0ci0+biArIDEpICogc2l6ZW9mKEpTQXRvbSkpKSkKICAgIHB0ci0+YXRvbXNbcHRyLT5uKytdID0gYXRvbTsKfQoKc3RhdGljIGlubGluZSBKU0F0b20KcG9pbnRlcl9wb3AoUG9pbnRlciogcHRyKSB7CiAgSlNBdG9tIHJldCA9IEpTX0FUT01fTlVMTDsKICBzaXplX3Qgc2l6ZSA9IHB0ci0+bjsKICBpZihzaXplID4gMCkgewogICAgcmV0ID0gcHRyLT5hdG9tc1tzaXplIC0gMV07CiAgICBwdHItPmF0b21zWy0tcHRyLT5uXSA9IDA7CiAgfQogIHJldHVybiByZXQ7Cn0KCiNlbmRpZiAvKiBkZWZpbmVkKFBPSU5URVJfSCkgKi8KAAAAAAAAAADlCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gUAAAAAAADuBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-location.c",
			"settings":
			{
				"buffer_size": 11642,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "VISIBLE"
					},
					"BwAAAOcHAAAAAAAA6AcAAAAAAAAAAAAA6AcAAAAAAADpBwAAAAAAAAAAAADpBwAAAAAAAOoHAAAAAAAAAAAAAOoHAAAAAAAA6wcAAAAAAAAAAAAA6wcAAAAAAADsBwAAAAAAAAAAAADsBwAAAAAAAO0HAAAAAAAAAAAAAO0HAAAAAAAA7gcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wcAAAAAAADnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO4HAAAAAAAA7wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gcAAAAAAADuBwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"cut",
					null,
					"AQAAAOcHAAAAAAAA5wcAAAAAAAAIAAAAVklTSUJMRSA",
					"AQAAAAAAAAABAAAA7wcAAAAAAADnBwAAAAAAAAAAAAAAAAAA"
				],
				[
					13,
					1,
					"paste",
					null,
					"AQAAAOcHAAAAAAAA7wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wcAAAAAAADnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"paste",
					null,
					"AgAAAHMBAAAAAAAAewEAAAAAAAAAAAAAewEAAAAAAAB7AQAAAAAAAAEAAABM",
					"AQAAAAAAAAABAAAAdAEAAAAAAABzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "L"
					},
					"AQAAAHsBAAAAAAAAfAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewEAAAAAAAB7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"paste",
					null,
					"AQAAANIOAAAAAAAA2g4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0g4AAAAAAADSDgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"paste",
					null,
					"AQAAAL0nAAAAAAAAxScAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvScAAAAAAAC9JwAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"paste",
					null,
					"AQAAAL4EAAAAAAAAxgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgQAAAAAAAC+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAwAcAAAAAAADABwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-location.h",
			"settings":
			{
				"buffer_size": 1042,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"paste",
					null,
					"AgAAAOABAAAAAAAA7AEAAAAAAAAAAAAA7AEAAAAAAADsAQAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAA4AEAAAAAAADnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"paste",
					null,
					"AgAAAKQCAAAAAAAAsAIAAAAAAAAAAAAAsAIAAAAAAACwAgAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAApAIAAAAAAACrAgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"paste",
					null,
					"AgAAAAMDAAAAAAAADwMAAAAAAAAAAAAADwMAAAAAAAAPAwAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAAAwMAAAAAAAAKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAAIsCAAAAAAAAlwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwIAAAAAAACLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"paste",
					null,
					"AgAAAIgCAAAAAAAAlAIAAAAAAAAAAAAAlAIAAAAAAACUAgAAAAAAABMAAABKU1ZKU1ZhbHVlQ29uc3RhbHVl",
					"AQAAAAAAAAABAAAAiAIAAAAAAACbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"paste",
					null,
					"AgAAAOoCAAAAAAAA9gIAAAAAAAAAAAAA9gIAAAAAAAD2AgAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAA6gIAAAAAAADxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"paste",
					null,
					"AgAAAMQBAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADQAQAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAAxAEAAAAAAADLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"paste",
					null,
					"AQAAAP0AAAAAAAAACQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QAAAAAAAAD9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"paste",
					null,
					"AgAAAPgAAAAAAAAABAEAAAAAAAAAAAAABAEAAAAAAAAEAQAAAAAAABMAAABKU1ZhbEpTVmFsdWVDb25zdHVl",
					"AQAAAAAAAAABAAAA+AAAAAAAAAALAQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"paste",
					null,
					"AgAAADcBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABDAQAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAANwEAAAAAAAA+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"paste",
					null,
					"AgAAACQCAAAAAAAAMAIAAAAAAAAAAAAAMAIAAAAAAAAwAgAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAAJAIAAAAAAAArAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-lexer.h",
			"settings":
			{
				"buffer_size": 1367,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"paste",
					null,
					"AgAAAPYBAAAAAAAAAgIAAAAAAAAAAAAAAgIAAAAAAAACAgAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAA9gEAAAAAAAD9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"paste",
					null,
					"AgAAABsCAAAAAAAAJwIAAAAAAAAAAAAAJwIAAAAAAAAnAgAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAAGwIAAAAAAAAiAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-blob.h",
			"settings":
			{
				"buffer_size": 1105,
				"line_ending": "Unix"
			}
		},
		{
			"file": "vector.c",
			"settings":
			{
				"buffer_size": 4311,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					23,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAI2luY2x1ZGUgInZlY3Rvci5oIgo",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					2,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "buffer-utils"
					},
					"DQAAAB4AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfAAAAAAAAAAYAAAB2ZWN0b3IfAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgAAAAAAAAAkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADXEAAAI2luY2x1ZGUgInZlY3Rvci5oIgojaW5jbHVkZSAiYnVmZmVyLXV0aWxzLmgiCiNpbmNsdWRlICJ1dGlscy5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgojaW5jbHVkZSA8c3RkbGliLmg+CiNpbmNsdWRlIDxzdHJpbmcuaD4KCiNkZWZpbmUgSEFWRV9VSU5UMTI4CgojaWYoZGVmaW5lZChfX0dOVUNfXykgJiYgKF9fR05VQ19fID49IDUpKSB8fCBkZWZpbmVkKEhBVkVfX0JVSUxUSU5fTVVMX09WRVJGTE9XKQoKLyojZWxpZiBkZWZpbmVkKEhBVkVfVUlOVDEyOCkKI3dhcm5pbmcgTm8gdW11bHQ2NCBpbXBsZW1lbnRhdGlvbiovCiNlbHNlCmludAp1bXVsdDY0KHVpbnQ2NF90IGEsIHVpbnQ2NF90IGIsIHVpbnQ2NF90KiBjKSB7CiAgdWludDMyX3QgYWhpID0gYSA+PiAzMjsKICB1aW50MzJfdCBhbG8gPSAoYSAmIDB4ZmZmZmZmZmYpOwogIHVpbnQzMl90IGJoaSA9IGIgPj4gMzI7CiAgdWludDMyX3QgYmxvID0gKGIgJiAweGZmZmZmZmZmKTsKCiAgaWYoYWhpICYmIGJoaSkKICAgIHJldHVybiAwOwoKICBhID0gKHVpbnQ2NF90KShhaGkpKmJsbyArICh1aW50NjRfdCkoYWxvKSpiaGk7CiAgaWYoYSA+IDB4ZmZmZmZmZmYpCiAgICByZXR1cm4gMDsKICB7CiAgICB1aW50NjRfdCB4ID0gKHVpbnQ2NF90KShhbG8pKmJsbzsKICAgIGlmKHggKyAoYSA8PCAzMikgPCB4KQogICAgICByZXR1cm4gMDsKICAgICpjID0geCArIChhIDw8IDMyKTsKICB9CiAgcmV0dXJuIDE7Cn0KI2VuZGlmCgp2b2lkCnZlY3Rvcl9mcmVlKFZlY3RvciogdmVjKSB7CiAgaWYodmVjLT5kYXRhKQogICAgdmVjLT5yZWFsbG9jX2Z1bmModmVjLT5vcGFxdWUsIHZlYy0+ZGF0YSwgMCk7CiAgdmVjLT5kYXRhID0gMDsKICB2ZWMtPmNhcGFjaXR5ID0gdmVjLT5zaXplID0gMDsKfQoKaW50MzJfdAp2ZWN0b3JfaW5kZXhvZihjb25zdCBWZWN0b3IqIHZlYywgc2l6ZV90IGVsc3osIHZvaWQqIHB0cikgewogIGlmKHB0ciA8IHZlY3Rvcl9iZWdpbih2ZWMpIHx8IHB0ciA+IHZlY3Rvcl9iYWNrKHZlYywgZWxzeikpCiAgICByZXR1cm4gLTE7CgogIHJldHVybiAoKHNpemVfdCl2ZWN0b3JfYmVnaW4odmVjKSAtIChzaXplX3QpcHRyKSAvIGVsc3o7Cn0KCmludDMyX3QKdmVjdG9yX2ZpbmQoY29uc3QgVmVjdG9yKiB2ZWMsIHNpemVfdCBlbHN6LCB2b2lkKiBwdHIpIHsKICB2b2lkKiB4OwogIGludDMyX3QgaSA9IDA7CiAgaWYodmVjdG9yX2VtcHR5KHZlYykpCiAgICByZXR1cm4gLTE7CgogIHZlY3Rvcl9mb3JlYWNoKHZlYywgZWxzeiwgeCkgewogICAgaWYoIW1lbWNtcCh4LCBwdHIsIGVsc3opKQogICAgICByZXR1cm4gaTsKICAgIGkrKzsKICB9CiAgcmV0dXJuIC0xOwp9CgppbnQzMl90CnZlY3Rvcl9maW5kcyhjb25zdCBWZWN0b3IqIHZlYywgY29uc3QgY2hhciogc3RyKSB7CiAgY2hhcioqIHg7CiAgaW50MzJfdCBpID0gMDsKICBpZih2ZWN0b3JfZW1wdHkodmVjKSkKICAgIHJldHVybiAtMTsKCiAgdmVjdG9yX2ZvcmVhY2hfdCh2ZWMsIHgpIHsKICAgIGlmKCFzdHJjbXAoKngsIHN0cikpCiAgICAgIHJldHVybiBpOwogICAgaSsrOwogIH0KICByZXR1cm4gLTE7Cn0KCmludAp2ZWN0b3JfY291bnRzKGNvbnN0IFZlY3RvciogdmVjLCBjb25zdCBjaGFyKiBzdHIpIHsKICBjaGFyKiogeDsKICBpbnQgY291bnQgPSAwOwoKICBpZih2ZWN0b3JfZW1wdHkodmVjKSkKICAgIHJldHVybiAwOwoKICB2ZWN0b3JfZm9yZWFjaF90KHZlYywgeCkgewogICAgaWYoIXN0cmNtcCgqeCwgc3RyKSkKICAgICAgKytjb3VudDsKICB9CiAgcmV0dXJuIGNvdW50Owp9Cgp2b2lkKgp2ZWN0b3JfcHV0KFZlY3RvciogdmVjLCBjb25zdCB2b2lkKiBieXRlcywgc2l6ZV90IGxlbikgewogIHNpemVfdCBwb3M7CiAgaWYoIWxlbikKICAgIHJldHVybiAwOwogIHBvcyA9IHZlYy0+c2l6ZTsKICBpZighdmVjdG9yX2FsbG9jYXRlKHZlYywgMSwgdmVjLT5zaXplICsgbGVuIC0gMSkpCiAgICByZXR1cm4gMDsKICBtZW1jcHkodmVjLT5kYXRhICsgcG9zLCBieXRlcywgbGVuKTsKICByZXR1cm4gdmVjLT5kYXRhICsgcG9zOwp9Cgp2b2lkIF9fYXR0cmlidXRlX18oKGZvcm1hdChwcmludGYsIDIsIDMpKSkgdmVjdG9yX3ByaW50ZihWZWN0b3IqIHZlYywgY29uc3QgY2hhciogZm10LCAuLi4pIHsKICB2YV9saXN0IGFwOwogIGNoYXIgYnVmWzEyOF07CiAgc2l6ZV90IGxlbjsKICB2YV9zdGFydChhcCwgZm10KTsKICBsZW4gPSB2c25wcmludGYoYnVmLCBzaXplb2YoYnVmKSwgZm10LCBhcCk7CiAgdmFfZW5kKGFwKTsKICBpZihsZW4gPCBzaXplb2YoYnVmKSkgewogICAgdmVjdG9yX3B1dCh2ZWMsIGJ1ZiwgbGVuKTsKICB9IGVsc2UgewogICAgc2l6ZV90IHBvcyA9IHZlYy0+c2l6ZTsKICAgIGlmKCF2ZWN0b3JfYWxsb2NhdGUodmVjLCAxLCB2ZWMtPnNpemUgKyBsZW4pKQogICAgICByZXR1cm47CiAgICB2YV9zdGFydChhcCwgZm10KTsKICAgIGxlbiA9IHZzbnByaW50ZigoY2hhciopKHZlYy0+ZGF0YSArIHBvcyksIGxlbiwgZm10LCBhcCk7CiAgICB2YV9lbmQoYXApOwogICAgdmVjLT5zaXplICs9IGxlbjsKICB9Cn0KCnZvaWQKdmVjdG9yX2RpZmYodm9pZCogYSwgc2l6ZV90IG0sIHZvaWQqIGIsIHNpemVfdCBuLCBzaXplX3QgZWxzeiwgVmVjdG9yKiBvdXQpIHsKICBjaGFyKiBwdHIgPSBhOwogIHNpemVfdCBpOwogIGZvcihpID0gMDsgaSA8IG07IGkrKykgewogICAgaWYoYXJyYXlfY29udGFpbnMoYiwgbiwgZWxzeiwgcHRyKSkKICAgICAgdmVjdG9yX3B1dChvdXQsIHB0ciwgZWxzeik7CiAgICBwdHIgKz0gZWxzejsKICB9Cn0KCnZvaWQKdmVjdG9yX3N5bW1ldHJpY2RpZmYodm9pZCogYSwgc2l6ZV90IG0sIHZvaWQqIGIsIHNpemVfdCBuLCBzaXplX3QgZWxzeiwgVmVjdG9yKiBvdXRfYSwgVmVjdG9yKiBvdXRfYikgewogIHZlY3Rvcl9kaWZmKGEsIG0sIGIsIG4sIGVsc3osIG91dF9hKTsKICB2ZWN0b3JfZGlmZihiLCBuLCBhLCBtLCBlbHN6LCBvdXRfYik7Cn0KCnZvaWQKdmVjdG9yX2ludGVyc2VjdGlvbih2b2lkKiBhLCBzaXplX3QgbSwgdm9pZCogYiwgc2l6ZV90IG4sIHNpemVfdCBlbHN6LCBWZWN0b3IqIG91dCkgewogIHNpemVfdCBpLCBqID0gMCwgayA9IDA7CiAgZm9yKGkgPSAwOyBpIDwgbSArIG47IGkrKykgewogICAgdm9pZCogYXB0ciA9IChjaGFyKilhICsgaiAqIGVsc3o7CiAgICB2b2lkKiBicHRyID0gKGNoYXIqKWIgKyBrICogZWxzejsKICAgIGludCByID0gbWVtY21wKGFwdHIsIGJwdHIsIGVsc3opOwogICAgaWYociA8IDAgJiYgaiA8IG0pIHsKICAgICAgaisrOwogICAgfSBlbHNlIGlmKHIgPiAwICYmIGsgPCBuKSB7CiAgICAgIGsrKzsKICAgIH0gZWxzZSBpZihyID09IDAgJiYgaiA8IG0gJiYgayA8IG4pIHsKICAgICAgdmVjdG9yX3B1dChvdXQsIGFwdHIsIGVsc3opOwogICAgICBqKys7CiAgICAgIGsrKzsKICAgIH0KICB9Cn0KLyoKc3NpemVfdAp2ZWN0b3JfZmluZChWZWN0b3IqIHZlYywgc2l6ZV90IGVsc3osIGNvbnN0IHZvaWQqIHB0cikgewogIHNpemVfdCBpLCBqOwogIGZvcihpID0gMCwgaiA9IDA7IGkgPCB2ZWMtPnNpemU7IGkgKz0gZWxzeikgewogICAgaWYoIW1lbWNtcCgmdmVjLT5kYXRhW2ldLCBwdHIsIGVsc3opKQogICAgICByZXR1cm4gajsKCiAgICBqKys7CiAgfQogIHJldHVybiAtMTsKfQoqLwppbnQKdmVjdG9yX2NvcHkoVmVjdG9yKiBkc3QsIGNvbnN0IFZlY3Rvciogc3JjKSB7CiAgZHN0LT5yZWFsbG9jX2Z1bmMgPSBzcmMtPnJlYWxsb2NfZnVuYzsKICBkc3QtPm9wYXF1ZSA9IHNyYy0+b3BhcXVlOwogIGRzdC0+ZGF0YSA9IDA7CiAgZHN0LT5jYXBhY2l0eSA9IDA7CiAgaWYoIWRidWZfcmVhbGxvYygmZHN0LT5kYnVmLCBzcmMtPnNpemUpKSB7CiAgICBtZW1jcHkoZHN0LT5kYXRhLCBzcmMtPmRhdGEsIHNyYy0+c2l6ZSk7CiAgICByZXR1cm4gMTsKICB9CiAgcmV0dXJuIDA7Cn0KCnZvaWQKdmVjdG9yX2Z3cml0ZShjb25zdCBWZWN0b3IqIHZlYywgc2l6ZV90IHN0YXJ0LCBGSUxFKiBvdXQpIHsKICBzaXplX3QgaSwgbGVuID0gdmVjdG9yX3NpemUodmVjLCBzaXplb2YoY2hhciopKTsKICBmb3IoaSA9IHN0YXJ0OyBpIDwgbGVuOyBpKyspIHsKICAgIGNvbnN0IGNoYXIqIHN0ciA9ICooY2hhcioqKXZlY3Rvcl9hdCh2ZWMsIHNpemVvZihjaGFyKiksIGkpOwogICAgZnB1dHMoaSA+IHN0YXJ0ID8gIicsXG4gICciIDogIltcbiAgJyIsIG91dCk7CiAgICBmcHV0cyhzdHIsIG91dCk7CiAgICBpZihpICsgMSA9PSBsZW4pCiAgICAgIGZwdXRzKCInXG5dIiwgb3V0KTsKICB9CiAgZmZsdXNoKG91dCk7Cn0KAAAAAAAAAADXEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQQAAAAAAABlBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "utils.h",
			"settings":
			{
				"buffer_size": 28637,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					35,
					1,
					"cut",
					null,
					"AQAAAMsUAAAAAAAAyxQAAAAAAAChAAAACmludDY0X3QgYXJyYXlfc2VhcmNoKHZvaWQqIGEsIHNpemVfdCBtLCBzaXplX3QgZWxzeiwgdm9pZCogbmVlZGxlKTsKI2RlZmluZSBhcnJheV9jb250YWlucyhhLCBtLCBlbHN6LCBuZWVkbGUpIChhcnJheV9zZWFyY2goKGEpLCAobSksIChlbHN6KSwgKG5lZWRsZSkpICE9IC0xKQo",
					"AQAAAAAAAAABAAAAyxQAAAAAAABsFQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAHwsAAAAAAAAfCwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "buffer-utils.h",
			"settings":
			{
				"buffer_size": 7924,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AQAAABABAAAAAAAAsQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAEAAAAAAAAQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAnwcAAAAAAACfBwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "char-utils.c",
			"settings":
			{
				"buffer_size": 2813,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9CgAAI2luY2x1ZGUgImNoYXItdXRpbHMuaCIKCnNpemVfdAp0b2tlbl9sZW5ndGgoY29uc3QgY2hhciogc3RyLCBzaXplX3QgbGVuLCBjaGFyIGRlbGltKSB7CiAgY29uc3QgY2hhciAqcywgKmU7CiAgc2l6ZV90IHBvczsKICBmb3IocyA9IHN0ciwgZSA9IHMgKyBsZW47IHMgPCBlOyBzICs9IHBvcyArIDEpIHsKICAgIHBvcyA9IGJ5dGVfY2hyKHMsIGUgLSBzLCBkZWxpbSk7CiAgICBpZihzICsgcG9zID09IGUpCiAgICAgIGJyZWFrOwoKICAgIGlmKHBvcyA9PSAwIHx8IHNbcG9zIC0gMV0gIT0gJ1xcJykgewogICAgICBzICs9IHBvczsKICAgICAgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiBzIC0gc3RyOwp9CgpzaXplX3QKZm10X3Vsb25nKGNoYXIqIGRlc3QsIHVuc2lnbmVkIGxvbmcgaSkgewogIHVuc2lnbmVkIGxvbmcgbGVuLCB0bXAsIGxlbjI7CiAgZm9yKGxlbiA9IDEsIHRtcCA9IGk7IHRtcCA+IDk7ICsrbGVuKSB0bXAgLz0gMTA7CiAgaWYoZGVzdCkKICAgIGZvcih0bXAgPSBpLCBkZXN0ICs9IGxlbiwgbGVuMiA9IGxlbiArIDE7IC0tbGVuMjsgdG1wIC89IDEwKSAqLS1kZXN0ID0gKGNoYXIpKCh0bXAgJSAxMCkgKyAnMCcpOwogIHJldHVybiBsZW47Cn0KCnNpemVfdApzY2FuX3VzaG9ydChjb25zdCBjaGFyKiBzcmMsIHVuc2lnbmVkIHNob3J0KiBkZXN0KSB7CiAgY29uc3QgY2hhciogY3VyOwogIHVuc2lnbmVkIHNob3J0IGw7CiAgZm9yKGN1ciA9IHNyYywgbCA9IDA7ICpjdXIgPj0gJzAnICYmICpjdXIgPD0gJzknOyArK2N1cikgewogICAgdW5zaWduZWQgbG9uZyB0bXAgPSBsICogMTB1bCArICpjdXIgLSAnMCc7CiAgICBpZigodW5zaWduZWQgc2hvcnQpdG1wICE9IHRtcCkKICAgICAgYnJlYWs7CiAgICBsID0gdG1wOwogIH0KICBpZihjdXIgPiBzcmMpCiAgICAqZGVzdCA9IGw7CiAgcmV0dXJuIChzaXplX3QpKGN1ciAtIHNyYyk7Cn0KCnNpemVfdApmbXRfbG9uZ2xvbmcoY2hhciogZGVzdCwgaW50NjRfdCBpKSB7CiAgaWYoaSA8IDApIHsKICAgIGlmKGRlc3QpCiAgICAgICpkZXN0KysgPSAnLSc7CiAgICByZXR1cm4gZm10X3Vsb25nbG9uZyhkZXN0LCAodWludDY0X3QpLWkpICsgMTsKICB9IGVsc2UKICAgIHJldHVybiBmbXRfdWxvbmdsb25nKGRlc3QsICh1aW50NjRfdClpKTsKfQoKc2l6ZV90CmZtdF91bG9uZ2xvbmcoY2hhciogZGVzdCwgdWludDY0X3QgaSkgewogIHNpemVfdCBsZW47CiAgdWludDY0X3QgdG1wLCBsZW4yOwogIGZvcihsZW4gPSAxLCB0bXAgPSBpOyB0bXAgPiA5OyArK2xlbikgdG1wIC89IDEwOwogIGlmKGRlc3QpCiAgICBmb3IodG1wID0gaSwgZGVzdCArPSBsZW4sIGxlbjIgPSBsZW4gKyAxOyAtLWxlbjI7IHRtcCAvPSAxMCkgKi0tZGVzdCA9ICh0bXAgJSAxMCkgKyAnMCc7CiAgcmV0dXJuIGxlbjsKfQoKI2RlZmluZSB0b2hleChjKSAoY2hhcikoKGMpID49IDEwID8gKGMpLTEwICsgJ2EnIDogKGMpICsgJzAnKQoKc2l6ZV90CmZtdF94bG9uZ2xvbmcoY2hhciogZGVzdCwgdWludDY0X3QgaSkgewogIHVpbnQ2NF90IGxlbiwgdG1wOwogIGZvcihsZW4gPSAxLCB0bXAgPSBpOyB0bXAgPiAxNTsgKytsZW4pIHRtcCA+Pj0gNDsKICBpZihkZXN0KQogICAgZm9yKHRtcCA9IGksIGRlc3QgKz0gbGVuOzspIHsKICAgICAgKi0tZGVzdCA9IHRvaGV4KHRtcCAmIDE1KTsKICAgICAgaWYoISh0bXAgPj49IDQpKSB7CiAgICAgICAgYnJlYWs7CiAgICAgIH07CiAgICB9CiAgcmV0dXJuIGxlbjsKfQoKI2lmbmRlZiBNQVhMT05HCiNkZWZpbmUgTUFYTE9ORyAoKCh1bnNpZ25lZCBsb25nKS0xKSA+PiAxKQojZW5kaWYKCnNpemVfdApzY2FuX2xvbmdsb25nKGNvbnN0IGNoYXIqIHNyYywgaW50NjRfdCogZGVzdCkgewogIHNpemVfdCBpLCBvOwogIHVpbnQ2NF90IGw7CiAgY2hhciBjID0gc3JjWzBdOwogIHVuc2lnbmVkIGludCBuZWcgPSBjID09ICctJzsKICBvID0gYyA9PSAnLScgfHwgYyA9PSAnKyc7CiAgaWYoKGkgPSBzY2FuX3Vsb25nbG9uZyhzcmMgKyBvLCAmbCkpKSB7CiAgICBpZihpID4gMCAmJiBsID4gTUFYTE9ORyArIG5lZykgewogICAgICBsIC89IDEwOwogICAgICAtLWk7CiAgICB9CiAgICBpZihpICsgbykKICAgICAgKmRlc3QgPSAoaW50NjRfdCkoYyA9PSAnLScgPyAtbCA6IGwpOwogICAgcmV0dXJuIGkgKyBvOwogIH0KICByZXR1cm4gMDsKfQoKc2l6ZV90CnNjYW5fdWxvbmdsb25nKGNvbnN0IGNoYXIqIHNyYywgdWludDY0X3QqIGRlc3QpIHsKICBjb25zdCBjaGFyKiB0bXAgPSBzcmM7CiAgdWludDY0X3QgbCA9IDA7CiAgdW5zaWduZWQgY2hhciBjOwogIHdoaWxlKChjID0gKHVuc2lnbmVkIGNoYXIpKCp0bXAgLSAnMCcpKSA8IDEwKSB7CiAgICB1aW50NjRfdCBuOwogICAgbiA9IGwgPDwgMzsKICAgIGlmKChuID4+IDMpICE9IGwpCiAgICAgIGJyZWFrOwogICAgaWYobiArIChsIDw8IDEpIDwgbikKICAgICAgYnJlYWs7CiAgICBuICs9IGwgPDwgMTsKICAgIGlmKG4gKyBjIDwgbikKICAgICAgYnJlYWs7CiAgICBsID0gbiArIGM7CiAgICArK3RtcDsKICB9CiAgaWYodG1wIC0gc3JjKQogICAgKmRlc3QgPSBsOwogIHJldHVybiAoc2l6ZV90KSh0bXAgLSBzcmMpOwp9CgpzaXplX3QKc2Nhbl94bG9uZ2xvbmcoY29uc3QgY2hhciogc3JjLCB1aW50NjRfdCogZGVzdCkgewogIGNvbnN0IGNoYXIqIHRtcCA9IHNyYzsKICBpbnQ2NF90IGwgPSAwOwogIHVuc2lnbmVkIGNoYXIgYzsKICB3aGlsZSgoYyA9IHNjYW5fZnJvbWhleCgqdG1wKSkgPCAxNikgewogICAgbCA9IChsIDw8IDQpICsgYzsKICAgICsrdG1wOwogIH0KICAqZGVzdCA9IGw7CiAgcmV0dXJuIHRtcCAtIHNyYzsKfQoAAAAAAAAAAP0KAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "buffer-utils.c",
			"settings":
			{
				"buffer_size": 11684,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					33,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA+AYAAAAAAAD4BgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Searching 325 files for \"array_contains\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h:\n   16  \n   17  int64_t array_search(void* a, size_t m, size_t elsz, void* needle);\n   18: #define array_contains(a, m, elsz, needle) (array_search((a), (m), (elsz), (needle)) != -1)\n   19  \n   20  size_t ansi_length(const char*, size_t);\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c:\n  135    size_t i;\n  136    for(i = 0; i < m; i++) {\n  137:     if(array_contains(b, n, elsz, ptr))\n  138        vector_put(out, ptr, elsz);\n  139      ptr += elsz;\n\n2 matches across 2 files\n\n\nSearching 325 files for \"js_is_location\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c:\n   82  \n   83  BOOL\n   84: js_is_location(JSContext* ctx, JSValueConst obj) {\n   85    BOOL ret;\n   86    JSAtom line, column;\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c:\n  141      } else if(JS_IsString(argv[i]) && !err->line) {\n  142        err->line = js_tostring(ctx, argv[i]);\n  143:     } else if(js_is_location(ctx, argv[i])) {\n  144        err->loc = js_location_from(ctx, argv[i]);\n  145      }\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h:\n   12  JSValue js_location_new(JSContext*, const Location* location);\n   13  JSValue js_location_tostring(JSContext*, JSValue this_val, int argc, JSValue* argv);\n   14: BOOL js_is_location(JSContext*, JSValue obj);\n   15  Location js_location_from(JSContext*, JSValue this_val);\n   16  JSValue js_location_toprimitive(JSContext*, JSValue this_val, int argc, JSValue* argv);\n\n3 matches across 3 files\n\n\nSearching 325 files for \"js_is_location\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c:\n   82  \n   83  BOOL\n   84: js_is_location(JSContext* ctx, JSValueConst obj) {\n   85    BOOL ret;\n   86    JSAtom line, column;\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c:\n  141      } else if(JS_IsString(argv[i]) && !err->line) {\n  142        err->line = js_tostring(ctx, argv[i]);\n  143:     } else if(js_is_location(ctx, argv[i])) {\n  144        err->loc = js_location_from(ctx, argv[i]);\n  145      }\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h:\n   12  JSValue js_location_new(JSContext*, const Location* location);\n   13  JSValue js_location_tostring(JSContext*, JSValue this_val, int argc, JSValue* argv);\n   14: BOOL js_is_location(JSContext*, JSValue obj);\n   15  Location js_location_from(JSContext*, JSValue this_val);\n   16  JSValue js_location_toprimitive(JSContext*, JSValue this_val, int argc, JSValue* argv);\n\n3 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 2688,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "cmake/QuickJSModule.cmake",
			"settings":
			{
				"buffer_size": 4079,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "socketpair_win32.c",
			"settings":
			{
				"buffer_size": 2730,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"",
					null,
					"AQAAADEFAAAAAAAAOwUAAAAAAAAQAAAAc29ja2V0cGFpcl93aW4zMg",
					"AQAAAAAAAAABAAAAMQUAAAAAAABBBQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					7,
					"left_delete",
					null,
					"BwAAAFEFAAAAAAAAUQUAAAAAAAAPAAAAbWFrZV9vdmVybGFwcGVkUAUAAAAAAABQBQAAAAAAAAEAAAAgTwUAAAAAAABPBQAAAAAAAAEAAAB0TgUAAAAAAABOBQAAAAAAAAEAAABuTQUAAAAAAABNBQAAAAAAAAEAAABpTAUAAAAAAABMBQAAAAAAAAEAAAAgSwUAAAAAAABLBQAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAUQUAAAAAAABgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKwFAAAAAAAArQUAAAAAAAAAAAAArQUAAAAAAACtBQAAAAAAAD8AAAAgICAgRFdPUkQgZmxhZ3MgPSAobWFrZV9vdmVybGFwcGVkID8gV1NBX0ZMQUdfT1ZFUkxBUFBFRCA6IDApOwo",
					"AQAAAAAAAAABAAAArAUAAAAAAADrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAHQJAAAAAAAAdQkAAAAAAAAAAAAAdQkAAAAAAAB1CQAAAAAAAAUAAABmbGFncw",
					"AQAAAAAAAAABAAAAdAkAAAAAAAB5CQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABLCwAALyogc29ja2V0cGFpci5jCiAqIENvcHlyaWdodCAyMDA3IGJ5IE5hdGhhbiBDLiBNeWVycyA8bmNtQGNhbnRyaXAub3JnPjsgYWxsIHJpZ2h0cyByZXNlcnZlZC4KICogVGhpcyBjb2RlIGlzIEZyZWUgU29mdHdhcmUuICBJdCBtYXkgYmUgY29waWVkIGZyZWVseSwgaW4gb3JpZ2luYWwgb3IgCiAqIG1vZGlmaWVkIGZvcm0sIHN1YmplY3Qgb25seSB0byB0aGUgcmVzdHJpY3Rpb25zIHRoYXQgKDEpIHRoZSBhdXRob3IgaXMKICogcmVsaWV2ZWQgZnJvbSBhbGwgcmVzcG9uc2liaWxpdGllcyBmb3IgYW55IHVzZSBmb3IgYW55IHB1cnBvc2UsIGFuZCAoMikKICogdGhpcyBjb3B5cmlnaHQgbm90aWNlIG11c3QgYmUgcmV0YWluZWQsIHVuY2hhbmdlZCwgaW4gaXRzIGVudGlyZXR5LiAgSWYKICogZm9yIGFueSByZWFzb24gdGhlIGF1dGhvciBtaWdodCBiZSBoZWxkIHJlc3BvbnNpYmxlIGZvciBhbnkgY29uc2VxdWVuY2VzCiAqIG9mIGNvcHlpbmcgb3IgdXNlLCBsaWNlbnNlIGlzIHdpdGhoZWxkLiAgCiAqLwoKLyogQ2hhbmdlczoKICogMjAwNy0wNC0yNToKICogICBwcmVzZXJ2ZSB2YWx1ZSBvZiBXU0FHZXRMYXN0RXJyb3IoKSBvbiBhbGwgZXJyb3IgcmV0dXJucy4KICogMjAwNy0wNC0yMjogIChUaGFua3MgdG8gTWF0dGhldyBHcmVnYW4gPGtpbmV0aWtAZmxpbS5vcmc+KQogKiAgIHMvRUlOVkFML1dTQUVJTlZBTC8gZml4IHRyaXZpYWwgY29tcGlsZSBmYWlsdXJlCiAqICAgcy9zb2NrZXQvV1NBU29ja2V0LyBlbmFibGUgY3JlYXRpb24gb2Ygc29ja2V0cyBzdWl0YWJsZSBhcyBzdGRpbi9zdGRvdXQKICogICAgIG9mIGEgY2hpbGQgcHJvY2Vzcy4KICogICBhZGQgYXJndW1lbnQgbWFrZV9vdmVybGFwcGVkCiAqLwoKI2luY2x1ZGUgPHN0cmluZy5oPgoKI2luY2x1ZGUgPGlvLmg+CiNpbmNsdWRlIDx3aW5zb2NrMi5oPgojaW5jbHVkZSA8d2luZG93cy5oPgoKLyogc29ja2V0cGFpcjoKICogICBJZiBtYWtlX292ZXJsYXBwZWQgaXMgbm9uemVybywgYm90aCBzb2NrZXRzIGNyZWF0ZWQgd2lsbCBiZSB1c2FibGUgZm9yCiAqICAgIm92ZXJsYXBwZWQiIG9wZXJhdGlvbnMgdmlhIFdTQVNlbmQgZXRjLiAgSWYgbWFrZV9vdmVybGFwcGVkIGlzIHplcm8sCiAqICAgc29ja3NbMF0gKG9ubHkpIHdpbGwgYmUgdXNhYmxlIHdpdGggcmVndWxhciBSZWFkRmlsZSBldGMuLCBhbmQgdGh1cyAKICogICBzdWl0YWJsZSBmb3IgdXNlIGFzIHN0ZGluIG9yIHN0ZG91dCBvZiBhIGNoaWxkIHByb2Nlc3MuICBOb3RlIHRoYXQgdGhlCiAqICAgc29ja2V0cyBtdXN0IGJlIGNsb3NlZCB3aXRoIGNsb3Nlc29ja2V0KCkgcmVnYXJkbGVzcy4KICovCgppbnQgc29ja2V0cGFpcihTT0NLRVQgc29ja3NbMl0pCnsKICAgIHN0cnVjdCBzb2NrYWRkcl9pbiBhZGRyOwogICAgU09DS0VUIGxpc3RlbmVyOwogICAgaW50IGU7CiAgICBpbnQgYWRkcmxlbiA9IHNpemVvZihhZGRyKTsKIAogICAgaWYgKHNvY2tzID09IDApIHsKICAgICAgICBXU0FTZXRMYXN0RXJyb3IoV1NBRUlOVkFMKTsKICAgICAgICByZXR1cm4gU09DS0VUX0VSUk9SOwogICAgfQoKICAgIHNvY2tzWzBdID0gc29ja3NbMV0gPSBJTlZBTElEX1NPQ0tFVDsKICAgIGlmICgobGlzdGVuZXIgPSBzb2NrZXQoQUZfSU5FVCwgU09DS19TVFJFQU0sIDApKSA9PSBJTlZBTElEX1NPQ0tFVCkKICAgICAgICByZXR1cm4gU09DS0VUX0VSUk9SOwoKICAgIG1lbXNldCgmYWRkciwgMCwgc2l6ZW9mKGFkZHIpKTsKICAgIGFkZHIuc2luX2ZhbWlseSA9IEFGX0lORVQ7CiAgICBhZGRyLnNpbl9hZGRyLnNfYWRkciA9IGh0b25sKDB4N2YwMDAwMDEpOwogICAgYWRkci5zaW5fcG9ydCA9IDA7CgogICAgZSA9IGJpbmQobGlzdGVuZXIsIChjb25zdCBzdHJ1Y3Qgc29ja2FkZHIqKSAmYWRkciwgc2l6ZW9mKGFkZHIpKTsKICAgIGlmIChlID09IFNPQ0tFVF9FUlJPUikgewogICAgICAgIGUgPSBXU0FHZXRMYXN0RXJyb3IoKTsKICAgICAgICBjbG9zZXNvY2tldChsaXN0ZW5lcik7CiAgICAgICAgV1NBU2V0TGFzdEVycm9yKGUpOwogICAgICAgIHJldHVybiBTT0NLRVRfRVJST1I7CiAgICB9CiAgICBlID0gZ2V0c29ja25hbWUobGlzdGVuZXIsIChzdHJ1Y3Qgc29ja2FkZHIqKSAmYWRkciwgJmFkZHJsZW4pOwogICAgaWYgKGUgPT0gU09DS0VUX0VSUk9SKSB7CiAgICAgICAgZSA9IFdTQUdldExhc3RFcnJvcigpOwogICAgICAgIGNsb3Nlc29ja2V0KGxpc3RlbmVyKTsKICAgICAgICBXU0FTZXRMYXN0RXJyb3IoZSk7CiAgICAgICAgcmV0dXJuIFNPQ0tFVF9FUlJPUjsKICAgIH0KCiAgICBkbyB7CiAgICAgICAgaWYgKGxpc3RlbihsaXN0ZW5lciwgMSkgPT0gU09DS0VUX0VSUk9SKQogICAgICAgICAgICBicmVhazsKICAgICAgICBpZiAoKHNvY2tzWzBdID0gV1NBU29ja2V0KEFGX0lORVQsIFNPQ0tfU1RSRUFNLCAwLCBOVUxMLCAwLCAwKSkgPT0gSU5WQUxJRF9TT0NLRVQpCiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGlmIChjb25uZWN0KHNvY2tzWzBdLCAoY29uc3Qgc3RydWN0IHNvY2thZGRyKikgJmFkZHIsIHNpemVvZihhZGRyKSkgPT0gU09DS0VUX0VSUk9SKQogICAgICAgICAgICBicmVhazsKICAgICAgICBpZiAoKHNvY2tzWzFdID0gYWNjZXB0KGxpc3RlbmVyLCBOVUxMLCBOVUxMKSkgPT0gSU5WQUxJRF9TT0NLRVQpCiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNsb3Nlc29ja2V0KGxpc3RlbmVyKTsKICAgICAgICByZXR1cm4gMDsKICAgIH0gd2hpbGUgKDApOwogICAgZSA9IFdTQUdldExhc3RFcnJvcigpOwogICAgY2xvc2Vzb2NrZXQobGlzdGVuZXIpOwogICAgY2xvc2Vzb2NrZXQoc29ja3NbMF0pOwogICAgY2xvc2Vzb2NrZXQoc29ja3NbMV0pOwogICAgV1NBU2V0TGFzdEVycm9yKGUpOwogICAgcmV0dXJuIFNPQ0tFVF9FUlJPUjsKfQoAAAAAAAAAAKoKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQIAAAAAAACTAgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACqCgAALyogc29ja2V0cGFpci5jCiAqIENvcHlyaWdodCAyMDA3IGJ5IE5hdGhhbiBDLiBNeWVycyA8bmNtQGNhbnRyaXAub3JnPjsgYWxsIHJpZ2h0cyByZXNlcnZlZC4KICogVGhpcyBjb2RlIGlzIEZyZWUgU29mdHdhcmUuICBJdCBtYXkgYmUgY29waWVkIGZyZWVseSwgaW4gb3JpZ2luYWwgb3IKICogbW9kaWZpZWQgZm9ybSwgc3ViamVjdCBvbmx5IHRvIHRoZSByZXN0cmljdGlvbnMgdGhhdCAoMSkgdGhlIGF1dGhvciBpcwogKiByZWxpZXZlZCBmcm9tIGFsbCByZXNwb25zaWJpbGl0aWVzIGZvciBhbnkgdXNlIGZvciBhbnkgcHVycG9zZSwgYW5kICgyKQogKiB0aGlzIGNvcHlyaWdodCBub3RpY2UgbXVzdCBiZSByZXRhaW5lZCwgdW5jaGFuZ2VkLCBpbiBpdHMgZW50aXJldHkuICBJZgogKiBmb3IgYW55IHJlYXNvbiB0aGUgYXV0aG9yIG1pZ2h0IGJlIGhlbGQgcmVzcG9uc2libGUgZm9yIGFueSBjb25zZXF1ZW5jZXMKICogb2YgY29weWluZyBvciB1c2UsIGxpY2Vuc2UgaXMgd2l0aGhlbGQuCiAqLwoKLyogQ2hhbmdlczoKICogMjAwNy0wNC0yNToKICogICBwcmVzZXJ2ZSB2YWx1ZSBvZiBXU0FHZXRMYXN0RXJyb3IoKSBvbiBhbGwgZXJyb3IgcmV0dXJucy4KICogMjAwNy0wNC0yMjogIChUaGFua3MgdG8gTWF0dGhldyBHcmVnYW4gPGtpbmV0aWtAZmxpbS5vcmc+KQogKiAgIHMvRUlOVkFML1dTQUVJTlZBTC8gZml4IHRyaXZpYWwgY29tcGlsZSBmYWlsdXJlCiAqICAgcy9zb2NrZXQvV1NBU29ja2V0LyBlbmFibGUgY3JlYXRpb24gb2Ygc29ja2V0cyBzdWl0YWJsZSBhcyBzdGRpbi9zdGRvdXQKICogICAgIG9mIGEgY2hpbGQgcHJvY2Vzcy4KICogICBhZGQgYXJndW1lbnQgbWFrZV9vdmVybGFwcGVkCiAqLwoKI2luY2x1ZGUgPHN0cmluZy5oPgoKI2luY2x1ZGUgPGlvLmg+CiNpbmNsdWRlIDx3aW5zb2NrMi5oPgojaW5jbHVkZSA8d2luZG93cy5oPgoKLyogc29ja2V0cGFpcjoKICogICBJZiBtYWtlX292ZXJsYXBwZWQgaXMgbm9uemVybywgYm90aCBzb2NrZXRzIGNyZWF0ZWQgd2lsbCBiZSB1c2FibGUgZm9yCiAqICAgIm92ZXJsYXBwZWQiIG9wZXJhdGlvbnMgdmlhIFdTQVNlbmQgZXRjLiAgSWYgbWFrZV9vdmVybGFwcGVkIGlzIHplcm8sCiAqICAgc29ja3NbMF0gKG9ubHkpIHdpbGwgYmUgdXNhYmxlIHdpdGggcmVndWxhciBSZWFkRmlsZSBldGMuLCBhbmQgdGh1cwogKiAgIHN1aXRhYmxlIGZvciB1c2UgYXMgc3RkaW4gb3Igc3Rkb3V0IG9mIGEgY2hpbGQgcHJvY2Vzcy4gIE5vdGUgdGhhdCB0aGUKICogICBzb2NrZXRzIG11c3QgYmUgY2xvc2VkIHdpdGggY2xvc2Vzb2NrZXQoKSByZWdhcmRsZXNzLgogKi8KCmludApzb2NrZXRwYWlyKFNPQ0tFVCBzb2Nrc1syXSkgewogIHN0cnVjdCBzb2NrYWRkcl9pbiBhZGRyOwogIFNPQ0tFVCBsaXN0ZW5lcjsKICBpbnQgZTsKICBpbnQgYWRkcmxlbiA9IHNpemVvZihhZGRyKTsKCiAgaWYoc29ja3MgPT0gMCkgewogICAgV1NBU2V0TGFzdEVycm9yKFdTQUVJTlZBTCk7CiAgICByZXR1cm4gU09DS0VUX0VSUk9SOwogIH0KCiAgc29ja3NbMF0gPSBzb2Nrc1sxXSA9IElOVkFMSURfU09DS0VUOwogIGlmKChsaXN0ZW5lciA9IHNvY2tldChBRl9JTkVULCBTT0NLX1NUUkVBTSwgMCkpID09IElOVkFMSURfU09DS0VUKQogICAgcmV0dXJuIFNPQ0tFVF9FUlJPUjsKCiAgbWVtc2V0KCZhZGRyLCAwLCBzaXplb2YoYWRkcikpOwogIGFkZHIuc2luX2ZhbWlseSA9IEFGX0lORVQ7CiAgYWRkci5zaW5fYWRkci5zX2FkZHIgPSBodG9ubCgweDdmMDAwMDAxKTsKICBhZGRyLnNpbl9wb3J0ID0gMDsKCiAgZSA9IGJpbmQobGlzdGVuZXIsIChjb25zdCBzdHJ1Y3Qgc29ja2FkZHIqKSZhZGRyLCBzaXplb2YoYWRkcikpOwogIGlmKGUgPT0gU09DS0VUX0VSUk9SKSB7CiAgICBlID0gV1NBR2V0TGFzdEVycm9yKCk7CiAgICBjbG9zZXNvY2tldChsaXN0ZW5lcik7CiAgICBXU0FTZXRMYXN0RXJyb3IoZSk7CiAgICByZXR1cm4gU09DS0VUX0VSUk9SOwogIH0KICBlID0gZ2V0c29ja25hbWUobGlzdGVuZXIsIChzdHJ1Y3Qgc29ja2FkZHIqKSZhZGRyLCAmYWRkcmxlbik7CiAgaWYoZSA9PSBTT0NLRVRfRVJST1IpIHsKICAgIGUgPSBXU0FHZXRMYXN0RXJyb3IoKTsKICAgIGNsb3Nlc29ja2V0KGxpc3RlbmVyKTsKICAgIFdTQVNldExhc3RFcnJvcihlKTsKICAgIHJldHVybiBTT0NLRVRfRVJST1I7CiAgfQoKICBkbyB7CiAgICBpZihsaXN0ZW4obGlzdGVuZXIsIDEpID09IFNPQ0tFVF9FUlJPUikKICAgICAgYnJlYWs7CiAgICBpZigoc29ja3NbMF0gPSBXU0FTb2NrZXQoQUZfSU5FVCwgU09DS19TVFJFQU0sIDAsIE5VTEwsIDAsIDApKSA9PSBJTlZBTElEX1NPQ0tFVCkKICAgICAgYnJlYWs7CiAgICBpZihjb25uZWN0KHNvY2tzWzBdLCAoY29uc3Qgc3RydWN0IHNvY2thZGRyKikmYWRkciwgc2l6ZW9mKGFkZHIpKSA9PSBTT0NLRVRfRVJST1IpCiAgICAgIGJyZWFrOwogICAgaWYoKHNvY2tzWzFdID0gYWNjZXB0KGxpc3RlbmVyLCBOVUxMLCBOVUxMKSkgPT0gSU5WQUxJRF9TT0NLRVQpCiAgICAgIGJyZWFrOwogICAgY2xvc2Vzb2NrZXQobGlzdGVuZXIpOwogICAgcmV0dXJuIDA7CiAgfSB3aGlsZSgwKTsKICBlID0gV1NBR2V0TGFzdEVycm9yKCk7CiAgY2xvc2Vzb2NrZXQobGlzdGVuZXIpOwogIGNsb3Nlc29ja2V0KHNvY2tzWzBdKTsKICBjbG9zZXNvY2tldChzb2Nrc1sxXSk7CiAgV1NBU2V0TGFzdEVycm9yKGUpOwogIHJldHVybiBTT0NLRVRfRVJST1I7Cn0KAAAAAAAAAACqCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQIAAAAAAACTAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "vector.h",
			"settings":
			{
				"buffer_size": 6047,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-sockets.c",
			"settings":
			{
				"buffer_size": 49077,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAdj4AAAAAAACAPgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "qsort_r.c",
			"settings":
			{
				"buffer_size": 2402,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABiCQAAI2luY2x1ZGUgPHN5cy90eXBlcy5oPgojaW5jbHVkZSA8c3RkbGliLmg+CgpzdGF0aWMgdm9pZApleGNoKGNoYXIqIGJhc2UsIHNpemVfdCBzaXplLCBzaXplX3QgYSwgc2l6ZV90IGIpIHsKICBjaGFyKiB4ID0gYmFzZSArIGEgKiBzaXplOwogIGNoYXIqIHkgPSBiYXNlICsgYiAqIHNpemU7CiAgd2hpbGUoc2l6ZSkgewogICAgY2hhciB6ID0gKng7CiAgICAqeCA9ICp5OwogICAgKnkgPSB6OwogICAgLS1zaXplOwogICAgKyt4OwogICAgKyt5OwogIH0KfQoKI2RlZmluZSBSQU5ECgovKiBRdWlja3NvcnQgd2l0aCAzLXdheSBwYXJ0aXRpb25pbmcsIGFsYSBTZWRnZXdpY2sgKi8KLyogQmxhbWUgaGltIGZvciB0aGUgc2NhcnkgdmFyaWFibGUgbmFtZXMgKi8KLyogaHR0cDovL3d3dy5jcy5wcmluY2V0b24uZWR1L35ycy90YWxrcy9RdWlja3NvcnRJc09wdGltYWwucGRmICovCnN0YXRpYyB2b2lkCnF1aWNrc29ydChjaGFyKiBiYXNlLCBzaXplX3Qgc2l6ZSwgc3NpemVfdCBsLCBzc2l6ZV90IHIsIGludCAoKmNvbXBhcikoY29uc3Qgdm9pZCosIGNvbnN0IHZvaWQqLCB2b2lkKiksIHZvaWQqIHB0cikgewogIHNzaXplX3QgaSA9IGwgLSAxLCBqID0gciwgcCA9IGwgLSAxLCBxID0gciwgazsKICBjaGFyKiB2ID0gYmFzZSArIHIgKiBzaXplOwogIGlmKHIgPD0gbCkKICAgIHJldHVybjsKCiNpZmRlZiBSQU5ECiAgLyoKICAgICBXZSBjaG9zZSB0aGUgcmlnaHRtb3N0IGVsZW1lbnQgaW4gdGhlIGFycmF5IHRvIGJlIHNvcnRlZCBhcyBwaXZvdCwKICAgICB3aGljaCBpcyBPSyBpZiB0aGUgZGF0YSBpcyByYW5kb20sIGJ1dCB3aGljaCBpcyBob3JyaWJsZSBpZiB0aGUKICAgICBkYXRhIGlzIGFscmVhZHkgc29ydGVkLiAgVHJ5IHRvIGltcHJvdmUgYnkgZXhjaGFuZ2luZyBpdCB3aXRoIGEKICAgICByYW5kb20gb3RoZXIgcGl2b3QuCiAgICovCiAgZXhjaChiYXNlLCBzaXplLCBsICsgKHJhbmQoKSAlIChyIC0gbCkpLCByKTsKI2VsaWYgZGVmaW5lZCBNSUQKICAvKgogICAgIFdlIGNob3NlIHRoZSByaWdodG1vc3QgZWxlbWVudCBpbiB0aGUgYXJyYXkgdG8gYmUgc29ydGVkIGFzIHBpdm90LAogICAgIHdoaWNoIGlzIE9LIGlmIHRoZSBkYXRhIGlzIHJhbmRvbSwgYnV0IHdoaWNoIGlzIGhvcnJpYmxlIGlmIHRoZQogICAgIGRhdGEgaXMgYWxyZWFkeSBzb3J0ZWQuICBUcnkgdG8gaW1wcm92ZSBieSBjaG9zaW5nIHRoZSBtaWRkbGUKICAgICBlbGVtZW50IGluc3RlYWQuCiAgICovCiAgZXhjaChiYXNlLCBzaXplLCBsICsgKHIgLSBsKSAvIDIsIHIpOwojZW5kaWYKCiAgZm9yKDs7KSB7CiAgICB3aGlsZSgrK2kgIT0gciAmJiBjb21wYXIoYmFzZSArIGkgKiBzaXplLCB2LCBwdHIpIDwgMCkKICAgICAgOwogICAgd2hpbGUoY29tcGFyKHYsIGJhc2UgKyAoLS1qKSAqIHNpemUsIHB0cikgPCAwKQogICAgICBpZihqID09IGwpCiAgICAgICAgYnJlYWs7CiAgICBpZihpID49IGopCiAgICAgIGJyZWFrOwogICAgZXhjaChiYXNlLCBzaXplLCBpLCBqKTsKICAgIGlmKGNvbXBhcihiYXNlICsgaSAqIHNpemUsIHYsIHB0cikgPT0gMCkKICAgICAgZXhjaChiYXNlLCBzaXplLCArK3AsIGkpOwogICAgaWYoY29tcGFyKHYsIGJhc2UgKyBqICogc2l6ZSwgcHRyKSA9PSAwKQogICAgICBleGNoKGJhc2UsIHNpemUsIGosIC0tcSk7CiAgfQogIGV4Y2goYmFzZSwgc2l6ZSwgaSwgcik7CiAgaiA9IGkgLSAxOwogICsraTsKICBmb3IoayA9IGw7IGsgPCBwOyBrKyssIGotLSkgZXhjaChiYXNlLCBzaXplLCBrLCBqKTsKICBmb3IoayA9IHIgLSAxOyBrID4gcTsgay0tLCBpKyspIGV4Y2goYmFzZSwgc2l6ZSwgaSwgayk7CiAgcXVpY2tzb3J0KGJhc2UsIHNpemUsIGwsIGosIGNvbXBhciwgcHRyKTsKICBxdWlja3NvcnQoYmFzZSwgc2l6ZSwgaSwgciwgY29tcGFyLCBwdHIpOwp9Cgp2b2lkCnF1aWNrc29ydF9yKHZvaWQqIGJhc2UsIHNpemVfdCBubWVtYiwgc2l6ZV90IHNpemUsIGludCAoKmNvbXBhcikoY29uc3Qgdm9pZCosIGNvbnN0IHZvaWQqLCB2b2lkKiksIHZvaWQqIHB0cikgewogIC8qIGNoZWNrIGZvciBpbnRlZ2VyIG92ZXJmbG93cyAqLwogIGlmKG5tZW1iID49ICgoKHNpemVfdCktMSkgPj4gMSkgfHwgc2l6ZSA+PSAoKChzaXplX3QpLTEpID4+IDEpKQogICAgcmV0dXJuOwojaWYgMAogIGlmIChzaXplb2Yoc2l6ZV90KSA8IHNpemVvZih1bnNpZ25lZCBsb25nIGxvbmcpKSB7CiAgICBpZiAoKHVuc2lnbmVkIGxvbmcgbG9uZylzaXplICogbm1lbWIgPiAoc2l6ZV90KS0xKSByZXR1cm47CiAgfSBlbHNlIHsKICAgIGlmIChzaXplKm5tZW1iL25tZW1iICE9IHNpemUpIHJldHVybjsKICB9CiNlbmRpZgogIGlmKG5tZW1iID4gMSkKICAgIHF1aWNrc29ydChiYXNlLCBzaXplLCAwLCBubWVtYiAtIDEsIGNvbXBhciwgcHRyKTsKfQoAAAAAAAAAAGIJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libarchive"
	],
	"file_history":
	[
		"/home/roman/Projects/coreutils/gnulib/lib/execute.c",
		"/home/roman/Projects/coreutils/gnulib/lib/windows-spawn.h",
		"/home/roman/Projects/coreutils/gnulib/lib/spawn-pipe.c",
		"/tmp/spawn/pcs_exec.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/modules.project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/tmp/spawn/process.2.c",
		"/tmp/spawn/process.c",
		"/tmp/spawn/systemimpl.1.c",
		"/tmp/spawn/systemimpl.c",
		"/tmp/spawnvpe/fgvsys_d.c",
		"/tmp/spawnvpe/posixmodule.1.c",
		"/tmp/spawnvpe/posixmodule.c",
		"/tmp/spawnvpe/process.c",
		"/tmp/spawnvpe/redirect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/util.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/.config/sublime-text/Packages/Search in Project/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/.config/sublime-text/Packages/Outline/outline-Dark.hidden-tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/fs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/bc-socklen_t.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/stack.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/socklen_t.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fd_set.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/timeval.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/.clang-format",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-libc.c"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"encoding",
			"ArrayBufferToString",
			"encoding",
			"class_id",
			"js_is_location",
			"array_contains",
			"array_sea",
			"QJSM_EXTRA",
			"location_SOURCES",
			"QJSM_EXTRA_SOURCES",
			"qjsm ",
			"\\(qjsm",
			"qjsm",
			"vector_SOURCES",
			"char_utils_SOURCES",
			"util_SOURCES",
			"utils.c utils.h",
			"utils\\.c",
			"set.lexer",
			"vector.c vector.h",
			"vector_",
			"vector",
			"stringde",
			"flags",
			"socketpair_win32",
			"socketpair",
			" qsort_r\\.c",
			" qsort_r.c",
			"qsort",
			"quicksort",
			"status",
			"PROCESS_STATUS_ERROR",
			"child.process",
			"child_process",
			"TERMIOS",
			"prepare_spawn",
			"_WIN32",
			"dup2",
			"spawnvp",
			"child_p",
			"prot",
			"PROT_READ",
			"HAVE_MMAP",
			"gpio",
			"HAVE_MMAP",
			"^",
			"mmap",
			"realpath",
			"getuid",
			"#endif\n#ifndef __wasi__\n",
			"FUNC_GETUID",
			"\"getuid",
			"fmemopen",
			"HAVE_STRVERSCMP",
			"utils.c",
			"qsort",
			"check_func",
			"qsort",
			"QUICKJS_LIBRARY[^_]",
			"QUICKJS_LIBRARY",
			"WIN32",
			"QUICKJS_LIBRARY_DIR",
			"target_link",
			"add_library",
			"add_lib",
			"QUICKJS_LIBRARY",
			"SOCKETS_NDELAY,",
			"_MODE:",
			"SOCKET_ERROR",
			"SOCKET_SYSCALL",
			"SOCKET_",
			"alloca",
			"check_func",
			"lstat",
			"misc_uname",
			"utsname",
			"SIGTERM",
			"readSync",
			"stdout",
			"jsm_load_package",
			"jsm_module_load",
			"jsm_init_modules",
			"jsm_modules",
			"SOCKET_ERROR",
			"js_sockets_init",
			"vector_forea",
			"js_sockets_funcs",
			"exports",
			"valueOf",
			"\"valueOf",
			"JS_ReadObject",
			"uint8_t\\*",
			"compact",
			"- 1",
			"history entr",
			"rote ",
			"readFileSync",
			"toString",
			" toString",
			"toString",
			"slice =",
			"toString",
			"reduce",
			"console.log",
			"BufferFILe",
			"'imp'",
			"'tmp",
			"\\.define",
			"filter",
			"AddExport",
			"impexp",
			"dbuf_put_escaped_table",
			"string_Break",
			"stringBReakNEwline",
			"define",
			"lexer.tokens",
			"^\\s*console",
			"file",
			"\\.code",
			"code:",
			"'code'",
			"define\\(",
			"keywords",
			"ImportType",
			"_quote",
			"escape",
			"strc",
			"scape|[Qq]uote"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"utils_SOURCES",
			"${util_SOURCES}",
			"${vector_SOURCES}",
			"socketpair",
			"",
			"#",
			"",
			"HAVE_MEMMEM",
			"log",
			"class_key",
			"}\\n\\nsize_t",
			"# ",
			"#",
			"HAVE_REALPATH",
			"",
			"HAVE_TERMIOS_H",
			"HAVE_MMAP",
			"HAVE_SYS_MMAN_H",
			"HAVE_SYS_WAIT_H",
			"length",
			"loc->",
			"ret->",
			"arg",
			" ",
			"",
			"\"\\\\t",
			"\"\\t",
			"imp.",
			"ctx,",
			"",
			"JSValueConst)",
			"",
			"jsm_module_loader",
			"js_module_loader_so",
			"js_eval_file",
			"js_eval_buf",
			"js_load_script",
			"jsm_eval_script",
			"js_eval_file",
			"js_load_module",
			"js_eval_str",
			"js_module_get",
			"JSValueConst)",
			"js_module_search",
			"jsm_module_find",
			"js_module_find",
			"js_load_",
			"js_load_module",
			"js_eval_buf",
			"js_load_script",
			"js_std_dump_error",
			"js_module_exports",
			"fdset",
			" ",
			"js_input_buffer",
			"\\1(\\2, sock",
			"\\1(",
			"",
			"JS_CGETSET_MAGIC_DEF",
			"off.",
			"} else if(",
			"port",
			".buf",
			"'",
			"",
			"socket_send",
			"0x00",
			" 0x00,",
			"0x78,",
			"0x78",
			" 0x00,",
			"0x78",
			"JS_CGETSET_MAGIC_DEF",
			"socket_syscalls_size",
			"js_syscallerror_get, js_syscallerror_set,",
			"js_socket_get, js_socket_set, ",
			"e",
			"js_syscallerror_proto_funcs",
			"s.fd",
			"js_socket_proto_funcs",
			"\"",
			"SYSCALLERROR_VALUEOF",
			"s, ",
			"JS_SOCKETCALL",
			"JS_SOCKETCALL_RETURN",
			"js_socket_data2(ctx",
			"sa->family",
			"QUICKJS_SYSCALLERROR_H",
			"data2",
			"js_syscallerror_data2",
			"QUICKJS_MISC_H",
			"js_sockets_defines",
			"js_sockaddr_data2",
			"js_sockaddr_data",
			"SockAddr",
			"struct sockaddr*",
			"sockets_init",
			"argv[i]",
			"pigpio",
			"CHAR_UTILS",
			"${util_SOURCES}",
			"ol.",
			"range_from",
			".range.length",
			".range.offset",
			"input_buffer_length(in)",
			"input_buffer_data(in)",
			"blob",
			"location->vec",
			"location",
			"Location",
			"r->data\\1",
			" this.fs.",
			"stringdecoder",
			"js_stringdecoder_set",
			"js_stringdecoder_get",
			"stringdecoder",
			"\\1if(gpio->debug) fprintf",
			"struct gpio",
			"struct GPIO",
			"struct GPIO*",
			"ctx->rt",
			"",
			": ",
			"\"",
			"ret = \\1;",
			"->errnum",
			"("
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1256,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
							"function_name_status_row": 14,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									363,
									383
								],
								[
									479,
									499
								],
								[
									655,
									660
								],
								[
									665,
									680
								],
								[
									762,
									775
								],
								[
									823,
									842
								],
								[
									890,
									905
								],
								[
									953,
									961
								],
								[
									1009,
									1017
								],
								[
									1065,
									1081
								],
								[
									1129,
									1139
								],
								[
									1304,
									1315
								],
								[
									1369,
									1381
								],
								[
									1846,
									1857
								],
								[
									1912,
									1924
								],
								[
									1980,
									1992
								],
								[
									2261,
									2285
								],
								[
									2543,
									2586
								],
								[
									2772,
									2797
								],
								[
									3034,
									3079
								],
								[
									3183,
									3235
								],
								[
									3378,
									3411
								],
								[
									3550,
									3573
								],
								[
									3833,
									3858
								],
								[
									3972,
									4006
								],
								[
									4325,
									4345
								],
								[
									4497,
									4521
								],
								[
									4720,
									4738
								],
								[
									4780,
									4801
								],
								[
									4846,
									4868
								],
								[
									4929,
									4951
								],
								[
									5110,
									5156
								],
								[
									5763,
									5820
								],
								[
									6589,
									6612
								],
								[
									6692,
									6718
								],
								[
									6829,
									6858
								],
								[
									6957,
									6996
								],
								[
									7047,
									7107
								],
								[
									7328,
									7371
								],
								[
									7692,
									7719
								],
								[
									7766,
									7794
								],
								[
									7842,
									7870
								],
								[
									7918,
									7956
								],
								[
									8014,
									8042
								],
								[
									8140,
									8175
								],
								[
									8230,
									8256
								],
								[
									8302,
									8347
								],
								[
									8837,
									8853
								],
								[
									8912,
									8951
								],
								[
									9063,
									9103
								],
								[
									9216,
									9254
								],
								[
									9359,
									9383
								],
								[
									9525,
									9564
								],
								[
									9670,
									9695
								],
								[
									9839,
									9879
								],
								[
									10735,
									10768
								]
							],
							"symlist":
							[
								"  strerr(ret)",
								"  numerr(ret)",
								"Stats",
								"  constructor(st)",
								"  isDirectory()",
								"  isCharacterDevice()",
								"  isBlockDevice()",
								"  isFile()",
								"  isFIFO()",
								"  isSymbolicLink()",
								"  isSocket()",
								"  get errno()",
								"  get errstr()",
								"  get stdin()",
								"  get stdout()",
								"  get stderr()",
								"  buffer(length)",
								"  bufferFrom(chunk, offset, length)",
								"  bufferSize(buf)",
								"  bufferToString(buf, offset, length)",
								"  fopen(filename, flags = 'r', mode = 0o644)",
								"  fdopen(fd, flags = 'r')",
								"  puts(fd, str)",
								"  flushSync(file)",
								"  seek(fd, offset, whence)",
								"  tell(file)",
								"  sizeSync(file)",
								"  getcwd()",
								"  chdir(path)",
								"  isatty(file)",
								"  fileno(file)",
								"  readFileSync(filename, options = {})",
								"  writeFileSync(filename, data, overwrite = true)",
								"  closeSync(fd)",
								"  existsSync(path)",
								"  lstatSync(path, cb)",
								"  mkdirSync(path, mode = 0o777)",
								"  openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
								"  readSync(fd, buf, offset, length)",
								"  readdirSync(path)",
								"  readlinkSync(path)",
								"  realpathSync(path)",
								"  renameSync(oldname, newname)",
								"  statSync(path, cb)",
								"  symlinkSync(target, path)",
								"  unlinkSync(path)",
								"  writeSync(fd, data, offset, length)",
								"  pipe()",
								"  setReadHandler(file, handler)",
								"  setWriteHandler(file, handler)",
								"  onRead(file, handler = null)",
								"  waitRead(file)",
								"  onWrite(file, handler = null)",
								"  waitWrite(file)",
								"  readAll(input, bufSize = 1024)",
								"Encoding2Bytes(encoding)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403981.43,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "child-process.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1588,
						"regions":
						{
						},
						"selection":
						[
							[
								950,
								950
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 50,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633400963.75,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "child-process.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7200,
						"regions":
						{
						},
						"selection":
						[
							[
								174,
								174
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 10,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633401225.92,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "quickjs-child-process.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14477,
						"regions":
						{
						},
						"selection":
						[
							[
								168,
								168
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 7,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633401263.86,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16171,
						"regions":
						{
						},
						"selection":
						[
							[
								6815,
								6815
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 209,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403413.29,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2639.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "quickjs-predicate.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 393,
						"regions":
						{
						},
						"selection":
						[
							[
								225,
								225
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 7,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403929.45,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "quickjs-predicate.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30421,
						"regions":
						{
						},
						"selection":
						[
							[
								498,
								498
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 18,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403928.65,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "predicate.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8869,
						"regions":
						{
						},
						"selection":
						[
							[
								2003,
								2003
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 117,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403922.4,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1050.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "predicate.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30287,
						"regions":
						{
						},
						"selection":
						[
							[
								9946,
								9946
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 350,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633404102.54,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4333.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 56483,
						"regions":
						{
						},
						"selection":
						[
							[
								482,
								482
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 20,
							"spell_check": true,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633405171.65,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/fs.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10990,
						"regions":
						{
						},
						"selection":
						[
							[
								5723,
								5725
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 271,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633405404.63,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3129.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "location.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2153,
						"regions":
						{
						},
						"selection":
						[
							[
								686,
								686
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 30,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403879.53,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 126.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "quickjs-pointer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14645,
						"regions":
						{
						},
						"selection":
						[
							[
								3260,
								3275
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 131,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403997.75,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1435.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "quickjs-pointer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 588,
						"regions":
						{
						},
						"selection":
						[
							[
								373,
								385
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 16,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633404016.25,
							"tabs_extra_last_activated_sheet_index": 10,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "pointer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8201,
						"regions":
						{
						},
						"selection":
						[
							[
								1480,
								1480
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 56,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403620.98,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "pointer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2277,
						"regions":
						{
						},
						"selection":
						[
							[
								1518,
								1518
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 37,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403517.53,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "quickjs-location.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11642,
						"regions":
						{
						},
						"selection":
						[
							[
								9115,
								9115
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 318,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403982.64,
							"tabs_extra_last_activated_sheet_index": 13,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4039.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "quickjs-location.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1042,
						"regions":
						{
						},
						"selection":
						[
							[
								861,
								868
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 17,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tabs_extra_last_activated": 1633403983.37,
							"tabs_extra_last_activated_sheet_index": 14
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "quickjs-lexer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1367,
						"regions":
						{
						},
						"selection":
						[
							[
								551,
								551
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 26,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403985.03,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "quickjs-blob.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1105,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403995.43,
							"tabs_extra_last_activated_sheet_index": 16,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "vector.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4311,
						"regions":
						{
						},
						"selection":
						[
							[
								1125,
								1125
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 54,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633402894.6,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28637,
						"regions":
						{
						},
						"selection":
						[
							[
								2847,
								2847
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 102,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633403119.55,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 716.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "buffer-utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7924,
						"regions":
						{
						},
						"selection":
						[
							[
								1951,
								1951
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 55,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633402853.43,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "char-utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2813,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633402853.72,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "buffer-utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11684,
						"regions":
						{
						},
						"selection":
						[
							[
								1784,
								1784
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 52,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633402863.21,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 449.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										229,
										243
									],
									[
										496,
										510
									],
									[
										784,
										798
									],
									[
										1083,
										1097
									],
									[
										1428,
										1442
									],
									[
										1818,
										1832
									],
									[
										2117,
										2131
									],
									[
										2462,
										2476
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								1829,
								1829
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 50,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1633403124.83,
							"tabs_extra_last_activated_sheet_index": 10,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 501.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "cmake/QuickJSModule.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4079,
						"regions":
						{
						},
						"selection":
						[
							[
								2405,
								2408
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 63,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633402230.16,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 336.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "socketpair_win32.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2730,
						"regions":
						{
						},
						"selection":
						[
							[
								657,
								659
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 73,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"tabs_extra_last_activated": 1633402064.72,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "vector.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6047,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633402064.91,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "quickjs-sockets.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49077,
						"regions":
						{
						},
						"selection":
						[
							[
								15990,
								16000
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 575,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633401404.15,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7035.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "qsort_r.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2402,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633401331.71,
							"tabs_extra_last_activated_sheet_index": 4,
							"tabs_extra_moving":
							[
								2,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"qsort_r",
				"qsort_r.c"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"quick",
				"quickjs-path.c"
			],
			[
				"path.c",
				"path.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"quicksj-misc",
				"quickjs-misc.c"
			],
			[
				"process.js",
				"lib/process.js"
			],
			[
				"quickjs-mm",
				"quickjs-mmap.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"quickjs-m",
				"quickjs-misc.c"
			],
			[
				"redicate.c",
				"predicate.c"
			],
			[
				"sockets.h",
				"quickjs-sockets.h"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"",
				"quickjs-inspect.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"char-",
				"char-utils.h"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"conso",
				"lib/console.js"
			],
			[
				"clang-f",
				".clang-format"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"test_mi",
				"tests/test_misc.js"
			],
			[
				"ockets.",
				"quickjs-sockets.h"
			],
			[
				"quickjs-ar",
				"quickjs-archive.c"
			],
			[
				"fd_set",
				"lib/fd_set.js"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"buffer-ut",
				"buffer-utils.c"
			],
			[
				"misc.",
				"quickjs-misc.h"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"socklen_t.js",
				"lib/socklen_t.js"
			],
			[
				"str.h",
				"quickjs-stringdecoder.h"
			],
			[
				"quickjs-libc",
				"~/Sources/plot-cv/quickjs/quickjs-libc.h"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.c"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"test_loca",
				"tests/test_location.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				".clang-fo",
				".clang-format"
			],
			[
				"buff",
				"buffer-utils.c"
			],
			[
				"buffer-util",
				"buffer-utils.c"
			],
			[
				"buffer-utils.c",
				"buffer-utils.c"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"quickjs-so",
				"quickjs-sockets.c"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"quickjs-insp",
				"quickjs-inspect.c"
			],
			[
				"test_soc",
				"tests/test_sockets.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"test_qjsm",
				"tests/test_qjsm.js"
			],
			[
				"buffer-tu",
				"buffer-utils.c"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"repl.",
				"lib/repl.js"
			],
			[
				"quickjs-blo",
				"quickjs-blob.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"test_mis",
				"tests/test_misc.js"
			],
			[
				"test_blob",
				"tests/test_blob.js"
			],
			[
				"test_string",
				"tests/test_stringdecoder.js"
			],
			[
				"test_str",
				"tests/test_stringdecoder.js"
			],
			[
				"quickjs-blb",
				"quickjs-blob.h"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"ringbuffer.h",
				"ringbuffer.h"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 236.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
