{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"js_sys",
				"js_syscallerror_data"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"JS_New",
				"JS_NewInt32"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  ‚ìÇ  _GNU_SOURCE ‚Ä¶ ‚Äî macro object\n‚Äî‚ìÇ‚Äì INSPECT_INT32T_INRANGE ( ) ‚Ä¶ ‚Äî macro \n‚Äî‚ìÇ‚Äì INSPECT_LEVEL ( ) ‚Ä¶ ‚Äî macro \n‚Äî‚ìÇ‚Äì INSPECT_IS_COMPACT ( ) ‚Ä¶ ‚Äî macro \n  ‚ìâ  inspect_options_t ; ‚Äî typedef\n  ‚íû  prop_key ; ‚Äî type declaration\n‚Äî‚í∏‚Äì prop_key { ‚Ä¶ } ; ‚Äî type\n  ‚ìâ  prop_key_t ; ‚Äî typedef\n  ‚í°  js_inspect_print ( ) ; ‚Äî declaration\n‚Äî‚íª‚Äì regexp_predicate ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì inspect_screen_width ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì inspect_options_init ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì inspect_options_free ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì inspect_options_get ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì inspect_options_object ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì inspect_options_hidden ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì inspect_newline ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_object_getpropertynames ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_object_getpropertynames_recursive ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_custom_atom ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_custom_call ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_map ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_set ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_arraybuffer ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_regexp ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_number ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_string ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_print ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_tostring ( ) { ‚Ä¶ } ‚Äî \n  ‚í°  js_debugger_build_backtrace ( ) ; ‚Äî declaration\n‚Äî‚íª‚Äì js_inspect_stacktrace_value ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_stacktrace ( ) { ‚Ä¶ } ‚Äî \n‚Äî‚íª‚Äì js_inspect_init ( ) { ‚Ä¶ } ‚Äî \n  ‚ìÇ  JS_INIT_MODULE ‚Ä¶ ‚Äî macro object\n  ‚ìÇ  JS_INIT_MODULE ‚Ä¶ ‚Äî macro object",
			"settings":
			{
				"buffer_size": 1342,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					140,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					141,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					142,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					143,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					144,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								441,
								463
							],
							[
								512,
								525
							],
							[
								566,
								584
							],
							[
								1524,
								1541
							],
							[
								1551,
								1559
							],
							[
								1577,
								1585
							],
							[
								1650,
								1660
							],
							[
								1674,
								1690
							],
							[
								1793,
								1809
							],
							[
								2049,
								2069
							],
							[
								2191,
								2211
							],
							[
								2699,
								2719
							],
							[
								2950,
								2969
							],
							[
								6517,
								6539
							],
							[
								8001,
								8023
							],
							[
								8228,
								8243
							],
							[
								8357,
								8383
							],
							[
								8827,
								8863
							],
							[
								9224,
								9246
							],
							[
								9565,
								9587
							],
							[
								10599,
								10613
							],
							[
								12153,
								12167
							],
							[
								13297,
								13319
							],
							[
								15173,
								15190
							],
							[
								15577,
								15594
							],
							[
								16599,
								16616
							],
							[
								18377,
								18393
							],
							[
								29667,
								29677
							],
							[
								30587,
								30606
							],
							[
								31008,
								31035
							],
							[
								31085,
								31112
							],
							[
								31363,
								31384
							],
							[
								31616,
								31631
							],
							[
								32514,
								32528
							],
							[
								32558,
								32572
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					145,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					146,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					147,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								441,
								463
							],
							[
								512,
								525
							],
							[
								566,
								584
							],
							[
								1524,
								1541
							],
							[
								1551,
								1559
							],
							[
								1577,
								1585
							],
							[
								1650,
								1660
							],
							[
								1674,
								1690
							],
							[
								1793,
								1809
							],
							[
								2049,
								2069
							],
							[
								2191,
								2211
							],
							[
								2699,
								2719
							],
							[
								2950,
								2969
							],
							[
								6517,
								6539
							],
							[
								8001,
								8023
							],
							[
								8228,
								8243
							],
							[
								8357,
								8383
							],
							[
								8827,
								8863
							],
							[
								9224,
								9246
							],
							[
								9565,
								9587
							],
							[
								10599,
								10613
							],
							[
								12153,
								12167
							],
							[
								13297,
								13319
							],
							[
								15173,
								15190
							],
							[
								15577,
								15594
							],
							[
								16599,
								16616
							],
							[
								18377,
								18393
							],
							[
								29667,
								29677
							],
							[
								30587,
								30606
							],
							[
								31008,
								31035
							],
							[
								31085,
								31112
							],
							[
								31363,
								31384
							],
							[
								31616,
								31631
							],
							[
								32514,
								32528
							],
							[
								32558,
								32572
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					148,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					149,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								441,
								463
							],
							[
								512,
								525
							],
							[
								566,
								584
							],
							[
								1524,
								1541
							],
							[
								1551,
								1559
							],
							[
								1577,
								1585
							],
							[
								1650,
								1660
							],
							[
								1674,
								1690
							],
							[
								1793,
								1809
							],
							[
								2049,
								2069
							],
							[
								2191,
								2211
							],
							[
								2699,
								2719
							],
							[
								2950,
								2969
							],
							[
								6517,
								6539
							],
							[
								8001,
								8023
							],
							[
								8228,
								8243
							],
							[
								8357,
								8383
							],
							[
								8827,
								8863
							],
							[
								9224,
								9246
							],
							[
								9565,
								9587
							],
							[
								10599,
								10613
							],
							[
								12153,
								12167
							],
							[
								13297,
								13319
							],
							[
								15173,
								15190
							],
							[
								15577,
								15594
							],
							[
								16599,
								16616
							],
							[
								18377,
								18393
							],
							[
								29667,
								29677
							],
							[
								30587,
								30606
							],
							[
								31008,
								31035
							],
							[
								31085,
								31112
							],
							[
								31363,
								31384
							],
							[
								31616,
								31631
							],
							[
								32514,
								32528
							],
							[
								32558,
								32572
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AQAAAAAAAAAAAAAAPgUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					150,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								441,
								463
							],
							[
								512,
								525
							],
							[
								566,
								584
							],
							[
								1524,
								1541
							],
							[
								1551,
								1559
							],
							[
								1577,
								1585
							],
							[
								1650,
								1660
							],
							[
								1674,
								1690
							],
							[
								1793,
								1809
							],
							[
								2049,
								2069
							],
							[
								2191,
								2211
							],
							[
								2699,
								2719
							],
							[
								2950,
								2969
							],
							[
								6517,
								6539
							],
							[
								8001,
								8023
							],
							[
								8228,
								8243
							],
							[
								8357,
								8383
							],
							[
								8827,
								8863
							],
							[
								9224,
								9246
							],
							[
								9565,
								9587
							],
							[
								10599,
								10613
							],
							[
								12153,
								12167
							],
							[
								13297,
								13319
							],
							[
								15173,
								15190
							],
							[
								15577,
								15594
							],
							[
								16599,
								16616
							],
							[
								18377,
								18393
							],
							[
								29667,
								29677
							],
							[
								30587,
								30606
							],
							[
								31008,
								31035
							],
							[
								31085,
								31112
							],
							[
								31363,
								31384
							],
							[
								31616,
								31631
							],
							[
								32514,
								32528
							],
							[
								32558,
								32572
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					151,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					152,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					153,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								441,
								463
							],
							[
								512,
								525
							],
							[
								566,
								584
							],
							[
								1524,
								1541
							],
							[
								1551,
								1559
							],
							[
								1577,
								1585
							],
							[
								1650,
								1660
							],
							[
								1674,
								1690
							],
							[
								1793,
								1809
							],
							[
								2049,
								2069
							],
							[
								2191,
								2211
							],
							[
								2699,
								2719
							],
							[
								2950,
								2969
							],
							[
								6517,
								6539
							],
							[
								8001,
								8023
							],
							[
								8228,
								8243
							],
							[
								8357,
								8383
							],
							[
								8827,
								8863
							],
							[
								9224,
								9246
							],
							[
								9565,
								9587
							],
							[
								10599,
								10613
							],
							[
								12153,
								12167
							],
							[
								13297,
								13319
							],
							[
								15173,
								15190
							],
							[
								15577,
								15594
							],
							[
								16599,
								16616
							],
							[
								18377,
								18393
							],
							[
								29667,
								29677
							],
							[
								30587,
								30606
							],
							[
								31008,
								31035
							],
							[
								31085,
								31112
							],
							[
								31363,
								31384
							],
							[
								31616,
								31631
							],
							[
								32514,
								32528
							],
							[
								32558,
								32572
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					154,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								441,
								463
							],
							[
								512,
								525
							],
							[
								566,
								584
							],
							[
								1536,
								1553
							],
							[
								1563,
								1571
							],
							[
								1589,
								1597
							],
							[
								1662,
								1672
							],
							[
								1686,
								1702
							],
							[
								1805,
								1821
							],
							[
								2061,
								2081
							],
							[
								2203,
								2223
							],
							[
								2711,
								2731
							],
							[
								2962,
								2981
							],
							[
								6529,
								6551
							],
							[
								8013,
								8035
							],
							[
								8240,
								8255
							],
							[
								8369,
								8395
							],
							[
								8839,
								8875
							],
							[
								9236,
								9258
							],
							[
								9577,
								9599
							],
							[
								10611,
								10625
							],
							[
								12165,
								12179
							],
							[
								13309,
								13331
							],
							[
								15185,
								15202
							],
							[
								15589,
								15606
							],
							[
								16611,
								16628
							],
							[
								18389,
								18405
							],
							[
								29679,
								29689
							],
							[
								30599,
								30618
							],
							[
								31020,
								31047
							],
							[
								31097,
								31124
							],
							[
								31375,
								31396
							],
							[
								31628,
								31643
							],
							[
								32526,
								32540
							],
							[
								32570,
								32584
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"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IOKApiDigJQgbWFjcm8gCuKAlOKTguKAkyBJTlNQRUNUX0xFVkVMICggKSDigKYg4oCUIG1hY3JvIArigJTik4LigJMgSU5TUEVDVF9JU19DT01QQUNUICggKSDigKYg4oCUIG1hY3JvIAogIOKTiSAgaW5zcGVjdF9vcHRpb25zX3QgOyDigJQgdHlwZWRlZgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfc2NyZWVuX3dpZHRoICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19pbml0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19nZXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX29iamVjdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3RfbmV3bGluZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lcyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fYXRvbSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9jYWxsICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3Rfc2V0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIAogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RhY2t0cmFjZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X2luaXQgKCApIHsg4oCmIH0g4oCUIAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA+BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAYAACAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTik4LigJMgSU5TUEVDVF9JTlQzMlRfSU5SQU5HRSAoICkg4oCmIOKAlCBtYWNybyAK4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gCuKAlOKTguKAkyBJTlNQRUNUX0lTX0NPTVBBQ1QgKCApIOKApiDigJQgbWFjcm8gCiAg4pOJICBpbnNwZWN0X29wdGlvbnNfdCA7IOKAlCB0eXBlZGVmCiAg4pKeICBwcm9wX2tleSA7IOKAlCB0eXBlIGRlY2xhcmF0aW9uCuKAlOKSuOKAkyBwcm9wX2tleSB7IOKApiB9IDsg4oCUIHR5cGUKICDik4kgIHByb3Bfa2V5X3QgOyDigJQgdHlwZWRlZgogIOKSoSAganNfaW5zcGVjdF9wcmludCAoICkgOyDigJQgZGVjbGFyYXRpb24K4oCU4pK74oCTIHJlZ2V4cF9wcmVkaWNhdGUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2luaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19oaWRkZW4gKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX29iamVjdF9nZXRwcm9wZXJ0eW5hbWVzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX29iamVjdF9nZXRwcm9wZXJ0eW5hbWVzX3JlY3Vyc2l2ZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfY3VzdG9tX2NhbGwgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9tYXAgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X3JlZ2V4cCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X3N0cmluZyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X3ByaW50ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF90b3N0cmluZyAoICkgeyDigKYgfSDigJQgCiAg4pKhICBqc19kZWJ1Z2dlcl9idWlsZF9iYWNrdHJhY2UgKCApIDsg4oCUIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3N0YWNrdHJhY2VfdmFsdWUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfaW5pdCAoICkgeyDigKYgfSDigJQgCiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAD4FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					155,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								441,
								463
							],
							[
								512,
								525
							],
							[
								566,
								584
							],
							[
								1536,
								1553
							],
							[
								1563,
								1571
							],
							[
								1589,
								1597
							],
							[
								1662,
								1672
							],
							[
								1686,
								1702
							],
							[
								1805,
								1821
							],
							[
								2061,
								2081
							],
							[
								2203,
								2223
							],
							[
								2711,
								2731
							],
							[
								2962,
								2981
							],
							[
								6529,
								6551
							],
							[
								8013,
								8035
							],
							[
								8240,
								8255
							],
							[
								8369,
								8395
							],
							[
								8839,
								8875
							],
							[
								9236,
								9258
							],
							[
								9577,
								9599
							],
							[
								10611,
								10625
							],
							[
								12165,
								12179
							],
							[
								13309,
								13331
							],
							[
								15185,
								15202
							],
							[
								15589,
								15606
							],
							[
								16611,
								16628
							],
							[
								18389,
								18405
							],
							[
								29679,
								29689
							],
							[
								30599,
								30618
							],
							[
								31020,
								31047
							],
							[
								31097,
								31124
							],
							[
								31375,
								31396
							],
							[
								31628,
								31643
							],
							[
								32526,
								32540
							],
							[
								32570,
								32584
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"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IOKApiDigJQgbWFjcm8gCuKAlOKTguKAkyBJTlNQRUNUX0xFVkVMICggKSDigKYg4oCUIG1hY3JvIArigJTik4LigJMgSU5TUEVDVF9JU19DT01QQUNUICggKSDigKYg4oCUIG1hY3JvIAogIOKTiSAgaW5zcGVjdF9vcHRpb25zX3QgOyDigJQgdHlwZWRlZgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfc2NyZWVuX3dpZHRoICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19pbml0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19nZXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX29iamVjdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3RfbmV3bGluZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lcyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fYXRvbSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9jYWxsICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3Rfc2V0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIAogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RhY2t0cmFjZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X2luaXQgKCApIHsg4oCmIH0g4oCUIAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA+BQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					156,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								441,
								463
							],
							[
								512,
								525
							],
							[
								566,
								584
							],
							[
								1536,
								1553
							],
							[
								1563,
								1571
							],
							[
								1589,
								1597
							],
							[
								1662,
								1672
							],
							[
								1686,
								1702
							],
							[
								1805,
								1821
							],
							[
								2061,
								2081
							],
							[
								2203,
								2223
							],
							[
								2711,
								2731
							],
							[
								2962,
								2981
							],
							[
								6529,
								6551
							],
							[
								8013,
								8035
							],
							[
								8240,
								8255
							],
							[
								8369,
								8395
							],
							[
								8839,
								8875
							],
							[
								9236,
								9258
							],
							[
								9577,
								9599
							],
							[
								10611,
								10625
							],
							[
								12165,
								12179
							],
							[
								13309,
								13331
							],
							[
								15185,
								15202
							],
							[
								15589,
								15606
							],
							[
								16611,
								16628
							],
							[
								18389,
								18405
							],
							[
								29679,
								29689
							],
							[
								30599,
								30618
							],
							[
								31020,
								31047
							],
							[
								31097,
								31124
							],
							[
								31375,
								31396
							],
							[
								31628,
								31643
							],
							[
								32526,
								32540
							],
							[
								32570,
								32584
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					157,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								441,
								463
							],
							[
								512,
								525
							],
							[
								566,
								584
							],
							[
								1536,
								1553
							],
							[
								1563,
								1571
							],
							[
								1589,
								1597
							],
							[
								1662,
								1672
							],
							[
								1686,
								1702
							],
							[
								1805,
								1821
							],
							[
								2061,
								2081
							],
							[
								2203,
								2223
							],
							[
								2711,
								2731
							],
							[
								2962,
								2981
							],
							[
								6529,
								6551
							],
							[
								8013,
								8035
							],
							[
								8240,
								8255
							],
							[
								8369,
								8395
							],
							[
								8839,
								8875
							],
							[
								9236,
								9258
							],
							[
								9577,
								9599
							],
							[
								10611,
								10625
							],
							[
								12165,
								12179
							],
							[
								13309,
								13331
							],
							[
								15185,
								15202
							],
							[
								15589,
								15606
							],
							[
								16611,
								16628
							],
							[
								18389,
								18405
							],
							[
								29679,
								29689
							],
							[
								30599,
								30618
							],
							[
								31020,
								31047
							],
							[
								31097,
								31124
							],
							[
								31375,
								31396
							],
							[
								31628,
								31643
							],
							[
								32526,
								32540
							],
							[
								32570,
								32584
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB8BgAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKTguKAkyBJTlNQRUNUX0lOVDMyVF9JTlJBTkdFICggKSDigKYg4oCUIG1hY3JvIArigJTik4LigJMgSU5TUEVDVF9MRVZFTCAoICkg4oCmIOKAlCBtYWNybyAK4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyAKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikp4gIHByb3Bfa2V5IDsg4oCUIHR5cGUgZGVjbGFyYXRpb24K4oCU4pK44oCTIHByb3Bfa2V5IHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgcHJvcF9rZXlfdCA7IOKAlCB0eXBlZGVmCiAg4pKhICBqc19pbnNwZWN0X3ByaW50ICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTikrvigJMgcmVnZXhwX3ByZWRpY2F0ZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X3NjcmVlbl93aWR0aCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfZnJlZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfZ2V0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2hpZGRlbiAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X25ld2xpbmUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXNfcmVjdXJzaXZlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfY3VzdG9tX2F0b20gKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X21hcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X3NldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfcmVnZXhwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfbnVtYmVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfcHJpbnQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCAKICDikqEgIGpzX2RlYnVnZ2VyX2J1aWxkX2JhY2t0cmFjZSAoICkgOyDigJQgZGVjbGFyYXRpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RhY2t0cmFjZV92YWx1ZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X3N0YWNrdHJhY2UgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCAKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAAAAAAAAAAAPgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwGAAAgIOKTgiAgX0dOVV9TT1VSQ0Ug4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gCuKAlOKTguKAkyBJTlNQRUNUX0xFVkVMICggKSDigKYg4oCUIG1hY3JvIArigJTik4LigJMgSU5TUEVDVF9JU19DT01QQUNUICggKSDigKYg4oCUIG1hY3JvIAogIOKTiSAgaW5zcGVjdF9vcHRpb25zX3QgOyDigJQgdHlwZWRlZgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfc2NyZWVuX3dpZHRoICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19pbml0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19nZXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX29iamVjdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3RfbmV3bGluZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lcyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fYXRvbSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9jYWxsICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3Rfc2V0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIAogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RhY2t0cmFjZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X2luaXQgKCApIHsg4oCmIH0g4oCUIAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA+BQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					158,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								441,
								463
							],
							[
								512,
								525
							],
							[
								566,
								584
							],
							[
								1536,
								1553
							],
							[
								1563,
								1571
							],
							[
								1589,
								1597
							],
							[
								1662,
								1672
							],
							[
								1686,
								1702
							],
							[
								1805,
								1821
							],
							[
								2061,
								2081
							],
							[
								2203,
								2223
							],
							[
								2711,
								2731
							],
							[
								2962,
								2981
							],
							[
								6529,
								6551
							],
							[
								8013,
								8035
							],
							[
								8240,
								8255
							],
							[
								8369,
								8395
							],
							[
								8839,
								8875
							],
							[
								9236,
								9258
							],
							[
								9577,
								9599
							],
							[
								10611,
								10625
							],
							[
								12165,
								12179
							],
							[
								13309,
								13331
							],
							[
								15185,
								15202
							],
							[
								15589,
								15606
							],
							[
								16611,
								16628
							],
							[
								18389,
								18405
							],
							[
								29679,
								29689
							],
							[
								30599,
								30618
							],
							[
								31020,
								31047
							],
							[
								31097,
								31124
							],
							[
								31375,
								31396
							],
							[
								31628,
								31643
							],
							[
								32526,
								32540
							],
							[
								32570,
								32584
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB8BgAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKTguKAkyBJTlNQRUNUX0lOVDMyVF9JTlJBTkdFICggKSDigKYg4oCUIG1hY3JvIArigJTik4LigJMgSU5TUEVDVF9MRVZFTCAoICkg4oCmIOKAlCBtYWNybyAK4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyAKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikp4gIHByb3Bfa2V5IDsg4oCUIHR5cGUgZGVjbGFyYXRpb24K4oCU4pK44oCTIHByb3Bfa2V5IHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgcHJvcF9rZXlfdCA7IOKAlCB0eXBlZGVmCiAg4pKhICBqc19pbnNwZWN0X3ByaW50ICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTikrvigJMgcmVnZXhwX3ByZWRpY2F0ZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X3NjcmVlbl93aWR0aCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfZnJlZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfZ2V0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2hpZGRlbiAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpbnNwZWN0X25ld2xpbmUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXNfcmVjdXJzaXZlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfY3VzdG9tX2F0b20gKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X21hcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X3NldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfcmVnZXhwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfbnVtYmVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX2luc3BlY3RfcHJpbnQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCAKICDikqEgIGpzX2RlYnVnZ2VyX2J1aWxkX2JhY2t0cmFjZSAoICkgOyDigJQgZGVjbGFyYXRpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RhY2t0cmFjZV92YWx1ZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19pbnNwZWN0X3N0YWNrdHJhY2UgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCAKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAAAAAAAAAAAPgUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					159,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					160,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-misc.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								265,
								268
							],
							[
								307,
								310
							],
							[
								2753,
								2762
							],
							[
								2876,
								2886
							],
							[
								3061,
								3082
							],
							[
								3163,
								3182
							],
							[
								3314,
								3338
							],
							[
								3477,
								3489
							],
							[
								3530,
								3542
							],
							[
								3565,
								3582
							],
							[
								4565,
								4577
							],
							[
								4594,
								4614
							],
							[
								4761,
								4788
							],
							[
								6101,
								6120
							],
							[
								7023,
								7044
							],
							[
								7190,
								7210
							],
							[
								7716,
								7738
							],
							[
								8221,
								8244
							],
							[
								9167,
								9186
							],
							[
								10783,
								10808
							],
							[
								11148,
								11164
							],
							[
								11814,
								11831
							],
							[
								12363,
								12384
							],
							[
								12904,
								12926
							],
							[
								13596,
								13621
							],
							[
								14391,
								14416
							],
							[
								15090,
								15119
							],
							[
								15358,
								15374
							],
							[
								16298,
								16314
							],
							[
								17404,
								17429
							],
							[
								17845,
								17859
							],
							[
								18667,
								18680
							],
							[
								19274,
								19286
							],
							[
								19693,
								19705
							],
							[
								20121,
								20141
							],
							[
								20870,
								20890
							],
							[
								21229,
								21248
							],
							[
								21468,
								21480
							],
							[
								23380,
								23397
							],
							[
								23995,
								24013
							],
							[
								25105,
								25125
							],
							[
								25586,
								25607
							],
							[
								26081,
								26096
							],
							[
								26664,
								26684
							],
							[
								27136,
								27148
							],
							[
								27854,
								27869
							],
							[
								29372,
								29397
							],
							[
								29936,
								29961
							],
							[
								34611,
								34623
							],
							[
								35653,
								35667
							],
							[
								35697,
								35711
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉmax‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉmin‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚íª‚Äì‚ÄÉget_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfind_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_bytecode_free_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_string_free_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_arraybuffer_free_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉOffsetLength‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉOffsetLength‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉget_offset_length‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉSyscallError‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_throw‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_method‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_topointer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_toarraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_duparraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_resizearraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_concatarraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_getperformancecounter‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_proclink‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_procread‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_getprototypechain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_hrtime‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_uname‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_btoa‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_atob‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_compile_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_write_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_read_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_getx‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_valuetype‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_evalbinary‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_opcode_array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_opcode_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_opcodes‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_get_bytecode‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_classid‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_bitfield_to_array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_array_to_bitfield‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AQAAAAAAAAAAAAAASwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					161,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA7CQAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKTguKAkyBtYXggKCApIOKApiDigJQgbWFjcm8gCuKAlOKTguKAkyBtaW4gKCApIOKApiDigJQgbWFjcm8gCuKAlOKSu+KAkyBnZXRfZXJyb3IgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgZmluZF9lcnJvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19ieXRlY29kZV9mcmVlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3RyaW5nX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19hcnJheWJ1ZmZlcl9mcmVlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIArigJTikrjigJMgT2Zmc2V0TGVuZ3RoIHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgT2Zmc2V0TGVuZ3RoIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGdldF9vZmZzZXRfbGVuZ3RoICggKSB7IOKApiB9IOKAlCAKICDik4kgIFN5c2NhbGxFcnJvciA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfZGF0YSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3lzY2FsbGVycm9yX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfdGhyb3cgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3lzY2FsbGVycm9yX2R1bXAgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3lzY2FsbGVycm9yX21ldGhvZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfZ2V0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX3N5c2NhbGxlcnJvcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY190b3N0cmluZyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3RvcG9pbnRlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3RvYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19kdXBhcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfY29uY2F0YXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19nZXRwZXJmb3JtYW5jZWNvdW50ZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19wcm9jbGluayAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3Byb2NyZWFkICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfZ2V0cHJvdG90eXBlY2hhaW4gKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19ocnRpbWUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY191bmFtZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX2J0b2EgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19hdG9iICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfY29tcGlsZV9maWxlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2Nfd3JpdGVfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfcmVhZF9vYmplY3QgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfdmFsdWV0eXBlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfZXZhbGJpbmFyeSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19vcGNvZGVzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfYXRvbSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX2NsYXNzaWQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19iaXRmaWVsZF90b19hcnJheSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX2FycmF5X3RvX2JpdGZpZWxkICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfaW5pdCAoICkgeyDigKYgfSDigJQgCiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					162,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-misc.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								265,
								268
							],
							[
								307,
								310
							],
							[
								2753,
								2762
							],
							[
								2876,
								2886
							],
							[
								3061,
								3082
							],
							[
								3163,
								3182
							],
							[
								3314,
								3338
							],
							[
								3477,
								3489
							],
							[
								3530,
								3542
							],
							[
								3565,
								3582
							],
							[
								4565,
								4577
							],
							[
								4594,
								4614
							],
							[
								4761,
								4788
							],
							[
								6101,
								6120
							],
							[
								7023,
								7044
							],
							[
								7190,
								7210
							],
							[
								7716,
								7738
							],
							[
								8221,
								8244
							],
							[
								9167,
								9186
							],
							[
								10783,
								10808
							],
							[
								11148,
								11164
							],
							[
								11814,
								11831
							],
							[
								12363,
								12384
							],
							[
								12904,
								12926
							],
							[
								13596,
								13621
							],
							[
								14391,
								14416
							],
							[
								15090,
								15119
							],
							[
								15358,
								15374
							],
							[
								16298,
								16314
							],
							[
								17404,
								17429
							],
							[
								17845,
								17859
							],
							[
								18667,
								18680
							],
							[
								19274,
								19286
							],
							[
								19693,
								19705
							],
							[
								20121,
								20141
							],
							[
								20870,
								20890
							],
							[
								21229,
								21248
							],
							[
								21468,
								21480
							],
							[
								23380,
								23397
							],
							[
								23995,
								24013
							],
							[
								25105,
								25125
							],
							[
								25586,
								25607
							],
							[
								26081,
								26096
							],
							[
								26664,
								26684
							],
							[
								27136,
								27148
							],
							[
								27854,
								27869
							],
							[
								29372,
								29397
							],
							[
								29936,
								29961
							],
							[
								34611,
								34623
							],
							[
								35653,
								35667
							],
							[
								35697,
								35711
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉmax‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉmin‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚íª‚Äì‚ÄÉget_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfind_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_bytecode_free_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_string_free_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_arraybuffer_free_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉOffsetLength‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉOffsetLength‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉget_offset_length‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉSyscallError‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_throw‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_method‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_topointer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_toarraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_duparraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_resizearraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_concatarraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_getperformancecounter‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_proclink‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_procread‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_getprototypechain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_hrtime‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_uname‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_btoa‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_atob‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_compile_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_write_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_read_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_getx‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_valuetype‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_evalbinary‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_opcode_array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_opcode_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_opcodes‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_get_bytecode‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_classid‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_bitfield_to_array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_array_to_bitfield‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AQAAAAAAAAAAAAAASwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					163,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA7CQAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKTguKAkyBtYXggKCApIOKApiDigJQgbWFjcm8gCuKAlOKTguKAkyBtaW4gKCApIOKApiDigJQgbWFjcm8gCuKAlOKSu+KAkyBnZXRfZXJyb3IgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgZmluZF9lcnJvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19ieXRlY29kZV9mcmVlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3RyaW5nX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19hcnJheWJ1ZmZlcl9mcmVlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIArigJTikrjigJMgT2Zmc2V0TGVuZ3RoIHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgT2Zmc2V0TGVuZ3RoIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGdldF9vZmZzZXRfbGVuZ3RoICggKSB7IOKApiB9IOKAlCAKICDik4kgIFN5c2NhbGxFcnJvciA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfZGF0YSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3lzY2FsbGVycm9yX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfdGhyb3cgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3lzY2FsbGVycm9yX2R1bXAgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3lzY2FsbGVycm9yX21ldGhvZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfZ2V0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX3N5c2NhbGxlcnJvcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY190b3N0cmluZyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3RvcG9pbnRlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3RvYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19kdXBhcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfY29uY2F0YXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19nZXRwZXJmb3JtYW5jZWNvdW50ZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19wcm9jbGluayAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3Byb2NyZWFkICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfZ2V0cHJvdG90eXBlY2hhaW4gKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19ocnRpbWUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY191bmFtZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX2J0b2EgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19hdG9iICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfY29tcGlsZV9maWxlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2Nfd3JpdGVfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfcmVhZF9vYmplY3QgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfdmFsdWV0eXBlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfZXZhbGJpbmFyeSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19vcGNvZGVzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfYXRvbSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX2NsYXNzaWQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19iaXRmaWVsZF90b19hcnJheSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX2FycmF5X3RvX2JpdGZpZWxkICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfaW5pdCAoICkgeyDigKYgfSDigJQgCiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					164,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-misc.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								265,
								268
							],
							[
								307,
								310
							],
							[
								2753,
								2762
							],
							[
								2876,
								2886
							],
							[
								3061,
								3082
							],
							[
								3163,
								3182
							],
							[
								3314,
								3338
							],
							[
								3477,
								3489
							],
							[
								3530,
								3542
							],
							[
								3565,
								3582
							],
							[
								4565,
								4577
							],
							[
								4594,
								4614
							],
							[
								4761,
								4788
							],
							[
								6101,
								6120
							],
							[
								7023,
								7044
							],
							[
								7190,
								7210
							],
							[
								7716,
								7738
							],
							[
								8221,
								8244
							],
							[
								9167,
								9186
							],
							[
								10783,
								10808
							],
							[
								11148,
								11164
							],
							[
								11814,
								11831
							],
							[
								12363,
								12384
							],
							[
								12904,
								12926
							],
							[
								13596,
								13621
							],
							[
								14391,
								14416
							],
							[
								15090,
								15119
							],
							[
								15358,
								15374
							],
							[
								16298,
								16314
							],
							[
								17404,
								17429
							],
							[
								17845,
								17859
							],
							[
								18667,
								18680
							],
							[
								19274,
								19286
							],
							[
								19693,
								19705
							],
							[
								20121,
								20141
							],
							[
								20870,
								20890
							],
							[
								21229,
								21248
							],
							[
								21468,
								21480
							],
							[
								23380,
								23397
							],
							[
								23995,
								24013
							],
							[
								25105,
								25125
							],
							[
								25586,
								25607
							],
							[
								26081,
								26096
							],
							[
								26664,
								26684
							],
							[
								27136,
								27148
							],
							[
								27854,
								27869
							],
							[
								29372,
								29397
							],
							[
								29936,
								29961
							],
							[
								34611,
								34623
							],
							[
								35653,
								35667
							],
							[
								35697,
								35711
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉmax‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉmin‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚íª‚Äì‚ÄÉget_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfind_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_bytecode_free_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_string_free_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_arraybuffer_free_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉOffsetLength‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉOffsetLength‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉget_offset_length‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉSyscallError‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_throw‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_method‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syscallerror_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_topointer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_toarraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_duparraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_resizearraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_concatarraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_getperformancecounter‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_proclink‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_procread‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_getprototypechain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_hrtime‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_uname‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_btoa‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_atob‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_compile_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_write_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_read_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_getx‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_valuetype‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_evalbinary‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_opcode_array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_opcode_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_opcodes‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_get_bytecode‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_classid‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_bitfield_to_array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_array_to_bitfield‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_misc_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AQAAAAAAAAAAAAAASwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					165,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
						"symkeys":
						[
							[
								930,
								950
							],
							[
								995,
								1011
							],
							[
								1065,
								1084
							],
							[
								1119,
								1135
							],
							[
								1191,
								1207
							],
							[
								1270,
								1304
							],
							[
								1327,
								1359
							],
							[
								1382,
								1425
							],
							[
								1666,
								1678
							],
							[
								3501,
								3520
							],
							[
								3618,
								3634
							],
							[
								3696,
								3714
							],
							[
								3778,
								3797
							],
							[
								3862,
								3871
							],
							[
								3926,
								3943
							],
							[
								4006,
								4023
							],
							[
								4086,
								4100
							],
							[
								4160,
								4175
							],
							[
								4236,
								4251
							],
							[
								4312,
								4320
							],
							[
								4374,
								4386
							],
							[
								4444,
								4454
							],
							[
								4510,
								4521
							],
							[
								4578,
								4586
							],
							[
								4640,
								4662
							],
							[
								4730,
								4745
							],
							[
								4806,
								4828
							],
							[
								4896,
								4912
							],
							[
								4974,
								4990
							],
							[
								5052,
								5064
							],
							[
								5122,
								5134
							],
							[
								5192,
								5205
							],
							[
								5264,
								5282
							],
							[
								5340,
								5358
							],
							[
								5422,
								5444
							],
							[
								5512,
								5539
							],
							[
								5612,
								5629
							],
							[
								5686,
								5703
							],
							[
								5760,
								5777
							],
							[
								5824,
								5840
							],
							[
								5923,
								5939
							],
							[
								6011,
								6027
							],
							[
								6099,
								6116
							],
							[
								6173,
								6193
							],
							[
								6252,
								6272
							],
							[
								6431,
								6450
							],
							[
								6526,
								6533
							],
							[
								6562,
								6582
							],
							[
								6652,
								6667
							],
							[
								6728,
								6754
							],
							[
								6832,
								6853
							],
							[
								6931,
								6957
							],
							[
								7003,
								7028
							],
							[
								7093,
								7135
							],
							[
								7269,
								7309
							],
							[
								9748,
								9791
							],
							[
								10244,
								10279
							],
							[
								10435,
								10453
							],
							[
								10483,
								10488
							],
							[
								10578,
								10605
							],
							[
								10724,
								10745
							],
							[
								10774,
								10790
							],
							[
								10883,
								10913
							],
							[
								11202,
								11236
							],
							[
								11898,
								11960
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function define(obj, ...args)",
							" function getConstructorChain(obj)",
							".extendArray = (proto = Array.prototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA7CQAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKTguKAkyBtYXggKCApIOKApiDigJQgbWFjcm8gCuKAlOKTguKAkyBtaW4gKCApIOKApiDigJQgbWFjcm8gCuKAlOKSu+KAkyBnZXRfZXJyb3IgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgZmluZF9lcnJvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19ieXRlY29kZV9mcmVlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3RyaW5nX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19hcnJheWJ1ZmZlcl9mcmVlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIArigJTikrjigJMgT2Zmc2V0TGVuZ3RoIHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgT2Zmc2V0TGVuZ3RoIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGdldF9vZmZzZXRfbGVuZ3RoICggKSB7IOKApiB9IOKAlCAKICDik4kgIFN5c2NhbGxFcnJvciA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfZGF0YSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3lzY2FsbGVycm9yX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfdGhyb3cgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3lzY2FsbGVycm9yX2R1bXAgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfc3lzY2FsbGVycm9yX21ldGhvZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19zeXNjYWxsZXJyb3JfZ2V0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX3N5c2NhbGxlcnJvcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY190b3N0cmluZyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3RvcG9pbnRlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3RvYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19kdXBhcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfY29uY2F0YXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19nZXRwZXJmb3JtYW5jZWNvdW50ZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19wcm9jbGluayAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX3Byb2NyZWFkICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfZ2V0cHJvdG90eXBlY2hhaW4gKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19ocnRpbWUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY191bmFtZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX2J0b2EgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19hdG9iICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfY29tcGlsZV9maWxlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2Nfd3JpdGVfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfcmVhZF9vYmplY3QgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfdmFsdWV0eXBlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfZXZhbGJpbmFyeSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19vcGNvZGVzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfYXRvbSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX2NsYXNzaWQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlzY19iaXRmaWVsZF90b19hcnJheSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taXNjX2FycmF5X3RvX2JpdGZpZWxkICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pc2NfaW5pdCAoICkgeyDigKYgfSDigJQgCiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAHQEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					166,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/tty.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0BAAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9ICooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gKigpCiooKQogIGlzQW55QXJyYXlCdWZmZXIodikKICBpc0FycmF5QnVmZmVyKHYpCiAgaXNCaWdJbnQ2NEFycmF5KHYpCiAgaXNCaWdVaW50NjRBcnJheSh2KQogIGlzRGF0ZSh2KQogIGlzRmxvYXQzMkFycmF5KHYpCiAgaXNGbG9hdDY0QXJyYXkodikKICBpc0ludDhBcnJheSh2KQogIGlzSW50MTZBcnJheSh2KQogIGlzSW50MzJBcnJheSh2KQogIGlzTWFwKHYpCiAgaXNQcm9taXNlKHYpCiAgaXNQcm94eSh2KQogIGlzUmVnRXhwKHYpCiAgaXNTZXQodikKICBpc1NoYXJlZEFycmF5QnVmZmVyKHYpCiAgaXNVaW50OEFycmF5KHYpCiAgaXNVaW50OENsYW1wZWRBcnJheSh2KQogIGlzVWludDE2QXJyYXkodikKICBpc1VpbnQzMkFycmF5KHYpCiAgaXNXZWFrTWFwKHYpCiAgaXNXZWFrU2V0KHYpCiAgaXNEYXRhVmlldyh2KQogIGlzQm9vbGVhbk9iamVjdCh2KQogIGlzQXN5bmNGdW5jdGlvbih2KQogIGlzR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc051bWJlck9iamVjdCh2KQogIGlzQmlnSW50T2JqZWN0KHYpCiAgaXNTeW1ib2xPYmplY3QodikKICBpc05hdGl2ZUVycm9yKHYpCiAgaXNNYXBJdGVyYXRvcih2KQogIGlzU2V0SXRlcmF0b3IodikKICBpc1N0cmluZ09iamVjdCh2KQogIGlzQXJyYXlCdWZmZXJWaWV3KHYpCiAgaXNBcmd1bWVudHNPYmplY3QodikKICBpc0JveGVkUHJpbWl0aXZlKHYpCiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					167,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
						"symkeys":
						[
							[
								930,
								950
							],
							[
								995,
								1011
							],
							[
								1065,
								1084
							],
							[
								1119,
								1135
							],
							[
								1191,
								1207
							],
							[
								1270,
								1304
							],
							[
								1327,
								1359
							],
							[
								1382,
								1425
							],
							[
								1666,
								1678
							],
							[
								3501,
								3520
							],
							[
								3618,
								3634
							],
							[
								3696,
								3714
							],
							[
								3778,
								3797
							],
							[
								3862,
								3871
							],
							[
								3926,
								3943
							],
							[
								4006,
								4023
							],
							[
								4086,
								4100
							],
							[
								4160,
								4175
							],
							[
								4236,
								4251
							],
							[
								4312,
								4320
							],
							[
								4374,
								4386
							],
							[
								4444,
								4454
							],
							[
								4510,
								4521
							],
							[
								4578,
								4586
							],
							[
								4640,
								4662
							],
							[
								4730,
								4745
							],
							[
								4806,
								4828
							],
							[
								4896,
								4912
							],
							[
								4974,
								4990
							],
							[
								5052,
								5064
							],
							[
								5122,
								5134
							],
							[
								5192,
								5205
							],
							[
								5264,
								5282
							],
							[
								5340,
								5358
							],
							[
								5422,
								5444
							],
							[
								5512,
								5539
							],
							[
								5612,
								5629
							],
							[
								5686,
								5703
							],
							[
								5760,
								5777
							],
							[
								5824,
								5840
							],
							[
								5923,
								5939
							],
							[
								6011,
								6027
							],
							[
								6099,
								6116
							],
							[
								6173,
								6193
							],
							[
								6252,
								6272
							],
							[
								6431,
								6450
							],
							[
								6526,
								6533
							],
							[
								6562,
								6582
							],
							[
								6652,
								6667
							],
							[
								6728,
								6754
							],
							[
								6832,
								6853
							],
							[
								6931,
								6957
							],
							[
								7003,
								7028
							],
							[
								7093,
								7135
							],
							[
								7269,
								7309
							],
							[
								9748,
								9791
							],
							[
								10244,
								10279
							],
							[
								10435,
								10453
							],
							[
								10483,
								10488
							],
							[
								10578,
								10605
							],
							[
								10724,
								10745
							],
							[
								10774,
								10790
							],
							[
								10883,
								10913
							],
							[
								11202,
								11236
							],
							[
								11898,
								11960
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function define(obj, ...args)",
							" function getConstructorChain(obj)",
							".extendArray = (proto = Array.prototype, def = util.define) =>"
						]
					},
					"AQAAAAAAAAAAAAAAdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					168,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0BAAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9ICooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gKigpCiooKQogIGlzQW55QXJyYXlCdWZmZXIodikKICBpc0FycmF5QnVmZmVyKHYpCiAgaXNCaWdJbnQ2NEFycmF5KHYpCiAgaXNCaWdVaW50NjRBcnJheSh2KQogIGlzRGF0ZSh2KQogIGlzRmxvYXQzMkFycmF5KHYpCiAgaXNGbG9hdDY0QXJyYXkodikKICBpc0ludDhBcnJheSh2KQogIGlzSW50MTZBcnJheSh2KQogIGlzSW50MzJBcnJheSh2KQogIGlzTWFwKHYpCiAgaXNQcm9taXNlKHYpCiAgaXNQcm94eSh2KQogIGlzUmVnRXhwKHYpCiAgaXNTZXQodikKICBpc1NoYXJlZEFycmF5QnVmZmVyKHYpCiAgaXNVaW50OEFycmF5KHYpCiAgaXNVaW50OENsYW1wZWRBcnJheSh2KQogIGlzVWludDE2QXJyYXkodikKICBpc1VpbnQzMkFycmF5KHYpCiAgaXNXZWFrTWFwKHYpCiAgaXNXZWFrU2V0KHYpCiAgaXNEYXRhVmlldyh2KQogIGlzQm9vbGVhbk9iamVjdCh2KQogIGlzQXN5bmNGdW5jdGlvbih2KQogIGlzR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc051bWJlck9iamVjdCh2KQogIGlzQmlnSW50T2JqZWN0KHYpCiAgaXNTeW1ib2xPYmplY3QodikKICBpc05hdGl2ZUVycm9yKHYpCiAgaXNNYXBJdGVyYXRvcih2KQogIGlzU2V0SXRlcmF0b3IodikKICBpc1N0cmluZ09iamVjdCh2KQogIGlzQXJyYXlCdWZmZXJWaWV3KHYpCiAgaXNBcmd1bWVudHNPYmplY3QodikKICBpc0JveGVkUHJpbWl0aXZlKHYpCiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					169,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
						"symkeys":
						[
							[
								930,
								950
							],
							[
								995,
								1011
							],
							[
								1065,
								1084
							],
							[
								1119,
								1135
							],
							[
								1191,
								1207
							],
							[
								1270,
								1304
							],
							[
								1327,
								1359
							],
							[
								1382,
								1425
							],
							[
								1666,
								1678
							],
							[
								3501,
								3520
							],
							[
								3618,
								3634
							],
							[
								3696,
								3714
							],
							[
								3778,
								3797
							],
							[
								3862,
								3871
							],
							[
								3926,
								3943
							],
							[
								4006,
								4023
							],
							[
								4086,
								4100
							],
							[
								4160,
								4175
							],
							[
								4236,
								4251
							],
							[
								4312,
								4320
							],
							[
								4374,
								4386
							],
							[
								4444,
								4454
							],
							[
								4510,
								4521
							],
							[
								4578,
								4586
							],
							[
								4640,
								4662
							],
							[
								4730,
								4745
							],
							[
								4806,
								4828
							],
							[
								4896,
								4912
							],
							[
								4974,
								4990
							],
							[
								5052,
								5064
							],
							[
								5122,
								5134
							],
							[
								5192,
								5205
							],
							[
								5264,
								5282
							],
							[
								5340,
								5358
							],
							[
								5422,
								5444
							],
							[
								5512,
								5539
							],
							[
								5612,
								5629
							],
							[
								5686,
								5703
							],
							[
								5760,
								5777
							],
							[
								5824,
								5840
							],
							[
								5923,
								5939
							],
							[
								6011,
								6027
							],
							[
								6099,
								6116
							],
							[
								6173,
								6193
							],
							[
								6252,
								6272
							],
							[
								6431,
								6450
							],
							[
								6526,
								6533
							],
							[
								6562,
								6582
							],
							[
								6652,
								6667
							],
							[
								6728,
								6754
							],
							[
								6832,
								6853
							],
							[
								6931,
								6957
							],
							[
								7003,
								7028
							],
							[
								7093,
								7135
							],
							[
								7269,
								7309
							],
							[
								9748,
								9791
							],
							[
								10244,
								10279
							],
							[
								10435,
								10453
							],
							[
								10483,
								10488
							],
							[
								10578,
								10605
							],
							[
								10724,
								10745
							],
							[
								10774,
								10790
							],
							[
								10883,
								10913
							],
							[
								11202,
								11236
							],
							[
								11898,
								11960
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function define(obj, ...args)",
							" function getConstructorChain(obj)",
							".extendArray = (proto = Array.prototype, def = util.define) =>"
						]
					},
					"AQAAAAAAAAAAAAAAdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					170,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0BAAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9ICooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gKigpCiooKQogIGlzQW55QXJyYXlCdWZmZXIodikKICBpc0FycmF5QnVmZmVyKHYpCiAgaXNCaWdJbnQ2NEFycmF5KHYpCiAgaXNCaWdVaW50NjRBcnJheSh2KQogIGlzRGF0ZSh2KQogIGlzRmxvYXQzMkFycmF5KHYpCiAgaXNGbG9hdDY0QXJyYXkodikKICBpc0ludDhBcnJheSh2KQogIGlzSW50MTZBcnJheSh2KQogIGlzSW50MzJBcnJheSh2KQogIGlzTWFwKHYpCiAgaXNQcm9taXNlKHYpCiAgaXNQcm94eSh2KQogIGlzUmVnRXhwKHYpCiAgaXNTZXQodikKICBpc1NoYXJlZEFycmF5QnVmZmVyKHYpCiAgaXNVaW50OEFycmF5KHYpCiAgaXNVaW50OENsYW1wZWRBcnJheSh2KQogIGlzVWludDE2QXJyYXkodikKICBpc1VpbnQzMkFycmF5KHYpCiAgaXNXZWFrTWFwKHYpCiAgaXNXZWFrU2V0KHYpCiAgaXNEYXRhVmlldyh2KQogIGlzQm9vbGVhbk9iamVjdCh2KQogIGlzQXN5bmNGdW5jdGlvbih2KQogIGlzR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc051bWJlck9iamVjdCh2KQogIGlzQmlnSW50T2JqZWN0KHYpCiAgaXNTeW1ib2xPYmplY3QodikKICBpc05hdGl2ZUVycm9yKHYpCiAgaXNNYXBJdGVyYXRvcih2KQogIGlzU2V0SXRlcmF0b3IodikKICBpc1N0cmluZ09iamVjdCh2KQogIGlzQXJyYXlCdWZmZXJWaWV3KHYpCiAgaXNBcmd1bWVudHNPYmplY3QodikKICBpc0JveGVkUHJpbWl0aXZlKHYpCiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					171,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
						"symkeys":
						[
							[
								930,
								950
							],
							[
								995,
								1011
							],
							[
								1065,
								1084
							],
							[
								1119,
								1135
							],
							[
								1191,
								1207
							],
							[
								1270,
								1304
							],
							[
								1327,
								1359
							],
							[
								1382,
								1425
							],
							[
								1666,
								1678
							],
							[
								3501,
								3520
							],
							[
								3618,
								3634
							],
							[
								3696,
								3714
							],
							[
								3778,
								3797
							],
							[
								3862,
								3871
							],
							[
								3926,
								3943
							],
							[
								4006,
								4023
							],
							[
								4086,
								4100
							],
							[
								4160,
								4175
							],
							[
								4236,
								4251
							],
							[
								4312,
								4320
							],
							[
								4374,
								4386
							],
							[
								4444,
								4454
							],
							[
								4510,
								4521
							],
							[
								4578,
								4586
							],
							[
								4640,
								4662
							],
							[
								4730,
								4745
							],
							[
								4806,
								4828
							],
							[
								4896,
								4912
							],
							[
								4974,
								4990
							],
							[
								5052,
								5064
							],
							[
								5122,
								5134
							],
							[
								5192,
								5205
							],
							[
								5264,
								5282
							],
							[
								5340,
								5358
							],
							[
								5422,
								5444
							],
							[
								5512,
								5539
							],
							[
								5612,
								5629
							],
							[
								5686,
								5703
							],
							[
								5760,
								5777
							],
							[
								5824,
								5840
							],
							[
								5923,
								5939
							],
							[
								6011,
								6027
							],
							[
								6099,
								6116
							],
							[
								6173,
								6193
							],
							[
								6252,
								6272
							],
							[
								6431,
								6450
							],
							[
								6526,
								6533
							],
							[
								6562,
								6582
							],
							[
								6652,
								6667
							],
							[
								6728,
								6754
							],
							[
								6832,
								6853
							],
							[
								6931,
								6957
							],
							[
								7003,
								7028
							],
							[
								7093,
								7135
							],
							[
								7269,
								7309
							],
							[
								9748,
								9791
							],
							[
								10244,
								10279
							],
							[
								10435,
								10453
							],
							[
								10483,
								10488
							],
							[
								10578,
								10605
							],
							[
								10724,
								10745
							],
							[
								10774,
								10790
							],
							[
								10883,
								10913
							],
							[
								11202,
								11236
							],
							[
								11898,
								11960
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function define(obj, ...args)",
							" function getConstructorChain(obj)",
							".extendArray = (proto = Array.prototype, def = util.define) =>"
						]
					},
					"AQAAAAAAAAAAAAAAdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					172,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0BAAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9ICooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gKigpCiooKQogIGlzQW55QXJyYXlCdWZmZXIodikKICBpc0FycmF5QnVmZmVyKHYpCiAgaXNCaWdJbnQ2NEFycmF5KHYpCiAgaXNCaWdVaW50NjRBcnJheSh2KQogIGlzRGF0ZSh2KQogIGlzRmxvYXQzMkFycmF5KHYpCiAgaXNGbG9hdDY0QXJyYXkodikKICBpc0ludDhBcnJheSh2KQogIGlzSW50MTZBcnJheSh2KQogIGlzSW50MzJBcnJheSh2KQogIGlzTWFwKHYpCiAgaXNQcm9taXNlKHYpCiAgaXNQcm94eSh2KQogIGlzUmVnRXhwKHYpCiAgaXNTZXQodikKICBpc1NoYXJlZEFycmF5QnVmZmVyKHYpCiAgaXNVaW50OEFycmF5KHYpCiAgaXNVaW50OENsYW1wZWRBcnJheSh2KQogIGlzVWludDE2QXJyYXkodikKICBpc1VpbnQzMkFycmF5KHYpCiAgaXNXZWFrTWFwKHYpCiAgaXNXZWFrU2V0KHYpCiAgaXNEYXRhVmlldyh2KQogIGlzQm9vbGVhbk9iamVjdCh2KQogIGlzQXN5bmNGdW5jdGlvbih2KQogIGlzR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc051bWJlck9iamVjdCh2KQogIGlzQmlnSW50T2JqZWN0KHYpCiAgaXNTeW1ib2xPYmplY3QodikKICBpc05hdGl2ZUVycm9yKHYpCiAgaXNNYXBJdGVyYXRvcih2KQogIGlzU2V0SXRlcmF0b3IodikKICBpc1N0cmluZ09iamVjdCh2KQogIGlzQXJyYXlCdWZmZXJWaWV3KHYpCiAgaXNBcmd1bWVudHNPYmplY3QodikKICBpc0JveGVkUHJpbWl0aXZlKHYpCiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					173,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
						"symkeys":
						[
							[
								930,
								950
							],
							[
								995,
								1011
							],
							[
								1065,
								1084
							],
							[
								1119,
								1135
							],
							[
								1191,
								1207
							],
							[
								1270,
								1304
							],
							[
								1327,
								1359
							],
							[
								1382,
								1425
							],
							[
								1666,
								1678
							],
							[
								3501,
								3520
							],
							[
								3618,
								3634
							],
							[
								3696,
								3714
							],
							[
								3778,
								3797
							],
							[
								3862,
								3871
							],
							[
								3926,
								3943
							],
							[
								4006,
								4023
							],
							[
								4086,
								4100
							],
							[
								4160,
								4175
							],
							[
								4236,
								4251
							],
							[
								4312,
								4320
							],
							[
								4374,
								4386
							],
							[
								4444,
								4454
							],
							[
								4510,
								4521
							],
							[
								4578,
								4586
							],
							[
								4640,
								4662
							],
							[
								4730,
								4745
							],
							[
								4806,
								4828
							],
							[
								4896,
								4912
							],
							[
								4974,
								4990
							],
							[
								5052,
								5064
							],
							[
								5122,
								5134
							],
							[
								5192,
								5205
							],
							[
								5264,
								5282
							],
							[
								5340,
								5358
							],
							[
								5422,
								5444
							],
							[
								5512,
								5539
							],
							[
								5612,
								5629
							],
							[
								5686,
								5703
							],
							[
								5760,
								5777
							],
							[
								5824,
								5840
							],
							[
								5923,
								5939
							],
							[
								6011,
								6027
							],
							[
								6099,
								6116
							],
							[
								6173,
								6193
							],
							[
								6252,
								6272
							],
							[
								6431,
								6450
							],
							[
								6526,
								6533
							],
							[
								6562,
								6582
							],
							[
								6652,
								6667
							],
							[
								6728,
								6754
							],
							[
								6832,
								6853
							],
							[
								6931,
								6957
							],
							[
								7003,
								7028
							],
							[
								7093,
								7135
							],
							[
								7269,
								7309
							],
							[
								9748,
								9791
							],
							[
								10244,
								10279
							],
							[
								10435,
								10453
							],
							[
								10483,
								10488
							],
							[
								10578,
								10605
							],
							[
								10724,
								10745
							],
							[
								10774,
								10790
							],
							[
								10883,
								10913
							],
							[
								11202,
								11236
							],
							[
								11898,
								11960
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function define(obj, ...args)",
							" function getConstructorChain(obj)",
							".extendArray = (proto = Array.prototype, def = util.define) =>"
						]
					},
					"AQAAAAAAAAAAAAAAdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					174,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
						"symkeys":
						[
							[
								930,
								950
							],
							[
								995,
								1011
							],
							[
								1065,
								1084
							],
							[
								1119,
								1135
							],
							[
								1191,
								1207
							],
							[
								1270,
								1304
							],
							[
								1327,
								1359
							],
							[
								1382,
								1425
							],
							[
								1666,
								1678
							],
							[
								3501,
								3520
							],
							[
								3618,
								3634
							],
							[
								3696,
								3714
							],
							[
								3778,
								3797
							],
							[
								3862,
								3871
							],
							[
								3926,
								3943
							],
							[
								4006,
								4023
							],
							[
								4086,
								4100
							],
							[
								4160,
								4175
							],
							[
								4236,
								4251
							],
							[
								4312,
								4320
							],
							[
								4374,
								4386
							],
							[
								4444,
								4454
							],
							[
								4510,
								4521
							],
							[
								4578,
								4586
							],
							[
								4640,
								4662
							],
							[
								4730,
								4745
							],
							[
								4806,
								4828
							],
							[
								4896,
								4912
							],
							[
								4974,
								4990
							],
							[
								5052,
								5064
							],
							[
								5122,
								5134
							],
							[
								5192,
								5205
							],
							[
								5264,
								5282
							],
							[
								5340,
								5358
							],
							[
								5422,
								5444
							],
							[
								5512,
								5539
							],
							[
								5612,
								5629
							],
							[
								5686,
								5703
							],
							[
								5760,
								5777
							],
							[
								5824,
								5840
							],
							[
								5923,
								5939
							],
							[
								6011,
								6027
							],
							[
								6099,
								6116
							],
							[
								6173,
								6193
							],
							[
								6252,
								6272
							],
							[
								6431,
								6450
							],
							[
								6526,
								6533
							],
							[
								6562,
								6582
							],
							[
								6652,
								6667
							],
							[
								6728,
								6754
							],
							[
								6832,
								6853
							],
							[
								6931,
								6957
							],
							[
								7003,
								7028
							],
							[
								7093,
								7135
							],
							[
								7269,
								7309
							],
							[
								9748,
								9791
							],
							[
								10244,
								10279
							],
							[
								10435,
								10453
							],
							[
								10483,
								10488
							],
							[
								10578,
								10605
							],
							[
								10724,
								10745
							],
							[
								10774,
								10790
							],
							[
								10883,
								10913
							],
							[
								11202,
								11236
							],
							[
								11898,
								11960
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function define(obj, ...args)",
							" function getConstructorChain(obj)",
							".extendArray = (proto = Array.prototype, def = util.define) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB0BAAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9ICooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gKigpCiooKQogIGlzQW55QXJyYXlCdWZmZXIodikKICBpc0FycmF5QnVmZmVyKHYpCiAgaXNCaWdJbnQ2NEFycmF5KHYpCiAgaXNCaWdVaW50NjRBcnJheSh2KQogIGlzRGF0ZSh2KQogIGlzRmxvYXQzMkFycmF5KHYpCiAgaXNGbG9hdDY0QXJyYXkodikKICBpc0ludDhBcnJheSh2KQogIGlzSW50MTZBcnJheSh2KQogIGlzSW50MzJBcnJheSh2KQogIGlzTWFwKHYpCiAgaXNQcm9taXNlKHYpCiAgaXNQcm94eSh2KQogIGlzUmVnRXhwKHYpCiAgaXNTZXQodikKICBpc1NoYXJlZEFycmF5QnVmZmVyKHYpCiAgaXNVaW50OEFycmF5KHYpCiAgaXNVaW50OENsYW1wZWRBcnJheSh2KQogIGlzVWludDE2QXJyYXkodikKICBpc1VpbnQzMkFycmF5KHYpCiAgaXNXZWFrTWFwKHYpCiAgaXNXZWFrU2V0KHYpCiAgaXNEYXRhVmlldyh2KQogIGlzQm9vbGVhbk9iamVjdCh2KQogIGlzQXN5bmNGdW5jdGlvbih2KQogIGlzR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc051bWJlck9iamVjdCh2KQogIGlzQmlnSW50T2JqZWN0KHYpCiAgaXNTeW1ib2xPYmplY3QodikKICBpc05hdGl2ZUVycm9yKHYpCiAgaXNNYXBJdGVyYXRvcih2KQogIGlzU2V0SXRlcmF0b3IodikKICBpc1N0cmluZ09iamVjdCh2KQogIGlzQXJyYXlCdWZmZXJWaWV3KHYpCiAgaXNBcmd1bWVudHNPYmplY3QodikKICBpc0JveGVkUHJpbWl0aXZlKHYpCiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopAAAAAAAAAAB0BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAQAACAgdXRpbCgpCkFzeW5jRnVuY3Rpb24gPSB4KCkKR2VuZXJhdG9yRnVuY3Rpb24gPSAqKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9ICooKQoqKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGlzR2VuZXJhdG9yT2JqZWN0KHYpCiAgaXNUeXBlZEFycmF5KHYpCiAgaXNNb2R1bGVOYW1lc3BhY2VPYmplY3QodikKICBpc09iamVjdCh2KQogIGhhc0J1aWx0SW4obywgbSkKICBmb3JtYXQoLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9ucyhvcHRzLCAuLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zSW50ZXJuYWwobywgdikKICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBzZXRJbnRlcnZhbChjYWxsYmFjaywgbXMpCiAgc3RhcnQoKQogIGNsZWFySW50ZXJ2YWwoaWQpCiAgbWVtb2l6ZShmbikKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKQAAAAAAAAAAdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					175,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								441,
								463
							],
							[
								512,
								525
							],
							[
								566,
								584
							],
							[
								1558,
								1575
							],
							[
								1585,
								1593
							],
							[
								1611,
								1619
							],
							[
								1684,
								1694
							],
							[
								1708,
								1724
							],
							[
								1827,
								1843
							],
							[
								2083,
								2103
							],
							[
								2225,
								2245
							],
							[
								2733,
								2753
							],
							[
								2984,
								3003
							],
							[
								6551,
								6573
							],
							[
								8035,
								8057
							],
							[
								8262,
								8277
							],
							[
								8391,
								8417
							],
							[
								8861,
								8897
							],
							[
								9258,
								9280
							],
							[
								9599,
								9621
							],
							[
								10633,
								10647
							],
							[
								12187,
								12201
							],
							[
								13331,
								13353
							],
							[
								15207,
								15224
							],
							[
								15611,
								15628
							],
							[
								16633,
								16650
							],
							[
								18411,
								18427
							],
							[
								29701,
								29711
							],
							[
								30621,
								30640
							],
							[
								31042,
								31069
							],
							[
								31119,
								31146
							],
							[
								31397,
								31418
							],
							[
								31650,
								31665
							],
							[
								32548,
								32562
							],
							[
								32592,
								32606
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0BAAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9ICooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gKigpCiooKQogIGlzQW55QXJyYXlCdWZmZXIodikKICBpc0FycmF5QnVmZmVyKHYpCiAgaXNCaWdJbnQ2NEFycmF5KHYpCiAgaXNCaWdVaW50NjRBcnJheSh2KQogIGlzRGF0ZSh2KQogIGlzRmxvYXQzMkFycmF5KHYpCiAgaXNGbG9hdDY0QXJyYXkodikKICBpc0ludDhBcnJheSh2KQogIGlzSW50MTZBcnJheSh2KQogIGlzSW50MzJBcnJheSh2KQogIGlzTWFwKHYpCiAgaXNQcm9taXNlKHYpCiAgaXNQcm94eSh2KQogIGlzUmVnRXhwKHYpCiAgaXNTZXQodikKICBpc1NoYXJlZEFycmF5QnVmZmVyKHYpCiAgaXNVaW50OEFycmF5KHYpCiAgaXNVaW50OENsYW1wZWRBcnJheSh2KQogIGlzVWludDE2QXJyYXkodikKICBpc1VpbnQzMkFycmF5KHYpCiAgaXNXZWFrTWFwKHYpCiAgaXNXZWFrU2V0KHYpCiAgaXNEYXRhVmlldyh2KQogIGlzQm9vbGVhbk9iamVjdCh2KQogIGlzQXN5bmNGdW5jdGlvbih2KQogIGlzR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc051bWJlck9iamVjdCh2KQogIGlzQmlnSW50T2JqZWN0KHYpCiAgaXNTeW1ib2xPYmplY3QodikKICBpc05hdGl2ZUVycm9yKHYpCiAgaXNNYXBJdGVyYXRvcih2KQogIGlzU2V0SXRlcmF0b3IodikKICBpc1N0cmluZ09iamVjdCh2KQogIGlzQXJyYXlCdWZmZXJWaWV3KHYpCiAgaXNBcmd1bWVudHNPYmplY3QodikKICBpc0JveGVkUHJpbWl0aXZlKHYpCiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopAAAAAAAAAAA+BQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "quickjs-inspect.c",
			"settings":
			{
				"buffer_size": 32951,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					515,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAACEEAAAAAAAAIgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQQAAAAAAAAhBAAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAHwEAAAAAAAAfQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAQAAAAAAAB8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAjQQAAAAAAACNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					685,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADcEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA4BAAAAAAAAAgAAAAgKGRlcHRoKQ",
					"AQAAAAAAAAABAAAANwQAAAAAAAA/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					686,
					1,
					"paste",
					null,
					"AQAAADgEAAAAAAAARQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEUEAAAAAAAARwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQQAAAAAAABFBAAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": "opts"
					},
					"BAAAAEYEAAAAAAAARwQAAAAAAAAAAAAARwQAAAAAAABIBAAAAAAAAAAAAABIBAAAAAAAAEkEAAAAAAAAAAAAAEkEAAAAAAAASgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgQAAAAAAABGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					701,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAARAQAAAAAAABEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					704,
					1,
					"unindent",
					null,
					"AQAAACADAAAAAAAAIAMAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAUwMAAAAAAABTAwAAAAAAAAAAAAAAAPC/"
				],
				[
					706,
					1,
					"transpose",
					null,
					"AgAAAFEDAAAAAAAAUgMAAAAAAAABAAAAIFADAAAAAAAAUQMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAUQMAAAAAAABRAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-misc.c",
			"settings":
			{
				"buffer_size": 36049,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/stack.js",
			"settings":
			{
				"buffer_size": 7842,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "util'"
					},
					"BgAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbAAAAAAAAAAUAAABtaXNjJxsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					4,
					"left_delete",
					null,
					"BAAAAD4AAAAAAAAAPgAAAAAAAAABAAAAYz0AAAAAAAAAPQAAAAAAAAABAAAAczwAAAAAAAAAPAAAAAAAAAABAAAAaTsAAAAAAAAAOwAAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "util"
					},
					"BAAAADsAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwAAAAAAAAA7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "lexer"
					},
					"BgAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbAAAAAAAAAAQAAAB1dGlsGwAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"paste",
					null,
					"AgAAADwAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABBAAAAAAAAAAQAAAB1dGls",
					"AQAAAAAAAAABAAAAPAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 13168,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					33,
					1,
					"paste",
					null,
					"AgAAADUwAAAAAAAAPDMAAAAAAAAAAAAAPDMAAAAAAAA8MwAAAAAAADYAAAB0b1N0cmluZywgdG9BcnJheUJ1ZmZlciwgYnRvYSwgYXRvYiwgZ2V0UHJvdG90eXBlQ2hhaW4",
					"AQAAAAAAAAABAAAANTAAAAAAAABrMAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABvMwAAaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CmltcG9ydCB7CiAgU3lzY2FsbEVycm9yLAogIGFycmF5VG9CaXRmaWVsZCwKICBhdG9iLAogIGF0b21Ub1N0cmluZywKICBhdG9tVG9WYWx1ZSwKICBiaXRmaWVsZFRvQXJyYXksCiAgYnRvYSwKICBjb21waWxlRmlsZSwKICBjb25jYXRBcnJheUJ1ZmZlciwKICBkdXBBcnJheUJ1ZmZlciwKICBldmFsQmluYXJ5LAogIGdldEJ5dGVDb2RlLAogIGdldENsYXNzQXRvbSwKICBnZXRDbGFzc0NvbnN0cnVjdG9yLAogIGdldENsYXNzQ291bnQsCiAgZ2V0Q2xhc3NJRCwKICBnZXRDbGFzc05hbWUsCiAgZ2V0Q2xhc3NQcm90bywKICBnZXRDb21tYW5kTGluZSwKICBnZXRDdXJyZW50V29ya2luZ0RpcmVjdG9yeSwKICBnZXRFeGVjdXRhYmxlLAogIGdldEZpbGVEZXNjcmlwdG9yLAogIGdldE9wQ29kZXMsCiAgZ2V0UGVyZm9ybWFuY2VDb3VudGVyLAogIGdldFByb2NNYXBzLAogIGdldFByb2NNb3VudHMsCiAgZ2V0UHJvY1N0YXQsCiAgZ2V0UHJvdG90eXBlQ2hhaW4sCiAgZ2V0Um9vdERpcmVjdG9yeSwKICBnZXRlZ2lkLAogIGdldGV1aWQsCiAgZ2V0Z2lkLAogIGdldHBpZCwKICBnZXRwcGlkLAogIGdldHNpZCwKICBnZXR1aWQsCiAgaHJ0aW1lLAogIHJlYWRPYmplY3QsCiAgcmVzaXplQXJyYXlCdWZmZXIsCiAgc2V0ZWdpZCwKICBzZXRldWlkLAogIHNldGdpZCwKICBzZXR1aWQsCiAgdG9BcnJheUJ1ZmZlciwKICB0b1BvaW50ZXIsCiAgdG9TdHJpbmcsCiAgdW5hbWUsCiAgdmFsdWVQdHIsCiAgdmFsdWVUYWcsCiAgdmFsdWVUb0F0b20sCiAgdmFsdWVUeXBlLAogIHdyaXRlT2JqZWN0Cn0gZnJvbSAnbWlzYyc7CmltcG9ydCB7IGV4dGVuZEFycmF5LCBBcnJheUV4dGVuc2lvbnMgfSBmcm9tICcuL2V4dGVuZEFycmF5LmpzJzsKaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnOwoKY29uc3Qgc2xpY2UgPSAoeCwgcywgZSkgPT4gU3RyaW5nLnByb3RvdHlwZS5zbGljZS5jYWxsKHgsIHMsIGUpOwpjb25zdCBzdHJpbmdpZnkgPSB2ID0+IGAke3Z9YDsKY29uc3QgcHJvdG9PZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjsKY29uc3QgZm9ybWF0TnVtYmVyID0gbiA9PiAobiA9PT0gLTAgPyAnLTAnIDogYCR7bn1gKTsKY29uc3QgaXNOYXRpdmUgPSBmbiA9PiAvXFtuYXRpdmVcc2NvZGVcXS8udGVzdChzdHJpbmdpZnkoZm4pKTsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHV0aWwoKSB7CiAgcmV0dXJuIHV0aWw7Cn0KCnV0aWwucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gdXRpbDsKCmNvbnN0IEFzeW5jRnVuY3Rpb24gPSBhc3luYyBmdW5jdGlvbiB4KCkge30uY29uc3RydWN0b3I7CmNvbnN0IEdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qICgpIHt9LmNvbnN0cnVjdG9yOwpjb25zdCBBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gYXN5bmMgZnVuY3Rpb24qICgpIHt9LmNvbnN0cnVjdG9yOwpjb25zdCBUeXBlZEFycmF5ID0gcHJvdG9PZihwcm90b09mKG5ldyBVaW50MTZBcnJheSgxMCkpKS5jb25zdHJ1Y3RvcjsKCmNvbnN0IFNldEl0ZXJhdG9yUHJvdG90eXBlID0gcHJvdG9PZihuZXcgU2V0KCkudmFsdWVzKCkpOwpjb25zdCBNYXBJdGVyYXRvclByb3RvdHlwZSA9IHByb3RvT2YobmV3IE1hcCgpLmVudHJpZXMoKSk7CmNvbnN0IEdlbmVyYXRvclByb3RvdHlwZSA9IHByb3RvT2YoKGZ1bmN0aW9uKiAoKSB7fSkoKSk7CgpleHBvcnQgY29uc3QgZXJyb3JzID0gWwogIG51bGwsCiAgJ0VQRVJNJywKICAnRU5PRU5UJywKICAnRVNSQ0gnLAogICdFSU5UUicsCiAgJ0VJTycsCiAgJ0VOWElPJywKICAnRTJCSUcnLAogICdFTk9FWEVDJywKICAnRUJBREYnLAogICdFQ0hJTEQnLAogICdFQUdBSU4nLAogICdFTk9NRU0nLAogICdFQUNDRVMnLAogICdFRkFVTFQnLAogICdFTk9UQkxLJywKICAnRUJVU1knLAogICdFRVhJU1QnLAogICdFWERFVicsCiAgJ0VOT0RFVicsCiAgJ0VOT1RESVInLAogICdFSVNESVInLAogICdFSU5WQUwnLAogICdFTkZJTEUnLAogICdFTUZJTEUnLAogICdFTk9UVFknLAogICdFVFhUQlNZJywKICAnRUZCSUcnLAogICdFTk9TUEMnLAogICdFU1BJUEUnLAogICdFUk9GUycsCiAgJ0VNTElOSycsCiAgJ0VQSVBFJywKICAnRURPTScsCiAgJ0VSQU5HRScsCiAgJ0VERUFETEsnLAogICdFTkFNRVRPT0xPTkcnLAogICdFTk9MQ0snLAogICdFTk9TWVMnLAogICdFTk9URU1QVFknLAogIG51bGwsCiAgbnVsbCwKICAnRU5PTVNHJywKICAnRUlEUk0nLAogICdFQ0hSTkcnLAogICdFTDJOU1lOQycsCiAgJ0VMM0hMVCcsCiAgJ0VMM1JTVCcsCiAgJ0VMTlJORycsCiAgJ0VVTkFUQ0gnLAogICdFTk9DU0knLAogICdFTDJITFQnLAogICdFQkFERScsCiAgJ0VCQURSJywKICAnRVhGVUxMJywKICAnRU5PQU5PJywKICAnRUJBRFJRQycsCiAgbnVsbCwKICAnJywKICAnRUJGT05UJywKICAnRU5PU1RSJywKICAnRU5PREFUQScsCiAgJ0VUSU1FJywKICAnRU5PU1InLAogICdFTk9ORVQnLAogICdFTk9QS0cnLAogICdFUkVNT1RFJywKICAnRU5PTElOSycsCiAgJ0VBRFYnLAogICdFU1JNTlQnLAogICdFQ09NTScsCiAgJ0VQUk9UTycsCiAgJ0VNVUxUSUhPUCcsCiAgJ0VET1RET1QnLAogICdFQkFETVNHJywKICAnRU9WRVJGTE9XJywKICAnRU5PVFVOSVEnLAogICdFQkFERkQnLAogICdFUkVNQ0hHJywKICAnRUxJQkFDQycsCiAgJ0VMSUJCQUQnLAogICdFTElCU0NOJywKICAnRUxJQk1BWCcsCiAgJ0VMSUJFWEVDJywKICAnRUlMU0VRJywKICAnRVJFU1RBUlQnLAogICdFU1RSUElQRScsCiAgJ0VVU0VSUycsCiAgJ0VOT1RTT0NLJywKICAnRURFU1RBRERSUkVRJywKICAnRU1TR1NJWkUnLAogICdFUFJPVE9UWVBFJywKICAnRU5PUFJPVE9PUFQnLAogICdFUFJPVE9OT1NVUFBPUlQnLAogICdFU09DS1ROT1NVUFBPUlQnLAogICdFT1BOT1RTVVBQJywKICAnRVBGTk9TVVBQT1JUJywKICAnRUFGTk9TVVBQT1JUJywKICAnRUFERFJJTlVTRScsCiAgJ0VBRERSTk9UQVZBSUwnLAogICdFTkVURE9XTicsCiAgJ0VORVRVTlJFQUNIJywKICAnRU5FVFJFU0VUJywKICAnRUNPTk5BQk9SVEVEJywKICAnRUNPTk5SRVNFVCcsCiAgJ0VOT0JVRlMnLAogICdFSVNDT05OJywKICAnRU5PVENPTk4nLAogICdFU0hVVERPV04nLAogICdFVE9PTUFOWVJFRlMnLAogICdFVElNRURPVVQnLAogICdFQ09OTlJFRlVTRUQnLAogICdFSE9TVERPV04nLAogICdFSE9TVFVOUkVBQ0gnLAogICdFQUxSRUFEWScsCiAgJ0VJTlBST0dSRVNTJywKICAnRVNUQUxFJywKICAnRVVDTEVBTicsCiAgJ0VOT1ROQU0nLAogICdFTkFWQUlMJywKICAnRUlTTkFNJywKICAnRVJFTU9URUlPJywKICAnRURRVU9UJywKICAnRU5PTUVESVVNJywKICAnRU1FRElVTVRZUEUnLAogICdFQ0FOQ0VMRUQnLAogICdFTk9LRVknLAogICdFS0VZRVhQSVJFRCcsCiAgJ0VLRVlSRVZPS0VEJywKICAnRUtFWVJFSkVDVEVEJywKICAnRU9XTkVSREVBRCcsCiAgJ0VOT1RSRUNPVkVSQUJMRScsCiAgJ0VSRktJTEwnCl07CgpleHBvcnQgY29uc3QgdHlwZXMgPSB7CiAgaXNBbnlBcnJheUJ1ZmZlcih2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgKHYgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fCB2IGluc3RhbmNlb2YgU2hhcmVkQXJyYXlCdWZmZXIpOwogIH0sCiAgaXNBcnJheUJ1ZmZlcih2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgdiBpbnN0YW5jZW9mIEFycmF5QnVmZmVyOwogIH0sCiAgaXNCaWdJbnQ2NEFycmF5KHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgQmlnSW50NjRBcnJheTsKICB9LAogIGlzQmlnVWludDY0QXJyYXkodikgewogICAgcmV0dXJuIGlzT2JqZWN0KHYpICYmIHYgaW5zdGFuY2VvZiBCaWdVaW50NjRBcnJheTsKICB9LAogIGlzRGF0ZSh2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgdiBpbnN0YW5jZW9mIERhdGU7CiAgfSwKICBpc0Zsb2F0MzJBcnJheSh2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgdiBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheTsKICB9LAogIGlzRmxvYXQ2NEFycmF5KHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgRmxvYXQ2NEFycmF5OwogIH0sCiAgaXNJbnQ4QXJyYXkodikgewogICAgcmV0dXJuIGlzT2JqZWN0KHYpICYmIHYgaW5zdGFuY2VvZiBJbnQ4QXJyYXk7CiAgfSwKICBpc0ludDE2QXJyYXkodikgewogICAgcmV0dXJuIGlzT2JqZWN0KHYpICYmIHYgaW5zdGFuY2VvZiBJbnQxNkFycmF5OwogIH0sCiAgaXNJbnQzMkFycmF5KHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgSW50MzJBcnJheTsKICB9LAogIGlzTWFwKHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgTWFwOwogIH0sCiAgaXNQcm9taXNlKHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgUHJvbWlzZTsKICB9LAogIGlzUHJveHkodikgewogICAgcmV0dXJuIGlzT2JqZWN0KHYpICYmIHYgaW5zdGFuY2VvZiBQcm94eTsKICB9LAogIGlzUmVnRXhwKHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgUmVnRXhwOwogIH0sCiAgaXNTZXQodikgewogICAgcmV0dXJuIGlzT2JqZWN0KHYpICYmIHYgaW5zdGFuY2VvZiBTZXQ7CiAgfSwKICBpc1NoYXJlZEFycmF5QnVmZmVyKHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgU2hhcmVkQXJyYXlCdWZmZXI7CiAgfSwKICBpc1VpbnQ4QXJyYXkodikgewogICAgcmV0dXJuIGlzT2JqZWN0KHYpICYmIHYgaW5zdGFuY2VvZiBVaW50OEFycmF5OwogIH0sCiAgaXNVaW50OENsYW1wZWRBcnJheSh2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgdiBpbnN0YW5jZW9mIFVpbnQ4Q2xhbXBlZEFycmF5OwogIH0sCiAgaXNVaW50MTZBcnJheSh2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgdiBpbnN0YW5jZW9mIFVpbnQxNkFycmF5OwogIH0sCiAgaXNVaW50MzJBcnJheSh2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgdiBpbnN0YW5jZW9mIFVpbnQzMkFycmF5OwogIH0sCiAgaXNXZWFrTWFwKHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgV2Vha01hcDsKICB9LAogIGlzV2Vha1NldCh2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgdiBpbnN0YW5jZW9mIFdlYWtTZXQ7CiAgfSwKICBpc0RhdGFWaWV3KHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgRGF0YVZpZXc7CiAgfSwKICBpc0Jvb2xlYW5PYmplY3QodikgewogICAgcmV0dXJuIGlzT2JqZWN0KHYpICYmIHYgaW5zdGFuY2VvZiBCb29sZWFuOwogIH0sCiAgaXNBc3luY0Z1bmN0aW9uKHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgQXN5bmNGdW5jdGlvbjsKICB9LAogIGlzR2VuZXJhdG9yRnVuY3Rpb24odikgewogICAgcmV0dXJuIGlzT2JqZWN0KHYpICYmIHYgaW5zdGFuY2VvZiBHZW5lcmF0b3JGdW5jdGlvbjsKICB9LAogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgdiBpbnN0YW5jZW9mIEFzeW5jR2VuZXJhdG9yRnVuY3Rpb247CiAgfSwKICBpc051bWJlck9iamVjdCh2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgdiBpbnN0YW5jZW9mIE51bWJlcjsKICB9LAogIGlzQmlnSW50T2JqZWN0KHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgQmlnSW50OwogIH0sCiAgaXNTeW1ib2xPYmplY3QodikgewogICAgcmV0dXJuIHYgJiYgdiBpbnN0YW5jZW9mIFN5bWJvbDsKICB9LAogIGlzTmF0aXZlRXJyb3IodikgewogICAgcmV0dXJuIGlzT2JqZWN0KHYpICYmIHYgaW5zdGFuY2VvZiBFcnJvciAmJiBpc05hdGl2ZSh2LmNvbnN0cnVjdG9yKTsKICB9LAogIGlzTWFwSXRlcmF0b3IodikgewogICAgcmV0dXJuIGlzT2JqZWN0KHYpICYmIHByb3RvT2YodikgPT0gTWFwSXRlcmF0b3JQcm90b3R5cGU7CiAgfSwKICBpc1NldEl0ZXJhdG9yKHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiBwcm90b09mKHYpID09IFNldEl0ZXJhdG9yUHJvdG90eXBlOwogIH0sCiAgaXNTdHJpbmdPYmplY3QodikgewogICAgcmV0dXJuIGlzT2JqZWN0KHYpICYmIHYgaW5zdGFuY2VvZiBTdHJpbmc7CiAgfSwKICBpc0FycmF5QnVmZmVyVmlldyh2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgQXJyYXlCdWZmZXIuaXNWaWV3KHYpOwogIH0sCiAgaXNBcmd1bWVudHNPYmplY3QodikgewogICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2KSA9PSAnW29iamVjdCBBcmd1bWVudHNdJzsKICB9LAoKICAvKiBpc0V4dGVybmFsKHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiB2IGluc3RhbmNlb2YgRXh0ZXJuYWw7CiAgfSwqLwoKICBpc0JveGVkUHJpbWl0aXZlKHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiBbTnVtYmVyLCBTdHJpbmcsIEJvb2xlYW4sIEJpZ0ludCwgU3ltYm9sXS5zb21lKGN0b3IgPT4gdiBpbnN0YW5jZW9mIGN0b3IpOwogIH0sCgogIGlzR2VuZXJhdG9yT2JqZWN0KHYpIHsKICAgIHJldHVybiBpc09iamVjdCh2KSAmJiBwcm90b09mKHYpID09IEdlbmVyYXRvclByb3RvdHlwZTsKICB9LAogIGlzVHlwZWRBcnJheSh2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgdiBpbnN0YW5jZW9mIFR5cGVkQXJyYXk7CiAgfSwKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KSB7CiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgdltTeW1ib2wudG9TdHJpbmdUYWddID09ICdNb2R1bGUnOwogIH0KfTsKCmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdCh2KSB7CiAgcmV0dXJuIHYgIT0gbnVsbCAmJiB7IGZ1bmN0aW9uOiB0cnVlLCBvYmplY3Q6IHRydWUgfVt0eXBlb2Ygdl07Cn0KCmV4cG9ydCBmdW5jdGlvbiBoYXNCdWlsdEluKG8sIG0pIHsKICByZXR1cm4gaXNOYXRpdmUocHJvdG9PZihvKVttXSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoLi4uYXJncykgewogIHJldHVybiBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKHVuZGVmaW5lZCwgYXJncyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRXaXRoT3B0aW9ucyhvcHRzLCAuLi5hcmdzKSB7CiAgaWYoIWlzT2JqZWN0KG9wdHMpKSB0aHJvdyBuZXcgVHlwZUVycm9yKGBvcHRpb25zIGFyZ3VtZW50IGlzIG5vdCBhbiBvYmplY3RgKTsKICByZXR1cm4gZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvcHRzLCBhcmdzKTsKfQoKZnVuY3Rpb24gZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KSB7CiAgY29uc3QgeCA9IHZbMF07CiAgbGV0IGEgPSAwOwogIGxldCBzID0gJyc7CiAgbGV0IGogPSAnJzsKICBpZih0eXBlb2YgeCA9PT0gJ3N0cmluZycpIHsKICAgIGlmKHYubGVuZ3RoID09PSAxKSByZXR1cm4geDsKICAgIGxldCB0OwogICAgbGV0IHAgPSAwOwogICAgZm9yKGxldCBpID0gMDsgaSA8IHgubGVuZ3RoIC0gMTsgaSsrKSB7CiAgICAgIGlmKHhbaV0gPT0gJyUnKSB7CiAgICAgICAgY29uc3QgYyA9IFN0cmluZy5wcm90b3R5cGUuY2hhckNvZGVBdC5jYWxsKHgsICsraSk7CiAgICAgICAgaWYoYSArIDEgIT09IHYubGVuZ3RoKSB7CiAgICAgICAgICBzd2l0Y2ggKGMpIHsKICAgICAgICAgICAgY2FzZSAxMTU6CiAgICAgICAgICAgICAgY29uc3QgeSA9IHZbKythXTsKICAgICAgICAgICAgICBpZih0eXBlb2YgeSA9PT0gJ251bWJlcicpIHQgPSBmb3JtYXROdW1iZXIoeSk7CiAgICAgICAgICAgICAgZWxzZSBpZih0eXBlb2YgeSA9PT0gJ2JpZ2ludCcpIHQgPSBgJHt5fW5gOwogICAgICAgICAgICAgIGVsc2UgaWYodHlwZW9mIHkgIT09ICdvYmplY3QnIHx8IHkgPT09IG51bGwgfHwgIWhhc0J1aWx0SW4oeSwgJ3RvU3RyaW5nJykpCiAgICAgICAgICAgICAgICB0ID0gU3RyaW5nKHkpOwogICAgICAgICAgICAgIGVsc2UgdCA9IGluc3BlY3QoeSwgeyAuLi5vLCBjb21wYWN0OiAzLCBjb2xvcnM6IGZhbHNlLCBkZXB0aDogMCB9KTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAxMDY6CiAgICAgICAgICAgICAgdCA9IHN0cmluZ2lmeSh2WysrYV0pOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDEwMDoKICAgICAgICAgICAgICBjb25zdCBuID0gdlsrK2FdOwogICAgICAgICAgICAgIGlmKHR5cGVvZiBuID09PSAnYmlnaW50JykgdCA9IGAkbnVtbmA7CiAgICAgICAgICAgICAgZWxzZSBpZih0eXBlb2YgbiA9PT0gJ3N5bWJvbCcpIHQgPSAnTmFOJzsKICAgICAgICAgICAgICBlbHNlIHQgPSBmb3JtYXROdW1iZXIoTnVtYmVyKG4pKTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSA3OToKICAgICAgICAgICAgICB0ID0gaW5zcGVjdCh2WysrYV0sIG8pOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDExMToKICAgICAgICAgICAgICB0ID0gaW5zcGVjdCh2WysrYV0sIHsKICAgICAgICAgICAgICAgIC4uLm8sCiAgICAgICAgICAgICAgICBzaG93SGlkZGVuOiB0cnVlLAogICAgICAgICAgICAgICAgc2hvd1Byb3h5OiB0cnVlLAogICAgICAgICAgICAgICAgZGVwdGg6IDQKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAxMDU6CiAgICAgICAgICAgICAgY29uc3QgayA9IHZbKythXTsKICAgICAgICAgICAgICBpZih0eXBlb2YgayA9PT0gJ2JpZ2ludCcpIHQgPSBgJHtrfWA7CiAgICAgICAgICAgICAgZWxzZSBpZih0eXBlb2YgayA9PT0gJ3N5bWJvbCcpIHQgPSAnTmFOJzsKICAgICAgICAgICAgICBlbHNlIHQgPSBmb3JtYXROdW1iZXIocGFyc2VJbnQoaykpOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDEwMjoKICAgICAgICAgICAgICBjb25zdCBkID0gdlsrK2FdOwogICAgICAgICAgICAgIGlmKHR5cGVvZiBkID09PSAnc3ltYm9sJykgdCA9ICdOYU4nOwogICAgICAgICAgICAgIGVsc2UgdCA9IGZvcm1hdE51bWJlcihwYXJzZUZsb2F0KGQpKTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSA5OToKICAgICAgICAgICAgICBhICs9IDE7CiAgICAgICAgICAgICAgdCA9ICcnOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDM3OgogICAgICAgICAgICAgIHMgKz0gc2xpY2UoeCwgcCwgaSk7CiAgICAgICAgICAgICAgcCA9IGkgKyAxOwogICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfQogICAgICAgICAgaWYocCAhPT0gaSAtIDEpIHMgKz0gc2xpY2UoeCwgcCwgaSAtIDEpOwogICAgICAgICAgcyArPSB0OwogICAgICAgICAgcCA9IGkgKyAxOwogICAgICAgIH0gZWxzZSBpZihjID09PSAzNykgewogICAgICAgICAgcyArPSBzbGljZSh4LCBwLCBpKTsKICAgICAgICAgIHAgPSBpICsgMTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIGlmKHAgIT09IDApIHsKICAgICAgYSsrOwogICAgICBqID0gJyAnOwogICAgICBpZihwIDwgeC5sZW5ndGgpIHMgKz0gc2xpY2UoeCwgcCk7CiAgICB9CiAgfQogIHdoaWxlKGEgPCB2Lmxlbmd0aCkgewogICAgY29uc3QgeSA9IHZbYV07CiAgICBzICs9IGo7CiAgICBzICs9IHR5cGVvZiB5ICE9PSAnc3RyaW5nJyA/IGluc3BlY3QoeSwgbykgOiB5OwogICAgaiA9ICcgJzsKICAgIGErKzsKICB9CiAgcmV0dXJuIHM7Cn0KCmV4cG9ydCBmdW5jdGlvbiBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkgewogIGlmKGFyZ3VtZW50cy5sZW5ndGggPT0gMSkgZXhwZWN0ZWQgPSB0cnVlOwoKICBpZihhY3R1YWwgPT09IGV4cGVjdGVkKSByZXR1cm47CgogIGlmKAogICAgYWN0dWFsICE9PSBudWxsICYmCiAgICBleHBlY3RlZCAhPT0gbnVsbCAmJgogICAgdHlwZW9mIGFjdHVhbCA9PSAnb2JqZWN0JyAmJgogICAgdHlwZW9mIGV4cGVjdGVkID09ICdvYmplY3QnICYmCiAgICBhY3R1YWwudG9TdHJpbmcoKSA9PT0gZXhwZWN0ZWQudG9TdHJpbmcoKQogICkKICAgIHJldHVybjsKCiAgdGhyb3cgRXJyb3IoCiAgICAnYXNzZXJ0aW9uIGZhaWxlZDogZ290IHwnICsKICAgICAgYWN0dWFsICsKICAgICAgJ3wnICsKICAgICAgJywgZXhwZWN0ZWQgfCcgKwogICAgICBleHBlY3RlZCArCiAgICAgICd8JyArCiAgICAgIChtZXNzYWdlID8gJyAoJyArIG1lc3NhZ2UgKyAnKScgOiAnJykKICApOwp9CgpleHBvcnQgZnVuY3Rpb24gc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKSB7CiAgbGV0IG1hcCA9IChzZXRJbnRlcnZhbC5tYXAgPz89IG5ldyBNYXAoKSk7CiAgbGV0IGlkID0gKHNldEludGVydmFsLmlkID0gKHNldEludGVydmFsLmlkID8/IDApICsgMSk7CiAgbGV0IG9iaiA9IHsgY2FsbGJhY2ssIG1zIH07CiAgbWFwLnNldChpZCwgb2JqKTsKCiAgZnVuY3Rpb24gc3RhcnQoKSB7CiAgICBvYmouaWQgPSBvcy5zZXRUaW1lb3V0KCgpID0+IHsKICAgICAgc3RhcnQoKTsKICAgICAgY2FsbGJhY2soKTsKICAgIH0sIG9iai5tcyk7CiAgfQoKICBzdGFydCgpOwogIHJldHVybiBpZDsKfQoKZXhwb3J0IGZ1bmN0aW9uIGNsZWFySW50ZXJ2YWwoaWQpIHsKICBsZXQgbWFwID0gKHNldEludGVydmFsLm1hcCA/Pz0gbmV3IE1hcCgpKTsKCiAgbGV0IG9iaiA9IG1hcC5nZXQoaWQpOwoKICBpZihvYmopIG9zLmNsZWFyVGltZW91dChvYmouaWQpOwp9CgpleHBvcnQgZnVuY3Rpb24gbWVtb2l6ZShmbikgewogIGxldCBjYWNoZSA9IHt9OwogIHJldHVybiAobiwgLi4ucmVzdCkgPT4gewogICAgaWYobiBpbiBjYWNoZSkgcmV0dXJuIGNhY2hlW25dOwogICAgcmV0dXJuIChjYWNoZVtuXSA9IGZuKG4sIC4uLnJlc3QpKTsKICB9Owp9CgpleHBvcnQgZnVuY3Rpb24gZGVmaW5lKG9iaiwgLi4uYXJncykgewogIGZvcihsZXQgcHJvcHMgb2YgYXJncykgewogICAgbGV0IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhwcm9wcyk7CiAgICBmb3IobGV0IHByb3AgaW4gZGVzYykgewogICAgICBjb25zdCB7IHZhbHVlIH0gPSBkZXNjW3Byb3BdOwogICAgICBpZih0eXBlb2YgdmFsdWUgPT0gJ2Z1bmN0aW9uJykgZGVzY1twcm9wXS53cml0YWJsZSA9IGZhbHNlOwogICAgfQogICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMob2JqLCBkZXNjKTsKICB9CiAgcmV0dXJuIG9iajsKfQoKZXhwb3J0IGZ1bmN0aW9uIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKSB7CiAgbGV0IHJldCA9IFtdOwogIGxldCBjaGFpbiA9IGdldFByb3RvdHlwZUNoYWluKG9iaik7CiAgaWYob2JqLmNvbnN0cnVjdG9yICYmIG9iai5jb25zdHJ1Y3RvciAhPSBjaGFpblswXS5jb25zdHJ1Y3RvcikgY2hhaW4udW5zaGlmdChvYmopOwoKICBmb3IobGV0IHByb3RvIG9mIGNoYWluKSByZXQucHVzaChwcm90by5jb25zdHJ1Y3Rvcik7CiAgcmV0dXJuIHJldDsKfQoKY29uc3QgaW5zcGVjdE1ldGhvZCA9IFN5bWJvbC5mb3IoJ25vZGVqcy51dGlsLmluc3BlY3QuY3VzdG9tJyk7Cgp1dGlsLmluc3BlY3QgPSBpbnNwZWN0Owp1dGlsLmZvcm1hdCA9IGZvcm1hdDsKdXRpbC5mb3JtYXRXaXRoT3B0aW9ucyA9IGZvcm1hdFdpdGhPcHRpb25zOwp1dGlsLnR5cGVzID0gdHlwZXM7CnV0aWwuYXNzZXJ0ID0gYXNzZXJ0Owp1dGlsLmhhc0J1aWx0SW4gPSBoYXNCdWlsdEluOwp1dGlsLnRvU3RyaW5nID0gdG9TdHJpbmc7CnV0aWwudG9BcnJheUJ1ZmZlciA9IHRvQXJyYXlCdWZmZXI7CnV0aWwuc2V0SW50ZXJ2YWwgPSBzZXRJbnRlcnZhbDsKdXRpbC5jbGVhckludGVydmFsID0gY2xlYXJJbnRlcnZhbDsKdXRpbC5tZW1vaXplID0gbWVtb2l6ZTsKdXRpbC5kZWZpbmUgPSBkZWZpbmU7CnV0aWwuQXJyYXlFeHRlbnNpb25zID0gQXJyYXlFeHRlbnNpb25zOwp1dGlsLmV4dGVuZEFycmF5ID0gKHByb3RvID0gQXJyYXkucHJvdG90eXBlLCBkZWYgPSB1dGlsLmRlZmluZSkgPT4gZGVmKHByb3RvLCBBcnJheUV4dGVuc2lvbnMpOwp1dGlsLmVycm9ycyA9IGVycm9yczsKdXRpbC5nZXRQcm90b3R5cGVDaGFpbiA9IGdldFByb3RvdHlwZUNoYWluOwp1dGlsLmdldENvbnN0cnVjdG9yQ2hhaW4gPSBnZXRDb25zdHJ1Y3RvckNoYWluOwoKT2JqZWN0LmFzc2lnbih1dGlsLCB7CiAgW2luc3BlY3RNZXRob2RdKCkgewogICAgbGV0IG9iaiA9IHsgLi4udXRpbCB9OwogICAgZGVsZXRlIG9ialtpbnNwZWN0TWV0aG9kXTsKICAgIHJldHVybiBpbnNwZWN0KG9iaiwgeyBjdXN0b21JbnNwZWN0OiBmYWxzZSB9KTsKICB9Cn0pOwoKZXhwb3J0IHsgZXh0ZW5kQXJyYXksIEFycmF5RXh0ZW5zaW9ucyB9IGZyb20gJy4vZXh0ZW5kQXJyYXkuanMnOwpleHBvcnQgeyAgU3lzY2FsbEVycm9yLAogIGFycmF5VG9CaXRmaWVsZCwKICBhdG9iLAogIGF0b21Ub1N0cmluZywKICBhdG9tVG9WYWx1ZSwKICBiaXRmaWVsZFRvQXJyYXksCiAgYnRvYSwKICBjb21waWxlRmlsZSwKICBjb25jYXRBcnJheUJ1ZmZlciwKICBkdXBBcnJheUJ1ZmZlciwKICBldmFsQmluYXJ5LAogIGdldEJ5dGVDb2RlLAogIGdldENsYXNzQXRvbSwKICBnZXRDbGFzc0NvbnN0cnVjdG9yLAogIGdldENsYXNzQ291bnQsCiAgZ2V0Q2xhc3NJRCwKICBnZXRDbGFzc05hbWUsCiAgZ2V0Q2xhc3NQcm90bywKICBnZXRDb21tYW5kTGluZSwKICBnZXRDdXJyZW50V29ya2luZ0RpcmVjdG9yeSwKICBnZXRFeGVjdXRhYmxlLAogIGdldEZpbGVEZXNjcmlwdG9yLAogIGdldE9wQ29kZXMsCiAgZ2V0UGVyZm9ybWFuY2VDb3VudGVyLAogIGdldFByb2NNYXBzLAogIGdldFByb2NNb3VudHMsCiAgZ2V0UHJvY1N0YXQsCiAgZ2V0UHJvdG90eXBlQ2hhaW4sCiAgZ2V0Um9vdERpcmVjdG9yeSwKICBnZXRlZ2lkLAogIGdldGV1aWQsCiAgZ2V0Z2lkLAogIGdldHBpZCwKICBnZXRwcGlkLAogIGdldHNpZCwKICBnZXR1aWQsCiAgaHJ0aW1lLAogIHJlYWRPYmplY3QsCiAgcmVzaXplQXJyYXlCdWZmZXIsCiAgc2V0ZWdpZCwKICBzZXRldWlkLAogIHNldGdpZCwKICBzZXR1aWQsCiAgdG9BcnJheUJ1ZmZlciwKICB0b1BvaW50ZXIsCiAgdG9TdHJpbmcsCiAgdW5hbWUsCiAgdmFsdWVQdHIsCiAgdmFsdWVUYWcsCiAgdmFsdWVUb0F0b20sCiAgdmFsdWVUeXBlLAogIHdyaXRlT2JqZWN0IH0gZnJvbSAnbWlzYyc7CmV4cG9ydCB7IGluc3BlY3QgfSBmcm9tICdpbnNwZWN0JzsKAAAAAAAAAABwMwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPDMAAAAAAAA8MwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Searching 83 files for \"Location\" (regex, case sensitive)\n\n/home/roman/Sources/plot-cv/quickjs/modules/location.c:\n    7  \n    8  void\n    9: location_print(const Location* loc, DynBuf* dbuf) {\n   10    if(loc->file) {\n   11      dbuf_putstr(dbuf, loc->file);\n   ..\n   19  \n   20  char*\n   21: location_tostring(const Location* loc, JSContext* ctx) {\n   22    DynBuf dbuf;\n   23    js_dbuf_init(ctx, &dbuf);\n   ..\n   30  \n   31  JSValue\n   32: location_tovalue(const Location* loc, JSContext* ctx) {\n   33    char* str = location_tostring(loc, ctx);\n   34    JSValue ret = JS_NewString(ctx, str);\n   ..\n   37  }\n   38  \n   39: Location\n   40: location_clone(const Location* loc, JSContext* ctx) {\n   41:   Location ret = {0, 0, 0, 0, 0};\n   42    if(loc->file)\n   43      ret.file = js_strdup(ctx, loc->file);\n   ..\n   49  \n   50  void\n   51: location_init(Location* loc) {\n   52    loc->file = 0;\n   53    loc->str = 0;\n   ..\n   56  \n   57  void\n   58: location_zero(Location* loc) {\n   59    loc->line = 0;\n   60    loc->column = 0;\n   ..\n   63  \n   64  void\n   65: location_add(Location* loc, const Location* other) {\n   66    loc->line += other->line;\n   67    loc->column += other->column;\n   ..\n   69  }\n   70  void\n   71: location_sub(Location* loc, const Location* other) {\n   72    loc->line -= other->line;\n   73    loc->column -= other->column;\n   ..\n   76  \n   77  void\n   78: location_count(Location* loc, const char* x, size_t n) {\n   79    size_t i;\n   80    for(i = 0; i < n;) {\n   ..\n   94  \n   95  void\n   96: location_free(Location* loc, JSContext* ctx) {\n   97    if(loc->file)\n   98      js_free(ctx, (char*)loc->file);\n   99    if(loc->str)\n  100      js_free(ctx, (char*)loc->str);\n  101:   memset(loc, 0, sizeof(Location));\n  102  }\n  103  \n  104  void\n  105: location_free_rt(Location* loc, JSRuntime* rt) {\n  106    if(loc->file)\n  107      js_free_rt(rt, (char*)loc->file);\n  108    if(loc->str)\n  109      js_free_rt(rt, (char*)loc->str);\n  110:   memset(loc, 0, sizeof(Location));\n  111  }\n  112  \n\n/home/roman/Sources/plot-cv/quickjs/modules/quickjs-location.c:\n   14  enum { LOCATION_PROP_LINE, LOCATION_PROP_COLUMN, LOCATION_PROP_POS, LOCATION_PROP_FILE };\n   15  \n   16: Location*\n   17  js_location_data(JSContext* ctx, JSValueConst value) {\n   18:   Location* loc;\n   19    loc = JS_GetOpaque(value, js_location_class_id);\n   20    return loc;\n   ..\n   22  \n   23  JSValue\n   24: js_location_new_proto(JSContext* ctx, JSValueConst proto, const Location* location) {\n   25    JSValue obj;\n   26:   Location* loc;\n   27  \n   28:   if(!(loc = js_mallocz(ctx, sizeof(Location))))\n   29      return JS_EXCEPTION;\n   30  \n   ..\n   51  \n   52  JSValue\n   53: js_location_new(JSContext* ctx, const Location* location) {\n   54    if(js_location_class_id == 0)\n   55      js_location_init(ctx, 0);\n   ..\n   60  JSValue\n   61  js_location_tostring(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n   62:   Location* loc;\n   63    JSValue ret = JS_UNDEFINED;\n   64    size_t len;\n   ..\n  101  static JSValue\n  102  js_location_getter(JSContext* ctx, JSValueConst this_val, int magic) {\n  103:   Location* loc;\n  104    JSValue ret = JS_UNDEFINED;\n  105  \n  ...\n  134  static JSValue\n  135  js_location_setter(JSContext* ctx, JSValueConst this_val, JSValueConst value, int magic) {\n  136:   Location* loc;\n  137    JSValue ret = JS_UNDEFINED;\n  138  \n  ...\n  152  }\n  153  \n  154: Location\n  155  js_location_from(JSContext* ctx, JSValueConst this_val) {\n  156:   Location loc = {0, 0, 0, -1, 0};\n  157    if(js_has_propertystr(ctx, this_val, \"line\"))\n  158      loc.line = js_get_propertystr_int32(ctx, this_val, \"line\") - 1;\n  ...\n  174  JSValue\n  175  js_location_toprimitive(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  176:   Location* loc;\n  177    const char* hint;\n  178    JSValue ret;\n  ...\n  195    JSValue obj = JS_UNDEFINED;\n  196    JSValue proto;\n  197:   Location loc;\n  198    location_init(&loc);\n  199  \n  ...\n  233      /* Dup from object */\n  234    } else if(argc >= 1 && JS_IsObject(argv[0])) {\n  235:     Location* other;\n  236      if((other = js_location_data(ctx, argv[0]))) {\n  237        loc = location_clone(other, ctx);\n  ...\n  266  static JSValue\n  267  js_location_inspect(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  268:   Location* loc;\n  269  \n  270    if(!(loc = js_location_data(ctx, this_val)))\n  ...\n  288  js_location_clone(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  289    JSValue ret = JS_UNDEFINED;\n  290:   Location* loc;\n  291  \n  292    if(!(loc = js_location_data(ctx, this_val)))\n  ...\n  298  static JSValue\n  299  js_location_count(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  300:   Location loc;\n  301    InputBuffer input;\n  302    size_t i;\n  ...\n  316  void\n  317  js_location_finalizer(JSRuntime* rt, JSValue val) {\n  318:   Location* loc = JS_GetOpaque(val, js_location_class_id);\n  319    if(loc) {\n  320      location_free_rt(loc, rt);\n  ...\n  324  \n  325  static JSClassDef js_location_class = {\n  326:     .class_name = \"Location\",\n  327      .finalizer = js_location_finalizer,\n  328  };\n  ...\n  336      JS_CFUNC_DEF(\"clone\", 0, js_location_clone),\n  337      JS_CFUNC_DEF(\"toString\", 0, js_location_tostring),\n  338:     JS_PROP_STRING_DEF(\"[Symbol.toStringTag]\", \"Location\", JS_PROP_CONFIGURABLE),\n  339  };\n  340  \n  ...\n  350      JS_NewClass(JS_GetRuntime(ctx), js_location_class_id, &js_location_class);\n  351  \n  352:     location_ctor = JS_NewCFunction2(ctx, js_location_constructor, \"Location\", 1, JS_CFUNC_constructor, 0);\n  353      location_proto = JS_NewObject(ctx);\n  354  \n  ...\n  361  \n  362    if(m) {\n  363:     JS_SetModuleExport(ctx, m, \"Location\", location_ctor);\n  364    }\n  365  \n  ...\n  378    if(!(m = JS_NewCModule(ctx, module_name, &js_location_init)))\n  379      return m;\n  380:   JS_AddModuleExport(ctx, m, \"Location\");\n  381    return m;\n  382  }\n\n/home/roman/Sources/plot-cv/quickjs/modules/lexer.c:\n  383  \n  384  void\n  385: lexer_set_location(Lexer* lex, const Location* loc, JSContext* ctx) {\n  386    lex->start = loc->pos;\n  387    lex->bytelen = 0;\n  ...\n  436  \n  437  size_t\n  438: input_skip(InputBuffer* input, size_t end, Location* loc) {\n  439    size_t n = 0;\n  440    while(input->pos < end) {\n\n/home/roman/Sources/plot-cv/quickjs/modules/lexer.h:\n   28    int32_t state;\n   29    InputBuffer input;\n   30:   Location loc;\n   31    Vector defines;\n   32    Vector rules;\n   ..\n   59  char* lexer_lexeme(Lexer*, size_t* lenp);\n   60  int lexer_next(Lexer*, uint64_t state, JSContext* ctx);\n   61: void lexer_set_location(Lexer*, const Location* loc, JSContext* ctx);\n   62  void lexer_free(Lexer*, JSContext* ctx);\n   63  void lexer_free_rt(Lexer*, JSRuntime* rt);\n   64  void lexer_dump(Lexer*, DynBuf* dbuf);\n   65: size_t input_skip(InputBuffer*, size_t end, Location* loc);\n   66  \n   67  static inline int\n   ..\n   90  }\n   91  \n   92: size_t input_skip(InputBuffer* input, size_t end, Location* loc);\n   93  \n   94  #endif /* defined(LEXER_H) */\n\n/home/roman/Sources/plot-cv/quickjs/modules/quickjs-lexer.h:\n    7  \n    8  typedef struct {\n    9:   Location loc;\n   10    const char* line;\n   11    const char* message;\n   ..\n   18    uint32_t byte_length;\n   19    uint32_t char_length;\n   20:   Location loc;\n   21    JSValue loc_val;\n   22    Lexer* lexer;\n\n/home/roman/Sources/plot-cv/quickjs/modules/location.h:\n    4  #include \"utils.h\"\n    5  \n    6: typedef struct Location {\n    7    char* file;\n    8    uint32_t line;\n    .\n   10    int64_t pos;\n   11    char* str;\n   12: } Location;\n   13  \n   14: void location_print(const Location*, DynBuf* dbuf);\n   15: char* location_tostring(const Location*, JSContext* ctx);\n   16: JSValue location_tovalue(const Location*, JSContext* ctx);\n   17: Location location_clone(const Location*, JSContext* ctx);\n   18: void location_init(Location*);\n   19: void location_zero(Location*);\n   20: void location_add(Location*, const Location* other);\n   21: void location_sub(Location*, const Location* other);\n   22: void location_count(Location*, const char* x, size_t n);\n   23: void location_free(Location*, JSContext* ctx);\n   24: void location_free_rt(Location*, JSRuntime* rt);\n   25  \n   26  static inline int\n   27: location_isnull(const Location* loc) {\n   28    return !loc->file && !loc->line && !loc->column && !loc->pos;\n   29  }\n\n/home/roman/Sources/plot-cv/quickjs/modules/quickjs-lexer.c:\n  285  \n  286  Token*\n  287: js_token_new(JSContext* ctx, int id, const char* lexeme, const Location* loc, uint64_t byte_offset) {\n  288    Token* tok;\n  289  \n  ...\n  496  \n  497  static Token*\n  498: lexer_token(Lexer* lex, int id, size_t charlen, Location loc, JSContext* ctx) {\n  499    Token* tok;\n  500    if((tok = js_mallocz(ctx, sizeof(Token)))) {\n  ...\n  803        Lexer* other;\n  804        InputBuffer input;\n  805:       Location loc = {0, 0, 0, -1, 0};\n  806  \n  807        if((other = JS_GetOpaque(argv[0], js_lexer_class_id))) {\n  ...\n  835        if(argc >= 1) {\n  836          Token* tok;\n  837:         Location* loc;\n  838          if((loc = js_location_data(ctx, argv[0]))) {\n  839            lexer_set_location(lex, loc, ctx);\n  ...\n  847            const char* str = JS_ToCStringLen(ctx, &len, argv[0]);\n  848            if(lex->input.pos >= len && !memcmp(&lex->input.data[lex->input.pos - len], str, len)) {\n  849:             Location diff;\n  850              location_zero(&diff);\n  851              location_count(&diff, (const char*)&lex->input.data[lex->input.pos - len], len);\n  ...\n 1343      Token* tok;\n 1344      size_t charlen;\n 1345:     Location loc;\n 1346  \n 1347      JS_ToInt32(ctx, &id, ret);\n ....\n 1526      return m;\n 1527  \n 1528:   JS_AddModuleExport(ctx, m, \"Location\");\n 1529    JS_AddModuleExport(ctx, m, \"SyntaxError\");\n 1530    JS_AddModuleExport(ctx, m, \"Token\");\n\n/home/roman/Sources/plot-cv/quickjs/modules/quickjs-location.h:\n    7  extern thread_local JSClassID js_location_class_id;\n    8  \n    9: Location* js_location_data(JSContext*, JSValue value);\n   10: JSValue js_location_new_proto(JSContext*, JSValue proto, const Location* location);\n   11: JSValue js_location_new(JSContext*, const Location* location);\n   12  JSValue js_location_tostring(JSContext*, JSValue this_val, int argc, JSValue* argv);\n   13  BOOL js_is_location(JSContext*, JSValue obj);\n   14: Location js_location_from(JSContext*, JSValue this_val);\n   15  JSValue js_location_toprimitive(JSContext*, JSValue this_val, int argc, JSValue* argv);\n   16  JSValue js_location_constructor(JSContext*, JSValue new_target, int argc, JSValue* argv);\n\n/home/roman/Sources/plot-cv/quickjs/modules/tests/test_stack.js:\n    3  import inspect from 'inspect';\n    4  import { Console } from 'console';\n    5: import { Location, Stack, StackFrame } from '../lib/stack.js';\n    6  \n    7  function Func1() {\n\n/home/roman/Sources/plot-cv/quickjs/modules/tests/test_lexer.js:\n    4  import * as path from 'path';\n    5  import { Predicate } from 'predicate';\n    6: import { Location, Lexer, Token, SyntaxError } from 'lexer';\n    7  import { Console } from 'console';\n    8  import JSLexer from '../lib/jslexer.js';\n    .\n  138    console.log(\n  139      'new SyntaxError(\"test\")',\n  140:     new SyntaxError('test', new Location(10, 3, 28, 'file.txt'))\n  141    );\n  142    let mask = IntToBinary(lexer.mask);\n  ...\n  249    console.log(`lexer.next() `, lexer.next());\n  250    console.log(\n  251:     `Location.count('blah\\\\nblah\\\\nblah\\\\nblah')`,\n  252:     Location.count('blah\\nblah\\nblah\\nblah')\n  253    );\n  254  \n\n/home/roman/Sources/plot-cv/quickjs/modules/tests/test_parser.js:\n    4  import * as path from 'path';\n    5  import { Predicate } from 'predicate';\n    6: import { Location, Lexer, Token, SyntaxError } from 'lexer';\n    7  import Console from '../lib/console.js';\n    8  import JSLexer from '../lib/jslexer.js';\n\n/home/roman/Sources/plot-cv/quickjs/modules/tests/test_misc.js:\n    2  import * as std from 'std';\n    3  import { Console } from 'console';\n    4: import { Location } from 'misc';\n    5  import { extendArray } from 'util';\n    6  import * as misc from 'misc';\n    .\n   24    });\n   25    console.log('console.options', console.options);\n   26:   let loc = new Location('test.js:12:1');\n   27    console.log('loc', loc);\n   28:   loc = new Location('test.js', 12, 1);\n   29    console.log('loc', loc);\n   30:   let loc2 = new Location(loc);\n   31    console.log('loc2', loc2);\n   32  \n\n/home/roman/Sources/plot-cv/quickjs/modules/lib/jslexer.js:\n    1: import { Lexer, Location, SyntaxError, Token } from 'lexer';\n    2  \n    3: export { Location, SyntaxError, Token } from 'lexer';\n    4  \n    5  export const JSDefines = {\n\n/home/roman/Sources/plot-cv/quickjs/modules/lib/stack.js:\n    1: import { Location } from 'util';\n    2: export { Location } from 'util';\n    3  \n    4  const inspectSymbol = Symbol.inspect ?? Symbol.for('quickjs.inspect.custom');\n    .\n  192  \n  193    /* prettier-ignore */ get loc() {\n  194:     return new Location(this);\n  195    }\n  196  \n\n91 matches across 14 files\n\n\nSearching 83 files for \"port.*Location\" (regex, case sensitive)\n\n/home/roman/Sources/plot-cv/quickjs/modules/quickjs-location.c:\n  361  \n  362    if(m) {\n  363:     JS_SetModuleExport(ctx, m, \"Location\", location_ctor);\n  364    }\n  365  \n  ...\n  378    if(!(m = JS_NewCModule(ctx, module_name, &js_location_init)))\n  379      return m;\n  380:   JS_AddModuleExport(ctx, m, \"Location\");\n  381    return m;\n  382  }\n\n/home/roman/Sources/plot-cv/quickjs/modules/quickjs-lexer.c:\n 1526      return m;\n 1527  \n 1528:   JS_AddModuleExport(ctx, m, \"Location\");\n 1529    JS_AddModuleExport(ctx, m, \"SyntaxError\");\n 1530    JS_AddModuleExport(ctx, m, \"Token\");\n\n/home/roman/Sources/plot-cv/quickjs/modules/tests/test_stack.js:\n    3  import inspect from 'inspect';\n    4  import { Console } from 'console';\n    5: import { Location, Stack, StackFrame } from '../lib/stack.js';\n    6  \n    7  function Func1() {\n\n/home/roman/Sources/plot-cv/quickjs/modules/tests/test_lexer.js:\n    4  import * as path from 'path';\n    5  import { Predicate } from 'predicate';\n    6: import { Location, Lexer, Token, SyntaxError } from 'lexer';\n    7  import { Console } from 'console';\n    8  import JSLexer from '../lib/jslexer.js';\n\n/home/roman/Sources/plot-cv/quickjs/modules/tests/test_parser.js:\n    4  import * as path from 'path';\n    5  import { Predicate } from 'predicate';\n    6: import { Location, Lexer, Token, SyntaxError } from 'lexer';\n    7  import Console from '../lib/console.js';\n    8  import JSLexer from '../lib/jslexer.js';\n\n/home/roman/Sources/plot-cv/quickjs/modules/tests/test_misc.js:\n    2  import * as std from 'std';\n    3  import { Console } from 'console';\n    4: import { Location } from 'misc';\n    5  import { extendArray } from 'util';\n    6  import * as misc from 'misc';\n\n/home/roman/Sources/plot-cv/quickjs/modules/lib/jslexer.js:\n    1: import { Lexer, Location, SyntaxError, Token } from 'lexer';\n    2  \n    3: export { Location, SyntaxError, Token } from 'lexer';\n    4  \n    5  export const JSDefines = {\n\n/home/roman/Sources/plot-cv/quickjs/modules/lib/stack.js:\n    1: import { Location } from 'util';\n    2: export { Location } from 'util';\n    3  \n    4  const inspectSymbol = Symbol.inspect ?? Symbol.for('quickjs.inspect.custom');\n\n11 matches across 8 files\n",
			"settings":
			{
				"buffer_size": 15467,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 8841,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "utils.h",
			"settings":
			{
				"buffer_size": 36555,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"cut",
					null,
					"AQAAACB8AAAAAAAAIHwAAAAAAABYAAAAdWludDY0X3QganNfZ2V0X3Byb3BlcnR5c3RyX3VpbnQ2NChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaiwgY29uc3QgY2hhciogcHJvcCk7Cg",
					"AQAAAAAAAAABAAAAIHwAAAAAAAB4fAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					2,
					"paste",
					null,
					"AgAAACB8AAAAAAAAeHwAAAAAAAAAAAAAeHwAAAAAAADQfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIHwAAAAAAAAgfAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"paste",
					null,
					"AQAAANB8AAAAAAAAR30AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0HwAAAAAAADQfAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHh8AAAAAAAAeXwAAAAAAAAAAAAAeXwAAAAAAAB5fAAAAAAAAFgAAAB1aW50NjRfdCBqc19nZXRfcHJvcGVydHlzdHJfdWludDY0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCBjb25zdCBjaGFyKiBwcm9wKTsK",
					"AQAAAAAAAAABAAAAeHwAAAAAAADQfAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "js_get_property"
					},
					"EAAAAH18AAAAAAAAfnwAAAAAAAAAAAAAfnwAAAAAAAB+fAAAAAAAABEAAABKU19HZXRPd25Qcm9wZXJ0eX58AAAAAAAAf3wAAAAAAAAAAAAAf3wAAAAAAACAfAAAAAAAAAAAAACAfAAAAAAAAIF8AAAAAAAAAAAAAIF8AAAAAAAAgnwAAAAAAAAAAAAAgnwAAAAAAACDfAAAAAAAAAAAAACDfAAAAAAAAIR8AAAAAAAAAAAAAIR8AAAAAAAAhXwAAAAAAAAAAAAAhXwAAAAAAACGfAAAAAAAAAAAAACGfAAAAAAAAId8AAAAAAAAAAAAAId8AAAAAAAAiHwAAAAAAAAAAAAAiHwAAAAAAACJfAAAAAAAAAAAAACJfAAAAAAAAIp8AAAAAAAAAAAAAIp8AAAAAAAAi3wAAAAAAAAAAAAAi3wAAAAAAACMfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfXwAAAAAAACOfAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "descrip√ºt"
					},
					"CQAAAIx8AAAAAAAAjXwAAAAAAAAAAAAAjXwAAAAAAACOfAAAAAAAAAAAAACOfAAAAAAAAI98AAAAAAAAAAAAAI98AAAAAAAAkHwAAAAAAAAAAAAAkHwAAAAAAACRfAAAAAAAAAAAAACRfAAAAAAAAJJ8AAAAAAAAAAAAAJJ8AAAAAAAAk3wAAAAAAAAAAAAAk3wAAAAAAACUfAAAAAAAAAAAAACUfAAAAAAAAJV8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjHwAAAAAAACMfAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					2,
					"left_delete",
					null,
					"AgAAAJR8AAAAAAAAlHwAAAAAAAABAAAAdJN8AAAAAAAAk3wAAAAAAAACAAAAw7w",
					"AQAAAAAAAAABAAAAlXwAAAAAAACVfAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "tor"
					},
					"AwAAAJN8AAAAAAAAlHwAAAAAAAAAAAAAlHwAAAAAAACVfAAAAAAAAAAAAACVfAAAAAAAAJZ8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAk3wAAAAAAACTfAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAeHwAAAAAAAD4fAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
			"settings":
			{
				"buffer_size": 42478,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "utils.c",
			"settings":
			{
				"buffer_size": 40658,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					23,
					1,
					"paste",
					null,
					"AQAAAItVAAAAAAAAC1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAi1UAAAAAAACLVQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAApWAAAAAAAAClYAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAC1YAAAAAAAALVgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAApWAAAAAAAAC1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAClYAAAAAAAAKVgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAtWAAAAAAAADVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAC1YAAAAAAAALVgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"CAAAAAxWAAAAAAAADVYAAAAAAAAAAAAADVYAAAAAAAAjVgAAAAAAAAAAAAAjVgAAAAAAACRWAAAAAAAAAAAAACRWAAAAAAAAOlYAAAAAAAAAAAAADVYAAAAAAAANVgAAAAAAABYAAAAgICAgICAgICAgICAgICAgICAgICAgDlYAAAAAAAAOVgAAAAAAABYAAAAgICAgICAgICAgICAgICAgICAgICAgDlYAAAAAAAAPVgAAAAAAAAAAAAANVgAAAAAAAA9WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADFYAAAAAAAAMVgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAA9WAAAAAAAAEFYAAAAAAAAAAAAAEFYAAAAAAAASVgAAAAAAAAAAAAANVgAAAAAAAA1WAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAD1YAAAAAAAAPVgAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAABNWAAAAAAAAFFYAAAAAAAAAAAAAFFYAAAAAAAAVVgAAAAAAAAAAAAAOVgAAAAAAAA5WAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAE1YAAAAAAAATVgAAAAAAAAAAAAAAADRA"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAIxVAAAAAAAAjVUAAAAAAAAAAAAAjVUAAAAAAACOVQAAAAAAAAAAAAAUVgAAAAAAABRWAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAAjFUAAAAAAACMVQAAAAAAAAAAAAAAACRA"
				],
				[
					35,
					1,
					"paste",
					null,
					"AQAAABBWAAAAAAAAW1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEFYAAAAAAAAQVgAAAAAAAAAAAAAAACRA"
				],
				[
					44,
					2,
					"left_delete",
					null,
					"AgAAADNWAAAAAAAAM1YAAAAAAAABAAAAZDJWAAAAAAAAMlYAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAANFYAAAAAAAA0VgAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAADJWAAAAAAAAM1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMlYAAAAAAAAyVgAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "obj,opr"
					},
					"BwAAADdWAAAAAAAAOFYAAAAAAAAAAAAAOFYAAAAAAAA5VgAAAAAAAAAAAAA5VgAAAAAAADpWAAAAAAAAAAAAADpWAAAAAAAAO1YAAAAAAAAAAAAAO1YAAAAAAAA8VgAAAAAAAAAAAAA8VgAAAAAAAD1WAAAAAAAAAAAAAD1WAAAAAAAAPlYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAN1YAAAAAAAA3VgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					2,
					"left_delete",
					null,
					"AgAAAD1WAAAAAAAAPVYAAAAAAAABAAAAcjxWAAAAAAAAPFYAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAPlYAAAAAAAA+VgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAADxWAAAAAAAAPVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPFYAAAAAAAA8VgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					2,
					"left_delete",
					null,
					"AgAAADxWAAAAAAAAPFYAAAAAAAABAAAAcDtWAAAAAAAAO1YAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAPVYAAAAAAAA9VgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "prop"
					},
					"BAAAADtWAAAAAAAAPFYAAAAAAAAAAAAAPFYAAAAAAAA9VgAAAAAAAAAAAAA9VgAAAAAAAD5WAAAAAAAAAAAAAD5WAAAAAAAAP1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAO1YAAAAAAAA7VgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					5,
					"right_delete",
					null,
					"BQAAAEBWAAAAAAAAQFYAAAAAAAABAAAAdkBWAAAAAAAAQFYAAAAAAAABAAAAYUBWAAAAAAAAQFYAAAAAAAABAAAAbEBWAAAAAAAAQFYAAAAAAAABAAAAdUBWAAAAAAAAQFYAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAQFYAAAAAAABAVgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"left_delete",
					null,
					"AQAAAEBWAAAAAAAAQFYAAAAAAAAQAAAALCBwcm9wZW51bS0+YXRvbQ",
					"AQAAAAAAAAABAAAAQFYAAAAAAABQVgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					2,
					"left_delete",
					null,
					"AgAAAEtWAAAAAAAAS1YAAAAAAAABAAAAe0pWAAAAAAAASlYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAATFYAAAAAAABMVgAAAAAAAP///////+9/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAEpWAAAAAAAAS1YAAAAAAAAAAAAAS1YAAAAAAABTVgAAAAAAAAAAAABLVgAAAAAAAEtWAAAAAAAACAAAACAgICAgICAgS1YAAAAAAABVVgAAAAAAAAAAAABVVgAAAAAAAFZWAAAAAAAAAAAAAFZWAAAAAAAAV1YAAAAAAAAAAAAAV1YAAAAAAABYVgAAAAAAAAAAAABYVgAAAAAAAFlWAAAAAAAAAAAAAFlWAAAAAAAAWlYAAAAAAAAAAAAAWlYAAAAAAABbVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASlYAAAAAAABKVgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFtWAAAAAAAAXFYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAW1YAAAAAAABbVgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "TRIE"
					},
					"BAAAAFxWAAAAAAAAXVYAAAAAAAAAAAAAXVYAAAAAAABeVgAAAAAAAAAAAABeVgAAAAAAAF9WAAAAAAAAAAAAAF9WAAAAAAAAYFYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXFYAAAAAAABcVgAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					2,
					"left_delete",
					null,
					"AgAAAF9WAAAAAAAAX1YAAAAAAAABAAAARV5WAAAAAAAAXlYAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAYFYAAAAAAABgVgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "UE;"
					},
					"AwAAAF5WAAAAAAAAX1YAAAAAAAAAAAAAX1YAAAAAAABgVgAAAAAAAAAAAABgVgAAAAAAAGFWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXlYAAAAAAABeVgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "\ndo"
					},
					"AwAAAA9WAAAAAAAAEFYAAAAAAAAAAAAAEFYAAAAAAAARVgAAAAAAAAAAAAARVgAAAAAAABJWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAD1YAAAAAAAAPVgAAAAAAAAAAAAAAgGtA"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABJWAAAAAAAAE1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAElYAAAAAAAASVgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABNWAAAAAAAAFVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAE1YAAAAAAAATVgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"right_delete",
					null,
					"AQAAABRWAAAAAAAAFFYAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAFFYAAAAAAAAUVgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\nwhile"
					},
					"BgAAAGdWAAAAAAAAaFYAAAAAAAAAAAAAaFYAAAAAAABpVgAAAAAAAAAAAABpVgAAAAAAAGpWAAAAAAAAAAAAAGpWAAAAAAAAa1YAAAAAAAAAAAAAa1YAAAAAAABsVgAAAAAAAAAAAABsVgAAAAAAAG1WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZ1YAAAAAAABnVgAAAAAAAAAAAAAAAERA"
				],
				[
					70,
					5,
					"left_delete",
					null,
					"BQAAAGxWAAAAAAAAbFYAAAAAAAABAAAAZWtWAAAAAAAAa1YAAAAAAAABAAAAbGpWAAAAAAAAalYAAAAAAAABAAAAaWlWAAAAAAAAaVYAAAAAAAABAAAAaGhWAAAAAAAAaFYAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAbVYAAAAAAABtVgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAGhWAAAAAAAAaVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaFYAAAAAAABoVgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"left_delete",
					null,
					"AQAAAGhWAAAAAAAAaFYAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAaVYAAAAAAABpVgAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " $"
					},
					"AgAAAGhWAAAAAAAAaVYAAAAAAAAAAAAAaVYAAAAAAABqVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaFYAAAAAAABoVgAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"left_delete",
					null,
					"AQAAAGlWAAAAAAAAaVYAAAAAAAABAAAAJA",
					"AQAAAAAAAAABAAAAalYAAAAAAABqVgAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "}≈Çhile"
					},
					"BgAAAGlWAAAAAAAAalYAAAAAAAAAAAAAalYAAAAAAABrVgAAAAAAAAAAAABrVgAAAAAAAGxWAAAAAAAAAAAAAGxWAAAAAAAAbVYAAAAAAAAAAAAAbVYAAAAAAABuVgAAAAAAAAAAAABuVgAAAAAAAG9WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaVYAAAAAAABpVgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAG9WAAAAAAAAcVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb1YAAAAAAABvVgAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAG9WAAAAAAAAb1YAAAAAAAABAAAAKG9WAAAAAAAAb1YAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAcFYAAAAAAABwVgAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					5,
					"left_delete",
					null,
					"BQAAAG5WAAAAAAAAblYAAAAAAAABAAAAZW1WAAAAAAAAbVYAAAAAAAABAAAAbGxWAAAAAAAAbFYAAAAAAAABAAAAaWtWAAAAAAAAa1YAAAAAAAABAAAAaGpWAAAAAAAAalYAAAAAAAACAAAAxYI",
					"AQAAAAAAAAABAAAAb1YAAAAAAABvVgAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "while"
					},
					"BQAAAGpWAAAAAAAAa1YAAAAAAAAAAAAAa1YAAAAAAABsVgAAAAAAAAAAAABsVgAAAAAAAG1WAAAAAAAAAAAAAG1WAAAAAAAAblYAAAAAAAAAAAAAblYAAAAAAABvVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAalYAAAAAAABqVgAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAG9WAAAAAAAAcVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb1YAAAAAAABvVgAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "JS_IsObject"
					},
					"CwAAAHBWAAAAAAAAcVYAAAAAAAAAAAAAcVYAAAAAAAByVgAAAAAAAAAAAAByVgAAAAAAAHNWAAAAAAAAAAAAAHNWAAAAAAAAdFYAAAAAAAAAAAAAdFYAAAAAAAB1VgAAAAAAAAAAAAB1VgAAAAAAAHZWAAAAAAAAAAAAAHZWAAAAAAAAd1YAAAAAAAAAAAAAd1YAAAAAAAB4VgAAAAAAAAAAAAB4VgAAAAAAAHlWAAAAAAAAAAAAAHlWAAAAAAAAelYAAAAAAAAAAAAAelYAAAAAAAB7VgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcFYAAAAAAABwVgAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHtWAAAAAAAAfVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAe1YAAAAAAAB7VgAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "obj"
					},
					"AwAAAHxWAAAAAAAAfVYAAAAAAAAAAAAAfVYAAAAAAAB+VgAAAAAAAAAAAAB+VgAAAAAAAH9WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfFYAAAAAAAB8VgAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIFWAAAAAAAAglYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgVYAAAAAAACBVgAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGdWAAAAAAAAaFYAAAAAAAAAAAAAaFYAAAAAAABpVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZ1YAAAAAAABnVgAAAAAAAAAAAAAAQHBA"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "obj"
					},
					"AwAAAGhWAAAAAAAAaVYAAAAAAAAAAAAAaVYAAAAAAABqVgAAAAAAAAAAAABqVgAAAAAAAGtWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaFYAAAAAAABoVgAAAAAAAAAAAAAAAAAA"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " =JS_Get"
					},
					"CAAAAGtWAAAAAAAAbFYAAAAAAAAAAAAAbFYAAAAAAABtVgAAAAAAAAAAAABtVgAAAAAAAG5WAAAAAAAAAAAAAG5WAAAAAAAAb1YAAAAAAAAAAAAAb1YAAAAAAABwVgAAAAAAAAAAAABwVgAAAAAAAHFWAAAAAAAAAAAAAHFWAAAAAAAAclYAAAAAAAAAAAAAclYAAAAAAABzVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAa1YAAAAAAABrVgAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAAHJWAAAAAAAAclYAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAc1YAAAAAAABzVgAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "JSValue"
					},
					"BwAAAA9WAAAAAAAAEFYAAAAAAAAAAAAAEFYAAAAAAAARVgAAAAAAAAAAAAARVgAAAAAAABJWAAAAAAAAAAAAABJWAAAAAAAAE1YAAAAAAAAAAAAAE1YAAAAAAAAUVgAAAAAAAAAAAAAUVgAAAAAAABVWAAAAAAAAAAAAABVWAAAAAAAAFlYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAD1YAAAAAAAAPVgAAAAAAAAAAAAAAAAAA"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " proto;"
					},
					"BwAAABZWAAAAAAAAF1YAAAAAAAAAAAAAF1YAAAAAAAAYVgAAAAAAAAAAAAAYVgAAAAAAABlWAAAAAAAAAAAAABlWAAAAAAAAGlYAAAAAAAAAAAAAGlYAAAAAAAAbVgAAAAAAAAAAAAAbVgAAAAAAABxWAAAAAAAAAAAAABxWAAAAAAAAHVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFlYAAAAAAAAWVgAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"left_delete",
					null,
					"AQAAAHVWAAAAAAAAdVYAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAdlYAAAAAAAB2VgAAAAAAAAAAAAAAAAAA"
				],
				[
					99,
					3,
					"right_delete",
					null,
					"AwAAAHVWAAAAAAAAdVYAAAAAAAABAAAAb3VWAAAAAAAAdVYAAAAAAAABAAAAYnVWAAAAAAAAdVYAAAAAAAABAAAAag",
					"AQAAAAAAAAABAAAAdVYAAAAAAAB1VgAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "proto"
					},
					"BQAAAHVWAAAAAAAAdlYAAAAAAAAAAAAAdlYAAAAAAAB3VgAAAAAAAAAAAAB3VgAAAAAAAHhWAAAAAAAAAAAAAHhWAAAAAAAAeVYAAAAAAAAAAAAAeVYAAAAAAAB6VgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdVYAAAAAAAB1VgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "tPrototype"
					},
					"CgAAAIFWAAAAAAAAglYAAAAAAAAAAAAAglYAAAAAAACDVgAAAAAAAAAAAACDVgAAAAAAAIRWAAAAAAAAAAAAAIRWAAAAAAAAhVYAAAAAAAAAAAAAhVYAAAAAAACGVgAAAAAAAAAAAACGVgAAAAAAAIdWAAAAAAAAAAAAAIdWAAAAAAAAiFYAAAAAAAAAAAAAiFYAAAAAAACJVgAAAAAAAAAAAACJVgAAAAAAAIpWAAAAAAAAAAAAAIpWAAAAAAAAi1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgVYAAAAAAACBVgAAAAAAAP///////+9/"
				],
				[
					103,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAItWAAAAAAAAjVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAi1YAAAAAAACLVgAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAIxWAAAAAAAAjVYAAAAAAAAAAAAAjVYAAAAAAACOVgAAAAAAAAAAAACOVgAAAAAAAI9WAAAAAAAAAAAAAI9WAAAAAAAAkFYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjFYAAAAAAACMVgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " oibj"
					},
					"BQAAAJBWAAAAAAAAkVYAAAAAAAAAAAAAkVYAAAAAAACSVgAAAAAAAAAAAACSVgAAAAAAAJNWAAAAAAAAAAAAAJNWAAAAAAAAlFYAAAAAAAAAAAAAlFYAAAAAAACVVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkFYAAAAAAACQVgAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					3,
					"left_delete",
					null,
					"AwAAAJRWAAAAAAAAlFYAAAAAAAABAAAAapNWAAAAAAAAk1YAAAAAAAABAAAAYpJWAAAAAAAAklYAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAlVYAAAAAAACVVgAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "bj"
					},
					"AgAAAJJWAAAAAAAAk1YAAAAAAAAAAAAAk1YAAAAAAACUVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAklYAAAAAAACSVgAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJVWAAAAAAAAllYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlVYAAAAAAACVVgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAJZWAAAAAAAAl1YAAAAAAAAAAAAAl1YAAAAAAACYVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAllYAAAAAAACWVgAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAJhWAAAAAAAAmVYAAAAAAAAAAAAAmVYAAAAAAACaVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmFYAAAAAAACYVgAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJpWAAAAAAAAnFYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmlYAAAAAAACaVgAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "JS_VALUE_GET"
					},
					"DAAAAJtWAAAAAAAAnFYAAAAAAAAAAAAAnFYAAAAAAACdVgAAAAAAAAAAAACdVgAAAAAAAJ5WAAAAAAAAAAAAAJ5WAAAAAAAAn1YAAAAAAAAAAAAAn1YAAAAAAACgVgAAAAAAAAAAAACgVgAAAAAAAKFWAAAAAAAAAAAAAKFWAAAAAAAAolYAAAAAAAAAAAAAolYAAAAAAACjVgAAAAAAAAAAAACjVgAAAAAAAKRWAAAAAAAAAAAAAKRWAAAAAAAApVYAAAAAAAAAAAAApVYAAAAAAACmVgAAAAAAAAAAAACmVgAAAAAAAKdWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAm1YAAAAAAACbVgAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "OBJ"
					},
					"AwAAAKdWAAAAAAAAqFYAAAAAAAAAAAAAqFYAAAAAAACpVgAAAAAAAAAAAACpVgAAAAAAAKpWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAp1YAAAAAAACnVgAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKpWAAAAAAAArFYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqlYAAAAAAACqVgAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "proto"
					},
					"BQAAAKtWAAAAAAAArFYAAAAAAAAAAAAArFYAAAAAAACtVgAAAAAAAAAAAACtVgAAAAAAAK5WAAAAAAAAAAAAAK5WAAAAAAAAr1YAAAAAAAAAAAAAr1YAAAAAAACwVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAq1YAAAAAAACrVgAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAALFWAAAAAAAAslYAAAAAAAAAAAAAslYAAAAAAACzVgAAAAAAAAAAAACzVgAAAAAAALRWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsVYAAAAAAACxVgAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALRWAAAAAAAAtVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtFYAAAAAAAC0VgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					3,
					"left_delete",
					null,
					"AwAAALRWAAAAAAAAtFYAAAAAAAABAAAAILNWAAAAAAAAs1YAAAAAAAABAAAAPbJWAAAAAAAAslYAAAAAAAABAAAAIQ",
					"AQAAAAAAAAABAAAAtVYAAAAAAAC1VgAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "=="
					},
					"AgAAALJWAAAAAAAAs1YAAAAAAAAAAAAAs1YAAAAAAAC0VgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAslYAAAAAAACyVgAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " JS_VALUE_GET_O"
					},
					"DwAAALRWAAAAAAAAtVYAAAAAAAAAAAAAtVYAAAAAAAC2VgAAAAAAAAAAAAC2VgAAAAAAALdWAAAAAAAAAAAAALdWAAAAAAAAuFYAAAAAAAAAAAAAuFYAAAAAAAC5VgAAAAAAAAAAAAC5VgAAAAAAALpWAAAAAAAAAAAAALpWAAAAAAAAu1YAAAAAAAAAAAAAu1YAAAAAAAC8VgAAAAAAAAAAAAC8VgAAAAAAAL1WAAAAAAAAAAAAAL1WAAAAAAAAvlYAAAAAAAAAAAAAvlYAAAAAAAC/VgAAAAAAAAAAAAC/VgAAAAAAAMBWAAAAAAAAAAAAAMBWAAAAAAAAwVYAAAAAAAAAAAAAwVYAAAAAAADCVgAAAAAAAAAAAADCVgAAAAAAAMNWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtFYAAAAAAAC0VgAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "BJ"
					},
					"AgAAAMNWAAAAAAAAxFYAAAAAAAAAAAAAxFYAAAAAAADFVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAw1YAAAAAAADDVgAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMVWAAAAAAAAx1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxVYAAAAAAADFVgAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "obj"
					},
					"AwAAAMZWAAAAAAAAx1YAAAAAAAAAAAAAx1YAAAAAAADIVgAAAAAAAAAAAADIVgAAAAAAAMlWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxlYAAAAAAADGVgAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"left_delete",
					null,
					"AQAAAMpWAAAAAAAAylYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAy1YAAAAAAADLVgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAKdWAAAAAAAAqFYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAp1YAAAAAAACnVgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAMtWAAAAAAAAzFYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAy1YAAAAAAADLVgAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " break;"
					},
					"BwAAAMxWAAAAAAAAzVYAAAAAAAAAAAAAzVYAAAAAAADOVgAAAAAAAAAAAADOVgAAAAAAAM9WAAAAAAAAAAAAAM9WAAAAAAAA0FYAAAAAAAAAAAAA0FYAAAAAAADRVgAAAAAAAAAAAADRVgAAAAAAANJWAAAAAAAAAAAAANJWAAAAAAAA01YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzFYAAAAAAADMVgAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "\n\nobj"
					},
					"BQAAANNWAAAAAAAA1FYAAAAAAAAAAAAA1FYAAAAAAADVVgAAAAAAAAAAAADVVgAAAAAAANZWAAAAAAAAAAAAANZWAAAAAAAA11YAAAAAAAAAAAAA11YAAAAAAADYVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA01YAAAAAAADTVgAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANhWAAAAAAAA2VYAAAAAAAAAAAAA2VYAAAAAAADaVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2FYAAAAAAADYVgAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " proto;"
					},
					"BwAAANpWAAAAAAAA21YAAAAAAAAAAAAA21YAAAAAAADcVgAAAAAAAAAAAADcVgAAAAAAAN1WAAAAAAAAAAAAAN1WAAAAAAAA3lYAAAAAAAAAAAAA3lYAAAAAAADfVgAAAAAAAAAAAADfVgAAAAAAAOBWAAAAAAAAAAAAAOBWAAAAAAAA4VYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2lYAAAAAAADaVgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					2,
					"left_delete",
					null,
					"AgAAAP9WAAAAAAAA/1YAAAAAAAABAAAAff5WAAAAAAAA/lYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAAFcAAAAAAAAAVwAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "obj,"
					},
					"BAAAABdWAAAAAAAAGFYAAAAAAAAAAAAAGFYAAAAAAAAZVgAAAAAAAAAAAAAZVgAAAAAAABpWAAAAAAAAAAAAABpWAAAAAAAAG1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF1YAAAAAAAAXVgAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					4,
					"left_delete",
					null,
					"BAAAAP5VAAAAAAAA/lUAAAAAAAABAAAALP1VAAAAAAAA/VUAAAAAAAABAAAAavxVAAAAAAAA/FUAAAAAAAABAAAAYvtVAAAAAAAA+1UAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAA/1UAAAAAAAD/VQAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "value,"
					},
					"BgAAAPtVAAAAAAAA/FUAAAAAAAAAAAAA/FUAAAAAAAD9VQAAAAAAAAAAAAD9VQAAAAAAAP5VAAAAAAAAAAAAAP5VAAAAAAAA/1UAAAAAAAAAAAAA/1UAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAAFWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+1UAAAAAAAD7VQAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "\n\nobk"
					},
					"BQAAACNWAAAAAAAAJFYAAAAAAAAAAAAAJFYAAAAAAAAlVgAAAAAAAAAAAAAlVgAAAAAAACZWAAAAAAAAAAAAACZWAAAAAAAAJ1YAAAAAAAAAAAAAJ1YAAAAAAAAoVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAI1YAAAAAAAAjVgAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAChWAAAAAAAAKVYAAAAAAAAAAAAAKVYAAAAAAAAqVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKFYAAAAAAAAoVgAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					3,
					"left_delete",
					null,
					"AwAAAClWAAAAAAAAKVYAAAAAAAABAAAAPShWAAAAAAAAKFYAAAAAAAABAAAAICdWAAAAAAAAJ1YAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAKlYAAAAAAAAqVgAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAACdWAAAAAAAAKFYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJ1YAAAAAAAAnVgAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " =JS_DupValue"
					},
					"DQAAAChWAAAAAAAAKVYAAAAAAAAAAAAAKVYAAAAAAAAqVgAAAAAAAAAAAAAqVgAAAAAAACtWAAAAAAAAAAAAACtWAAAAAAAALFYAAAAAAAAAAAAALFYAAAAAAAAtVgAAAAAAAAAAAAAtVgAAAAAAAC5WAAAAAAAAAAAAAC5WAAAAAAAAL1YAAAAAAAAAAAAAL1YAAAAAAAAwVgAAAAAAAAAAAAAwVgAAAAAAADFWAAAAAAAAAAAAADFWAAAAAAAAMlYAAAAAAAAAAAAAMlYAAAAAAAAzVgAAAAAAAAAAAAAzVgAAAAAAADRWAAAAAAAAAAAAADRWAAAAAAAANVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKFYAAAAAAAAoVgAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADVWAAAAAAAAN1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANVYAAAAAAAA1VgAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAADZWAAAAAAAAN1YAAAAAAAAAAAAAN1YAAAAAAAA4VgAAAAAAAAAAAAA4VgAAAAAAADlWAAAAAAAAAAAAADlWAAAAAAAAOlYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANlYAAAAAAAA2VgAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "  value"
					},
					"BwAAADpWAAAAAAAAO1YAAAAAAAAAAAAAO1YAAAAAAAA8VgAAAAAAAAAAAAA8VgAAAAAAAD1WAAAAAAAAAAAAAD1WAAAAAAAAPlYAAAAAAAAAAAAAPlYAAAAAAAA/VgAAAAAAAAAAAAA/VgAAAAAAAEBWAAAAAAAAAAAAAEBWAAAAAAAAQVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOlYAAAAAAAA6VgAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEJWAAAAAAAAQ1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQlYAAAAAAABCVgAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "JS_FG"
					},
					"BQAAAPpWAAAAAAAA+1YAAAAAAAAAAAAA+1YAAAAAAAD8VgAAAAAAAAAAAAD8VgAAAAAAAP1WAAAAAAAAAAAAAP1WAAAAAAAA/lYAAAAAAAAAAAAA/lYAAAAAAAD/VgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+lYAAAAAAAD6VgAAAAAAAAAAAAAAwHJA"
				],
				[
					184,
					1,
					"left_delete",
					null,
					"AQAAAP5WAAAAAAAA/lYAAAAAAAABAAAARw",
					"AQAAAAAAAAABAAAA/1YAAAAAAAD/VgAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "reeValue"
					},
					"CAAAAP5WAAAAAAAA/1YAAAAAAAAAAAAA/1YAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAAFXAAAAAAAAAAAAAAFXAAAAAAAAAlcAAAAAAAAAAAAAAlcAAAAAAAADVwAAAAAAAAAAAAADVwAAAAAAAARXAAAAAAAAAAAAAARXAAAAAAAABVcAAAAAAAAAAAAABVcAAAAAAAAGVwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/lYAAAAAAAD+VgAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAZXAAAAAAAACFcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABlcAAAAAAAAGVwAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAAdXAAAAAAAACFcAAAAAAAAAAAAACFcAAAAAAAAJVwAAAAAAAAAAAAAJVwAAAAAAAApXAAAAAAAAAAAAAApXAAAAAAAAC1cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAB1cAAAAAAAAHVwAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": " obj"
					},
					"BAAAAAtXAAAAAAAADFcAAAAAAAAAAAAADFcAAAAAAAANVwAAAAAAAAAAAAANVwAAAAAAAA5XAAAAAAAAAAAAAA5XAAAAAAAAD1cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAC1cAAAAAAAALVwAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABBXAAAAAAAAEVcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEFcAAAAAAAAQVwAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABFXAAAAAAAAElcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEVcAAAAAAAARVwAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPpWAAAAAAAA+1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+lYAAAAAAAD6VgAAAAAAAAAAAAAAAAAA"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "\n\n\nreturn"
					},
					"DgAAADxXAAAAAAAAPVcAAAAAAAAAAAAAPVcAAAAAAAA+VwAAAAAAAAAAAAA+VwAAAAAAAD9XAAAAAAAAAAAAAD9XAAAAAAAAQFcAAAAAAAAAAAAAPVcAAAAAAAA9VwAAAAAAAAEAAAAgP1cAAAAAAABAVwAAAAAAAAAAAABAVwAAAAAAAEFXAAAAAAAAAAAAAD5XAAAAAAAAPlcAAAAAAAABAAAAIEBXAAAAAAAAQVcAAAAAAAAAAAAAQVcAAAAAAABCVwAAAAAAAAAAAABCVwAAAAAAAENXAAAAAAAAAAAAAENXAAAAAAAARFcAAAAAAAAAAAAARFcAAAAAAABFVwAAAAAAAAAAAABFVwAAAAAAAEZXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPFcAAAAAAAA8VwAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": " FALSE;"
					},
					"BwAAAEZXAAAAAAAAR1cAAAAAAAAAAAAAR1cAAAAAAABIVwAAAAAAAAAAAABIVwAAAAAAAElXAAAAAAAAAAAAAElXAAAAAAAASlcAAAAAAAAAAAAASlcAAAAAAABLVwAAAAAAAAAAAABLVwAAAAAAAExXAAAAAAAAAAAAAExXAAAAAAAATVcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARlcAAAAAAABGVwAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAE1XAAAAAAAATlcAAAAAAAAAAAAATlcAAAAAAABPVwAAAAAAAAAAAABPVwAAAAAAAFBXAAAAAAAAAAAAAE5XAAAAAAAATlcAAAAAAAABAAAAIE5XAAAAAAAATlcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATVcAAAAAAABNVwAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATlcAAAAAAABOVwAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAAAZWAAAAAAAASFcAAAAAAABIAQAALCBwcm90bzsKCiAgb2JqID0gSlNfRHVwVmFsdWUoY3R4LCB2YWx1ZSk7CiAgZG8gewogICAgaWYoSlNfR2V0T3duUHJvcGVydHkoY3R4LCBkZXNjLCBvYmosIHByb3ApID09IFRSVUUpCiAgICAgIHJldHVybiBUUlVFOwogICAgcHJvdG8gPSBKU19HZXRQcm90b3R5cGUoY3R4LCBvYmopOwoKICAgIGlmKEpTX1ZBTFVFX0dFVF9PQkoocHJvdG8pID09IEpTX1ZBTFVFX0dFVF9PQkoob2JqKSkKICAgICAgYnJlYWs7CgogICAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKCiAgICBvYmogPSBwcm90bzsKCiAgfSB3aGlsZShKU19Jc09iamVjdChvYmopKTsKCiAgcmV0dXJuIEZBTFNFOw",
					"AQAAAAAAAAABAAAABlYAAAAAAABOVwAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/modules",
		"/home/roman/Projects/plot-cv/quickjs/modules/bin",
		"/home/roman/Projects/plot-cv/quickjs/modules/build",
		"/home/roman/Projects/plot-cv/quickjs/modules/build/x86_64-linux-gnu",
		"/home/roman/Projects/plot-cv/quickjs/modules/DuckTales",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/build/x86_64-linux-gnu/modules/repl.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_predicate.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_misc.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-path.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/test-minnet.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/FindQuickJS.cmake",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/lib/core-net/pollfd.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/build/x86_64-linux-gnu/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/READMEs/README.coding.md",
		"/home/roman/Projects/plot-cv/quickjs/modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/stack.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.c",
		"/home/roman/Sources/opencv/modules/core/include/opencv2/core/mat.inl.hpp",
		"/opt/opencv-4.5.0/include/opencv4/opencv2/core/mat.hpp",
		"/home/roman/.config/sublime-text/Packages/User/Themes/TronLegacy.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_qjsm.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_mmap.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/base64.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lexer.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/defs.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_parser.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_console.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_stack.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/.clang-format",
		"/home/roman/Projects/plot-cv/quickjs/modules/virtual-properties.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_inspect.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_op_overloading.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_performance.js",
		"/home/roman/Projects/plot-cv/quickjs/libregexp.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/perf_hooks.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/functions.cmake",
		"/home/roman/Sources/opencv_contrib/modules/ximgproc/src/fast_line_detector.cpp",
		"/home/roman/Projects/plot-cv/quickjs/modules/iteration.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/property-enumeration.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/property-enumeration.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/ANSI-C-grammar-2011.l",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/Shell-Grammar.l",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_deep.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/bnflexer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_fs.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_path.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_treewalker.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_bjson.js",
		"/home/roman/Projects/c-img/yimg/stb_image.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/Shell-Grammar.y",
		"/home/roman/Projects/node/lib/internal/util/inspect.js",
		"/home/roman/Projects/node/lib/internal/util/types.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/usr.list"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 110.0,
		"where_history":
		[
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"SyscallError",
			"^js_inspec",
			"js_inspect_print",
			"\"compact",
			"depth;",
			"^js_i",
			"js_inspect_prin",
			"INSPECT_IS_COMPACT",
			"compact",
			"opts.com",
			"target_link",
			"location",
			"port.*Location",
			"Location",
			"PropertyDesc",
			"GetOwnProperty\\(",
			"JS_GetOwnProp",
			"getters",
			"JS_PROP_GETSET",
			"JS_GetOwnProperty\\(",
			"JS_GetOwnProperty",
			"JSPropertyDescriptor",
			"JS_GetOwnP",
			"getters",
			"JS_CGETSET_MAGIC_DEF",
			"fs\\.",
			"define",
			"\\.js",
			"EXIT",
			"cmdStart",
			"Type ",
			"Type",
			"controlC",
			"Ctrl-C",
			"handleChar",
			"handleByte",
			"sigintHan",
			"historyLoad",
			"FUNC_GETFD",
			"\"/proc/self/",
			"FUNC_GETROOT",
			"js_misc_proclink",
			"FUNC_GETCWD",
			"breakLength",
			"string_break_newline",
			"FUNC_GETINTERPRETER",
			"FUNC_",
			"js_misc_getcommandline",
			"sigintHandler",
			"handleByte",
			"js_misc_getprototypechain",
			"ret = \\((.*)\\);",
			"errno",
			"get_error",
			"->errno",
			"FUNC_SETEG",
			"FUNC_",
			"JS_NewInt32(ctx, ",
			"errno",
			"JS_Throw",
			"js_global_",
			"JS_HasProperty",
			"ENOENT",
			"js_syscallerror_constructor",
			"js_syscallerror_funcs",
			"JS_OBJECT_DEF",
			"JS_NewUint32",
			"FUNC_GETSID",
			"open\\(",
			"fopen",
			"dbuf_to",
			": {\n      value",
			",\n      configurable: true\n    },",
			"extendArray",
			"18",
			"predicate_nextarg(ctx, &args), predicate_nextarg(ctx, &args)",
			"parens",
			"predicate_dump",
			"\\(null",
			"predicate_dump",
			"INF",
			"PREDICATE_POW",
			"js_predicate_operator_mul_number",
			"METHOD_TOSTRING",
			"js_value_toint64_free",
			"js_predicate_data",
			"predicate_constant",
			"JS_DupValue\\(ctx, argv\\[[0-9]\\]\\)",
			"JS_DupValue\\(ctx, argv\\[[0-9]\\]\\)\\)",
			"js_arguments_at(&args, 0), js_arguments_at(&args, 1))",
			"predicate_nextarg",
			"JS_DupValue(ctx, js_arguments_shift(&args))",
			"predicate_argument(ctx,  js_arguments_shift(&args))",
			"predicate_argument(ctx, js_arguments_shift(&args))",
			"argv\\[1\\]",
			"predicate_argument",
			"predicate_typename",
			"predicate_dump",
			" = [0-9]+",
			"precedence",
			"js_value_types",
			", \"",
			"inrange",
			"return PRECEDENCE_",
			"value_to",
			"tonumber",
			"is_",
			"predicate_dump",
			"\\&args",
			"%s => ",
			"js_predicate_tostring",
			"&dbuf",
			"JS_DupValue",
			": : left",
			"js_set_tostring_tag",
			"js_dbuf_init",
			"dbuf_putstr",
			"js_dbuf_init",
			"predicate_constant",
			"predicate_typename",
			"inspect_meth",
			"RegExp",
			"values",
			"js_predicate_inspect",
			"lex",
			"js_predicate_inspect",
			"args\\.",
			"predicate_eval\\("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\"",
			"ret = \\1;",
			"->errnum",
			"(",
			"error",
			"JS_NewInt32",
			"",
			",",
			"left, right",
			"predicate_nextarg(ctx, &args)",
			"predicate_nextarg(ctx, &args),predicate_nextarg(ctx, &args))",
			"predicate_argument_shift(ctx, &args)",
			"js_arguments_shift(&args)",
			"",
			"ret = PRECEDENCE_",
			"args",
			"",
			"dbuf",
			": left",
			"pred",
			"args->",
			"r",
			"predicate_value",
			"",
			"'x'",
			"0",
			"\\1this.last_cmd",
			"\\1this.cmd",
			"level",
			"cmd",
			"  ",
			"",
			"\\1this.prompt",
			"",
			" globalThis.",
			"evalAnd",
			"commands",
			"",
			"handlers",
			"events",
			"this.",
			"\\1",
			"listeners",
			"events",
			"\\1",
			"jsm_pending_signals",
			"jsm_module_native",
			"js_pointer_data(ctx, obj)",
			"ShiftPredicate",
			".buf",
			"\\1",
			"file.close",
			"std.open",
			"js_misc_free_arraybuffer",
			"JS_SetPropertyStr",
			"jsm_load_module",
			"",
			"_?",
			"sockets",
			"qjsc_perf_hooks",
			"output->",
			"output",
			"\\1//printf",
			"",
			"sizeSync",
			"CreateOperatorSet",
			"",
			"loc",
			"location",
			"loc->",
			"jsm_load_package_json",
			"tmp",
			"    ",
			"  ",
			"BOOL\\njs_is_",
			"GeneratorPrototype",
			"SetIteratorPrototype",
			"MapIteratorPrototype",
			"hasBuiltIn",
			"hbiTs",
			"sSl",
			"ccAt",
			"formatNumber(",
			"isObject(value) && ",
			"pointer_toarray( ptr, ctx)",
			"moduleStack.size",
			"require('${m}')",
			"globalThis.code ?? 'C'",
			"code",
			"fs.",
			"jsm_load_script",
			"jsm_load_file",
			"require.",
			"dirname",
			"dir",
			"script",
			"this.id",
			"jsm_std_dump_error",
			"if(",
			"",
			")",
			"",
			"break;\n    }\n    \n    case",
			"lexer_continue",
			" property-enumeration.c property-enumeration.h",
			" ",
			"*",
			"jslex",
			"this."
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1342,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"color_scheme": "Packages/Outline/outline.hidden-tmTheme",
							"current_file": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									28,
									39
								],
								[
									441,
									463
								],
								[
									512,
									525
								],
								[
									566,
									584
								],
								[
									1558,
									1575
								],
								[
									1585,
									1593
								],
								[
									1611,
									1619
								],
								[
									1684,
									1694
								],
								[
									1708,
									1724
								],
								[
									1827,
									1843
								],
								[
									2083,
									2103
								],
								[
									2225,
									2245
								],
								[
									2733,
									2753
								],
								[
									2984,
									3003
								],
								[
									6551,
									6573
								],
								[
									8035,
									8057
								],
								[
									8262,
									8277
								],
								[
									8391,
									8417
								],
								[
									8861,
									8897
								],
								[
									9258,
									9280
								],
								[
									9599,
									9621
								],
								[
									10633,
									10647
								],
								[
									12187,
									12201
								],
								[
									13331,
									13353
								],
								[
									15207,
									15224
								],
								[
									15611,
									15628
								],
								[
									16633,
									16650
								],
								[
									18411,
									18427
								],
								[
									29701,
									29711
								],
								[
									30621,
									30640
								],
								[
									31042,
									31069
								],
								[
									31119,
									31146
								],
								[
									31397,
									31418
								],
								[
									31650,
									31665
								],
								[
									32548,
									32562
								],
								[
									32592,
									32606
								]
							],
							"symlist":
							[
								"\t‚ìÇ  _GNU_SOURCE ‚Ä¶ ‚Äî macro object",
								"‚Äî‚ìÇ‚Äì INSPECT_INT32T_INRANGE ( ) ‚Ä¶ ‚Äî macro ",
								"‚Äî‚ìÇ‚Äì INSPECT_LEVEL ( ) ‚Ä¶ ‚Äî macro ",
								"‚Äî‚ìÇ‚Äì INSPECT_IS_COMPACT ( ) ‚Ä¶ ‚Äî macro ",
								"\t‚ìâ  inspect_options_t ; ‚Äî typedef",
								"\t‚íû  prop_key ; ‚Äî type declaration",
								"‚Äî‚í∏‚Äì prop_key { ‚Ä¶ } ; ‚Äî type",
								"\t‚ìâ  prop_key_t ; ‚Äî typedef",
								"\t‚í°  js_inspect_print ( ) ; ‚Äî declaration",
								"‚Äî‚íª‚Äì regexp_predicate ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì inspect_screen_width ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì inspect_options_init ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì inspect_options_free ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì inspect_options_get ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì inspect_options_object ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì inspect_options_hidden ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì inspect_newline ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_object_getpropertynames ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_object_getpropertynames_recursive ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_custom_atom ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_custom_call ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_map ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_set ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_arraybuffer ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_regexp ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_number ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_string ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_print ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_tostring ( ) { ‚Ä¶ } ‚Äî ",
								"\t‚í°  js_debugger_build_backtrace ( ) ; ‚Äî declaration",
								"‚Äî‚íª‚Äì js_inspect_stacktrace_value ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_stacktrace ( ) { ‚Ä¶ } ‚Äî ",
								"‚Äî‚íª‚Äì js_inspect_init ( ) { ‚Ä¶ } ‚Äî ",
								"\t‚ìÇ  JS_INIT_MODULE ‚Ä¶ ‚Äî macro object",
								"\t‚ìÇ  JS_INIT_MODULE ‚Ä¶ ‚Äî macro object"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "quickjs-inspect.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32951,
						"regions":
						{
							"col_800000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										15433,
										15443
									]
								],
								"scope": "col_800000FF"
							},
							"col_800000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_800000FF_circle.png",
								"regions":
								[
									[
										15411,
										15411
									]
								],
								"scope": "col_gutter"
							},
							"col_AF00FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										19451,
										19465
									]
								],
								"scope": "col_AF00FFFF"
							},
							"col_AF00FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_AF00FFFF_circle.png",
								"regions":
								[
									[
										19412,
										19412
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								850,
								850
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "quickjs-misc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36049,
						"regions":
						{
						},
						"selection":
						[
							[
								718,
								2729
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3002.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/stack.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7842,
						"regions":
						{
						},
						"selection":
						[
							[
								65,
								65
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/util.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13168,
						"regions":
						{
						},
						"selection":
						[
							[
								12785,
								12785
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10600.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15467,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions": "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",
								"scope": ""
							}
						},
						"selection":
						[
							[
								13183,
								13183
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 8151.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8841,
						"regions":
						{
						},
						"selection":
						[
							[
								329,
								401
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36555,
						"regions":
						{
						},
						"selection":
						[
							[
								31864,
								31992
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 20285.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42478,
						"regions":
						{
						},
						"selection":
						[
							[
								27410,
								27422
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14965.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40658,
						"regions":
						{
						},
						"selection":
						[
							[
								21929,
								21904
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 18471.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.734840527156,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"",
				"tests/test_qjsm.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"str.h",
				"lib/str.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			],
			[
				"source.h",
				"src/source.h"
			],
			[
				"fdtable",
				"src/fdtable.h"
			],
			[
				"fd.h",
				"src/fd.h"
			],
			[
				"eval",
				"src/eval.h"
			],
			[
				"ieee",
				"doc/posix/ieee-p1003.2-d11.2-s3.txt"
			],
			[
				"expand.h",
				"src/expand.h"
			],
			[
				"builtin_dum",
				"src/builtin/builtin_dump.c"
			],
			[
				"h_main",
				"src/sh/sh_main.c"
			],
			[
				"parse_cha",
				"src/parse/parse_chartable.c"
			],
			[
				"debug.h",
				"src/debug.h"
			],
			[
				"exec_c",
				"src/exec/exec_command.c"
			],
			[
				"eval.h",
				"src/eval.h"
			],
			[
				"test-op",
				"test-operators.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 251.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
