{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"brea",
				"breakLength"
			],
			[
				"JS_Get",
				"JS_GetArrayBuffer"
			],
			[
				"JS_",
				"JS_ThrowTypeError"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Throw",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_Set",
				"JS_SetPropertyStr"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"js_sys",
				"js_syscallerror_get"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_",
				"js_sockaddr_class_id"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_New",
				"JS_NewStringLen"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"get",
				"getOwnPropertyNames"
			],
			[
				"JS_Thr",
				"JS_ThrowInternalError"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "BufferFile(file)\nBufferLengths(file)\nBufferOffsets(file)\nBufferRanges(file)\nWriteFile(file, tok)\nDumpLexer(lex)\nDumpToken(tok)\nImportType(seq)\nImportFile(seq)\nExportName(seq)\nAddExport(tokens)\nAddImport(tokens)\nPrintES6Import(imp)\nPrintCJSImport({ type, local, file })\n  main(...args)\nProcessFile(file)\n  self = function ParentheseBalancer(tok)\n  reset()\n  get depth()",
			"settings":
			{
				"buffer_size": 368,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					1029,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1514
							],
							[
								1632,
								1655
							],
							[
								1795,
								1818
							],
							[
								2093,
								2115
							],
							[
								2656,
								2680
							],
							[
								2985,
								3009
							],
							[
								3038,
								3044
							],
							[
								3195,
								3219
							],
							[
								3248,
								3254
							],
							[
								3344,
								3370
							],
							[
								3397,
								3403
							],
							[
								3451,
								3457
							],
							[
								3514,
								3520
							],
							[
								3834,
								3860
							],
							[
								3923,
								3929
							],
							[
								3977,
								3983
							],
							[
								4315,
								4321
							],
							[
								4357,
								4363
							],
							[
								4464,
								4470
							],
							[
								4506,
								4512
							],
							[
								4609,
								4615
							],
							[
								5122,
								5150
							],
							[
								5199,
								5220
							],
							[
								5294,
								5315
							],
							[
								5376,
								5397
							],
							[
								5470,
								5516
							],
							[
								5565,
								5571
							],
							[
								5645,
								5651
							],
							[
								5717,
								5723
							],
							[
								5794,
								5816
							],
							[
								6353,
								6375
							],
							[
								6585,
								6613
							],
							[
								6667,
								6685
							],
							[
								7313,
								7331
							],
							[
								7509,
								7526
							],
							[
								7955,
								7972
							],
							[
								8253,
								8264
							],
							[
								8340,
								8346
							],
							[
								8852,
								8870
							],
							[
								8964,
								8980
							],
							[
								9081,
								9120
							],
							[
								9494,
								9498
							],
							[
								9668,
								9675
							],
							[
								9744,
								9755
							],
							[
								11078,
								11082
							],
							[
								11561,
								11567
							],
							[
								11642,
								11655
							],
							[
								11755,
								11759
							],
							[
								11935,
								11941
							],
							[
								12019,
								12025
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABuBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgd2FpdEZvcihtcykKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHdlYWtBc3NpZ24ob2JqLCAuLi5hcmdzKQogIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgZnVuY3Rpb24qc3BsaXQoYnVmLCAuLi5wb2ludHMpCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAANQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1030,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1514
							],
							[
								1632,
								1655
							],
							[
								1795,
								1818
							],
							[
								2093,
								2115
							],
							[
								2656,
								2680
							],
							[
								2985,
								3009
							],
							[
								3038,
								3044
							],
							[
								3195,
								3219
							],
							[
								3248,
								3254
							],
							[
								3344,
								3370
							],
							[
								3397,
								3403
							],
							[
								3451,
								3457
							],
							[
								3514,
								3520
							],
							[
								3834,
								3860
							],
							[
								3923,
								3929
							],
							[
								3977,
								3983
							],
							[
								4315,
								4321
							],
							[
								4357,
								4363
							],
							[
								4464,
								4470
							],
							[
								4506,
								4512
							],
							[
								4609,
								4615
							],
							[
								5122,
								5150
							],
							[
								5199,
								5220
							],
							[
								5294,
								5315
							],
							[
								5376,
								5397
							],
							[
								5470,
								5516
							],
							[
								5565,
								5571
							],
							[
								5645,
								5651
							],
							[
								5717,
								5723
							],
							[
								5794,
								5816
							],
							[
								6353,
								6375
							],
							[
								6585,
								6613
							],
							[
								6667,
								6685
							],
							[
								7313,
								7331
							],
							[
								7509,
								7526
							],
							[
								7955,
								7972
							],
							[
								8253,
								8264
							],
							[
								8340,
								8346
							],
							[
								8852,
								8870
							],
							[
								8964,
								8980
							],
							[
								9081,
								9120
							],
							[
								9494,
								9498
							],
							[
								9668,
								9675
							],
							[
								9744,
								9755
							],
							[
								11078,
								11082
							],
							[
								11561,
								11567
							],
							[
								11642,
								11655
							],
							[
								11755,
								11759
							],
							[
								11939,
								11945
							],
							[
								12023,
								12029
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AQAAQnVmZmVyRmlsZShmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAAA1AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1031,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1514
							],
							[
								1632,
								1655
							],
							[
								1795,
								1818
							],
							[
								2093,
								2115
							],
							[
								2656,
								2680
							],
							[
								2985,
								3009
							],
							[
								3038,
								3044
							],
							[
								3195,
								3219
							],
							[
								3248,
								3254
							],
							[
								3344,
								3370
							],
							[
								3397,
								3403
							],
							[
								3451,
								3457
							],
							[
								3514,
								3520
							],
							[
								3834,
								3860
							],
							[
								3923,
								3929
							],
							[
								3977,
								3983
							],
							[
								4315,
								4321
							],
							[
								4357,
								4363
							],
							[
								4464,
								4470
							],
							[
								4506,
								4512
							],
							[
								4609,
								4615
							],
							[
								5122,
								5150
							],
							[
								5199,
								5220
							],
							[
								5294,
								5315
							],
							[
								5376,
								5397
							],
							[
								5470,
								5516
							],
							[
								5565,
								5571
							],
							[
								5645,
								5651
							],
							[
								5717,
								5723
							],
							[
								5794,
								5816
							],
							[
								6353,
								6375
							],
							[
								6585,
								6613
							],
							[
								6667,
								6685
							],
							[
								7313,
								7331
							],
							[
								7509,
								7526
							],
							[
								7955,
								7972
							],
							[
								8253,
								8264
							],
							[
								8340,
								8346
							],
							[
								8852,
								8870
							],
							[
								8964,
								8980
							],
							[
								9081,
								9120
							],
							[
								9494,
								9498
							],
							[
								9668,
								9675
							],
							[
								9744,
								9755
							],
							[
								11078,
								11082
							],
							[
								11561,
								11567
							],
							[
								11642,
								11655
							],
							[
								11755,
								11759
							],
							[
								11939,
								11945
							],
							[
								12023,
								12029
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AQAAQnVmZmVyRmlsZShmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAAA1AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1032,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1514
							],
							[
								1632,
								1655
							],
							[
								1795,
								1818
							],
							[
								2093,
								2115
							],
							[
								2656,
								2680
							],
							[
								2985,
								3009
							],
							[
								3038,
								3044
							],
							[
								3195,
								3219
							],
							[
								3248,
								3254
							],
							[
								3344,
								3370
							],
							[
								3397,
								3403
							],
							[
								3451,
								3457
							],
							[
								3514,
								3520
							],
							[
								3834,
								3860
							],
							[
								3923,
								3929
							],
							[
								3977,
								3983
							],
							[
								4315,
								4321
							],
							[
								4357,
								4363
							],
							[
								4464,
								4470
							],
							[
								4506,
								4512
							],
							[
								4609,
								4615
							],
							[
								5122,
								5150
							],
							[
								5199,
								5220
							],
							[
								5294,
								5315
							],
							[
								5376,
								5397
							],
							[
								5470,
								5516
							],
							[
								5565,
								5571
							],
							[
								5645,
								5651
							],
							[
								5717,
								5723
							],
							[
								5794,
								5816
							],
							[
								6353,
								6375
							],
							[
								6585,
								6613
							],
							[
								6667,
								6685
							],
							[
								7313,
								7331
							],
							[
								7509,
								7526
							],
							[
								7955,
								7972
							],
							[
								8253,
								8264
							],
							[
								8340,
								8346
							],
							[
								8852,
								8870
							],
							[
								8964,
								8980
							],
							[
								9081,
								9120
							],
							[
								9494,
								9498
							],
							[
								9668,
								9675
							],
							[
								9744,
								9755
							],
							[
								11078,
								11082
							],
							[
								11561,
								11567
							],
							[
								11642,
								11655
							],
							[
								11755,
								11759
							],
							[
								11943,
								11949
							],
							[
								12027,
								12033
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AQAAQnVmZmVyRmlsZShmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAAA1AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1038,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1514
							],
							[
								1632,
								1655
							],
							[
								1795,
								1818
							],
							[
								2093,
								2115
							],
							[
								2656,
								2680
							],
							[
								2985,
								3009
							],
							[
								3038,
								3044
							],
							[
								3195,
								3219
							],
							[
								3248,
								3254
							],
							[
								3344,
								3370
							],
							[
								3397,
								3403
							],
							[
								3451,
								3457
							],
							[
								3514,
								3520
							],
							[
								3834,
								3860
							],
							[
								3973,
								3979
							],
							[
								4027,
								4033
							],
							[
								4322,
								4328
							],
							[
								4364,
								4370
							],
							[
								4471,
								4477
							],
							[
								4513,
								4519
							],
							[
								4616,
								4622
							],
							[
								5129,
								5157
							],
							[
								5206,
								5227
							],
							[
								5301,
								5322
							],
							[
								5383,
								5404
							],
							[
								5477,
								5523
							],
							[
								5572,
								5578
							],
							[
								5652,
								5658
							],
							[
								5724,
								5730
							],
							[
								5801,
								5823
							],
							[
								6360,
								6382
							],
							[
								6592,
								6620
							],
							[
								6674,
								6692
							],
							[
								7320,
								7338
							],
							[
								7516,
								7533
							],
							[
								7962,
								7979
							],
							[
								8260,
								8271
							],
							[
								8347,
								8353
							],
							[
								8859,
								8877
							],
							[
								8971,
								8987
							],
							[
								9088,
								9127
							],
							[
								9501,
								9505
							],
							[
								9675,
								9682
							],
							[
								9751,
								9762
							],
							[
								11085,
								11089
							],
							[
								11568,
								11574
							],
							[
								11649,
								11662
							],
							[
								11762,
								11766
							],
							[
								11950,
								11956
							],
							[
								12034,
								12040
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA1AQAAQnVmZmVyRmlsZShmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAAA1AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANQEAAEJ1ZmZlckZpbGUoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQAAAAAAAAAANQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1039,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1514
							],
							[
								1632,
								1655
							],
							[
								1795,
								1818
							],
							[
								2093,
								2115
							],
							[
								2656,
								2680
							],
							[
								2985,
								3009
							],
							[
								3038,
								3044
							],
							[
								3195,
								3219
							],
							[
								3248,
								3254
							],
							[
								3344,
								3370
							],
							[
								3397,
								3403
							],
							[
								3451,
								3457
							],
							[
								3514,
								3520
							],
							[
								3834,
								3860
							],
							[
								3973,
								3979
							],
							[
								4027,
								4033
							],
							[
								4322,
								4328
							],
							[
								4364,
								4370
							],
							[
								4471,
								4477
							],
							[
								4513,
								4519
							],
							[
								4616,
								4622
							],
							[
								5129,
								5157
							],
							[
								5206,
								5227
							],
							[
								5301,
								5322
							],
							[
								5383,
								5404
							],
							[
								5477,
								5523
							],
							[
								5572,
								5578
							],
							[
								5652,
								5658
							],
							[
								5724,
								5730
							],
							[
								5801,
								5823
							],
							[
								6360,
								6382
							],
							[
								6592,
								6620
							],
							[
								6674,
								6692
							],
							[
								7320,
								7338
							],
							[
								7516,
								7533
							],
							[
								7962,
								7979
							],
							[
								8260,
								8271
							],
							[
								8347,
								8353
							],
							[
								8859,
								8877
							],
							[
								8971,
								8987
							],
							[
								9088,
								9127
							],
							[
								9501,
								9505
							],
							[
								9675,
								9682
							],
							[
								9751,
								9762
							],
							[
								11085,
								11089
							],
							[
								11568,
								11574
							],
							[
								11649,
								11662
							],
							[
								11762,
								11766
							],
							[
								11950,
								11956
							],
							[
								12034,
								12040
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AQAAQnVmZmVyRmlsZShmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAAA1AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1040,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AQAAQnVmZmVyRmlsZShmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1041,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1514
							],
							[
								1632,
								1655
							],
							[
								1795,
								1818
							],
							[
								2093,
								2115
							],
							[
								2656,
								2680
							],
							[
								2985,
								3009
							],
							[
								3038,
								3044
							],
							[
								3195,
								3219
							],
							[
								3248,
								3254
							],
							[
								3344,
								3370
							],
							[
								3397,
								3403
							],
							[
								3451,
								3457
							],
							[
								3514,
								3520
							],
							[
								3834,
								3860
							],
							[
								3973,
								3979
							],
							[
								4027,
								4033
							],
							[
								4329,
								4335
							],
							[
								4371,
								4377
							],
							[
								4478,
								4484
							],
							[
								4520,
								4526
							],
							[
								4623,
								4629
							],
							[
								5136,
								5164
							],
							[
								5213,
								5234
							],
							[
								5308,
								5329
							],
							[
								5390,
								5411
							],
							[
								5484,
								5530
							],
							[
								5579,
								5585
							],
							[
								5659,
								5665
							],
							[
								5731,
								5737
							],
							[
								5808,
								5830
							],
							[
								6367,
								6389
							],
							[
								6599,
								6627
							],
							[
								6681,
								6699
							],
							[
								7327,
								7345
							],
							[
								7523,
								7540
							],
							[
								7969,
								7986
							],
							[
								8171,
								8182
							],
							[
								8258,
								8264
							],
							[
								8770,
								8788
							],
							[
								8882,
								8898
							],
							[
								8999,
								9038
							],
							[
								9381,
								9385
							],
							[
								9540,
								9547
							],
							[
								9616,
								9627
							],
							[
								10950,
								10954
							],
							[
								11433,
								11439
							],
							[
								11514,
								11527
							],
							[
								11627,
								11631
							],
							[
								11807,
								11813
							],
							[
								11891,
								11897
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AQAAAAAAAAAAAAAANQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1042,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1514
							],
							[
								1632,
								1655
							],
							[
								1795,
								1818
							],
							[
								2093,
								2115
							],
							[
								2656,
								2680
							],
							[
								2985,
								3009
							],
							[
								3038,
								3044
							],
							[
								3195,
								3219
							],
							[
								3248,
								3254
							],
							[
								3344,
								3370
							],
							[
								3397,
								3403
							],
							[
								3451,
								3457
							],
							[
								3514,
								3520
							],
							[
								3834,
								3860
							],
							[
								3973,
								3979
							],
							[
								4027,
								4033
							],
							[
								4282,
								4288
							],
							[
								4324,
								4330
							],
							[
								4431,
								4437
							],
							[
								4473,
								4479
							],
							[
								4576,
								4582
							],
							[
								5089,
								5117
							],
							[
								5166,
								5187
							],
							[
								5261,
								5282
							],
							[
								5343,
								5364
							],
							[
								5437,
								5483
							],
							[
								5532,
								5538
							],
							[
								5612,
								5618
							],
							[
								5684,
								5690
							],
							[
								5761,
								5783
							],
							[
								6320,
								6342
							],
							[
								6552,
								6580
							],
							[
								6634,
								6652
							],
							[
								7280,
								7298
							],
							[
								7476,
								7493
							],
							[
								7922,
								7939
							],
							[
								8124,
								8135
							],
							[
								8211,
								8217
							],
							[
								8723,
								8741
							],
							[
								8835,
								8851
							],
							[
								8952,
								8991
							],
							[
								9334,
								9338
							],
							[
								9493,
								9500
							],
							[
								9569,
								9580
							],
							[
								10903,
								10907
							],
							[
								11386,
								11392
							],
							[
								11467,
								11480
							],
							[
								11580,
								11584
							],
							[
								11760,
								11766
							],
							[
								11844,
								11850
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA1AQAAQnVmZmVyRmlsZShmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAAA1AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANQEAAEJ1ZmZlckZpbGUoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQAAAAAAAAAANQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1045,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1544,
								1548
							],
							[
								1567,
								1596
							],
							[
								1714,
								1737
							],
							[
								1877,
								1900
							],
							[
								2175,
								2197
							],
							[
								2738,
								2762
							],
							[
								3067,
								3091
							],
							[
								3120,
								3126
							],
							[
								3277,
								3301
							],
							[
								3330,
								3336
							],
							[
								3426,
								3452
							],
							[
								3479,
								3485
							],
							[
								3533,
								3539
							],
							[
								3596,
								3602
							],
							[
								3916,
								3942
							],
							[
								4055,
								4061
							],
							[
								4109,
								4115
							],
							[
								4365,
								4371
							],
							[
								4407,
								4413
							],
							[
								4514,
								4520
							],
							[
								4556,
								4562
							],
							[
								4659,
								4665
							],
							[
								5172,
								5200
							],
							[
								5249,
								5270
							],
							[
								5344,
								5365
							],
							[
								5426,
								5447
							],
							[
								5520,
								5566
							],
							[
								5615,
								5621
							],
							[
								5695,
								5701
							],
							[
								5767,
								5773
							],
							[
								5844,
								5866
							],
							[
								6403,
								6425
							],
							[
								6635,
								6663
							],
							[
								6717,
								6735
							],
							[
								7363,
								7381
							],
							[
								7559,
								7576
							],
							[
								8005,
								8022
							],
							[
								8207,
								8218
							],
							[
								8294,
								8300
							],
							[
								8806,
								8824
							],
							[
								8918,
								8934
							],
							[
								9035,
								9074
							],
							[
								9417,
								9421
							],
							[
								9576,
								9583
							],
							[
								9652,
								9663
							],
							[
								10986,
								10990
							],
							[
								11469,
								11475
							],
							[
								11550,
								11563
							],
							[
								11663,
								11667
							],
							[
								11843,
								11849
							],
							[
								11927,
								11933
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AQAAQnVmZmVyRmlsZShmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAABJAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1046,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1544,
								1548
							],
							[
								1567,
								1596
							],
							[
								1714,
								1737
							],
							[
								1877,
								1900
							],
							[
								2175,
								2197
							],
							[
								2738,
								2762
							],
							[
								3067,
								3091
							],
							[
								3120,
								3126
							],
							[
								3277,
								3301
							],
							[
								3330,
								3336
							],
							[
								3426,
								3452
							],
							[
								3479,
								3485
							],
							[
								3533,
								3539
							],
							[
								3596,
								3602
							],
							[
								3916,
								3942
							],
							[
								4055,
								4061
							],
							[
								4109,
								4115
							],
							[
								4365,
								4371
							],
							[
								4407,
								4413
							],
							[
								4514,
								4520
							],
							[
								4556,
								4562
							],
							[
								4659,
								4665
							],
							[
								5172,
								5200
							],
							[
								5249,
								5270
							],
							[
								5344,
								5365
							],
							[
								5426,
								5447
							],
							[
								5520,
								5566
							],
							[
								5615,
								5621
							],
							[
								5695,
								5701
							],
							[
								5767,
								5773
							],
							[
								5844,
								5866
							],
							[
								6403,
								6425
							],
							[
								6635,
								6663
							],
							[
								6717,
								6735
							],
							[
								7363,
								7381
							],
							[
								7559,
								7576
							],
							[
								8005,
								8022
							],
							[
								8207,
								8218
							],
							[
								8294,
								8300
							],
							[
								8806,
								8824
							],
							[
								8918,
								8934
							],
							[
								9035,
								9074
							],
							[
								9417,
								9421
							],
							[
								9576,
								9583
							],
							[
								9652,
								9663
							],
							[
								10986,
								10990
							],
							[
								11469,
								11475
							],
							[
								11550,
								11563
							],
							[
								11663,
								11667
							],
							[
								11843,
								11849
							],
							[
								11927,
								11933
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1047,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1544,
								1548
							],
							[
								1567,
								1596
							],
							[
								1714,
								1737
							],
							[
								1877,
								1900
							],
							[
								2175,
								2197
							],
							[
								2738,
								2762
							],
							[
								3067,
								3091
							],
							[
								3120,
								3126
							],
							[
								3277,
								3301
							],
							[
								3330,
								3336
							],
							[
								3426,
								3452
							],
							[
								3479,
								3485
							],
							[
								3533,
								3539
							],
							[
								3596,
								3602
							],
							[
								3916,
								3942
							],
							[
								4055,
								4061
							],
							[
								4109,
								4115
							],
							[
								4365,
								4371
							],
							[
								4407,
								4413
							],
							[
								4514,
								4520
							],
							[
								4556,
								4562
							],
							[
								4659,
								4665
							],
							[
								5172,
								5200
							],
							[
								5249,
								5270
							],
							[
								5344,
								5365
							],
							[
								5426,
								5447
							],
							[
								5520,
								5566
							],
							[
								5615,
								5621
							],
							[
								5695,
								5701
							],
							[
								5767,
								5773
							],
							[
								5844,
								5866
							],
							[
								6403,
								6425
							],
							[
								6635,
								6663
							],
							[
								6717,
								6735
							],
							[
								7363,
								7381
							],
							[
								7559,
								7576
							],
							[
								8005,
								8022
							],
							[
								8207,
								8218
							],
							[
								8294,
								8300
							],
							[
								8806,
								8824
							],
							[
								8918,
								8934
							],
							[
								9035,
								9074
							],
							[
								9417,
								9421
							],
							[
								9576,
								9583
							],
							[
								9652,
								9663
							],
							[
								10986,
								10990
							],
							[
								11469,
								11475
							],
							[
								11550,
								11563
							],
							[
								11663,
								11667
							],
							[
								11843,
								11849
							],
							[
								11927,
								11933
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1048,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1544,
								1548
							],
							[
								1568,
								1597
							],
							[
								1715,
								1738
							],
							[
								1878,
								1901
							],
							[
								2176,
								2198
							],
							[
								2739,
								2763
							],
							[
								3068,
								3092
							],
							[
								3121,
								3127
							],
							[
								3278,
								3302
							],
							[
								3331,
								3337
							],
							[
								3427,
								3453
							],
							[
								3480,
								3486
							],
							[
								3534,
								3540
							],
							[
								3597,
								3603
							],
							[
								3917,
								3943
							],
							[
								4056,
								4062
							],
							[
								4110,
								4116
							],
							[
								4366,
								4372
							],
							[
								4408,
								4414
							],
							[
								4515,
								4521
							],
							[
								4557,
								4563
							],
							[
								4660,
								4666
							],
							[
								5173,
								5201
							],
							[
								5250,
								5271
							],
							[
								5345,
								5366
							],
							[
								5427,
								5448
							],
							[
								5521,
								5567
							],
							[
								5616,
								5622
							],
							[
								5696,
								5702
							],
							[
								5768,
								5774
							],
							[
								5845,
								5867
							],
							[
								6404,
								6426
							],
							[
								6636,
								6664
							],
							[
								6718,
								6736
							],
							[
								7364,
								7382
							],
							[
								7560,
								7577
							],
							[
								8006,
								8023
							],
							[
								8208,
								8219
							],
							[
								8295,
								8301
							],
							[
								8807,
								8825
							],
							[
								8919,
								8935
							],
							[
								9036,
								9075
							],
							[
								9418,
								9422
							],
							[
								9577,
								9584
							],
							[
								9653,
								9664
							],
							[
								10987,
								10991
							],
							[
								11470,
								11476
							],
							[
								11551,
								11564
							],
							[
								11664,
								11668
							],
							[
								11844,
								11850
							],
							[
								11928,
								11934
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1049,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1544,
								1548
							],
							[
								1567,
								1596
							],
							[
								1714,
								1737
							],
							[
								1877,
								1900
							],
							[
								2175,
								2197
							],
							[
								2738,
								2762
							],
							[
								3067,
								3091
							],
							[
								3120,
								3126
							],
							[
								3277,
								3301
							],
							[
								3330,
								3336
							],
							[
								3426,
								3452
							],
							[
								3479,
								3485
							],
							[
								3533,
								3539
							],
							[
								3596,
								3602
							],
							[
								3916,
								3942
							],
							[
								4055,
								4061
							],
							[
								4109,
								4115
							],
							[
								4365,
								4371
							],
							[
								4407,
								4413
							],
							[
								4514,
								4520
							],
							[
								4556,
								4562
							],
							[
								4659,
								4665
							],
							[
								5172,
								5200
							],
							[
								5249,
								5270
							],
							[
								5344,
								5365
							],
							[
								5426,
								5447
							],
							[
								5520,
								5566
							],
							[
								5615,
								5621
							],
							[
								5695,
								5701
							],
							[
								5767,
								5773
							],
							[
								5844,
								5866
							],
							[
								6403,
								6425
							],
							[
								6635,
								6663
							],
							[
								6717,
								6735
							],
							[
								7363,
								7381
							],
							[
								7559,
								7576
							],
							[
								8005,
								8022
							],
							[
								8207,
								8218
							],
							[
								8294,
								8300
							],
							[
								8806,
								8824
							],
							[
								8918,
								8934
							],
							[
								9035,
								9074
							],
							[
								9417,
								9421
							],
							[
								9576,
								9583
							],
							[
								9652,
								9663
							],
							[
								10986,
								10990
							],
							[
								11469,
								11475
							],
							[
								11550,
								11563
							],
							[
								11663,
								11667
							],
							[
								11843,
								11849
							],
							[
								11927,
								11933
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1052,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQEAAAAAAAAVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1053,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1544,
								1548
							],
							[
								1567,
								1596
							],
							[
								1714,
								1737
							],
							[
								1877,
								1900
							],
							[
								2175,
								2197
							],
							[
								2738,
								2762
							],
							[
								3067,
								3091
							],
							[
								3120,
								3126
							],
							[
								3277,
								3301
							],
							[
								3330,
								3336
							],
							[
								3426,
								3452
							],
							[
								3479,
								3485
							],
							[
								3533,
								3539
							],
							[
								3596,
								3602
							],
							[
								3916,
								3942
							],
							[
								4055,
								4061
							],
							[
								4109,
								4115
							],
							[
								4365,
								4371
							],
							[
								4407,
								4413
							],
							[
								4514,
								4520
							],
							[
								4556,
								4562
							],
							[
								4659,
								4665
							],
							[
								5172,
								5200
							],
							[
								5249,
								5270
							],
							[
								5344,
								5365
							],
							[
								5426,
								5447
							],
							[
								5520,
								5566
							],
							[
								5615,
								5621
							],
							[
								5695,
								5701
							],
							[
								5767,
								5773
							],
							[
								5844,
								5866
							],
							[
								6403,
								6425
							],
							[
								6635,
								6663
							],
							[
								6717,
								6735
							],
							[
								7363,
								7381
							],
							[
								7559,
								7576
							],
							[
								8005,
								8022
							],
							[
								8207,
								8218
							],
							[
								8294,
								8300
							],
							[
								8806,
								8824
							],
							[
								8918,
								8934
							],
							[
								9035,
								9074
							],
							[
								9417,
								9421
							],
							[
								9576,
								9583
							],
							[
								9652,
								9663
							],
							[
								10986,
								10990
							],
							[
								11469,
								11475
							],
							[
								11550,
								11563
							],
							[
								11663,
								11667
							],
							[
								11843,
								11849
							],
							[
								11927,
								11933
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AQAAAAAAAAAAAAAASQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1054,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1544,
								1548
							],
							[
								1567,
								1596
							],
							[
								1714,
								1737
							],
							[
								1877,
								1900
							],
							[
								2175,
								2197
							],
							[
								2738,
								2762
							],
							[
								3067,
								3091
							],
							[
								3120,
								3126
							],
							[
								3277,
								3301
							],
							[
								3330,
								3336
							],
							[
								3426,
								3452
							],
							[
								3479,
								3485
							],
							[
								3533,
								3539
							],
							[
								3596,
								3602
							],
							[
								3916,
								3942
							],
							[
								4055,
								4061
							],
							[
								4109,
								4115
							],
							[
								4365,
								4371
							],
							[
								4407,
								4413
							],
							[
								4514,
								4520
							],
							[
								4556,
								4562
							],
							[
								4659,
								4665
							],
							[
								5172,
								5200
							],
							[
								5249,
								5270
							],
							[
								5344,
								5365
							],
							[
								5426,
								5447
							],
							[
								5520,
								5566
							],
							[
								5615,
								5621
							],
							[
								5695,
								5701
							],
							[
								5767,
								5773
							],
							[
								5844,
								5866
							],
							[
								6403,
								6425
							],
							[
								6635,
								6663
							],
							[
								6717,
								6735
							],
							[
								7363,
								7381
							],
							[
								7559,
								7576
							],
							[
								8005,
								8022
							],
							[
								8207,
								8218
							],
							[
								8294,
								8300
							],
							[
								8806,
								8824
							],
							[
								8918,
								8934
							],
							[
								9035,
								9074
							],
							[
								9417,
								9421
							],
							[
								9576,
								9583
							],
							[
								9652,
								9663
							],
							[
								10986,
								10990
							],
							[
								11469,
								11475
							],
							[
								11550,
								11563
							],
							[
								11663,
								11667
							],
							[
								11894,
								11900
							],
							[
								11978,
								11984
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1055,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1544,
								1548
							],
							[
								1567,
								1596
							],
							[
								1714,
								1737
							],
							[
								1877,
								1900
							],
							[
								2175,
								2197
							],
							[
								2738,
								2762
							],
							[
								3067,
								3091
							],
							[
								3120,
								3126
							],
							[
								3277,
								3301
							],
							[
								3330,
								3336
							],
							[
								3426,
								3452
							],
							[
								3479,
								3485
							],
							[
								3533,
								3539
							],
							[
								3596,
								3602
							],
							[
								3916,
								3942
							],
							[
								4055,
								4061
							],
							[
								4109,
								4115
							],
							[
								4365,
								4371
							],
							[
								4407,
								4413
							],
							[
								4514,
								4520
							],
							[
								4556,
								4562
							],
							[
								4659,
								4665
							],
							[
								5172,
								5200
							],
							[
								5249,
								5270
							],
							[
								5344,
								5365
							],
							[
								5426,
								5447
							],
							[
								5520,
								5566
							],
							[
								5615,
								5621
							],
							[
								5695,
								5701
							],
							[
								5767,
								5773
							],
							[
								5844,
								5866
							],
							[
								6403,
								6425
							],
							[
								6635,
								6663
							],
							[
								6717,
								6735
							],
							[
								7363,
								7381
							],
							[
								7559,
								7576
							],
							[
								8005,
								8022
							],
							[
								8207,
								8218
							],
							[
								8294,
								8300
							],
							[
								8806,
								8824
							],
							[
								8918,
								8934
							],
							[
								9035,
								9074
							],
							[
								9417,
								9421
							],
							[
								9576,
								9583
							],
							[
								9652,
								9663
							],
							[
								10986,
								10990
							],
							[
								11469,
								11475
							],
							[
								11550,
								11563
							],
							[
								11663,
								11667
							],
							[
								11894,
								11900
							],
							[
								11978,
								11984
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1060,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1555,
								1584
							],
							[
								1702,
								1725
							],
							[
								1865,
								1888
							],
							[
								2163,
								2185
							],
							[
								2726,
								2750
							],
							[
								3055,
								3079
							],
							[
								3108,
								3114
							],
							[
								3265,
								3289
							],
							[
								3318,
								3324
							],
							[
								3414,
								3440
							],
							[
								3467,
								3473
							],
							[
								3521,
								3527
							],
							[
								3584,
								3590
							],
							[
								3904,
								3930
							],
							[
								4043,
								4049
							],
							[
								4097,
								4103
							],
							[
								4353,
								4359
							],
							[
								4395,
								4401
							],
							[
								4502,
								4508
							],
							[
								4544,
								4550
							],
							[
								4647,
								4653
							],
							[
								5160,
								5188
							],
							[
								5237,
								5258
							],
							[
								5332,
								5353
							],
							[
								5414,
								5435
							],
							[
								5508,
								5554
							],
							[
								5603,
								5609
							],
							[
								5683,
								5689
							],
							[
								5755,
								5761
							],
							[
								5832,
								5854
							],
							[
								6391,
								6413
							],
							[
								6623,
								6651
							],
							[
								6705,
								6723
							],
							[
								7351,
								7369
							],
							[
								7547,
								7564
							],
							[
								7993,
								8010
							],
							[
								8195,
								8206
							],
							[
								8282,
								8288
							],
							[
								8794,
								8812
							],
							[
								8906,
								8922
							],
							[
								9023,
								9062
							],
							[
								9405,
								9409
							],
							[
								9564,
								9571
							],
							[
								9640,
								9651
							],
							[
								10974,
								10978
							],
							[
								11457,
								11463
							],
							[
								11538,
								11551
							],
							[
								11651,
								11655
							],
							[
								11881,
								11887
							],
							[
								11965,
								11971
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1061,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1115,
								1135
							],
							[
								1280,
								1296
							],
							[
								1350,
								1369
							],
							[
								1404,
								1420
							],
							[
								1476,
								1492
							],
							[
								1555,
								1589
							],
							[
								1612,
								1644
							],
							[
								1667,
								1710
							],
							[
								1951,
								1963
							],
							[
								3786,
								3805
							],
							[
								3903,
								3919
							],
							[
								3981,
								3999
							],
							[
								4063,
								4082
							],
							[
								4147,
								4156
							],
							[
								4211,
								4228
							],
							[
								4291,
								4308
							],
							[
								4371,
								4385
							],
							[
								4445,
								4460
							],
							[
								4521,
								4536
							],
							[
								4597,
								4605
							],
							[
								4659,
								4671
							],
							[
								4729,
								4739
							],
							[
								4795,
								4806
							],
							[
								4863,
								4871
							],
							[
								4925,
								4947
							],
							[
								5015,
								5030
							],
							[
								5091,
								5113
							],
							[
								5181,
								5197
							],
							[
								5259,
								5275
							],
							[
								5337,
								5349
							],
							[
								5407,
								5419
							],
							[
								5477,
								5490
							],
							[
								5549,
								5567
							],
							[
								5625,
								5643
							],
							[
								5707,
								5729
							],
							[
								5797,
								5824
							],
							[
								5897,
								5914
							],
							[
								5971,
								5988
							],
							[
								6045,
								6062
							],
							[
								6109,
								6125
							],
							[
								6208,
								6224
							],
							[
								6296,
								6312
							],
							[
								6384,
								6401
							],
							[
								6458,
								6478
							],
							[
								6537,
								6557
							],
							[
								6716,
								6735
							],
							[
								6811,
								6818
							],
							[
								6847,
								6867
							],
							[
								6937,
								6952
							],
							[
								7013,
								7039
							],
							[
								7117,
								7138
							],
							[
								7216,
								7242
							],
							[
								7288,
								7313
							],
							[
								7398,
								7440
							],
							[
								7574,
								7614
							],
							[
								10758,
								10801
							],
							[
								11182,
								11217
							],
							[
								11373,
								11391
							],
							[
								11421,
								11426
							],
							[
								11516,
								11543
							],
							[
								11662,
								11683
							],
							[
								11712,
								11728
							],
							[
								11821,
								11856
							],
							[
								11896,
								11914
							],
							[
								12101,
								12122
							],
							[
								12146,
								12156
							],
							[
								12195,
								12225
							],
							[
								12553,
								12587
							],
							[
								12888,
								12922
							],
							[
								13142,
								13176
							],
							[
								13242,
								13278
							],
							[
								13353,
								13370
							],
							[
								13529,
								13566
							],
							[
								13567,
								13581
							],
							[
								13587,
								13591
							],
							[
								13666,
								13698
							],
							[
								13726,
								13752
							],
							[
								14077,
								14099
							],
							[
								14137,
								14153
							],
							[
								14168,
								14175
							],
							[
								14197,
								14213
							],
							[
								14293,
								14310
							],
							[
								14311,
								14320
							],
							[
								14374,
								14391
							],
							[
								14392,
								14401
							],
							[
								14463,
								14480
							],
							[
								14481,
								14504
							],
							[
								14562,
								14586
							],
							[
								17213,
								17241
							],
							[
								17672,
								17676
							],
							[
								17804,
								17817
							],
							[
								18133,
								18145
							],
							[
								18408,
								18421
							],
							[
								18526,
								18540
							],
							[
								19433,
								19461
							],
							[
								19577,
								19590
							],
							[
								19702,
								19728
							],
							[
								20441,
								20503
							],
							[
								20537,
								20606
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAG4FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1062,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
						"symkeys":
						[
							[
								77,
								88
							],
							[
								313,
								322
							],
							[
								629,
								642
							],
							[
								928,
								940
							],
							[
								1170,
								1180
							],
							[
								1333,
								1344
							],
							[
								1500,
								1510
							],
							[
								1814,
								1824
							],
							[
								1947,
								1957
							],
							[
								2040,
								2049
							],
							[
								2354,
								2368
							],
							[
								2573,
								2585
							],
							[
								2737,
								2754
							],
							[
								2949,
								2970
							],
							[
								3592,
								3614
							],
							[
								4255,
								4278
							],
							[
								4679,
								4695
							],
							[
								6230,
								6244
							],
							[
								6436,
								6454
							],
							[
								6696,
								6710
							],
							[
								7043,
								7058
							],
							[
								7276,
								7294
							],
							[
								7461,
								7470
							],
							[
								7824,
								7839
							],
							[
								9110,
								9124
							],
							[
								9560,
								9578
							],
							[
								9656,
								9674
							],
							[
								9860,
								9877
							],
							[
								10049,
								10066
							],
							[
								10277,
								10294
							],
							[
								10420,
								10436
							],
							[
								10621,
								10645
							],
							[
								10865,
								10884
							],
							[
								11039,
								11055
							]
						],
						"symlist":
						[
							"—Ⓕ– ansi_length ( ) { … } — function",
							"—Ⓕ– ansi_skip ( ) { … } — function",
							"—Ⓕ– ansi_truncate ( ) { … } — function",
							"—Ⓕ– array_search ( ) { … } — function",
							"—Ⓕ– str_escape ( ) { … } — function",
							"—Ⓕ– byte_escape ( ) { … } — function",
							"—Ⓕ– byte_findb ( ) { … } — function",
							"—Ⓕ– byte_finds ( ) { … } — function",
							"—Ⓕ– byte_equal ( ) { … } — function",
							"—Ⓕ– dbuf_at_n ( ) { … } — function",
							"—Ⓕ– dbuf_last_line ( ) { … } — function",
							"—Ⓕ– dbuf_prepend ( ) { … } — function",
							"—Ⓕ– dbuf_put_colorstr ( ) { … } — function",
							"—Ⓕ– dbuf_put_escaped_pred ( ) { … } — function",
							"—Ⓕ– dbuf_put_escaped_table ( ) { … } — function",
							"—Ⓕ– dbuf_put_unescaped_pred ( ) { … } — function",
							"—Ⓕ– dbuf_put_escaped ( ) { … } — function",
							"—Ⓕ– dbuf_put_value ( ) { … } — function",
							"—Ⓕ– dbuf_reserve_start ( ) { … } — function",
							"—Ⓕ– dbuf_token_pop ( ) { … } — function",
							"—Ⓕ– dbuf_token_push ( ) { … } — function",
							"—Ⓕ– dbuf_tostring_free ( ) { … } — function",
							"—Ⓕ– dbuf_load ( ) { … } — function",
							"—Ⓕ– js_input_buffer ( ) { … } — function",
							"—Ⓕ– js_input_chars ( ) { … } — function",
							"—Ⓕ– input_buffer_valid ( ) { … } — function",
							"—Ⓕ– input_buffer_clone ( ) { … } — function",
							"—Ⓕ– input_buffer_dump ( ) { … } — function",
							"—Ⓕ– input_buffer_free ( ) { … } — function",
							"—Ⓕ– input_buffer_peek ( ) { … } — function",
							"—Ⓕ– input_buffer_get ( ) { … } — function",
							"—Ⓕ– input_buffer_currentline ( ) { … } — function",
							"—Ⓕ– input_buffer_column ( ) { … } — function",
							"—Ⓕ– js_offset_length ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABuBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgd2FpdEZvcihtcykKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHdlYWtBc3NpZ24ob2JqLCAuLi5hcmdzKQogIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgZnVuY3Rpb24qc3BsaXQoYnVmLCAuLi5wb2ludHMpCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAcAUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1063,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1555,
								1584
							],
							[
								1702,
								1725
							],
							[
								1865,
								1888
							],
							[
								2163,
								2185
							],
							[
								2726,
								2750
							],
							[
								3055,
								3079
							],
							[
								3108,
								3114
							],
							[
								3265,
								3289
							],
							[
								3318,
								3324
							],
							[
								3414,
								3440
							],
							[
								3467,
								3473
							],
							[
								3521,
								3527
							],
							[
								3584,
								3590
							],
							[
								3904,
								3930
							],
							[
								4043,
								4049
							],
							[
								4097,
								4103
							],
							[
								4353,
								4359
							],
							[
								4395,
								4401
							],
							[
								4502,
								4508
							],
							[
								4544,
								4550
							],
							[
								4647,
								4653
							],
							[
								5160,
								5188
							],
							[
								5237,
								5258
							],
							[
								5332,
								5353
							],
							[
								5414,
								5435
							],
							[
								5508,
								5554
							],
							[
								5603,
								5609
							],
							[
								5683,
								5689
							],
							[
								5755,
								5761
							],
							[
								5832,
								5854
							],
							[
								6391,
								6413
							],
							[
								6623,
								6651
							],
							[
								6705,
								6723
							],
							[
								7351,
								7369
							],
							[
								7547,
								7564
							],
							[
								7993,
								8010
							],
							[
								8195,
								8206
							],
							[
								8282,
								8288
							],
							[
								8794,
								8812
							],
							[
								8906,
								8922
							],
							[
								9023,
								9062
							],
							[
								9405,
								9409
							],
							[
								9564,
								9571
							],
							[
								9640,
								9651
							],
							[
								10974,
								10978
							],
							[
								11457,
								11463
							],
							[
								11538,
								11551
							],
							[
								11651,
								11655
							],
							[
								11881,
								11887
							],
							[
								11965,
								11971
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADEBgAA4oCU4pK74oCTIGFuc2lfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYW5zaV9za2lwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYW5zaV90cnVuY2F0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFycmF5X3NlYXJjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHN0cl9lc2NhcGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBieXRlX2VzY2FwZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ5dGVfZmluZGIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBieXRlX2ZpbmRzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnl0ZV9lcXVhbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRidWZfYXRfbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRidWZfbGFzdF9saW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZGJ1Zl9wcmVwZW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZGJ1Zl9wdXRfY29sb3JzdHIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkYnVmX3B1dF9lc2NhcGVkX3ByZWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkYnVmX3B1dF9lc2NhcGVkX3RhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZGJ1Zl9wdXRfdW5lc2NhcGVkX3ByZWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkYnVmX3B1dF9lc2NhcGVkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZGJ1Zl9wdXRfdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkYnVmX3Jlc2VydmVfc3RhcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkYnVmX3Rva2VuX3BvcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRidWZfdG9rZW5fcHVzaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRidWZfdG9zdHJpbmdfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRidWZfbG9hZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2lucHV0X2J1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2lucHV0X2NoYXJzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5wdXRfYnVmZmVyX3ZhbGlkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5wdXRfYnVmZmVyX2Nsb25lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5wdXRfYnVmZmVyX2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnB1dF9idWZmZXJfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGlucHV0X2J1ZmZlcl9wZWVrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5wdXRfYnVmZmVyX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGlucHV0X2J1ZmZlcl9jdXJyZW50bGluZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGlucHV0X2J1ZmZlcl9jb2x1bW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vZmZzZXRfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAASQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1070,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwEAAAAAAAA7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					1071,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1555,
								1584
							],
							[
								1702,
								1725
							],
							[
								1865,
								1888
							],
							[
								2163,
								2185
							],
							[
								2726,
								2750
							],
							[
								3055,
								3079
							],
							[
								3108,
								3114
							],
							[
								3265,
								3289
							],
							[
								3318,
								3324
							],
							[
								3414,
								3440
							],
							[
								3467,
								3473
							],
							[
								3521,
								3527
							],
							[
								3584,
								3590
							],
							[
								3904,
								3930
							],
							[
								4043,
								4049
							],
							[
								4097,
								4103
							],
							[
								4353,
								4359
							],
							[
								4395,
								4401
							],
							[
								4502,
								4508
							],
							[
								4544,
								4550
							],
							[
								4647,
								4653
							],
							[
								5160,
								5188
							],
							[
								5237,
								5258
							],
							[
								5332,
								5353
							],
							[
								5414,
								5435
							],
							[
								5508,
								5554
							],
							[
								5603,
								5609
							],
							[
								5683,
								5689
							],
							[
								5755,
								5761
							],
							[
								5832,
								5854
							],
							[
								6391,
								6413
							],
							[
								6623,
								6651
							],
							[
								6705,
								6723
							],
							[
								7351,
								7369
							],
							[
								7547,
								7564
							],
							[
								7993,
								8010
							],
							[
								8195,
								8206
							],
							[
								8282,
								8288
							],
							[
								8794,
								8812
							],
							[
								8906,
								8922
							],
							[
								9023,
								9062
							],
							[
								9405,
								9409
							],
							[
								9564,
								9571
							],
							[
								9640,
								9651
							],
							[
								10974,
								10978
							],
							[
								11457,
								11463
							],
							[
								11538,
								11551
							],
							[
								11651,
								11655
							],
							[
								11881,
								11887
							],
							[
								11965,
								11971
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AQAAAAAAAAAAAAAASQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1072,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1073,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1555,
								1584
							],
							[
								1702,
								1725
							],
							[
								1865,
								1888
							],
							[
								2163,
								2185
							],
							[
								2726,
								2750
							],
							[
								3055,
								3079
							],
							[
								3108,
								3114
							],
							[
								3265,
								3289
							],
							[
								3318,
								3324
							],
							[
								3414,
								3440
							],
							[
								3467,
								3473
							],
							[
								3521,
								3527
							],
							[
								3584,
								3590
							],
							[
								3904,
								3930
							],
							[
								4043,
								4049
							],
							[
								4097,
								4103
							],
							[
								4353,
								4359
							],
							[
								4395,
								4401
							],
							[
								4502,
								4508
							],
							[
								4544,
								4550
							],
							[
								4647,
								4653
							],
							[
								5160,
								5188
							],
							[
								5237,
								5258
							],
							[
								5332,
								5353
							],
							[
								5414,
								5435
							],
							[
								5508,
								5554
							],
							[
								5603,
								5609
							],
							[
								5683,
								5689
							],
							[
								5755,
								5761
							],
							[
								5832,
								5854
							],
							[
								6391,
								6413
							],
							[
								6623,
								6651
							],
							[
								6705,
								6723
							],
							[
								7351,
								7369
							],
							[
								7547,
								7564
							],
							[
								7993,
								8010
							],
							[
								8195,
								8206
							],
							[
								8282,
								8288
							],
							[
								8794,
								8812
							],
							[
								8906,
								8922
							],
							[
								9023,
								9062
							],
							[
								9405,
								9409
							],
							[
								9564,
								9571
							],
							[
								9640,
								9651
							],
							[
								10974,
								10978
							],
							[
								11457,
								11463
							],
							[
								11538,
								11551
							],
							[
								11651,
								11655
							],
							[
								11881,
								11887
							],
							[
								11965,
								11971
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AQAAAAAAAAAAAAAASQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1074,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1555,
								1584
							],
							[
								1702,
								1725
							],
							[
								1865,
								1888
							],
							[
								2163,
								2185
							],
							[
								2726,
								2750
							],
							[
								3055,
								3079
							],
							[
								3108,
								3114
							],
							[
								3265,
								3289
							],
							[
								3318,
								3324
							],
							[
								3414,
								3440
							],
							[
								3467,
								3473
							],
							[
								3521,
								3527
							],
							[
								3584,
								3590
							],
							[
								3904,
								3930
							],
							[
								4043,
								4049
							],
							[
								4097,
								4103
							],
							[
								4353,
								4359
							],
							[
								4395,
								4401
							],
							[
								4502,
								4508
							],
							[
								4544,
								4550
							],
							[
								4647,
								4653
							],
							[
								5160,
								5188
							],
							[
								5237,
								5258
							],
							[
								5332,
								5353
							],
							[
								5414,
								5435
							],
							[
								5508,
								5554
							],
							[
								5603,
								5609
							],
							[
								5683,
								5689
							],
							[
								5755,
								5761
							],
							[
								5832,
								5854
							],
							[
								6391,
								6413
							],
							[
								6623,
								6651
							],
							[
								6705,
								6723
							],
							[
								7351,
								7369
							],
							[
								7547,
								7564
							],
							[
								7993,
								8010
							],
							[
								8195,
								8206
							],
							[
								8282,
								8288
							],
							[
								8794,
								8812
							],
							[
								8906,
								8922
							],
							[
								9023,
								9062
							],
							[
								9405,
								9409
							],
							[
								9564,
								9571
							],
							[
								9640,
								9651
							],
							[
								10974,
								10978
							],
							[
								11457,
								11463
							],
							[
								11538,
								11551
							],
							[
								11651,
								11655
							],
							[
								11877,
								11883
							],
							[
								11961,
								11967
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1078,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1595
							],
							[
								1713,
								1736
							],
							[
								1876,
								1899
							],
							[
								2174,
								2196
							],
							[
								2737,
								2761
							],
							[
								3066,
								3090
							],
							[
								3119,
								3125
							],
							[
								3276,
								3300
							],
							[
								3329,
								3335
							],
							[
								3425,
								3451
							],
							[
								3478,
								3484
							],
							[
								3532,
								3538
							],
							[
								3595,
								3601
							],
							[
								3915,
								3941
							],
							[
								4054,
								4060
							],
							[
								4108,
								4114
							],
							[
								4364,
								4370
							],
							[
								4406,
								4412
							],
							[
								4513,
								4519
							],
							[
								4555,
								4561
							],
							[
								4658,
								4664
							],
							[
								5171,
								5199
							],
							[
								5248,
								5269
							],
							[
								5343,
								5364
							],
							[
								5425,
								5446
							],
							[
								5519,
								5565
							],
							[
								5614,
								5620
							],
							[
								5694,
								5700
							],
							[
								5766,
								5772
							],
							[
								5843,
								5865
							],
							[
								6402,
								6424
							],
							[
								6634,
								6662
							],
							[
								6716,
								6734
							],
							[
								7362,
								7380
							],
							[
								7558,
								7575
							],
							[
								8004,
								8021
							],
							[
								8206,
								8217
							],
							[
								8293,
								8299
							],
							[
								8805,
								8823
							],
							[
								8917,
								8933
							],
							[
								9034,
								9073
							],
							[
								9416,
								9420
							],
							[
								9575,
								9582
							],
							[
								9651,
								9662
							],
							[
								10985,
								10989
							],
							[
								11468,
								11474
							],
							[
								11549,
								11562
							],
							[
								11662,
								11666
							],
							[
								11888,
								11894
							],
							[
								11972,
								11978
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAEkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1079,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1641
							],
							[
								1662,
								1691
							],
							[
								1809,
								1832
							],
							[
								1972,
								1995
							],
							[
								2270,
								2292
							],
							[
								2833,
								2857
							],
							[
								3162,
								3186
							],
							[
								3215,
								3221
							],
							[
								3372,
								3396
							],
							[
								3425,
								3431
							],
							[
								3521,
								3547
							],
							[
								3574,
								3580
							],
							[
								3628,
								3634
							],
							[
								3691,
								3697
							],
							[
								4011,
								4037
							],
							[
								4150,
								4156
							],
							[
								4204,
								4210
							],
							[
								4460,
								4466
							],
							[
								4502,
								4508
							],
							[
								4609,
								4615
							],
							[
								4651,
								4657
							],
							[
								4754,
								4760
							],
							[
								5267,
								5295
							],
							[
								5344,
								5365
							],
							[
								5439,
								5460
							],
							[
								5521,
								5542
							],
							[
								5615,
								5661
							],
							[
								5710,
								5716
							],
							[
								5790,
								5796
							],
							[
								5862,
								5868
							],
							[
								5939,
								5961
							],
							[
								6498,
								6520
							],
							[
								6730,
								6758
							],
							[
								6812,
								6830
							],
							[
								7458,
								7476
							],
							[
								7654,
								7671
							],
							[
								8100,
								8117
							],
							[
								8302,
								8313
							],
							[
								8389,
								8395
							],
							[
								8901,
								8919
							],
							[
								9013,
								9029
							],
							[
								9130,
								9169
							],
							[
								9512,
								9516
							],
							[
								9671,
								9678
							],
							[
								9747,
								9758
							],
							[
								11081,
								11085
							],
							[
								11564,
								11570
							],
							[
								11645,
								11658
							],
							[
								11758,
								11762
							],
							[
								11984,
								11990
							],
							[
								12068,
								12074
							],
							[
								12466,
								12478
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, ],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>",
							"catch(error)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABJAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAGwBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQogIGNhdGNoKGVycm9yKQAAAAAAAAAAbAEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1080,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1645
							],
							[
								1666,
								1695
							],
							[
								1813,
								1836
							],
							[
								1976,
								1999
							],
							[
								2274,
								2296
							],
							[
								2837,
								2861
							],
							[
								3166,
								3190
							],
							[
								3219,
								3225
							],
							[
								3376,
								3400
							],
							[
								3429,
								3435
							],
							[
								3525,
								3551
							],
							[
								3578,
								3584
							],
							[
								3632,
								3638
							],
							[
								3695,
								3701
							],
							[
								4015,
								4041
							],
							[
								4154,
								4160
							],
							[
								4208,
								4214
							],
							[
								4464,
								4470
							],
							[
								4506,
								4512
							],
							[
								4613,
								4619
							],
							[
								4655,
								4661
							],
							[
								4758,
								4764
							],
							[
								5271,
								5299
							],
							[
								5348,
								5369
							],
							[
								5443,
								5464
							],
							[
								5525,
								5546
							],
							[
								5619,
								5665
							],
							[
								5714,
								5720
							],
							[
								5794,
								5800
							],
							[
								5866,
								5872
							],
							[
								5943,
								5965
							],
							[
								6502,
								6524
							],
							[
								6734,
								6762
							],
							[
								6816,
								6834
							],
							[
								7462,
								7480
							],
							[
								7658,
								7675
							],
							[
								8104,
								8121
							],
							[
								8306,
								8317
							],
							[
								8393,
								8399
							],
							[
								8905,
								8923
							],
							[
								9017,
								9033
							],
							[
								9134,
								9173
							],
							[
								9516,
								9520
							],
							[
								9675,
								9682
							],
							[
								9751,
								9762
							],
							[
								11085,
								11089
							],
							[
								11568,
								11574
							],
							[
								11649,
								11662
							],
							[
								11762,
								11766
							],
							[
								11988,
								11994
							],
							[
								12072,
								12078
							],
							[
								12470,
								12482
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>",
							"catch(error)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABsAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQogIGNhdGNoKGVycm9yKQAAAAAAAAAAbAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwBAABCdWZmZXJGaWxlKGZpbGUpCkJ1ZmZlckxlbmd0aHMoZmlsZSkKQnVmZmVyT2Zmc2V0cyhmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpCiAgY2F0Y2goZXJyb3IpAAAAAAAAAABsAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1081,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1645
							],
							[
								1676,
								1705
							],
							[
								1823,
								1846
							],
							[
								1986,
								2009
							],
							[
								2284,
								2306
							],
							[
								2847,
								2871
							],
							[
								3176,
								3200
							],
							[
								3229,
								3235
							],
							[
								3386,
								3410
							],
							[
								3439,
								3445
							],
							[
								3535,
								3561
							],
							[
								3588,
								3594
							],
							[
								3642,
								3648
							],
							[
								3705,
								3711
							],
							[
								4025,
								4051
							],
							[
								4164,
								4170
							],
							[
								4218,
								4224
							],
							[
								4474,
								4480
							],
							[
								4516,
								4522
							],
							[
								4623,
								4629
							],
							[
								4665,
								4671
							],
							[
								4768,
								4774
							],
							[
								5281,
								5309
							],
							[
								5358,
								5379
							],
							[
								5453,
								5474
							],
							[
								5535,
								5556
							],
							[
								5629,
								5675
							],
							[
								5724,
								5730
							],
							[
								5804,
								5810
							],
							[
								5876,
								5882
							],
							[
								5953,
								5975
							],
							[
								6512,
								6534
							],
							[
								6744,
								6772
							],
							[
								6826,
								6844
							],
							[
								7472,
								7490
							],
							[
								7668,
								7685
							],
							[
								8114,
								8131
							],
							[
								8316,
								8327
							],
							[
								8403,
								8409
							],
							[
								8915,
								8933
							],
							[
								9027,
								9043
							],
							[
								9144,
								9183
							],
							[
								9526,
								9530
							],
							[
								9685,
								9692
							],
							[
								9761,
								9772
							],
							[
								11095,
								11099
							],
							[
								11578,
								11584
							],
							[
								11659,
								11672
							],
							[
								11772,
								11776
							],
							[
								11998,
								12004
							],
							[
								12082,
								12088
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABsAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQogIGNhdGNoKGVycm9yKQAAAAAAAAAAXQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0BAABCdWZmZXJGaWxlKGZpbGUpCkJ1ZmZlckxlbmd0aHMoZmlsZSkKQnVmZmVyT2Zmc2V0cyhmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAABdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1082,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1645
							],
							[
								1679,
								1708
							],
							[
								1826,
								1849
							],
							[
								1989,
								2012
							],
							[
								2287,
								2309
							],
							[
								2850,
								2874
							],
							[
								3179,
								3203
							],
							[
								3232,
								3238
							],
							[
								3389,
								3413
							],
							[
								3442,
								3448
							],
							[
								3538,
								3564
							],
							[
								3591,
								3597
							],
							[
								3645,
								3651
							],
							[
								3708,
								3714
							],
							[
								4028,
								4054
							],
							[
								4167,
								4173
							],
							[
								4221,
								4227
							],
							[
								4477,
								4483
							],
							[
								4519,
								4525
							],
							[
								4626,
								4632
							],
							[
								4668,
								4674
							],
							[
								4771,
								4777
							],
							[
								5284,
								5312
							],
							[
								5361,
								5382
							],
							[
								5456,
								5477
							],
							[
								5538,
								5559
							],
							[
								5632,
								5678
							],
							[
								5727,
								5733
							],
							[
								5807,
								5813
							],
							[
								5879,
								5885
							],
							[
								5956,
								5978
							],
							[
								6515,
								6537
							],
							[
								6747,
								6775
							],
							[
								6829,
								6847
							],
							[
								7475,
								7493
							],
							[
								7671,
								7688
							],
							[
								8117,
								8134
							],
							[
								8319,
								8330
							],
							[
								8406,
								8412
							],
							[
								8918,
								8936
							],
							[
								9030,
								9046
							],
							[
								9147,
								9186
							],
							[
								9529,
								9533
							],
							[
								9688,
								9695
							],
							[
								9764,
								9775
							],
							[
								11098,
								11102
							],
							[
								11581,
								11587
							],
							[
								11662,
								11675
							],
							[
								11775,
								11779
							],
							[
								12001,
								12007
							],
							[
								12085,
								12091
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABdAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQAAAAAAAAAAXQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0BAABCdWZmZXJGaWxlKGZpbGUpCkJ1ZmZlckxlbmd0aHMoZmlsZSkKQnVmZmVyT2Zmc2V0cyhmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAABdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1083,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1645
							],
							[
								1702,
								1731
							],
							[
								1849,
								1872
							],
							[
								2012,
								2035
							],
							[
								2310,
								2332
							],
							[
								2873,
								2897
							],
							[
								3202,
								3226
							],
							[
								3255,
								3261
							],
							[
								3412,
								3436
							],
							[
								3465,
								3471
							],
							[
								3561,
								3587
							],
							[
								3614,
								3620
							],
							[
								3668,
								3674
							],
							[
								3731,
								3737
							],
							[
								4051,
								4077
							],
							[
								4190,
								4196
							],
							[
								4244,
								4250
							],
							[
								4500,
								4506
							],
							[
								4542,
								4548
							],
							[
								4649,
								4655
							],
							[
								4691,
								4697
							],
							[
								4794,
								4800
							],
							[
								5307,
								5335
							],
							[
								5384,
								5405
							],
							[
								5479,
								5500
							],
							[
								5561,
								5582
							],
							[
								5655,
								5701
							],
							[
								5750,
								5756
							],
							[
								5830,
								5836
							],
							[
								5902,
								5908
							],
							[
								5979,
								6001
							],
							[
								6538,
								6560
							],
							[
								6770,
								6798
							],
							[
								6852,
								6870
							],
							[
								7498,
								7516
							],
							[
								7694,
								7711
							],
							[
								8140,
								8157
							],
							[
								8342,
								8353
							],
							[
								8429,
								8435
							],
							[
								8941,
								8959
							],
							[
								9053,
								9069
							],
							[
								9170,
								9209
							],
							[
								9552,
								9556
							],
							[
								9711,
								9718
							],
							[
								9787,
								9798
							],
							[
								11121,
								11125
							],
							[
								11604,
								11610
							],
							[
								11685,
								11698
							],
							[
								11798,
								11802
							],
							[
								12024,
								12030
							],
							[
								12108,
								12114
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABdAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQAAAAAAAAAAXQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0BAABCdWZmZXJGaWxlKGZpbGUpCkJ1ZmZlckxlbmd0aHMoZmlsZSkKQnVmZmVyT2Zmc2V0cyhmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAABdAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQEAAEJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQpCdWZmZXJPZmZzZXRzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAF0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1084,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1645
							],
							[
								1702,
								1731
							],
							[
								1849,
								1872
							],
							[
								2012,
								2035
							],
							[
								2310,
								2332
							],
							[
								2873,
								2897
							],
							[
								3202,
								3226
							],
							[
								3255,
								3261
							],
							[
								3412,
								3436
							],
							[
								3465,
								3471
							],
							[
								3561,
								3587
							],
							[
								3614,
								3620
							],
							[
								3668,
								3674
							],
							[
								3731,
								3737
							],
							[
								4051,
								4077
							],
							[
								4190,
								4196
							],
							[
								4244,
								4250
							],
							[
								4500,
								4506
							],
							[
								4542,
								4548
							],
							[
								4649,
								4655
							],
							[
								4691,
								4697
							],
							[
								4794,
								4800
							],
							[
								5307,
								5335
							],
							[
								5384,
								5405
							],
							[
								5479,
								5500
							],
							[
								5561,
								5582
							],
							[
								5655,
								5701
							],
							[
								5750,
								5756
							],
							[
								5830,
								5836
							],
							[
								5902,
								5908
							],
							[
								5979,
								6001
							],
							[
								6538,
								6560
							],
							[
								6770,
								6798
							],
							[
								6852,
								6870
							],
							[
								7498,
								7516
							],
							[
								7694,
								7711
							],
							[
								8140,
								8157
							],
							[
								8342,
								8353
							],
							[
								8429,
								8435
							],
							[
								8941,
								8959
							],
							[
								9053,
								9069
							],
							[
								9170,
								9209
							],
							[
								9552,
								9556
							],
							[
								9711,
								9718
							],
							[
								9787,
								9798
							],
							[
								11121,
								11125
							],
							[
								11604,
								11610
							],
							[
								11685,
								11698
							],
							[
								11798,
								11802
							],
							[
								12024,
								12030
							],
							[
								12108,
								12114
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABdAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQAAAAAAAAAAXQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1085,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABdAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1086,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1645
							],
							[
								1702,
								1731
							],
							[
								1849,
								1872
							],
							[
								2012,
								2035
							],
							[
								2310,
								2332
							],
							[
								2873,
								2897
							],
							[
								3202,
								3226
							],
							[
								3255,
								3261
							],
							[
								3412,
								3436
							],
							[
								3465,
								3471
							],
							[
								3561,
								3587
							],
							[
								3614,
								3620
							],
							[
								3668,
								3674
							],
							[
								3731,
								3737
							],
							[
								4051,
								4077
							],
							[
								4190,
								4196
							],
							[
								4244,
								4250
							],
							[
								4500,
								4506
							],
							[
								4542,
								4548
							],
							[
								4649,
								4655
							],
							[
								4691,
								4697
							],
							[
								4794,
								4800
							],
							[
								5307,
								5335
							],
							[
								5384,
								5405
							],
							[
								5479,
								5500
							],
							[
								5561,
								5582
							],
							[
								5655,
								5701
							],
							[
								5750,
								5756
							],
							[
								5830,
								5836
							],
							[
								5902,
								5908
							],
							[
								5979,
								6001
							],
							[
								6538,
								6560
							],
							[
								6770,
								6798
							],
							[
								6852,
								6870
							],
							[
								7498,
								7516
							],
							[
								7694,
								7711
							],
							[
								8140,
								8157
							],
							[
								8342,
								8353
							],
							[
								8429,
								8435
							],
							[
								8941,
								8959
							],
							[
								9053,
								9069
							],
							[
								9170,
								9209
							],
							[
								9552,
								9556
							],
							[
								9711,
								9718
							],
							[
								9787,
								9798
							],
							[
								11121,
								11125
							],
							[
								11604,
								11610
							],
							[
								11685,
								11698
							],
							[
								11798,
								11802
							],
							[
								12024,
								12030
							],
							[
								12108,
								12114
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AQAAAAAAAAAAAAAAXQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1087,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1645
							],
							[
								1702,
								1731
							],
							[
								1849,
								1872
							],
							[
								2012,
								2035
							],
							[
								2310,
								2332
							],
							[
								2873,
								2897
							],
							[
								3202,
								3226
							],
							[
								3255,
								3261
							],
							[
								3412,
								3436
							],
							[
								3465,
								3471
							],
							[
								3561,
								3587
							],
							[
								3614,
								3620
							],
							[
								3668,
								3674
							],
							[
								3731,
								3737
							],
							[
								4051,
								4077
							],
							[
								4190,
								4196
							],
							[
								4244,
								4250
							],
							[
								4500,
								4506
							],
							[
								4542,
								4548
							],
							[
								4649,
								4655
							],
							[
								4691,
								4697
							],
							[
								4794,
								4800
							],
							[
								5307,
								5335
							],
							[
								5384,
								5405
							],
							[
								5479,
								5500
							],
							[
								5561,
								5582
							],
							[
								5655,
								5701
							],
							[
								5750,
								5756
							],
							[
								5830,
								5836
							],
							[
								5902,
								5908
							],
							[
								5979,
								6001
							],
							[
								6538,
								6560
							],
							[
								6770,
								6798
							],
							[
								6852,
								6870
							],
							[
								7498,
								7516
							],
							[
								7694,
								7711
							],
							[
								8140,
								8157
							],
							[
								8342,
								8353
							],
							[
								8429,
								8435
							],
							[
								8941,
								8959
							],
							[
								9053,
								9069
							],
							[
								9170,
								9209
							],
							[
								9552,
								9556
							],
							[
								9711,
								9718
							],
							[
								9787,
								9798
							],
							[
								11121,
								11125
							],
							[
								11604,
								11610
							],
							[
								11685,
								11698
							],
							[
								11798,
								11802
							],
							[
								12082,
								12088
							],
							[
								12166,
								12172
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAABdAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQAAAAAAAAAAXQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0BAABCdWZmZXJGaWxlKGZpbGUpCkJ1ZmZlckxlbmd0aHMoZmlsZSkKQnVmZmVyT2Zmc2V0cyhmaWxlKQpXcml0ZUZpbGUoZmlsZSwgdG9rKQpEdW1wTGV4ZXIobGV4KQpEdW1wVG9rZW4odG9rKQpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCkV4cG9ydE5hbWUoc2VxKQpBZGRFeHBvcnQodG9rZW5zKQpBZGRJbXBvcnQodG9rZW5zKQpQcmludEVTNkltcG9ydChpbXApClByaW50Q0pTSW1wb3J0KHsgdHlwZSwgbG9jYWwsIGZpbGUgfSkKICBtYWluKC4uLmFyZ3MpClByb2Nlc3NGaWxlKGZpbGUpCiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcmVzZXQoKQogIGdldCBkZXB0aCgpAAAAAAAAAABdAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQEAAEJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQpCdWZmZXJPZmZzZXRzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAF0BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQAAAAAAAAAAXQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1093,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1645
							],
							[
								1703,
								1730
							],
							[
								1763,
								1781
							],
							[
								1838,
								1867
							],
							[
								1985,
								2008
							],
							[
								2148,
								2171
							],
							[
								2446,
								2468
							],
							[
								3009,
								3033
							],
							[
								3338,
								3362
							],
							[
								3391,
								3397
							],
							[
								3548,
								3572
							],
							[
								3601,
								3607
							],
							[
								3697,
								3723
							],
							[
								3750,
								3756
							],
							[
								3804,
								3810
							],
							[
								3867,
								3873
							],
							[
								4187,
								4213
							],
							[
								4326,
								4332
							],
							[
								4380,
								4386
							],
							[
								4636,
								4642
							],
							[
								4678,
								4684
							],
							[
								4785,
								4791
							],
							[
								4827,
								4833
							],
							[
								4930,
								4936
							],
							[
								5443,
								5471
							],
							[
								5520,
								5541
							],
							[
								5615,
								5636
							],
							[
								5697,
								5718
							],
							[
								5791,
								5837
							],
							[
								5886,
								5892
							],
							[
								5966,
								5972
							],
							[
								6038,
								6044
							],
							[
								6115,
								6137
							],
							[
								6674,
								6696
							],
							[
								6906,
								6934
							],
							[
								6988,
								7006
							],
							[
								7634,
								7652
							],
							[
								7830,
								7847
							],
							[
								8276,
								8293
							],
							[
								8478,
								8489
							],
							[
								8565,
								8571
							],
							[
								9077,
								9095
							],
							[
								9189,
								9205
							],
							[
								9306,
								9345
							],
							[
								9688,
								9692
							],
							[
								9847,
								9854
							],
							[
								9923,
								9934
							],
							[
								11257,
								11261
							],
							[
								11740,
								11746
							],
							[
								11821,
								11834
							],
							[
								11934,
								11938
							],
							[
								12218,
								12224
							],
							[
								12302,
								12308
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list],b) =>",
							"function BufferRanges(file)",
							"([pos, list],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABdAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKV3JpdGVGaWxlKGZpbGUsIHRvaykKRHVtcExleGVyKGxleCkKRHVtcFRva2VuKHRvaykKSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQpFeHBvcnROYW1lKHNlcSkKQWRkRXhwb3J0KHRva2VucykKQWRkSW1wb3J0KHRva2VucykKUHJpbnRFUzZJbXBvcnQoaW1wKQpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgbWFpbiguLi5hcmdzKQpQcm9jZXNzRmlsZShmaWxlKQogIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKQogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQAAAAAAAAAAcAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1094,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1645
							],
							[
								1703,
								1730
							],
							[
								1763,
								1781
							],
							[
								1854,
								1883
							],
							[
								2001,
								2024
							],
							[
								2164,
								2187
							],
							[
								2462,
								2484
							],
							[
								3025,
								3049
							],
							[
								3354,
								3378
							],
							[
								3407,
								3413
							],
							[
								3564,
								3588
							],
							[
								3617,
								3623
							],
							[
								3713,
								3739
							],
							[
								3766,
								3772
							],
							[
								3820,
								3826
							],
							[
								3883,
								3889
							],
							[
								4203,
								4229
							],
							[
								4342,
								4348
							],
							[
								4396,
								4402
							],
							[
								4652,
								4658
							],
							[
								4694,
								4700
							],
							[
								4801,
								4807
							],
							[
								4843,
								4849
							],
							[
								4946,
								4952
							],
							[
								5459,
								5487
							],
							[
								5536,
								5557
							],
							[
								5631,
								5652
							],
							[
								5713,
								5734
							],
							[
								5807,
								5853
							],
							[
								5902,
								5908
							],
							[
								5982,
								5988
							],
							[
								6054,
								6060
							],
							[
								6131,
								6153
							],
							[
								6690,
								6712
							],
							[
								6922,
								6950
							],
							[
								7004,
								7022
							],
							[
								7650,
								7668
							],
							[
								7846,
								7863
							],
							[
								8292,
								8309
							],
							[
								8494,
								8505
							],
							[
								8581,
								8587
							],
							[
								9093,
								9111
							],
							[
								9205,
								9221
							],
							[
								9322,
								9361
							],
							[
								9704,
								9708
							],
							[
								9863,
								9870
							],
							[
								9939,
								9950
							],
							[
								11273,
								11277
							],
							[
								11756,
								11762
							],
							[
								11837,
								11850
							],
							[
								11950,
								11954
							],
							[
								12234,
								12240
							],
							[
								12318,
								12324
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list],b) =>",
							"function BufferRanges(file)",
							"([pos, list],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1095,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1645
							],
							[
								1703,
								1730
							],
							[
								1763,
								1781
							],
							[
								1854,
								1883
							],
							[
								2001,
								2024
							],
							[
								2164,
								2187
							],
							[
								2462,
								2484
							],
							[
								3025,
								3049
							],
							[
								3354,
								3378
							],
							[
								3407,
								3413
							],
							[
								3564,
								3588
							],
							[
								3617,
								3623
							],
							[
								3713,
								3739
							],
							[
								3766,
								3772
							],
							[
								3820,
								3826
							],
							[
								3883,
								3889
							],
							[
								4203,
								4229
							],
							[
								4342,
								4348
							],
							[
								4396,
								4402
							],
							[
								4652,
								4658
							],
							[
								4694,
								4700
							],
							[
								4801,
								4807
							],
							[
								4843,
								4849
							],
							[
								4946,
								4952
							],
							[
								5459,
								5487
							],
							[
								5536,
								5557
							],
							[
								5631,
								5652
							],
							[
								5713,
								5734
							],
							[
								5807,
								5853
							],
							[
								5902,
								5908
							],
							[
								5982,
								5988
							],
							[
								6054,
								6060
							],
							[
								6131,
								6153
							],
							[
								6690,
								6712
							],
							[
								6922,
								6950
							],
							[
								7004,
								7022
							],
							[
								7650,
								7668
							],
							[
								7846,
								7863
							],
							[
								8292,
								8309
							],
							[
								8494,
								8505
							],
							[
								8581,
								8587
							],
							[
								9093,
								9111
							],
							[
								9205,
								9221
							],
							[
								9322,
								9361
							],
							[
								9704,
								9708
							],
							[
								9863,
								9870
							],
							[
								9939,
								9950
							],
							[
								11273,
								11277
							],
							[
								11756,
								11762
							],
							[
								11837,
								11850
							],
							[
								11950,
								11954
							],
							[
								12234,
								12240
							],
							[
								12318,
								12324
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list],b) =>",
							"function BufferRanges(file)",
							"([pos, list],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1096,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1645
							],
							[
								1703,
								1730
							],
							[
								1763,
								1781
							],
							[
								1854,
								1883
							],
							[
								2001,
								2024
							],
							[
								2164,
								2187
							],
							[
								2462,
								2484
							],
							[
								3025,
								3049
							],
							[
								3354,
								3378
							],
							[
								3407,
								3413
							],
							[
								3564,
								3588
							],
							[
								3617,
								3623
							],
							[
								3713,
								3739
							],
							[
								3766,
								3772
							],
							[
								3820,
								3826
							],
							[
								3883,
								3889
							],
							[
								4203,
								4229
							],
							[
								4342,
								4348
							],
							[
								4396,
								4402
							],
							[
								4652,
								4658
							],
							[
								4694,
								4700
							],
							[
								4801,
								4807
							],
							[
								4843,
								4849
							],
							[
								4946,
								4952
							],
							[
								5459,
								5487
							],
							[
								5536,
								5557
							],
							[
								5631,
								5652
							],
							[
								5713,
								5734
							],
							[
								5807,
								5853
							],
							[
								5902,
								5908
							],
							[
								5982,
								5988
							],
							[
								6054,
								6060
							],
							[
								6131,
								6153
							],
							[
								6690,
								6712
							],
							[
								6922,
								6950
							],
							[
								7004,
								7022
							],
							[
								7650,
								7668
							],
							[
								7846,
								7863
							],
							[
								8292,
								8309
							],
							[
								8494,
								8505
							],
							[
								8581,
								8587
							],
							[
								9093,
								9111
							],
							[
								9205,
								9221
							],
							[
								9322,
								9361
							],
							[
								9704,
								9708
							],
							[
								9863,
								9870
							],
							[
								9939,
								9950
							],
							[
								11273,
								11277
							],
							[
								11756,
								11762
							],
							[
								11837,
								11850
							],
							[
								11950,
								11954
							],
							[
								12234,
								12240
							],
							[
								12318,
								12324
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list],b) =>",
							"function BufferRanges(file)",
							"([pos, list],b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1097,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1098,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1646
							],
							[
								1705,
								1732
							],
							[
								1765,
								1784
							],
							[
								1859,
								1888
							],
							[
								2006,
								2029
							],
							[
								2169,
								2192
							],
							[
								2467,
								2489
							],
							[
								3030,
								3054
							],
							[
								3359,
								3383
							],
							[
								3412,
								3418
							],
							[
								3569,
								3593
							],
							[
								3622,
								3628
							],
							[
								3718,
								3744
							],
							[
								3771,
								3777
							],
							[
								3825,
								3831
							],
							[
								3888,
								3894
							],
							[
								4208,
								4234
							],
							[
								4347,
								4353
							],
							[
								4401,
								4407
							],
							[
								4657,
								4663
							],
							[
								4699,
								4705
							],
							[
								4806,
								4812
							],
							[
								4848,
								4854
							],
							[
								4951,
								4957
							],
							[
								5464,
								5492
							],
							[
								5541,
								5562
							],
							[
								5636,
								5657
							],
							[
								5718,
								5739
							],
							[
								5812,
								5858
							],
							[
								5907,
								5913
							],
							[
								5987,
								5993
							],
							[
								6059,
								6065
							],
							[
								6136,
								6158
							],
							[
								6695,
								6717
							],
							[
								6927,
								6955
							],
							[
								7009,
								7027
							],
							[
								7655,
								7673
							],
							[
								7851,
								7868
							],
							[
								8297,
								8314
							],
							[
								8499,
								8510
							],
							[
								8586,
								8592
							],
							[
								9098,
								9116
							],
							[
								9210,
								9226
							],
							[
								9327,
								9366
							],
							[
								9709,
								9713
							],
							[
								9868,
								9875
							],
							[
								9944,
								9955
							],
							[
								11278,
								11282
							],
							[
								11761,
								11767
							],
							[
								11842,
								11855
							],
							[
								11955,
								11959
							],
							[
								12237,
								12243
							],
							[
								12321,
								12327
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AQAAAAAAAAAAAAAAcAEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1099,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1312,
								1337
							],
							[
								1485,
								1513
							],
							[
								1543,
								1547
							],
							[
								1566,
								1594
							],
							[
								1627,
								1646
							],
							[
								1705,
								1732
							],
							[
								1765,
								1784
							],
							[
								1859,
								1888
							],
							[
								2006,
								2029
							],
							[
								2169,
								2192
							],
							[
								2467,
								2489
							],
							[
								3030,
								3054
							],
							[
								3359,
								3383
							],
							[
								3412,
								3418
							],
							[
								3569,
								3593
							],
							[
								3622,
								3628
							],
							[
								3718,
								3744
							],
							[
								3771,
								3777
							],
							[
								3825,
								3831
							],
							[
								3888,
								3894
							],
							[
								4208,
								4234
							],
							[
								4347,
								4353
							],
							[
								4401,
								4407
							],
							[
								4657,
								4663
							],
							[
								4699,
								4705
							],
							[
								4806,
								4812
							],
							[
								4848,
								4854
							],
							[
								4951,
								4957
							],
							[
								5464,
								5492
							],
							[
								5541,
								5562
							],
							[
								5636,
								5657
							],
							[
								5718,
								5739
							],
							[
								5812,
								5858
							],
							[
								5907,
								5913
							],
							[
								5987,
								5993
							],
							[
								6059,
								6065
							],
							[
								6136,
								6158
							],
							[
								6695,
								6717
							],
							[
								6927,
								6955
							],
							[
								7009,
								7027
							],
							[
								7655,
								7673
							],
							[
								7851,
								7868
							],
							[
								8297,
								8314
							],
							[
								8499,
								8510
							],
							[
								8586,
								8592
							],
							[
								9098,
								9116
							],
							[
								9210,
								9226
							],
							[
								9327,
								9366
							],
							[
								9709,
								9713
							],
							[
								9868,
								9875
							],
							[
								9944,
								9955
							],
							[
								11278,
								11282
							],
							[
								11761,
								11767
							],
							[
								11842,
								11855
							],
							[
								11955,
								11959
							],
							[
								12290,
								12296
							],
							[
								12374,
								12380
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1107,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1347,
								1372
							],
							[
								1520,
								1548
							],
							[
								1578,
								1582
							],
							[
								1601,
								1629
							],
							[
								1662,
								1681
							],
							[
								1740,
								1767
							],
							[
								1800,
								1819
							],
							[
								1894,
								1923
							],
							[
								2041,
								2064
							],
							[
								2204,
								2227
							],
							[
								2502,
								2524
							],
							[
								3065,
								3089
							],
							[
								3394,
								3418
							],
							[
								3447,
								3453
							],
							[
								3604,
								3628
							],
							[
								3657,
								3663
							],
							[
								3753,
								3779
							],
							[
								3806,
								3812
							],
							[
								3860,
								3866
							],
							[
								3923,
								3929
							],
							[
								4243,
								4269
							],
							[
								4382,
								4388
							],
							[
								4436,
								4442
							],
							[
								4692,
								4698
							],
							[
								4734,
								4740
							],
							[
								4841,
								4847
							],
							[
								4883,
								4889
							],
							[
								4986,
								4992
							],
							[
								5499,
								5527
							],
							[
								5576,
								5597
							],
							[
								5671,
								5692
							],
							[
								5753,
								5774
							],
							[
								5847,
								5893
							],
							[
								5942,
								5948
							],
							[
								6022,
								6028
							],
							[
								6094,
								6100
							],
							[
								6171,
								6193
							],
							[
								6730,
								6752
							],
							[
								6962,
								6990
							],
							[
								7044,
								7062
							],
							[
								7690,
								7708
							],
							[
								7886,
								7903
							],
							[
								8332,
								8349
							],
							[
								8534,
								8545
							],
							[
								8621,
								8627
							],
							[
								9133,
								9151
							],
							[
								9245,
								9261
							],
							[
								9362,
								9401
							],
							[
								9744,
								9748
							],
							[
								9903,
								9910
							],
							[
								9979,
								9990
							],
							[
								11313,
								11317
							],
							[
								11796,
								11802
							],
							[
								11877,
								11890
							],
							[
								11990,
								11994
							],
							[
								12325,
								12331
							],
							[
								12409,
								12415
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1108,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1347,
								1372
							],
							[
								1572,
								1600
							],
							[
								1630,
								1634
							],
							[
								1653,
								1681
							],
							[
								1714,
								1733
							],
							[
								1792,
								1819
							],
							[
								1852,
								1871
							],
							[
								1946,
								1975
							],
							[
								2093,
								2116
							],
							[
								2256,
								2279
							],
							[
								2554,
								2576
							],
							[
								3117,
								3141
							],
							[
								3446,
								3470
							],
							[
								3499,
								3505
							],
							[
								3656,
								3680
							],
							[
								3709,
								3715
							],
							[
								3805,
								3831
							],
							[
								3858,
								3864
							],
							[
								3912,
								3918
							],
							[
								3975,
								3981
							],
							[
								4295,
								4321
							],
							[
								4434,
								4440
							],
							[
								4488,
								4494
							],
							[
								4744,
								4750
							],
							[
								4786,
								4792
							],
							[
								4893,
								4899
							],
							[
								4935,
								4941
							],
							[
								5038,
								5044
							],
							[
								5551,
								5579
							],
							[
								5628,
								5649
							],
							[
								5723,
								5744
							],
							[
								5805,
								5826
							],
							[
								5899,
								5945
							],
							[
								5994,
								6000
							],
							[
								6074,
								6080
							],
							[
								6146,
								6152
							],
							[
								6223,
								6245
							],
							[
								6782,
								6804
							],
							[
								7014,
								7042
							],
							[
								7096,
								7114
							],
							[
								7742,
								7760
							],
							[
								7938,
								7955
							],
							[
								8384,
								8401
							],
							[
								8586,
								8597
							],
							[
								8673,
								8679
							],
							[
								9185,
								9203
							],
							[
								9297,
								9313
							],
							[
								9414,
								9453
							],
							[
								9796,
								9800
							],
							[
								9955,
								9962
							],
							[
								10031,
								10042
							],
							[
								11365,
								11369
							],
							[
								11848,
								11854
							],
							[
								11929,
								11942
							],
							[
								12042,
								12046
							],
							[
								12377,
								12383
							],
							[
								12461,
								12467
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1109,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1347,
								1372
							],
							[
								1567,
								1595
							],
							[
								1625,
								1629
							],
							[
								1648,
								1676
							],
							[
								1709,
								1728
							],
							[
								1787,
								1814
							],
							[
								1847,
								1866
							],
							[
								1941,
								1970
							],
							[
								2088,
								2111
							],
							[
								2251,
								2274
							],
							[
								2549,
								2571
							],
							[
								3112,
								3136
							],
							[
								3441,
								3465
							],
							[
								3494,
								3500
							],
							[
								3651,
								3675
							],
							[
								3704,
								3710
							],
							[
								3800,
								3826
							],
							[
								3853,
								3859
							],
							[
								3907,
								3913
							],
							[
								3970,
								3976
							],
							[
								4290,
								4316
							],
							[
								4429,
								4435
							],
							[
								4483,
								4489
							],
							[
								4739,
								4745
							],
							[
								4781,
								4787
							],
							[
								4888,
								4894
							],
							[
								4930,
								4936
							],
							[
								5033,
								5039
							],
							[
								5546,
								5574
							],
							[
								5623,
								5644
							],
							[
								5718,
								5739
							],
							[
								5800,
								5821
							],
							[
								5894,
								5940
							],
							[
								5989,
								5995
							],
							[
								6069,
								6075
							],
							[
								6141,
								6147
							],
							[
								6218,
								6240
							],
							[
								6777,
								6799
							],
							[
								7009,
								7037
							],
							[
								7091,
								7109
							],
							[
								7737,
								7755
							],
							[
								7933,
								7950
							],
							[
								8379,
								8396
							],
							[
								8581,
								8592
							],
							[
								8668,
								8674
							],
							[
								9180,
								9198
							],
							[
								9292,
								9308
							],
							[
								9409,
								9448
							],
							[
								9791,
								9795
							],
							[
								9950,
								9957
							],
							[
								10026,
								10037
							],
							[
								11360,
								11364
							],
							[
								11843,
								11849
							],
							[
								11924,
								11937
							],
							[
								12037,
								12041
							],
							[
								12372,
								12378
							],
							[
								12456,
								12462
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1110,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1347,
								1372
							],
							[
								1567,
								1595
							],
							[
								1625,
								1629
							],
							[
								1648,
								1676
							],
							[
								1709,
								1728
							],
							[
								1787,
								1814
							],
							[
								1847,
								1866
							],
							[
								1941,
								1970
							],
							[
								2088,
								2111
							],
							[
								2251,
								2274
							],
							[
								2549,
								2571
							],
							[
								3112,
								3136
							],
							[
								3441,
								3465
							],
							[
								3494,
								3500
							],
							[
								3651,
								3675
							],
							[
								3704,
								3710
							],
							[
								3800,
								3826
							],
							[
								3853,
								3859
							],
							[
								3907,
								3913
							],
							[
								3970,
								3976
							],
							[
								4290,
								4316
							],
							[
								4429,
								4435
							],
							[
								4483,
								4489
							],
							[
								4739,
								4745
							],
							[
								4781,
								4787
							],
							[
								4888,
								4894
							],
							[
								4930,
								4936
							],
							[
								5033,
								5039
							],
							[
								5546,
								5574
							],
							[
								5623,
								5644
							],
							[
								5718,
								5739
							],
							[
								5800,
								5821
							],
							[
								5894,
								5940
							],
							[
								5989,
								5995
							],
							[
								6069,
								6075
							],
							[
								6141,
								6147
							],
							[
								6218,
								6240
							],
							[
								6777,
								6799
							],
							[
								7009,
								7037
							],
							[
								7091,
								7109
							],
							[
								7737,
								7755
							],
							[
								7933,
								7950
							],
							[
								8379,
								8396
							],
							[
								8581,
								8592
							],
							[
								8668,
								8674
							],
							[
								9180,
								9198
							],
							[
								9292,
								9308
							],
							[
								9409,
								9448
							],
							[
								9791,
								9795
							],
							[
								9950,
								9957
							],
							[
								10026,
								10037
							],
							[
								11360,
								11364
							],
							[
								11843,
								11849
							],
							[
								11924,
								11937
							],
							[
								12037,
								12041
							],
							[
								12372,
								12378
							],
							[
								12456,
								12462
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"i =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAQAAQnVmZmVyRmlsZShmaWxlKQpCdWZmZXJMZW5ndGhzKGZpbGUpCkJ1ZmZlck9mZnNldHMoZmlsZSkKQnVmZmVyUmFuZ2VzKGZpbGUpCldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkltcG9ydFR5cGUoc2VxKQpJbXBvcnRGaWxlKHNlcSkKRXhwb3J0TmFtZShzZXEpCkFkZEV4cG9ydCh0b2tlbnMpCkFkZEltcG9ydCh0b2tlbnMpClByaW50RVM2SW1wb3J0KGltcCkKUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogIG1haW4oLi4uYXJncykKUHJvY2Vzc0ZpbGUoZmlsZSkKICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICByZXNldCgpCiAgZ2V0IGRlcHRoKCkAAAAAAAAAAHABAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "tests/test_lexer.js",
			"settings":
			{
				"buffer_size": 12987,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10159,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAASQ8AAAAAAABJDwAAAAAAAAAAAAAAAPC/"
				],
				[
					10168,
					8,
					"join_lines",
					null,
					"FgAAAFQQAAAAAAAAVBAAAAAAAAABAAAAClQQAAAAAAAAVBAAAAAAAAAEAAAAICAgIFUQAAAAAAAAVRAAAAAAAAABAAAAClUQAAAAAAAAVRAAAAAAAAAGAAAAICAgICAgWhAAAAAAAABaEAAAAAAAAAEAAAAKWhAAAAAAAABaEAAAAAAAAAYAAAAgICAgICBaEAAAAAAAAFsQAAAAAAAAAAAAAGAQAAAAAAAAYBAAAAAAAAABAAAACmAQAAAAAAAAYBAAAAAAAAAGAAAAICAgICAgYBAAAAAAAABhEAAAAAAAAAAAAABlEAAAAAAAAGUQAAAAAAAAAQAAAAplEAAAAAAAAGUQAAAAAAAABgAAACAgICAgIGUQAAAAAAAAZhAAAAAAAAAAAAAAahAAAAAAAABqEAAAAAAAAAEAAAAKahAAAAAAAABqEAAAAAAAAAYAAAAgICAgICBqEAAAAAAAAGsQAAAAAAAAAAAAAHAQAAAAAAAAcBAAAAAAAAABAAAACnAQAAAAAAAAcBAAAAAAAAAEAAAAICAgIHAQAAAAAAAAcRAAAAAAAAAAAAAAcxAAAAAAAABzEAAAAAAAAAEAAAAKcxAAAAAAAABzEAAAAAAAAAQAAAAgICAgcxAAAAAAAAB0EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBAAAAAAAABUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					10169,
					1,
					"join_lines",
					null,
					"AwAAAIQQAAAAAAAAhBAAAAAAAAABAAAACoQQAAAAAAAAhBAAAAAAAAACAAAAICCEEAAAAAAAAIUQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBAAAAAAAAB0EAAAAAAAAAAAAAAAAPC/"
				],
				[
					10170,
					1,
					"left_delete",
					null,
					"AQAAAIQQAAAAAAAAhBAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAhRAAAAAAAACFEAAAAAAAAAAAAAAAAPC/"
				],
				[
					10173,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAhBAAAAAAAACEEAAAAAAAAAAAAAAAAPC/"
				],
				[
					10178,
					1,
					"cut",
					null,
					"AQAAAB8FAAAAAAAAHwUAAAAAAACtAAAACmZ1bmN0aW9uIEJ1ZmZlckZpbGUoZmlsZSkgewogIGNvbnNvbGUubG9nKCdCdWZmZXJGaWxlJywgZmlsZSk7CiAgaWYoYnVmZmVyc1tmaWxlXSkgcmV0dXJuIGJ1ZmZlcnNbZmlsZV07CiAgcmV0dXJuIChidWZmZXJzW2ZpbGVdID0gZnMucmVhZEZpbGVTeW5jKGZpbGUsIHsgZmxhZzogJ3InIH0pKTsKfQo",
					"AQAAAAAAAAABAAAAHwUAAAAAAADMBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10179,
					2,
					"paste",
					null,
					"AgAAAB8FAAAAAAAAzAUAAAAAAAAAAAAAzAUAAAAAAAB5BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwUAAAAAAAAfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10184,
					1,
					"insert",
					{
						"characters": "LENgth"
					},
					"BwAAANwFAAAAAAAA3QUAAAAAAAAAAAAA3QUAAAAAAADdBQAAAAAAAAQAAABGaWxl3QUAAAAAAADeBQAAAAAAAAAAAADeBQAAAAAAAN8FAAAAAAAAAAAAAN8FAAAAAAAA4AUAAAAAAAAAAAAA4AUAAAAAAADhBQAAAAAAAAAAAADhBQAAAAAAAOIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AUAAAAAAADgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10185,
					5,
					"left_delete",
					null,
					"BQAAAOEFAAAAAAAA4QUAAAAAAAABAAAAaOAFAAAAAAAA4AUAAAAAAAABAAAAdN8FAAAAAAAA3wUAAAAAAAABAAAAZ94FAAAAAAAA3gUAAAAAAAABAAAATt0FAAAAAAAA3QUAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAA4gUAAAAAAADiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10186,
					1,
					"insert",
					{
						"characters": "engths"
					},
					"BgAAAN0FAAAAAAAA3gUAAAAAAAAAAAAA3gUAAAAAAADfBQAAAAAAAAAAAADfBQAAAAAAAOAFAAAAAAAAAAAAAOAFAAAAAAAA4QUAAAAAAAAAAAAA4QUAAAAAAADiBQAAAAAAAAAAAADiBQAAAAAAAOMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QUAAAAAAADdBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10199,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAO4FAAAAAAAA7wUAAAAAAAAAAAAA7wUAAAAAAADvBQAAAAAAACYAAABjb25zb2xlLmxvZygnQnVmZmVyRmlsZScsIGZpbGUpOwogIGlmKA",
					"AQAAAAAAAAABAAAAFAYAAAAAAADuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10204,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA/QUAAAAAAAD9BQAAAAAAABcAAAApIHJldHVybiBidWZmZXJzW2ZpbGVdOw",
					"AQAAAAAAAAABAAAA/AUAAAAAAAATBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10207,
					1,
					"left_delete",
					null,
					"AQAAAPwFAAAAAAAA/AUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA/QUAAAAAAAD9BQAAAAAAAP///////+9/"
				],
				[
					10208,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AUAAAAAAAD8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10209,
					1,
					"left_delete",
					null,
					"AQAAAPwFAAAAAAAA/AUAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA/QUAAAAAAAD9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10210,
					1,
					"insert",
					{
						"characters": ".map"
					},
					"BAAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA/QUAAAAAAAD+BQAAAAAAAAAAAAD+BQAAAAAAAP8FAAAAAAAAAAAAAP8FAAAAAAAAAAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AUAAAAAAAD8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10211,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAAGAAAAAAAAAgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAPC/"
				],
				[
					10212,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAAEGAAAAAAAAAgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQYAAAAAAAABBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10213,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAAIGAAAAAAAAAwYAAAAAAAAAAAAAAwYAAAAAAAAEBgAAAAAAAAAAAAAEBgAAAAAAAAUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgYAAAAAAAACBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10214,
					1,
					"insert",
					{
						"characters": " b.byteLEng"
					},
					"CwAAAAUGAAAAAAAABgYAAAAAAAAAAAAABgYAAAAAAAAHBgAAAAAAAAAAAAAHBgAAAAAAAAgGAAAAAAAAAAAAAAgGAAAAAAAACQYAAAAAAAAAAAAACQYAAAAAAAAKBgAAAAAAAAAAAAAKBgAAAAAAAAsGAAAAAAAAAAAAAAsGAAAAAAAADAYAAAAAAAAAAAAADAYAAAAAAAANBgAAAAAAAAAAAAANBgAAAAAAAA4GAAAAAAAAAAAAAA4GAAAAAAAADwYAAAAAAAAAAAAADwYAAAAAAAAQBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10215,
					1,
					"insert",
					{
						"characters": "th"
					},
					"AgAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAYAAAAAAAAQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10216,
					5,
					"left_delete",
					null,
					"BQAAABEGAAAAAAAAEQYAAAAAAAABAAAAaBAGAAAAAAAAEAYAAAAAAAABAAAAdA8GAAAAAAAADwYAAAAAAAABAAAAZw4GAAAAAAAADgYAAAAAAAABAAAAbg0GAAAAAAAADQYAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAAEgYAAAAAAAASBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10217,
					1,
					"insert",
					{
						"characters": "ength"
					},
					"BQAAAA0GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAPBgAAAAAAAAAAAAAPBgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQYAAAAAAAANBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10219,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABMGAAAAAAAAFAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwYAAAAAAAATBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10223,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAOwFAAAAAAAA7QUAAAAAAAAAAAAA7QUAAAAAAADuBQAAAAAAAAAAAADuBQAAAAAAAO8FAAAAAAAAAAAAAO8FAAAAAAAA8AUAAAAAAAAAAAAA8AUAAAAAAADxBQAAAAAAAAAAAADxBQAAAAAAAPIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AUAAAAAAADsBQAAAAAAAAAAAAAAAAAA"
				],
				[
					10224,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPIFAAAAAAAA8wUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gUAAAAAAADyBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10228,
					1,
					"left_delete",
					null,
					"AQAAABwGAAAAAAAAHAYAAAAAAABBAAAAICByZXR1cm4gKGJ1ZmZlcnNbZmlsZV0gPSBmcy5yZWFkRmlsZVN5bmMoZmlsZSwgeyBmbGFnOiAncicgfSkpOwo",
					"AQAAAAAAAAABAAAAHAYAAAAAAABdBgAAAAAAAAAAAAAAAAAA"
				],
				[
					10259,
					1,
					"cut",
					null,
					"AQAAAOMtAAAAAAAA4y0AAAAAAAAsAAAAICAgIGxvZyhgYnVmZmVyc1ske2ZpbGV9XWAsIGJ1ZmZlcnNbZmlsZV0pOwo",
					"AQAAAAAAAAABAAAA4y0AAAAAAAAPLgAAAAAAAAAAAAAAAPC/"
				],
				[
					10260,
					2,
					"paste",
					null,
					"AgAAAOMtAAAAAAAADy4AAAAAAAAAAAAADy4AAAAAAAA7LgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4y0AAAAAAADjLQAAAAAAAAAAAAAAAPC/"
				],
				[
					10263,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACsuAAAAAAAALC4AAAAAAAAAAAAALC4AAAAAAAAsLgAAAAAAAA0AAABidWZmZXJzW2ZpbGVd",
					"AQAAAAAAAAABAAAAKy4AAAAAAAA4LgAAAAAAAAAAAAAAAPC/"
				],
				[
					10264,
					1,
					"insert",
					{
						"characters": "Buffer"
					},
					"BgAAACwuAAAAAAAALS4AAAAAAAAAAAAALS4AAAAAAAAuLgAAAAAAAAAAAAAuLgAAAAAAAC8uAAAAAAAAAAAAAC8uAAAAAAAAMC4AAAAAAAAAAAAAMC4AAAAAAAAxLgAAAAAAAAAAAAAxLgAAAAAAADIuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALC4AAAAAAAAsLgAAAAAAAAAAAAAAAPC/"
				],
				[
					10265,
					1,
					"insert",
					{
						"characters": "LENgt"
					},
					"BQAAADIuAAAAAAAAMy4AAAAAAAAAAAAAMy4AAAAAAAA0LgAAAAAAAAAAAAA0LgAAAAAAADUuAAAAAAAAAAAAADUuAAAAAAAANi4AAAAAAAAAAAAANi4AAAAAAAA3LgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMi4AAAAAAAAyLgAAAAAAAAAAAAAAAPC/"
				],
				[
					10266,
					3,
					"left_delete",
					null,
					"AwAAADYuAAAAAAAANi4AAAAAAAABAAAAdDUuAAAAAAAANS4AAAAAAAABAAAAZzQuAAAAAAAANC4AAAAAAAABAAAATg",
					"AQAAAAAAAAABAAAANy4AAAAAAAA3LgAAAAAAAAAAAAAAAPC/"
				],
				[
					10267,
					1,
					"insert",
					{
						"characters": "en"
					},
					"AgAAADQuAAAAAAAANS4AAAAAAAAAAAAANS4AAAAAAAA2LgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANC4AAAAAAAA0LgAAAAAAAAAAAAAAAPC/"
				],
				[
					10268,
					3,
					"left_delete",
					null,
					"AwAAADUuAAAAAAAANS4AAAAAAAABAAAAbjQuAAAAAAAANC4AAAAAAAABAAAAZTMuAAAAAAAAMy4AAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAANi4AAAAAAAA2LgAAAAAAAAAAAAAAAPC/"
				],
				[
					10269,
					1,
					"insert",
					{
						"characters": "engths"
					},
					"BgAAADMuAAAAAAAANC4AAAAAAAAAAAAANC4AAAAAAAA1LgAAAAAAAAAAAAA1LgAAAAAAADYuAAAAAAAAAAAAADYuAAAAAAAANy4AAAAAAAAAAAAANy4AAAAAAAA4LgAAAAAAAAAAAAA4LgAAAAAAADkuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMy4AAAAAAAAzLgAAAAAAAAAAAAAAAPC/"
				],
				[
					10270,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADkuAAAAAAAAOy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOS4AAAAAAAA5LgAAAAAAAAAAAAAAAPC/"
				],
				[
					10271,
					1,
					"insert",
					{
						"characters": "file"
					},
					"BAAAADouAAAAAAAAOy4AAAAAAAAAAAAAOy4AAAAAAAA8LgAAAAAAAAAAAAA8LgAAAAAAAD0uAAAAAAAAAAAAAD0uAAAAAAAAPi4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOi4AAAAAAAA6LgAAAAAAAAAAAAAAAPC/"
				],
				[
					10300,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADZMAAAaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnOwppbXBvcnQgKiBhcyBzdGQgZnJvbSAnc3RkJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgaW5zcGVjdCBmcm9tICdpbnNwZWN0JzsKaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJzsKaW1wb3J0IHsgUHJlZGljYXRlIH0gZnJvbSAncHJlZGljYXRlJzsKaW1wb3J0IHsgTG9jYXRpb24sIExleGVyLCBUb2tlbiwgU3ludGF4RXJyb3IgfSBmcm9tICdsZXhlcic7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IEpTTGV4ZXIgZnJvbSAnLi4vbGliL2pzbGV4ZXIuanMnOwppbXBvcnQgQ0xleGVyIGZyb20gJy4uL2xpYi9jbGV4ZXIuanMnOwppbXBvcnQgQk5GTGV4ZXIgZnJvbSAnLi4vbGliL2JuZmxleGVyLmpzJzsKaW1wb3J0IHsgZXNjYXBlLCBxdW90ZSwgdG9TdHJpbmcgfSBmcm9tICdtaXNjJzsKaW1wb3J0IHsgZGVmaW5lLCBjdXJyeSwgdW5pcXVlLCBzcGxpdCwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKCmxldCBidWZmZXJzID0ge30sCiAgbW9kdWxlcyA9IHt9OwpsZXQgVDsKCigndXNlIHN0cmljdCcpOwooJ3VzZSBtYXRoJyk7CgpleHRlbmRBcnJheShBcnJheS5wcm90b3R5cGUpOwoKY29uc3QgQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4gKGFyci5pbmRleE9mKGl0ZW0pID09IC0xID8gYXJyLnB1c2goaXRlbSkgOiBudWxsKTsKCmNvbnN0IEludFRvRFdvcmQgPSBpdmFsID0+IChpc05hTihpdmFsKSA9PT0gZmFsc2UgJiYgaXZhbCA8IDAgPyBpdmFsICsgNDI5NDk2NzI5NiA6IGl2YWwpOwpjb25zdCBJbnRUb0JpbmFyeSA9IGkgPT4gKGkgPT0gLTEgfHwgdHlwZW9mIGkgIT0gJ251bWJlcicgPyBpIDogJzBiJyArIEludFRvRFdvcmQoaSkudG9TdHJpbmcoMikpOwoKLy9jb25zdCBjb2RlID0gWyJjb25zdCBzdHIgPSBzdGFjay50b1N0cmluZygpLnJlcGxhY2UoL1xcblxccyphdCAvZywgJ1xcbicpOyIsICIvXiguKilcXHNcXCgoLiopOihbMC05XSopOihbMC05XSopXFwpJC8uZXhlYyhsaW5lKTsiIF07CmNvbnN0IGNvZGUgPSBbCiAgImNvbnN0IHN0ciA9IHN0YWNrLnRvU3RyaW5nKCkucmVwbGFjZSgvXFxuXFxzKmF0IC9nLCAnXFxuJyk7IiwKICAnL1JlZy4qRXgvaS50ZXN0KG4pJywKICAnL1xcbi9nJywKICAnY29uc3QgW21hdGNoLCBwYXR0ZXJuLCBmbGFnc10gPSAvXlxcLyguKilcXC8oW2Etel0qKSQvLmV4ZWModG9rZW4udmFsdWUpOycsCiAgJy9eXFxzXFwoKC4qKTooWzAtOV0qKTooWzAtOV0qKVxcKSQvLmV4ZWMobGluZSk7JwpdOwoKZXh0ZW5kQXJyYXkoQXJyYXkucHJvdG90eXBlKTsKCmZ1bmN0aW9uIEJ1ZmZlckZpbGUoZmlsZSkgewogIGNvbnNvbGUubG9nKCdCdWZmZXJGaWxlJywgZmlsZSk7CiAgaWYoYnVmZmVyc1tmaWxlXSkgcmV0dXJuIGJ1ZmZlcnNbZmlsZV07CiAgcmV0dXJuIChidWZmZXJzW2ZpbGVdID0gZnMucmVhZEZpbGVTeW5jKGZpbGUsIHsgZmxhZzogJ3InIH0pKTsKfQoKZnVuY3Rpb24gQnVmZmVyTGVuZ3RocyhmaWxlKSB7CnJldHVybiAgICBidWZmZXJzW2ZpbGVdLm1hcChiID0+IGIuYnl0ZUxlbmd0aCk7Cn0KCmZ1bmN0aW9uIFdyaXRlRmlsZShmaWxlLCB0b2spIHsKICBsZXQgZiA9IHN0ZC5vcGVuKGZpbGUsICd3KycpOwogIGYucHV0cyh0b2spOwogIGNvbnNvbGUubG9nKCdXcm90ZSAiJyArIGZpbGUgKyAnIjogJyArIHRvay5sZW5ndGggKyAnIGJ5dGVzJyk7Cn0KCmZ1bmN0aW9uIER1bXBMZXhlcihsZXgpIHsKICBjb25zdCB7IHNpemUsIHBvcywgc3RhcnQsIGxpbmUsIGNvbHVtbiwgbGluZVN0YXJ0LCBsaW5lRW5kLCBjb2x1bW5JbmRleCB9ID0gbGV4OwoKICByZXR1cm4gJ0xleGVyICcgKyBpbnNwZWN0KHsgc3RhcnQsIHBvcywgc2l6ZSB9KTsKfQpmdW5jdGlvbiBEdW1wVG9rZW4odG9rKSB7CiAgY29uc3QgeyBsZW5ndGgsIG9mZnNldCwgY2hhcnMsIGxvYyB9ID0gdG9rOwoKICByZXR1cm4gYOKYhSBUb2tlbiAke2luc3BlY3QoeyBjaGFycywgb2Zmc2V0LCBsZW5ndGgsIGxvYyB9LCB7IGRlcHRoOiAxIH0pfWA7Cn0KY29uc3QgV2hhdCA9IHsKICBJTVBPUlQ6IDAsCiAgRVhQT1JUOiAxCn07Cgpjb25zdCBJbXBvcnRUeXBlcyA9IHsKICBJTVBPUlQ6IDAsCiAgSU1QT1JUX0RFRkFVTFQ6IDEsCiAgSU1QT1JUX05BTUVTUEFDRTogMgp9OwoKY29uc3QgVG9rSXMgPSBjdXJyeSgodHlwZSwgbGV4ZW1lLCB0b2spID0+IHsKICBpZihsZXhlbWUgIT0gdW5kZWZpbmVkKSB7CiAgICBpZih0eXBlb2YgbGV4ZW1lID09ICdzdHJpbmcnICYmIHRvay5sZXhlbWUgIT0gbGV4ZW1lKSByZXR1cm4gZmFsc2U7CiAgICBlbHNlIGlmKEFycmF5LmlzQXJyYXkobGV4ZW1lKSAmJiBsZXhlbWUuaW5kZXhPZih0b2subGV4ZW1lKSA9PSAtMSkgcmV0dXJuIGZhbHNlOwogIH0KICBpZih0eXBlICE9IHVuZGVmaW5lZCkgewogICAgaWYodHlwZW9mIHR5cGUgPT0gJ3N0cmluZycgJiYgdG9rLnR5cGUgIT0gdHlwZSkgcmV0dXJuIGZhbHNlOwogICAgaWYodHlwZW9mIHR5cGUgPT0gJ251bWJlcicgJiYgdG9rLmlkICE9IHR5cGUpIHJldHVybiBmYWxzZTsKICB9CiAgcmV0dXJuIHRydWU7Cn0pOwoKY29uc3QgSXNLZXl3b3JkID0gVG9rSXMoJ2tleXdvcmQnKTsKY29uc3QgSXNQdW5jdHVhdG9yID0gVG9rSXMoJ3B1bmN0dWF0b3InKTsKY29uc3QgSXNJZGVudGlmaWVyID0gVG9rSXMoJ2lkZW50aWZpZXInKTsKY29uc3QgSXNTdHJpbmdMaXRlcmFsID0gVG9rSXMoJ3N0cmluZ0xpdGVyYWwnKTsKCmZ1bmN0aW9uIEltcG9ydFR5cGUoc2VxKSB7CiAgaWYoSXNLZXl3b3JkKCdpbXBvcnQnLCBzZXFbMF0pKSBzZXEuc2hpZnQoKTsKICBpZihJc1B1bmN0dWF0b3IoJyonLCBzZXFbMF0pKSB7CiAgICBpZihJc0tleXdvcmQoJ2FzJywgc2VxWzFdKSkgcmV0dXJuIEltcG9ydFR5cGVzLklNUE9SVF9OQU1FU1BBQ0U7CiAgfSBlbHNlIGlmKElzSWRlbnRpZmllcih1bmRlZmluZWQsIHNlcVswXSkpIHsKICAgIGlmKElzS2V5d29yZCgnZnJvbScsIHNlcVsxXSkpIHJldHVybiBJbXBvcnRUeXBlcy5JTVBPUlRfREVGQVVMVDsKICB9CiAgcmV0dXJuIEltcG9ydFR5cGVzLklNUE9SVDsKfQoKZnVuY3Rpb24gSW1wb3J0RmlsZShzZXEpIHsKICBsZXQgaWR4ID0gc2VxLmZpbmRJbmRleCh0b2sgPT4gSXNLZXl3b3JkKCdmcm9tJywgdG9rKSk7CiAgd2hpbGUoc2VxW2lkeF0gJiYgc2VxW2lkeF0udHlwZSAhPSAnc3RyaW5nTGl0ZXJhbCcpICsraWR4OwogIHJldHVybiBzZXFbaWR4XS5sZXhlbWUucmVwbGFjZSgvXlsnImBdKC4qKVsnImBdJC9nLCAnJDEnKTsKfQoKZnVuY3Rpb24gRXhwb3J0TmFtZShzZXEpIHsKICBsZXQgaWR4ID0gc2VxLmZpbmRJbmRleCh0b2sgPT4gSXNJZGVudGlmaWVyKHVuZGVmaW5lZCwgdG9rKSB8fCBJc0tleXdvcmQoJ2RlZmF1bHQnLCB0b2spKTsKICByZXR1cm4gc2VxW2lkeF0ubGV4ZW1lOwp9CgpmdW5jdGlvbiBBZGRFeHBvcnQodG9rZW5zKSB7CiAgbGV0IGNvZGUgPSB0b2tlbnMubWFwKHRvayA9PiB0b2subGV4ZW1lKS5qb2luKCcnKTsKICB0b2tlbnMgPSB0b2tlbnMuZmlsdGVyKHRvayA9PiB0b2sudHlwZSAhPSAnd2hpdGVzcGFjZScpOwogIGxldCBsZW4gPSB0b2tlbnMuZmluZEluZGV4KHRvayA9PiBJc0lkZW50aWZpZXIodW5kZWZpbmVkLCB0b2spIHx8IElzS2V5d29yZCgnZGVmYXVsdCcsIHRvaykpICsgMTsKICB0b2tlbnMgPSB0b2tlbnMuc2xpY2UoMCwgbGVuKTsKICBsZXQgZXhwID0gZGVmaW5lKAogICAgewogICAgICB0eXBlOiB0b2tlbnNbMV0ubGV4ZW1lLAogICAgICB0b2tlbnMsCiAgICAgIGV4cG9ydGVkOiBFeHBvcnROYW1lKHRva2VucyksCiAgICAgIHJhbmdlOiBbK3Rva2Vuc1swXS5sb2MsICt0b2tlbnMubGFzdC5sb2NdCiAgICB9LAogICAgeyBjb2RlLCBsb2M6IHRva2Vuc1swXS5sb2MgfQogICk7CiAgcmV0dXJuIGV4cDsKfQoKZnVuY3Rpb24gQWRkSW1wb3J0KHRva2VucykgewogIC8vY29uc29sZS5sb2coJ3Rva2VuczonLCB0b2tlbnMpOwogIGxldCByYW5nZSA9IFsrdG9rZW5zWzBdLmxvYywgK3Rva2Vucy5sYXN0LmxvY107CiAgbGV0IGNvZGUgPSB0b2tlbnMubWFwKHRvayA9PiB0b2subGV4ZW1lKS5qb2luKCcnKTsKICB0b2tlbnMgPSB0b2tlbnMuZmlsdGVyKHRvayA9PiB0b2sudHlwZSAhPSAnd2hpdGVzcGFjZScpOwogIGxldCB0eXBlID0gSW1wb3J0VHlwZSh0b2tlbnMpOwogIGxldCBmaWxlID0gSW1wb3J0RmlsZSh0b2tlbnMpOwogIGNvbnN0IHsgbG9jLCBzZXEgfSA9IHRva2Vuc1swXTsKICBsZXQgaW1wID0gZGVmaW5lKHsgdHlwZSwgZmlsZSwgbG9jLCBzZXEsIHJhbmdlIH0sIHsgdG9rZW5zLCBjb2RlIH0pOwogIGltcC5sb2NhbCA9IHsKICAgIFtJbXBvcnRUeXBlcy5JTVBPUlRfTkFNRVNQQUNFXTogKCkgPT4gewogICAgICBsZXQgaWR4ID0gdG9rZW5zLmZpbmRJbmRleCh0b2sgPT4gSXNLZXl3b3JkKCdhcycsIHRvaykpOwogICAgICByZXR1cm4gdG9rZW5zW2lkeCArIDFdLmxleGVtZTsKICAgIH0sCiAgICBbSW1wb3J0VHlwZXMuSU1QT1JUX0RFRkFVTFRdOiAoKSA9PiB7CiAgICAgIGxldCBpZHggPSB0b2tlbnMuZmluZEluZGV4KHRvayA9PiBJc0tleXdvcmQoJ2ltcG9ydCcsIHRvaykpOwogICAgICByZXR1cm4gdG9rZW5zW2lkeCArIDFdLmxleGVtZTsKICAgIH0sCiAgICBbSW1wb3J0VHlwZXMuSU1QT1JUXTogKCkgPT4gewogICAgICBsZXQgaWR4ID0gMDsKICAgICAgbGV0IHNwZWNpZmllciA9IFtdOwogICAgICBsZXQgc3BlY2lmaWVycyA9IFtdOwogICAgICBpZihJc0tleXdvcmQoJ2ltcG9ydCcsIHRva2Vuc1tpZHhdKSkgKytpZHg7CiAgICAgIGlmKElzUHVuY3R1YXRvcigneycsIHRva2Vuc1tpZHhdKSkgKytpZHg7CiAgICAgIGZvcig7ICFJc0tleXdvcmQoJ2Zyb20nLCB0b2tlbnNbaWR4XSk7ICsraWR4KSB7CiAgICAgICAgaWYoSXNQdW5jdHVhdG9yKFsnLCcsICd9J10sIHRva2Vuc1tpZHhdKSkgewogICAgICAgICAgaWYoc3BlY2lmaWVyLmxlbmd0aCkgc3BlY2lmaWVycy5wdXNoKHNwZWNpZmllcik7CiAgICAgICAgICBzcGVjaWZpZXIgPSBbXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgc3BlY2lmaWVyLnB1c2godG9rZW5zW2lkeF0ubGV4ZW1lKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHNwZWNpZmllcnM7CiAgICB9CiAgfVt0eXBlXSgpOwoKICByZXR1cm4gaW1wOwp9CgpmdW5jdGlvbiBQcmludEVTNkltcG9ydChpbXApIHsKICByZXR1cm4gewogICAgW0ltcG9ydFR5cGVzLklNUE9SVF9OQU1FU1BBQ0VdOiAoeyBsb2NhbCwgZmlsZSB9KSA9PiBgaW1wb3J0ICogYXMgJHtsb2NhbH0gZnJvbSAnJHtmaWxlfSc7YCwKICAgIFtJbXBvcnRUeXBlcy5JTVBPUlRfREVGQVVMVF06ICh7IGxvY2FsLCBmaWxlIH0pID0+IGBpbXBvcnQgJHtsb2NhbH0gZnJvbSAnJHtmaWxlfSc7YCwKICAgIFtJbXBvcnRUeXBlcy5JTVBPUlRdOiAoeyBsb2NhbCwgZmlsZSB9KSA9PiBgaW1wb3J0IHsgJHtsb2NhbC5qb2luKCcsICcpfSB9IGZyb20gJyR7ZmlsZX0nO2AKICB9W2ltcC50eXBlXShpbXApOwp9CgpmdW5jdGlvbiBQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pIHsKICByZXR1cm4gewogICAgW0ltcG9ydFR5cGVzLklNUE9SVF9OQU1FU1BBQ0VdOiAoKSA9PiBgY29uc3QgJHtsb2NhbH0gPSByZXF1aXJlKCcke2ZpbGV9Jyk7YCwKICAgIFtJbXBvcnRUeXBlcy5JTVBPUlRfREVGQVVMVF06ICgpID0+IGBjb25zdCAke2xvY2FsfSA9IHJlcXVpcmUoJyR7ZmlsZX0nKTtgLAogICAgW0ltcG9ydFR5cGVzLklNUE9SVF06ICgpID0+IGBjb25zdCB7ICR7bG9jYWwuam9pbignLCAnKX0gfSA9IHJlcXVpcmUoJyR7ZmlsZX0nKTtgCiAgfVt0eXBlXSgpOwp9CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3MpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBpbnNwZWN0T3B0aW9uczogewogICAgICBjb2xvcnM6IHRydWUsCiAgICAgIGRlcHRoOiA4LAogICAgICBicmVha0xlbmd0aDogMTYwLAogICAgICBtYXhTdHJpbmdMZW5ndGg6IDEwMCwKICAgICAgbWF4QXJyYXlMZW5ndGg6IDQwLAogICAgICBjb21wYWN0OiAxLAogICAgICBzdHJpbmdCcmVha05ld2xpbmU6IGZhbHNlLAogICAgICBoaWRlS2V5czogW1N5bWJvbC50b1N0cmluZ1RhZyAvKiwgJ2NvZGUnKi9dCiAgICB9CiAgfSk7CgogIGxldCBvcHRpbmQgPSAwOwogIGxldCBjb2RlID0gJ2MnOwogIGxldCBkZWJ1ZzsKCiAgd2hpbGUoYXJnc1tvcHRpbmRdICYmIGFyZ3Nbb3B0aW5kXS5zdGFydHNXaXRoKCctJykpIHsKICAgIGlmKC9jb2RlLy50ZXN0KGFyZ3Nbb3B0aW5kXSkpIGNvZGUgPSBhcmdzWysrb3B0aW5kXTsKICAgIGlmKC8oZGVidWd8Xi14JCkvLnRlc3QoYXJnc1tvcHRpbmRdKSkgZGVidWcgPSB0cnVlOwoKICAgIG9wdGluZCsrOwogIH0KCiAgY29uc3QgUmVsYXRpdmVQYXRoID0gZmlsZSA9PiBwYXRoLmpvaW4ocGF0aC5kaXJuYW1lKHByb2Nlc3MuYXJndlsxXSksICcuLicsIGZpbGUpOwoKICBsZXQgZmlsZXMgPSBhcmdzW29wdGluZF0gPyBhcmdzLnNsaWNlKG9wdGluZCkgOiBbUmVsYXRpdmVQYXRoKCdsaWIvdXRpbC5qcycpXTsKCiAgd2hpbGUob3B0aW5kIDwgZmlsZXMubGVuZ3RoKSB7CiAgICBQcm9jZXNzRmlsZShmaWxlc1tvcHRpbmQrK10pOwogIH0KCiAgZnVuY3Rpb24gUHJvY2Vzc0ZpbGUoZmlsZSkgewogICAgY29uc29sZS5sb2coYExvYWRpbmcgJyR7ZmlsZX0nLi4uYCk7CiAgICBjb25zdCBsb2cgPSAoLi4uYXJncykgPT4gY29uc29sZS5sb2coYCR7ZmlsZX06YCwgLi4uYXJncyk7CgogICAgbGV0IHN0ciA9IGZpbGUgPyBCdWZmZXJGaWxlKGZpbGUpIDogY29kZVsxXTsKICAgIC8vc3RyID0gJyAgcmV0dXJuIG5ldyBNYXAocmV0Lm1hcCgoW25hbWUsIGRlc2NyaXB0aW9uXSkgPT4gW25hbWUsIHsgdXJsOiBgaHR0cHM6Ly9naXRodWIuY29tLyR7dXNlcn0vJHtuYW1lfWAsIGRlc2NyaXB0aW9uIH1dKSk7JzsKICAgIGxldCBsZW4gPSBzdHIubGVuZ3RoOwogICAgbGV0IHR5cGUgPSBwYXRoLmV4dG5hbWUoZmlsZSkuc3Vic3RyaW5nKDEpOwogICAgbG9nKCdkYXRhOicsIGVzY2FwZShzdHIuc2xpY2UoMCwgMTAwKSkpOwoKICAgIGxldCBsZXggPSB7CiAgICAgIGpzOiBuZXcgSlNMZXhlcihzdHIsIGZpbGUpLAogICAgICBjOiBuZXcgQ0xleGVyKHN0ciwgQ0xleGVyLkxPTkdFU1QsIGZpbGUpLAogICAgICBibmY6IG5ldyBCTkZMZXhlcihzdHIsIGZpbGUpCiAgICB9OwoKICAgIGxleC5nNCA9IGxleC5ibmY7CiAgICBsZXguZWJuZiA9IGxleC5ibmY7CiAgICBsZXgubCA9IGxleC5ibmY7CiAgICBsZXgueSA9IGxleC5ibmY7CgogICAgY29uc3QgbGV4ZXIgPSBsZXhbdHlwZV07CgogICAgVCA9IGxleGVyLnRva2Vucy5yZWR1Y2UoKGFjYywgbmFtZSwgaWQpID0+ICh7IC4uLmFjYywgW25hbWVdOiBpZCB9KSwge30pOwoKICAgIGxvZygnbGV4ZXI6JywgbGV4ZXJbU3ltYm9sLnRvU3RyaW5nVGFnXSk7CiAgICBsb2coJ2NvZGU6JywgY29kZSk7CgogICAgbGV0IGUgPSBuZXcgU3ludGF4RXJyb3IoKTsKICAgIGxvZygnbmV3IFN5bnRheEVycm9yKCknLCBlKTsKCiAgICBsZXhlci5oYW5kbGVyID0gbGV4ID0+IHsKICAgICAgY29uc3QgeyBsb2MsIG1vZGUsIHBvcywgc3RhcnQsIGJ5dGVMZW5ndGgsIHN0YXRlIH0gPSBsZXg7CiAgICAgIC8vbG9nKGAke3RoaXMuY3VycmVudExpbmUoKX1gKTsKICAgICAgLy9sb2coYGhhbmRsZXIgbG9jPSR7bG9jfSBtb2RlPSR7SW50VG9CaW5hcnkobW9kZSl9IHN0YXRlPSR7bGV4LnRvcFN0YXRlKCl9YCwgeyBwb3MsIHN0YXJ0LCBieXRlTGVuZ3RoIH0sIGBcbiR7bGV4LmN1cnJlbnRMaW5lKCl9YCApOwogICAgICBsb2coJyAnLnJlcGVhdChsb2MuY29sdW1uIC0gMSkgKyAnXicpOwogICAgfTsKICAgIGxldCB0b2tlbkxpc3QgPSBbXSwKICAgICAgZGVjbGFyYXRpb25zID0gW107CiAgICBjb25zdCBjb2xTaXplcyA9IFsxMiwgOCwgNCwgMTYsIDMyLCAxMCwgMF07CgogICAgY29uc3QgcHJpbnRUb2sgPSBkZWJ1ZwogICAgICA/ICh0b2ssIHByZWZpeCkgPT4gewogICAgICAgICAgY29uc3QgcmFuZ2UgPSB0b2suY2hhclJhbmdlOwogICAgICAgICAgY29uc3QgY29scyA9IFtwcmVmaXgsIGB0b2tbJHt0b2suYnl0ZUxlbmd0aH1dYCwgdG9rLmlkLCB0b2sudHlwZSwgdG9rLmxleGVtZSwgdG9rLmxleGVtZS5sZW5ndGgsIHRvay5sb2NdOwogICAgICAgICAgbG9nKC4uLmNvbHMubWFwKChjb2wsIGkpID0+IChjb2wgKyAnJykucmVwbGFjZUFsbCgnXG4nLCAnXFxuJykucGFkRW5kKGNvbFNpemVzW2ldKSkpOwogICAgICAgIH0KICAgICAgOiAoKSA9PiB7fTsKCiAgICBsZXQgdG9rLAogICAgICBpID0gMDsKCiAgICBsb2coJ25vdycsIERhdGUubm93KCkpOwoKICAgIGxvZyhsZXhlci5ydWxlTmFtZXMubGVuZ3RoLCAncnVsZXMnLCBsZXhlci5ydWxlTmFtZXMudW5pcXVlKCkubGVuZ3RoLCAndW5pcXVlIHJ1bGVzJyk7CgogICAgbG9nKCdsZXhlci5tYXNrJywgSW50VG9CaW5hcnkobGV4ZXIubWFzaykpOwogICAgbG9nKCdsZXhlci5za2lwJywgbGV4ZXIuc2tpcCk7CiAgICBsb2coJ2xleGVyLnNraXAnLCBJbnRUb0JpbmFyeShsZXhlci5za2lwKSk7CiAgICBsb2coJ2xleGVyLnN0YXRlcycsIGxleGVyLnN0YXRlcyk7CgogICAgbG9nKCduZXcgU3ludGF4RXJyb3IoInRlc3QiKScsIG5ldyBTeW50YXhFcnJvcigndGVzdCcsIG5ldyBMb2NhdGlvbigxMCwgMywgMjgsICdmaWxlLnR4dCcpKSk7CiAgICBsZXQgbWFzayA9IEludFRvQmluYXJ5KGxleGVyLm1hc2spOwogICAgbGV0IHN0YXRlID0gbGV4ZXIudG9wU3RhdGUoKTsKICAgIGxleGVyLmJlZ2luQ29kZSA9ICgpID0+IChjb2RlID09ICdqcycgPyAwYjEwMDAgOiAwYjAxMDApOwogICAgbGV0IHRva2VucyA9IFtdOwogICAgbGV0IHN0YXJ0ID0gRGF0ZS5ub3coKTsKICAgIGNvbnN0IGJhbGFuY2VyID0gKCkgPT4gewogICAgICBsZXQgc2VsZjsKICAgICAgbGV0IHN0YWNrID0gW107CiAgICAgIGNvbnN0IHRhYmxlID0geyAnfSc6ICd7JywgJ10nOiAnWycsICcpJzogJygnIH07CiAgICAgIHNlbGYgPSBmdW5jdGlvbiBQYXJlbnRoZXNlQmFsYW5jZXIodG9rKSB7CiAgICAgICAgc3dpdGNoICh0b2s/LmxleGVtZSkgewogICAgICAgICAgY2FzZSAneyc6CiAgICAgICAgICBjYXNlICdbJzoKICAgICAgICAgIGNhc2UgJygnOiB7CiAgICAgICAgICAgIHN0YWNrLnB1c2godG9rLmxleGVtZSk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgY2FzZSAnfSc6CiAgICAgICAgICBjYXNlICddJzoKICAgICAgICAgIGNhc2UgJyknOiB7CiAgICAgICAgICAgIGlmKHN0YWNrLmxhc3QgIT0gdGFibGVbdG9rLmxleGVtZV0pIHRocm93IG5ldyBFcnJvcihgdG9wICcke3N0YWNrLmxhc3R9JyAhPSAnJHt0b2subGV4ZW1lfScgWyAke3N0YWNrLm1hcChzID0+IGAnJHtzfSdgKS5qb2luKCcsICcpfSBdYCk7CgogICAgICAgICAgICBzdGFjay5wb3AoKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwogICAgICBPYmplY3QuYXNzaWduKHNlbGYsIHsKICAgICAgICBzdGFjaywKICAgICAgICByZXNldCgpIHsKICAgICAgICAgIHN0YWNrLmNsZWFyKCk7CiAgICAgICAgfSwKICAgICAgICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IGRlcHRoKCkgewogICAgICAgIHJldHVybiBzdGFjay5sZW5ndGg7CiAgICAgIH0KICAgICAgfSk7CgogICAgICByZXR1cm4gc2VsZjsKICAgIH07CiAgICBsZXQgYmFsYW5jZXJzID0gW2JhbGFuY2VyKCldOwoKICAgIGxldCBpbXBvcnRzID0gW10sCiAgICAgIGV4cG9ydHMgPSBbXTsKICAgIGxldCBpbXBleHAsCiAgICAgIGNvbmQsCiAgICAgIGltcCA9IFtdOwoKICAgIGZvcig7OykgewogICAgICBsZXQgbmV3U3RhdGUsIHN0YXRlOwogICAgICBsZXQgeyBzdGF0ZURlcHRoIH0gPSBsZXhlcjsKICAgICAgc3RhdGUgPSBsZXhlci50b3BTdGF0ZSgpOwogICAgICBsZXQgeyBkb25lLCB2YWx1ZSB9ID0gbGV4ZXIubmV4dCgpOwogICAgICBpZihkb25lKSBicmVhazsKICAgICAgbmV3U3RhdGUgPSBsZXhlci50b3BTdGF0ZSgpOwogICAgICB0b2sgPSB2YWx1ZTsKICAgICAgaWYobmV3U3RhdGUgIT0gc3RhdGUpIHsKICAgICAgICBpZihzdGF0ZSA9PSAnVEVNUExBVEUnICYmIGxleGVyLnN0YXRlRGVwdGggPiBzdGF0ZURlcHRoKSBiYWxhbmNlcnMucHVzaChiYWxhbmNlcigpKTsKICAgICAgICBpZihuZXdTdGF0ZSA9PSAnVEVNUExBVEUnICYmIGxleGVyLnN0YXRlRGVwdGggPCBzdGF0ZURlcHRoKSBiYWxhbmNlcnMucG9wKCk7CiAgICAgIH0KICAgICAgbGV0IG4gPSBiYWxhbmNlcnMubGFzdC5kZXB0aDsKICAgICAgaWYobiA9PSAwICYmIHRvay5sZXhlbWUgPT0gJ30nICYmIGxleGVyLnN0YXRlRGVwdGggPiAwKSB7CiAgICAgICAgbGV4ZXIucG9wU3RhdGUoKTsKICAgICAgICBjb250aW51ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICBiYWxhbmNlcih0b2spOwogICAgICAgIGlmKG4gPiAwICYmIGJhbGFuY2Vycy5sYXN0LmRlcHRoID09IDApIGxvZygnYmFsYW5jZXInKTsKICAgICAgfQogICAgICBpZihbJ2ltcG9ydCcsICdleHBvcnQnXS5pbmRleE9mKHRvay5sZXhlbWUpID49IDApIHsKICAgICAgICBpbXBleHAgPSBXaGF0W3Rvay5sZXhlbWUudG9VcHBlckNhc2UoKV07CiAgICAgICAgbGV0IHByZXYgPSB0b2tlbnNbdG9rZW5zLmxlbmd0aCAtIDFdOwogICAgICAgIC8qIGlmKHRva2Vucy5sZW5ndGggPT0gMCB8fCBwcmV2LmxleGVtZS5lbmRzV2l0aCgnXG4nKSkgKi8gewogICAgICAgICAgY29uZCA9IHRydWU7CiAgICAgICAgICBpbXAgPSBbXTsKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYoY29uZCA9PSB0cnVlKSB7CiAgICAgICAgaW1wLnB1c2godG9rKTsKICAgICAgICBpZihbJzsnLCAnXG4nXS5pbmRleE9mKHRvay5sZXhlbWUpICE9IC0xKSB7CiAgICAgICAgICBjb25kID0gZmFsc2U7CiAgICAgICAgICBpZihpbXAuc29tZShpID0+IGkubGV4ZW1lID09ICdmcm9tJykpIHsKICAgICAgICAgICAgaWYoaW1wZXhwID09IFdoYXQuSU1QT1JUKSBpbXBvcnRzLnB1c2goQWRkSW1wb3J0KGltcCkpOwogICAgICAgICAgfQoKICAgICAgICAgIGlmKGltcGV4cCA9PSBXaGF0LkVYUE9SVCkgZXhwb3J0cy5wdXNoKEFkZEV4cG9ydChpbXApKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgcHJpbnRUb2sodG9rLCBsZXhlci50b3BTdGF0ZSgpKTsKICAgICAgdG9rZW5zLnB1c2godG9rKTsKICAgIH0KCiAgICBsb2coJ0VTNiBpbXBvcnRzJywgaW1wb3J0cy5tYXAoUHJpbnRFUzZJbXBvcnQpKTsKICAgIGxvZygnQ0pTIGltcG9ydHMnLCBpbXBvcnRzLm1hcChQcmludENKU0ltcG9ydCkpOwoKICAgIG1vZHVsZXNbZmlsZV0gPSB7IGltcG9ydHMsIGV4cG9ydHMgfTsKCiAgICAvLyAgbG9nKCdleHBvcnRzJywgZXhwb3J0cyk7CiAgICBsZXQgZmlsZUltcG9ydHMgPSBpbXBvcnRzLmZpbHRlcihpbXAgPT4gL1wuanMkL2kudGVzdChpbXAuZmlsZSkpOwogICAgbGV0IHNwbGl0UG9pbnRzID0gdW5pcXVlKGZpbGVJbXBvcnRzLnJlZHVjZSgoYWNjLCBpbXApID0+IFsuLi5hY2MsIC4uLmltcC5yYW5nZV0sIFtdKSk7CiAgICBidWZmZXJzW2ZpbGVdID0gWy4uLnNwbGl0KEJ1ZmZlckZpbGUoZmlsZSksIC4uLnNwbGl0UG9pbnRzKV0ubWFwKGIgPT4gLyogYiA/PyAqLyB0b1N0cmluZyhiLCAwLCBiLmJ5dGVMZW5ndGgpKTsKICAgIGxvZyhgc3BsaXRQb2ludHNgLCBzcGxpdFBvaW50cyk7CiAgICBsb2coYGJ1ZmZlcnNbJHtmaWxlfV1gLCBidWZmZXJzW2ZpbGVdKTsKICAgIGxvZyhgYnVmZmVyc1ske2ZpbGV9XWAsICBCdWZmZXJMZW5ndGhzKGZpbGUpKTsKICAgIGxvZygKICAgICAgJ2ZpbGVJbXBvcnRzJywKICAgICAgZmlsZUltcG9ydHMubWFwKGltcCA9PiBpbXAuZmlsZSkKICAgICk7CgogICAgbGV0IGRpciA9IHBhdGguZGlybmFtZShmaWxlKTsKCiAgICBmaWxlSW1wb3J0cy5mb3JFYWNoKGltcCA9PiB7CiAgICAgIGxldCBwID0gcGF0aC5jb2xsYXBzZShwYXRoLmpvaW4oZGlyLCBpbXAuZmlsZSkpOwogICAgICBsb2coJ3AnLCBwKTsKCiAgICAgIEFkZFVuaXF1ZShmaWxlcywgcCk7CiAgICAgIC8vICAgIGxldCBmID0gQnVmZmVyRmlsZShwKTsKICAgIH0pOwoKICAgIGxldCBlbmQgPSBEYXRlLm5vdygpOwoKICAgIGxvZyhgdG9vayAke2VuZCAtIHN0YXJ0fW1zYCk7CiAgICBsb2coJ2xleGVyJywgbGV4ZXIpOwogICAgLy9sb2coJ3Rva2VucycsIHRva2Vucyk7CgogICAgc3RkLmdjKCk7CiAgfQogIGNvbnNvbGUubG9nKCdidWZmZXJzJywgYnVmZmVycyk7CiAgY29uc29sZS5sb2coJ2ZpbGVzJywgZmlsZXMpOwp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvci5tZXNzYWdlfVxuJHtlcnJvci5zdGFja31gKTsKICBzdGQuZXhpdCgxKTsKfSBmaW5hbGx5IHsKICBjb25zb2xlLmxvZygnU1VDQ0VTUycpOwp9CgAAAAAAAAAA1TAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/C4AAAAAAAD8LgAAAAAAAAAAAAAAAPC/"
				],
				[
					10359,
					2,
					"left_delete",
					null,
					"AgAAAA0GAAAAAAAADQYAAAAAAAALAAAALmJ5dGVMZW5ndGgMBgAAAAAAAAwGAAAAAAAAAQAAAGI",
					"AQAAAAAAAAABAAAADQYAAAAAAAAYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10360,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAAwGAAAAAAAADQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAYAAAAAAAAMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10429,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAIgtAAAAAAAAiC0AAAAAAAACAAAALyqOLQAAAAAAAI4tAAAAAAAAAgAAACov",
					"AQAAAAAAAAABAAAAky0AAAAAAACILQAAAAAAAAAAAAAAAPC/"
				],
				[
					10438,
					1,
					"insert",
					{
						"characters": ".byte"
					},
					"BQAAAA0GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAPBgAAAAAAAAAAAAAPBgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQYAAAAAAAANBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10439,
					1,
					"insert_completion",
					{
						"completion": "byteLength",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "byteLength"
					},
					"AgAAAA4GAAAAAAAADgYAAAAAAAAEAAAAYnl0ZQ4GAAAAAAAAGAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgYAAAAAAAASBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10443,
					1,
					"cut",
					null,
					"AQAAAMwFAAAAAAAAzAUAAAAAAABRAAAACmZ1bmN0aW9uIEJ1ZmZlckxlbmd0aHMoZmlsZSkgewogIHJldHVybiBidWZmZXJzW2ZpbGVdLm1hcChiID0+IGIuYnl0ZUxlbmd0aCk7Cn0K",
					"AQAAAAAAAAABAAAAzAUAAAAAAAAdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10444,
					2,
					"paste",
					null,
					"AgAAAMwFAAAAAAAAHQYAAAAAAAAAAAAAHQYAAAAAAABuBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAUAAAAAAADMBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10447,
					1,
					"insert",
					{
						"characters": "OFFSets"
					},
					"CAAAAC0GAAAAAAAALgYAAAAAAAAAAAAALgYAAAAAAAAuBgAAAAAAAAcAAABMZW5ndGhzLgYAAAAAAAAvBgAAAAAAAAAAAAAvBgAAAAAAADAGAAAAAAAAAAAAADAGAAAAAAAAMQYAAAAAAAAAAAAAMQYAAAAAAAAyBgAAAAAAAAAAAAAyBgAAAAAAADMGAAAAAAAAAAAAADMGAAAAAAAANAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQYAAAAAAAA0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10448,
					5,
					"left_delete",
					null,
					"BQAAADMGAAAAAAAAMwYAAAAAAAABAAAAczIGAAAAAAAAMgYAAAAAAAABAAAAdDEGAAAAAAAAMQYAAAAAAAABAAAAZTAGAAAAAAAAMAYAAAAAAAABAAAAUy8GAAAAAAAALwYAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAANAYAAAAAAAA0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10449,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAC8GAAAAAAAAMAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwYAAAAAAAAvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10450,
					2,
					"left_delete",
					null,
					"AgAAAC8GAAAAAAAALwYAAAAAAAABAAAAZi4GAAAAAAAALgYAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAAMAYAAAAAAAAwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10451,
					1,
					"insert",
					{
						"characters": "ffsets"
					},
					"BgAAAC4GAAAAAAAALwYAAAAAAAAAAAAALwYAAAAAAAAwBgAAAAAAAAAAAAAwBgAAAAAAADEGAAAAAAAAAAAAADEGAAAAAAAAMgYAAAAAAAAAAAAAMgYAAAAAAAAzBgAAAAAAAAAAAAAzBgAAAAAAADQGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgYAAAAAAAAuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10455,
					1,
					"insert",
					{
						"characters": "reduce"
					},
					"BwAAAFQGAAAAAAAAVQYAAAAAAAAAAAAAVQYAAAAAAABVBgAAAAAAAAMAAABtYXBVBgAAAAAAAFYGAAAAAAAAAAAAAFYGAAAAAAAAVwYAAAAAAAAAAAAAVwYAAAAAAABYBgAAAAAAAAAAAABYBgAAAAAAAFkGAAAAAAAAAAAAAFkGAAAAAAAAWgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAYAAAAAAABXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10457,
					1,
					"insert",
					{
						"characters": "(A"
					},
					"AgAAAFsGAAAAAAAAXAYAAAAAAAAAAAAAXAYAAAAAAABdBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwYAAAAAAABbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10458,
					1,
					"left_delete",
					null,
					"AQAAAFwGAAAAAAAAXAYAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAAXQYAAAAAAABdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10459,
					1,
					"insert",
					{
						"characters": "a,"
					},
					"AgAAAFwGAAAAAAAAXQYAAAAAAAAAAAAAXQYAAAAAAABeBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAYAAAAAAABcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10461,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAF8GAAAAAAAAYAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwYAAAAAAABfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10464,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAGQGAAAAAAAAZQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAYAAAAAAABkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10465,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGUGAAAAAAAAZgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQYAAAAAAABlBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10468,
					1,
					"insert",
					{
						"characters": "[c,"
					},
					"AwAAAFwGAAAAAAAAXQYAAAAAAAAAAAAAXQYAAAAAAABeBgAAAAAAAAAAAABeBgAAAAAAAF8GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAYAAAAAAABcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10469,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF8GAAAAAAAAYAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwYAAAAAAABfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10470,
					1,
					"right_delete",
					null,
					"AQAAAGAGAAAAAAAAYAYAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAYAYAAAAAAABgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10471,
					1,
					"insert",
					{
						"characters": "o]"
					},
					"AgAAAGAGAAAAAAAAYQYAAAAAAAAAAAAAYQYAAAAAAABiBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAYAAAAAAABgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10494,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"BAAAAF0GAAAAAAAAXgYAAAAAAAAAAAAAXgYAAAAAAABeBgAAAAAAAAEAAABjXgYAAAAAAABfBgAAAAAAAAAAAABfBgAAAAAAAGAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQYAAAAAAABeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10496,
					1,
					"left_delete",
					null,
					"AQAAAGIGAAAAAAAAYgYAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAYwYAAAAAAABjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10499,
					1,
					"insert",
					{
						"characters": "list"
					},
					"BAAAAGIGAAAAAAAAYwYAAAAAAAAAAAAAYwYAAAAAAABkBgAAAAAAAAAAAABkBgAAAAAAAGUGAAAAAAAAAAAAAGUGAAAAAAAAZgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgYAAAAAAABiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10511,
					1,
					"left_delete",
					null,
					"AQAAAG4GAAAAAAAAbgYAAAAAAAAOAAAAWyBiLmJ5dGVMZW5ndGg",
					"AQAAAAAAAAABAAAAbgYAAAAAAAB8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10512,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4GAAAAAAAAbwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgYAAAAAAABuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10513,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAG8GAAAAAAAAcQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwYAAAAAAABvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10514,
					1,
					"insert",
					{
						"characters": "poi"
					},
					"AwAAAHAGAAAAAAAAcQYAAAAAAAAAAAAAcQYAAAAAAAByBgAAAAAAAAAAAAByBgAAAAAAAHMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAYAAAAAAABwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10515,
					1,
					"left_delete",
					null,
					"AQAAAHIGAAAAAAAAcgYAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAcwYAAAAAAABzBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10516,
					1,
					"insert",
					{
						"characters": "s+B.b"
					},
					"BQAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB0BgAAAAAAAAAAAAB0BgAAAAAAAHUGAAAAAAAAAAAAAHUGAAAAAAAAdgYAAAAAAAAAAAAAdgYAAAAAAAB3BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgYAAAAAAAByBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10517,
					2,
					"left_delete",
					null,
					"AgAAAHYGAAAAAAAAdgYAAAAAAAABAAAAYnUGAAAAAAAAdQYAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAdwYAAAAAAAB3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10518,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAHQGAAAAAAAAdAYAAAAAAAABAAAAQg",
					"AQAAAAAAAAABAAAAdQYAAAAAAAB1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10519,
					1,
					"insert",
					{
						"characters": "b,"
					},
					"AgAAAHQGAAAAAAAAdQYAAAAAAAAAAAAAdQYAAAAAAAB2BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAYAAAAAAAB0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10520,
					1,
					"left_delete",
					null,
					"AQAAAHUGAAAAAAAAdQYAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAdgYAAAAAAAB2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10521,
					1,
					"insert",
					{
						"characters": ".byteLEngt"
					},
					"CgAAAHUGAAAAAAAAdgYAAAAAAAAAAAAAdgYAAAAAAAB3BgAAAAAAAAAAAAB3BgAAAAAAAHgGAAAAAAAAAAAAAHgGAAAAAAAAeQYAAAAAAAAAAAAAeQYAAAAAAAB6BgAAAAAAAAAAAAB6BgAAAAAAAHsGAAAAAAAAAAAAAHsGAAAAAAAAfAYAAAAAAAAAAAAAfAYAAAAAAAB9BgAAAAAAAAAAAAB9BgAAAAAAAH4GAAAAAAAAAAAAAH4GAAAAAAAAfwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQYAAAAAAAB1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10522,
					4,
					"left_delete",
					null,
					"BAAAAH4GAAAAAAAAfgYAAAAAAAABAAAAdH0GAAAAAAAAfQYAAAAAAAABAAAAZ3wGAAAAAAAAfAYAAAAAAAABAAAAbnsGAAAAAAAAewYAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAAfwYAAAAAAAB/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10523,
					1,
					"insert",
					{
						"characters": "ength,"
					},
					"BgAAAHsGAAAAAAAAfAYAAAAAAAAAAAAAfAYAAAAAAAB9BgAAAAAAAAAAAAB9BgAAAAAAAH4GAAAAAAAAAAAAAH4GAAAAAAAAfwYAAAAAAAAAAAAAfwYAAAAAAACABgAAAAAAAAAAAACABgAAAAAAAIEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewYAAAAAAAB7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10524,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIEGAAAAAAAAggYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQYAAAAAAACBBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10525,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIIGAAAAAAAAhAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggYAAAAAAACCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10526,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAIIGAAAAAAAAggYAAAAAAAABAAAAW4IGAAAAAAAAggYAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAgwYAAAAAAACDBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10527,
					1,
					"insert",
					{
						"characters": "list.concat"
					},
					"CwAAAIIGAAAAAAAAgwYAAAAAAAAAAAAAgwYAAAAAAACEBgAAAAAAAAAAAACEBgAAAAAAAIUGAAAAAAAAAAAAAIUGAAAAAAAAhgYAAAAAAAAAAAAAhgYAAAAAAACHBgAAAAAAAAAAAACHBgAAAAAAAIgGAAAAAAAAAAAAAIgGAAAAAAAAiQYAAAAAAAAAAAAAiQYAAAAAAACKBgAAAAAAAAAAAACKBgAAAAAAAIsGAAAAAAAAAAAAAIsGAAAAAAAAjAYAAAAAAAAAAAAAjAYAAAAAAACNBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggYAAAAAAACCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10528,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI0GAAAAAAAAjwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQYAAAAAAACNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10616,
					1,
					"insert",
					{
						"characters": "os"
					},
					"AwAAAIIGAAAAAAAAgwYAAAAAAAAAAAAAgwYAAAAAAACDBgAAAAAAAA0AAABsaXN0LmNvbmNhdCgpgwYAAAAAAACEBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggYAAAAAAACPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10617,
					2,
					"left_delete",
					null,
					"AgAAAIMGAAAAAAAAgwYAAAAAAAABAAAAc4IGAAAAAAAAggYAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAhAYAAAAAAACEBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10618,
					1,
					"insert",
					{
						"characters": "ois"
					},
					"AwAAAIIGAAAAAAAAgwYAAAAAAAAAAAAAgwYAAAAAAACEBgAAAAAAAAAAAACEBgAAAAAAAIUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggYAAAAAAACCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10619,
					3,
					"left_delete",
					null,
					"AwAAAIQGAAAAAAAAhAYAAAAAAAABAAAAc4MGAAAAAAAAgwYAAAAAAAABAAAAaYIGAAAAAAAAggYAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAhQYAAAAAAACFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10620,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"AwAAAIIGAAAAAAAAgwYAAAAAAAAAAAAAgwYAAAAAAACEBgAAAAAAAAAAAACEBgAAAAAAAIUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggYAAAAAAACCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10632,
					1,
					"insert",
					{
						"characters": "m,"
					},
					"AgAAAIYGAAAAAAAAhwYAAAAAAAAAAAAAhwYAAAAAAACIBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgYAAAAAAACGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10633,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIgGAAAAAAAAiQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAYAAAAAAACIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10634,
					3,
					"left_delete",
					null,
					"AwAAAIgGAAAAAAAAiAYAAAAAAAABAAAAIIcGAAAAAAAAhwYAAAAAAAABAAAALIYGAAAAAAAAhgYAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAiQYAAAAAAACJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10635,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIYGAAAAAAAAhwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgYAAAAAAACGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10636,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAIcGAAAAAAAAiAYAAAAAAAAAAAAAiAYAAAAAAACJBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwYAAAAAAACHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10655,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIoGAAAAAAAAjAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigYAAAAAAACKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10656,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAIoGAAAAAAAAigYAAAAAAAABAAAAW4oGAAAAAAAAigYAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAiwYAAAAAAACLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10665,
					1,
					"insert",
					{
						"characters": "ils"
					},
					"AwAAAIIGAAAAAAAAgwYAAAAAAAAAAAAAgwYAAAAAAACEBgAAAAAAAAAAAACEBgAAAAAAAIUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggYAAAAAAACCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10666,
					3,
					"left_delete",
					null,
					"AwAAAIQGAAAAAAAAhAYAAAAAAAABAAAAc4MGAAAAAAAAgwYAAAAAAAABAAAAbIIGAAAAAAAAggYAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAhQYAAAAAAACFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10667,
					1,
					"insert",
					{
						"characters": "list.concat("
					},
					"DAAAAIIGAAAAAAAAgwYAAAAAAAAAAAAAgwYAAAAAAACEBgAAAAAAAAAAAACEBgAAAAAAAIUGAAAAAAAAAAAAAIUGAAAAAAAAhgYAAAAAAAAAAAAAhgYAAAAAAACHBgAAAAAAAAAAAACHBgAAAAAAAIgGAAAAAAAAAAAAAIgGAAAAAAAAiQYAAAAAAAAAAAAAiQYAAAAAAACKBgAAAAAAAAAAAACKBgAAAAAAAIsGAAAAAAAAAAAAAIsGAAAAAAAAjAYAAAAAAAAAAAAAjAYAAAAAAACNBgAAAAAAAAAAAACNBgAAAAAAAI4GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggYAAAAAAACCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10670,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAI4GAAAAAAAAjwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgYAAAAAAACOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10672,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJMGAAAAAAAAlAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwYAAAAAAACTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10673,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAJQGAAAAAAAAlQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAYAAAAAAACUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10676,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAJcGAAAAAAAAmAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwYAAAAAAACXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10680,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJkGAAAAAAAAmgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQYAAAAAAACZBgAAAAAAAAAAAAAAwIxA"
				],
				[
					10681,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJoGAAAAAAAAnAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgYAAAAAAACaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10683,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAJwGAAAAAAAAnQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAYAAAAAAACcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10685,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJ4GAAAAAAAAoAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngYAAAAAAACeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10686,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJ8GAAAAAAAAoAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwYAAAAAAACfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10747,
					1,
					"cut",
					null,
					"AQAAAJIuAAAAAAAAki4AAAAAAAAyAAAAICAgIGxvZyhgYnVmZmVyc1ske2ZpbGV9XWAsIEJ1ZmZlckxlbmd0aHMoZmlsZSkpOwo",
					"AQAAAAAAAAABAAAAki4AAAAAAADELgAAAAAAAAAAAAAAAPC/"
				],
				[
					10748,
					2,
					"paste",
					null,
					"AgAAAJIuAAAAAAAAxC4AAAAAAAAAAAAAxC4AAAAAAAD2LgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAki4AAAAAAACSLgAAAAAAAAAAAAAAAPC/"
				],
				[
					10751,
					1,
					"insert",
					{
						"characters": "OFfsets"
					},
					"CAAAAOYuAAAAAAAA5y4AAAAAAAAAAAAA5y4AAAAAAADnLgAAAAAAAAcAAABMZW5ndGhz5y4AAAAAAADoLgAAAAAAAAAAAADoLgAAAAAAAOkuAAAAAAAAAAAAAOkuAAAAAAAA6i4AAAAAAAAAAAAA6i4AAAAAAADrLgAAAAAAAAAAAADrLgAAAAAAAOwuAAAAAAAAAAAAAOwuAAAAAAAA7S4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5i4AAAAAAADtLgAAAAAAAAAAAAAAAPC/"
				],
				[
					10752,
					6,
					"left_delete",
					null,
					"BgAAAOwuAAAAAAAA7C4AAAAAAAABAAAAc+suAAAAAAAA6y4AAAAAAAABAAAAdOouAAAAAAAA6i4AAAAAAAABAAAAZekuAAAAAAAA6S4AAAAAAAABAAAAc+guAAAAAAAA6C4AAAAAAAABAAAAZucuAAAAAAAA5y4AAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAA7S4AAAAAAADtLgAAAAAAAAAAAAAAAPC/"
				],
				[
					10753,
					1,
					"insert",
					{
						"characters": "ffsets"
					},
					"BgAAAOcuAAAAAAAA6C4AAAAAAAAAAAAA6C4AAAAAAADpLgAAAAAAAAAAAADpLgAAAAAAAOouAAAAAAAAAAAAAOouAAAAAAAA6y4AAAAAAAAAAAAA6y4AAAAAAADsLgAAAAAAAAAAAADsLgAAAAAAAO0uAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5y4AAAAAAADnLgAAAAAAAAAAAAAAAPC/"
				],
				[
					10757,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4uAAAAAAAA3y4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3i4AAAAAAADeLgAAAAAAAAAAAAAAQHBA"
				],
				[
					10758,
					1,
					"left_delete",
					null,
					"AQAAAN4uAAAAAAAA3i4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3y4AAAAAAADfLgAAAAAAAAAAAAAAAPC/"
				],
				[
					10765,
					1,
					"insert",
					{
						"characters": " len"
					},
					"BAAAAKsuAAAAAAAArC4AAAAAAAAAAAAArC4AAAAAAACtLgAAAAAAAAAAAACtLgAAAAAAAK4uAAAAAAAAAAAAAK4uAAAAAAAAry4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqy4AAAAAAACrLgAAAAAAAAAAAAAAAPC/"
				],
				[
					10770,
					1,
					"insert",
					{
						"characters": " ofs"
					},
					"BAAAAOEuAAAAAAAA4i4AAAAAAAAAAAAA4i4AAAAAAADjLgAAAAAAAAAAAADjLgAAAAAAAOQuAAAAAAAAAAAAAOQuAAAAAAAA5S4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4S4AAAAAAADhLgAAAAAAAAAAAAAAAPC/"
				],
				[
					10777,
					1,
					"cut",
					null,
					"AQAAABwGAAAAAAAAHAYAAAAAAACJAAAACgpmdW5jdGlvbiBCdWZmZXJPZmZzZXRzKGZpbGUpIHsKICByZXR1cm4gYnVmZmVyc1tmaWxlXS5yZWR1Y2UoKFtwb3MsIGxpc3RdLGIpID0+ICBbcG9zK2IuYnl0ZUxlbmd0aCwgbGlzdC5jb25jYXQoW3Bvc10pXSwgWzAsW11dKVsxXTsKfQo",
					"AQAAAAAAAAABAAAAHAYAAAAAAAClBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10778,
					2,
					"paste",
					null,
					"AgAAABwGAAAAAAAApQYAAAAAAAAAAAAApQYAAAAAAAAuBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAYAAAAAAAAcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10781,
					1,
					"insert",
					{
						"characters": "Ram"
					},
					"BAAAALYGAAAAAAAAtwYAAAAAAAAAAAAAtwYAAAAAAAC3BgAAAAAAAAcAAABPZmZzZXRztwYAAAAAAAC4BgAAAAAAAAAAAAC4BgAAAAAAALkGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgYAAAAAAAC9BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10782,
					1,
					"left_delete",
					null,
					"AQAAALgGAAAAAAAAuAYAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAuQYAAAAAAAC5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10783,
					1,
					"insert",
					{
						"characters": "nges"
					},
					"BAAAALgGAAAAAAAAuQYAAAAAAAAAAAAAuQYAAAAAAAC6BgAAAAAAAAAAAAC6BgAAAAAAALsGAAAAAAAAAAAAALsGAAAAAAAAvAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAYAAAAAAAC4BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10815,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAABcHAAAAAAAAGAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwcAAAAAAAAXBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10817,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABsHAAAAAAAAHAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwcAAAAAAAAbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10818,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwHAAAAAAAAHQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAcAAAAAAAAcBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10819,
					1,
					"paste",
					null,
					"AQAAAB0HAAAAAAAAKQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQcAAAAAAAAdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10820,
					1,
					"insert",
					{
						"characters": "ü"
					},
					"AQAAACkHAAAAAAAAKgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQcAAAAAAAApBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10821,
					1,
					"left_delete",
					null,
					"AQAAACkHAAAAAAAAKQcAAAAAAAACAAAAw7w",
					"AQAAAAAAAAABAAAAKgcAAAAAAAAqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10823,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAACoHAAAAAAAAKwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgcAAAAAAAAqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10830,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAjAcAAAAAAACMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10856,
					1,
					"cut",
					null,
					"AQAAAGMvAAAAAAAAYy8AAAAAAAA2AAAAICAgIGxvZyhgYnVmZmVyc1ske2ZpbGV9XSBvZnNgLCBCdWZmZXJPZmZzZXRzKGZpbGUpKTsK",
					"AQAAAAAAAAABAAAAYy8AAAAAAACZLwAAAAAAAAAAAAAAAPC/"
				],
				[
					10857,
					2,
					"paste",
					null,
					"AgAAAGMvAAAAAAAAmS8AAAAAAAAAAAAAmS8AAAAAAADPLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYy8AAAAAAABjLwAAAAAAAAAAAAAAAPC/"
				],
				[
					10860,
					1,
					"insert",
					{
						"characters": "RAnges"
					},
					"BwAAAL8vAAAAAAAAwC8AAAAAAAAAAAAAwC8AAAAAAADALwAAAAAAAAcAAABPZmZzZXRzwC8AAAAAAADBLwAAAAAAAAAAAADBLwAAAAAAAMIvAAAAAAAAAAAAAMIvAAAAAAAAwy8AAAAAAAAAAAAAwy8AAAAAAADELwAAAAAAAAAAAADELwAAAAAAAMUvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvy8AAAAAAADGLwAAAAAAAAAAAAAAAPC/"
				],
				[
					10863,
					1,
					"left_delete",
					null,
					"AQAAAMAvAAAAAAAAwC8AAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAAwS8AAAAAAADBLwAAAAAAAAAAAAAAAPC/"
				],
				[
					10864,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAMAvAAAAAAAAwS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwC8AAAAAAADALwAAAAAAAAAAAAAAAPC/"
				],
				[
					10868,
					1,
					"insert",
					{
						"characters": "rng"
					},
					"BAAAALMvAAAAAAAAtC8AAAAAAAAAAAAAtC8AAAAAAAC0LwAAAAAAAAMAAABvZnO0LwAAAAAAALUvAAAAAAAAAAAAALUvAAAAAAAAti8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsy8AAAAAAAC2LwAAAAAAAAAAAAAAAPC/"
				],
				[
					10883,
					1,
					"insert",
					{
						"characters": "\n\nconst"
					},
					"BwAAAB4FAAAAAAAAHwUAAAAAAAAAAAAAHwUAAAAAAAAgBQAAAAAAAAAAAAAgBQAAAAAAACEFAAAAAAAAAAAAACEFAAAAAAAAIgUAAAAAAAAAAAAAIgUAAAAAAAAjBQAAAAAAAAAAAAAjBQAAAAAAACQFAAAAAAAAAAAAACQFAAAAAAAAJQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgUAAAAAAAAeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10884,
					1,
					"insert",
					{
						"characters": " bufferREF"
					},
					"CgAAACUFAAAAAAAAJgUAAAAAAAAAAAAAJgUAAAAAAAAnBQAAAAAAAAAAAAAnBQAAAAAAACgFAAAAAAAAAAAAACgFAAAAAAAAKQUAAAAAAAAAAAAAKQUAAAAAAAAqBQAAAAAAAAAAAAAqBQAAAAAAACsFAAAAAAAAAAAAACsFAAAAAAAALAUAAAAAAAAAAAAALAUAAAAAAAAtBQAAAAAAAAAAAAAtBQAAAAAAAC4FAAAAAAAAAAAAAC4FAAAAAAAALwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQUAAAAAAAAlBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10885,
					2,
					"left_delete",
					null,
					"AgAAAC4FAAAAAAAALgUAAAAAAAABAAAARi0FAAAAAAAALQUAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAALwUAAAAAAAAvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10886,
					1,
					"insert",
					{
						"characters": "ef"
					},
					"AgAAAC0FAAAAAAAALgUAAAAAAAAAAAAALgUAAAAAAAAvBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQUAAAAAAAAtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10887,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAC8FAAAAAAAAMAUAAAAAAAAAAAAAMAUAAAAAAAAxBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwUAAAAAAAAvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10888,
					1,
					"insert",
					{
						"characters": " New"
					},
					"BAAAADEFAAAAAAAAMgUAAAAAAAAAAAAAMgUAAAAAAAAzBQAAAAAAAAAAAAAzBQAAAAAAADQFAAAAAAAAAAAAADQFAAAAAAAANQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQUAAAAAAAAxBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10889,
					1,
					"insert",
					{
						"characters": " W"
					},
					"AgAAADUFAAAAAAAANgUAAAAAAAAAAAAANgUAAAAAAAA3BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQUAAAAAAAA1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10890,
					5,
					"left_delete",
					null,
					"BQAAADYFAAAAAAAANgUAAAAAAAABAAAAVzUFAAAAAAAANQUAAAAAAAABAAAAIDQFAAAAAAAANAUAAAAAAAABAAAAdzMFAAAAAAAAMwUAAAAAAAABAAAAZTIFAAAAAAAAMgUAAAAAAAABAAAATg",
					"AQAAAAAAAAABAAAANwUAAAAAAAA3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10891,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAADIFAAAAAAAAMwUAAAAAAAAAAAAAMwUAAAAAAAA0BQAAAAAAAAAAAAA0BQAAAAAAADUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgUAAAAAAAAyBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10892,
					1,
					"insert",
					{
						"characters": " WEAk"
					},
					"BQAAADUFAAAAAAAANgUAAAAAAAAAAAAANgUAAAAAAAA3BQAAAAAAAAAAAAA3BQAAAAAAADgFAAAAAAAAAAAAADgFAAAAAAAAOQUAAAAAAAAAAAAAOQUAAAAAAAA6BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQUAAAAAAAA1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10893,
					3,
					"left_delete",
					null,
					"AwAAADkFAAAAAAAAOQUAAAAAAAABAAAAazgFAAAAAAAAOAUAAAAAAAABAAAAQTcFAAAAAAAANwUAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAAOgUAAAAAAAA6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10894,
					1,
					"insert",
					{
						"characters": "eakMAp"
					},
					"BgAAADcFAAAAAAAAOAUAAAAAAAAAAAAAOAUAAAAAAAA5BQAAAAAAAAAAAAA5BQAAAAAAADoFAAAAAAAAAAAAADoFAAAAAAAAOwUAAAAAAAAAAAAAOwUAAAAAAAA8BQAAAAAAAAAAAAA8BQAAAAAAAD0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwUAAAAAAAA3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10897,
					1,
					"insert",
					{
						"characters": "MAP"
					},
					"BAAAADoFAAAAAAAAOwUAAAAAAAAAAAAAOwUAAAAAAAA7BQAAAAAAAAMAAABNQXA7BQAAAAAAADwFAAAAAAAAAAAAADwFAAAAAAAAPQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgUAAAAAAAA9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10898,
					2,
					"left_delete",
					null,
					"AgAAADwFAAAAAAAAPAUAAAAAAAABAAAAUDsFAAAAAAAAOwUAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAAPQUAAAAAAAA9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10899,
					1,
					"insert",
					{
						"characters": "ap"
					},
					"AgAAADsFAAAAAAAAPAUAAAAAAAAAAAAAPAUAAAAAAAA9BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwUAAAAAAAA7BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10900,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD0FAAAAAAAAPwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQUAAAAAAAA9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10902,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAD8FAAAAAAAAQAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwUAAAAAAAA/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10903,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEAFAAAAAAAAQQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAUAAAAAAABABQAAAAAAAAAAAAAAAPC/"
				],
				[
					10938,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKsFAAAAAAAArAUAAAAAAAAAAAAArAUAAAAAAACuBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwUAAAAAAACrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10939,
					1,
					"paste",
					null,
					"AQAAAK4FAAAAAAAAtwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgUAAAAAAACuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10947,
					2,
					"paste",
					null,
					"AwAAALgFAAAAAAAA+QUAAAAAAAAAAAAA+QUAAAAAAAD5BQAAAAAAAEEAAAAgIHJldHVybiAoYnVmZmVyc1tmaWxlXSA9IGZzLnJlYWRGaWxlU3luYyhmaWxlLCB7IGZsYWc6ICdyJyB9KSk7CvkFAAAAAAAAOgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAUAAAAAAAD5BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10955,
					1,
					"left_delete",
					null,
					"AQAAAAIGAAAAAAAAAgYAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAAwYAAAAAAAADBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10958,
					2,
					"left_delete",
					null,
					"AgAAABAGAAAAAAAAEAYAAAAAAAAnAAAAPSBmcy5yZWFkRmlsZVN5bmMoZmlsZSwgeyBmbGFnOiAncicgfSkpDwYAAAAAAAAPBgAAAAAAAAEAAAAg",
					"AQAAAAAAAAABAAAAEAYAAAAAAAA3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10962,
					1,
					"left_delete",
					null,
					"AQAAALoFAAAAAAAAugUAAAAAAAAGAAAAcmV0dXJu",
					"AQAAAAAAAAABAAAAugUAAAAAAADABQAAAAAAAAAAAAAAAPC/"
				],
				[
					10963,
					2,
					"right_delete",
					null,
					"AgAAALoFAAAAAAAAugUAAAAAAAABAAAAILoFAAAAAAAAugUAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAugUAAAAAAAC6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10966,
					1,
					"left_delete",
					null,
					"AQAAAO4FAAAAAAAA7gUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA7wUAAAAAAADvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10969,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO8FAAAAAAAA8AUAAAAAAAAAAAAA8AUAAAAAAADyBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wUAAAAAAADvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10972,
					1,
					"insert",
					{
						"characters": ".set"
					},
					"BQAAALcFAAAAAAAAuAUAAAAAAAAAAAAA8QUAAAAAAADxBQAAAAAAAAIAAAAgILgFAAAAAAAAuQUAAAAAAAAAAAAAuQUAAAAAAAC6BQAAAAAAAAAAAAC6BQAAAAAAALsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwUAAAAAAAC3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10973,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALsFAAAAAAAAvQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwUAAAAAAAC7BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10974,
					1,
					"left_delete",
					null,
					"AQAAALsFAAAAAAAAuwUAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAvAUAAAAAAAC8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10976,
					1,
					"cut",
					null,
					"AQAAAK4FAAAAAAAArgUAAAAAAAANAAAAYnVmZmVyUmVmLnNldA",
					"AQAAAAAAAAABAAAAuwUAAAAAAACuBQAAAAAAAAAAAAAAADRA"
				],
				[
					10979,
					1,
					"paste",
					null,
					"AQAAALEFAAAAAAAAvgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQUAAAAAAACxBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10980,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAL4FAAAAAAAAwAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgUAAAAAAAC+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10981,
					2,
					"right_delete",
					null,
					"AgAAAL8FAAAAAAAAvwUAAAAAAAABAAAAKb8FAAAAAAAAvwUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAvwUAAAAAAAC/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10984,
					1,
					"left_delete",
					null,
					"AQAAAPMFAAAAAAAA8wUAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA9AUAAAAAAAD0BQAAAAAAAP///////+9/"
				],
				[
					10985,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPMFAAAAAAAA9AUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wUAAAAAAADzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10986,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAPQFAAAAAAAA9QUAAAAAAAAAAAAA9QUAAAAAAAD2BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AUAAAAAAAD0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10991,
					1,
					"cut",
					null,
					"AQAAAL8FAAAAAAAAvwUAAAAAAAA0AAAAYnVmZmVyc1tmaWxlXSA9IGZzLnJlYWRGaWxlU3luYyhmaWxlLCB7IGZsYWc6ICdyJyB9KQ",
					"AQAAAAAAAAABAAAAvwUAAAAAAADzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10994,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAK8FAAAAAAAAsAUAAAAAAAAAAAAAsAUAAAAAAACxBQAAAAAAAAAAAACxBQAAAAAAALIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwUAAAAAAACvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10995,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIFAAAAAAAAswUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgUAAAAAAACyBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10996,
					4,
					"left_delete",
					null,
					"BAAAALIFAAAAAAAAsgUAAAAAAAABAAAAILEFAAAAAAAAsQUAAAAAAAABAAAAdLAFAAAAAAAAsAUAAAAAAAABAAAAZa8FAAAAAAAArwUAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAswUAAAAAAACzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10997,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BwAAAK8FAAAAAAAAsAUAAAAAAAAAAAAAsAUAAAAAAACyBQAAAAAAAAAAAACwBQAAAAAAALAFAAAAAAAAAgAAACAgsAUAAAAAAACwBQAAAAAAAAAAAACwBQAAAAAAALEFAAAAAAAAAAAAALEFAAAAAAAAsgUAAAAAAAAAAAAAsgUAAAAAAACzBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwUAAAAAAACvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10998,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAALMFAAAAAAAAtAUAAAAAAAAAAAAAtAUAAAAAAAC1BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswUAAAAAAACzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10999,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALUFAAAAAAAAtgUAAAAAAAAAAAAAtgUAAAAAAAC3BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQUAAAAAAAC1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					11000,
					1,
					"paste",
					null,
					"AQAAALcFAAAAAAAA6wUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwUAAAAAAAC3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					11001,
					1,
					"insert",
					{
						"characters": ";;"
					},
					"AgAAAOsFAAAAAAAA7AUAAAAAAAAAAAAA7AUAAAAAAADtBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wUAAAAAAADrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					11002,
					1,
					"left_delete",
					null,
					"AQAAAOwFAAAAAAAA7AUAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA7QUAAAAAAADtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					11009,
					1,
					"paste",
					null,
					"AQAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AUAAAAAAAD8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					11013,
					1,
					"insert",
					{
						"characters": "file);"
					},
					"BwAAAP8FAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABgAAAAAAAAEAAABuAAYAAAAAAAABBgAAAAAAAAAAAAABBgAAAAAAAAIGAAAAAAAAAAAAAAIGAAAAAAAAAwYAAAAAAAAAAAAAAwYAAAAAAAAEBgAAAAAAAAAAAAAEBgAAAAAAAAUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wUAAAAAAAAABgAAAAAAAAAAAAAAAPC/"
				],
				[
					11014,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAUGAAAAAAAABgYAAAAAAAAAAAAABgYAAAAAAAAHBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					11036,
					1,
					"left_delete",
					null,
					"AgAAAKwFAAAAAAAArAUAAAAAAAAEAAAAICApCgIGAAAAAAAAAgYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAArAUAAAAAAACwBQAAAAAAAAAAAAAAAPC/"
				],
				[
					11040,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAGAFAAAAAAAAYQUAAAAAAAAAAAAAYQUAAAAAAABiBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAUAAAAAAABgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					11043,
					2,
					"left_delete",
					null,
					"AgAAAAQGAAAAAAAABAYAAAAAAAABAAAACgMGAAAAAAAAAwYAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					11046,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAwYAAAAAAAADBgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-misc.c",
			"settings":
			{
				"buffer_size": 42160,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "buffer-utils.c",
			"settings":
			{
				"buffer_size": 11682,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"doxy_enter",
					null,
					"AgAAAL8sAAAAAAAAwCwAAAAAAAAAAAAAwCwAAAAAAADCLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvywAAAAAAAC/LAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "iff"
					},
					"AwAAAMIsAAAAAAAAwywAAAAAAAAAAAAAwywAAAAAAADELAAAAAAAAAAAAADELAAAAAAAAMUsAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwiwAAAAAAADCLAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAAMQsAAAAAAAAxCwAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAxSwAAAAAAADFLAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMQsAAAAAAAAxiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxCwAAAAAAADELAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "SIze"
					},
					"BAAAAMUsAAAAAAAAxiwAAAAAAAAAAAAAxiwAAAAAAADHLAAAAAAAAAAAAADHLAAAAAAAAMgsAAAAAAAAAAAAAMgsAAAAAAAAySwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxSwAAAAAAADFLAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					4,
					"left_delete",
					null,
					"BAAAAMksAAAAAAAAySwAAAAAAAABAAAAKcgsAAAAAAAAyCwAAAAAAAABAAAAZccsAAAAAAAAxywAAAAAAAABAAAAesYsAAAAAAAAxiwAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAyiwAAAAAAADKLAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "size"
					},
					"BAAAAMYsAAAAAAAAxywAAAAAAAAAAAAAxywAAAAAAADILAAAAAAAAAAAAADILAAAAAAAAMksAAAAAAAAAAAAAMksAAAAAAAAyiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxiwAAAAAAADGLAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					5,
					"left_delete",
					null,
					"BQAAAMksAAAAAAAAySwAAAAAAAABAAAAZcgsAAAAAAAAyCwAAAAAAAABAAAAescsAAAAAAAAxywAAAAAAAABAAAAacYsAAAAAAAAxiwAAAAAAAABAAAAc8UsAAAAAAAAxSwAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAyiwAAAAAAADKLAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "size)"
					},
					"BQAAAMUsAAAAAAAAxiwAAAAAAAAAAAAAxiwAAAAAAADHLAAAAAAAAAAAAADHLAAAAAAAAMgsAAAAAAAAAAAAAMgsAAAAAAAAySwAAAAAAAAAAAAAySwAAAAAAADKLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxSwAAAAAAADFLAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/extendGenerator.js",
			"settings":
			{
				"buffer_size": 611,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/fs.js",
			"settings":
			{
				"buffer_size": 10917,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					68,
					1,
					"insert",
					{
						"characters": " options"
					},
					"CAAAADQUAAAAAAAANRQAAAAAAAAAAAAANRQAAAAAAAA2FAAAAAAAAAAAAAA2FAAAAAAAADcUAAAAAAAAAAAAADcUAAAAAAAAOBQAAAAAAAAAAAAAOBQAAAAAAAA5FAAAAAAAAAAAAAA5FAAAAAAAADoUAAAAAAAAAAAAADoUAAAAAAAAOxQAAAAAAAAAAAAAOxQAAAAAAAA8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBQAAAAAAAA0FAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADwUAAAAAAAAPRQAAAAAAAAAAAAAPRQAAAAAAAA+FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBQAAAAAAAA8FAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD4UAAAAAAAAPxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPhQAAAAAAAA+FAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAD8UAAAAAAAAQRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxQAAAAAAAA/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"right_delete",
					null,
					"AQAAAEAUAAAAAAAAQBQAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAQBQAAAAAAABAFAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					2,
					"left_delete",
					null,
					"AgAAAEoUAAAAAAAAShQAAAAAAAABAAAAPUkUAAAAAAAASRQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAASxQAAAAAAABLFAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": ":;"
					},
					"AgAAAEkUAAAAAAAAShQAAAAAAAAAAAAAShQAAAAAAABLFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASRQAAAAAAABJFAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"left_delete",
					null,
					"AQAAAEoUAAAAAAAAShQAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAASxQAAAAAAABLFAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAFIUAAAAAAAAUxQAAAAAAAAAAAAAUxQAAAAAAABUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhQAAAAAAABSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "po"
					},
					"AgAAAF0UAAAAAAAAXhQAAAAAAAAAAAAAXhQAAAAAAABfFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRQAAAAAAABdFAAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					2,
					"left_delete",
					null,
					"AgAAAF4UAAAAAAAAXhQAAAAAAAABAAAAb10UAAAAAAAAXRQAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAXxQAAAAAAABfFAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "options."
					},
					"CAAAAF0UAAAAAAAAXhQAAAAAAAAAAAAAXhQAAAAAAABfFAAAAAAAAAAAAABfFAAAAAAAAGAUAAAAAAAAAAAAAGAUAAAAAAAAYRQAAAAAAAAAAAAAYRQAAAAAAABiFAAAAAAAAAAAAABiFAAAAAAAAGMUAAAAAAAAAAAAAGMUAAAAAAAAZBQAAAAAAAAAAAAAZBQAAAAAAABlFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRQAAAAAAABdFAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "optiohns"
					},
					"CAAAAOEVAAAAAAAA4hUAAAAAAAAAAAAA4hUAAAAAAADjFQAAAAAAAAAAAADjFQAAAAAAAOQVAAAAAAAAAAAAAOQVAAAAAAAA5RUAAAAAAAAAAAAA5RUAAAAAAADmFQAAAAAAAAAAAADmFQAAAAAAAOcVAAAAAAAAAAAAAOcVAAAAAAAA6BUAAAAAAAAAAAAA6BUAAAAAAADpFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4RUAAAAAAADhFQAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAADUUAAAAAAAANRQAAAAAAAAHAAAAb3B0aW9uczUUAAAAAAAAPhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANRQAAAAAAAA8FAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " encodi8ng"
					},
					"CwAAADYUAAAAAAAANxQAAAAAAAAAAAAANxQAAAAAAAA3FAAAAAAAAAcAAABvcHRpb25zNxQAAAAAAAA4FAAAAAAAAAAAAAA4FAAAAAAAADkUAAAAAAAAAAAAADkUAAAAAAAAOhQAAAAAAAAAAAAAOhQAAAAAAAA7FAAAAAAAAAAAAAA7FAAAAAAAADwUAAAAAAAAAAAAADwUAAAAAAAAPRQAAAAAAAAAAAAAPRQAAAAAAAA+FAAAAAAAAAAAAAA+FAAAAAAAAD8UAAAAAAAAAAAAAD8UAAAAAAAAQBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANhQAAAAAAAA9FAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					3,
					"left_delete",
					null,
					"AwAAAD8UAAAAAAAAPxQAAAAAAAABAAAAZz4UAAAAAAAAPhQAAAAAAAABAAAAbj0UAAAAAAAAPRQAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAAQBQAAAAAAABAFAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "ng"
					},
					"AgAAAD0UAAAAAAAAPhQAAAAAAAAAAAAAPhQAAAAAAAA/FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRQAAAAAAAA9FAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8UAAAAAAAAQBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxQAAAAAAAA/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"left_delete",
					null,
					"AQAAAEEUAAAAAAAAQRQAAAAAAAAYAAAAID0geyBlbmNvZGluZzogJ3V0Zi04JyB9",
					"AQAAAAAAAAABAAAAQRQAAAAAAABZFAAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					2,
					"right_delete",
					null,
					"AgAAAEoUAAAAAAAAShQAAAAAAAAHAAAAb3B0aW9uc0oUAAAAAAAAShQAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAShQAAAAAAABRFAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AgAAAMcVAAAAAAAAyBUAAAAAAAAAAAAAyBUAAAAAAADIFQAAAAAAAAkAAABwdGlvaG5zZW4",
					"AQAAAAAAAAABAAAA0BUAAAAAAADHFQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					2,
					"left_delete",
					null,
					"AgAAAMcVAAAAAAAAxxUAAAAAAAABAAAAZcYVAAAAAAAAxhUAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAyBUAAAAAAADIFQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "en"
					},
					"AgAAAMYVAAAAAAAAxxUAAAAAAAAAAAAAxxUAAAAAAADIFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxhUAAAAAAADGFQAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAD8UAAAAAAAAQBQAAAAAAAAAAAAAQBQAAAAAAABBFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxQAAAAAAAA/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": " ul"
					},
					"AwAAAEEUAAAAAAAAQhQAAAAAAAAAAAAAQhQAAAAAAABDFAAAAAAAAAAAAABDFAAAAAAAAEQUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQRQAAAAAAABBFAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					2,
					"left_delete",
					null,
					"AgAAAEMUAAAAAAAAQxQAAAAAAAABAAAAbEIUAAAAAAAAQhQAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAARBQAAAAAAABEFAAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "null"
					},
					"BAAAAEIUAAAAAAAAQxQAAAAAAAAAAAAAQxQAAAAAAABEFAAAAAAAAAAAAABEFAAAAAAAAEUUAAAAAAAAAAAAAEUUAAAAAAAARhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQhQAAAAAAABCFAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAERUAAAAAAAARFQAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAERUAAAAAAAARFQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 22052,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1502,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAIoEAAAAAAAAiwQAAAAAAAAAAAAAiwQAAAAAAACMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigQAAAAAAACKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1505,
					1,
					"cut",
					null,
					"AQAAAIwEAAAAAAAAjAQAAAAAAAAlAAAAU3RyaW5nLnByb3RvdHlwZS5zbGljZS5jYWxsKHgsIHMsIGUpOw",
					"AQAAAAAAAAABAAAAjAQAAAAAAACxBAAAAAAAAP///////+9/"
				],
				[
					1506,
					1,
					"paste",
					null,
					"AQAAAIwEAAAAAAAAsQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAQAAAAAAACMBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1509,
					1,
					"paste",
					null,
					"AQAAAIsEAAAAAAAAsAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwQAAAAAAACLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1513,
					1,
					"insert",
					{
						"characters": "Array"
					},
					"BgAAAIsEAAAAAAAAjAQAAAAAAAAAAAAAjAQAAAAAAACMBAAAAAAAAAYAAABTdHJpbmeMBAAAAAAAAI0EAAAAAAAAAAAAAI0EAAAAAAAAjgQAAAAAAAAAAAAAjgQAAAAAAACPBAAAAAAAAAAAAACPBAAAAAAAAJAEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwQAAAAAAACRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1516,
					2,
					"left_delete",
					null,
					"AgAAAK8EAAAAAAAArwQAAAAAAAABAAAAIK4EAAAAAAAArgQAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAsAQAAAAAAACwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1517,
					1,
					"insert",
					{
						"characters": " ."
					},
					"AgAAAK4EAAAAAAAArwQAAAAAAAAAAAAArwQAAAAAAACwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgQAAAAAAACuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1518,
					1,
					"left_delete",
					null,
					"AQAAAK8EAAAAAAAArwQAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAsAQAAAAAAACwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1519,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAK8EAAAAAAAAsAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwQAAAAAAACvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1520,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALAEAAAAAAAAsQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAQAAAAAAACwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1541,
					1,
					"insert",
					{
						"characters": "slice"
					},
					"BgAAAIE2AAAAAAAAgjYAAAAAAAAAAAAAgjYAAAAAAACCNgAAAAAAAA4AAABkdXBBcnJheUJ1ZmZlcoI2AAAAAAAAgzYAAAAAAAAAAAAAgzYAAAAAAACENgAAAAAAAAAAAACENgAAAAAAAIU2AAAAAAAAAAAAAIU2AAAAAAAAhjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgTYAAAAAAACPNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1553,
					1,
					"paste",
					null,
					"AgAAAJM2AAAAAAAAmDYAAAAAAAAAAAAAmDYAAAAAAACYNgAAAAAAAA4AAABkdXBBcnJheUJ1ZmZlcg",
					"AQAAAAAAAAABAAAAkzYAAAAAAAChNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1567,
					1,
					"insert",
					{
						"characters": " typeof"
					},
					"BwAAAHcEAAAAAAAAeAQAAAAAAAAAAAAAeAQAAAAAAAB5BAAAAAAAAAAAAAB5BAAAAAAAAHoEAAAAAAAAAAAAAHoEAAAAAAAAewQAAAAAAAAAAAAAewQAAAAAAAB8BAAAAAAAAAAAAAB8BAAAAAAAAH0EAAAAAAAAAAAAAH0EAAAAAAAAfgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwQAAAAAAAB3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1568,
					1,
					"insert",
					{
						"characters": " A"
					},
					"AgAAAH4EAAAAAAAAfwQAAAAAAAAAAAAAfwQAAAAAAACABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgQAAAAAAAB+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1569,
					1,
					"left_delete",
					null,
					"AQAAAH8EAAAAAAAAfwQAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAAgAQAAAAAAACABAAAAAAAAAAAAAAAAPC/"
				],
				[
					1570,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAH8EAAAAAAAAgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwQAAAAAAAB/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1571,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAIAEAAAAAAAAgQQAAAAAAAAAAAAAgQQAAAAAAACCBAAAAAAAAAAAAACCBAAAAAAAAIMEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAQAAAAAAACABAAAAAAAAAAAAAAAAPC/"
				],
				[
					1572,
					1,
					"insert",
					{
						"characters": " ?objec"
					},
					"BwAAAIMEAAAAAAAAhAQAAAAAAAAAAAAAhAQAAAAAAACFBAAAAAAAAAAAAACFBAAAAAAAAIYEAAAAAAAAAAAAAIYEAAAAAAAAhwQAAAAAAAAAAAAAhwQAAAAAAACIBAAAAAAAAAAAAACIBAAAAAAAAIkEAAAAAAAAAAAAAIkEAAAAAAAAigQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwQAAAAAAACDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1573,
					5,
					"left_delete",
					null,
					"BQAAAIkEAAAAAAAAiQQAAAAAAAABAAAAY4gEAAAAAAAAiAQAAAAAAAABAAAAZYcEAAAAAAAAhwQAAAAAAAABAAAAaoYEAAAAAAAAhgQAAAAAAAABAAAAYoUEAAAAAAAAhQQAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAigQAAAAAAACKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1574,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIUEAAAAAAAAhgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQQAAAAAAACFBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1575,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAIYEAAAAAAAAiAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgQAAAAAAACGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1576,
					1,
					"insert",
					{
						"characters": "object"
					},
					"BgAAAIcEAAAAAAAAiAQAAAAAAAAAAAAAiAQAAAAAAACJBAAAAAAAAAAAAACJBAAAAAAAAIoEAAAAAAAAAAAAAIoEAAAAAAAAiwQAAAAAAAAAAAAAiwQAAAAAAACMBAAAAAAAAAAAAACMBAAAAAAAAI0EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwQAAAAAAACHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1577,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0EAAAAAAAAjgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQQAAAAAAACNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1578,
					1,
					"left_delete",
					null,
					"AQAAAI0EAAAAAAAAjQQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAjgQAAAAAAACOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1580,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAI4EAAAAAAAAjwQAAAAAAAAAAAAAjwQAAAAAAACQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgQAAAAAAACOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1581,
					1,
					"left_delete",
					null,
					"AQAAAI8EAAAAAAAAjwQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAkAQAAAAAAACQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1582,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAI8EAAAAAAAAkAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwQAAAAAAACPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1583,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJAEAAAAAAAAkQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAQAAAAAAACQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1630,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAMsEAAAAAAAAzAQAAAAAAAAAAAAAzAQAAAAAAADNBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywQAAAAAAADLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1635,
					1,
					"insert",
					{
						"characters": "x.slice.call"
					},
					"DAAAAMsEAAAAAAAAzAQAAAAAAAAAAAAAzAQAAAAAAADNBAAAAAAAAAAAAADNBAAAAAAAAM4EAAAAAAAAAAAAAM4EAAAAAAAAzwQAAAAAAAAAAAAAzwQAAAAAAADQBAAAAAAAAAAAAADQBAAAAAAAANEEAAAAAAAAAAAAANEEAAAAAAAA0gQAAAAAAAAAAAAA0gQAAAAAAADTBAAAAAAAAAAAAADTBAAAAAAAANQEAAAAAAAAAAAAANQEAAAAAAAA1QQAAAAAAAAAAAAA1QQAAAAAAADWBAAAAAAAAAAAAADWBAAAAAAAANcEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywQAAAAAAADLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1636,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANcEAAAAAAAA2QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wQAAAAAAADXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1637,
					1,
					"insert",
					{
						"characters": "x,"
					},
					"AgAAANgEAAAAAAAA2QQAAAAAAAAAAAAA2QQAAAAAAADaBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AQAAAAAAADYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1638,
					1,
					"insert",
					{
						"characters": " x"
					},
					"AgAAANoEAAAAAAAA2wQAAAAAAAAAAAAA2wQAAAAAAADcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gQAAAAAAADaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1639,
					1,
					"left_delete",
					null,
					"AQAAANsEAAAAAAAA2wQAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAA3AQAAAAAAADcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1640,
					3,
					"left_delete",
					null,
					"AwAAANoEAAAAAAAA2gQAAAAAAAABAAAAINkEAAAAAAAA2QQAAAAAAAABAAAALNgEAAAAAAAA2AQAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAA2wQAAAAAAADbBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1641,
					1,
					"insert",
					{
						"characters": "s,"
					},
					"AgAAANgEAAAAAAAA2QQAAAAAAAAAAAAA2QQAAAAAAADaBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AQAAAAAAADYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1642,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAANoEAAAAAAAA2wQAAAAAAAAAAAAA2wQAAAAAAADcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gQAAAAAAADaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1646,
					1,
					"insert",
					{
						"characters": "x,"
					},
					"AgAAANgEAAAAAAAA2QQAAAAAAAAAAAAA2QQAAAAAAADaBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AQAAAAAAADYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1647,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAANoEAAAAAAAA2wQAAAAAAAAAAAAA2wQAAAAAAADcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gQAAAAAAADaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1648,
					3,
					"left_delete",
					null,
					"AwAAANsEAAAAAAAA2wQAAAAAAAABAAAAbtoEAAAAAAAA2gQAAAAAAAABAAAAINkEAAAAAAAA2QQAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA3AQAAAAAAADcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1649,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANkEAAAAAAAA2gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QQAAAAAAADZBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1650,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAANoEAAAAAAAA2wQAAAAAAAAAAAAA2wQAAAAAAADcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gQAAAAAAADaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1657,
					2,
					"left_delete",
					null,
					"AgAAANMEAAAAAAAA0wQAAAAAAAAEAAAAY2FsbNIEAAAAAAAA0gQAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA0wQAAAAAAADXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1659,
					4,
					"right_delete",
					null,
					"BAAAANMEAAAAAAAA0wQAAAAAAAABAAAAeNMEAAAAAAAA0wQAAAAAAAABAAAALNMEAAAAAAAA0wQAAAAAAAABAAAAINMEAAAAAAAA0wQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA0wQAAAAAAADTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1662,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAANkEAAAAAAAA2gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QQAAAAAAADZBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1665,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIQEAAAAAAAAhQQAAAAAAAAAAAAAhQQAAAAAAACFBAAAAAAAAAIAAAA/IA",
					"AQAAAAAAAAABAAAAhAQAAAAAAACGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1670,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAJEEAAAAAAAAkgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQQAAAAAAACRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1674,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANgEAAAAAAAA2QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AQAAAAAAADYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1707,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAhjYAAAAAAACKNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1740,
					1,
					"cut",
					null,
					"AQAAACI2AAAAAAAAIjYAAAAAAAAgAAAAICBjb25zb2xlLmxvZygnc3BsaXQnLCBwb2ludHMpOwo",
					"AQAAAAAAAAABAAAAIjYAAAAAAABCNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1743,
					1,
					"paste",
					null,
					"AgAAAE43AAAAAAAAbjcAAAAAAAAAAAAAbjcAAAAAAABuNwAAAAAAAAEAAAAg",
					"AQAAAAAAAAABAAAATjcAAAAAAABPNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1747,
					1,
					"insert",
					{
						"characters": "at"
					},
					"AwAAAF03AAAAAAAAXjcAAAAAAAAAAAAAXjcAAAAAAABeNwAAAAAAAAUAAABzcGxpdF43AAAAAAAAXzcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXTcAAAAAAABiNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1751,
					1,
					"insert",
					{
						"characters": "at"
					},
					"AwAAAGI3AAAAAAAAYzcAAAAAAAAAAAAAYzcAAAAAAABjNwAAAAAAAAYAAABwb2ludHNjNwAAAAAAAGQ3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYjcAAAAAAABoNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1757,
					1,
					"cut",
					null,
					"AQAAAE03AAAAAAAATTcAAAAAAAAaAAAAICAgY29uc29sZS5sb2coJ2F0JywgYXQpOwo",
					"AQAAAAAAAAABAAAATTcAAAAAAABnNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1758,
					2,
					"paste",
					null,
					"AgAAAE03AAAAAAAAZzcAAAAAAAAAAAAAZzcAAAAAAACBNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATTcAAAAAAABNNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1762,
					1,
					"insert",
					{
						"characters": "offset"
					},
					"BwAAAF03AAAAAAAAXjcAAAAAAAAAAAAAXjcAAAAAAABeNwAAAAAAAAIAAABhdF43AAAAAAAAXzcAAAAAAAAAAAAAXzcAAAAAAABgNwAAAAAAAAAAAABgNwAAAAAAAGE3AAAAAAAAAAAAAGE3AAAAAAAAYjcAAAAAAAAAAAAAYjcAAAAAAABjNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXTcAAAAAAABfNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1772,
					1,
					"paste",
					null,
					"AgAAAGY3AAAAAAAAbDcAAAAAAAAAAAAAbDcAAAAAAABsNwAAAAAAAAIAAABhdA",
					"AQAAAAAAAAABAAAAZjcAAAAAAABoNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1778,
					1,
					"cut",
					null,
					"AQAAAE03AAAAAAAATTcAAAAAAAAiAAAAICAgY29uc29sZS5sb2coJ29mZnNldCcsIG9mZnNldCk7Cg",
					"AQAAAAAAAAABAAAATTcAAAAAAABvNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1779,
					2,
					"paste",
					null,
					"AgAAAE03AAAAAAAAbzcAAAAAAAAAAAAAbzcAAAAAAACRNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATTcAAAAAAABNNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1783,
					1,
					"insert",
					{
						"characters": "len"
					},
					"BAAAAF03AAAAAAAAXjcAAAAAAAAAAAAAXjcAAAAAAABeNwAAAAAAAAYAAABvZmZzZXReNwAAAAAAAF83AAAAAAAAAAAAAF83AAAAAAAAYDcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXTcAAAAAAABjNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1788,
					1,
					"insert",
					{
						"characters": "kl"
					},
					"AwAAAGM3AAAAAAAAZDcAAAAAAAAAAAAAZDcAAAAAAABkNwAAAAAAAAYAAABvZmZzZXRkNwAAAAAAAGU3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYzcAAAAAAABpNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1822,
					1,
					"insert",
					{
						"characters": "of"
					},
					"AwAAACU3AAAAAAAAJjcAAAAAAAAAAAAAJjcAAAAAAAAmNwAAAAAAAAIAAABpbiY3AAAAAAAAJzcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJTcAAAAAAAAnNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1828,
					2,
					"left_delete",
					null,
					"AgAAAGQ3AAAAAAAAZDcAAAAAAAABAAAAbGM3AAAAAAAAYzcAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAZTcAAAAAAABlNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1829,
					1,
					"insert",
					{
						"characters": "len"
					},
					"AwAAAGM3AAAAAAAAZDcAAAAAAAAAAAAAZDcAAAAAAABlNwAAAAAAAAAAAABlNwAAAAAAAGY3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYzcAAAAAAABjNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1842,
					1,
					"paste",
					null,
					"AQAAACM2AAAAAAAAPzYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIzYAAAAAAAAjNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1852,
					1,
					"paste",
					null,
					"AgAAADM2AAAAAAAAOTYAAAAAAAAAAAAAOTYAAAAAAAA5NgAAAAAAAAMAAABsZW4",
					"AQAAAAAAAAABAAAAMzYAAAAAAAA2NgAAAAAAAAAAAAAAAPC/"
				],
				[
					1856,
					1,
					"paste",
					null,
					"AgAAADw2AAAAAAAAQjYAAAAAAAAAAAAAQjYAAAAAAABCNgAAAAAAAAMAAABsZW4",
					"AQAAAAAAAAABAAAAPDYAAAAAAAA/NgAAAAAAAAAAAAAAAPC/"
				],
				[
					1874,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAMY3AAAAAAAAyDcAAAAAAAAAAAAAcDcAAAAAAAByNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcDcAAAAAAADGNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1877,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAcjcAAAAAAADINwAAAAAAAAAAAAAAAPC/"
				],
				[
					1886,
					1,
					"cut",
					null,
					"AQAAAPA2AAAAAAAA8DYAAAAAAAAZAAAAICAgIGNvbnNvbGUubG9nKCdyJywgcik7Cg",
					"AQAAAAAAAAABAAAA8DYAAAAAAAAJNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1899,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAGg2AAAAAAAAaTYAAAAAAAAAAAAAaTYAAAAAAABpNgAAAAAAADgAAAAgICAgY29uc29sZS5sb2coJ3NwbGl0QXQnLCBiLmJ5dGVMZW5ndGgsIHsgcG9zLCBsZW4gfSk7Cg",
					"AQAAAAAAAAABAAAAaDYAAAAAAACgNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1905,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACI2AAAAAAAAIzYAAAAAAAAAAAAAIzYAAAAAAAAjNgAAAAAAACEAAAAgIGNvbnNvbGUubG9nKCdwb2ludHMnLCBwb2ludHMpOwo",
					"AQAAAAAAAAABAAAAIjYAAAAAAABDNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1910,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAP82AAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAANwAAAAAAAF4AAAAgICAvKiAgY29uc29sZS5sb2coJ2xlbicsIGxlbik7CiAgIGNvbnNvbGUubG9nKCdvZmZzZXQnLCBvZmZzZXQpOwogICBjb25zb2xlLmxvZygnYXQnLCBhdCk7Ki8K",
					"AQAAAAAAAAABAAAAXTcAAAAAAAD/NgAAAAAAAAAAAAAAAPC/"
				],
				[
					1912,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAADcAAAAAAAAANwAAAAAAAAAAAAAAAPC/"
				],
				[
					1915,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAqTYAAAAAAACpNgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-lexer.c",
			"settings":
			{
				"buffer_size": 44648,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					19,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAgCcAAAAAAACBJwAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AgAAAIAnAAAAAAAAgScAAAAAAAAAAAAAgScAAAAAAACBJwAAAAAAAAEAAAAw",
					"AQAAAAAAAAABAAAAgCcAAAAAAACBJwAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAAIAnAAAAAAAAgCcAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAgScAAAAAAACBJwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "JS_PROP"
					},
					"BwAAAIAnAAAAAAAAgScAAAAAAAAAAAAAgScAAAAAAACCJwAAAAAAAAAAAACCJwAAAAAAAIMnAAAAAAAAAAAAAIMnAAAAAAAAhCcAAAAAAAAAAAAAhCcAAAAAAACFJwAAAAAAAAAAAACFJwAAAAAAAIYnAAAAAAAAAAAAAIYnAAAAAAAAhycAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgCcAAAAAAACAJwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAIcnAAAAAAAAiCcAAAAAAAAAAAAAiCcAAAAAAACKJwAAAAAAAAAAAACIJwAAAAAAAIgnAAAAAAAAAgAAACAgiCcAAAAAAACMJwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhycAAAAAAACHJwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "_ENU"
					},
					"BQAAAIcnAAAAAAAAiCcAAAAAAAAAAAAAiCcAAAAAAACIJwAAAAAAAAUAAAAKICAgIIgnAAAAAAAAiScAAAAAAAAAAAAAiScAAAAAAACKJwAAAAAAAAAAAACKJwAAAAAAAIsnAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjCcAAAAAAACHJwAAAAAAAP///////+9/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIsnAAAAAAAAjCcAAAAAAAAAAAAAjCcAAAAAAACOJwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiycAAAAAAACLJwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "MERABLE"
					},
					"CAAAAIsnAAAAAAAAjCcAAAAAAAAAAAAAjCcAAAAAAACMJwAAAAAAAAMAAAAKICCMJwAAAAAAAI0nAAAAAAAAAAAAAI0nAAAAAAAAjicAAAAAAAAAAAAAjicAAAAAAACPJwAAAAAAAAAAAACPJwAAAAAAAJAnAAAAAAAAAAAAAJAnAAAAAAAAkScAAAAAAAAAAAAAkScAAAAAAACSJwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjicAAAAAAACLJwAAAAAAAP///////+9/"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libarchive"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/bc-socklen_t.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/stack.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/socklen_t.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fd_set.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/timeval.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/.clang-format",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/test-socklen_t.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/.prettierrc",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/bc-fd_set.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-fdset.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_location.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/usr/include/x86_64-linux-gnu/bits/syscall.h",
		"/usr/include/x86_64-linux-gnu/sys/syscall.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/libregexp.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_inspect.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_path.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_blob.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_qjsm.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/Findpigpio.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pigpio/pigpio.h"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"toString",
			" toString",
			"toString",
			"slice =",
			"toString",
			"reduce",
			"console.log",
			"BufferFILe",
			"'imp'",
			"'tmp",
			"\\.define",
			"filter",
			"AddExport",
			"impexp",
			"dbuf_put_escaped_table",
			"string_Break",
			"stringBReakNEwline",
			"define",
			"lexer.tokens",
			"^\\s*console",
			"file",
			"\\.code",
			"code:",
			"'code'",
			"define\\(",
			"keywords",
			"ImportType",
			"_quote",
			"escape",
			"strc",
			"scape|[Qq]uote",
			"GetClass",
			"JSSTDFile",
			"js_std_file_class_id",
			"getClassProto",
			"JS_GetClassProto",
			"JS_Get",
			"file_class",
			"struct JSClass",
			"fopen",
			"fmemopen",
			"std_file_class",
			"js_offset_length",
			"OffsetLength",
			"_offset",
			"offset",
			"slice",
			"dupArrayBuffer",
			"js_misc_slice",
			"class_name_key",
			"COLOR_LIGHTRED",
			"name",
			"classname",
			"toString",
			"toStringTag",
			"CHILD_PROCESS_SIGNALED",
			"CHILD_PROCESS_SIGNALED\n",
			"JS_DefineProperty",
			"scan_fromhex",
			"}\nsize_t",
			"scan_.*long",
			"scan_ulong",
			"ArrayBuffer",
			"number_base",
			"ArrayBuffer",
			"JS_NewInt64",
			"^(struct |)(Memory_?Block|pointer_?range|input_*buffer)",
			"^(struct |)(Memory_?Block|pointer_?range)",
			"^(struct |)MemoryBlock",
			"struct",
			"^MemoryBlock",
			"MemoryBlock",
			"vector",
			"struct",
			"js_arraybuffer_",
			" free\\(",
			"free\\(",
			"stat\\(",
			"\"setsockopt",
			"PRECEDEN",
			"predicate_[a-z]*_num_args",
			"predicate_direct_num_args",
			"js_func",
			"BAND:",
			"ATAN2:",
			"PREDICATE_BOR",
			"PREDICATE_SQRT",
			"SetModuleLoader",
			"^js_[^ ]*module",
			"sockaddr_addr",
			"loader_so",
			"load_so",
			"qsort_r",
			"js_arraybuffer_fromvalue",
			"JSCFunctionData",
			"JS_NewCFunctionData",
			"byte_escape",
			"^#",
			"ImportDirective",
			"js_module_import_",
			"ImportDirective",
			"qsort_r",
			"^",
			"INCLUDE_DIR",
			"loader_so",
			"module_loader_so",
			"\"realpath",
			"realpath\\(",
			"getuid",
			"^",
			"HAVE_ISATTY",
			"path_is",
			"path_isabs",
			"WINDOWS",
			"PATHSEP_S_MIXED",
			"issep",
			"realpath\\(",
			"FUNC_GETPID",
			"#endif\n#ifndef __wasi__",
			"getuid\"",
			"realpath\\(",
			"\"realpath",
			"\"getpid",
			"HAVE_SYS_MMAN_H",
			"HAVE_WAITPID",
			"HAVE_SYS_WAIT_H",
			"HAVE_THREADS_H",
			"qjs-misc"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"log",
			"class_key",
			"}\\n\\nsize_t",
			"# ",
			"#",
			"HAVE_REALPATH",
			"",
			"HAVE_TERMIOS_H",
			"HAVE_MMAP",
			"HAVE_SYS_MMAN_H",
			"HAVE_SYS_WAIT_H",
			"length",
			"loc->",
			"ret->",
			"arg",
			" ",
			"",
			"\"\\\\t",
			"\"\\t",
			"imp.",
			"ctx,",
			"",
			"JSValueConst)",
			"",
			"jsm_module_loader",
			"js_module_loader_so",
			"js_eval_file",
			"js_eval_buf",
			"js_load_script",
			"jsm_eval_script",
			"js_eval_file",
			"js_load_module",
			"js_eval_str",
			"js_module_get",
			"JSValueConst)",
			"js_module_search",
			"jsm_module_find",
			"js_module_find",
			"js_load_",
			"js_load_module",
			"js_eval_buf",
			"js_load_script",
			"js_std_dump_error",
			"js_module_exports",
			"fdset",
			" ",
			"js_input_buffer",
			"\\1(\\2, sock",
			"\\1(",
			"",
			"JS_CGETSET_MAGIC_DEF",
			"off.",
			"} else if(",
			"port",
			".buf",
			"'",
			"",
			"socket_send",
			"0x00",
			" 0x00,",
			"0x78,",
			"0x78",
			" 0x00,",
			"0x78",
			"JS_CGETSET_MAGIC_DEF",
			"socket_syscalls_size",
			"js_syscallerror_get, js_syscallerror_set,",
			"js_socket_get, js_socket_set, ",
			"e",
			"js_syscallerror_proto_funcs",
			"s.fd",
			"js_socket_proto_funcs",
			"\"",
			"SYSCALLERROR_VALUEOF",
			"s, ",
			"JS_SOCKETCALL",
			"JS_SOCKETCALL_RETURN",
			"js_socket_data2(ctx",
			"sa->family",
			"QUICKJS_SYSCALLERROR_H",
			"data2",
			"js_syscallerror_data2",
			"QUICKJS_MISC_H",
			"js_sockets_defines",
			"js_sockaddr_data2",
			"js_sockaddr_data",
			"SockAddr",
			"struct sockaddr*",
			"sockets_init",
			"argv[i]",
			"pigpio",
			"CHAR_UTILS",
			"${util_SOURCES}",
			"ol.",
			"range_from",
			".range.length",
			".range.offset",
			"input_buffer_length(in)",
			"input_buffer_data(in)",
			"blob",
			"location->vec",
			"location",
			"Location",
			"r->data\\1",
			" this.fs.",
			"stringdecoder",
			"js_stringdecoder_set",
			"js_stringdecoder_get",
			"stringdecoder",
			"\\1if(gpio->debug) fprintf",
			"struct gpio",
			"struct GPIO",
			"struct GPIO*",
			"ctx->rt",
			"",
			": ",
			"\"",
			"ret = \\1;",
			"->errnum",
			"(",
			"error",
			"JS_NewInt32",
			"",
			",",
			"left, right",
			"predicate_nextarg(ctx, &args)",
			"predicate_nextarg(ctx, &args),predicate_nextarg(ctx, &args))",
			"predicate_argument_shift(ctx, &args)"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 368,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									1347,
									1372
								],
								[
									1567,
									1595
								],
								[
									1648,
									1676
								],
								[
									1787,
									1814
								],
								[
									1941,
									1970
								],
								[
									2088,
									2111
								],
								[
									2251,
									2274
								],
								[
									3112,
									3136
								],
								[
									3441,
									3465
								],
								[
									3651,
									3675
								],
								[
									3800,
									3826
								],
								[
									4290,
									4316
								],
								[
									5546,
									5574
								],
								[
									5894,
									5940
								],
								[
									6218,
									6240
								],
								[
									7009,
									7037
								],
								[
									9409,
									9448
								],
								[
									9950,
									9957
								],
								[
									10026,
									10037
								]
							],
							"symlist":
							[
								"BufferFile(file)",
								"BufferLengths(file)",
								"BufferOffsets(file)",
								"BufferRanges(file)",
								"WriteFile(file, tok)",
								"DumpLexer(lex)",
								"DumpToken(tok)",
								"ImportType(seq)",
								"ImportFile(seq)",
								"ExportName(seq)",
								"AddExport(tokens)",
								"AddImport(tokens)",
								"PrintES6Import(imp)",
								"PrintCJSImport({ type, local, file })",
								"  main(...args)",
								"ProcessFile(file)",
								"  self = function ParentheseBalancer(tok)",
								"  reset()",
								"  get depth()"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632934656.55,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "tests/test_lexer.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12987,
						"regions":
						{
						},
						"selection":
						[
							[
								617,
								617
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632951280.86,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_moving":
							[
								8,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 365.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "quickjs-misc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42160,
						"regions":
						{
						},
						"selection":
						[
							[
								2268,
								2276
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1558.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "buffer-utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11682,
						"regions":
						{
						},
						"selection":
						[
							[
								11009,
								11504
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632933933.58,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9298.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/extendGenerator.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 611,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632932366.86,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/fs.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10917,
						"regions":
						{
						},
						"selection":
						[
							[
								5393,
								5393
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632931892.93,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6754.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22052,
						"regions":
						{
						},
						"selection":
						[
							[
								13993,
								13993
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632933932.28,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12105.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "quickjs-lexer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44648,
						"regions":
						{
						},
						"selection":
						[
							[
								10130,
								10130
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632929391.27,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7618.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"quickjs-mm",
				"quickjs-mmap.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"quickjs-m",
				"quickjs-misc.c"
			],
			[
				"redicate.c",
				"predicate.c"
			],
			[
				"sockets.h",
				"quickjs-sockets.h"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"",
				"quickjs-inspect.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"char-",
				"char-utils.h"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"conso",
				"lib/console.js"
			],
			[
				"clang-f",
				".clang-format"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"test_mi",
				"tests/test_misc.js"
			],
			[
				"ockets.",
				"quickjs-sockets.h"
			],
			[
				"quickjs-ar",
				"quickjs-archive.c"
			],
			[
				"fd_set",
				"lib/fd_set.js"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"buffer-ut",
				"buffer-utils.c"
			],
			[
				"misc.",
				"quickjs-misc.h"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"socklen_t.js",
				"lib/socklen_t.js"
			],
			[
				"str.h",
				"quickjs-stringdecoder.h"
			],
			[
				"quickjs-libc",
				"~/Sources/plot-cv/quickjs/quickjs-libc.h"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.c"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"test_loca",
				"tests/test_location.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				".clang-fo",
				".clang-format"
			],
			[
				"buff",
				"buffer-utils.c"
			],
			[
				"buffer-util",
				"buffer-utils.c"
			],
			[
				"buffer-utils.c",
				"buffer-utils.c"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"quickjs-so",
				"quickjs-sockets.c"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"quickjs-insp",
				"quickjs-inspect.c"
			],
			[
				"test_soc",
				"tests/test_sockets.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"test_qjsm",
				"tests/test_qjsm.js"
			],
			[
				"buffer-tu",
				"buffer-utils.c"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"repl.",
				"lib/repl.js"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"quickjs-blo",
				"quickjs-blob.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"test_mis",
				"tests/test_misc.js"
			],
			[
				"test_blob",
				"tests/test_blob.js"
			],
			[
				"test_string",
				"tests/test_stringdecoder.js"
			],
			[
				"test_str",
				"tests/test_stringdecoder.js"
			],
			[
				"quickjs-blb",
				"quickjs-blob.h"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"ringbuffer.h",
				"ringbuffer.h"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 236.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
