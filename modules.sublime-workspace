{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"js_sys",
				"js_syscallerror_data"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"JS_New",
				"JS_NewInt32"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "\tⓂ  _GNU_SOURCE … — macro object\n\tⓂ  WS … — macro object\n\tⓂ  START … — macro object\n\tⓂ  END … — macro object\n\tⓂ  QUOTE … — macro object\n\tⓂ  CLOSE … — macro object\n\tⓂ  EQUAL … — macro object\n\tⓂ  SPECIAL … — macro object\n\tⓂ  SLASH … — macro object\n\tⓂ  BACKSLASH … — macro object\n\tⓂ  QUESTION … — macro object\n\tⓂ  EXCLAM … — macro object\n\tⓂ  HYPHEN … — macro object\n\tⓉ  OutputValue ; — typedef\n—Ⓕ– character_classes_init ( ) { … } — function\n—Ⓜ– pop ( ) … — macro function\n—Ⓜ– next ( ) … — macro function\n—Ⓜ– skip ( ) … — macro function\n—Ⓜ– skip_until ( ) … — macro function\n—Ⓜ– skip_ws ( ) … — macro function\n—Ⓜ– char_is ( ) … — macro function\n—Ⓕ– xml_num_children ( ) { … } — function\n—Ⓕ– xml_set_attr_value ( ) { … } — function\n—Ⓕ– xml_set_attr_bytes ( ) { … } — function\n—Ⓕ– xml_write_attributes ( ) { … } — function\n—Ⓕ– xml_write_indent ( ) { … } — function\n—Ⓕ– xml_write_string ( ) { … } — function\n—Ⓕ– xml_write_text ( ) { … } — function\n—Ⓕ– xml_write_element ( ) { … } — function\n—Ⓕ– xml_close_element ( ) { … } — function\n—Ⓕ– xml_enumeration_next ( ) { … } — function\n—Ⓕ– js_xml_parse ( ) { … } — function\n—Ⓕ– js_xml_read ( ) { … } — function\n—Ⓕ– js_xml_write_obj ( ) { … } — function\n—Ⓕ– js_xml_write ( ) { … } — function\n—Ⓕ– js_xml_init ( ) { … } — function\n\tⓂ  JS_INIT_MODULE … — macro object\n\tⓂ  JS_INIT_MODULE … — macro object",
			"settings":
			{
				"buffer_size": 1337,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					11,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6380,
								6397
							],
							[
								6940,
								6960
							],
							[
								8021,
								8033
							],
							[
								11865,
								11876
							],
							[
								12284,
								12300
							],
							[
								13466,
								13478
							],
							[
								14236,
								14247
							],
							[
								14431,
								14445
							],
							[
								14475,
								14489
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"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4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgQ0xPU0Ug4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVFVQUwg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBCQUNLU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVhDTEFNIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEhZUEhFTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBjaGFyYWN0ZXJfY2xhc3Nlc19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMgcG9wICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBuZXh0ICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3VudGlsICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3dzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBjaGFyX2lzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfbnVtX2NoaWxkcmVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX2J5dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2F0dHJpYnV0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfaW5kZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV90ZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfY2xvc2VfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9lbnVtZXJhdGlvbl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA5BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcwYAAAnik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIFdTIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIFNUQVJUIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEVORCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBRVU9URSDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBDTE9TRSDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFUVVBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTUEVDSUFMIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIFNMQVNIIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEJBQ0tTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBRVUVTVElPTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFWENMQU0g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgSFlQSEVOIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4kgIE91dHB1dFZhbHVlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGNoYXJhY3Rlcl9jbGFzc2VzX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyBwb3AgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIG5leHQgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIHNraXAgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIHNraXBfdW50aWwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIHNraXBfd3MgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGNoYXJfaXMgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9udW1fY2hpbGRyZW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfc2V0X2F0dHJfdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfc2V0X2F0dHJfYnl0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfYXR0cmlidXRlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9pbmRlbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3RleHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9jbG9zZV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX2VudW1lcmF0aW9uX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfcGFyc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfcmVhZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF93cml0ZV9vYmogKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KCeKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAADkFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					12,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6381,
								6398
							],
							[
								6941,
								6961
							],
							[
								8022,
								8034
							],
							[
								11866,
								11877
							],
							[
								12285,
								12301
							],
							[
								13467,
								13479
							],
							[
								14237,
								14248
							],
							[
								14432,
								14446
							],
							[
								14476,
								14490
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"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4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgQ0xPU0Ug4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVFVQUwg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBCQUNLU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVhDTEFNIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEhZUEhFTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBjaGFyYWN0ZXJfY2xhc3Nlc19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMgcG9wICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBuZXh0ICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3VudGlsICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3dzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBjaGFyX2lzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfbnVtX2NoaWxkcmVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX2J5dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2F0dHJpYnV0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfaW5kZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV90ZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfY2xvc2VfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9lbnVtZXJhdGlvbl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA5BQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					13,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6383,
								6400
							],
							[
								6943,
								6963
							],
							[
								8024,
								8036
							],
							[
								11868,
								11879
							],
							[
								12287,
								12303
							],
							[
								13469,
								13481
							],
							[
								14239,
								14250
							],
							[
								14434,
								14448
							],
							[
								14478,
								14492
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"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4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgQ0xPU0Ug4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVFVQUwg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBCQUNLU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVhDTEFNIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEhZUEhFTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBjaGFyYWN0ZXJfY2xhc3Nlc19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMgcG9wICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBuZXh0ICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3VudGlsICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3dzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBjaGFyX2lzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfbnVtX2NoaWxkcmVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX2J5dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2F0dHJpYnV0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfaW5kZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV90ZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfY2xvc2VfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9lbnVtZXJhdGlvbl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA5BQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6415,
								6432
							],
							[
								6975,
								6995
							],
							[
								8056,
								8068
							],
							[
								11900,
								11911
							],
							[
								12319,
								12335
							],
							[
								13501,
								13513
							],
							[
								14271,
								14282
							],
							[
								14466,
								14480
							],
							[
								14510,
								14524
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					15,
					5,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6422,
								6439
							],
							[
								6982,
								7002
							],
							[
								8063,
								8075
							],
							[
								11907,
								11918
							],
							[
								12326,
								12342
							],
							[
								13508,
								13520
							],
							[
								14278,
								14289
							],
							[
								14473,
								14487
							],
							[
								14517,
								14531
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					16,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6437,
								6454
							],
							[
								6997,
								7017
							],
							[
								8078,
								8090
							],
							[
								11922,
								11933
							],
							[
								12341,
								12357
							],
							[
								13523,
								13535
							],
							[
								14293,
								14304
							],
							[
								14488,
								14502
							],
							[
								14532,
								14546
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"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4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgQ0xPU0Ug4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVFVQUwg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBCQUNLU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVhDTEFNIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEhZUEhFTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBjaGFyYWN0ZXJfY2xhc3Nlc19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMgcG9wICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBuZXh0ICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3VudGlsICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3dzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBjaGFyX2lzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfbnVtX2NoaWxkcmVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX2J5dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2F0dHJpYnV0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfaW5kZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV90ZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfY2xvc2VfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9lbnVtZXJhdGlvbl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA5BQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					17,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6437,
								6454
							],
							[
								6997,
								7017
							],
							[
								8078,
								8090
							],
							[
								11922,
								11933
							],
							[
								12341,
								12357
							],
							[
								13523,
								13535
							],
							[
								14293,
								14304
							],
							[
								14488,
								14502
							],
							[
								14532,
								14546
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"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4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgQ0xPU0Ug4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVFVQUwg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBCQUNLU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVhDTEFNIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEhZUEhFTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBjaGFyYWN0ZXJfY2xhc3Nlc19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMgcG9wICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBuZXh0ICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3VudGlsICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3dzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBjaGFyX2lzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfbnVtX2NoaWxkcmVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX2J5dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2F0dHJpYnV0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfaW5kZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV90ZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfY2xvc2VfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9lbnVtZXJhdGlvbl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA5BQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					18,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6437,
								6454
							],
							[
								7011,
								7031
							],
							[
								8092,
								8104
							],
							[
								11936,
								11947
							],
							[
								12355,
								12371
							],
							[
								13537,
								13549
							],
							[
								14307,
								14318
							],
							[
								14502,
								14516
							],
							[
								14546,
								14560
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/tests/test_xml.js",
						"symkeys":
						[
							[
								216,
								246
							],
							[
								366,
								394
							],
							[
								1230,
								1236
							],
							[
								1288,
								1293
							],
							[
								1327,
								1335
							]
						],
						"symlist":
						[
							"function WriteFile(file, data)",
							"async function main(...args)",
							"std =>",
							"() =>",
							"error =>"
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6437,
								6454
							],
							[
								7011,
								7031
							],
							[
								8092,
								8104
							],
							[
								11936,
								11947
							],
							[
								12355,
								12371
							],
							[
								13537,
								13549
							],
							[
								14307,
								14318
							],
							[
								14502,
								14516
							],
							[
								14546,
								14560
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAlAAAAV3JpdGVGaWxlKGZpbGUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQAAAAAAAAAAOQUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6437,
								6454
							],
							[
								7011,
								7031
							],
							[
								8092,
								8104
							],
							[
								11936,
								11947
							],
							[
								12355,
								12371
							],
							[
								13537,
								13549
							],
							[
								14307,
								14318
							],
							[
								14502,
								14516
							],
							[
								14546,
								14560
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"AQAAAAAAAAAAAAAAOQUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					27,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6437,
								6454
							],
							[
								7011,
								7031
							],
							[
								8092,
								8104
							],
							[
								11936,
								11947
							],
							[
								12355,
								12371
							],
							[
								13537,
								13549
							],
							[
								14307,
								14318
							],
							[
								14502,
								14516
							],
							[
								14546,
								14560
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"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4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgQ0xPU0Ug4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVFVQUwg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBCQUNLU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVhDTEFNIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEhZUEhFTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBjaGFyYWN0ZXJfY2xhc3Nlc19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMgcG9wICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBuZXh0ICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3VudGlsICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3dzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBjaGFyX2lzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfbnVtX2NoaWxkcmVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX2J5dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2F0dHJpYnV0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfaW5kZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV90ZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfY2xvc2VfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9lbnVtZXJhdGlvbl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA5BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAQAAAAAAAC4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6437,
								6454
							],
							[
								7011,
								7031
							],
							[
								8092,
								8104
							],
							[
								11936,
								11947
							],
							[
								12355,
								12371
							],
							[
								13533,
								13545
							],
							[
								14303,
								14314
							],
							[
								14498,
								14512
							],
							[
								14542,
								14556
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"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4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgQ0xPU0Ug4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVFVQUwg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBCQUNLU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVhDTEFNIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEhZUEhFTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBjaGFyYWN0ZXJfY2xhc3Nlc19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMgcG9wICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBuZXh0ICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3VudGlsICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3dzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBjaGFyX2lzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfbnVtX2NoaWxkcmVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX2J5dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2F0dHJpYnV0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfaW5kZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV90ZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfY2xvc2VfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9lbnVtZXJhdGlvbl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA5BQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					33,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6437,
								6454
							],
							[
								7013,
								7033
							],
							[
								8094,
								8106
							],
							[
								11938,
								11949
							],
							[
								12357,
								12373
							],
							[
								13538,
								13550
							],
							[
								14308,
								14319
							],
							[
								14503,
								14517
							],
							[
								14547,
								14561
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"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4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgQ0xPU0Ug4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVFVQUwg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBCQUNLU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVhDTEFNIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEhZUEhFTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBjaGFyYWN0ZXJfY2xhc3Nlc19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMgcG9wICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBuZXh0ICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3VudGlsICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3dzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBjaGFyX2lzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfbnVtX2NoaWxkcmVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX2J5dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2F0dHJpYnV0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfaW5kZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV90ZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfY2xvc2VfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9lbnVtZXJhdGlvbl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA5BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAMAAAAAAADAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6437,
								6454
							],
							[
								7015,
								7035
							],
							[
								8096,
								8108
							],
							[
								11940,
								11951
							],
							[
								12359,
								12375
							],
							[
								13540,
								13552
							],
							[
								14310,
								14321
							],
							[
								14505,
								14519
							],
							[
								14549,
								14563
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"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4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgQ0xPU0Ug4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVFVQUwg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBCQUNLU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVhDTEFNIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEhZUEhFTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBjaGFyYWN0ZXJfY2xhc3Nlc19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMgcG9wICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBuZXh0ICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3VudGlsICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3dzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBjaGFyX2lzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfbnVtX2NoaWxkcmVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX2J5dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2F0dHJpYnV0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfaW5kZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV90ZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfY2xvc2VfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9lbnVtZXJhdGlvbl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA5BQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					35,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								192,
								194
							],
							[
								208,
								213
							],
							[
								227,
								230
							],
							[
								244,
								249
							],
							[
								263,
								268
							],
							[
								282,
								287
							],
							[
								301,
								308
							],
							[
								322,
								327
							],
							[
								341,
								350
							],
							[
								365,
								373
							],
							[
								388,
								394
							],
							[
								409,
								415
							],
							[
								544,
								555
							],
							[
								563,
								585
							],
							[
								878,
								881
							],
							[
								1253,
								1257
							],
							[
								1313,
								1317
							],
							[
								2178,
								2188
							],
							[
								2217,
								2224
							],
							[
								2255,
								2262
							],
							[
								2317,
								2333
							],
							[
								2622,
								2640
							],
							[
								2874,
								2892
							],
							[
								3163,
								3183
							],
							[
								4085,
								4101
							],
							[
								4190,
								4206
							],
							[
								4812,
								4826
							],
							[
								5138,
								5155
							],
							[
								6437,
								6454
							],
							[
								7015,
								7035
							],
							[
								8096,
								8108
							],
							[
								11940,
								11951
							],
							[
								12359,
								12375
							],
							[
								13540,
								13552
							],
							[
								14310,
								14321
							],
							[
								14505,
								14519
							],
							[
								14549,
								14563
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– pop ( ) … — macro function",
							"—Ⓜ– next ( ) … — macro function",
							"—Ⓜ– skip ( ) … — macro function",
							"—Ⓜ– skip_until ( ) … — macro function",
							"—Ⓜ– skip_ws ( ) … — macro function",
							"—Ⓜ– char_is ( ) … — macro function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_obj ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"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4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgQ0xPU0Ug4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVFVQUwg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBCQUNLU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgRVhDTEFNIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEhZUEhFTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBjaGFyYWN0ZXJfY2xhc3Nlc19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMgcG9wICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBuZXh0ICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3VudGlsICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBza2lwX3dzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBjaGFyX2lzICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfbnVtX2NoaWxkcmVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3NldF9hdHRyX2J5dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2F0dHJpYnV0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfaW5kZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV90ZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfY2xvc2VfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9lbnVtZXJhdGlvbl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAA5BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcwYAAAnik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIFdTIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIFNUQVJUIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEVORCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBRVU9URSDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBDTE9TRSDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFUVVBTCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBTUEVDSUFMIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIFNMQVNIIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4IgIEJBQ0tTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBRVUVTVElPTiDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBFWENMQU0g4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgSFlQSEVOIOKApiDigJQgbWFjcm8gb2JqZWN0Cgnik4kgIE91dHB1dFZhbHVlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGNoYXJhY3Rlcl9jbGFzc2VzX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyBwb3AgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIG5leHQgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIHNraXAgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIHNraXBfdW50aWwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIHNraXBfd3MgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGNoYXJfaXMgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9udW1fY2hpbGRyZW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfc2V0X2F0dHJfdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfc2V0X2F0dHJfYnl0ZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfYXR0cmlidXRlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9pbmRlbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX3RleHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfZWxlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9jbG9zZV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX2VudW1lcmF0aW9uX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfcGFyc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfcmVhZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF93cml0ZV9vYmogKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KCeKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKCeKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAADkFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/console.js",
			"settings":
			{
				"buffer_size": 3440,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					21,
					1,
					"insert",
					{
						"characters": "function"
					},
					"CQAAALUMAAAAAAAAtgwAAAAAAAAAAAAAtgwAAAAAAAC2DAAAAAAAAAcAAABDb25zb2xltgwAAAAAAAC3DAAAAAAAAAAAAAC3DAAAAAAAALgMAAAAAAAAAAAAALgMAAAAAAAAuQwAAAAAAAAAAAAAuQwAAAAAAAC6DAAAAAAAAAAAAAC6DAAAAAAAALsMAAAAAAAAAAAAALsMAAAAAAAAvAwAAAAAAAAAAAAAvAwAAAAAAAC9DAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1DAAAAAAAALwMAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " ConsoleSetup"
					},
					"DQAAAL0MAAAAAAAAvgwAAAAAAAAAAAAAvgwAAAAAAAC/DAAAAAAAAAAAAAC/DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAwQwAAAAAAAAAAAAAwQwAAAAAAADCDAAAAAAAAAAAAADCDAAAAAAAAMMMAAAAAAAAAAAAAMMMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADFDAAAAAAAAAAAAADFDAAAAAAAAMYMAAAAAAAAAAAAAMYMAAAAAAAAxwwAAAAAAAAAAAAAxwwAAAAAAADIDAAAAAAAAAAAAADIDAAAAAAAAMkMAAAAAAAAAAAAAMkMAAAAAAAAygwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9DAAAAAAAAL0MAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMoMAAAAAAAAzAwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKDAAAAAAAAMoMAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "options"
					},
					"BwAAAMsMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADNDAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANEMAAAAAAAAAAAAANEMAAAAAAAA0gwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLDAAAAAAAAMsMAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANMMAAAAAAAA1AwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTDAAAAAAAANMMAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					2,
					"left_delete",
					null,
					"AgAAANMMAAAAAAAA0wwAAAAAAAABAAAAINIMAAAAAAAA0gwAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUDAAAAAAAANQMAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAANIMAAAAAAAA0wwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSDAAAAAAAANIMAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " {})"
					},
					"BAAAANMMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADVDAAAAAAAAAAAAADVDAAAAAAAANYMAAAAAAAAAAAAANYMAAAAAAAA1wwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTDAAAAAAAANMMAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAANcMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADZDAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXDAAAAAAAANcMAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANkMAAAAAAAA2gwAAAAAAAAAAAAA2gwAAAAAAADcDAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZDAAAAAAAANkMAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "callback"
					},
					"CQAAAMsMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADMDAAAAAAAAAcAAABvcHRpb25zzAwAAAAAAADNDAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANEMAAAAAAAAAAAAANEMAAAAAAAA0gwAAAAAAAAAAAAA0gwAAAAAAADTDAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLDAAAAAAAANIMAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANMMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADVDAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTDAAAAAAAANMMAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " ()"
					},
					"AwAAANUMAAAAAAAA1gwAAAAAAAAAAAAA1gwAAAAAAADXDAAAAAAAAAAAAADXDAAAAAAAANgMAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVDAAAAAAAANUMAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANgMAAAAAAAA2QwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYDAAAAAAAANgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					3,
					"left_delete",
					null,
					"AwAAANgMAAAAAAAA2AwAAAAAAAABAAAAINcMAAAAAAAA1wwAAAAAAAABAAAAKdYMAAAAAAAA1gwAAAAAAAABAAAAKA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZDAAAAAAAANkMAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAANYMAAAAAAAA1wwAAAAAAAAAAAAA1wwAAAAAAADYDAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWDAAAAAAAANYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAANgMAAAAAAAA2QwAAAAAAAAAAAAA2QwAAAAAAADaDAAAAAAAAAAAAADaDAAAAAAAANsMAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYDAAAAAAAANgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsMAAAAAAAA3AwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbDAAAAAAAANsMAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					2,
					"right_delete",
					null,
					"AgAAANwMAAAAAAAA3AwAAAAAAAABAAAAPdwMAAAAAAAA3AwAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcDAAAAAAAANwMAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"left_delete",
					null,
					"AQAAAOQMAAAAAAAA5AwAAAAAAAABAAAAOw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlDAAAAAAAAOUMAAAAAAAAAAAAAAAAfEA"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAOQMAAAAAAAA5QwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkDAAAAAAAAOQMAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\n\nglobalThis.conso"
					},
					"FQAAAOEMAAAAAAAA4gwAAAAAAAAAAAAA4gwAAAAAAADkDAAAAAAAAAAAAADkDAAAAAAAAOUMAAAAAAAAAAAAAOUMAAAAAAAA5wwAAAAAAAAAAAAA4gwAAAAAAADiDAAAAAAAAAIAAAAgIOUMAAAAAAAA5gwAAAAAAAAAAAAA5gwAAAAAAADnDAAAAAAAAAAAAADnDAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA6QwAAAAAAAAAAAAA6QwAAAAAAADqDAAAAAAAAAAAAADqDAAAAAAAAOsMAAAAAAAAAAAAAOsMAAAAAAAA7AwAAAAAAAAAAAAA7AwAAAAAAADtDAAAAAAAAAAAAADtDAAAAAAAAO4MAAAAAAAAAAAAAO4MAAAAAAAA7wwAAAAAAAAAAAAA7wwAAAAAAADwDAAAAAAAAAAAAADwDAAAAAAAAPEMAAAAAAAAAAAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA8gwAAAAAAADzDAAAAAAAAAAAAADzDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA9QwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhDAAAAAAAAOEMAAAAAAAA////////738"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "le"
					},
					"AgAAAPUMAAAAAAAA9gwAAAAAAAAAAAAA9gwAAAAAAAD3DAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1DAAAAAAAAPUMAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAPcMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD5DAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3DAAAAAAAAPcMAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAAPgMAAAAAAAA+AwAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5DAAAAAAAAPkMAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAPgMAAAAAAAA+QwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4DAAAAAAAAPgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAPkMAAAAAAAA+gwAAAAAAAAAAAAA+gwAAAAAAAD7DAAAAAAAAAAAAAD7DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAAA/QwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5DAAAAAAAAPkMAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " Console"
					},
					"CAAAAP0MAAAAAAAA/gwAAAAAAAAAAAAA/gwAAAAAAAD/DAAAAAAAAAAAAAD/DAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAQ0AAAAAAAAAAAAAAQ0AAAAAAAACDQAAAAAAAAAAAAACDQAAAAAAAAMNAAAAAAAAAAAAAAMNAAAAAAAABA0AAAAAAAAAAAAABA0AAAAAAAAFDQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9DAAAAAAAAP0MAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "optiosn,"
					},
					"CAAAAMsMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADNDAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANEMAAAAAAAAAAAAANEMAAAAAAAA0gwAAAAAAAAAAAAA0gwAAAAAAADTDAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLDAAAAAAAAMsMAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANMMAAAAAAAA1AwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTDAAAAAAAANMMAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					4,
					"left_delete",
					null,
					"BAAAANMMAAAAAAAA0wwAAAAAAAABAAAAINIMAAAAAAAA0gwAAAAAAAABAAAALNEMAAAAAAAA0QwAAAAAAAABAAAAbtAMAAAAAAAA0AwAAAAAAAABAAAAcw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUDAAAAAAAANQMAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "ns={},"
					},
					"BgAAANAMAAAAAAAA0QwAAAAAAAAAAAAA0QwAAAAAAADSDAAAAAAAAAAAAADSDAAAAAAAANMMAAAAAAAAAAAAANMMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADVDAAAAAAAAAAAAADVDAAAAAAAANYMAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQDAAAAAAAANAMAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYMAAAAAAAA1wwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWDAAAAAAAANYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABENAAAAAAAAEw0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARDQAAAAAAABENAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABINAAAAAAAAFA0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASDQAAAAAAABINAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " inspect"
					},
					"CAAAABMNAAAAAAAAFA0AAAAAAAAAAAAAFA0AAAAAAAAVDQAAAAAAAAAAAAAVDQAAAAAAABYNAAAAAAAAAAAAABYNAAAAAAAAFw0AAAAAAAAAAAAAFw0AAAAAAAAYDQAAAAAAAAAAAAAYDQAAAAAAABkNAAAAAAAAAAAAABkNAAAAAAAAGg0AAAAAAAAAAAAAGg0AAAAAAAAbDQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATDQAAAAAAABMNAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert_completion",
					{
						"completion": "inspectOptions",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "inspectOptions"
					},
					"AgAAABQNAAAAAAAAFA0AAAAAAAAHAAAAaW5zcGVjdBQNAAAAAAAAIg0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbDQAAAAAAABsNAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAACINAAAAAAAAIw0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiDQAAAAAAACINAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " options"
					},
					"CAAAACMNAAAAAAAAJA0AAAAAAAAAAAAAJA0AAAAAAAAlDQAAAAAAAAAAAAAlDQAAAAAAACYNAAAAAAAAAAAAACYNAAAAAAAAJw0AAAAAAAAAAAAAJw0AAAAAAAAoDQAAAAAAAAAAAAAoDQAAAAAAACkNAAAAAAAAAAAAACkNAAAAAAAAKg0AAAAAAAAAAAAAKg0AAAAAAAArDQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjDQAAAAAAACMNAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACsNAAAAAAAALA0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArDQAAAAAAACsNAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"paste",
					null,
					"AgAAAMsMAAAAAAAA2QwAAAAAAAAAAAAA2QwAAAAAAADZDAAAAAAAAAcAAABvcHRpb25z",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLDAAAAAAAANIMAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					3,
					"left_delete",
					null,
					"AwAAACsNAAAAAAAAKw0AAAAAAAAHAAAAb3B0aW9ucyoNAAAAAAAAKg0AAAAAAAABAAAAICkNAAAAAAAAKQ0AAAAAAAABAAAAOg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyDQAAAAAAACsNAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACwNAAAAAAAALQ0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsDQAAAAAAACwNAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC0NAAAAAAAALg0AAAAAAAAAAAAALg0AAAAAAAAwDQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtDQAAAAAAAC0NAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AgAAAPQMAAAAAAAA9AwAAAAAAAABAAAACi0NAAAAAAAALQ0AAAAAAAACAAAAICA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1DAAAAAAAAPUMAAAAAAAAAAAAAAAAMEA"
				],
				[
					112,
					1,
					"cut",
					null,
					"AQAAAOcMAAAAAAAA5wwAAAAAAAAKAAAAPSAoKSA9PiB7fQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnDAAAAAAAAPEMAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAACMNAAAAAAAAJA0AAAAAAAAAAAAAJA0AAAAAAAAlDQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjDQAAAAAAACMNAAAAAAAAAAAAAAAA8L8"
				],
				[
					118,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACUNAAAAAAAAJw0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlDQAAAAAAACUNAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "callback"
					},
					"CAAAACYNAAAAAAAAJw0AAAAAAAAAAAAAJw0AAAAAAAAoDQAAAAAAAAAAAAAoDQAAAAAAACkNAAAAAAAAAAAAACkNAAAAAAAAKg0AAAAAAAAAAAAAKg0AAAAAAAArDQAAAAAAAAAAAAArDQAAAAAAACwNAAAAAAAAAAAAACwNAAAAAAAALQ0AAAAAAAAAAAAALQ0AAAAAAAAuDQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmDQAAAAAAACYNAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "\ncallback"
					},
					"CgAAAC8NAAAAAAAAMA0AAAAAAAAAAAAAMA0AAAAAAAAyDQAAAAAAAAAAAAAyDQAAAAAAADMNAAAAAAAAAAAAADMNAAAAAAAANA0AAAAAAAAAAAAANA0AAAAAAAA1DQAAAAAAAAAAAAA1DQAAAAAAADYNAAAAAAAAAAAAADYNAAAAAAAANw0AAAAAAAAAAAAANw0AAAAAAAA4DQAAAAAAAAAAAAA4DQAAAAAAADkNAAAAAAAAAAAAADkNAAAAAAAAOg0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvDQAAAAAAAC8NAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADoNAAAAAAAAPA0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6DQAAAAAAADoNAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "globalThis.console"
					},
					"EgAAADsNAAAAAAAAPA0AAAAAAAAAAAAAPA0AAAAAAAA9DQAAAAAAAAAAAAA9DQAAAAAAAD4NAAAAAAAAAAAAAD4NAAAAAAAAPw0AAAAAAAAAAAAAPw0AAAAAAABADQAAAAAAAAAAAABADQAAAAAAAEENAAAAAAAAAAAAAEENAAAAAAAAQg0AAAAAAAAAAAAAQg0AAAAAAABDDQAAAAAAAAAAAABDDQAAAAAAAEQNAAAAAAAAAAAAAEQNAAAAAAAARQ0AAAAAAAAAAAAARQ0AAAAAAABGDQAAAAAAAAAAAABGDQAAAAAAAEcNAAAAAAAAAAAAAEcNAAAAAAAASA0AAAAAAAAAAAAASA0AAAAAAABJDQAAAAAAAAAAAABJDQAAAAAAAEoNAAAAAAAAAAAAAEoNAAAAAAAASw0AAAAAAAAAAAAASw0AAAAAAABMDQAAAAAAAAAAAABMDQAAAAAAAE0NAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7DQAAAAAAADsNAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAE4NAAAAAAAATw0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABODQAAAAAAAE4NAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAE8NAAAAAAAAUA0AAAAAAAAAAAAAUA0AAAAAAABSDQAAAAAAAAAAAABQDQAAAAAAAFANAAAAAAAAAgAAACAgUA0AAAAAAABQDQAAAAAAAAAAAABQDQAAAAAAAFENAAAAAAAAAAAAAFENAAAAAAAAUg0AAAAAAAAAAAAAUg0AAAAAAABTDQAAAAAAAAAAAABTDQAAAAAAAFQNAAAAAAAAAAAAAFQNAAAAAAAAVQ0AAAAAAAAAAAAAVQ0AAAAAAABWDQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPDQAAAAAAAE8NAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " gloalT"
					},
					"BwAAAFYNAAAAAAAAVw0AAAAAAAAAAAAAVw0AAAAAAABYDQAAAAAAAAAAAABYDQAAAAAAAFkNAAAAAAAAAAAAAFkNAAAAAAAAWg0AAAAAAAAAAAAAWg0AAAAAAABbDQAAAAAAAAAAAABbDQAAAAAAAFwNAAAAAAAAAAAAAFwNAAAAAAAAXQ0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWDQAAAAAAAFYNAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					3,
					"left_delete",
					null,
					"AwAAAFwNAAAAAAAAXA0AAAAAAAABAAAAVFsNAAAAAAAAWw0AAAAAAAABAAAAbFoNAAAAAAAAWg0AAAAAAAABAAAAYQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdDQAAAAAAAF0NAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "balThis.consol"
					},
					"DgAAAFoNAAAAAAAAWw0AAAAAAAAAAAAAWw0AAAAAAABcDQAAAAAAAAAAAABcDQAAAAAAAF0NAAAAAAAAAAAAAF0NAAAAAAAAXg0AAAAAAAAAAAAAXg0AAAAAAABfDQAAAAAAAAAAAABfDQAAAAAAAGANAAAAAAAAAAAAAGANAAAAAAAAYQ0AAAAAAAAAAAAAYQ0AAAAAAABiDQAAAAAAAAAAAABiDQAAAAAAAGMNAAAAAAAAAAAAAGMNAAAAAAAAZA0AAAAAAAAAAAAAZA0AAAAAAABlDQAAAAAAAAAAAABlDQAAAAAAAGYNAAAAAAAAAAAAAGYNAAAAAAAAZw0AAAAAAAAAAAAAZw0AAAAAAABoDQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaDQAAAAAAAFoNAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "e;"
					},
					"AgAAAGgNAAAAAAAAaQ0AAAAAAAAAAAAAaQ0AAAAAAABqDQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoDQAAAAAAAGgNAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"left_delete",
					null,
					"AQAAAG4NAAAAAAAAbg0AAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvDQAAAAAAAG8NAAAAAAAAAAAAAAAAAAA"
				],
				[
					136,
					1,
					"revert",
					null,
					"BgAAAAAAAAAAAAAAAAAAAAAAAABuDQAAaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnOwppbXBvcnQgKiBhcyBzdGQgZnJvbSAnc3RkJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgZnVuY3Rpb24gQ29uc29sZShvcHRzID0ge30pIHsKICBsZXQgZW52ID0gc3RkLmdldGVudmlyb24oKTsKICBsZXQgc3RkaW9GZHMgPSBbc3RkLm91dCwgc3RkLmVyciwgc3RkLmluXS5tYXAoZiA9PiBmLmZpbGVubygpKTsKICBsZXQgdGVybUZkID0gc3RkaW9GZHMuZmluZChmZCA9PiBvcy5pc2F0dHkoZmQpKTsKICBpZih0eXBlb2YgdGVybUZkICE9ICdudW1iZXInKSB0ZXJtRmQgPSAxOwoKICBjb25zdCBjb25zb2xlV2lkdGggPSAoZmQgPSB0ZXJtRmQpID0+IHsKICAgIGxldCBzaXplOwogICAgdHJ5IHsKICAgICAgc2l6ZSA9IG9zLnR0eUdldFdpblNpemUoZmQpOwogICAgfSBjYXRjaChlcnIpIHt9CiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShzaXplKSA/IHNpemVbMF0gOiB1bmRlZmluZWQ7CiAgfTsKCiAgY29uc3QgaXNUZXJtaW5hbCA9IG9zLmlzYXR0eSh0ZXJtRmQpOwoKICBjb25zdCBkZWZhdWx0QnJlYWtMZW5ndGggPSAoaXNUZXJtaW5hbCAmJiBjb25zb2xlV2lkdGgoKSkgfHwgZW52LkNPTFVNTlMgfHwgSW5maW5pdHk7CiAgY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7CiAgICBkZXB0aDogMiwKICAgIGNvbG9yczogaXNUZXJtaW5hbCwKICAgIHN0cmluZ0JyZWFrTmV3bGluZTogZmFsc2UsCiAgICBtYXhBcnJheUxlbmd0aDogSW5maW5pdHksCiAgICBjb21wYWN0OiBmYWxzZSwKICAgIGN1c3RvbUluc3BlY3Q6IHRydWUKICB9OwogIGxldCBvcHRpb25zID0gewogICAgLi4uZGVmYXVsdE9wdGlvbnMsCiAgICAuLi4ob3B0cy5pbnNwZWN0T3B0aW9ucyA/PyB7fSkKICB9OwoKICBvcHRpb25zLmJyZWFrTGVuZ3RoID8/PSBkZWZhdWx0QnJlYWtMZW5ndGg7CgogIGxldCBjID0gZ2xvYmFsVGhpcy5jb25zb2xlOwoKICBsZXQgbG9nID0gYy5sb2c7CgogIGxldCBuZXdjb25zID0gT2JqZWN0LmNyZWF0ZShDb25zb2xlLnByb3RvdHlwZSk7CgogIGlmKGdsb2JhbFRoaXMuaW5zcGVjdCAhPT0gaW5zcGVjdCkgZ2xvYmFsVGhpcy5pbnNwZWN0ID0gaW5zcGVjdDsKCiAgaWYoIWdsb2JhbFRoaXMuaW5zcGVjdCkgZ2xvYmFsVGhpcy5pbnNwZWN0ID0gYXJnID0+IGFyZzsKCiAgY29uc3Qgb3V0cHV0RnVuY3Rpb24gPQogICAgb3V0ID0+CiAgICAoLi4uYXJncykgPT4KICAgICAgb3V0LnB1dHMoYXJncy5qb2luKCcgJykgKyAnXG4nKTsKCiAgY29uc3QgaW5zcGVjdEZ1bmN0aW9uID0gKC4uLmFyZ3MpID0+IHsKICAgIGxldCBbb2JqLCBvcHRzXSA9IGFyZ3M7CiAgICBpZihhcmdzLmxlbmd0aCA9PSAwKSBvYmogPSBuZXdjb25zOwogICAgcmV0dXJuIGluc3BlY3Qob2JqLCBDb25zb2xlT3B0aW9ucy5tZXJnZShuZXdjb25zLm9wdGlvbnMsIG9wdHMpKTsKICB9OwoKICBjb25zdCBsb2dGdW5jdGlvbiA9IG91dHB1dCA9PgogICAgZnVuY3Rpb24oLi4uYXJncykgewogICAgICBsZXQgdGVtcE9wdHMgPSBuZXcgQ29uc29sZU9wdGlvbnMobmV3Y29ucy5vcHRpb25zKTsKICAgICAgbGV0IGFjYyA9IHRlbXBPcHRzLnByZWZpeCA/IFt0ZW1wT3B0cy5wcmVmaXhdIDogW107CiAgICAgIGxldCBpID0gMDsKCiAgICAgIGZvcihsZXQgYXJnIG9mIGFyZ3MpIHsKICAgICAgICB0cnkgewogICAgICAgICAgaWYodHlwZW9mIGFyZyA9PSAnb2JqZWN0JykgewogICAgICAgICAgICBpZihhcmcgPT0gbnVsbCkgewogICAgICAgICAgICAgIGFjYy5wdXNoKCdudWxsJyk7CiAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0gZWxzZSBpZihhcmcubWVyZ2UgPT09IENvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSkgewogICAgICAgICAgICAgIHRlbXBPcHRzLm1lcmdlKGFyZyk7CiAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGlmKGkrKyA+PSAwKSB7CiAgICAgICAgICAgIGFjYy5wdXNoKHR5cGVvZiBhcmcgPT0gJ3N0cmluZycgPyBhcmcgOiBpbnNwZWN0RnVuY3Rpb24oYXJnLCB0ZW1wT3B0cykpOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgIH0KICAgICAgICAgIGFjYy5wdXNoKGFyZyk7CiAgICAgICAgfSBjYXRjaChlcnJvcikgewogICAgICAgICAgb3V0cHV0KCdlcnJvcjonLCBlcnJvcik7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gb3V0cHV0KC4uLmFjYyk7CiAgICB9OwoKICBuZXdjb25zLm9wdGlvbnMgPSBvcHRpb25zOwoKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXdjb25zOwoKICByZXR1cm4gYWRkTWlzc2luZ01ldGhvZHMobmV3Y29ucyk7CgogIGZ1bmN0aW9uIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpIHsKICAgIGxldCBmbnMgPSB7fTsKCiAgICBmb3IobGV0IFttZXRob2QsIG91dHB1dF0gb2YgWwogICAgICBbJ2xvZycsIHN0ZC5vdXRdLAogICAgICBbJ2luZm8nLCBzdGQub3V0XSwKICAgICAgWydlcnJvcicsIHN0ZC5lcnJdLAogICAgICBbJ3dhcm4nLCBzdGQuZXJyXSwKICAgICAgWydkZWJ1ZycsIHN0ZC5vdXRdCiAgICBdKSB7CiAgICAgIGlmKGNvbnNbbWV0aG9kXSA9PT0gdW5kZWZpbmVkKSBmbnNbbWV0aG9kXSA9IGxvZ0Z1bmN0aW9uKG91dHB1dEZ1bmN0aW9uKG91dHB1dCkpOwogICAgfQogICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oY29ucywgZm5zKTsKICB9Cn0KCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkgewogIHJldHVybiBuZXcgQ29uc29sZU9wdGlvbnMob2JqKTsKfTsKCmZ1bmN0aW9uIENvbnNvbGVPcHRpb25zKG9iaiA9IHt9KSB7CiAgbGV0IHsgbXVsdGlsaW5lID0gdHJ1ZSwgLi4ucmVzdCB9ID0gb2JqOwoKICBpZihtdWx0aWxpbmUgPT0gZmFsc2UpIHsKICAgIHJlc3QuYnJlYWtMZW5ndGggPSBJbmZpbml0eTsKICAgIHJlc3Quc3RyaW5nQnJlYWtOZXdsaW5lID0gZmFsc2U7CiAgfQogIE9iamVjdC5hc3NpZ24odGhpcywgcmVzdCk7Cn0KQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykgewogIHJldHVybiBPYmplY3QuYXNzaWduKHRoaXMsIC4uLmFyZ3MpOwp9OwpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpIHsKICByZXR1cm4gbmV3IENvbnNvbGVPcHRpb25zKG9wdHMpLm1lcmdlKC4uLmFyZ3MpOwp9OwoKZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoKTsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvbnNvbGVTZXR1cChpbnNwZWN0T3B0aW9ucz17fSwgY2FsbGJhY2sgKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoeyBpbnNwZWN0T3B0aW9ucyB9KTsKaWYoY2FsbGJhY2spCiAgY2FsbGJhY2soZ2xvYmFsVGhpcy5jb25zb2xlKTsKcmV0dXJuIGdsb2JhbFRoaXMuY29uc29sZTsKICB9AAAAAAAAAABwDQAAAAAAAAAAAAAAAAAAAAAAAHANAAAAAAAAAAAAAAAAAAAAAAAAcA0AAAAAAAAAAAAAAAAAAAAAAABwDQAAAAAAAAAAAAAAAAAAAAAAAHANAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlCgAAAAAAAOUKAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/stack.js",
			"redo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "k"
					},
					"AQAAANIbAAAAAAAA0hsAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0xsAAAAAAADTGwAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 7788,
				"line_ending": "Unix"
			}
		},
		{
			"file": "qjsm.c",
			"settings":
			{
				"buffer_size": 39991,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"cut",
					null,
					"AQAAANU1AAAAAAAA1TUAAAAAAACSAAAAIGlmKGRlYnVnX21vZHVsZV9sb2FkZXIpCiAgICBwcmludGYoImpzbV9tb2R1bGVfbG9hZGVyX3BhdGhbJXhdIFx4MWJbMTs0ODs1OzEyNG0oMSlceDFiWzBtICUtMjBzXG4iLCBwdGhyZWFkX3NlbGYoKSwgdHJpbV9kb3RzbGFzaChtb2R1bGVfbmFtZSkpOwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1TUAAAAAAABnNgAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"paste",
					null,
					"AQAAABo2AAAAAAAArDYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGjYAAAAAAAAaNgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABg2AAAAAAAAGTYAAAAAAAAAAAAAGTYAAAAAAAAZNgAAAAAAAJQAAAAgICBpZihkZWJ1Z19tb2R1bGVfbG9hZGVyKQogICAgcHJpbnRmKCJqc21fbW9kdWxlX2xvYWRlcl9wYXRoWyV4XSBceDFiWzE7NDg7NTsxMjRtKDEpXHgxYlswbSAlLTIwc1xuIiwgcHRocmVhZF9zZWxmKCksIHRyaW1fZG90c2xhc2gobW9kdWxlX25hbWUpKTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArDYAAAAAAAAYNgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"cut",
					null,
					"AQAAAGI2AAAAAAAAYjYAAAAAAADhAAAAICBpZihkZWJ1Z19tb2R1bGVfbG9hZGVyKQogICAgICAgIHByaW50ZigianNtX21vZHVsZV9sb2FkZXJfcGF0aFsleF0gXHgxYlsxOzQ4OzU7MTI0bSgxKVx4MWJbMG0gJS0yMHMgLT4gJXNcbiIsCiAgICAgICAgICAgICAgIHB0aHJlYWRfc2VsZigpLAogICAgICAgICAgICAgICB0cmltX2RvdHNsYXNoKG1vZHVsZV9uYW1lKSwKICAgICAgICAgICAgICAgdHJpbV9kb3RzbGFzaChtb2R1bGUpKTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYjYAAAAAAABDNwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAABg2AAAAAAAA+TYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGDYAAAAAAAAYNgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+TYAAAAAAAD5NgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-archive.c",
			"settings":
			{
				"buffer_size": 38590,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"paste",
					null,
					"AgAAAAM4AAAAAAAAcFoAAAAAAAAAAAAAcFoAAAAAAABwWgAAAAAAACIXAAAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9CQVNFX01BU0siLCBBUkNISVZFX0ZPUk1BVF9CQVNFX01BU0ssIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0NQSU8iLCBBUkNISVZFX0ZPUk1BVF9DUElPLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9DUElPX1BPU0lYIiwgQVJDSElWRV9GT1JNQVRfQ1BJT19QT1NJWCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQ1BJTyIsIEFSQ0hJVkVfRk9STUFUX0NQSU8sIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0NQSU9fQklOX0xFIiwgQVJDSElWRV9GT1JNQVRfQ1BJT19CSU5fTEUsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0NQSU8iLCBBUkNISVZFX0ZPUk1BVF9DUElPLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9DUElPX0JJTl9CRSIsIEFSQ0hJVkVfRk9STUFUX0NQSU9fQklOX0JFLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9DUElPIiwgQVJDSElWRV9GT1JNQVRfQ1BJTywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQ1BJT19TVlI0X05PQ1JDIiwgQVJDSElWRV9GT1JNQVRfQ1BJT19TVlI0X05PQ1JDLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9DUElPIiwgQVJDSElWRV9GT1JNQVRfQ1BJTywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQ1BJT19TVlI0X0NSQyIsIEFSQ0hJVkVfRk9STUFUX0NQSU9fU1ZSNF9DUkMsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0NQSU8iLCBBUkNISVZFX0ZPUk1BVF9DUElPLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9DUElPX0FGSU9fTEFSR0UiLCBBUkNISVZFX0ZPUk1BVF9DUElPX0FGSU9fTEFSR0UsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0NQSU8iLCBBUkNISVZFX0ZPUk1BVF9DUElPLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9TSEFSIiwgQVJDSElWRV9GT1JNQVRfU0hBUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfU0hBUl9CQVNFIiwgQVJDSElWRV9GT1JNQVRfU0hBUl9CQVNFLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9TSEFSIiwgQVJDSElWRV9GT1JNQVRfU0hBUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfU0hBUl9EVU1QIiwgQVJDSElWRV9GT1JNQVRfU0hBUl9EVU1QLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9TSEFSIiwgQVJDSElWRV9GT1JNQVRfU0hBUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfVEFSIiwgQVJDSElWRV9GT1JNQVRfVEFSLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9UQVJfVVNUQVIiLCBBUkNISVZFX0ZPUk1BVF9UQVJfVVNUQVIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX1RBUiIsIEFSQ0hJVkVfRk9STUFUX1RBUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfVEFSX1BBWF9JTlRFUkNIQU5HRSIsIEFSQ0hJVkVfRk9STUFUX1RBUl9QQVhfSU5URVJDSEFOR0UsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX1RBUiIsIEFSQ0hJVkVfRk9STUFUX1RBUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfVEFSX1BBWF9SRVNUUklDVEVEIiwgQVJDSElWRV9GT1JNQVRfVEFSX1BBWF9SRVNUUklDVEVELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9UQVIiLCBBUkNISVZFX0ZPUk1BVF9UQVIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX1RBUl9HTlVUQVIiLCBBUkNISVZFX0ZPUk1BVF9UQVJfR05VVEFSLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9UQVIiLCBBUkNISVZFX0ZPUk1BVF9UQVIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0lTTzk2NjAiLCBBUkNISVZFX0ZPUk1BVF9JU085NjYwLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9JU085NjYwX1JPQ0tSSURHRSIsIEFSQ0hJVkVfRk9STUFUX0lTTzk2NjBfUk9DS1JJREdFLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9JU085NjYwIiwgQVJDSElWRV9GT1JNQVRfSVNPOTY2MCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfWklQIiwgQVJDSElWRV9GT1JNQVRfWklQLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9FTVBUWSIsIEFSQ0hJVkVfRk9STUFUX0VNUFRZLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9BUiIsIEFSQ0hJVkVfRk9STUFUX0FSLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9BUl9HTlUiLCBBUkNISVZFX0ZPUk1BVF9BUl9HTlUsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0FSIiwgQVJDSElWRV9GT1JNQVRfQVIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0FSX0JTRCIsIEFSQ0hJVkVfRk9STUFUX0FSX0JTRCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQVIiLCBBUkNISVZFX0ZPUk1BVF9BUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfTVRSRUUiLCBBUkNISVZFX0ZPUk1BVF9NVFJFRSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfUkFXIiwgQVJDSElWRV9GT1JNQVRfUkFXLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9YQVIiLCBBUkNISVZFX0ZPUk1BVF9YQVIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0xIQSIsIEFSQ0hJVkVfRk9STUFUX0xIQSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQ0FCIiwgQVJDSElWRV9GT1JNQVRfQ0FCLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9SQVIiLCBBUkNISVZFX0ZPUk1BVF9SQVIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUXzdaSVAiLCBBUkNISVZFX0ZPUk1BVF83WklQLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9XQVJDIiwgQVJDSElWRV9GT1JNQVRfV0FSQywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfUkFSX1Y1IiwgQVJDSElWRV9GT1JNQVRfUkFSX1Y1LCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX1JFQURfRk9STUFUX0NBUFNfTk9ORSIsIEFSQ0hJVkVfUkVBRF9GT1JNQVRfQ0FQU19OT05FLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX1JFQURfRk9STUFUX0NBUFNfRU5DUllQVF9EQVRBIiwgQVJDSElWRV9SRUFEX0ZPUk1BVF9DQVBTX0VOQ1JZUFRfREFUQSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9SRUFEX0ZPUk1BVF9DQVBTX0VOQ1JZUFRfTUVUQURBVEEiLCBBUkNISVZFX1JFQURfRk9STUFUX0NBUFNfRU5DUllQVF9NRVRBREFUQSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9SRUFEX0ZPUk1BVF9FTkNSWVBUSU9OX1VOU1VQUE9SVEVEIiwgQVJDSElWRV9SRUFEX0ZPUk1BVF9FTkNSWVBUSU9OX1VOU1VQUE9SVEVELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX1JFQURfRk9STUFUX0VOQ1JZUFRJT05fRE9OVF9LTk9XIiwgQVJDSElWRV9SRUFEX0ZPUk1BVF9FTkNSWVBUSU9OX0RPTlRfS05PVywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9SRUFEX0ZPUk1BVF9FTkNSWVBUSU9OX1VOU1VQUE9SVEVEIiwgQVJDSElWRV9SRUFEX0ZPUk1BVF9FTkNSWVBUSU9OX1VOU1VQUE9SVEVELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX1JFQURfRk9STUFUX0VOQ1JZUFRJT05fRE9OVF9LTk9XIiwgQVJDSElWRV9SRUFEX0ZPUk1BVF9FTkNSWVBUSU9OX0RPTlRfS05PVywgMCksCgogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9PV05FUiIsIEFSQ0hJVkVfRVhUUkFDVF9PV05FUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX1BFUk0iLCBBUkNISVZFX0VYVFJBQ1RfUEVSTSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX1RJTUUiLCBBUkNISVZFX0VYVFJBQ1RfVElNRSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX05PX09WRVJXUklURSIsIEFSQ0hJVkVfRVhUUkFDVF9OT19PVkVSV1JJVEUsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9VTkxJTksiLCBBUkNISVZFX0VYVFJBQ1RfVU5MSU5LLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0VYVFJBQ1RfQUNMIiwgQVJDSElWRV9FWFRSQUNUX0FDTCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX0ZGTEFHUyIsIEFSQ0hJVkVfRVhUUkFDVF9GRkxBR1MsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9YQVRUUiIsIEFSQ0hJVkVfRVhUUkFDVF9YQVRUUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX1VOTElOSyIsIEFSQ0hJVkVfRVhUUkFDVF9VTkxJTkssIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9TRUNVUkVfU1lNTElOS1MiLCBBUkNISVZFX0VYVFJBQ1RfU0VDVVJFX1NZTUxJTktTLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0VYVFJBQ1RfU0VDVVJFX05PRE9URE9UIiwgQVJDSElWRV9FWFRSQUNUX1NFQ1VSRV9OT0RPVERPVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX05PX0FVVE9ESVIiLCBBUkNISVZFX0VYVFJBQ1RfTk9fQVVUT0RJUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX05PX09WRVJXUklURV9ORVdFUiIsIEFSQ0hJVkVfRVhUUkFDVF9OT19PVkVSV1JJVEVfTkVXRVIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9TUEFSU0UiLCBBUkNISVZFX0VYVFJBQ1RfU1BBUlNFLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0VYVFJBQ1RfTUFDX01FVEFEQVRBIiwgQVJDSElWRV9FWFRSQUNUX01BQ19NRVRBREFUQSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX05PX0hGU19DT01QUkVTU0lPTiIsIEFSQ0hJVkVfRVhUUkFDVF9OT19IRlNfQ09NUFJFU1NJT04sIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9IRlNfQ09NUFJFU1NJT05fRk9SQ0VEIiwgQVJDSElWRV9FWFRSQUNUX0hGU19DT01QUkVTU0lPTl9GT1JDRUQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9TRUNVUkVfTk9BQlNPTFVURVBBVEhTIiwgQVJDSElWRV9FWFRSQUNUX1NFQ1VSRV9OT0FCU09MVVRFUEFUSFMsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9DTEVBUl9OT0NIQU5HRV9GRkxBR1MiLCBBUkNISVZFX0VYVFJBQ1RfQ0xFQVJfTk9DSEFOR0VfRkZMQUdTLCAwKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJU8AAAAAAAADOAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADTlgAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgPGFyY2hpdmUuaD4KI2luY2x1ZGUgPGFyY2hpdmVfZW50cnkuaD4KI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtYXJjaGl2ZS5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfYXJjaGl2ZV9jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGFyY2hpdmVfcHJvdG8gPSB7SlNfVEFHX1VOREVGSU5FRH0sIGFyY2hpdmVfY3RvciA9IHtKU19UQUdfVU5ERUZJTkVEfTsKCnRocmVhZF9sb2NhbCBWSVNJQkxFIEpTQ2xhc3NJRCBqc19hcmNoaXZlZW50cnlfY2xhc3NfaWQgPSAwOwp0aHJlYWRfbG9jYWwgSlNWYWx1ZSBhcmNoaXZlZW50cnlfcHJvdG8gPSB7SlNfVEFHX1VOREVGSU5FRH0sIGFyY2hpdmVlbnRyeV9jdG9yID0ge0pTX1RBR19VTkRFRklORUR9OwoKZW51bSB7IEFSQ0hJVkVfTUVUSE9EX1JFQUQsIEFSQ0hJVkVfTUVUSE9EX1dSSVRFLCBBUkNISVZFX01FVEhPRF9SRUFERklMRSwgQVJDSElWRV9NRVRIT0RfV1JJVEVGSUxFIH07CmVudW0geyBBUkNISVZFX1BST1BfRk9STUFULCBBUkNISVZFX1BST1BfQ09NUFJFU1NJT04sIEFSQ0hJVkVfUFJPUF9GSUxURVJTLCBBUkNISVZFX1BST1BfRklMRUNPVU5UIH07CgplbnVtIHsKICBBUkNISVZFRU5UUllfTUVUSE9EX1JFQUQsCiAgQVJDSElWRUVOVFJZX01FVEhPRF9XUklURSwKICBBUkNISVZFRU5UUllfTUVUSE9EX1JFQURGSUxFLAogIEFSQ0hJVkVFTlRSWV9NRVRIT0RfV1JJVEVGSUxFCn07CmVudW0gewogIEVOVFJZX0FUSU1FLAogIEVOVFJZX0JJUlRIVElNRSwKICBFTlRSWV9DVElNRSwKICBFTlRSWV9ERVYsCiAgRU5UUllfREVWTUFKT1IsCiAgRU5UUllfREVWTUlOT1IsCiAgRU5UUllfRklMRVRZUEUsCiAgRU5UUllfRkZMQUdTLAogIEVOVFJZX0dJRCwKICBFTlRSWV9HTkFNRSwKICBFTlRSWV9IQVJETElOSywKICBFTlRSWV9JTk8sCiAgRU5UUllfSU5PNjQsCiAgRU5UUllfTElOSywKICBFTlRSWV9NT0RFLAogIEVOVFJZX01USU1FLAogIEVOVFJZX05MSU5LLAogIEVOVFJZX1BBVEhOQU1FLAogIEVOVFJZX1BFUk0sCiAgRU5UUllfUkRFViwKICBFTlRSWV9SREVWTUFKT1IsCiAgRU5UUllfUkRFVk1JTk9SLAogIEVOVFJZX1NJWkUsCiAgRU5UUllfU1lNTElOSywKICBFTlRSWV9VSUQsCiAgRU5UUllfVU5BTUUKfTsKCnN0YXRpYyBKU1ZhbHVlIGpzX2FyY2hpdmVlbnRyeV93cmFwX3Byb3RvKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvdG8sIHN0cnVjdCBhcmNoaXZlX2VudHJ5KiBlbnQpOwpzdGF0aWMgSlNWYWx1ZSBqc19hcmNoaXZlZW50cnlfd3JhcChKU0NvbnRleHQqIGN0eCwgc3RydWN0IGFyY2hpdmVfZW50cnkqIGVudCk7CgpzdHJ1Y3QgQXJjaGl2ZUluc3RhbmNlIHsKICBKU1ZhbHVlIGFyY2hpdmU7Cn07CnN0cnVjdCBBcmNoaXZlRW50cnlSZWYgewogIEpTQ29udGV4dCogY3R4OwogIEpTVmFsdWVDb25zdCBjYWxsYmFjaywgYXJnc1syXTsKfTsKCnN0YXRpYyB2b2lkCmpzX2FyY2hpdmVfZnJlZV9idWZmZXIoSlNSdW50aW1lKiBydCwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpIHsKICBzdHJ1Y3QgQXJjaGl2ZUluc3RhbmNlKiBhaW5zdCA9IG9wYXF1ZTsKICBKU19GcmVlVmFsdWVSVChydCwgYWluc3QtPmFyY2hpdmUpOwogIGpzX2ZyZWVfcnQocnQsIGFpbnN0KTsKfQoKc3RhdGljIHZvaWQKanNfYXJjaGl2ZV9wcm9ncmVzc19jYWxsYmFjayh2b2lkKiBvcGFxdWUpIHsKICBzdHJ1Y3QgQXJjaGl2ZUVudHJ5UmVmKiBhZXJlZiA9IG9wYXF1ZTsKCiAgSlNWYWx1ZSByZXQgPSBKU19DYWxsKGFlcmVmLT5jdHgsIGFlcmVmLT5jYWxsYmFjaywgSlNfVU5ERUZJTkVELCAyLCBhZXJlZi0+YXJncyk7CiAgSlNfRnJlZVZhbHVlKGFlcmVmLT5jdHgsIHJldCk7Cn0KCnN0cnVjdCBhcmNoaXZlKgpqc19hcmNoaXZlX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHN0cnVjdCBhcmNoaXZlKiBhcjsKICBhciA9IEpTX0dldE9wYXF1ZTIoY3R4LCB2YWx1ZSwganNfYXJjaGl2ZV9jbGFzc19pZCk7CiAgcmV0dXJuIGFyOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19hcmNoaXZlX3dyYXBfcHJvdG8oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBwcm90bywgc3RydWN0IGFyY2hpdmUqIGFyKSB7CiAgSlNWYWx1ZSBvYmo7CgogIGlmKGpzX2FyY2hpdmVfY2xhc3NfaWQgPT0gMCkKICAgIGpzX2FyY2hpdmVfaW5pdChjdHgsIDApOwogIGlmKEpTX0lzTnVsbChwcm90bykgfHwgSlNfSXNVbmRlZmluZWQocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIGFyY2hpdmVfcHJvdG8pOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfYXJjaGl2ZV9jbGFzc19pZCk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgYXIpOwoKICByZXR1cm4gb2JqOwpmYWlsOgogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIEpTVmFsdWUKanNfYXJjaGl2ZV93cmFwKEpTQ29udGV4dCogY3R4LCBzdHJ1Y3QgYXJjaGl2ZSogYXIpIHsKICByZXR1cm4ganNfYXJjaGl2ZV93cmFwX3Byb3RvKGN0eCwgYXJjaGl2ZV9wcm90bywgYXIpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19hcmNoaXZlX2Z1bmN0aW9ucyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGFyY2hpdmUqIGFyID0gMDsKICBKU1ZhbHVlIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCB0aGlzX3ZhbCwgInByb3RvdHlwZSIpOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgQVJDSElWRV9NRVRIT0RfUkVBRDogewogICAgICB1aW50MzJfdCBibG9ja19zaXplID0gMTAyNDA7CgogICAgICBpZighKGFyID0gYXJjaGl2ZV9yZWFkX25ldygpKSkKICAgICAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICAgICAgYXJjaGl2ZV9yZWFkX3N1cHBvcnRfY29tcHJlc3Npb25fYWxsKGFyKTsKICAgICAgYXJjaGl2ZV9yZWFkX3N1cHBvcnRfZmlsdGVyX2FsbChhcik7CiAgICAgIGFyY2hpdmVfcmVhZF9zdXBwb3J0X2Zvcm1hdF9hbGwoYXIpOwoKICAgICAgaWYoYXJnYyA+IDEgJiYgSlNfSXNOdW1iZXIoYXJndlsxXSkpIHsKICAgICAgICBKU19Ub1VpbnQzMihjdHgsICZibG9ja19zaXplLCBhcmd2WzFdKTsKICAgICAgfQogICAgICBpZihKU19Jc1N0cmluZyhhcmd2WzBdKSkgewogICAgICAgIHdjaGFyX3QqIGZpbGVuYW1lID0ganNfdG93c3RyaW5nKGN0eCwgYXJndlswXSk7CiAgICAgICAgaW50IHIgPSBhcmNoaXZlX3JlYWRfb3Blbl9maWxlbmFtZV93KGFyLCBmaWxlbmFtZSwgYmxvY2tfc2l6ZSk7CiAgICAgICAganNfZnJlZShjdHgsIGZpbGVuYW1lKTsKCiAgICAgICAgaWYociAhPSBBUkNISVZFX09LKSB7CiAgICAgICAgICByZXQgPSBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCBhcmNoaXZlX2Vycm9yX3N0cmluZyhhcikpOwogICAgICAgICAgYXJjaGl2ZV9yZWFkX2ZyZWUoYXIpOwogICAgICAgICAgcmV0dXJuIHJldDsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldCA9IGpzX2FyY2hpdmVfd3JhcF9wcm90byhjdHgsIHByb3RvLCBhcik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBBUkNISVZFX01FVEhPRF9XUklURTogewogICAgICBpZighKGFyID0gYXJjaGl2ZV93cml0ZV9uZXcoKSkpCiAgICAgICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgICAgIGlmKEpTX0lzU3RyaW5nKGFyZ3ZbMF0pKSB7CiAgICAgICAgd2NoYXJfdCogZmlsZW5hbWUgPSBqc190b3dzdHJpbmcoY3R4LCBhcmd2WzBdKTsKICAgICAgICBpbnQgciA9IGFyY2hpdmVfd3JpdGVfb3Blbl9maWxlbmFtZV93KGFyLCBmaWxlbmFtZSk7CiAgICAgICAganNfZnJlZShjdHgsIGZpbGVuYW1lKTsKCiAgICAgICAgaWYociAhPSBBUkNISVZFX09LKSB7CiAgICAgICAgICByZXQgPSBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCBhcmNoaXZlX2Vycm9yX3N0cmluZyhhcikpOwogICAgICAgICAgYXJjaGl2ZV9yZWFkX2ZyZWUoYXIpOwogICAgICAgICAgcmV0dXJuIHJldDsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0ID0ganNfYXJjaGl2ZV93cmFwX3Byb3RvKGN0eCwgcHJvdG8sIGFyKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19hcmNoaXZlX2dldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgYXJjaGl2ZSogYXI7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoYXIgPSBqc19hcmNoaXZlX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIEFSQ0hJVkVfUFJPUF9GT1JNQVQ6IHsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgYXJjaGl2ZV9mb3JtYXRfbmFtZShhcikpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgQVJDSElWRV9QUk9QX0NPTVBSRVNTSU9OOiB7CiAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIGFyY2hpdmVfY29tcHJlc3Npb25fbmFtZShhcikpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgQVJDSElWRV9QUk9QX0ZJTFRFUlM6IHsKICAgICAgaW50IGksIG51bV9maWx0ZXJzID0gYXJjaGl2ZV9maWx0ZXJfY291bnQoYXIpOwogICAgICByZXQgPSBKU19OZXdBcnJheShjdHgpOwogICAgICBmb3IoaSA9IDA7IGkgPCBudW1fZmlsdGVyczsgaSsrKSB7CiAgICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIGksIEpTX05ld1N0cmluZyhjdHgsIGFyY2hpdmVfZmlsdGVyX25hbWUoYXIsIGkpKSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEFSQ0hJVkVfUFJPUF9GSUxFQ09VTlQ6IHsKICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgYXJjaGl2ZV9maWxlX2NvdW50KGFyKSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19hcmNoaXZlX3NldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGludCBtYWdpYykgewogIHN0cnVjdCBhcmNoaXZlKiBhcjsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShhciA9IGpzX2FyY2hpdmVfZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfYXJjaGl2ZV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBvYmogPSBKU19VTkRFRklORUQ7CiAgSlNWYWx1ZSBwcm90bzsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgbmV3X3RhcmdldCwgInByb3RvdHlwZSIpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHByb3RvKSkKICAgIGdvdG8gZmFpbDsKCiAgcmV0dXJuIGpzX2FyY2hpdmVfd3JhcF9wcm90byhjdHgsIHByb3RvLCAwKTsKCmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19hcmNoaXZlX25leHQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIEJPT0wqIHBkb25lLCBpbnQgbWFnaWMpIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBzdHJ1Y3QgYXJjaGl2ZSogYXI7CiAgc3RydWN0IGFyY2hpdmVfZW50cnkqIGVudDsKICBpbnQgcmVzdWx0OwoKICBpZighKGFyID0ganNfYXJjaGl2ZV9kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKCEoZW50ID0gYXJjaGl2ZV9lbnRyeV9uZXcyKGFyKSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICByZXN1bHQgPSBhcmNoaXZlX3JlYWRfbmV4dF9oZWFkZXIyKGFyLCBlbnQpOwoKICBzd2l0Y2gocmVzdWx0KSB7CiAgICBjYXNlIEFSQ0hJVkVfRU9GOiAqcGRvbmUgPSBUUlVFOyByZXR1cm4gSlNfVU5ERUZJTkVEOwogICAgY2FzZSBBUkNISVZFX0ZBVEFMOiAqcGRvbmUgPSBUUlVFOyByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgYXJjaGl2ZV9lcnJvcl9zdHJpbmcoYXIpKTsKICB9CgogIGlmKHJlc3VsdCA9PSBBUkNISVZFX1dBUk4pIHsKICAgIGZwcmludGYoc3RkZXJyLCAiV0FSTklORzogJXNcbiIsIGFyY2hpdmVfZXJyb3Jfc3RyaW5nKGFyKSk7CiAgICBhcmNoaXZlX2NsZWFyX2Vycm9yKGFyKTsKICB9CgogICpwZG9uZSA9IEZBTFNFOwoKICByZXR1cm4ganNfYXJjaGl2ZWVudHJ5X3dyYXAoY3R4LCBlbnQpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19hcmNoaXZlX3JlYWQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBzdHJ1Y3QgYXJjaGl2ZSogYXI7CiAgdWludDhfdCogcHRyOwogIHNpemVfdCBsZW47CiAgc3NpemVfdCByOwogIHNpemVfdCBvZmZzZXQgPSAwLCBsZW5ndGggPSAwOwoKICBpZighKGFyID0ganNfYXJjaGl2ZV9kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKGFyZ2MgPCAxIHx8ICFqc19pc19hcnJheWJ1ZmZlcihjdHgsIGFyZ3ZbMF0pKSB7CiAgICB2b2lkKiBkYXRhOwogICAgc2l6ZV90IHNpemU7CiAgICBsYV9pbnQ2NF90IG9mZnNldDsKICAgIHN3aXRjaChhcmNoaXZlX3JlYWRfZGF0YV9ibG9jayhhciwgJmRhdGEsICZzaXplLCAmb2Zmc2V0KSkgewogICAgICBjYXNlIEFSQ0hJVkVfT0s6IHsKICAgICAgICBzdHJ1Y3QgQXJjaGl2ZUluc3RhbmNlKiBhYnVmID0ganNfbWFsbG9jKGN0eCwgc2l6ZW9mKHN0cnVjdCBBcmNoaXZlSW5zdGFuY2UpKTsKICAgICAgICBhYnVmLT5hcmNoaXZlID0gSlNfRHVwVmFsdWUoY3R4LCB0aGlzX3ZhbCk7CiAgICAgICAgcmV0ID0gSlNfTmV3QXJyYXlCdWZmZXIoY3R4LCBkYXRhLCBzaXplLCBqc19hcmNoaXZlX2ZyZWVfYnVmZmVyLCBhYnVmLCBGQUxTRSk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgY2FzZSBBUkNISVZFX0VPRjogewogICAgICAgIHJldCA9IEpTX05VTEw7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgY2FzZSBBUkNISVZFX0ZBVEFMOiB7CiAgICAgICAgcmV0ID0gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImxpYmFyY2hpdmUgZXJyb3I6ICVzIiwgYXJjaGl2ZV9lcnJvcl9zdHJpbmcoYXIpKTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgfQoKICAgIHJldHVybiByZXQ7CiAgfQoKICBpZighKHB0ciA9IEpTX0dldEFycmF5QnVmZmVyKGN0eCwgJmxlbiwgYXJndlswXSkpKQogICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJGYWlsZWQgZ2V0dGluZyBBcnJheUJ1ZmZlciBkYXRhIik7CgogIGlmKGFyZ2MgPj0gMiAmJiBKU19Jc051bWJlcihhcmd2WzFdKSkgewogICAgSlNfVG9JbmRleChjdHgsICZvZmZzZXQsIGFyZ3ZbMV0pOwogICAgaWYob2Zmc2V0ID4gbGVuKQogICAgICBvZmZzZXQgPSBsZW47CiAgfQoKICBsZW5ndGggPSBsZW4gLSBvZmZzZXQ7CgogIGlmKGFyZ2MgPj0gMyAmJiBKU19Jc051bWJlcihhcmd2WzJdKSkgewogICAgSlNfVG9JbmRleChjdHgsICZsZW5ndGgsIGFyZ3ZbMl0pOwogICAgaWYobGVuZ3RoID4gKGxlbiAtIG9mZnNldCkpCiAgICAgIGxlbmd0aCA9IChsZW4gLSBvZmZzZXQpOwogIH0KCiAgaWYoKHIgPSBhcmNoaXZlX3JlYWRfZGF0YShhciwgcHRyICsgb2Zmc2V0LCBsZW5ndGgpKSA+PSAwKQogICAgcmV0ID0gSlNfTmV3SW50NjQoY3R4LCByKTsKICBlbHNlCiAgICByZXQgPSBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAibGliYXJjaGl2ZSBlcnJvcjogJXMiLCBhcmNoaXZlX2Vycm9yX3N0cmluZyhhcikpOwogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2FyY2hpdmVfc2VlayhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIHN0cnVjdCBhcmNoaXZlKiBhcjsKICBpbnQ2NF90IG9mZnNldCA9IDA7CiAgaW50MzJfdCB3aGVuY2UgPSAwOwoKICBpZighKGFyID0ganNfYXJjaGl2ZV9kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIEpTX1RvSW50NjQoY3R4LCAmb2Zmc2V0LCBhcmd2WzBdKTsKICBKU19Ub0ludDMyKGN0eCwgJndoZW5jZSwgYXJndlsxXSk7CgogIHJldCA9IEpTX05ld0ludDY0KGN0eCwgYXJjaGl2ZV9zZWVrX2RhdGEoYXIsIG9mZnNldCwgd2hlbmNlKSk7CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfYXJjaGl2ZV9leHRyYWN0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgc3RydWN0IGFyY2hpdmUqIGFyOwogIHN0cnVjdCBhcmNoaXZlX2VudHJ5KiBlbnQ7CiAgaW50MzJfdCBmbGFnczsKICBzdHJ1Y3QgQXJjaGl2ZUVudHJ5UmVmKiBhZXJlZiA9IDA7CgogIGlmKCEoYXIgPSBqc19hcmNoaXZlX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgaWYoIShlbnQgPSBqc19hcmNoaXZlZW50cnlfZGF0YShjdHgsIGFyZ3ZbMF0pKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKGFyZ2MgPj0gMikKICAgIEpTX1RvSW50MzIoY3R4LCAmZmxhZ3MsIGFyZ3ZbMV0pOwoKICBpZihhcmdjID49IDMpIHsKICAgIGlmKCEoYWVyZWYgPSBqc19tYWxsb2MoY3R4LCBzaXplb2Yoc3RydWN0IEFyY2hpdmVFbnRyeVJlZikpKSkKICAgICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKICAgIGFlcmVmLT5jdHggPSBjdHg7CiAgICBhZXJlZi0+Y2FsbGJhY2sgPSBhcmd2WzJdOwogICAgYWVyZWYtPmFyZ3NbMF0gPSB0aGlzX3ZhbDsKICAgIGFlcmVmLT5hcmdzWzFdID0gYXJndlswXTsKCiAgICBhcmNoaXZlX3JlYWRfZXh0cmFjdF9zZXRfcHJvZ3Jlc3NfY2FsbGJhY2soYXIsIGpzX2FyY2hpdmVfcHJvZ3Jlc3NfY2FsbGJhY2ssIGFlcmVmKTsKICB9CgogIHJldCA9IEpTX05ld0ludDMyKGN0eCwgYXJjaGl2ZV9yZWFkX2V4dHJhY3QoYXIsIGVudCwgZmxhZ3MpKTsKCiAgaWYoYWVyZWYpIHsKICAgIGFyY2hpdmVfcmVhZF9leHRyYWN0X3NldF9wcm9ncmVzc19jYWxsYmFjayhhciwgMCwgMCk7CiAgICBqc19mcmVlKGN0eCwgYWVyZWYpOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfYXJjaGl2ZV9maWx0ZXJieXRlcyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIHN0cnVjdCBhcmNoaXZlKiBhcjsKICBpbnQzMl90IGluZGV4ID0gLTE7CgogIGlmKCEoYXIgPSBqc19hcmNoaXZlX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgaWYoYXJnYyA+PSAxKQogICAgSlNfVG9JbnQzMihjdHgsICZpbmRleCwgYXJndlswXSk7CgogIHJldCA9IEpTX05ld0ludDY0KGN0eCwgYXJjaGl2ZV9maWx0ZXJfYnl0ZXMoYXIsIGluZGV4KSk7CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2FyY2hpdmVfY2xvc2UoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBzdHJ1Y3QgYXJjaGl2ZSogYXI7CgogIGlmKCEoYXIgPSBqc19hcmNoaXZlX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBhcmNoaXZlX3JlYWRfY2xvc2UoYXIpKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfYXJjaGl2ZV92ZXJzaW9uKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgcmV0dXJuIEpTX05ld1N0cmluZyhjdHgsIGFyY2hpdmVfdmVyc2lvbl9kZXRhaWxzKCkpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19hcmNoaXZlX2l0ZXJhdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgcmV0dXJuIEpTX0R1cFZhbHVlKGN0eCwgdGhpc192YWwpOwp9CgpzdGF0aWMgdm9pZApqc19hcmNoaXZlX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIHN0cnVjdCBhcmNoaXZlKiBhciA9IEpTX0dldE9wYXF1ZSh2YWwsIGpzX2FyY2hpdmVfY2xhc3NfaWQpOwogIGlmKGFyKSB7CiAgICBhcmNoaXZlX2ZyZWUoYXIpOwogIH0KICBKU19GcmVlVmFsdWVSVChydCwgdmFsKTsKfQoKc3RhdGljIEpTQ2xhc3NEZWYganNfYXJjaGl2ZV9jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIkFyY2hpdmUiLAogICAgLmZpbmFsaXplciA9IGpzX2FyY2hpdmVfZmluYWxpemVyLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2FyY2hpdmVfZnVuY3NbXSA9IHsKICAgIEpTX0lURVJBVE9SX05FWFRfREVGKCJuZXh0IiwgMCwganNfYXJjaGl2ZV9uZXh0LCAwKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJmb3JtYXQiLCBqc19hcmNoaXZlX2dldHRlciwgMCwgQVJDSElWRV9QUk9QX0ZPUk1BVCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiY29tcHJlc3Npb24iLCBqc19hcmNoaXZlX2dldHRlciwgMCwgQVJDSElWRV9QUk9QX0NPTVBSRVNTSU9OKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJmaWx0ZXJzIiwganNfYXJjaGl2ZV9nZXR0ZXIsIDAsIEFSQ0hJVkVfUFJPUF9GSUxURVJTKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJmaWxlQ291bnQiLCBqc19hcmNoaXZlX2dldHRlciwgMCwgQVJDSElWRV9QUk9QX0ZJTEVDT1VOVCksCiAgICBKU19DRlVOQ19ERUYoInJlYWQiLCAxLCBqc19hcmNoaXZlX3JlYWQpLAogICAgSlNfQ0ZVTkNfREVGKCJzZWVrIiwgMiwganNfYXJjaGl2ZV9zZWVrKSwKICAgIEpTX0NGVU5DX0RFRigiZXh0cmFjdCIsIDEsIGpzX2FyY2hpdmVfZXh0cmFjdCksCiAgICBKU19DRlVOQ19ERUYoImZpbHRlckJ5dGVzIiwgMSwganNfYXJjaGl2ZV9maWx0ZXJieXRlcyksCiAgICBKU19DRlVOQ19ERUYoImNsb3NlIiwgMCwganNfYXJjaGl2ZV9jbG9zZSksCiAgICBKU19DRlVOQ19ERUYoIltTeW1ib2wuaXRlcmF0b3JdIiwgMCwganNfYXJjaGl2ZV9pdGVyYXRvciksCgogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJBcmNoaXZlIiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2FyY2hpdmVfc3RhdGljX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInJlYWQiLCAxLCBqc19hcmNoaXZlX2Z1bmN0aW9ucywgQVJDSElWRV9NRVRIT0RfUkVBRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoIndyaXRlIiwgMSwganNfYXJjaGl2ZV9mdW5jdGlvbnMsIEFSQ0hJVkVfTUVUSE9EX1dSSVRFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJTRUVLX1NFVCIsIFNFRUtfU0VULCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlNFRUtfQ1VSIiwgU0VFS19DVVIsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiU0VFS19FTkQiLCBTRUVLX0VORCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0VPRiIsIEFSQ0hJVkVfRU9GLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX09LIiwgQVJDSElWRV9PSywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9SRVRSWSIsIEFSQ0hJVkVfUkVUUlksIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfV0FSTiIsIEFSQ0hJVkVfV0FSTiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GQUlMRUQiLCBBUkNISVZFX0ZBSUxFRCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GQVRBTCIsIEFSQ0hJVkVfRkFUQUwsIDApLAojaWZkZWYgQVJDSElWRV9GSUxURVJfTk9ORQogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRklMVEVSX05PTkUiLCBBUkNISVZFX0ZJTFRFUl9OT05FLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZJTFRFUl9HWklQCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GSUxURVJfR1pJUCIsIEFSQ0hJVkVfRklMVEVSX0daSVAsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRklMVEVSX0JaSVAyCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GSUxURVJfQlpJUDIiLCBBUkNISVZFX0ZJTFRFUl9CWklQMiwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GSUxURVJfQ09NUFJFU1MKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZJTFRFUl9DT01QUkVTUyIsIEFSQ0hJVkVfRklMVEVSX0NPTVBSRVNTLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZJTFRFUl9QUk9HUkFNCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GSUxURVJfUFJPR1JBTSIsIEFSQ0hJVkVfRklMVEVSX1BST0dSQU0sIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRklMVEVSX0xaTUEKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZJTFRFUl9MWk1BIiwgQVJDSElWRV9GSUxURVJfTFpNQSwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GSUxURVJfWFoKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZJTFRFUl9YWiIsIEFSQ0hJVkVfRklMVEVSX1haLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZJTFRFUl9VVQogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRklMVEVSX1VVIiwgQVJDSElWRV9GSUxURVJfVVUsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRklMVEVSX1JQTQogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRklMVEVSX1JQTSIsIEFSQ0hJVkVfRklMVEVSX1JQTSwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GSUxURVJfTFpJUAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRklMVEVSX0xaSVAiLCBBUkNISVZFX0ZJTFRFUl9MWklQLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZJTFRFUl9MUlpJUAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRklMVEVSX0xSWklQIiwgQVJDSElWRV9GSUxURVJfTFJaSVAsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRklMVEVSX0xaT1AKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZJTFRFUl9MWk9QIiwgQVJDSElWRV9GSUxURVJfTFpPUCwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GSUxURVJfR1JaSVAKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZJTFRFUl9HUlpJUCIsIEFSQ0hJVkVfRklMVEVSX0dSWklQLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZJTFRFUl9MWjQKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZJTFRFUl9MWjQiLCBBUkNISVZFX0ZJTFRFUl9MWjQsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRklMVEVSX1pTVEQKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZJTFRFUl9aU1REIiwgQVJDSElWRV9GSUxURVJfWlNURCwgMCksCiNlbmRpZgoKICAjaWZkZWYgQVJDSElWRV9GT1JNQVRfQkFTRV9NQVNLCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQkFTRV9NQVNLIiwgQVJDSElWRV9GT1JNQVRfQkFTRV9NQVNLLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9DUElPCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQ1BJTyIsIEFSQ0hJVkVfRk9STUFUX0NQSU8sIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX0NQSU9fUE9TSVgKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9DUElPX1BPU0lYIiwgQVJDSElWRV9GT1JNQVRfQ1BJT19QT1NJWCwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfQ1BJTwogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0NQSU8iLCBBUkNISVZFX0ZPUk1BVF9DUElPLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9DUElPX0JJTl9MRQogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0NQSU9fQklOX0xFIiwgQVJDSElWRV9GT1JNQVRfQ1BJT19CSU5fTEUsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX0NQSU8KICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9DUElPIiwgQVJDSElWRV9GT1JNQVRfQ1BJTywgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfQ1BJT19CSU5fQkUKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9DUElPX0JJTl9CRSIsIEFSQ0hJVkVfRk9STUFUX0NQSU9fQklOX0JFLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9DUElPCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQ1BJTyIsIEFSQ0hJVkVfRk9STUFUX0NQSU8sIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX0NQSU9fU1ZSNF9OT0NSQwogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0NQSU9fU1ZSNF9OT0NSQyIsIEFSQ0hJVkVfRk9STUFUX0NQSU9fU1ZSNF9OT0NSQywgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfQ1BJTwogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0NQSU8iLCBBUkNISVZFX0ZPUk1BVF9DUElPLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9DUElPX1NWUjRfQ1JDCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQ1BJT19TVlI0X0NSQyIsIEFSQ0hJVkVfRk9STUFUX0NQSU9fU1ZSNF9DUkMsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX0NQSU8KICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9DUElPIiwgQVJDSElWRV9GT1JNQVRfQ1BJTywgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfQ1BJT19BRklPX0xBUkdFCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQ1BJT19BRklPX0xBUkdFIiwgQVJDSElWRV9GT1JNQVRfQ1BJT19BRklPX0xBUkdFLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9DUElPCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQ1BJTyIsIEFSQ0hJVkVfRk9STUFUX0NQSU8sIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX1NIQVIKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9TSEFSIiwgQVJDSElWRV9GT1JNQVRfU0hBUiwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfU0hBUl9CQVNFCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfU0hBUl9CQVNFIiwgQVJDSElWRV9GT1JNQVRfU0hBUl9CQVNFLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9TSEFSCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfU0hBUiIsIEFSQ0hJVkVfRk9STUFUX1NIQVIsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX1NIQVJfRFVNUAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX1NIQVJfRFVNUCIsIEFSQ0hJVkVfRk9STUFUX1NIQVJfRFVNUCwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfU0hBUgogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX1NIQVIiLCBBUkNISVZFX0ZPUk1BVF9TSEFSLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9UQVIKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9UQVIiLCBBUkNISVZFX0ZPUk1BVF9UQVIsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX1RBUl9VU1RBUgogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX1RBUl9VU1RBUiIsIEFSQ0hJVkVfRk9STUFUX1RBUl9VU1RBUiwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfVEFSCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfVEFSIiwgQVJDSElWRV9GT1JNQVRfVEFSLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9UQVJfUEFYX0lOVEVSQ0hBTkdFCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfVEFSX1BBWF9JTlRFUkNIQU5HRSIsIEFSQ0hJVkVfRk9STUFUX1RBUl9QQVhfSU5URVJDSEFOR0UsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX1RBUgogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX1RBUiIsIEFSQ0hJVkVfRk9STUFUX1RBUiwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfVEFSX1BBWF9SRVNUUklDVEVECiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfVEFSX1BBWF9SRVNUUklDVEVEIiwgQVJDSElWRV9GT1JNQVRfVEFSX1BBWF9SRVNUUklDVEVELCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9UQVIKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9UQVIiLCBBUkNISVZFX0ZPUk1BVF9UQVIsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX1RBUl9HTlVUQVIKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9UQVJfR05VVEFSIiwgQVJDSElWRV9GT1JNQVRfVEFSX0dOVVRBUiwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfVEFSCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfVEFSIiwgQVJDSElWRV9GT1JNQVRfVEFSLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9JU085NjYwCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfSVNPOTY2MCIsIEFSQ0hJVkVfRk9STUFUX0lTTzk2NjAsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX0lTTzk2NjBfUk9DS1JJREdFCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfSVNPOTY2MF9ST0NLUklER0UiLCBBUkNISVZFX0ZPUk1BVF9JU085NjYwX1JPQ0tSSURHRSwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfSVNPOTY2MAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0lTTzk2NjAiLCBBUkNISVZFX0ZPUk1BVF9JU085NjYwLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9aSVAKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9aSVAiLCBBUkNISVZFX0ZPUk1BVF9aSVAsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX0VNUFRZCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfRU1QVFkiLCBBUkNISVZFX0ZPUk1BVF9FTVBUWSwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfQVIKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9BUiIsIEFSQ0hJVkVfRk9STUFUX0FSLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9BUl9HTlUKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9BUl9HTlUiLCBBUkNISVZFX0ZPUk1BVF9BUl9HTlUsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX0FSCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQVIiLCBBUkNISVZFX0ZPUk1BVF9BUiwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfQVJfQlNECiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQVJfQlNEIiwgQVJDSElWRV9GT1JNQVRfQVJfQlNELCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9BUgogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0FSIiwgQVJDSElWRV9GT1JNQVRfQVIsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX01UUkVFCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfTVRSRUUiLCBBUkNISVZFX0ZPUk1BVF9NVFJFRSwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfUkFXCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfUkFXIiwgQVJDSElWRV9GT1JNQVRfUkFXLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9YQVIKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9YQVIiLCBBUkNISVZFX0ZPUk1BVF9YQVIsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUX0xIQQogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX0xIQSIsIEFSQ0hJVkVfRk9STUFUX0xIQSwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfQ0FCCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9GT1JNQVRfQ0FCIiwgQVJDSElWRV9GT1JNQVRfQ0FCLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9SQVIKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9SQVIiLCBBUkNISVZFX0ZPUk1BVF9SQVIsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRk9STUFUXzdaSVAKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF83WklQIiwgQVJDSElWRV9GT1JNQVRfN1pJUCwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9GT1JNQVRfV0FSQwogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRk9STUFUX1dBUkMiLCBBUkNISVZFX0ZPUk1BVF9XQVJDLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0ZPUk1BVF9SQVJfVjUKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0ZPUk1BVF9SQVJfVjUiLCBBUkNISVZFX0ZPUk1BVF9SQVJfVjUsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfUkVBRF9GT1JNQVRfQ0FQU19OT05FCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9SRUFEX0ZPUk1BVF9DQVBTX05PTkUiLCBBUkNISVZFX1JFQURfRk9STUFUX0NBUFNfTk9ORSwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9SRUFEX0ZPUk1BVF9DQVBTX0VOQ1JZUFRfREFUQQogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfUkVBRF9GT1JNQVRfQ0FQU19FTkNSWVBUX0RBVEEiLCBBUkNISVZFX1JFQURfRk9STUFUX0NBUFNfRU5DUllQVF9EQVRBLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX1JFQURfRk9STUFUX0NBUFNfRU5DUllQVF9NRVRBREFUQQogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfUkVBRF9GT1JNQVRfQ0FQU19FTkNSWVBUX01FVEFEQVRBIiwgQVJDSElWRV9SRUFEX0ZPUk1BVF9DQVBTX0VOQ1JZUFRfTUVUQURBVEEsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfUkVBRF9GT1JNQVRfRU5DUllQVElPTl9VTlNVUFBPUlRFRAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfUkVBRF9GT1JNQVRfRU5DUllQVElPTl9VTlNVUFBPUlRFRCIsIEFSQ0hJVkVfUkVBRF9GT1JNQVRfRU5DUllQVElPTl9VTlNVUFBPUlRFRCwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9SRUFEX0ZPUk1BVF9FTkNSWVBUSU9OX0RPTlRfS05PVwogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfUkVBRF9GT1JNQVRfRU5DUllQVElPTl9ET05UX0tOT1ciLCBBUkNISVZFX1JFQURfRk9STUFUX0VOQ1JZUFRJT05fRE9OVF9LTk9XLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX1JFQURfRk9STUFUX0VOQ1JZUFRJT05fVU5TVVBQT1JURUQKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX1JFQURfRk9STUFUX0VOQ1JZUFRJT05fVU5TVVBQT1JURUQiLCBBUkNISVZFX1JFQURfRk9STUFUX0VOQ1JZUFRJT05fVU5TVVBQT1JURUQsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfUkVBRF9GT1JNQVRfRU5DUllQVElPTl9ET05UX0tOT1cKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX1JFQURfRk9STUFUX0VOQ1JZUFRJT05fRE9OVF9LTk9XIiwgQVJDSElWRV9SRUFEX0ZPUk1BVF9FTkNSWVBUSU9OX0RPTlRfS05PVywgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9FWFRSQUNUX09XTkVSCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX09XTkVSIiwgQVJDSElWRV9FWFRSQUNUX09XTkVSLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0VYVFJBQ1RfUEVSTQogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9QRVJNIiwgQVJDSElWRV9FWFRSQUNUX1BFUk0sIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRVhUUkFDVF9USU1FCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX1RJTUUiLCBBUkNISVZFX0VYVFJBQ1RfVElNRSwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9FWFRSQUNUX05PX09WRVJXUklURQogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9OT19PVkVSV1JJVEUiLCBBUkNISVZFX0VYVFJBQ1RfTk9fT1ZFUldSSVRFLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0VYVFJBQ1RfVU5MSU5LCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX1VOTElOSyIsIEFSQ0hJVkVfRVhUUkFDVF9VTkxJTkssIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRVhUUkFDVF9BQ0wKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0VYVFJBQ1RfQUNMIiwgQVJDSElWRV9FWFRSQUNUX0FDTCwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9FWFRSQUNUX0ZGTEFHUwogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9GRkxBR1MiLCBBUkNISVZFX0VYVFJBQ1RfRkZMQUdTLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0VYVFJBQ1RfWEFUVFIKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0VYVFJBQ1RfWEFUVFIiLCBBUkNISVZFX0VYVFJBQ1RfWEFUVFIsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRVhUUkFDVF9VTkxJTksKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0VYVFJBQ1RfVU5MSU5LIiwgQVJDSElWRV9FWFRSQUNUX1VOTElOSywgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9FWFRSQUNUX1NFQ1VSRV9TWU1MSU5LUwogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9TRUNVUkVfU1lNTElOS1MiLCBBUkNISVZFX0VYVFJBQ1RfU0VDVVJFX1NZTUxJTktTLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0VYVFJBQ1RfU0VDVVJFX05PRE9URE9UCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX1NFQ1VSRV9OT0RPVERPVCIsIEFSQ0hJVkVfRVhUUkFDVF9TRUNVUkVfTk9ET1RET1QsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRVhUUkFDVF9OT19BVVRPRElSCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX05PX0FVVE9ESVIiLCBBUkNISVZFX0VYVFJBQ1RfTk9fQVVUT0RJUiwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9FWFRSQUNUX05PX09WRVJXUklURV9ORVdFUgogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9OT19PVkVSV1JJVEVfTkVXRVIiLCBBUkNISVZFX0VYVFJBQ1RfTk9fT1ZFUldSSVRFX05FV0VSLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0VYVFJBQ1RfU1BBUlNFCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX1NQQVJTRSIsIEFSQ0hJVkVfRVhUUkFDVF9TUEFSU0UsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRVhUUkFDVF9NQUNfTUVUQURBVEEKICAgIEpTX1BST1BfSU5UMzJfREVGKCJBUkNISVZFX0VYVFJBQ1RfTUFDX01FVEFEQVRBIiwgQVJDSElWRV9FWFRSQUNUX01BQ19NRVRBREFUQSwgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9FWFRSQUNUX05PX0hGU19DT01QUkVTU0lPTgogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9OT19IRlNfQ09NUFJFU1NJT04iLCBBUkNISVZFX0VYVFJBQ1RfTk9fSEZTX0NPTVBSRVNTSU9OLCAwKSwKI2VuZGlmCiNpZmRlZiBBUkNISVZFX0VYVFJBQ1RfSEZTX0NPTVBSRVNTSU9OX0ZPUkNFRAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9IRlNfQ09NUFJFU1NJT05fRk9SQ0VEIiwgQVJDSElWRV9FWFRSQUNUX0hGU19DT01QUkVTU0lPTl9GT1JDRUQsIDApLAojZW5kaWYKI2lmZGVmIEFSQ0hJVkVfRVhUUkFDVF9TRUNVUkVfTk9BQlNPTFVURVBBVEhTCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQVJDSElWRV9FWFRSQUNUX1NFQ1VSRV9OT0FCU09MVVRFUEFUSFMiLCBBUkNISVZFX0VYVFJBQ1RfU0VDVVJFX05PQUJTT0xVVEVQQVRIUywgMCksCiNlbmRpZgojaWZkZWYgQVJDSElWRV9FWFRSQUNUX0NMRUFSX05PQ0hBTkdFX0ZGTEFHUwogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFSQ0hJVkVfRVhUUkFDVF9DTEVBUl9OT0NIQU5HRV9GRkxBR1MiLCBBUkNISVZFX0VYVFJBQ1RfQ0xFQVJfTk9DSEFOR0VfRkZMQUdTLCAwKSwKI2VuZGlmCgogICAgSlNfQ0dFVFNFVF9ERUYoInZlcnNpb24iLCBqc19hcmNoaXZlX3ZlcnNpb24sIDApLAp9OwoKc3RydWN0IGFyY2hpdmVfZW50cnkqCmpzX2FyY2hpdmVlbnRyeV9kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBzdHJ1Y3QgYXJjaGl2ZV9lbnRyeSogZW50OwogIGVudCA9IEpTX0dldE9wYXF1ZTIoY3R4LCB2YWx1ZSwganNfYXJjaGl2ZWVudHJ5X2NsYXNzX2lkKTsKICByZXR1cm4gZW50Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19hcmNoaXZlZW50cnlfd3JhcF9wcm90byhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHByb3RvLCBzdHJ1Y3QgYXJjaGl2ZV9lbnRyeSogZW50KSB7CiAgSlNWYWx1ZSBvYmo7CgogIGlmKGpzX2FyY2hpdmVfY2xhc3NfaWQgPT0gMCkKICAgIGpzX2FyY2hpdmVfaW5pdChjdHgsIDApOwoKICBpZihqc19pc19udWxsaXNoKGN0eCwgcHJvdG8pKQogICAgcHJvdG8gPSBhcmNoaXZlZW50cnlfcHJvdG87CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBqc19hcmNoaXZlZW50cnlfY2xhc3NfaWQpOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIGVudCk7CgogIHJldHVybiBvYmo7CmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19hcmNoaXZlZW50cnlfd3JhcChKU0NvbnRleHQqIGN0eCwgc3RydWN0IGFyY2hpdmVfZW50cnkqIGVudCkgewogIHJldHVybiBqc19hcmNoaXZlZW50cnlfd3JhcF9wcm90byhjdHgsIGFyY2hpdmVlbnRyeV9wcm90bywgZW50KTsKfQoKc3RhdGljIEpTVmFsdWUKanNfYXJjaGl2ZWVudHJ5X2dldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgYXJjaGl2ZV9lbnRyeSogZW50OwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGVudCA9IGpzX2FyY2hpdmVlbnRyeV9kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiByZXQ7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBFTlRSWV9BVElNRTogewogICAgICBpZihhcmNoaXZlX2VudHJ5X2F0aW1lX2lzX3NldChlbnQpKQogICAgICAgIHJldCA9IGpzX2RhdGVfZnJvbV90aW1lX25zKGN0eCwgYXJjaGl2ZV9lbnRyeV9hdGltZShlbnQpLCBhcmNoaXZlX2VudHJ5X2F0aW1lX25zZWMoZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9DVElNRTogewogICAgICBpZihhcmNoaXZlX2VudHJ5X2N0aW1lX2lzX3NldChlbnQpKQogICAgICAgIHJldCA9IGpzX2RhdGVfZnJvbV90aW1lX25zKGN0eCwgYXJjaGl2ZV9lbnRyeV9jdGltZShlbnQpLCBhcmNoaXZlX2VudHJ5X2N0aW1lX25zZWMoZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9NVElNRTogewogICAgICBpZihhcmNoaXZlX2VudHJ5X210aW1lX2lzX3NldChlbnQpKQogICAgICAgIHJldCA9IGpzX2RhdGVfZnJvbV90aW1lX25zKGN0eCwgYXJjaGl2ZV9lbnRyeV9tdGltZShlbnQpLCBhcmNoaXZlX2VudHJ5X210aW1lX25zZWMoZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9CSVJUSFRJTUU6IHsKICAgICAgaWYoYXJjaGl2ZV9lbnRyeV9iaXJ0aHRpbWVfaXNfc2V0KGVudCkpCiAgICAgICAgcmV0ID0ganNfZGF0ZV9mcm9tX3RpbWVfbnMoY3R4LCBhcmNoaXZlX2VudHJ5X2JpcnRodGltZShlbnQpLCBhcmNoaXZlX2VudHJ5X2JpcnRodGltZV9uc2VjKGVudCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5UUllfREVWOiB7CiAgICAgIGlmKGFyY2hpdmVfZW50cnlfZGV2X2lzX3NldChlbnQpKQogICAgICAgIHJldCA9IEpTX05ld0ludDY0KGN0eCwgYXJjaGl2ZV9lbnRyeV9kZXYoZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9ERVZNQUpPUjogewogICAgICBpZihhcmNoaXZlX2VudHJ5X2Rldl9pc19zZXQoZW50KSkKICAgICAgICByZXQgPSBKU19OZXdJbnQ2NChjdHgsIGFyY2hpdmVfZW50cnlfZGV2bWFqb3IoZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9ERVZNSU5PUjogewogICAgICBpZihhcmNoaXZlX2VudHJ5X2Rldl9pc19zZXQoZW50KSkKICAgICAgICByZXQgPSBKU19OZXdJbnQ2NChjdHgsIGFyY2hpdmVfZW50cnlfZGV2bWlub3IoZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9GSUxFVFlQRTogewogICAgICByZXQgPSBKU19OZXdJbnQ2NChjdHgsIGFyY2hpdmVfZW50cnlfZmlsZXR5cGUoZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9GRkxBR1M6IHsKICAgICAgY29uc3QgY2hhciogc3RyOwogICAgICBpZigoc3RyID0gYXJjaGl2ZV9lbnRyeV9mZmxhZ3NfdGV4dChlbnQpKSkKICAgICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBzdHIpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5UUllfR0lEOiB7CiAgICAgIHJldCA9IEpTX05ld0ludDY0KGN0eCwgYXJjaGl2ZV9lbnRyeV9naWQoZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9HTkFNRTogewogICAgICBjb25zdCBjaGFyKiBzdHI7CiAgICAgIGlmKChzdHIgPSBhcmNoaXZlX2VudHJ5X2duYW1lX3V0ZjgoZW50KSkpCiAgICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgc3RyKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX0hBUkRMSU5LOiB7CiAgICAgIGNvbnN0IGNoYXIqIHN0cjsKICAgICAgaWYoKHN0ciA9IGFyY2hpdmVfZW50cnlfaGFyZGxpbmtfdXRmOChlbnQpKSkKICAgICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBzdHIpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5UUllfSU5POiB7CiAgICAgIGlmKGFyY2hpdmVfZW50cnlfaW5vX2lzX3NldChlbnQpKQogICAgICAgIHJldCA9IEpTX05ld0ludDY0KGN0eCwgYXJjaGl2ZV9lbnRyeV9pbm8oZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9MSU5LOiB7CiAgICAgIC8vIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIGFyY2hpdmVfZW50cnlfbGlua191dGY4KGVudCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5UUllfTU9ERTogewogICAgICByZXQgPSBKU19OZXdVaW50MzIoY3R4LCBhcmNoaXZlX2VudHJ5X21vZGUoZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9OTElOSzogewogICAgICByZXQgPSBKU19OZXdVaW50MzIoY3R4LCBhcmNoaXZlX2VudHJ5X25saW5rKGVudCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5UUllfUEFUSE5BTUU6IHsKICAgICAgY29uc3QgY2hhciogc3RyOwogICAgICBpZigoc3RyID0gYXJjaGl2ZV9lbnRyeV9wYXRobmFtZV91dGY4KGVudCkpKQogICAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIHN0cik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9QRVJNOiB7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIGFyY2hpdmVfZW50cnlfcGVybShlbnQpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX1JERVY6IHsKICAgICAgcmV0ID0gSlNfTmV3SW50NjQoY3R4LCBhcmNoaXZlX2VudHJ5X3JkZXYoZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9SREVWTUFKT1I6IHsKICAgICAgcmV0ID0gSlNfTmV3SW50NjQoY3R4LCBhcmNoaXZlX2VudHJ5X3JkZXZtYWpvcihlbnQpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX1JERVZNSU5PUjogewogICAgICByZXQgPSBKU19OZXdJbnQ2NChjdHgsIGFyY2hpdmVfZW50cnlfcmRldm1pbm9yKGVudCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5UUllfU0laRTogewogICAgICBpZihhcmNoaXZlX2VudHJ5X3NpemVfaXNfc2V0KGVudCkpCiAgICAgICAgcmV0ID0gSlNfTmV3SW50NjQoY3R4LCBhcmNoaXZlX2VudHJ5X3NpemUoZW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9TWU1MSU5LOiB7CiAgICAgIGNvbnN0IGNoYXIqIHN0cjsKICAgICAgaWYoKHN0ciA9IGFyY2hpdmVfZW50cnlfc3ltbGlua191dGY4KGVudCkpKQogICAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIHN0cik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9VSUQ6IHsKICAgICAgcmV0ID0gSlNfTmV3SW50NjQoY3R4LCBhcmNoaXZlX2VudHJ5X3VpZChlbnQpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX1VOQU1FOiB7CiAgICAgIGNvbnN0IGNoYXIqIHN0cjsKICAgICAgaWYoKHN0ciA9IGFyY2hpdmVfZW50cnlfdW5hbWVfdXRmOChlbnQpKSkKICAgICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBzdHIpOwogICAgICBicmVhazsKICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfYXJjaGl2ZWVudHJ5X3NldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGludCBtYWdpYykgewogIHN0cnVjdCBhcmNoaXZlX2VudHJ5KiBlbnQ7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZW50ID0ganNfYXJjaGl2ZWVudHJ5X2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIEVOVFJZX0FUSU1FOiB7CiAgICAgIGlmKGpzX2lzX251bGxpc2goY3R4LCB2YWx1ZSkpIHsKICAgICAgICBhcmNoaXZlX2VudHJ5X3Vuc2V0X2F0aW1lKGVudCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc3RydWN0IHRpbWVzcGVjIHRzID0ganNfZGF0ZV90aW1lc3BlYyhjdHgsIHZhbHVlKTsKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9hdGltZShlbnQsIHRzLnR2X3NlYywgdHMudHZfbnNlYyk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX0NUSU1FOiB7CiAgICAgIGlmKGpzX2lzX251bGxpc2goY3R4LCB2YWx1ZSkpIHsKICAgICAgICBhcmNoaXZlX2VudHJ5X3Vuc2V0X2N0aW1lKGVudCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc3RydWN0IHRpbWVzcGVjIHRzID0ganNfZGF0ZV90aW1lc3BlYyhjdHgsIHZhbHVlKTsKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9jdGltZShlbnQsIHRzLnR2X3NlYywgdHMudHZfbnNlYyk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX01USU1FOiB7CiAgICAgIGlmKGpzX2lzX251bGxpc2goY3R4LCB2YWx1ZSkpIHsKICAgICAgICBhcmNoaXZlX2VudHJ5X3Vuc2V0X210aW1lKGVudCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc3RydWN0IHRpbWVzcGVjIHRzID0ganNfZGF0ZV90aW1lc3BlYyhjdHgsIHZhbHVlKTsKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9tdGltZShlbnQsIHRzLnR2X3NlYywgdHMudHZfbnNlYyk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX0JJUlRIVElNRTogewogICAgICBpZihqc19pc19udWxsaXNoKGN0eCwgdmFsdWUpKSB7CiAgICAgICAgYXJjaGl2ZV9lbnRyeV91bnNldF9iaXJ0aHRpbWUoZW50KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBzdHJ1Y3QgdGltZXNwZWMgdHMgPSBqc19kYXRlX3RpbWVzcGVjKGN0eCwgdmFsdWUpOwogICAgICAgIGFyY2hpdmVfZW50cnlfc2V0X2JpcnRodGltZShlbnQsIHRzLnR2X3NlYywgdHMudHZfbnNlYyk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX0RFVjogewogICAgICBpbnQ2NF90IG47CiAgICAgIGlmKCFKU19Ub0ludDY0KGN0eCwgJm4sIHZhbHVlKSkKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9kZXYoZW50LCBuKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX0RFVk1BSk9SOiB7CiAgICAgIGludDY0X3QgbjsKICAgICAgaWYoIUpTX1RvSW50NjQoY3R4LCAmbiwgdmFsdWUpKQogICAgICAgIGFyY2hpdmVfZW50cnlfc2V0X2Rldm1ham9yKGVudCwgbik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9ERVZNSU5PUjogewogICAgICBpbnQ2NF90IG47CiAgICAgIGlmKCFKU19Ub0ludDY0KGN0eCwgJm4sIHZhbHVlKSkKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9kZXZtaW5vcihlbnQsIG4pOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5UUllfRklMRVRZUEU6IHsKICAgICAgdWludDMyX3QgbjsKICAgICAgaWYoIUpTX1RvVWludDMyKGN0eCwgJm4sIHZhbHVlKSkKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9maWxldHlwZShlbnQsIG4pOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5UUllfRkZMQUdTOiB7CiAgICAgIGlmKEpTX0lzU3RyaW5nKHZhbHVlKSkgewogICAgICAgIGNvbnN0IGNoYXIqIHN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKTsKICAgICAgICBhcmNoaXZlX2VudHJ5X2NvcHlfZmZsYWdzX3RleHQoZW50LCBzdHIpOwogICAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKICAgICAgfSBlbHNlIGlmKEpTX0lzQXJyYXkoY3R4LCB2YWx1ZSkpIHsKICAgICAgICBKU1ZhbHVlIGFyclsyXSA9IHtKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHZhbHVlLCAwKSwgSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCB2YWx1ZSwgMSl9OwoKICAgICAgICB1aW50MzJfdCBzZXQgPSAwLCBjbHIgPSAwOwogICAgICAgIGlmKCFKU19Ub1VpbnQzMihjdHgsICZzZXQsIGFyclswXSkgJiYgIUpTX1RvVWludDMyKGN0eCwgJmNsciwgYXJyWzFdKSkKICAgICAgICAgIGFyY2hpdmVfZW50cnlfc2V0X2ZmbGFncyhlbnQsIHNldCwgY2xyKTsKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBhcnJbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGFyclsxXSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYXJjaGl2ZV9lbnRyeV9jb3B5X2ZmbGFnc190ZXh0KGVudCwgMCk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX0dJRDogewogICAgICBpbnQ2NF90IG47CiAgICAgIGlmKCFKU19Ub0ludDY0KGN0eCwgJm4sIHZhbHVlKSkKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9naWQoZW50LCBuKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX0dOQU1FOiB7CiAgICAgIGlmKGpzX2lzX251bGxpc2goY3R4LCB2YWx1ZSkpIHsKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9nbmFtZV91dGY4KGVudCwgMCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc3QgY2hhciogc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpOwogICAgICAgIGFyY2hpdmVfZW50cnlfc2V0X2duYW1lX3V0ZjgoZW50LCBzdHIpOwogICAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5UUllfSEFSRExJTks6IHsKICAgICAgaWYoanNfaXNfbnVsbGlzaChjdHgsIHZhbHVlKSkgewogICAgICAgIGFyY2hpdmVfZW50cnlfc2V0X2hhcmRsaW5rX3V0ZjgoZW50LCAwKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zdCBjaGFyKiBzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICAgICAgYXJjaGl2ZV9lbnRyeV9zZXRfaGFyZGxpbmtfdXRmOChlbnQsIHN0cik7CiAgICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9JTk86IHsKICAgICAgaW50NjRfdCBuOwogICAgICBpZighSlNfVG9JbnQ2NChjdHgsICZuLCB2YWx1ZSkpCiAgICAgICAgYXJjaGl2ZV9lbnRyeV9zZXRfaW5vKGVudCwgbik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9MSU5LOiB7CiAgICAgIGlmKGpzX2lzX251bGxpc2goY3R4LCB2YWx1ZSkpIHsKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9saW5rX3V0ZjgoZW50LCAwKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zdCBjaGFyKiBzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICAgICAgYXJjaGl2ZV9lbnRyeV9zZXRfbGlua191dGY4KGVudCwgc3RyKTsKICAgICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX01PREU6IHsKICAgICAgdWludDMyX3QgbjsKICAgICAgaWYoIUpTX1RvVWludDMyKGN0eCwgJm4sIHZhbHVlKSkKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9tb2RlKGVudCwgbik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9OTElOSzogewogICAgICB1aW50MzJfdCBuOwogICAgICBpZighSlNfVG9VaW50MzIoY3R4LCAmbiwgdmFsdWUpKQogICAgICAgIGFyY2hpdmVfZW50cnlfc2V0X25saW5rKGVudCwgbik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9QQVRITkFNRTogewogICAgICBpZihqc19pc19udWxsaXNoKGN0eCwgdmFsdWUpKSB7CiAgICAgICAgYXJjaGl2ZV9lbnRyeV9zZXRfcGF0aG5hbWVfdXRmOChlbnQsIDApOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnN0IGNoYXIqIHN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKTsKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9wYXRobmFtZV91dGY4KGVudCwgc3RyKTsKICAgICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX1BFUk06IHsKICAgICAgdWludDMyX3QgbjsKICAgICAgaWYoIUpTX1RvVWludDMyKGN0eCwgJm4sIHZhbHVlKSkKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9wZXJtKGVudCwgbik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBFTlRSWV9SREVWOiB7CiAgICAgIGludDY0X3QgbjsKICAgICAgaWYoIUpTX1RvSW50NjQoY3R4LCAmbiwgdmFsdWUpKQogICAgICAgIGFyY2hpdmVfZW50cnlfc2V0X3JkZXYoZW50LCBuKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX1JERVZNQUpPUjogewogICAgICBpbnQ2NF90IG47CiAgICAgIGlmKCFKU19Ub0ludDY0KGN0eCwgJm4sIHZhbHVlKSkKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9yZGV2bWFqb3IoZW50LCBuKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX1JERVZNSU5PUjogewogICAgICBpbnQ2NF90IG47CiAgICAgIGlmKCFKU19Ub0ludDY0KGN0eCwgJm4sIHZhbHVlKSkKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9yZGV2bWlub3IoZW50LCBuKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX1NJWkU6IHsKICAgICAgaWYoanNfaXNfbnVsbGlzaChjdHgsIHZhbHVlKSkgewogICAgICAgIGFyY2hpdmVfZW50cnlfdW5zZXRfc2l6ZShlbnQpOwogICAgICB9IGVsc2UgewogICAgICAgIGludDY0X3QgbjsKICAgICAgICBpZighSlNfVG9JbnQ2NChjdHgsICZuLCB2YWx1ZSkpCiAgICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9zaXplKGVudCwgbik7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEVOVFJZX1NZTUxJTks6IHsKICAgICAgaWYoanNfaXNfbnVsbGlzaChjdHgsIHZhbHVlKSkgewogICAgICAgIGFyY2hpdmVfZW50cnlfc2V0X3N5bWxpbmtfdXRmOChlbnQsIDApOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnN0IGNoYXIqIHN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKTsKICAgICAgICBhcmNoaXZlX2VudHJ5X3NldF9zeW1saW5rX3V0ZjgoZW50LCBzdHIpOwogICAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5UUllfVUlEOiB7CiAgICAgIGludDY0X3QgbjsKICAgICAgaWYoIUpTX1RvSW50NjQoY3R4LCAmbiwgdmFsdWUpKQogICAgICAgIGFyY2hpdmVfZW50cnlfc2V0X3VpZChlbnQsIG4pOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5UUllfVU5BTUU6IHsKICAgICAgaWYoanNfaXNfbnVsbGlzaChjdHgsIHZhbHVlKSkgewogICAgICAgIGFyY2hpdmVfZW50cnlfc2V0X3VuYW1lX3V0ZjgoZW50LCAwKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zdCBjaGFyKiBzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICAgICAgYXJjaGl2ZV9lbnRyeV9zZXRfdW5hbWVfdXRmOChlbnQsIHN0cik7CiAgICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19hcmNoaXZlZW50cnlfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgb2JqID0gSlNfVU5ERUZJTkVEOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIEpTVmFsdWUgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBnb3RvIGZhaWw7CgogIHJldHVybiBqc19hcmNoaXZlZW50cnlfd3JhcF9wcm90byhjdHgsIHByb3RvLCAwKTsKCmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgdm9pZApqc19hcmNoaXZlZW50cnlfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgc3RydWN0IGFyY2hpdmVfZW50cnkqIGVudCA9IEpTX0dldE9wYXF1ZSh2YWwsIGpzX2FyY2hpdmVlbnRyeV9jbGFzc19pZCk7CiAgaWYoZW50KSB7CiAgICBhcmNoaXZlX2VudHJ5X2ZyZWUoZW50KTsKICB9CiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbCk7Cn0KCnN0YXRpYyBKU0NsYXNzRGVmIGpzX2FyY2hpdmVlbnRyeV9jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIkFyY2hpdmVFbnRyeSIsCiAgICAuZmluYWxpemVyID0ganNfYXJjaGl2ZWVudHJ5X2ZpbmFsaXplciwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19hcmNoaXZlZW50cnlfZnVuY3NbXSA9IHsKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJhdGltZSIsIGpzX2FyY2hpdmVlbnRyeV9nZXR0ZXIsIGpzX2FyY2hpdmVlbnRyeV9zZXR0ZXIsIEVOVFJZX0FUSU1FKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJjdGltZSIsIGpzX2FyY2hpdmVlbnRyeV9nZXR0ZXIsIGpzX2FyY2hpdmVlbnRyeV9zZXR0ZXIsIEVOVFJZX0NUSU1FKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJtdGltZSIsIGpzX2FyY2hpdmVlbnRyeV9nZXR0ZXIsIGpzX2FyY2hpdmVlbnRyeV9zZXR0ZXIsIEVOVFJZX01USU1FKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJiaXJ0aHRpbWUiLCBqc19hcmNoaXZlZW50cnlfZ2V0dGVyLCBqc19hcmNoaXZlZW50cnlfc2V0dGVyLCBFTlRSWV9CSVJUSFRJTUUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImRldiIsIGpzX2FyY2hpdmVlbnRyeV9nZXR0ZXIsIGpzX2FyY2hpdmVlbnRyeV9zZXR0ZXIsIEVOVFJZX0RFViksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiZGV2bWFqb3IiLCBqc19hcmNoaXZlZW50cnlfZ2V0dGVyLCBqc19hcmNoaXZlZW50cnlfc2V0dGVyLCBFTlRSWV9ERVZNQUpPUiksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiZGV2bWlub3IiLCBqc19hcmNoaXZlZW50cnlfZ2V0dGVyLCBqc19hcmNoaXZlZW50cnlfc2V0dGVyLCBFTlRSWV9ERVZNSU5PUiksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigicmRldiIsIGpzX2FyY2hpdmVlbnRyeV9nZXR0ZXIsIGpzX2FyY2hpdmVlbnRyeV9zZXR0ZXIsIEVOVFJZX1JERVYpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoInJkZXZtYWpvciIsIGpzX2FyY2hpdmVlbnRyeV9nZXR0ZXIsIGpzX2FyY2hpdmVlbnRyeV9zZXR0ZXIsIEVOVFJZX1JERVZNQUpPUiksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigicmRldm1pbm9yIiwganNfYXJjaGl2ZWVudHJ5X2dldHRlciwganNfYXJjaGl2ZWVudHJ5X3NldHRlciwgRU5UUllfUkRFVk1JTk9SKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJmaWxldHlwZSIsIGpzX2FyY2hpdmVlbnRyeV9nZXR0ZXIsIGpzX2FyY2hpdmVlbnRyeV9zZXR0ZXIsIEVOVFJZX0ZJTEVUWVBFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJmZmxhZ3MiLCBqc19hcmNoaXZlZW50cnlfZ2V0dGVyLCBqc19hcmNoaXZlZW50cnlfc2V0dGVyLCBFTlRSWV9GRkxBR1MpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoInVpZCIsIGpzX2FyY2hpdmVlbnRyeV9nZXR0ZXIsIGpzX2FyY2hpdmVlbnRyeV9zZXR0ZXIsIEVOVFJZX1VJRCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiZ2lkIiwganNfYXJjaGl2ZWVudHJ5X2dldHRlciwganNfYXJjaGl2ZWVudHJ5X3NldHRlciwgRU5UUllfR0lEKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJpbm8iLCBqc19hcmNoaXZlZW50cnlfZ2V0dGVyLCBqc19hcmNoaXZlZW50cnlfc2V0dGVyLCBFTlRSWV9JTk8pLAogICAgLy8gSlNfQUxJQVNfREVGKCJpbm82NCIsICJpbm8iKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJubGluayIsIGpzX2FyY2hpdmVlbnRyeV9nZXR0ZXIsIGpzX2FyY2hpdmVlbnRyeV9zZXR0ZXIsIEVOVFJZX05MSU5LKSwKICAgIEpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYoInBhdGhuYW1lIiwganNfYXJjaGl2ZWVudHJ5X2dldHRlciwganNfYXJjaGl2ZWVudHJ5X3NldHRlciwgRU5UUllfUEFUSE5BTUUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoInVuYW1lIiwganNfYXJjaGl2ZWVudHJ5X2dldHRlciwganNfYXJjaGl2ZWVudHJ5X3NldHRlciwgRU5UUllfVU5BTUUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImduYW1lIiwganNfYXJjaGl2ZWVudHJ5X2dldHRlciwganNfYXJjaGl2ZWVudHJ5X3NldHRlciwgRU5UUllfR05BTUUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoIm1vZGUiLCBqc19hcmNoaXZlZW50cnlfZ2V0dGVyLCBqc19hcmNoaXZlZW50cnlfc2V0dGVyLCBFTlRSWV9NT0RFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJwZXJtIiwganNfYXJjaGl2ZWVudHJ5X2dldHRlciwganNfYXJjaGl2ZWVudHJ5X3NldHRlciwgRU5UUllfUEVSTSksCiAgICBKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGKCJzaXplIiwganNfYXJjaGl2ZWVudHJ5X2dldHRlciwganNfYXJjaGl2ZWVudHJ5X3NldHRlciwgRU5UUllfU0laRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigic3ltbGluayIsIGpzX2FyY2hpdmVlbnRyeV9nZXR0ZXIsIGpzX2FyY2hpdmVlbnRyeV9zZXR0ZXIsIEVOVFJZX1NZTUxJTkspLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImhhcmRsaW5rIiwganNfYXJjaGl2ZWVudHJ5X2dldHRlciwganNfYXJjaGl2ZWVudHJ5X3NldHRlciwgRU5UUllfSEFSRExJTkspLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImxpbmsiLCBqc19hcmNoaXZlZW50cnlfZ2V0dGVyLCBqc19hcmNoaXZlZW50cnlfc2V0dGVyLCBFTlRSWV9MSU5LKSwKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiQXJjaGl2ZUVudHJ5IiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKaW50CmpzX2FyY2hpdmVfaW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKCiAgaWYoanNfYXJjaGl2ZV9jbGFzc19pZCA9PSAwKSB7CiAgICBKU19OZXdDbGFzc0lEKCZqc19hcmNoaXZlX2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfYXJjaGl2ZV9jbGFzc19pZCwgJmpzX2FyY2hpdmVfY2xhc3MpOwoKICAgIGFyY2hpdmVfY3RvciA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19hcmNoaXZlX2NvbnN0cnVjdG9yLCAiQXJjaGl2ZSIsIDEsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKICAgIGFyY2hpdmVfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGFyY2hpdmVfcHJvdG8sIGpzX2FyY2hpdmVfZnVuY3MsIGNvdW50b2YoanNfYXJjaGl2ZV9mdW5jcykpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBhcmNoaXZlX2N0b3IsIGpzX2FyY2hpdmVfc3RhdGljX2Z1bmNzLCBjb3VudG9mKGpzX2FyY2hpdmVfc3RhdGljX2Z1bmNzKSk7CiAgICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfYXJjaGl2ZV9jbGFzc19pZCwgYXJjaGl2ZV9wcm90byk7CgogICAgSlNfTmV3Q2xhc3NJRCgmanNfYXJjaGl2ZWVudHJ5X2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfYXJjaGl2ZWVudHJ5X2NsYXNzX2lkLCAmanNfYXJjaGl2ZWVudHJ5X2NsYXNzKTsKCiAgICBhcmNoaXZlZW50cnlfY3RvciA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19hcmNoaXZlZW50cnlfY29uc3RydWN0b3IsICJBcmNoaXZlRW50cnkiLCAxLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICBhcmNoaXZlZW50cnlfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGFyY2hpdmVlbnRyeV9wcm90bywganNfYXJjaGl2ZWVudHJ5X2Z1bmNzLCBjb3VudG9mKGpzX2FyY2hpdmVlbnRyeV9mdW5jcykpOwogICAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIGpzX2FyY2hpdmVlbnRyeV9jbGFzc19pZCwgYXJjaGl2ZWVudHJ5X3Byb3RvKTsKICB9CgogIGlmKG0pIHsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJBcmNoaXZlIiwgYXJjaGl2ZV9jdG9yKTsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJBcmNoaXZlRW50cnkiLCBhcmNoaXZlZW50cnlfY3Rvcik7CiAgfQoKICByZXR1cm4gMDsKfQoKI2lmZGVmIEpTX1NIQVJFRF9MSUJSQVJZCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9hcmNoaXZlCiNlbmRpZgoKVklTSUJMRSBKU01vZHVsZURlZioKSlNfSU5JVF9NT0RVTEUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKSB7CiAgSlNNb2R1bGVEZWYqIG07CiAgaWYoIShtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfYXJjaGl2ZV9pbml0KSkpCiAgICByZXR1cm4gbTsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiQXJjaGl2ZSIpOwogIHJldHVybiBtOwp9CgAAAAAAAAAA0ZYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcFoAAAAAAABwWgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcFoAAAAAAABwWgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-gpio.h",
			"settings":
			{
				"buffer_size": 312,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					2,
					"left_delete",
					null,
					"AgAAAGcAAAAAAAAAZwAAAAAAAAAwAAAAZXh0ZXJuIHRocmVhZF9sb2NhbCBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZDsKZgAAAAAAAABmAAAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-gpio.c",
			"settings":
			{
				"buffer_size": 5342,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"cut",
					null,
					"AQAAAHMAAAAAAAAAcwAAAAAAAAATAAAAI2luY2x1ZGUgInV0aWxzLmgiCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					2,
					"paste",
					null,
					"AgAAAHMAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACZAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert_snippet",
					{
						"contents": "<${0:$SELECTION}>"
					},
					"AgAAAI8AAAAAAAAAjwAAAAAAAAAJAAAAInV0aWxzLmgijwAAAAAAAACaAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjwAAAAAAAACYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "fcntl.h"
					},
					"CAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACRAAAAAAAAAAkAAAAidXRpbHMuaCKRAAAAAAAAAJIAAAAAAAAAAAAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAAAAAAAAACZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"cut",
					null,
					"AQAAAIYAAAAAAAAAhgAAAAAAAAATAAAAI2luY2x1ZGUgPGZjbnRsLmg+Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhgAAAAAAAACZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					2,
					"paste",
					null,
					"AgAAAIYAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACsAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "unsitd"
					},
					"BwAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACkAAAAAAAAAAUAAABmY250bKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAowAAAAAAAACoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					4,
					"left_delete",
					null,
					"BAAAAKgAAAAAAAAAqAAAAAAAAAABAAAAZKcAAAAAAAAApwAAAAAAAAABAAAAdKYAAAAAAAAApgAAAAAAAAABAAAAaaUAAAAAAAAApQAAAAAAAAABAAAAcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqQAAAAAAAACpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "istd"
					},
					"BAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACnAAAAAAAAAAAAAACnAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAAqQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApQAAAAAAAAClAAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"cut",
					null,
					"AQAAAIYAAAAAAAAAhgAAAAAAAAAmAAAAI2luY2x1ZGUgPGZjbnRsLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArAAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADfFAAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKLy8jaW5jbHVkZSA8dGhyZWFkcy5oPgojaW5jbHVkZSAicXVpY2tqcy1ncGlvLmgiCiNpbmNsdWRlICJ1dGlscy5oIgoKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7SlNfVEFHX1VOREVGSU5FRH0sIGdwaW9fY3RvciA9IHtKU19UQUdfVU5ERUZJTkVEfTsKCmVudW0geyBHUElPX01FVEhPRF9JTklUX1BJTiwgR1BJT19NRVRIT0RfU0VUX1BJTiwgR1BJT19NRVRIT0RfR0VUX1BJTiB9OwoKc3RydWN0IGdwaW8qCmpzX2dwaW9fZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgZ3BpbyA9IEpTX0dldE9wYXF1ZTIoY3R4LCB2YWx1ZSwganNfZ3Bpb19jbGFzc19pZCk7CiAgcmV0dXJuIGdwaW87Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fd3JhcF9wcm90byhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHByb3RvLCBzdHJ1Y3QgZ3BpbyogZ3BpbykgewogIEpTVmFsdWUgb2JqOwoKICBpZihqc19ncGlvX2NsYXNzX2lkID09IDApCiAgICBqc19ncGlvX2luaXQoY3R4LCAwKTsKICBpZihKU19Jc051bGwocHJvdG8pIHx8IEpTX0lzVW5kZWZpbmVkKHByb3RvKSkKICAgIHByb3RvID0gSlNfRHVwVmFsdWUoY3R4LCBncGlvX3Byb3RvKTsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX2dwaW9fY2xhc3NfaWQpOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIGdwaW8pOwoKICByZXR1cm4gb2JqOwpmYWlsOgogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb193cmFwKEpTQ29udGV4dCogY3R4LCBzdHJ1Y3QgZ3BpbyogZ3BpbykgewogIHJldHVybiBqc19ncGlvX3dyYXBfcHJvdG8oY3R4LCBncGlvX3Byb3RvLCBncGlvKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19mdW5jdGlvbnMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIHN0cnVjdCBncGlvKiBncGlvOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGdwaW8gPSBqc19ncGlvX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKCiAgc3dpdGNoKG1hZ2ljKSB7CgogICAgY2FzZSBHUElPX01FVEhPRF9JTklUX1BJTjogewogICAgICB1aW50MzJfdCBwaW4gPSAwOwogICAgICBCT09MIG91dHB1dCA9IEpTX1RvQm9vbChjdHgsIGFyZ3ZbMV0pOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZwaW4sIGFyZ3ZbMF0pOwogICAgICBncGlvX2luaXRfcGluKGdwaW8sIHBpbiwgb3V0cHV0KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fTUVUSE9EX1NFVF9QSU46IHsKICAgICAgdWludDMyX3QgcGluID0gMDsKICAgICAgQk9PTCB2YWx1ZSA9IEpTX1RvQm9vbChjdHgsIGFyZ3ZbMV0pOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZwaW4sIGFyZ3ZbMF0pOwogICAgICBncGlvX3NldF9waW4oZ3BpbywgcGluLCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHUElPX01FVEhPRF9HRVRfUElOOiB7CiAgICAgIHVpbnQzMl90IHBpbiA9IDA7CiAgICAgIEJPT0wgdmFsdWU7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBpbiwgYXJndlswXSk7CiAgICAgIHZhbHVlID0gZ3Bpb19nZXRfcGluKGdwaW8sIHBpbik7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgdmFsdWUpOwogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fZ2V0dGVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIHN0cnVjdCBncGlvKiBncGlvOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGdwaW8gPSBqc19ncGlvX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKCiAgc3dpdGNoKG1hZ2ljKSB7fQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fc2V0dGVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIEpTVmFsdWVDb25zdCB2YWx1ZSwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSBvYmogPSBKU19VTkRFRklORUQsIHByb3RvID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGdwaW8gPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBncGlvKSkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgbmV3X3RhcmdldCwgInByb3RvdHlwZSIpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHByb3RvKSkKICAgIGdvdG8gZmFpbDsKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX2dwaW9fY2xhc3NfaWQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHByb3RvKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwoKICBpZighZ3Bpb19vcGVuKGdwaW8pKQogICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJncGlvX29wZW4oKSBmYWlsZWQiKTsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgZ3Bpbyk7CiAgcmV0dXJuIG9iajsKCmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgdm9pZApqc19ncGlvX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIHN0cnVjdCBncGlvKiBncGlvID0gSlNfR2V0T3BhcXVlKHZhbCwganNfZ3Bpb19jbGFzc19pZCk7CiAgaWYoZ3BpbykgewogICAgZ3Bpb19jbG9zZShncGlvKTsKICB9CiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbCk7Cn0KCnN0YXRpYyBKU0NsYXNzRGVmIGpzX2dwaW9fY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJHUElPIiwKICAgIC5maW5hbGl6ZXIgPSBqc19ncGlvX2ZpbmFsaXplciwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19ncGlvX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImluaXRQaW4iLCAyLCBqc19ncGlvX2Z1bmN0aW9ucywgR1BJT19NRVRIT0RfSU5JVF9QSU4pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzZXRQaW4iLCAyLCBqc19ncGlvX2Z1bmN0aW9ucywgR1BJT19NRVRIT0RfU0VUX1BJTiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFBpbiIsIDEsIGpzX2dwaW9fZnVuY3Rpb25zLCBHUElPX01FVEhPRF9HRVRfUElOKSwKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiR1BJTyIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19ncGlvX3N0YXRpY19mdW5jc1tdID0gewogICAgSlNfUFJPUF9JTlQzMl9ERUYoIklOUFVUIiwgMCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJPVVRQVVQiLCAxLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxPVyIsIDAsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSElHSCIsIDEsIEpTX1BST1BfRU5VTUVSQUJMRSksCn07CgppbnQKanNfZ3Bpb19pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBpZihqc19ncGlvX2NsYXNzX2lkID09IDApIHsKICAgIEpTX05ld0NsYXNzSUQoJmpzX2dwaW9fY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19ncGlvX2NsYXNzX2lkLCAmanNfZ3Bpb19jbGFzcyk7CgogICAgZ3Bpb19jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX2dwaW9fY29uc3RydWN0b3IsICJHUElPIiwgMSwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogICAgZ3Bpb19wcm90byA9IEpTX05ld09iamVjdChjdHgpOwoKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgZ3Bpb19wcm90bywganNfZ3Bpb19mdW5jcywgY291bnRvZihqc19ncGlvX2Z1bmNzKSk7CiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGdwaW9fY3RvciwganNfZ3Bpb19zdGF0aWNfZnVuY3MsIGNvdW50b2YoanNfZ3Bpb19zdGF0aWNfZnVuY3MpKTsKICAgIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgZ3Bpb19jdG9yLCBncGlvX3Byb3RvKTsKICAgIC8vIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19ncGlvX2NsYXNzX2lkLCBncGlvX3Byb3RvKTsKICB9CgogIGlmKG0pIHsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIiwgZ3Bpb19jdG9yKTsKICB9CgogIHJldHVybiAwOwp9CgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX2dwaW8KI2VuZGlmCgpWSVNJQkxFIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBpZighKG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19ncGlvX2luaXQpKSkKICAgIHJldHVybiBtOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIik7CiAgcmV0dXJuIG07Cn0KAAAAAAAAAADeFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "#include <sys/mman.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <string.h>\n#include <stdio.h>\n#include <unistd.h>\n\n#include \"gpio.h\"\n\n#ifndef O_CLOEXEC\n#define O_CLOEXEC 02000000\n#endifENV LANG en_US.utf8\n\n\n#define PERIPHERALS_BASE_ADDR (0x20200000)\n#define MAP_SIZE (0xA0)\n\nstatic const int fsel_shift[] = {\n    0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 0, 3, 6, 9, 12, 15, 18, 21, 24, 27,\n    0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 0, 3, 6, 9, 12, 15, 18, 21, 24, 27,\n};\n\nstatic const int fsel[] = {\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n};\n\nstatic const int set[] = {\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n    7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n};\n\nstatic const int set_shift[] = {\n    0,  1,  2,  3,  4,  5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\n    27, 28, 29, 30, 31, 0, 1, 2, 3, 4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\n};\n\nstatic const int clr[] = {\n    10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,\n};\n\nstatic const int* clr_shift = set_shift;\n\nstatic const int lvl[] = {\n    13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,\n    13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n};\n\nstatic const int* lvl_shift = set_shift;\n\nbool\ngpio_open(struct gpio* gpio) {\n\n  const char* dbg = getenv(\"DEBUG\");\n\n  if(dbg && strstr(dbg, \"gpio\"))\n    gpio->debug = true;\n\n  if((gpio->fd = open(\"/dev/gpiomem\", O_RDWR | O_SYNC | O_CLOEXEC)) < 0) {\n    if(gpio->debug)\n      fprintf(stderr, \"Could not open /dev/gpiomem: %s\\n\", strerror(errno));\n    return false;\n  }\n\n  if((gpio->map = mmap(NULL, MAP_SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, gpio->fd, PERIPHERALS_BASE_ADDR)) ==\n     MAP_FAILED) {\n    if(gpio->debug)\n      fprintf(stderr, \"Could not map gpio memory: %s\\n\", strerror(errno));\n    return false;\n  }\n\n  if(gpio->debug)\n    fprintf(stdout, \"GPIO initialized (%d, %p)\\n\", gpio->fd, gpio->map);\n  return true;\n}\n\nvoid\ngpio_close(struct gpio* gpio) {\n  munmap(gpio->map, MAP_SIZE);\n  close(gpio->fd);\n}\n\nvoid\ngpio_init_pin(struct gpio* gpio, const uint8_t pin, const bool output) {\n  *(gpio->map + fsel[pin]) &= ~(1 << fsel_shift[pin]);\n  *(gpio->map + fsel[pin]) |= (output << fsel_shift[pin]);\n\n  if(gpio->debug)\n    fprintf(stdout, \"Pin %d set to %s\\n\", pin, output ? \"output\" : \"input\");\n}\n\nvoid\ngpio_set_pin(struct gpio* gpio, const uint8_t pin, const bool value) {\n  if(value) {\n    *(gpio->map + set[pin]) &= ~(1 << set_shift[pin]);\n    *(gpio->map + set[pin]) |= (1 << set_shift[pin]);\n  } else {\n    *(gpio->map + clr[pin]) &= ~(1 << clr_shift[pin]);\n    *(gpio->map + clr[pin]) |= (1 << clr_shift[pin]);\n  }\n\n  if(gpio->debug)\n    fprintf(stdout, \"Set pin %d to value %d\\n\", pin, value);\n}\n\nbool\ngpio_get_pin(struct gpio* gpio, const uint8_t pin) {\n  const bool value = *(gpio->map + lvl[pin]) & (1 << lvl_shift[pin]);\n\n  if(gpio->debug)\n    fprintf(stdout, \"Get pin %d at value %d\\n\", pin, value);\n\n  return value;\n}\n",
			"file": "gpio.c",
			"file_size": 3602,
			"file_write_time": 132734607928645701,
			"settings":
			{
				"buffer_size": 3508,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					12,
					1,
					"cut",
					null,
					"AQAAAIQHAAAAAAAAhAcAAAAAAAAJAAAAT19DTE9FWEVD",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAcAAAAAAACNBwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"paste",
					null,
					"AQAAAIQHAAAAAAAAjQcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAcAAAAAAACEBwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\n\n#ifndef"
					},
					"CQAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACLAAAAAAAAAAAAAACLAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAACOAAAAAAAAAI8AAAAAAAAAAAAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAAJIAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJIAAAAAAAAAkwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkgAAAAAAAACSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"paste",
					null,
					"AQAAAJMAAAAAAAAAnAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkwAAAAAAAACTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "\n#define"
					},
					"CAAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACeAAAAAAAAAAAAAACeAAAAAAAAAJ8AAAAAAAAAAAAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAAChAAAAAAAAAAAAAAChAAAAAAAAAKIAAAAAAAAAAAAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQAAAAAAAAApQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"paste",
					null,
					"AQAAAKUAAAAAAAAArgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApQAAAAAAAAClAAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK4AAAAAAAAArwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"paste",
					null,
					"AQAAAK8AAAAAAAAAtwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArwAAAAAAAACvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "\n#endif"
					},
					"BwAAALcAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC5AAAAAAAAAAAAAAC5AAAAAAAAALoAAAAAAAAAAAAAALoAAAAAAAAAuwAAAAAAAAAAAAAAuwAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAL0AAAAAAAAAAAAAAL0AAAAAAAAAvgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtwAAAAAAAAC3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"paste_and_indent",
					null,
					"AQAAAL4AAAAAAAAA0gAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4AAAAAAAAAvgAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "quickjs-xml.c",
			"settings":
			{
				"buffer_size": 14851,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					60,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFAVAAAAAAAAURUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUBUAAAAAAABQFQAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "&/&"
					},
					"AwAAAFEVAAAAAAAAUhUAAAAAAAAAAAAAUhUAAAAAAABTFQAAAAAAAAAAAABTFQAAAAAAAFQVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURUAAAAAAABRFQAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					2,
					"left_delete",
					null,
					"AgAAAFMVAAAAAAAAUxUAAAAAAAABAAAAJlIVAAAAAAAAUhUAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAVBUAAAAAAABUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAFIVAAAAAAAAUxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhUAAAAAAABSFQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					2,
					"left_delete",
					null,
					"AgAAAFIVAAAAAAAAUhUAAAAAAAABAAAAJlEVAAAAAAAAURUAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAUxUAAAAAAABTFQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "||"
					},
					"AgAAAFEVAAAAAAAAUhUAAAAAAAAAAAAAUhUAAAAAAABTFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURUAAAAAAABRFQAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " !tagLen"
					},
					"CAAAAFMVAAAAAAAAVBUAAAAAAAAAAAAAVBUAAAAAAABVFQAAAAAAAAAAAABVFQAAAAAAAFYVAAAAAAAAAAAAAFYVAAAAAAAAVxUAAAAAAAAAAAAAVxUAAAAAAABYFQAAAAAAAAAAAABYFQAAAAAAAFkVAAAAAAAAAAAAAFkVAAAAAAAAWhUAAAAAAAAAAAAAWhUAAAAAAABbFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxUAAAAAAABTFQAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFAVAAAAAAAAURUAAAAAAAAAAAAAURUAAAAAAABRFQAAAAAAAAsAAAAgfHwgIXRhZ0xlbg",
					"AQAAAAAAAAABAAAAUBUAAAAAAABbFQAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"cut",
					null,
					"AQAAAJ4XAAAAAAAAnhcAAAAAAAA7AAAAIGlmKHRhZ05hbWVbMF0gPT0gJyEnKSB7CiAgICBkYnVmX3B1dHN0cihkYiwgdGFnTmFtZSk7CiAgfQo",
					"AQAAAAAAAAABAAAAnhcAAAAAAADZFwAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"paste",
					null,
					"AQAAACsXAAAAAAAAZhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKxcAAAAAAAArFwAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "else"
					},
					"BAAAAGYXAAAAAAAAZxcAAAAAAAAAAAAAZxcAAAAAAABoFwAAAAAAAAAAAABoFwAAAAAAAGkXAAAAAAAAAAAAAGkXAAAAAAAAahcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZhcAAAAAAABmFwAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGoXAAAAAAAAaxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahcAAAAAAABqFwAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					4,
					"left_delete",
					null,
					"BAAAAN0XAAAAAAAA3RcAAAAAAAABAAAAZdwXAAAAAAAA3BcAAAAAAAABAAAAc9sXAAAAAAAA2xcAAAAAAAABAAAAbNoXAAAAAAAA2hcAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA3hcAAAAAAADeFwAAAAAAAP///////+9/"
				],
				[
					147,
					1,
					"cut",
					null,
					"AQAAAG4XAAAAAAAAbhcAAAAAAAAXAAAASlNfSXNPYmplY3QoYXR0cmlidXRlcyk",
					"AQAAAAAAAAABAAAAbhcAAAAAAACFFwAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					4,
					"left_delete",
					null,
					"BAAAAG4XAAAAAAAAbhcAAAAAAAABAAAAKW0XAAAAAAAAbRcAAAAAAAABAAAAKGwXAAAAAAAAbBcAAAAAAAABAAAAZmsXAAAAAAAAaxcAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAbxcAAAAAAABvFwAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAI8XAAAAAAAAkBcAAAAAAAAAAAAAkBcAAAAAAACRFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxcAAAAAAACPFwAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJEXAAAAAAAAkxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRcAAAAAAACRFwAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"paste",
					null,
					"AQAAAJIXAAAAAAAAqRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhcAAAAAAACSFwAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAqhcAAAAAAACqFwAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAABEYAAAAAAAAEhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERgAAAAAAAARGAAAAAAAAAAAAAAAACBA"
				],
				[
					164,
					1,
					"left_delete",
					null,
					"AQAAABAYAAAAAAAAEBgAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAEhgAAAAAAAASGAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAEBgAAAAAAAAQGAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAAMEVAAAAAAAAwhUAAAAAAAAAAAAAwhUAAAAAAADDFQAAAAAAAAAAAADDFQAAAAAAAMQVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwRUAAAAAAADBFQAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMQVAAAAAAAAxhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxBUAAAAAAADEFQAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"paste",
					null,
					"AQAAAMUVAAAAAAAA0BUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxRUAAAAAAADFFQAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					3,
					"left_delete",
					null,
					"AwAAANAVAAAAAAAA0BUAAAAAAAABAAAAKc8VAAAAAAAAzxUAAAAAAAABAAAAIM4VAAAAAAAAzhUAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAA0RUAAAAAAADRFQAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "])"
					},
					"AgAAAM4VAAAAAAAAzxUAAAAAAAAAAAAAzxUAAAAAAADQFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzhUAAAAAAADOFQAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAB4YAAAAAAAAHxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhgAAAAAAAAeGAAAAAAAAAAAAAAAAFxA"
				],
				[
					184,
					1,
					"paste",
					null,
					"AQAAAB8YAAAAAAAAKhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxgAAAAAAAAfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "if("
					},
					"AwAAAB8YAAAAAAAAIBgAAAAAAAAAAAAAIBgAAAAAAAAhGAAAAAAAAAAAAAAhGAAAAAAAACIYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxgAAAAAAAAfGAAAAAAAAAAAAAAAAAAA"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAC0YAAAAAAAALhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRgAAAAAAAAtGAAAAAAAAP///////+9/"
				],
				[
					190,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAALhgAAAAAAAAuGAAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"cut",
					null,
					"AQAAAMcVAAAAAAAAxxUAAAAAAAAKAAAAdGFnTmFtZVswXQ",
					"AQAAAAAAAAABAAAAxxUAAAAAAADRFQAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"paste",
					null,
					"AQAAAMcVAAAAAAAA0RUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxUAAAAAAADHFQAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": " ¬¬"
					},
					"AwAAAFAVAAAAAAAAURUAAAAAAAAAAAAAURUAAAAAAABSFQAAAAAAAAAAAABSFQAAAAAAAFMVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUBUAAAAAAABQFQAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					2,
					"left_delete",
					null,
					"AgAAAFIVAAAAAAAAUhUAAAAAAAACAAAAwqxRFQAAAAAAAFEVAAAAAAAAAgAAAMKs",
					"AQAAAAAAAAABAAAAUxUAAAAAAABTFQAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "||"
					},
					"AgAAAFEVAAAAAAAAUhUAAAAAAAAAAAAAUhUAAAAAAABTFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURUAAAAAAABRFQAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFMVAAAAAAAAVBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxUAAAAAAABTFQAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAFQVAAAAAAAAVRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBUAAAAAAABUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"paste",
					null,
					"AQAAAFUVAAAAAAAAXxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVRUAAAAAAABVFQAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAFUaAAAAAAAAVhoAAAAAAAAAAAAAVhoAAAAAAABXGgAAAAAAAAAAAABXGgAAAAAAAFgaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVRoAAAAAAABVGgAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": " tagName"
					},
					"CAAAAFgaAAAAAAAAWRoAAAAAAAAAAAAAWRoAAAAAAABaGgAAAAAAAAAAAABaGgAAAAAAAFsaAAAAAAAAAAAAAFsaAAAAAAAAXBoAAAAAAAAAAAAAXBoAAAAAAABdGgAAAAAAAAAAAABdGgAAAAAAAF4aAAAAAAAAAAAAAF4aAAAAAAAAXxoAAAAAAAAAAAAAXxoAAAAAAABgGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBoAAAAAAABYGgAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAGAaAAAAAAAAYhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBoAAAAAAABgGgAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAGEaAAAAAAAAYhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYRoAAAAAAABhGgAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"cut",
					null,
					"AQAAAGIyAAAAAAAAYjIAAAAAAABIAAAAaWYoSlNfSXNTdHJpbmcodmFsdWUpKQogICAgICB4bWxfd3JpdGVfdGV4dChjdHgsIHZhbHVlLCBvdXRwdXQsIGRlcHRoKTsK",
					"AQAAAAAAAAABAAAAYjIAAAAAAACqMgAAAAAAAAAAAAAAAFJA"
				],
				[
					291,
					1,
					"paste",
					null,
					"AQAAAPIxAAAAAAAAOjIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8jEAAAAAAADyMQAAAAAAAAAAAAAAAEBA"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAADoyAAAAAAAAOzIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOjIAAAAAAAA6MgAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"left_delete",
					null,
					"AQAAADoyAAAAAAAAOjIAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAOzIAAAAAAAA7MgAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": "else"
					},
					"BAAAADoyAAAAAAAAOzIAAAAAAAAAAAAAOzIAAAAAAAA8MgAAAAAAAAAAAAA8MgAAAAAAAD0yAAAAAAAAAAAAAD0yAAAAAAAAPjIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOjIAAAAAAAA6MgAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD4yAAAAAAAAPzIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPjIAAAAAAAA+MgAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					7,
					"left_delete",
					null,
					"BwAAAK0yAAAAAAAArTIAAAAAAAABAAAAZawyAAAAAAAArDIAAAAAAAABAAAAc6syAAAAAAAAqzIAAAAAAAABAAAAbKoyAAAAAAAAqjIAAAAAAAABAAAAZagyAAAAAAAAqDIAAAAAAAACAAAAICCmMgAAAAAAAKYyAAAAAAAAAgAAACAgpTIAAAAAAAClMgAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAArjIAAAAAAACuMgAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAApTIAAAAAAAClMgAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": "-1"
					},
					"AgAAAIcaAAAAAAAAiBoAAAAAAAAAAAAAiBoAAAAAAACJGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxoAAAAAAACHGgAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiRoAAAAAAACJGgAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAIoaAAAAAAAAixoAAAAAAAAAAAAAixoAAAAAAACLGgAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAAihoAAAAAAACLGgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tests/test_xml.js",
			"settings":
			{
				"buffer_size": 1420,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/tty.js",
			"settings":
			{
				"buffer_size": 29,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/fs.js",
			"settings":
			{
				"buffer_size": 10945,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"cut",
					null,
					"AQAAAAcbAAAAAAAABxsAAAAAAAAxAAAAICByZXR1cm4gbnVtZXJyKG9zLm9wZW4oZmlsZW5hbWUsIGZsYWdzLCBtb2RlKSk7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABxsAAAAAAAA4GwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					2,
					"paste",
					null,
					"AgAAAAcbAAAAAAAAOBsAAAAAAAAAAAAAOBsAAAAAAABpGwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABxsAAAAAAAAHGwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "srtd"
					},
					"BQAAABcbAAAAAAAAGBsAAAAAAAAAAAAAGBsAAAAAAAAYGwAAAAAAAAIAAABvcxgbAAAAAAAAGRsAAAAAAAAAAAAAGRsAAAAAAAAaGwAAAAAAAAAAAAAaGwAAAAAAABsbAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFxsAAAAAAAAZGwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					3,
					"left_delete",
					null,
					"AwAAABobAAAAAAAAGhsAAAAAAAABAAAAZBkbAAAAAAAAGRsAAAAAAAABAAAAdBgbAAAAAAAAGBsAAAAAAAABAAAAcg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGxsAAAAAAAAbGwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "td"
					},
					"AgAAABgbAAAAAAAAGRsAAAAAAAAAAAAAGRsAAAAAAAAaGwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGBsAAAAAAAAYGwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAADkbAAAAAAAAOhsAAAAAAAAAAAAAOhsAAAAAAAA7GwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAORsAAAAAAAA5GwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAACYPAAAAAAAAJw8AAAAAAAAAAAAAJw8AAAAAAAApDwAAAAAAAAAAAAApDwAAAAAAACoPAAAAAAAAAAAAACoPAAAAAAAAKw8AAAAAAAAAAAAAKw8AAAAAAAAsDwAAAAAAAAAAAAAsDwAAAAAAAC0PAAAAAAAAAAAAAC0PAAAAAAAALg8AAAAAAAAAAAAALg8AAAAAAAAvDwAAAAAAAAAAAAAvDwAAAAAAADAPAAAAAAAAAAAAADAPAAAAAAAAMQ8AAAAAAAAAAAAAMQ8AAAAAAAAyDwAAAAAAAAAAAAAyDwAAAAAAADMPAAAAAAAAAAAAADMPAAAAAAAANA8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJg8AAAAAAAAmDwAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADQPAAAAAAAANg8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANA8AAAAAAAA0DwAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAADUPAAAAAAAANw8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANQ8AAAAAAAA1DwAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "fluwsh"
					},
					"BgAAADYPAAAAAAAANw8AAAAAAAAAAAAANw8AAAAAAAA4DwAAAAAAAAAAAAA4DwAAAAAAADkPAAAAAAAAAAAAADkPAAAAAAAAOg8AAAAAAAAAAAAAOg8AAAAAAAA7DwAAAAAAAAAAAAA7DwAAAAAAADwPAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANg8AAAAAAAA2DwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					3,
					"left_delete",
					null,
					"AwAAADsPAAAAAAAAOw8AAAAAAAABAAAAaDoPAAAAAAAAOg8AAAAAAAABAAAAczkPAAAAAAAAOQ8AAAAAAAABAAAAdw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPA8AAAAAAAA8DwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "shSync"
					},
					"BgAAADkPAAAAAAAAOg8AAAAAAAAAAAAAOg8AAAAAAAA7DwAAAAAAAAAAAAA7DwAAAAAAADwPAAAAAAAAAAAAADwPAAAAAAAAPQ8AAAAAAAAAAAAAPQ8AAAAAAAA+DwAAAAAAAAAAAAA+DwAAAAAAAD8PAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOQ8AAAAAAAA5DwAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEAPAAAAAAAAQQ8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQA8AAAAAAABADwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " file,"
					},
					"BgAAAEEPAAAAAAAAQg8AAAAAAAAAAAAAQg8AAAAAAABDDwAAAAAAAAAAAABDDwAAAAAAAEQPAAAAAAAAAAAAAEQPAAAAAAAARQ8AAAAAAAAAAAAARQ8AAAAAAABGDwAAAAAAAAAAAABGDwAAAAAAAEcPAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQQ8AAAAAAABBDwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " fil"
					},
					"BAAAAEcPAAAAAAAASA8AAAAAAAAAAAAASA8AAAAAAABJDwAAAAAAAAAAAABJDwAAAAAAAEoPAAAAAAAAAAAAAEoPAAAAAAAASw8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARw8AAAAAAABHDwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					3,
					"left_delete",
					null,
					"AwAAAEoPAAAAAAAASg8AAAAAAAABAAAAbEkPAAAAAAAASQ8AAAAAAAABAAAAaUgPAAAAAAAASA8AAAAAAAABAAAAZg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASw8AAAAAAABLDwAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "fileno"
					},
					"BgAAAEgPAAAAAAAASQ8AAAAAAAAAAAAASQ8AAAAAAABKDwAAAAAAAAAAAABKDwAAAAAAAEsPAAAAAAAAAAAAAEsPAAAAAAAATA8AAAAAAAAAAAAATA8AAAAAAABNDwAAAAAAAAAAAABNDwAAAAAAAE4PAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASA8AAAAAAABIDwAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE4PAAAAAAAAUA8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATg8AAAAAAABODwAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "file"
					},
					"BAAAAE8PAAAAAAAAUA8AAAAAAAAAAAAAUA8AAAAAAABRDwAAAAAAAAAAAABRDwAAAAAAAFIPAAAAAAAAAAAAAFIPAAAAAAAAUw8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATw8AAAAAAABPDwAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFUPAAAAAAAAVg8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVQ8AAAAAAABVDwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFYPAAAAAAAAVw8AAAAAAAAAAAAAVw8AAAAAAABZDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVg8AAAAAAABWDwAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AwAAACkPAAAAAAAAKg8AAAAAAAAAAAAAWA8AAAAAAABYDwAAAAAAAAIAAAAgICoPAAAAAAAAKw8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKQ8AAAAAAAApDwAAAAAAAAAAAAAAADBA"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/modules",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/pigpio/pigpiod_if2.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/pigpio/pigpio.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/test-gpio.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/Findpigpio.cmake",
		"/home/roman/Sources/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/test-archive.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-archive.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.c",
		"/usr/include/archive_entry.h",
		"/usr/include/archive.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry.h",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_acl.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_copy_bhfi.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_copy_stat.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_link_resolver.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_linkify.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_locale.h",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_misc.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_paths.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_perms.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_private.h",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_sparse.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_stat.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_stat.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_strmode.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_time.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_xattr.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-deep.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/pointer.c",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Django (Smoothy).tmTheme",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Stark Contrast (rainglow).tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.h",
		"/home/raven/Sources/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/lib/stack.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/cmake/FindQuickJS.cmake",
		"/home/raven/Sources/plot-cv/quickjs/modules/quickjs-xml.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/utils.h",
		"/home/raven/Sources/plot-cv/quickjs/modules/utils.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/build/x86_64-linux-gnu/modules/repl.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_predicate.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_misc.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/test-minnet.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/lib/core-net/pollfd.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/build/x86_64-linux-gnu/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/READMEs/README.coding.md",
		"/home/roman/Projects/plot-cv/quickjs/modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/stack.js",
		"/home/roman/Sources/opencv/modules/core/include/opencv2/core/mat.inl.hpp",
		"/opt/opencv-4.5.0/include/opencv4/opencv2/core/mat.hpp",
		"/home/roman/.config/sublime-text/Packages/User/Themes/TronLegacy.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_qjsm.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"'<'",
			"flushSync",
			"openSync",
			"fopen",
			"readF",
			"\\.so",
			"str_end",
			"debug_mod",
			"flushSync",
			"flush",
			"CONFIG_PREFIX",
			"^(\\s*)fprintf",
			"QUICKJS_PREFIX",
			"struct GPIO",
			"GPIO",
			"GPIO\\*",
			"entry",
			"JS_GetRuntime\\(ctx\\)",
			"JS_GetRuntime",
			"js_class_id",
			"^js_cstring_free",
			"cstring_free",
			"js_propertydescriptor_free",
			"js_get_propertydescriptor",
			"atom_to",
			"js_is_typedarray",
			"js_get_classid",
			"js_is_typedarray",
			"js_is_array",
			"js_get_classid",
			"js_is_typedarray",
			"is_array",
			"is_arraybuffer",
			"js_inspect_init",
			"vector_free",
			"^dbuf_put",
			"put_escaped",
			"^dbuf_put_escaped\\(",
			"dbuf_put_escaped",
			"escape_char_pred",
			"js_object_tostring",
			"js_inspect_arraybuffer",
			"js_value_tostring",
			"value_tostr",
			"_header",
			"header",
			"archive_next",
			"JS_NewString",
			"_close",
			"ARCHIVE_PROP_FILTERS",
			"JS_ThrowTypeError",
			"seek",
			"_seek\\(",
			"_seek",
			"SEEK_SET",
			"js_misc_resizearraybuffer",
			"js_misc_tostring",
			"arraybuffer",
			"archive_read_data",
			"ARCHIVE_PROP",
			"ARCHIVE_PROP_FILTERS",
			"archive_filter",
			"compression",
			"js_generator_next",
			"JS_ITERATOR_NEXT",
			"^-",
			"archiveentry_free",
			"_free",
			"dev_",
			"_link",
			"_utf8",
			"archive_entry_link",
			"js_archiveentry_init",
			"fflags",
			"archive_entry_fflags",
			"filetype",
			"__LA_MODE_T",
			"dev_is_set",
			"dev_is",
			"set_dev",
			"archive_entry_set_pathname_utf8",
			"pathname_utf8",
			"archive_read_next_header",
			"_LA_DECL struct",
			"_entry",
			"block size",
			"utf8",
			"_disk",
			"_all",
			"deep_LIB",
			"deep_LIB ",
			"_SOURCES",
			"}_SOURCES",
			"_filename",
			"_file",
			"js_is_archive",
			"_new",
			"js_lexer_next",
			"js_global_get",
			"js_global_gewt",
			"js_symbol_static_atom",
			"is_iterator",
			"iterator",
			"generator",
			"cstring_value",
			"input_buffer",
			"js_input_buffer",
			"Ctrl-C",
			"controlC",
			"formatNumber",
			"format",
			"formatWithOptionsInternal",
			"format\\(",
			"format =",
			"format",
			"\"Uint8Array",
			"Uint8Array",
			"Uint",
			"Uint8",
			"COLOR_",
			"readdi",
			"list_for_each",
			"util",
			"\"util",
			"setTimeout",
			"JSObjec",
			"js_iterator_next",
			"iterat"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\1if(gpio->debug) fprintf",
			"struct gpio",
			"struct GPIO",
			"struct GPIO*",
			"ctx->rt",
			"",
			": ",
			"\"",
			"ret = \\1;",
			"->errnum",
			"(",
			"error",
			"JS_NewInt32",
			"",
			",",
			"left, right",
			"predicate_nextarg(ctx, &args)",
			"predicate_nextarg(ctx, &args),predicate_nextarg(ctx, &args))",
			"predicate_argument_shift(ctx, &args)",
			"js_arguments_shift(&args)",
			"",
			"ret = PRECEDENCE_",
			"args",
			"",
			"dbuf",
			": left",
			"pred",
			"args->",
			"r",
			"predicate_value",
			"",
			"'x'",
			"0",
			"\\1this.last_cmd",
			"\\1this.cmd",
			"level",
			"cmd",
			"  ",
			"",
			"\\1this.prompt",
			"",
			" globalThis.",
			"evalAnd",
			"commands",
			"",
			"handlers",
			"events",
			"this.",
			"\\1",
			"listeners",
			"events",
			"\\1",
			"jsm_pending_signals",
			"jsm_module_native",
			"js_pointer_data(ctx, obj)",
			"ShiftPredicate",
			".buf",
			"\\1",
			"file.close",
			"std.open",
			"js_misc_free_arraybuffer",
			"JS_SetPropertyStr",
			"jsm_load_module",
			"",
			"_?",
			"sockets",
			"qjsc_perf_hooks",
			"output->",
			"output",
			"\\1//printf",
			"",
			"sizeSync",
			"CreateOperatorSet",
			"",
			"loc",
			"location",
			"loc->",
			"jsm_load_package_json",
			"tmp",
			"    ",
			"  ",
			"BOOL\\njs_is_",
			"GeneratorPrototype",
			"SetIteratorPrototype",
			"MapIteratorPrototype",
			"hasBuiltIn",
			"hbiTs",
			"sSl",
			"ccAt",
			"formatNumber(",
			"isObject(value) && ",
			"pointer_toarray( ptr, ctx)",
			"moduleStack.size",
			"require('${m}')",
			"globalThis.code ?? 'C'",
			"code",
			"fs.",
			"jsm_load_script",
			"jsm_load_file",
			"require.",
			"dirname",
			"dir",
			"script",
			"this.id",
			"jsm_std_dump_error",
			"if(",
			"",
			")",
			"",
			"break;\n    }\n    \n    case",
			"lexer_continue",
			" property-enumeration.c property-enumeration.h",
			" ",
			"*",
			"jslex",
			"this."
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1337,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": "/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									28,
									39
								],
								[
									192,
									194
								],
								[
									208,
									213
								],
								[
									227,
									230
								],
								[
									244,
									249
								],
								[
									263,
									268
								],
								[
									282,
									287
								],
								[
									301,
									308
								],
								[
									322,
									327
								],
								[
									341,
									350
								],
								[
									365,
									373
								],
								[
									388,
									394
								],
								[
									409,
									415
								],
								[
									544,
									555
								],
								[
									563,
									585
								],
								[
									878,
									881
								],
								[
									1253,
									1257
								],
								[
									1313,
									1317
								],
								[
									2178,
									2188
								],
								[
									2217,
									2224
								],
								[
									2255,
									2262
								],
								[
									2317,
									2333
								],
								[
									2622,
									2640
								],
								[
									2874,
									2892
								],
								[
									3163,
									3183
								],
								[
									4085,
									4101
								],
								[
									4190,
									4206
								],
								[
									4812,
									4826
								],
								[
									5138,
									5155
								],
								[
									6437,
									6454
								],
								[
									7015,
									7035
								],
								[
									8096,
									8108
								],
								[
									11940,
									11951
								],
								[
									12359,
									12375
								],
								[
									13540,
									13552
								],
								[
									14310,
									14321
								],
								[
									14505,
									14519
								],
								[
									14549,
									14563
								]
							],
							"symlist":
							[
								"\tⓂ  _GNU_SOURCE … — macro object",
								"\tⓂ  WS … — macro object",
								"\tⓂ  START … — macro object",
								"\tⓂ  END … — macro object",
								"\tⓂ  QUOTE … — macro object",
								"\tⓂ  CLOSE … — macro object",
								"\tⓂ  EQUAL … — macro object",
								"\tⓂ  SPECIAL … — macro object",
								"\tⓂ  SLASH … — macro object",
								"\tⓂ  BACKSLASH … — macro object",
								"\tⓂ  QUESTION … — macro object",
								"\tⓂ  EXCLAM … — macro object",
								"\tⓂ  HYPHEN … — macro object",
								"\tⓉ  OutputValue ; — typedef",
								"—Ⓕ– character_classes_init ( ) { … } — function",
								"—Ⓜ– pop ( ) … — macro function",
								"—Ⓜ– next ( ) … — macro function",
								"—Ⓜ– skip ( ) … — macro function",
								"—Ⓜ– skip_until ( ) … — macro function",
								"—Ⓜ– skip_ws ( ) … — macro function",
								"—Ⓜ– char_is ( ) … — macro function",
								"—Ⓕ– xml_num_children ( ) { … } — function",
								"—Ⓕ– xml_set_attr_value ( ) { … } — function",
								"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
								"—Ⓕ– xml_write_attributes ( ) { … } — function",
								"—Ⓕ– xml_write_indent ( ) { … } — function",
								"—Ⓕ– xml_write_string ( ) { … } — function",
								"—Ⓕ– xml_write_text ( ) { … } — function",
								"—Ⓕ– xml_write_element ( ) { … } — function",
								"—Ⓕ– xml_close_element ( ) { … } — function",
								"—Ⓕ– xml_enumeration_next ( ) { … } — function",
								"—Ⓕ– js_xml_parse ( ) { … } — function",
								"—Ⓕ– js_xml_read ( ) { … } — function",
								"—Ⓕ– js_xml_write_obj ( ) { … } — function",
								"—Ⓕ– js_xml_write ( ) { … } — function",
								"—Ⓕ– js_xml_init ( ) { … } — function",
								"\tⓂ  JS_INIT_MODULE … — macro object",
								"\tⓂ  JS_INIT_MODULE … — macro object"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1629020519.66,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/console.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3440,
						"regions":
						{
						},
						"selection":
						[
							[
								3388,
								3398
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628982166.97,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 450.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/stack.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7788,
						"regions":
						{
						},
						"selection":
						[
							[
								7122,
								7122
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628982739.51,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3195.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "qjsm.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39991,
						"regions":
						{
						},
						"selection":
						[
							[
								14073,
								14073
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628986958.3,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7715.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "quickjs-archive.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38590,
						"regions":
						{
						},
						"selection":
						[
							[
								23152,
								23152
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628987083.32,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10818.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "quickjs-gpio.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 312,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tabs_extra_last_activated": 1628987100.63,
							"tabs_extra_last_activated_sheet_index": 4
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "quickjs-gpio.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5342,
						"regions":
						{
						},
						"selection":
						[
							[
								134,
								134
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628987137.3,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "gpio.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3508,
						"regions":
						{
						},
						"selection":
						[
							[
								1212,
								1212
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629019015.75,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 300.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "quickjs-xml.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14851,
						"regions":
						{
						},
						"selection":
						[
							[
								6795,
								6795
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629024340.77,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2973.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "tests/test_xml.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1420,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1629020106.76,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/tty.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tabs_extra_last_activated": 1628982263.2,
							"tabs_extra_last_activated_sheet_index": 2
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/fs.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10945,
						"regions":
						{
						},
						"selection":
						[
							[
								3883,
								3883
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628983783.61,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2544.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"",
				"tests/test_qjsm.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"str.h",
				"lib/str.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			],
			[
				"source.h",
				"src/source.h"
			],
			[
				"fdtable",
				"src/fdtable.h"
			],
			[
				"fd.h",
				"src/fd.h"
			],
			[
				"eval",
				"src/eval.h"
			],
			[
				"ieee",
				"doc/posix/ieee-p1003.2-d11.2-s3.txt"
			],
			[
				"expand.h",
				"src/expand.h"
			],
			[
				"builtin_dum",
				"src/builtin/builtin_dump.c"
			],
			[
				"h_main",
				"src/sh/sh_main.c"
			],
			[
				"parse_cha",
				"src/parse/parse_chartable.c"
			],
			[
				"debug.h",
				"src/debug.h"
			],
			[
				"exec_c",
				"src/exec/exec_command.c"
			],
			[
				"eval.h",
				"src/eval.h"
			],
			[
				"test-op",
				"test-operators.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 251.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
