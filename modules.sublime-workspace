{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_Set",
				"JS_SetPropertyStr"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"JS_Get",
				"JS_GetPropertyUint32"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"js_sys",
				"js_syscallerror_get"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_",
				"js_sockaddr_class_id"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_New",
				"JS_NewStringLen"
			],
			[
				"JS_",
				"JS_GetPropertyUint32"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"get",
				"getOwnPropertyNames"
			],
			[
				"JS_Thr",
				"JS_ThrowInternalError"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					556,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/.clang-format",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					557,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								644,
								663
							],
							[
								691,
								705
							],
							[
								817,
								831
							],
							[
								1140,
								1152
							],
							[
								1216,
								1232
							],
							[
								1329,
								1362
							],
							[
								1841,
								1862
							],
							[
								1943,
								1962
							],
							[
								2094,
								2118
							],
							[
								2257,
								2273
							],
							[
								2925,
								2942
							],
							[
								3474,
								3495
							],
							[
								4363,
								4385
							],
							[
								5061,
								5086
							],
							[
								5856,
								5881
							],
							[
								6555,
								6584
							],
							[
								6823,
								6839
							],
							[
								7713,
								7729
							],
							[
								8819,
								8844
							],
							[
								9252,
								9266
							],
							[
								10376,
								10391
							],
							[
								10862,
								10875
							],
							[
								11469,
								11481
							],
							[
								11887,
								11899
							],
							[
								12314,
								12329
							],
							[
								13310,
								13330
							],
							[
								13669,
								13688
							],
							[
								13907,
								13919
							],
							[
								15882,
								15899
							],
							[
								16497,
								16515
							],
							[
								17727,
								17747
							],
							[
								18208,
								18229
							],
							[
								18703,
								18718
							],
							[
								19211,
								19231
							],
							[
								19690,
								19702
							],
							[
								20421,
								20436
							],
							[
								21935,
								21960
							],
							[
								22499,
								22524
							],
							[
								23776,
								23790
							],
							[
								24610,
								24624
							],
							[
								24916,
								24929
							],
							[
								27308,
								27321
							],
							[
								28228,
								28238
							],
							[
								36506,
								36518
							],
							[
								37048,
								37062
							],
							[
								37092,
								37106
							]
						],
						"symlist":
						[
							"—Ⓒ– pcg_state_setseq_64 { … } ; — type",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_bytecode_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concatarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield_to_array ( ) { … } — function",
							"—Ⓕ– js_misc_array_to_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function",
							"—Ⓕ– js_misc_is ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"AQAAAAAAAAAAAAAAwgcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					558,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								644,
								663
							],
							[
								691,
								705
							],
							[
								817,
								831
							],
							[
								1140,
								1152
							],
							[
								1216,
								1232
							],
							[
								1329,
								1362
							],
							[
								1841,
								1862
							],
							[
								1943,
								1962
							],
							[
								2094,
								2118
							],
							[
								2257,
								2273
							],
							[
								2925,
								2942
							],
							[
								3474,
								3495
							],
							[
								4363,
								4385
							],
							[
								5061,
								5086
							],
							[
								5856,
								5881
							],
							[
								6555,
								6584
							],
							[
								6823,
								6839
							],
							[
								7713,
								7729
							],
							[
								8819,
								8844
							],
							[
								37073,
								37087
							],
							[
								37117,
								37131
							]
						],
						"symlist":
						[
							"—Ⓒ– pcg_state_setseq_64 { … } ; — type",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_bytecode_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concatarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACACQAA4oCU4pK44oCTIHBjZ19zdGF0ZV9zZXRzZXFfNjQgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcGNnMzJfcmFuZG9tX3QgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcGNnMzJfcmFuZG9tX3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9yYW5kb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9pbml0X3N0YXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGNnMzJfcmFuZG9tX2JvdW5kZWRfZGl2aXNpb25sZXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnl0ZWNvZGVfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RyaW5nX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2FycmF5YnVmZmVyX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3RvcG9pbnRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZHVwYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb25jYXRhcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0cGVyZm9ybWFuY2Vjb3VudGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19wcm9jbGluayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfcHJvY3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2dldHByb3RvdHlwZWNoYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19ocnRpbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ZubWF0Y2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3VuYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19idG9hICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9iICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb21waWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193cml0ZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JlYWRfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192YWx1ZXR5cGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2V2YWxiaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jbGFzc2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19iaXRmaWVsZF90b19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfYXJyYXlfdG9fYml0ZmllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JhbmRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXNjYXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19xdW90ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2lzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAKwDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					559,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								644,
								663
							],
							[
								691,
								705
							],
							[
								817,
								831
							],
							[
								1140,
								1152
							],
							[
								1216,
								1232
							],
							[
								1329,
								1362
							],
							[
								1841,
								1862
							],
							[
								1943,
								1962
							],
							[
								2094,
								2118
							],
							[
								2257,
								2273
							],
							[
								2925,
								2942
							],
							[
								3474,
								3495
							],
							[
								4363,
								4385
							],
							[
								5061,
								5086
							],
							[
								5856,
								5881
							],
							[
								6555,
								6584
							],
							[
								6823,
								6839
							],
							[
								7713,
								7729
							],
							[
								8819,
								8844
							],
							[
								9270,
								9284
							],
							[
								10394,
								10409
							],
							[
								10880,
								10893
							],
							[
								11487,
								11499
							],
							[
								11905,
								11917
							],
							[
								12332,
								12347
							],
							[
								13328,
								13348
							],
							[
								13687,
								13706
							],
							[
								13925,
								13937
							],
							[
								15900,
								15917
							],
							[
								16515,
								16533
							],
							[
								17745,
								17765
							],
							[
								18226,
								18247
							],
							[
								18721,
								18736
							],
							[
								19229,
								19249
							],
							[
								19708,
								19720
							],
							[
								20439,
								20454
							],
							[
								21953,
								21978
							],
							[
								22517,
								22542
							],
							[
								23794,
								23808
							],
							[
								24628,
								24642
							],
							[
								24934,
								24947
							],
							[
								27326,
								27339
							],
							[
								28246,
								28256
							],
							[
								36524,
								36536
							],
							[
								37066,
								37080
							],
							[
								37110,
								37124
							]
						],
						"symlist":
						[
							"—Ⓒ– pcg_state_setseq_64 { … } ; — type",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_bytecode_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concatarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield_to_array ( ) { … } — function",
							"—Ⓕ– js_misc_array_to_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function",
							"—Ⓕ– js_misc_is ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					560,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACACQAA4oCU4pK44oCTIHBjZ19zdGF0ZV9zZXRzZXFfNjQgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcGNnMzJfcmFuZG9tX3QgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcGNnMzJfcmFuZG9tX3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9yYW5kb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9pbml0X3N0YXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGNnMzJfcmFuZG9tX2JvdW5kZWRfZGl2aXNpb25sZXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnl0ZWNvZGVfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RyaW5nX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2FycmF5YnVmZmVyX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3RvcG9pbnRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZHVwYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb25jYXRhcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0cGVyZm9ybWFuY2Vjb3VudGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19wcm9jbGluayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfcHJvY3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2dldHByb3RvdHlwZWNoYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19ocnRpbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ZubWF0Y2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3VuYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19idG9hICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9iICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb21waWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193cml0ZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JlYWRfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192YWx1ZXR5cGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2V2YWxiaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jbGFzc2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19iaXRmaWVsZF90b19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfYXJyYXlfdG9fYml0ZmllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JhbmRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXNjYXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19xdW90ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2lzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					561,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
						"symkeys":
						[
							[
								506,
								520
							],
							[
								784,
								795
							],
							[
								910,
								923
							],
							[
								1010,
								1039
							],
							[
								1156,
								1174
							],
							[
								1201,
								1214
							],
							[
								1276,
								1294
							],
							[
								1785,
								1803
							],
							[
								1814,
								1832
							],
							[
								1842,
								1860
							],
							[
								1866,
								1884
							],
							[
								1898,
								1916
							],
							[
								1927,
								1945
							],
							[
								1953,
								1971
							],
							[
								1982,
								2000
							],
							[
								2007,
								2025
							],
							[
								2055,
								2073
							],
							[
								2124,
								2158
							],
							[
								2208,
								2222
							],
							[
								2624,
								2640
							],
							[
								2998,
								3015
							],
							[
								5208,
								5221
							],
							[
								5675,
								5690
							],
							[
								6234,
								6249
							],
							[
								6537,
								6554
							],
							[
								7051,
								7066
							],
							[
								7083,
								7098
							],
							[
								7116,
								7133
							],
							[
								7169,
								7180
							],
							[
								7523,
								7550
							],
							[
								7711,
								7739
							],
							[
								8335,
								8358
							],
							[
								9040,
								9061
							],
							[
								9138,
								9154
							],
							[
								9584,
								9598
							],
							[
								9822,
								9839
							],
							[
								11071,
								11080
							],
							[
								11094,
								11102
							],
							[
								12227,
								12242
							],
							[
								13444,
								13459
							],
							[
								17596,
								17600
							],
							[
								23343,
								23361
							],
							[
								23978,
								23998
							]
						],
						"symlist":
						[
							"—Ⓕ– atomic_add_int ( ) { … } — function",
							"—Ⓒ– pollhandler { … } ; — type",
							" Ⓣ  pollhandler_t ; — typedef",
							" ⒡  js_std_set_module_loader_func ( ) ; — function declaration",
							" ⒡  malloc_usable_size ( ) ; — function declaration",
							"—Ⓜ– trim_dotslash ( ) … — macro function",
							"—Ⓜ– jsm_declare_module ( ) … — macro function",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  js_std_set_worker_new_context_func ( ) ; — function declaration",
							"—Ⓕ– jsm_dump_error ( ) { … } — function",
							"—Ⓕ– jsm_load_package ( ) { … } — function",
							"—Ⓕ– jsm_module_loader ( ) { … } — function",
							"—Ⓕ– jsm_eval_file ( ) { … } — function",
							"—Ⓕ– jsm_load_script ( ) { … } — function",
							"—Ⓕ– jsm_context_new ( ) { … } — function",
							"—Ⓜ– jsm_module_native ( ) … — macro function",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							"—Ⓒ– trace_malloc_data { … } ; — type",
							"—Ⓕ– dump_vector ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_ptr_offset ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_usable_size ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_printf ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_init ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc ( ) { … } — function",
							"—Ⓕ– jsm_trace_free ( ) { … } — function",
							"—Ⓕ– jsm_trace_realloc ( ) { … } — function",
							" Ⓜ  PROG_NAME … — macro object",
							"—Ⓕ– jsm_help ( ) { … } — function",
							"—Ⓕ– jsm_eval_script ( ) { … } — function",
							"—Ⓕ– jsm_module_func ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function",
							"—Ⓜ– jsm_builtin_native ( ) … — macro function",
							"—Ⓜ– jsm_builtin_compiled ( ) … — macro function"
						]
					},
					"AQAAAAAAAAAAAAAAqgcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					562,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4CAAA4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcG9sbGhhbmRsZXJfdCA7IOKAlCB0eXBlZGVmCiAgIOKSoSAganNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzX3N0ZF9zZXRfd29ya2VyX25ld19jb250ZXh0X2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBqc21fZHVtcF9lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9sb2FkX3BhY2thZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9ldmFsX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY29udGV4dF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX25hdGl2ZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgdHJhY2VfbWFsbG9jX2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBkdW1wX3ZlY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9yZWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIFBST0dfTkFNRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMganNtX2hlbHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					563,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					564,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
						"symkeys":
						[
							[
								506,
								520
							],
							[
								784,
								795
							],
							[
								910,
								923
							],
							[
								1010,
								1039
							],
							[
								1156,
								1174
							],
							[
								1201,
								1214
							],
							[
								1276,
								1294
							],
							[
								1785,
								1803
							],
							[
								1814,
								1832
							],
							[
								1842,
								1860
							],
							[
								1866,
								1884
							],
							[
								1898,
								1916
							],
							[
								1927,
								1945
							],
							[
								1953,
								1971
							],
							[
								1982,
								2000
							],
							[
								2007,
								2025
							],
							[
								2055,
								2073
							],
							[
								2124,
								2158
							],
							[
								2208,
								2222
							],
							[
								2624,
								2640
							],
							[
								2998,
								3015
							],
							[
								5208,
								5221
							],
							[
								5675,
								5690
							],
							[
								6234,
								6249
							],
							[
								6537,
								6554
							],
							[
								7051,
								7066
							],
							[
								7083,
								7098
							],
							[
								7116,
								7133
							],
							[
								7169,
								7180
							],
							[
								7523,
								7550
							],
							[
								7711,
								7739
							],
							[
								8335,
								8358
							],
							[
								9040,
								9061
							],
							[
								9138,
								9154
							],
							[
								9584,
								9598
							],
							[
								9822,
								9839
							],
							[
								11071,
								11080
							],
							[
								11094,
								11102
							],
							[
								12227,
								12242
							],
							[
								13444,
								13459
							],
							[
								17596,
								17600
							],
							[
								23343,
								23361
							],
							[
								23978,
								23998
							]
						],
						"symlist":
						[
							"—Ⓕ– atomic_add_int ( ) { … } — function",
							"—Ⓒ– pollhandler { … } ; — type",
							" Ⓣ  pollhandler_t ; — typedef",
							" ⒡  js_std_set_module_loader_func ( ) ; — function declaration",
							" ⒡  malloc_usable_size ( ) ; — function declaration",
							"—Ⓜ– trim_dotslash ( ) … — macro function",
							"—Ⓜ– jsm_declare_module ( ) … — macro function",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  js_std_set_worker_new_context_func ( ) ; — function declaration",
							"—Ⓕ– jsm_dump_error ( ) { … } — function",
							"—Ⓕ– jsm_load_package ( ) { … } — function",
							"—Ⓕ– jsm_module_loader ( ) { … } — function",
							"—Ⓕ– jsm_eval_file ( ) { … } — function",
							"—Ⓕ– jsm_load_script ( ) { … } — function",
							"—Ⓕ– jsm_context_new ( ) { … } — function",
							"—Ⓜ– jsm_module_native ( ) … — macro function",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							"—Ⓒ– trace_malloc_data { … } ; — type",
							"—Ⓕ– dump_vector ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_ptr_offset ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_usable_size ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_printf ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_init ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc ( ) { … } — function",
							"—Ⓕ– jsm_trace_free ( ) { … } — function",
							"—Ⓕ– jsm_trace_realloc ( ) { … } — function",
							" Ⓜ  PROG_NAME … — macro object",
							"—Ⓕ– jsm_help ( ) { … } — function",
							"—Ⓕ– jsm_eval_script ( ) { … } — function",
							"—Ⓕ– jsm_module_func ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function",
							"—Ⓜ– jsm_builtin_native ( ) … — macro function",
							"—Ⓜ– jsm_builtin_compiled ( ) … — macro function"
						]
					},
					"AQAAAAAAAAAAAAAAqgcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					565,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4CAAA4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcG9sbGhhbmRsZXJfdCA7IOKAlCB0eXBlZGVmCiAgIOKSoSAganNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzX3N0ZF9zZXRfd29ya2VyX25ld19jb250ZXh0X2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBqc21fZHVtcF9lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9sb2FkX3BhY2thZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9ldmFsX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY29udGV4dF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX25hdGl2ZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgdHJhY2VfbWFsbG9jX2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBkdW1wX3ZlY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9yZWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIFBST0dfTkFNRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMganNtX2hlbHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					566,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								251,
								277
							],
							[
								470,
								474
							],
							[
								517,
								522
							],
							[
								592,
								623
							],
							[
								1279,
								1286
							],
							[
								1404,
								1421
							],
							[
								1453,
								1463
							],
							[
								1464,
								1480
							],
							[
								1529,
								1559
							],
							[
								1714,
								1737
							],
							[
								1738,
								1759
							],
							[
								2100,
								2114
							],
							[
								2605,
								2639
							],
							[
								2967,
								3019
							],
							[
								3060,
								3093
							],
							[
								3272,
								3322
							],
							[
								3367,
								3413
							],
							[
								3521,
								3574
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AQAAAAAAAAAAAAAAMgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					567,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								255,
								281
							],
							[
								474,
								478
							],
							[
								521,
								526
							],
							[
								596,
								627
							],
							[
								1283,
								1290
							],
							[
								1408,
								1425
							],
							[
								1457,
								1467
							],
							[
								1468,
								1484
							],
							[
								1533,
								1563
							],
							[
								1718,
								1741
							],
							[
								1742,
								1763
							],
							[
								2104,
								2118
							],
							[
								2609,
								2643
							],
							[
								2971,
								3023
							],
							[
								3064,
								3097
							],
							[
								3276,
								3326
							],
							[
								3371,
								3417
							],
							[
								3525,
								3578
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZSguLi5hcmdzKQpDb25zb2xlCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAyAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgEAAENvbnNvbGUoLi4uYXJncykKQ29uc29sZQogICBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwogIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMob2JqID0ge30pCkNvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zLm1lcmdlID0gZnVuY3Rpb24ob3B0cywgLi4uYXJncykKQ29uc29sZVNldHVwKGluc3BlY3RPcHRpb25zID0ge30sIGNhbGxiYWNrKQAAAAAAAAAAMgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					568,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								251,
								277
							],
							[
								470,
								474
							],
							[
								517,
								522
							],
							[
								592,
								623
							],
							[
								1279,
								1286
							],
							[
								1404,
								1421
							],
							[
								1453,
								1463
							],
							[
								1464,
								1480
							],
							[
								1529,
								1559
							],
							[
								1714,
								1737
							],
							[
								1738,
								1759
							],
							[
								2100,
								2114
							],
							[
								2605,
								2639
							],
							[
								2967,
								3019
							],
							[
								3060,
								3093
							],
							[
								3272,
								3322
							],
							[
								3367,
								3413
							],
							[
								3521,
								3574
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZSguLi5hcmdzKQpDb25zb2xlCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAyAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgEAAENvbnNvbGUoLi4uYXJncykKQ29uc29sZQogICBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwogIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMob2JqID0ge30pCkNvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zLm1lcmdlID0gZnVuY3Rpb24ob3B0cywgLi4uYXJncykKQ29uc29sZVNldHVwKGluc3BlY3RPcHRpb25zID0ge30sIGNhbGxiYWNrKQAAAAAAAAAAMgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					569,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								255,
								281
							],
							[
								474,
								478
							],
							[
								521,
								526
							],
							[
								596,
								627
							],
							[
								1283,
								1290
							],
							[
								1408,
								1425
							],
							[
								1457,
								1467
							],
							[
								1468,
								1484
							],
							[
								1533,
								1563
							],
							[
								1718,
								1741
							],
							[
								1742,
								1763
							],
							[
								2104,
								2118
							],
							[
								2609,
								2643
							],
							[
								2971,
								3023
							],
							[
								3064,
								3097
							],
							[
								3276,
								3326
							],
							[
								3371,
								3417
							],
							[
								3525,
								3578
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZSguLi5hcmdzKQpDb25zb2xlCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAyAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					570,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								255,
								281
							],
							[
								490,
								494
							],
							[
								537,
								542
							],
							[
								612,
								643
							],
							[
								1299,
								1306
							],
							[
								1424,
								1441
							],
							[
								1473,
								1483
							],
							[
								1484,
								1500
							],
							[
								1549,
								1579
							],
							[
								1734,
								1757
							],
							[
								1758,
								1779
							],
							[
								2120,
								2134
							],
							[
								2625,
								2659
							],
							[
								2987,
								3039
							],
							[
								3080,
								3113
							],
							[
								3292,
								3342
							],
							[
								3387,
								3433
							],
							[
								3541,
								3594
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZSguLi5hcmdzKQpDb25zb2xlCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAyAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					571,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZSguLi5hcmdzKQpDb25zb2xlCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					572,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					573,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								255,
								281
							],
							[
								490,
								494
							],
							[
								537,
								542
							],
							[
								612,
								643
							],
							[
								1299,
								1306
							],
							[
								1424,
								1441
							],
							[
								1473,
								1483
							],
							[
								1484,
								1500
							],
							[
								1549,
								1579
							],
							[
								1734,
								1757
							],
							[
								1758,
								1779
							],
							[
								2120,
								2134
							],
							[
								2625,
								2659
							],
							[
								2987,
								3039
							],
							[
								3080,
								3113
							],
							[
								3292,
								3342
							],
							[
								3387,
								3433
							],
							[
								3541,
								3594
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AQAAAAAAAAAAAAAAMgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					574,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
						"symkeys":
						[
							[
								506,
								520
							],
							[
								784,
								795
							],
							[
								910,
								923
							],
							[
								1010,
								1039
							],
							[
								1156,
								1174
							],
							[
								1201,
								1214
							],
							[
								1276,
								1294
							],
							[
								1785,
								1803
							],
							[
								1814,
								1832
							],
							[
								1842,
								1860
							],
							[
								1866,
								1884
							],
							[
								1898,
								1916
							],
							[
								1927,
								1945
							],
							[
								1953,
								1971
							],
							[
								1982,
								2000
							],
							[
								2007,
								2025
							],
							[
								2055,
								2073
							],
							[
								2124,
								2158
							],
							[
								2208,
								2222
							],
							[
								2624,
								2640
							],
							[
								2998,
								3015
							],
							[
								5208,
								5221
							],
							[
								5675,
								5690
							],
							[
								6234,
								6249
							],
							[
								6537,
								6554
							],
							[
								7051,
								7066
							],
							[
								7083,
								7098
							],
							[
								7116,
								7133
							],
							[
								7169,
								7180
							],
							[
								7523,
								7550
							],
							[
								7711,
								7739
							],
							[
								8335,
								8358
							],
							[
								9040,
								9061
							],
							[
								9138,
								9154
							],
							[
								9584,
								9598
							],
							[
								9822,
								9839
							],
							[
								11071,
								11080
							],
							[
								11094,
								11102
							],
							[
								12227,
								12242
							],
							[
								13444,
								13459
							],
							[
								17596,
								17600
							],
							[
								23343,
								23361
							],
							[
								23978,
								23998
							]
						],
						"symlist":
						[
							"—Ⓕ– atomic_add_int ( ) { … } — function",
							"—Ⓒ– pollhandler { … } ; — type",
							" Ⓣ  pollhandler_t ; — typedef",
							" ⒡  js_std_set_module_loader_func ( ) ; — function declaration",
							" ⒡  malloc_usable_size ( ) ; — function declaration",
							"—Ⓜ– trim_dotslash ( ) … — macro function",
							"—Ⓜ– jsm_declare_module ( ) … — macro function",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  js_std_set_worker_new_context_func ( ) ; — function declaration",
							"—Ⓕ– jsm_dump_error ( ) { … } — function",
							"—Ⓕ– jsm_load_package ( ) { … } — function",
							"—Ⓕ– jsm_module_loader ( ) { … } — function",
							"—Ⓕ– jsm_eval_file ( ) { … } — function",
							"—Ⓕ– jsm_load_script ( ) { … } — function",
							"—Ⓕ– jsm_context_new ( ) { … } — function",
							"—Ⓜ– jsm_module_native ( ) … — macro function",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							"—Ⓒ– trace_malloc_data { … } ; — type",
							"—Ⓕ– dump_vector ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_ptr_offset ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_usable_size ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_printf ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_init ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc ( ) { … } — function",
							"—Ⓕ– jsm_trace_free ( ) { … } — function",
							"—Ⓕ– jsm_trace_realloc ( ) { … } — function",
							" Ⓜ  PROG_NAME … — macro object",
							"—Ⓕ– jsm_help ( ) { … } — function",
							"—Ⓕ– jsm_eval_script ( ) { … } — function",
							"—Ⓕ– jsm_module_func ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function",
							"—Ⓜ– jsm_builtin_native ( ) … — macro function",
							"—Ⓜ– jsm_builtin_compiled ( ) … — macro function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZSguLi5hcmdzKQpDb25zb2xlCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAACqBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					575,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								644,
								663
							],
							[
								691,
								705
							],
							[
								817,
								831
							],
							[
								1140,
								1152
							],
							[
								1216,
								1232
							],
							[
								1329,
								1362
							],
							[
								1841,
								1862
							],
							[
								1943,
								1962
							],
							[
								2094,
								2118
							],
							[
								2257,
								2273
							],
							[
								2925,
								2942
							],
							[
								3474,
								3495
							],
							[
								4363,
								4385
							],
							[
								5061,
								5086
							],
							[
								5856,
								5881
							],
							[
								6555,
								6584
							],
							[
								6823,
								6839
							],
							[
								7713,
								7729
							],
							[
								8819,
								8844
							],
							[
								9292,
								9306
							],
							[
								10416,
								10431
							],
							[
								10902,
								10915
							],
							[
								11509,
								11521
							],
							[
								11927,
								11939
							],
							[
								12354,
								12369
							],
							[
								13350,
								13370
							],
							[
								13709,
								13728
							],
							[
								13947,
								13959
							],
							[
								15922,
								15939
							],
							[
								16537,
								16555
							],
							[
								17767,
								17787
							],
							[
								18248,
								18269
							],
							[
								18743,
								18758
							],
							[
								19251,
								19271
							],
							[
								19730,
								19742
							],
							[
								20461,
								20476
							],
							[
								21975,
								22000
							],
							[
								22539,
								22564
							],
							[
								23816,
								23830
							],
							[
								24650,
								24664
							],
							[
								24956,
								24969
							],
							[
								27348,
								27361
							],
							[
								28268,
								28278
							],
							[
								36546,
								36558
							],
							[
								37088,
								37102
							],
							[
								37132,
								37146
							]
						],
						"symlist":
						[
							"—Ⓒ– pcg_state_setseq_64 { … } ; — type",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_bytecode_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concatarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield_to_array ( ) { … } — function",
							"—Ⓕ– js_misc_array_to_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function",
							"—Ⓕ– js_misc_is ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4CAAA4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcG9sbGhhbmRsZXJfdCA7IOKAlCB0eXBlZGVmCiAgIOKSoSAganNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzX3N0ZF9zZXRfd29ya2VyX25ld19jb250ZXh0X2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBqc21fZHVtcF9lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9sb2FkX3BhY2thZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9ldmFsX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY29udGV4dF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX25hdGl2ZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgdHJhY2VfbWFsbG9jX2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBkdW1wX3ZlY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9yZWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIFBST0dfTkFNRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMganNtX2hlbHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAwgcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					576,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/.clang-format",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACACQAA4oCU4pK44oCTIHBjZ19zdGF0ZV9zZXRzZXFfNjQgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcGNnMzJfcmFuZG9tX3QgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcGNnMzJfcmFuZG9tX3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9yYW5kb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9pbml0X3N0YXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGNnMzJfcmFuZG9tX2JvdW5kZWRfZGl2aXNpb25sZXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnl0ZWNvZGVfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RyaW5nX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2FycmF5YnVmZmVyX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3RvcG9pbnRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZHVwYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb25jYXRhcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0cGVyZm9ybWFuY2Vjb3VudGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19wcm9jbGluayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfcHJvY3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2dldHByb3RvdHlwZWNoYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19ocnRpbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ZubWF0Y2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3VuYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19idG9hICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9iICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb21waWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193cml0ZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JlYWRfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192YWx1ZXR5cGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2V2YWxiaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jbGFzc2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19iaXRmaWVsZF90b19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfYXJyYXlfdG9fYml0ZmllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JhbmRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXNjYXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19xdW90ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2lzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					577,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								644,
								663
							],
							[
								691,
								705
							],
							[
								817,
								831
							],
							[
								1140,
								1152
							],
							[
								1216,
								1232
							],
							[
								1329,
								1362
							],
							[
								1841,
								1862
							],
							[
								1943,
								1962
							],
							[
								2094,
								2118
							],
							[
								2257,
								2273
							],
							[
								2925,
								2942
							],
							[
								3474,
								3495
							],
							[
								4363,
								4385
							],
							[
								5061,
								5086
							],
							[
								5856,
								5881
							],
							[
								6555,
								6584
							],
							[
								6823,
								6839
							],
							[
								7713,
								7729
							],
							[
								8819,
								8844
							],
							[
								9292,
								9306
							],
							[
								10416,
								10431
							],
							[
								10902,
								10915
							],
							[
								11509,
								11521
							],
							[
								11927,
								11939
							],
							[
								12354,
								12369
							],
							[
								13350,
								13370
							],
							[
								13709,
								13728
							],
							[
								13947,
								13959
							],
							[
								15922,
								15939
							],
							[
								16537,
								16555
							],
							[
								17767,
								17787
							],
							[
								18248,
								18269
							],
							[
								18743,
								18758
							],
							[
								19251,
								19271
							],
							[
								19730,
								19742
							],
							[
								20461,
								20476
							],
							[
								21975,
								22000
							],
							[
								22539,
								22564
							],
							[
								23816,
								23830
							],
							[
								24650,
								24664
							],
							[
								24956,
								24969
							],
							[
								27348,
								27361
							],
							[
								28268,
								28278
							],
							[
								36546,
								36558
							],
							[
								37088,
								37102
							],
							[
								37132,
								37146
							]
						],
						"symlist":
						[
							"—Ⓒ– pcg_state_setseq_64 { … } ; — type",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_bytecode_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concatarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield_to_array ( ) { … } — function",
							"—Ⓕ– js_misc_array_to_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function",
							"—Ⓕ– js_misc_is ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"AQAAAAAAAAAAAAAAwgcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					578,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								307,
								333
							],
							[
								538,
								542
							],
							[
								585,
								590
							],
							[
								660,
								691
							],
							[
								1347,
								1354
							],
							[
								1472,
								1489
							],
							[
								1521,
								1531
							],
							[
								1532,
								1548
							],
							[
								1597,
								1627
							],
							[
								1782,
								1805
							],
							[
								1806,
								1827
							],
							[
								2168,
								2182
							],
							[
								2673,
								2707
							],
							[
								3035,
								3087
							],
							[
								3128,
								3161
							],
							[
								3340,
								3390
							],
							[
								3435,
								3481
							],
							[
								3589,
								3642
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACACQAA4oCU4pK44oCTIHBjZ19zdGF0ZV9zZXRzZXFfNjQgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcGNnMzJfcmFuZG9tX3QgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcGNnMzJfcmFuZG9tX3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9yYW5kb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9pbml0X3N0YXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGNnMzJfcmFuZG9tX2JvdW5kZWRfZGl2aXNpb25sZXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnl0ZWNvZGVfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RyaW5nX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2FycmF5YnVmZmVyX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3RvcG9pbnRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZHVwYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb25jYXRhcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0cGVyZm9ybWFuY2Vjb3VudGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19wcm9jbGluayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfcHJvY3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2dldHByb3RvdHlwZWNoYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19ocnRpbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ZubWF0Y2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3VuYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19idG9hICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9iICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb21waWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193cml0ZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JlYWRfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192YWx1ZXR5cGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2V2YWxiaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jbGFzc2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19iaXRmaWVsZF90b19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfYXJyYXlfdG9fYml0ZmllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JhbmRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXNjYXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19xdW90ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2lzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAADIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					579,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								311,
								337
							],
							[
								542,
								546
							],
							[
								589,
								594
							],
							[
								664,
								695
							],
							[
								1351,
								1358
							],
							[
								1476,
								1493
							],
							[
								1525,
								1535
							],
							[
								1536,
								1552
							],
							[
								1601,
								1631
							],
							[
								1786,
								1809
							],
							[
								1810,
								1831
							],
							[
								2172,
								2186
							],
							[
								2677,
								2711
							],
							[
								3039,
								3091
							],
							[
								3132,
								3165
							],
							[
								3344,
								3394
							],
							[
								3439,
								3485
							],
							[
								3593,
								3646
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZSguLi5hcmdzKQpDb25zb2xlCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAyAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					580,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								311,
								337
							],
							[
								542,
								546
							],
							[
								589,
								594
							],
							[
								664,
								695
							],
							[
								1351,
								1358
							],
							[
								1476,
								1493
							],
							[
								1525,
								1535
							],
							[
								1536,
								1552
							],
							[
								1601,
								1631
							],
							[
								1786,
								1809
							],
							[
								1810,
								1831
							],
							[
								2172,
								2186
							],
							[
								2677,
								2711
							],
							[
								3039,
								3091
							],
							[
								3132,
								3165
							],
							[
								3344,
								3394
							],
							[
								3439,
								3485
							],
							[
								3593,
								3646
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZSguLi5hcmdzKQpDb25zb2xlCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAyAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					581,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								308,
								334
							],
							[
								539,
								543
							],
							[
								586,
								591
							],
							[
								661,
								692
							],
							[
								1348,
								1355
							],
							[
								1473,
								1490
							],
							[
								1522,
								1532
							],
							[
								1533,
								1549
							],
							[
								1598,
								1628
							],
							[
								1783,
								1806
							],
							[
								1807,
								1828
							],
							[
								2169,
								2183
							],
							[
								2674,
								2708
							],
							[
								3036,
								3088
							],
							[
								3129,
								3162
							],
							[
								3341,
								3391
							],
							[
								3436,
								3482
							],
							[
								3590,
								3643
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZSguLi5hcmdzKQpDb25zb2xlCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAyAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					582,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								644,
								663
							],
							[
								691,
								705
							],
							[
								817,
								831
							],
							[
								1140,
								1152
							],
							[
								1216,
								1232
							],
							[
								1329,
								1362
							],
							[
								1841,
								1862
							],
							[
								1943,
								1962
							],
							[
								2094,
								2118
							],
							[
								2257,
								2273
							],
							[
								2925,
								2942
							],
							[
								3474,
								3495
							],
							[
								4363,
								4385
							],
							[
								5061,
								5086
							],
							[
								5856,
								5881
							],
							[
								6555,
								6584
							],
							[
								6823,
								6839
							],
							[
								7713,
								7729
							],
							[
								8819,
								8844
							],
							[
								9292,
								9306
							],
							[
								10416,
								10431
							],
							[
								10902,
								10915
							],
							[
								11509,
								11521
							],
							[
								11927,
								11939
							],
							[
								12354,
								12369
							],
							[
								13350,
								13370
							],
							[
								13709,
								13728
							],
							[
								13947,
								13959
							],
							[
								15922,
								15939
							],
							[
								16537,
								16555
							],
							[
								17767,
								17787
							],
							[
								18248,
								18269
							],
							[
								18743,
								18758
							],
							[
								19251,
								19271
							],
							[
								19730,
								19742
							],
							[
								20461,
								20476
							],
							[
								21975,
								22000
							],
							[
								22539,
								22564
							],
							[
								23816,
								23830
							],
							[
								24650,
								24664
							],
							[
								24956,
								24969
							],
							[
								27348,
								27361
							],
							[
								28268,
								28278
							],
							[
								36546,
								36558
							],
							[
								37088,
								37102
							],
							[
								37132,
								37146
							]
						],
						"symlist":
						[
							"—Ⓒ– pcg_state_setseq_64 { … } ; — type",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_bytecode_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concatarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield_to_array ( ) { … } — function",
							"—Ⓕ– js_misc_array_to_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function",
							"—Ⓕ– js_misc_is ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZSguLi5hcmdzKQpDb25zb2xlCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAADCBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					583,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/.clang-format",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACACQAA4oCU4pK44oCTIHBjZ19zdGF0ZV9zZXRzZXFfNjQgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcGNnMzJfcmFuZG9tX3QgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcGNnMzJfcmFuZG9tX3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9yYW5kb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9pbml0X3N0YXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGNnMzJfcmFuZG9tX2JvdW5kZWRfZGl2aXNpb25sZXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnl0ZWNvZGVfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RyaW5nX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2FycmF5YnVmZmVyX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3RvcG9pbnRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZHVwYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb25jYXRhcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0cGVyZm9ybWFuY2Vjb3VudGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19wcm9jbGluayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfcHJvY3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2dldHByb3RvdHlwZWNoYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19ocnRpbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ZubWF0Y2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3VuYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19idG9hICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9iICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb21waWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193cml0ZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JlYWRfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192YWx1ZXR5cGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2V2YWxiaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jbGFzc2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19iaXRmaWVsZF90b19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfYXJyYXlfdG9fYml0ZmllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JhbmRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXNjYXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19xdW90ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2lzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					584,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					585,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
						"symkeys":
						[
							[
								506,
								520
							],
							[
								784,
								795
							],
							[
								910,
								923
							],
							[
								1010,
								1039
							],
							[
								1156,
								1174
							],
							[
								1201,
								1214
							],
							[
								1276,
								1294
							],
							[
								1785,
								1803
							],
							[
								1814,
								1832
							],
							[
								1842,
								1860
							],
							[
								1866,
								1884
							],
							[
								1898,
								1916
							],
							[
								1927,
								1945
							],
							[
								1953,
								1971
							],
							[
								1982,
								2000
							],
							[
								2007,
								2025
							],
							[
								2055,
								2073
							],
							[
								2124,
								2158
							],
							[
								2208,
								2222
							],
							[
								2624,
								2640
							],
							[
								2998,
								3015
							],
							[
								5208,
								5221
							],
							[
								5675,
								5690
							],
							[
								6234,
								6249
							],
							[
								6537,
								6554
							],
							[
								7051,
								7066
							],
							[
								7083,
								7098
							],
							[
								7116,
								7133
							],
							[
								7169,
								7180
							],
							[
								7523,
								7550
							],
							[
								7711,
								7739
							],
							[
								8335,
								8358
							],
							[
								9040,
								9061
							],
							[
								9138,
								9154
							],
							[
								9584,
								9598
							],
							[
								9822,
								9839
							],
							[
								11071,
								11080
							],
							[
								11094,
								11102
							],
							[
								12227,
								12242
							],
							[
								13444,
								13459
							],
							[
								17596,
								17600
							],
							[
								23343,
								23361
							],
							[
								23978,
								23998
							]
						],
						"symlist":
						[
							"—Ⓕ– atomic_add_int ( ) { … } — function",
							"—Ⓒ– pollhandler { … } ; — type",
							" Ⓣ  pollhandler_t ; — typedef",
							" ⒡  js_std_set_module_loader_func ( ) ; — function declaration",
							" ⒡  malloc_usable_size ( ) ; — function declaration",
							"—Ⓜ– trim_dotslash ( ) … — macro function",
							"—Ⓜ– jsm_declare_module ( ) … — macro function",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  js_std_set_worker_new_context_func ( ) ; — function declaration",
							"—Ⓕ– jsm_dump_error ( ) { … } — function",
							"—Ⓕ– jsm_load_package ( ) { … } — function",
							"—Ⓕ– jsm_module_loader ( ) { … } — function",
							"—Ⓕ– jsm_eval_file ( ) { … } — function",
							"—Ⓕ– jsm_load_script ( ) { … } — function",
							"—Ⓕ– jsm_context_new ( ) { … } — function",
							"—Ⓜ– jsm_module_native ( ) … — macro function",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							"—Ⓒ– trace_malloc_data { … } ; — type",
							"—Ⓕ– dump_vector ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_ptr_offset ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_usable_size ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_printf ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_init ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc ( ) { … } — function",
							"—Ⓕ– jsm_trace_free ( ) { … } — function",
							"—Ⓕ– jsm_trace_realloc ( ) { … } — function",
							" Ⓜ  PROG_NAME … — macro object",
							"—Ⓕ– jsm_help ( ) { … } — function",
							"—Ⓕ– jsm_eval_script ( ) { … } — function",
							"—Ⓕ– jsm_module_func ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function",
							"—Ⓜ– jsm_builtin_native ( ) … — macro function",
							"—Ⓜ– jsm_builtin_compiled ( ) … — macro function"
						]
					},
					"AQAAAAAAAAAAAAAAqgcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					586,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAD4CAAA4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcG9sbGhhbmRsZXJfdCA7IOKAlCB0eXBlZGVmCiAgIOKSoSAganNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzX3N0ZF9zZXRfd29ya2VyX25ld19jb250ZXh0X2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBqc21fZHVtcF9lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9sb2FkX3BhY2thZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9ldmFsX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY29udGV4dF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX25hdGl2ZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgdHJhY2VfbWFsbG9jX2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBkdW1wX3ZlY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9yZWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIFBST0dfTkFNRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMganNtX2hlbHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					587,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					588,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
						"symkeys":
						[
							[
								506,
								520
							],
							[
								784,
								795
							],
							[
								910,
								923
							],
							[
								1010,
								1039
							],
							[
								1156,
								1174
							],
							[
								1201,
								1214
							],
							[
								1276,
								1294
							],
							[
								1785,
								1803
							],
							[
								1814,
								1832
							],
							[
								1842,
								1860
							],
							[
								1866,
								1884
							],
							[
								1898,
								1916
							],
							[
								1927,
								1945
							],
							[
								1953,
								1971
							],
							[
								1982,
								2000
							],
							[
								2007,
								2025
							],
							[
								2055,
								2073
							],
							[
								2124,
								2158
							],
							[
								2208,
								2222
							],
							[
								2624,
								2640
							],
							[
								2998,
								3015
							],
							[
								5208,
								5221
							],
							[
								5675,
								5690
							],
							[
								6234,
								6249
							],
							[
								6537,
								6554
							],
							[
								7051,
								7066
							],
							[
								7083,
								7098
							],
							[
								7116,
								7133
							],
							[
								7169,
								7180
							],
							[
								7523,
								7550
							],
							[
								7711,
								7739
							],
							[
								8335,
								8358
							],
							[
								9040,
								9061
							],
							[
								9138,
								9154
							],
							[
								9584,
								9598
							],
							[
								9822,
								9839
							],
							[
								11071,
								11080
							],
							[
								11094,
								11102
							],
							[
								12227,
								12242
							],
							[
								13444,
								13459
							],
							[
								17596,
								17600
							],
							[
								23343,
								23361
							],
							[
								23978,
								23998
							]
						],
						"symlist":
						[
							"—Ⓕ– atomic_add_int ( ) { … } — function",
							"—Ⓒ– pollhandler { … } ; — type",
							" Ⓣ  pollhandler_t ; — typedef",
							" ⒡  js_std_set_module_loader_func ( ) ; — function declaration",
							" ⒡  malloc_usable_size ( ) ; — function declaration",
							"—Ⓜ– trim_dotslash ( ) … — macro function",
							"—Ⓜ– jsm_declare_module ( ) … — macro function",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  js_std_set_worker_new_context_func ( ) ; — function declaration",
							"—Ⓕ– jsm_dump_error ( ) { … } — function",
							"—Ⓕ– jsm_load_package ( ) { … } — function",
							"—Ⓕ– jsm_module_loader ( ) { … } — function",
							"—Ⓕ– jsm_eval_file ( ) { … } — function",
							"—Ⓕ– jsm_load_script ( ) { … } — function",
							"—Ⓕ– jsm_context_new ( ) { … } — function",
							"—Ⓜ– jsm_module_native ( ) … — macro function",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							"—Ⓒ– trace_malloc_data { … } ; — type",
							"—Ⓕ– dump_vector ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_ptr_offset ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_usable_size ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_printf ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_init ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc ( ) { … } — function",
							"—Ⓕ– jsm_trace_free ( ) { … } — function",
							"—Ⓕ– jsm_trace_realloc ( ) { … } — function",
							" Ⓜ  PROG_NAME … — macro object",
							"—Ⓕ– jsm_help ( ) { … } — function",
							"—Ⓕ– jsm_eval_script ( ) { … } — function",
							"—Ⓕ– jsm_module_func ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function",
							"—Ⓜ– jsm_builtin_native ( ) … — macro function",
							"—Ⓜ– jsm_builtin_compiled ( ) … — macro function"
						]
					},
					"AQAAAAAAAAAAAAAAqgcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					589,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
						"symkeys":
						[
							[
								506,
								520
							],
							[
								784,
								795
							],
							[
								910,
								923
							],
							[
								1010,
								1039
							],
							[
								1156,
								1174
							],
							[
								1201,
								1214
							],
							[
								1276,
								1294
							],
							[
								1785,
								1803
							],
							[
								1814,
								1832
							],
							[
								1842,
								1860
							],
							[
								1866,
								1884
							],
							[
								1898,
								1916
							],
							[
								1927,
								1945
							],
							[
								1953,
								1971
							],
							[
								1982,
								2000
							],
							[
								2007,
								2025
							],
							[
								2055,
								2073
							],
							[
								2124,
								2158
							],
							[
								2208,
								2222
							],
							[
								2624,
								2640
							],
							[
								2998,
								3015
							],
							[
								5208,
								5221
							],
							[
								5675,
								5690
							],
							[
								6234,
								6249
							],
							[
								6537,
								6554
							],
							[
								7051,
								7066
							],
							[
								7083,
								7098
							],
							[
								7116,
								7133
							],
							[
								7169,
								7180
							],
							[
								7523,
								7550
							],
							[
								7711,
								7739
							],
							[
								8335,
								8358
							],
							[
								9040,
								9061
							],
							[
								9138,
								9154
							],
							[
								9584,
								9598
							],
							[
								9822,
								9839
							],
							[
								11071,
								11080
							],
							[
								11094,
								11102
							],
							[
								12227,
								12242
							],
							[
								13444,
								13459
							],
							[
								17596,
								17600
							],
							[
								23343,
								23361
							],
							[
								23978,
								23998
							]
						],
						"symlist":
						[
							"—Ⓕ– atomic_add_int ( ) { … } — function",
							"—Ⓒ– pollhandler { … } ; — type",
							" Ⓣ  pollhandler_t ; — typedef",
							" ⒡  js_std_set_module_loader_func ( ) ; — function declaration",
							" ⒡  malloc_usable_size ( ) ; — function declaration",
							"—Ⓜ– trim_dotslash ( ) … — macro function",
							"—Ⓜ– jsm_declare_module ( ) … — macro function",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  js_std_set_worker_new_context_func ( ) ; — function declaration",
							"—Ⓕ– jsm_dump_error ( ) { … } — function",
							"—Ⓕ– jsm_load_package ( ) { … } — function",
							"—Ⓕ– jsm_module_loader ( ) { … } — function",
							"—Ⓕ– jsm_eval_file ( ) { … } — function",
							"—Ⓕ– jsm_load_script ( ) { … } — function",
							"—Ⓕ– jsm_context_new ( ) { … } — function",
							"—Ⓜ– jsm_module_native ( ) … — macro function",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							"—Ⓒ– trace_malloc_data { … } ; — type",
							"—Ⓕ– dump_vector ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_ptr_offset ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_usable_size ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_printf ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_init ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc ( ) { … } — function",
							"—Ⓕ– jsm_trace_free ( ) { … } — function",
							"—Ⓕ– jsm_trace_realloc ( ) { … } — function",
							" Ⓜ  PROG_NAME … — macro object",
							"—Ⓕ– jsm_help ( ) { … } — function",
							"—Ⓕ– jsm_eval_script ( ) { … } — function",
							"—Ⓕ– jsm_module_func ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function",
							"—Ⓜ– jsm_builtin_native ( ) … — macro function",
							"—Ⓜ– jsm_builtin_compiled ( ) … — macro function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4CAAA4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcG9sbGhhbmRsZXJfdCA7IOKAlCB0eXBlZGVmCiAgIOKSoSAganNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzX3N0ZF9zZXRfd29ya2VyX25ld19jb250ZXh0X2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBqc21fZHVtcF9lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9sb2FkX3BhY2thZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9ldmFsX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY29udGV4dF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX25hdGl2ZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgdHJhY2VfbWFsbG9jX2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBkdW1wX3ZlY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9yZWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIFBST0dfTkFNRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMganNtX2hlbHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAqgcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					590,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
						"symkeys":
						[
							[
								506,
								520
							],
							[
								784,
								795
							],
							[
								910,
								923
							],
							[
								1010,
								1039
							],
							[
								1156,
								1174
							],
							[
								1201,
								1214
							],
							[
								1276,
								1294
							],
							[
								1785,
								1803
							],
							[
								1814,
								1832
							],
							[
								1842,
								1860
							],
							[
								1866,
								1884
							],
							[
								1898,
								1916
							],
							[
								1927,
								1945
							],
							[
								1953,
								1971
							],
							[
								1982,
								2000
							],
							[
								2007,
								2025
							],
							[
								2055,
								2073
							],
							[
								2124,
								2158
							],
							[
								2208,
								2222
							],
							[
								2624,
								2640
							],
							[
								2998,
								3015
							],
							[
								5208,
								5221
							],
							[
								5675,
								5690
							],
							[
								6234,
								6249
							],
							[
								6537,
								6554
							],
							[
								7051,
								7066
							],
							[
								7083,
								7098
							],
							[
								7116,
								7133
							],
							[
								7169,
								7180
							],
							[
								7523,
								7550
							],
							[
								7711,
								7739
							],
							[
								8335,
								8358
							],
							[
								9040,
								9061
							],
							[
								9138,
								9154
							],
							[
								9584,
								9598
							],
							[
								9822,
								9839
							],
							[
								11071,
								11080
							],
							[
								11094,
								11102
							],
							[
								12227,
								12242
							],
							[
								13444,
								13459
							],
							[
								17596,
								17600
							],
							[
								23343,
								23361
							],
							[
								23978,
								23998
							]
						],
						"symlist":
						[
							"—Ⓕ– atomic_add_int ( ) { … } — function",
							"—Ⓒ– pollhandler { … } ; — type",
							" Ⓣ  pollhandler_t ; — typedef",
							" ⒡  js_std_set_module_loader_func ( ) ; — function declaration",
							" ⒡  malloc_usable_size ( ) ; — function declaration",
							"—Ⓜ– trim_dotslash ( ) … — macro function",
							"—Ⓜ– jsm_declare_module ( ) … — macro function",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  js_std_set_worker_new_context_func ( ) ; — function declaration",
							"—Ⓕ– jsm_dump_error ( ) { … } — function",
							"—Ⓕ– jsm_load_package ( ) { … } — function",
							"—Ⓕ– jsm_module_loader ( ) { … } — function",
							"—Ⓕ– jsm_eval_file ( ) { … } — function",
							"—Ⓕ– jsm_load_script ( ) { … } — function",
							"—Ⓕ– jsm_context_new ( ) { … } — function",
							"—Ⓜ– jsm_module_native ( ) … — macro function",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							"—Ⓒ– trace_malloc_data { … } ; — type",
							"—Ⓕ– dump_vector ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_ptr_offset ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_usable_size ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_printf ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_init ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc ( ) { … } — function",
							"—Ⓕ– jsm_trace_free ( ) { … } — function",
							"—Ⓕ– jsm_trace_realloc ( ) { … } — function",
							" Ⓜ  PROG_NAME … — macro object",
							"—Ⓕ– jsm_help ( ) { … } — function",
							"—Ⓕ– jsm_eval_script ( ) { … } — function",
							"—Ⓕ– jsm_module_func ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function",
							"—Ⓜ– jsm_builtin_native ( ) … — macro function",
							"—Ⓜ– jsm_builtin_compiled ( ) … — macro function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4CAAA4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcG9sbGhhbmRsZXJfdCA7IOKAlCB0eXBlZGVmCiAgIOKSoSAganNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzX3N0ZF9zZXRfd29ya2VyX25ld19jb250ZXh0X2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBqc21fZHVtcF9lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9sb2FkX3BhY2thZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9ldmFsX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY29udGV4dF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX25hdGl2ZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgdHJhY2VfbWFsbG9jX2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBkdW1wX3ZlY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9yZWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIFBST0dfTkFNRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMganNtX2hlbHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAqgcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					591,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
						"symkeys":
						[
							[
								506,
								520
							],
							[
								784,
								795
							],
							[
								910,
								923
							],
							[
								1010,
								1039
							],
							[
								1156,
								1174
							],
							[
								1201,
								1214
							],
							[
								1276,
								1294
							],
							[
								1785,
								1803
							],
							[
								1814,
								1832
							],
							[
								1842,
								1860
							],
							[
								1866,
								1884
							],
							[
								1898,
								1916
							],
							[
								1927,
								1945
							],
							[
								1953,
								1971
							],
							[
								1982,
								2000
							],
							[
								2007,
								2025
							],
							[
								2055,
								2073
							],
							[
								2124,
								2158
							],
							[
								2208,
								2222
							],
							[
								2624,
								2640
							],
							[
								2998,
								3015
							],
							[
								5208,
								5221
							],
							[
								5675,
								5690
							],
							[
								6234,
								6249
							],
							[
								6537,
								6554
							],
							[
								7051,
								7066
							],
							[
								7083,
								7098
							],
							[
								7116,
								7133
							],
							[
								7169,
								7180
							],
							[
								7523,
								7550
							],
							[
								7711,
								7739
							],
							[
								8335,
								8358
							],
							[
								9040,
								9061
							],
							[
								9138,
								9154
							],
							[
								9584,
								9598
							],
							[
								9822,
								9839
							],
							[
								11071,
								11080
							],
							[
								11094,
								11102
							],
							[
								12227,
								12242
							],
							[
								13444,
								13459
							],
							[
								17596,
								17600
							],
							[
								23343,
								23361
							],
							[
								23978,
								23998
							]
						],
						"symlist":
						[
							"—Ⓕ– atomic_add_int ( ) { … } — function",
							"—Ⓒ– pollhandler { … } ; — type",
							" Ⓣ  pollhandler_t ; — typedef",
							" ⒡  js_std_set_module_loader_func ( ) ; — function declaration",
							" ⒡  malloc_usable_size ( ) ; — function declaration",
							"—Ⓜ– trim_dotslash ( ) … — macro function",
							"—Ⓜ– jsm_declare_module ( ) … — macro function",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  jsm_declare_module ( ) ; — function declaration",
							" ⒡  js_std_set_worker_new_context_func ( ) ; — function declaration",
							"—Ⓕ– jsm_dump_error ( ) { … } — function",
							"—Ⓕ– jsm_load_package ( ) { … } — function",
							"—Ⓕ– jsm_module_loader ( ) { … } — function",
							"—Ⓕ– jsm_eval_file ( ) { … } — function",
							"—Ⓕ– jsm_load_script ( ) { … } — function",
							"—Ⓕ– jsm_context_new ( ) { … } — function",
							"—Ⓜ– jsm_module_native ( ) … — macro function",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							"—Ⓒ– trace_malloc_data { … } ; — type",
							"—Ⓕ– dump_vector ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_ptr_offset ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_usable_size ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_printf ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_init ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc ( ) { … } — function",
							"—Ⓕ– jsm_trace_free ( ) { … } — function",
							"—Ⓕ– jsm_trace_realloc ( ) { … } — function",
							" Ⓜ  PROG_NAME … — macro object",
							"—Ⓕ– jsm_help ( ) { … } — function",
							"—Ⓕ– jsm_eval_script ( ) { … } — function",
							"—Ⓕ– jsm_module_func ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function",
							"—Ⓜ– jsm_builtin_native ( ) … — macro function",
							"—Ⓜ– jsm_builtin_compiled ( ) … — macro function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4CAAA4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcG9sbGhhbmRsZXJfdCA7IOKAlCB0eXBlZGVmCiAgIOKSoSAganNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzX3N0ZF9zZXRfd29ya2VyX25ld19jb250ZXh0X2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBqc21fZHVtcF9lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9sb2FkX3BhY2thZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9ldmFsX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY29udGV4dF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX25hdGl2ZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgdHJhY2VfbWFsbG9jX2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBkdW1wX3ZlY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9yZWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIFBST0dfTkFNRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMganNtX2hlbHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAqgcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					592,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4CAAA4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcG9sbGhhbmRsZXJfdCA7IOKAlCB0eXBlZGVmCiAgIOKSoSAganNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICAg4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAgIOKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogICDikqEgIGpzX3N0ZF9zZXRfd29ya2VyX25ld19jb250ZXh0X2Z1bmMgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBqc21fZHVtcF9lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9sb2FkX3BhY2thZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9ldmFsX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY29udGV4dF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX25hdGl2ZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAogICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgdHJhY2VfbWFsbG9jX2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBkdW1wX3ZlY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9yZWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIFBST0dfTkFNRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMganNtX2hlbHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					593,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								308,
								334
							],
							[
								539,
								543
							],
							[
								586,
								591
							],
							[
								661,
								692
							],
							[
								1348,
								1355
							],
							[
								1473,
								1490
							],
							[
								1522,
								1532
							],
							[
								1533,
								1549
							],
							[
								1598,
								1628
							],
							[
								1783,
								1806
							],
							[
								1807,
								1828
							],
							[
								2169,
								2183
							],
							[
								2674,
								2708
							],
							[
								3036,
								3088
							],
							[
								3129,
								3162
							],
							[
								3341,
								3391
							],
							[
								3436,
								3482
							],
							[
								3590,
								3643
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AQAAAAAAAAAAAAAAMgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					594,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								644,
								663
							],
							[
								691,
								705
							],
							[
								817,
								831
							],
							[
								1140,
								1152
							],
							[
								1216,
								1232
							],
							[
								1329,
								1362
							],
							[
								1841,
								1862
							],
							[
								1943,
								1962
							],
							[
								2094,
								2118
							],
							[
								2257,
								2273
							],
							[
								2925,
								2942
							],
							[
								3474,
								3495
							],
							[
								4363,
								4385
							],
							[
								5061,
								5086
							],
							[
								5856,
								5881
							],
							[
								6555,
								6584
							],
							[
								6823,
								6839
							],
							[
								7713,
								7729
							],
							[
								8819,
								8844
							],
							[
								9292,
								9306
							],
							[
								10416,
								10431
							],
							[
								10902,
								10915
							],
							[
								11509,
								11521
							],
							[
								11927,
								11939
							],
							[
								12354,
								12369
							],
							[
								13350,
								13370
							],
							[
								13709,
								13728
							],
							[
								13947,
								13959
							],
							[
								15922,
								15939
							],
							[
								16537,
								16555
							],
							[
								17767,
								17787
							],
							[
								18248,
								18269
							],
							[
								18743,
								18758
							],
							[
								19251,
								19271
							],
							[
								19730,
								19742
							],
							[
								20461,
								20476
							],
							[
								21975,
								22000
							],
							[
								22539,
								22564
							],
							[
								23816,
								23830
							],
							[
								24650,
								24664
							],
							[
								24956,
								24969
							],
							[
								27348,
								27361
							],
							[
								28268,
								28278
							],
							[
								36546,
								36558
							],
							[
								37088,
								37102
							],
							[
								37132,
								37146
							]
						],
						"symlist":
						[
							"—Ⓒ– pcg_state_setseq_64 { … } ; — type",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_bytecode_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concatarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield_to_array ( ) { … } — function",
							"—Ⓕ– js_misc_array_to_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function",
							"—Ⓕ– js_misc_is ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAQAAQ29uc29sZSguLi5hcmdzKQpDb25zb2xlCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAADCBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					595,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACACQAA4oCU4pK44oCTIHBjZ19zdGF0ZV9zZXRzZXFfNjQgeyDigKYgfSA7IOKAlCB0eXBlCiAgIOKTiSAgcGNnMzJfcmFuZG9tX3QgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcGNnMzJfcmFuZG9tX3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9yYW5kb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9pbml0X3N0YXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGNnMzJfcmFuZG9tX2JvdW5kZWRfZGl2aXNpb25sZXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnl0ZWNvZGVfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RyaW5nX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2FycmF5YnVmZmVyX2ZyZWVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3RvcG9pbnRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZHVwYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb25jYXRhcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0cGVyZm9ybWFuY2Vjb3VudGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19wcm9jbGluayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfcHJvY3JlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2dldHByb3RvdHlwZWNoYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19ocnRpbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ZubWF0Y2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3VuYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19idG9hICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9iICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb21waWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193cml0ZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JlYWRfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192YWx1ZXR5cGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2V2YWxiaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jbGFzc2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19iaXRmaWVsZF90b19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfYXJyYXlfdG9fYml0ZmllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JhbmRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXNjYXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19xdW90ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2lzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"contents": "#include <quickjs-libc.h>\n#include \"quickjs-misc.h\"\n#include \"quickjs-internal.h\"\n#include \"quickjs-location.h\"\n#include \"quickjs-stringdecoder.h\"\n#include \"utils.h\"\n#include \"path.h\"\n#include \"base64.h\"\n#include <time.h>\n#include <sys/utsname.h>\n#include <errno.h>\n#include \"buffer-utils.h\"\n\nenum {\n  FUNC_GETEXECUTABLE = 0,\n  FUNC_GETCWD,\n  FUNC_GETROOT,\n  FUNC_GETFD,\n  FUNC_GETCOMMANDLINE,\n  FUNC_GETPROCMAPS,\n  FUNC_GETPROCMOUNTS,\n  FUNC_GETPROCSTAT,\n  FUNC_GETPID,\n  FUNC_GETPPID,\n  FUNC_GETSID,\n  FUNC_GETUID,\n  FUNC_GETGID,\n  FUNC_GETEUID,\n  FUNC_GETEGID,\n  FUNC_SETUID,\n  FUNC_SETGID,\n  FUNC_SETEUID,\n  FUNC_SETEGID\n};\n\ntypedef struct pcg_state_setseq_64 {\n  uint64_t state, inc;\n} pcg32_random_t;\n\nstatic pcg32_random_t pcg32_global = {0x853c49e6748fea9bULL, 0xda3e39cb94b95bdbULL};\n\nstatic inline uint32_t\npcg32_random_r(pcg32_random_t* rng) {\n  uint64_t oldstate = rng->state;\n  rng->state = oldstate * 6364136223846793005ULL + rng->inc;\n  uint32_t xorshifted = (uint32_t)(((oldstate >> 18u) ^ oldstate) >> 27u);\n  uint32_t rot = oldstate >> 59u;\n  return (xorshifted >> rot) | (xorshifted << ((-rot) & 31));\n}\n\nstatic uint32_t\npcg32_random(void) {\n  return pcg32_random_r(&pcg32_global);\n}\n\nstatic void\npcg32_init_state(uint32_t state) {\n  pcg32_global.state = ~(((uint64_t)state) << 32) | state;\n}\n\nstatic uint32_t\npcg32_random_bounded_divisionless(uint32_t range) {\n  uint64_t random32bit, multiresult;\n  uint32_t leftover;\n  uint32_t threshold;\n  random32bit = pcg32_random();\n  multiresult = random32bit * range;\n  leftover = (uint32_t)multiresult;\n  if(leftover < range) {\n    threshold = -range % range;\n    while(leftover < threshold) {\n      random32bit = pcg32_random();\n      multiresult = random32bit * range;\n      leftover = (uint32_t)multiresult;\n    }\n  }\n  return multiresult >> 32; // [0, range)\n}\n\nstatic void\njs_bytecode_free_func(JSRuntime* rt, void* opaque, void* ptr) {\n  js_free_rt(rt, ptr);\n}\n\nstatic void\njs_string_free_func(JSRuntime* rt, void* opaque, void* ptr) {\n  JSValue value = js_cstring_value(opaque);\n\n  JS_FreeValueRT(rt, value);\n}\n\nstatic void\njs_arraybuffer_free_func(JSRuntime* rt, void* opaque, void* ptr) {\n  JSValue value = JS_MKPTR(JS_TAG_OBJECT, ptr);\n\n  JS_FreeValueRT(rt, value);\n}\n\nstatic JSValue\njs_misc_tostring(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret = JS_UNDEFINED;\n  JSValue arraybuffer_ctor = js_global_get(ctx, \"ArrayBuffer\");\n\n  if(js_value_isclass(ctx, argv[0], JS_CLASS_ARRAY_BUFFER) || js_is_arraybuffer(ctx, argv[0]) || JS_IsInstanceOf(ctx, argv[0], arraybuffer_ctor)) {\n    uint8_t* data;\n    size_t len;\n\n    if((data = JS_GetArrayBuffer(ctx, &len, argv[0]))) {\n      OffsetLength ol;\n\n      ol = js_offset_length(ctx, len, argc - 1, argv + 1);\n\n      ret = JS_NewStringLen(ctx, (const char*)data + ol.offset, ol.length);\n    }\n  }\n\n  JS_FreeValue(ctx, arraybuffer_ctor);\n\n  return ret;\n}\n\nstatic JSValue\njs_misc_topointer(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret = JS_UNDEFINED;\n  void* ptr = 0;\n  char buf[128];\n\n  if(js_value_isclass(ctx, argv[0], JS_CLASS_ARRAY_BUFFER) || js_is_arraybuffer(ctx, argv[0])) {\n    size_t len;\n    ptr = JS_GetArrayBuffer(ctx, &len, argv[0]);\n  } else if(JS_IsString(argv[0])) {\n    ptr = js_cstring_ptr(argv[0]);\n  }\n\n  if(ptr) {\n    snprintf(buf, sizeof(buf), \"%p\", ptr);\n    ret = JS_NewString(ctx, buf);\n  } else {\n    ret = JS_NULL;\n  }\n\n  return ret;\n}\n\nstatic JSValue\njs_misc_toarraybuffer(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret = JS_UNDEFINED;\n  MemoryBlock b;\n  OffsetLength o = js_offset_length(ctx, INT64_MAX, argc - 1, argv + 1);\n  JSFreeArrayBufferDataFunc* f;\n  void* opaque;\n\n  /*  if(JS_IsString(argv[0])) {\n      JSValueConst value = argv[0]; // JS_DupValue(ctx, argv[0]);\n      b.base = JS_ToCStringLen(ctx, &b.size, value);\n      f = &js_string_free_func;\n      opaque = b.base;\n      ret =\n          JS_NewArrayBuffer(ctx, b.base + o.offset, MIN_NUM(b.size, o.length),\n    js_string_free_func, (void*)b.base, FALSE); } else*/\n  {\n    InputBuffer input = js_input_chars(ctx, argv[0]);\n    b = input_buffer_block(&input);\n    //    b = block_range(&b, &input.range);\n    b = block_range(&b, &o);\n    ret = js_arraybuffer_fromvalue(ctx, b.base, b.size, argv[0]);\n  }\n\n  return ret;\n}\n\nstatic JSValue\njs_misc_duparraybuffer(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret = JS_UNDEFINED;\n  JSValue arraybuffer_ctor = js_global_get(ctx, \"ArrayBuffer\");\n\n  if(JS_IsInstanceOf(ctx, argv[0], arraybuffer_ctor)) {\n    JSValue value = JS_DupValue(ctx, argv[0]);\n    uint8_t* data;\n    size_t len;\n\n    if((data = JS_GetArrayBuffer(ctx, &len, argv[0]))) {\n      OffsetLength ol = js_offset_length(ctx, len, argc - 1, argv + 1);\n      JSObject* obj = JS_VALUE_GET_OBJ(value);\n      ret = JS_NewArrayBuffer(ctx, data + ol.offset, ol.length, js_arraybuffer_free_func, (void*)obj, FALSE);\n    }\n  }\n\n  JS_FreeValue(ctx, arraybuffer_ctor);\n\n  return ret;\n}\n\nstatic JSValue\njs_misc_resizearraybuffer(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret = JS_UNDEFINED;\n\n  if(js_is_arraybuffer(ctx, argv[0])) {\n    JSObject* obj = JS_VALUE_GET_OBJ(argv[0]);\n    JSArrayBuffer* arraybuf = obj->u.array_buffer;\n    uint64_t newlen;\n    JS_ToIndex(ctx, &newlen, argv[1]);\n\n    if(arraybuf->shared)\n      ret = JS_ThrowTypeError(ctx, \"ArrayBuffer must not be shared\");\n    else if(arraybuf->shared)\n      ret = JS_ThrowTypeError(ctx, \"ArrayBuffer must have opaque == 0\");\n    else {\n      arraybuf->data = js_realloc(ctx, arraybuf->data, newlen);\n      arraybuf->byte_length = newlen;\n\n      ret = JS_MKPTR(JS_TAG_OBJECT, obj);\n    }\n  } else {\n    ret = JS_ThrowTypeError(ctx, \"Expecting ArrayBuffer\");\n  }\n\n  return ret;\n}\n\nstatic JSValue\njs_misc_concatarraybuffer(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret = JS_UNDEFINED;\n  int i;\n  size_t total_len = 0, pos = 0;\n  uint8_t* buf;\n\n  for(i = 0; i < argc; i++) {\n    if(!js_is_arraybuffer(ctx, argv[0]))\n      return JS_ThrowTypeError(ctx, \"argument %d is not ArrayBuffer\", i + 1);\n    total_len += js_arraybuffer_length(ctx, argv[i]);\n  }\n\n  buf = js_malloc(ctx, total_len);\n\n  for(i = 0; i < argc; i++) {\n    size_t len;\n    uint8_t* ptr;\n    ptr = JS_GetArrayBuffer(ctx, &len, argv[i]);\n\n    memcpy(&buf[pos], ptr, len);\n    pos += len;\n  }\n\n  return JS_NewArrayBuffer(ctx, buf, total_len, js_bytecode_free_func, 0, FALSE);\n}\n\nstatic JSValue\njs_misc_getperformancecounter(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  struct timespec ts;\n\n  clock_gettime(CLOCK_MONOTONIC, &ts);\n\n  return JS_NewFloat64(ctx, (double)ts.tv_sec * 1000 + ((double)ts.tv_nsec / 1e06));\n}\n\nstatic JSValue\njs_misc_proclink(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[], int magic) {\n  JSValue ret = JS_UNDEFINED;\n  DynBuf dbuf = {0};\n  const char *link, path[256];\n  size_t n;\n  ssize_t r;\n\n  switch(magic) {\n    case FUNC_GETEXECUTABLE: link = \"exe\"; break;\n    case FUNC_GETCWD: link = \"cwd\"; break;\n    case FUNC_GETROOT: link = \"root\"; break;\n    case FUNC_GETFD: link = \"fd/\"; break;\n  }\n\n  n = snprintf(path, sizeof(path), \"/proc/self/%s\", link);\n\n  if(magic == FUNC_GETFD) {\n    int32_t fd;\n    if(argc < 1 || !JS_IsNumber(argv[0]))\n      return JS_ThrowTypeError(ctx, \"argument 1 must be Number\");\n\n    JS_ToInt32(ctx, &fd, argv[0]);\n    snprintf(&path[n], sizeof(path) - n, \"%d\", fd);\n  }\n\n  js_dbuf_init(ctx, &dbuf);\n\n  if((r = path_readlink(path, &dbuf)) > 0) {\n    ret = dbuf_tostring_free(&dbuf, ctx);\n  } else if(r < 0) {\n  }\n\n  return ret;\n}\n\nstatic JSValue\njs_misc_procread(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[], int magic) {\n  JSValue ret = JS_UNDEFINED;\n  DynBuf dbuf = {0};\n  ssize_t i, j = 0, size, n;\n  const char* file;\n  char sep = '\\n';\n\n  switch(magic) {\n    case FUNC_GETCOMMANDLINE:\n      file = \"/proc/self/cmdline\";\n      sep = '\\0';\n      break;\n    case FUNC_GETPROCMAPS:\n      file = \"/proc/self/maps\";\n      sep = '\\n';\n      break;\n    case FUNC_GETPROCMOUNTS:\n      file = \"/proc/self/mounts\";\n      sep = '\\n';\n      break;\n    case FUNC_GETPROCSTAT:\n      file = \"/proc/self/stat\";\n      sep = ' ';\n      break;\n  }\n\n  js_dbuf_init(ctx, &dbuf);\n\n  if((size = dbuf_load(&dbuf, file)) > 0) {\n\n    while(size > 0 && dbuf.buf[size - 1] == '\\n') size--;\n\n    ret = JS_NewArray(ctx);\n    for(i = 0; i < size; i += n + 1) {\n      size_t len;\n      len = n = byte_chr(&dbuf.buf[i], size - i, sep);\n      while(len > 0 && is_whitespace_char(dbuf.buf[i + len - 1])) len--;\n      JS_SetPropertyUint32(ctx, ret, j++, JS_NewStringLen(ctx, &dbuf.buf[i], len));\n    }\n  }\n\n  dbuf_free(&dbuf);\n\n  return ret;\n}\n\nstatic JSValue\njs_misc_getprototypechain(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue proto, ret;\n  size_t j = 0;\n\n  if(argc < 1 || !JS_IsObject(argv[0]))\n    return JS_ThrowTypeError(ctx, \"argument 1 object excepted\");\n\n  ret = JS_NewArray(ctx);\n\n  for(proto = argv[0]; !JS_IsException(proto); proto = JS_GetPrototype(ctx, proto))       {\n\n    if(j > 0)\n      JS_SetPropertyUint32(ctx, ret, j - 1, proto);\n    j++;\n  }\n\n  return ret;\n}\n\nstatic JSValue\njs_misc_hrtime(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  struct timespec ts;\n  JSValue ret;\n\n  clock_gettime(CLOCK_MONOTONIC, &ts);\n\n  if(argc >= 1 && JS_IsArray(ctx, argv[0])) {\n    int64_t sec, nsec;\n    JSValue psec, pnsec;\n\n    psec = JS_GetPropertyUint32(ctx, argv[0], 0);\n    pnsec = JS_GetPropertyUint32(ctx, argv[0], 1);\n\n    JS_ToInt64(ctx, &sec, psec);\n    JS_ToInt64(ctx, &nsec, pnsec);\n    JS_FreeValue(ctx, psec);\n    JS_FreeValue(ctx, pnsec);\n\n    if(nsec > ts.tv_nsec) {\n      ts.tv_sec -= 1;\n      ts.tv_nsec += 1000000000;\n    }\n\n    ts.tv_sec -= sec;\n    ts.tv_nsec -= nsec;\n  }\n\n  ret = JS_NewArray(ctx);\n  JS_SetPropertyUint32(ctx, ret, 0, JS_NewInt64(ctx, ts.tv_sec));\n  JS_SetPropertyUint32(ctx, ret, 1, JS_NewInt64(ctx, ts.tv_nsec));\n\n  return ret;\n}\n\n/*static JSValue\njs_misc_realpath(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  char resolved[PATH_MAX];\n  const char* path = JS_ToCString(ctx, argv[0]);\n  char* result;\n\n  if((result = realpath(path, resolved)))\n    return JS_NewString(ctx, result);\n  return JS_NULL;\n}*/\n\nstatic JSValue\njs_misc_fnmatch(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  size_t plen, slen;\n  int32_t flags = 0, ret;\n\n  const char* pattern = JS_ToCStringLen(ctx, &plen, argv[0]);\n  const char* string = JS_ToCStringLen(ctx, &slen, argv[1]);\n\n  if(argc >= 3)\n    JS_ToInt32(ctx, &flags, argv[2]);\n\n  ret = path_fnmatch(pattern, plen, string, slen, flags);\n  JS_FreeCString(ctx, pattern);\n  JS_FreeCString(ctx, string);\n  return JS_NewBool(ctx, !ret);\n}\n\nstatic JSValue\njs_misc_uname(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  struct utsname un;\n  JSValue ret = JS_UNDEFINED;\n\n  if(uname(&un) != -1) {\n    ret = JS_NewObject(ctx);\n\n    JS_SetPropertyStr(ctx, ret, \"sysname\", JS_NewString(ctx, un.sysname));\n    JS_SetPropertyStr(ctx, ret, \"nodename\", JS_NewString(ctx, un.nodename));\n    JS_SetPropertyStr(ctx, ret, \"release\", JS_NewString(ctx, un.release));\n    JS_SetPropertyStr(ctx, ret, \"version\", JS_NewString(ctx, un.version));\n    JS_SetPropertyStr(ctx, ret, \"machine\", JS_NewString(ctx, un.machine));\n  }\n\n  return ret;\n}\n\nstatic JSValue\njs_misc_btoa(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret;\n  InputBuffer input = js_input_chars(ctx, argv[0]);\n  size_t enclen = b64_get_encoded_buffer_size(input.size);\n  uint8_t* encbuf = js_malloc(ctx, enclen);\n\n  b64_encode(input.data, input.size, encbuf);\n\n  ret = JS_NewStringLen(ctx, (const char*)encbuf, enclen);\n  js_free(ctx, encbuf);\n  return ret;\n}\n\nstatic JSValue\njs_misc_atob(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret;\n  InputBuffer input = js_input_chars(ctx, argv[0]);\n  size_t declen = b64_get_decoded_buffer_size(input.size);\n  uint8_t* decbuf = js_malloc(ctx, declen);\n\n  b64_decode(input.data, input.size, decbuf);\n\n  ret = JS_NewArrayBufferCopy(ctx, (const uint8_t*)decbuf, declen);\n  js_free(ctx, decbuf);\n  return ret;\n}\n\nstatic JSValue\njs_misc_compile(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[], int magic) {\n  JSValue ret = JS_UNDEFINED;\n  const char* file = JS_ToCString(ctx, argv[0]);\n  BOOL is_mod = FALSE;\n  uint8_t* buf;\n  size_t len;\n  int32_t flags = JS_EVAL_TYPE_GLOBAL;\n\n  if(argc >= 2 && JS_IsNumber(argv[1])) {\n    JS_ToInt32(ctx, &flags, argv[1]);\n  } else if(argc >= 2 && JS_IsBool(argv[1])) {\n    if(JS_ToBool(ctx, argv[1]))\n      flags |= JS_EVAL_TYPE_MODULE;\n  }\n  is_mod = !!(flags & JS_EVAL_TYPE_MODULE);\n  if(str_ends(file, \".jsm\"))\n    is_mod = TRUE;\n  if((buf = js_load_file(ctx, &len, file))) {\n    if(!is_mod && JS_DetectModule((const char*)buf, len))\n      is_mod = TRUE;\n    flags |= (is_mod ? JS_EVAL_TYPE_MODULE : JS_EVAL_TYPE_GLOBAL);\n    ret = JS_Eval(ctx, (const char*)buf, len, file, flags | (is_mod ? JS_EVAL_FLAG_COMPILE_ONLY : 0));\n\n    if(is_mod && !(flags & JS_EVAL_FLAG_COMPILE_ONLY)) {\n      ret = JS_EvalFunction(ctx, ret);\n    }\n  }\n  return ret;\n}\n\nstatic JSValue\njs_misc_write_object(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret = JS_UNDEFINED;\n  size_t size;\n  uint8_t* bytecode;\n\n  if((bytecode = JS_WriteObject(ctx, &size, argv[0], JS_WRITE_OBJ_BYTECODE))) {\n    ret = JS_NewArrayBuffer(ctx, bytecode, size, js_bytecode_free_func, 0, FALSE);\n  }\n  return ret;\n}\n\nstatic JSValue\njs_misc_read_object(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  InputBuffer input = js_input_chars(ctx, argv[0]);\n\n  return JS_ReadObject(ctx, input.data, input.size, JS_READ_OBJ_BYTECODE);\n}\n\nstatic JSValue\njs_misc_getx(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[], int magic) {\n\n  int32_t ret = 0;\n\n  switch(magic) {\n    case FUNC_GETPID: {\n      ret = getpid();\n      break;\n    }\n    case FUNC_GETPPID: {\n      ret = getppid();\n      break;\n    }\n    case FUNC_GETSID: {\n      // sret = getsid();\n      break;\n    }\n    case FUNC_GETUID: {\n      ret = getuid();\n      break;\n    }\n    case FUNC_GETGID: {\n      ret = getgid();\n      break;\n    }\n    case FUNC_GETEUID: {\n      ret = geteuid();\n      break;\n    }\n    case FUNC_GETEGID: {\n      ret = getegid();\n      break;\n    }\n    case FUNC_SETUID: {\n      int32_t uid;\n      JS_ToInt32(ctx, &uid, argv[0]);\n      ret = setuid(uid);\n      break;\n    }\n    case FUNC_SETGID: {\n      int32_t gid;\n      JS_ToInt32(ctx, &gid, argv[0]);\n      ret = setgid(gid);\n      break;\n    }\n    case FUNC_SETEUID: {\n      int32_t euid;\n      JS_ToInt32(ctx, &euid, argv[0]);\n      ret = setuid(euid);\n      break;\n      break;\n    }\n    case FUNC_SETEGID: {\n      int32_t egid;\n      JS_ToInt32(ctx, &egid, argv[0]);\n      ret = setgid(egid);\n      break;\n    }\n  }\n  if(ret == -1)\n    return JS_ThrowInternalError(ctx,\n                                 \"%s() failed: %d\",\n                                 ((const char* const[]){\n                                     \"getpid\",\n                                     \"getppid\",\n                                     \"getsid\",\n                                     \"getuid\",\n                                     \"getgid\",\n                                     \"geteuid\",\n                                     \"getegid\",\n                                     \"setuid\",\n                                     \"setgid\",\n                                     \"seteuid\",\n                                     \"setegid\",\n                                 })[magic - FUNC_GETPID]);\n\n  return JS_NewInt32(ctx, ret);\n}\n\nenum {\n  VALUE_TYPE = 0,\n  VALUE_TAG,\n  VALUE_PTR,\n};\n\nstatic JSValue\njs_misc_valuetype(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[], int magic) {\n  JSValue ret = JS_UNDEFINED;\n\n  switch(magic) {\n    case VALUE_TYPE: {\n      const char* typestr = js_value_typestr(ctx, argv[0]);\n      ret = JS_NewString(ctx, typestr);\n      break;\n    }\n    case VALUE_TAG: {\n      ret = JS_NewInt32(ctx, JS_VALUE_GET_TAG(argv[0]));\n      break;\n    }\n    case VALUE_PTR: {\n      void* ptr = JS_VALUE_GET_PTR(argv[0]);\n      char buf[128];\n\n      snprintf(buf, sizeof(buf), \"%p\", ptr);\n      ret = JS_NewString(ctx, buf);\n      break;\n    }\n  }\n  return ret;\n}\n\nstatic JSValue\njs_misc_evalbinary(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret = JS_UNDEFINED;\n  BOOL load_only = FALSE;\n  JSValueConst obj;\n  int tag = JS_VALUE_GET_TAG(argv[0]);\n  if(argc >= 2)\n    load_only = JS_ToBool(ctx, argv[1]);\n\n  if(tag != JS_TAG_MODULE && tag != JS_TAG_FUNCTION_BYTECODE)\n    obj = js_misc_read_object(ctx, this_val, argc, argv);\n  else\n    obj = argv[0];\n  if(JS_IsException(obj))\n    return obj;\n\n  tag = JS_VALUE_GET_TAG(obj);\n\n  if(tag != JS_TAG_MODULE && tag != JS_TAG_FUNCTION_BYTECODE)\n    return JS_ThrowTypeError(ctx, \"obj is not MODULE nor BYTECODE\");\n\n  if(load_only) {\n    if(tag == JS_TAG_MODULE)\n      js_module_set_import_meta(ctx, obj, FALSE, FALSE);\n  } else {\n    if(tag == JS_TAG_MODULE) {\n      if(JS_ResolveModule(ctx, obj) < 0) {\n        JSModuleDef* m = JS_VALUE_GET_PTR(obj);\n        const char* name = JS_AtomToCString(ctx, m->module_name);\n        ret = JS_ThrowInternalError(ctx, \"Failed resolving module '%s'\", name);\n        JS_FreeCString(ctx, name);\n        JS_FreeValue(ctx, obj);\n        return ret;\n      }\n      js_module_set_import_meta(ctx, obj, FALSE, TRUE);\n    }\n    ret = JS_EvalFunction(ctx, obj);\n  }\n  return ret;\n}\n\nstatic JSValue\njs_misc_opcode_array(JSContext* ctx, const JSOpCode* opcode) {\n  JSValue ret = JS_NewArray(ctx);\n  JS_SetPropertyUint32(ctx, ret, 0, JS_NewUint32(ctx, opcode->size));\n  JS_SetPropertyUint32(ctx, ret, 1, JS_NewUint32(ctx, opcode->n_pop));\n  JS_SetPropertyUint32(ctx, ret, 2, JS_NewUint32(ctx, opcode->n_push));\n  JS_SetPropertyUint32(ctx, ret, 3, JS_NewUint32(ctx, opcode->fmt));\n  JS_SetPropertyUint32(ctx, ret, 4, JS_NewString(ctx, opcode->name));\n  return ret;\n}\n\nstatic JSValue\njs_misc_opcode_object(JSContext* ctx, const JSOpCode* opcode) {\n  JSValue ret = JS_NewObject(ctx);\n  JS_SetPropertyStr(ctx, ret, \"size\", JS_NewUint32(ctx, opcode->size));\n  JS_SetPropertyStr(ctx, ret, \"n_pop\", JS_NewUint32(ctx, opcode->n_pop));\n  JS_SetPropertyStr(ctx, ret, \"n_push\", JS_NewUint32(ctx, opcode->n_push));\n  JS_SetPropertyStr(ctx, ret, \"fmt\", JS_NewUint32(ctx, opcode->fmt));\n  JS_SetPropertyStr(ctx, ret, \"name\", JS_NewString(ctx, opcode->name));\n  return ret;\n}\n\nstatic JSValue\njs_misc_opcodes(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret = JS_NewArray(ctx);\n  size_t i, j, len = countof(js_opcodes);\n  BOOL as_object = FALSE;\n\n  if(argc >= 1)\n    as_object = JS_ToBool(ctx, argv[0]);\n\n  for(i = 0, j = 0; i < len; i++) {\n\n    if(i >= OP_TEMP_START && i < OP_TEMP_END)\n      continue;\n\n    JS_SetPropertyUint32(ctx, ret, j++, (as_object ? js_misc_opcode_object : js_misc_opcode_array)(ctx, &js_opcodes[i]));\n  }\n\n  return ret;\n}\n\nstatic JSValue\njs_misc_get_bytecode(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  JSValue ret = JS_UNDEFINED;\n\n  if(JS_IsFunction(ctx, argv[0])) {\n    JSObject* obj = JS_VALUE_GET_OBJ(argv[0]);\n    JSFunctionBytecode* fnbc;\n\n    if((fnbc = obj->u.func.function_bytecode)) {\n      ret = JS_NewArrayBufferCopy(ctx, fnbc->byte_code_buf, fnbc->byte_code_len);\n    }\n  }\n\n  return ret;\n}\n\nenum {\n  ATOM_TO_STRING = 0,\n  ATOM_TO_VALUE,\n  VALUE_TO_ATOM,\n};\n\nstatic JSValue\njs_misc_atom(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[], int magic) {\n  JSValue ret = JS_UNDEFINED;\n\n  switch(magic) {\n    case ATOM_TO_STRING: {\n      int32_t atom;\n      JS_ToInt32(ctx, &atom, argv[0]);\n      ret = JS_AtomToString(ctx, atom);\n      break;\n    }\n    case ATOM_TO_VALUE: {\n      int32_t atom;\n      JS_ToInt32(ctx, &atom, argv[0]);\n      ret = JS_AtomToValue(ctx, atom);\n      break;\n    }\n    case VALUE_TO_ATOM: {\n      JSAtom atom = JS_ValueToAtom(ctx, argv[0]);\n      ret = JS_NewUint32(ctx, atom);\n      break;\n    }\n  }\n  return ret;\n}\n\nenum {\n  GET_CLASS_ID = 0,\n  GET_CLASS_NAME,\n  GET_CLASS_ATOM,\n  GET_CLASS_COUNT,\n  GET_CLASS_PROTO,\n  GET_CLASS_CONSTRUCTOR,\n};\n\nstatic JSValue\njs_misc_classid(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[], int magic) {\n  JSValue ret = JS_UNDEFINED;\n  JSObject* obj;\n  int32_t class_id = 0;\n\n  if(argc >= 1) {\n    if(JS_IsNumber(argv[0]))\n      JS_ToInt32(ctx, &class_id, argv[0]);\n    else if((obj = js_value_obj(argv[0])))\n      class_id = obj->class_id;\n  }\n\n  switch(magic) {\n    case GET_CLASS_ID: {\n      if(class_id > 0)\n        ret = JS_NewUint32(ctx, class_id);\n      break;\n    }\n    case GET_CLASS_NAME: {\n      if(class_id > 0) {\n        JSAtom atom;\n        if((atom = js_class_atom(ctx, class_id)))\n          ret = JS_AtomToValue(ctx, atom);\n      }\n      break;\n    }\n    case GET_CLASS_ATOM: {\n      if(class_id > 0) {\n        JSAtom atom;\n        if((atom = js_class_atom(ctx, class_id)))\n          ret = JS_NewInt32(ctx, atom);\n      }\n      break;\n    }\n    case GET_CLASS_COUNT: {\n      uint32_t i, class_count = ctx->rt->class_count;\n      for(i = 1; i < class_count; i++)\n        if(!JS_IsRegisteredClass(ctx->rt, i))\n          break;\n\n      ret = JS_NewUint32(ctx, i);\n      break;\n    }\n    case GET_CLASS_PROTO: {\n      if(class_id > 0)\n        ret = JS_GetClassProto(ctx, class_id);\n      break;\n    }\n    case GET_CLASS_CONSTRUCTOR: {\n      if(class_id > 0) {\n        JSValue proto = JS_GetClassProto(ctx, class_id);\n        if(JS_IsObject(proto))\n          ret = JS_GetPropertyStr(ctx, proto, \"constructor\");\n        JS_FreeValue(ctx, proto);\n      }\n      break;\n    }\n  }\n  return ret;\n}\n\nstatic JSValue\n\njs_misc_bitfield_to_array(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  const uint8_t* buf;\n  size_t len;\n  int64_t offset = 0;\n  JSValue ret = JS_UNDEFINED;\n\n  if(argc >= 2)\n    JS_ToInt64(ctx, &offset, argv[1]);\n\n  if((buf = JS_GetArrayBuffer(ctx, &len, argv[0]))) {\n    size_t i, j = 0, bits = len * 8;\n    ret = JS_NewArray(ctx);\n\n    for(i = 0; i < bits; i++) {\n      if(buf[i >> 3] & (1u << (i & 0x7))) {\n        JS_SetPropertyUint32(ctx, ret, j++, JS_NewInt64(ctx, i + offset));\n      }\n    }\n  }\n  return ret;\n}\n\nstatic JSValue\njs_misc_array_to_bitfield(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  size_t len;\n  int64_t offset = 0;\n  JSValue ret = JS_UNDEFINED;\n\n  if(argc >= 2)\n    JS_ToInt64(ctx, &offset, argv[1]);\n\n  if(!JS_IsArray(ctx, argv[0]))\n    return JS_ThrowTypeError(ctx, \"argument must be an array\");\n\n  if((len = js_array_length(ctx, argv[0]))) {\n    size_t i;\n    int64_t max = -1;\n    uint8_t* bufptr;\n    size_t bufsize;\n\n    for(i = 0; i < len; i++) {\n      JSValue value = JS_GetPropertyUint32(ctx, argv[0], i);\n      uint32_t number;\n      JS_ToUint32(ctx, &number, value);\n      JS_FreeValue(ctx, value);\n\n      if(max < number)\n        max = number;\n    }\n    bufsize = ((max + 1) + 7) >> 3;\n    if((bufptr = js_mallocz(ctx, bufsize)) == 0)\n      return JS_ThrowOutOfMemory(ctx);\n\n    for(i = 0; i < len; i++) {\n      JSValue value = JS_GetPropertyUint32(ctx, argv[0], i);\n      uint32_t number;\n      JS_ToUint32(ctx, &number, value);\n      JS_FreeValue(ctx, value);\n\n      number -= offset;\n\n      bufptr[number >> 3] |= 1u << (number & 0x7);\n    }\n\n    ret = JS_NewArrayBuffer(ctx, bufptr, bufsize, js_arraybuffer_free_func, NULL, FALSE);\n  }\n  return ret;\n}\n\nenum {\n  RANDOM_RAND,\n  RANDOM_RANDI,\n  RANDOM_RANDF,\n  RANDOM_SRAND,\n};\n\nstatic JSValue\njs_misc_random(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[], int magic) {\n  uint32_t bound = 0;\n  if(argc > 0 && JS_IsNumber(argv[0]))\n    JS_ToUint32(ctx, &bound, argv[0]);\n\n  switch(magic) {\n    case RANDOM_RAND: {\n      uint32_t num = argc > 0 ? pcg32_random_bounded_divisionless(bound) : pcg32_random();\n      return JS_NewUint32(ctx, num);\n    }\n    case RANDOM_RANDI: {\n      int32_t num = argc > 0 ? pcg32_random_bounded_divisionless(bound * 2) - bound : pcg32_random();\n      return JS_NewInt32(ctx, num);\n    }\n\n    case RANDOM_RANDF: {\n      uint32_t num = pcg32_random();\n      return JS_NewFloat64(ctx, (double)num / UINT32_MAX);\n    }\n    case RANDOM_SRAND: {\n      uint32_t st = 0;\n      JS_ToUint32(ctx, &st, argv[0]);\n      pcg32_init_state(st);\n      return JS_UNDEFINED;\n    }\n  }\n}\n\nJSValue\njs_misc_escape(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  InputBuffer input = js_input_chars(ctx, argv[0]);\n  DynBuf output;\n  js_dbuf_init(ctx, &output);\n  dbuf_put_escaped(&output, (const char*)input.data, input.size);\n  return dbuf_tostring_free(&output, ctx);\n}\n\nJSValue\njs_misc_quote(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  InputBuffer input = js_input_chars(ctx, argv[0]);\n  DynBuf output;\n  char quote = '\"',\n       table[256] = {\n           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 'b',  't',  'n',  'v',  'f',  'r',  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n           0x00, 0x00, 0x00, 0x00, '\\\\', 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n       };\n\n  js_dbuf_init(ctx, &output);\n  if(argc >= 2) {\n    const char* str = JS_ToCString(ctx, argv[1]);\n    if(str[0])\n      quote = str[0];\n    JS_FreeCString(ctx, str);\n  }\n\n  table[(unsigned)quote] = quote;\n\n  if(quote == '`') {\n    table[(unsigned)'\\r'] = 0;\n    table[(unsigned)'\\n'] = 0;\n    table[(unsigned)'$'] = '$';\n  }\n\n  dbuf_putc(&output, quote);\n  dbuf_put_escaped_table(&output, (const char*)input.data, input.size, table);\n  dbuf_putc(&output, quote);\n  return dbuf_tostring_free(&output, ctx);\n}\n\nJSValue\njs_misc_error(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[]) {\n  int32_t errnum = errno;\n  const char* syscall = 0;\n  JSValue err;\n  if(argc >= 1)\n    JS_ToInt32(ctx, &errnum, argv[0]);\n  if(argc >= 2)\n    syscall = JS_ToCString(ctx, argv[1]);\n\n  err = JS_NewObject(ctx);\n\n  JS_SetPropertyStr(ctx, err, \"errno\", JS_NewInt32(ctx, errnum));\n  JS_SetPropertyStr(ctx, err, \"syscall\", JS_NewString(ctx, syscall));\n\n  if(syscall)\n    JS_FreeCString(ctx, syscall);\n\n  return err;\n}\nenum {\n  IS_ARRAY,\n  IS_BIGDECIMAL,\n  IS_BIGFLOAT,\n  IS_BIGINT,\n  IS_BOOL,\n  IS_CFUNCTION,\n  IS_CONSTRUCTOR,\n  IS_EMPTYSTRING,\n  IS_ERROR,\n  IS_EXCEPTION,\n  IS_EXTENSIBLE,\n  IS_FUNCTION,\n  IS_HTMLDDA,\n  IS_INSTANCEOF,\n  IS_INTEGER,\n  IS_JOBPENDING,\n  IS_LIVEOBJECT,\n  IS_NULL,\n  IS_NUMBER,\n  IS_OBJECT,\n  IS_REGISTEREDCLASS,\n  IS_STRING,\n  IS_SYMBOL,\n  IS_UNCATCHABLEERROR,\n  IS_UNDEFINED,\n  IS_UNINITIALIZED,\n};\n\nJSValue\njs_misc_is(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst argv[], int magic) {\n  int32_t r = -1;\n  JSValueConst arg = argv[0];\n\n  switch(magic) {\n    case IS_ARRAY: r = JS_IsArray(ctx, arg); break;\n    case IS_BIGDECIMAL: r = JS_IsBigDecimal(arg); break;\n    case IS_BIGFLOAT: r = JS_IsBigFloat(arg); break;\n    case IS_BIGINT: r = JS_IsBigInt(ctx, arg); break;\n    case IS_BOOL: r = JS_IsBool(arg); break;\n    case IS_CFUNCTION: r = JS_GetClassID(arg) == JS_CLASS_C_FUNCTION; break;\n    case IS_CONSTRUCTOR: r = JS_IsConstructor(ctx, arg); break;\n    case IS_EMPTYSTRING: r = JS_VALUE_GET_TAG(arg) == JS_TAG_STRING && JS_VALUE_GET_STRING(arg)->len == 0; break;\n    case IS_ERROR: r = JS_IsError(ctx, arg); break;\n    case IS_EXCEPTION: r = JS_IsException(arg); break;\n    case IS_EXTENSIBLE: r = JS_IsExtensible(ctx, arg); break;\n    case IS_FUNCTION: r = JS_IsFunction(ctx, arg); break;\n    case IS_HTMLDDA: r = JS_VALUE_GET_TAG(arg) == JS_TAG_OBJECT && JS_VALUE_GET_OBJ(arg)->is_HTMLDDA; break;\n    case IS_INSTANCEOF: r = JS_IsInstanceOf(ctx, arg, argv[1]); break;\n    case IS_INTEGER: r = JS_IsNumber(arg) && JS_VALUE_GET_TAG(arg) != JS_TAG_FLOAT64; break;\n    case IS_JOBPENDING: r = JS_IsJobPending(JS_GetRuntime(ctx)); break;\n    case IS_LIVEOBJECT: r = JS_IsLiveObject(JS_GetRuntime(ctx), arg); break;\n    case IS_NULL: r = JS_IsNull(arg); break;\n    case IS_NUMBER: r = JS_IsNumber(arg); break;\n    case IS_OBJECT: r = JS_IsObject(arg); break;\n    case IS_REGISTEREDCLASS: r = !JS_ToInt32(ctx, &r, arg) && JS_IsRegisteredClass(JS_GetRuntime(ctx), r); break;\n    case IS_STRING: r = JS_IsString(arg); break;\n    case IS_SYMBOL: r = JS_IsSymbol(arg); break;\n    case IS_UNCATCHABLEERROR: r = JS_IsUncatchableError(ctx, arg); break;\n    case IS_UNDEFINED: r = JS_IsUndefined(arg); break;\n    case IS_UNINITIALIZED: r = JS_IsUninitialized(arg); break;\n  }\n  if(r == -1)\n    return JS_ThrowInternalError(ctx, \"js_misc_is %d\", magic);\n  return JS_NewBool(ctx, r >= 1);\n}\n\nstatic const JSCFunctionListEntry js_misc_funcs[] = {\n    // JS_CFUNC_DEF(\"realpath\", 1, js_misc_realpath),\n    JS_CFUNC_DEF(\"fnmatch\", 3, js_misc_fnmatch),\n    JS_CFUNC_DEF(\"toString\", 1, js_misc_tostring),\n    JS_CFUNC_DEF(\"toPointer\", 1, js_misc_topointer),\n    JS_CFUNC_DEF(\"toArrayBuffer\", 1, js_misc_toarraybuffer),\n    JS_CFUNC_DEF(\"dupArrayBuffer\", 1, js_misc_duparraybuffer),\n    JS_CFUNC_DEF(\"resizeArrayBuffer\", 1, js_misc_resizearraybuffer),\n    JS_CFUNC_DEF(\"concatArrayBuffer\", 1, js_misc_concatarraybuffer),\n    JS_CFUNC_DEF(\"getPerformanceCounter\", 0, js_misc_getperformancecounter),\n    JS_CFUNC_MAGIC_DEF(\"getExecutable\", 0, js_misc_proclink, FUNC_GETEXECUTABLE),\n    JS_CFUNC_MAGIC_DEF(\"getCurrentWorkingDirectory\", 0, js_misc_proclink, FUNC_GETCWD),\n    JS_CFUNC_MAGIC_DEF(\"getRootDirectory\", 0, js_misc_proclink, FUNC_GETROOT),\n    JS_CFUNC_MAGIC_DEF(\"getFileDescriptor\", 0, js_misc_proclink, FUNC_GETFD),\n    JS_CFUNC_MAGIC_DEF(\"getCommandLine\", 0, js_misc_procread, FUNC_GETCOMMANDLINE),\n    JS_CFUNC_MAGIC_DEF(\"getProcMaps\", 0, js_misc_procread, FUNC_GETPROCMAPS),\n    JS_CFUNC_MAGIC_DEF(\"getProcMounts\", 0, js_misc_procread, FUNC_GETPROCMOUNTS),\n    JS_CFUNC_MAGIC_DEF(\"getProcStat\", 0, js_misc_procread, FUNC_GETPROCSTAT),\n    JS_CFUNC_DEF(\"getPrototypeChain\", 0, js_misc_getprototypechain),\n    JS_CFUNC_MAGIC_DEF(\"getpid\", 0, js_misc_getx, FUNC_GETPID),\n    JS_CFUNC_MAGIC_DEF(\"getppid\", 0, js_misc_getx, FUNC_GETPPID),\n    JS_CFUNC_MAGIC_DEF(\"getsid\", 0, js_misc_getx, FUNC_GETSID),\n    JS_CFUNC_MAGIC_DEF(\"getuid\", 0, js_misc_getx, FUNC_GETUID),\n    JS_CFUNC_MAGIC_DEF(\"getgid\", 0, js_misc_getx, FUNC_GETGID),\n    JS_CFUNC_MAGIC_DEF(\"geteuid\", 0, js_misc_getx, FUNC_GETEUID),\n    JS_CFUNC_MAGIC_DEF(\"getegid\", 0, js_misc_getx, FUNC_GETEGID),\n    JS_CFUNC_MAGIC_DEF(\"setuid\", 1, js_misc_getx, FUNC_SETUID),\n    JS_CFUNC_MAGIC_DEF(\"setgid\", 1, js_misc_getx, FUNC_SETGID),\n    JS_CFUNC_MAGIC_DEF(\"seteuid\", 1, js_misc_getx, FUNC_SETEUID),\n    JS_CFUNC_MAGIC_DEF(\"setegid\", 1, js_misc_getx, FUNC_SETEGID),\n    JS_CFUNC_DEF(\"hrtime\", 0, js_misc_hrtime),\n    JS_CFUNC_DEF(\"uname\", 0, js_misc_uname),\n    JS_CFUNC_DEF(\"btoa\", 1, js_misc_btoa),\n    JS_CFUNC_DEF(\"atob\", 1, js_misc_atob),\n    JS_CFUNC_DEF(\"bitfieldToArray\", 1, js_misc_bitfield_to_array),\n    JS_CFUNC_DEF(\"arrayToBitfield\", 1, js_misc_array_to_bitfield),\n    JS_CFUNC_MAGIC_DEF(\"compileScript\", 1, js_misc_compile, 0),\n    JS_CFUNC_MAGIC_DEF(\"evalScript\", 1, js_misc_compile, 1),\n    JS_CFUNC_DEF(\"writeObject\", 1, js_misc_write_object),\n    JS_CFUNC_DEF(\"readObject\", 1, js_misc_read_object),\n    JS_CFUNC_DEF(\"getOpCodes\", 0, js_misc_opcodes),\n    JS_CFUNC_DEF(\"getByteCode\", 1, js_misc_get_bytecode),\n    JS_CFUNC_MAGIC_DEF(\"valueType\", 1, js_misc_valuetype, VALUE_TYPE),\n    JS_CFUNC_MAGIC_DEF(\"valueTag\", 1, js_misc_valuetype, VALUE_TAG),\n    JS_CFUNC_MAGIC_DEF(\"valuePtr\", 1, js_misc_valuetype, VALUE_PTR),\n    JS_CFUNC_DEF(\"evalBinary\", 1, js_misc_evalbinary),\n    JS_CFUNC_MAGIC_DEF(\"atomToString\", 1, js_misc_atom, ATOM_TO_STRING),\n    JS_CFUNC_MAGIC_DEF(\"atomToValue\", 1, js_misc_atom, ATOM_TO_VALUE),\n    JS_CFUNC_MAGIC_DEF(\"valueToAtom\", 1, js_misc_atom, VALUE_TO_ATOM),\n    JS_CFUNC_MAGIC_DEF(\"getClassID\", 1, js_misc_classid, GET_CLASS_ID),\n    JS_CFUNC_MAGIC_DEF(\"getClassName\", 1, js_misc_classid, GET_CLASS_NAME),\n    JS_CFUNC_MAGIC_DEF(\"getClassAtom\", 1, js_misc_classid, GET_CLASS_ATOM),\n    JS_CFUNC_MAGIC_DEF(\"getClassCount\", 1, js_misc_classid, GET_CLASS_COUNT),\n    JS_CFUNC_MAGIC_DEF(\"getClassProto\", 1, js_misc_classid, GET_CLASS_PROTO),\n    JS_CFUNC_MAGIC_DEF(\"getClassConstructor\", 1, js_misc_classid, GET_CLASS_CONSTRUCTOR),\n    JS_CFUNC_MAGIC_DEF(\"rand\", 0, js_misc_random, RANDOM_RAND),\n    JS_CFUNC_MAGIC_DEF(\"randi\", 0, js_misc_random, RANDOM_RANDI),\n    JS_CFUNC_MAGIC_DEF(\"randf\", 0, js_misc_random, RANDOM_RANDF),\n    JS_CFUNC_MAGIC_DEF(\"srand\", 1, js_misc_random, RANDOM_SRAND),\n    JS_CFUNC_DEF(\"escape\", 1, js_misc_escape),\n    JS_CFUNC_DEF(\"quote\", 1, js_misc_quote),\n    JS_CFUNC_DEF(\"error\", 0, js_misc_error),\n    JS_CFUNC_MAGIC_DEF(\"isArray\", 1, js_misc_is, IS_ARRAY),\n    JS_CFUNC_MAGIC_DEF(\"isBigDecimal\", 1, js_misc_is, IS_BIGDECIMAL),\n    JS_CFUNC_MAGIC_DEF(\"isBigFloat\", 1, js_misc_is, IS_BIGFLOAT),\n    JS_CFUNC_MAGIC_DEF(\"isBigInt\", 1, js_misc_is, IS_BIGINT),\n    JS_CFUNC_MAGIC_DEF(\"isBool\", 1, js_misc_is, IS_BOOL),\n    JS_CFUNC_MAGIC_DEF(\"isCFunction\", 1, js_misc_is, IS_CFUNCTION),\n    JS_CFUNC_MAGIC_DEF(\"isConstructor\", 1, js_misc_is, IS_CONSTRUCTOR),\n    JS_CFUNC_MAGIC_DEF(\"isEmptyString\", 1, js_misc_is, IS_EMPTYSTRING),\n    JS_CFUNC_MAGIC_DEF(\"isError\", 1, js_misc_is, IS_ERROR),\n    JS_CFUNC_MAGIC_DEF(\"isException\", 1, js_misc_is, IS_EXCEPTION),\n    JS_CFUNC_MAGIC_DEF(\"isExtensible\", 1, js_misc_is, IS_EXTENSIBLE),\n    JS_CFUNC_MAGIC_DEF(\"isFunction\", 1, js_misc_is, IS_FUNCTION),\n    JS_CFUNC_MAGIC_DEF(\"isHTMLDDA\", 1, js_misc_is, IS_HTMLDDA),\n    JS_CFUNC_MAGIC_DEF(\"isInstanceOf\", 1, js_misc_is, IS_INSTANCEOF),\n    JS_CFUNC_MAGIC_DEF(\"isInteger\", 1, js_misc_is, IS_INTEGER),\n    JS_CFUNC_MAGIC_DEF(\"isJobPending\", 1, js_misc_is, IS_JOBPENDING),\n    JS_CFUNC_MAGIC_DEF(\"isLiveObject\", 1, js_misc_is, IS_LIVEOBJECT),\n    JS_CFUNC_MAGIC_DEF(\"isNull\", 1, js_misc_is, IS_NULL),\n    JS_CFUNC_MAGIC_DEF(\"isNumber\", 1, js_misc_is, IS_NUMBER),\n    JS_CFUNC_MAGIC_DEF(\"isObject\", 1, js_misc_is, IS_OBJECT),\n    JS_CFUNC_MAGIC_DEF(\"isRegisteredClass\", 1, js_misc_is, IS_REGISTEREDCLASS),\n    JS_CFUNC_MAGIC_DEF(\"isString\", 1, js_misc_is, IS_STRING),\n    JS_CFUNC_MAGIC_DEF(\"isSymbol\", 1, js_misc_is, IS_SYMBOL),\n    JS_CFUNC_MAGIC_DEF(\"isUncatchableError\", 1, js_misc_is, IS_UNCATCHABLEERROR),\n    JS_CFUNC_MAGIC_DEF(\"isUndefined\", 1, js_misc_is, IS_UNDEFINED),\n    JS_CFUNC_MAGIC_DEF(\"isUninitialized\", 1, js_misc_is, IS_UNINITIALIZED),\n\n    JS_CONSTANT(JS_EVAL_TYPE_GLOBAL),\n    JS_CONSTANT(JS_EVAL_TYPE_MODULE),\n    JS_CONSTANT(JS_EVAL_TYPE_DIRECT),\n    JS_CONSTANT(JS_EVAL_TYPE_INDIRECT),\n    JS_CONSTANT(JS_EVAL_TYPE_MASK),\n    JS_CONSTANT(JS_EVAL_FLAG_STRICT),\n    JS_CONSTANT(JS_EVAL_FLAG_STRIP),\n    JS_CONSTANT(JS_EVAL_FLAG_COMPILE_ONLY),\n    JS_CONSTANT(JS_EVAL_FLAG_BACKTRACE_BARRIER),\n    //   JS_OBJECT_DEF(\"StringDecoder\", js_stringdecoder_props,\n    //   countof(js_stringdecoder_props), JS_PROP_CONFIGURABLE),\n\n};\n\nstatic int\njs_misc_init(JSContext* ctx, JSModuleDef* m) {\n\n  if(!js_location_class_id)\n    js_location_init(ctx, 0);\n\n  if(m) {\n    // JS_SetModuleExportList(ctx, m, location_ctor);\n    JS_SetModuleExportList(ctx, m, js_misc_funcs, countof(js_misc_funcs));\n    JS_SetModuleExport(ctx, m, \"Location\", location_ctor);\n    // JS_SetModuleExport(ctx, m, \"StringDecoder\", stringdecoder_ctor);\n  }\n\n  // js_stringdecoder_init(ctx, m);\n\n  // printf(\"%s\\n\", js_opcodes[0].name);\n\n  return 0;\n}\n\n#if defined(JS_SHARED_LIBRARY) && defined(JS_MISC_MODULE)\n#define JS_INIT_MODULE js_init_module\n#else\n#define JS_INIT_MODULE js_init_module_misc\n#endif\n\nVISIBLE JSModuleDef*\nJS_INIT_MODULE(JSContext* ctx, const char* module_name) {\n  JSModuleDef* m;\n  m = JS_NewCModule(ctx, module_name, js_misc_init);\n  if(!m)\n    return NULL;\n  JS_AddModuleExportList(ctx, m, js_misc_funcs, countof(js_misc_funcs));\n  // JS_AddModuleExport(ctx, m, \"SyscallError\");\n  JS_AddModuleExport(ctx, m, \"Location\");\n  // JS_AddModuleExport(ctx, m, \"StringDecoder\");\n  return m;\n}\n",
			"file": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
			"file_size": 37575,
			"file_write_time": 132764842615220314,
			"settings":
			{
				"buffer_size": 37581,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1555,
					1,
					"indent",
					null,
					"AQAAAPIkAAAAAAAA9CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8iQAAAAAAAA1JQAAAAAAAAAAAAAAAPC/"
				],
				[
					1629,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA8iQAAAAAAADyJAAAAAAAAAAAAAAAAAAA"
				],
				[
					1649,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ0jAAAAAAAAniMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnSMAAAAAAACdIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1650,
					2,
					"left_delete",
					null,
					"AgAAAJ0jAAAAAAAAnSMAAAAAAAABAAAAIJwjAAAAAAAAnCMAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAniMAAAAAAACeIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1651,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJwjAAAAAAAAnSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnCMAAAAAAACcIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1652,
					1,
					"insert",
					{
						"characters": " JSI"
					},
					"BAAAAJ0jAAAAAAAAniMAAAAAAAAAAAAAniMAAAAAAACfIwAAAAAAAAAAAACfIwAAAAAAAKAjAAAAAAAAAAAAAKAjAAAAAAAAoSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnSMAAAAAAACdIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1653,
					1,
					"left_delete",
					null,
					"AQAAAKAjAAAAAAAAoCMAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAoSMAAAAAAAChIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1654,
					1,
					"insert",
					{
						"characters": "_IsOP"
					},
					"BQAAAKAjAAAAAAAAoSMAAAAAAAAAAAAAoSMAAAAAAACiIwAAAAAAAAAAAACiIwAAAAAAAKMjAAAAAAAAAAAAAKMjAAAAAAAApCMAAAAAAAAAAAAApCMAAAAAAAClIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoCMAAAAAAACgIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1655,
					3,
					"left_delete",
					null,
					"AwAAAKQjAAAAAAAApCMAAAAAAAABAAAAUKMjAAAAAAAAoyMAAAAAAAABAAAAT6IjAAAAAAAAoiMAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAApSMAAAAAAAClIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1656,
					4,
					"left_delete",
					null,
					"BAAAAKEjAAAAAAAAoSMAAAAAAAABAAAASaAjAAAAAAAAoCMAAAAAAAABAAAAX58jAAAAAAAAnyMAAAAAAAABAAAAU54jAAAAAAAAniMAAAAAAAABAAAASg",
					"AQAAAAAAAAABAAAAoiMAAAAAAACiIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1657,
					1,
					"insert",
					{
						"characters": "!("
					},
					"AgAAAJ4jAAAAAAAAnyMAAAAAAAAAAAAAnyMAAAAAAACgIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAniMAAAAAAACeIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1658,
					1,
					"left_delete",
					null,
					"AQAAAJ8jAAAAAAAAnyMAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAoCMAAAAAAACgIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1659,
					1,
					"insert",
					{
						"characters": "JS_IsE"
					},
					"BgAAAJ8jAAAAAAAAoCMAAAAAAAAAAAAAoCMAAAAAAAChIwAAAAAAAAAAAAChIwAAAAAAAKIjAAAAAAAAAAAAAKIjAAAAAAAAoyMAAAAAAAAAAAAAoyMAAAAAAACkIwAAAAAAAAAAAACkIwAAAAAAAKUjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnyMAAAAAAACfIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1660,
					1,
					"insert",
					{
						"characters": "xception(c"
					},
					"CgAAAKUjAAAAAAAApiMAAAAAAAAAAAAApiMAAAAAAACnIwAAAAAAAAAAAACnIwAAAAAAAKgjAAAAAAAAAAAAAKgjAAAAAAAAqSMAAAAAAAAAAAAAqSMAAAAAAACqIwAAAAAAAAAAAACqIwAAAAAAAKsjAAAAAAAAAAAAAKsjAAAAAAAArCMAAAAAAAAAAAAArCMAAAAAAACtIwAAAAAAAAAAAACtIwAAAAAAAK4jAAAAAAAAAAAAAK4jAAAAAAAAryMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApSMAAAAAAAClIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1661,
					1,
					"left_delete",
					null,
					"AQAAAK4jAAAAAAAAriMAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAryMAAAAAAACvIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1662,
					1,
					"insert",
					{
						"characters": "proto)"
					},
					"BgAAAK4jAAAAAAAAryMAAAAAAAAAAAAAryMAAAAAAACwIwAAAAAAAAAAAACwIwAAAAAAALEjAAAAAAAAAAAAALEjAAAAAAAAsiMAAAAAAAAAAAAAsiMAAAAAAACzIwAAAAAAAAAAAACzIwAAAAAAALQjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAriMAAAAAAACuIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1663,
					1,
					"insert",
					{
						"characters": " ;"
					},
					"AgAAALQjAAAAAAAAtSMAAAAAAAAAAAAAtSMAAAAAAAC2IwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtCMAAAAAAAC0IwAAAAAAAAAAAAAAAPC/"
				],
				[
					1664,
					2,
					"left_delete",
					null,
					"AgAAALUjAAAAAAAAtSMAAAAAAAABAAAAO7QjAAAAAAAAtCMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAtiMAAAAAAAC2IwAAAAAAAAAAAAAAAPC/"
				],
				[
					1665,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALQjAAAAAAAAtSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtCMAAAAAAAC0IwAAAAAAAAAAAAAAAPC/"
				],
				[
					1666,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALUjAAAAAAAAtiMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtSMAAAAAAAC1IwAAAAAAAAAAAAAAAPC/"
				],
				[
					1669,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAANkjAAAAAAAA2iMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2SMAAAAAAADZIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1670,
					1,
					"left_delete",
					null,
					"AQAAANkjAAAAAAAA2SMAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAA2iMAAAAAAADaIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1671,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANkjAAAAAAAA2iMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2SMAAAAAAADZIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1672,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAANojAAAAAAAA2yMAAAAAAAAAAAAA2yMAAAAAAADcIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2iMAAAAAAADaIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1673,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAANwjAAAAAAAA3SMAAAAAAAAAAAAA3SMAAAAAAADfIwAAAAAAAAAAAADdIwAAAAAAAN0jAAAAAAAAAgAAACAg3SMAAAAAAADhIwAAAAAAAAAAAADhIwAAAAAAAOIjAAAAAAAAAAAAAOIjAAAAAAAA5iMAAAAAAAAAAAAA3SMAAAAAAADdIwAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAA3CMAAAAAAADcIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1674,
					1,
					"right_delete",
					null,
					"AQAAAOIjAAAAAAAA4iMAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA4iMAAAAAAADiIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1678,
					1,
					"insert",
					{
						"characters": "fir"
					},
					"BAAAAJYjAAAAAAAAlyMAAAAAAAAAAAAAlyMAAAAAAACXIwAAAAAAAAUAAAB3aGlsZZcjAAAAAAAAmCMAAAAAAAAAAAAAmCMAAAAAAACZIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmyMAAAAAAACWIwAAAAAAAAAAAAAAADJA"
				],
				[
					1679,
					2,
					"left_delete",
					null,
					"AgAAAJgjAAAAAAAAmCMAAAAAAAABAAAAcpcjAAAAAAAAlyMAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAmSMAAAAAAACZIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1680,
					1,
					"insert",
					{
						"characters": "or"
					},
					"AgAAAJcjAAAAAAAAmCMAAAAAAAAAAAAAmCMAAAAAAACZIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlyMAAAAAAACXIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1683,
					1,
					"insert",
					{
						"characters": "prtot"
					},
					"BQAAAJojAAAAAAAAmyMAAAAAAAAAAAAAmyMAAAAAAACcIwAAAAAAAAAAAACcIwAAAAAAAJ0jAAAAAAAAAAAAAJ0jAAAAAAAAniMAAAAAAAAAAAAAniMAAAAAAACfIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmiMAAAAAAACaIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1684,
					3,
					"left_delete",
					null,
					"AwAAAJ4jAAAAAAAAniMAAAAAAAABAAAAdJ0jAAAAAAAAnSMAAAAAAAABAAAAb5wjAAAAAAAAnCMAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAnyMAAAAAAACfIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1685,
					1,
					"insert",
					{
						"characters": "oto=argv"
					},
					"CAAAAJwjAAAAAAAAnSMAAAAAAAAAAAAAnSMAAAAAAACeIwAAAAAAAAAAAACeIwAAAAAAAJ8jAAAAAAAAAAAAAJ8jAAAAAAAAoCMAAAAAAAAAAAAAoCMAAAAAAAChIwAAAAAAAAAAAAChIwAAAAAAAKIjAAAAAAAAAAAAAKIjAAAAAAAAoyMAAAAAAAAAAAAAoyMAAAAAAACkIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnCMAAAAAAACcIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1686,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAKQjAAAAAAAApiMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApCMAAAAAAACkIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1687,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAKUjAAAAAAAApiMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApSMAAAAAAAClIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1692,
					1,
					"left_delete",
					null,
					"AQAAAIAjAAAAAAAAgCMAAAAAAAATAAAAICBwcm90byA9IGFyZ3ZbMF07Cg",
					"AQAAAAAAAAABAAAAkyMAAAAAAACAIwAAAAAAAAAAAAAAAAAA"
				],
				[
					1699,
					1,
					"left_delete",
					null,
					"AQAAANYjAAAAAAAA1iMAAAAAAAAZAAAAICAgICBKU19Jc09iamVjdChwcm90bykpKQ",
					"AQAAAAAAAAABAAAA1iMAAAAAAADvIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1703,
					1,
					"insert",
					{
						"characters": "\nj+"
					},
					"BAAAAAIkAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAAEJAAAAAAAAAAAAAAEJAAAAAAAAAUkAAAAAAAAAAAAAAUkAAAAAAAABiQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAPC/"
				],
				[
					1704,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAAYkAAAAAAAACCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABiQAAAAAAAAGJAAAAAAAAAAAAAAAAPC/"
				],
				[
					1705,
					1,
					"left_delete",
					null,
					"AQAAAAYkAAAAAAAABiQAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAByQAAAAAAAAHJAAAAAAAAAAAAAAAAPC/"
				],
				[
					1706,
					1,
					"insert",
					{
						"characters": "+M"
					},
					"AgAAAAYkAAAAAAAAByQAAAAAAAAAAAAAByQAAAAAAAAIJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABiQAAAAAAAAGJAAAAAAAAAAAAAAAAPC/"
				],
				[
					1707,
					1,
					"left_delete",
					null,
					"AQAAAAckAAAAAAAAByQAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAACCQAAAAAAAAIJAAAAAAAAAAAAAAAAPC/"
				],
				[
					1708,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAckAAAAAAAACCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAByQAAAAAAAAHJAAAAAAAAAAAAAAAAPC/"
				],
				[
					1709,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAAgkAAAAAAAACSQAAAAAAAAAAAAACSQAAAAAAAAKJAAAAAAAAAAAAAAKJAAAAAAAAAskAAAAAAAAAAAAAAkkAAAAAAAACSQAAAAAAAABAAAAIAkkAAAAAAAACSQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACCQAAAAAAAAIJAAAAAAAAAAAAAAAAPC/"
				],
				[
					1710,
					1,
					"right_delete",
					null,
					"AQAAAAokAAAAAAAACiQAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAACiQAAAAAAAAKJAAAAAAAAAAAAAAAAPC/"
				],
				[
					1717,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAANUjAAAAAAAA1iMAAAAAAAAAAAAA1iMAAAAAAADXIwAAAAAAAAAAAADXIwAAAAAAANgjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1SMAAAAAAADVIwAAAAAAAAAAAAAAACJA"
				],
				[
					1718,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANgjAAAAAAAA2iMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2CMAAAAAAADYIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1719,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANkjAAAAAAAA2iMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2SMAAAAAAADZIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1720,
					1,
					"left_delete",
					null,
					"AQAAANkjAAAAAAAA2SMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA2iMAAAAAAADaIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1721,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAANkjAAAAAAAA2iMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2SMAAAAAAADZIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1722,
					1,
					"insert",
					{
						"characters": " >90"
					},
					"BAAAANojAAAAAAAA2yMAAAAAAAAAAAAA2yMAAAAAAADcIwAAAAAAAAAAAADcIwAAAAAAAN0jAAAAAAAAAAAAAN0jAAAAAAAA3iMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2iMAAAAAAADaIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1723,
					2,
					"left_delete",
					null,
					"AgAAAN0jAAAAAAAA3SMAAAAAAAABAAAAMNwjAAAAAAAA3CMAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAA3iMAAAAAAADeIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1724,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAANwjAAAAAAAA3SMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3CMAAAAAAADcIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1725,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN0jAAAAAAAA3iMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3SMAAAAAAADdIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1729,
					2,
					"left_delete",
					null,
					"AgAAAAIkAAAAAAAAAiQAAAAAAAABAAAAKwEkAAAAAAAAASQAAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAAAyQAAAAAAAADJAAAAAAAAAAAAAAAAPC/"
				],
				[
					1730,
					1,
					"insert",
					{
						"characters": "-1"
					},
					"AgAAAAEkAAAAAAAAAiQAAAAAAAAAAAAAAiQAAAAAAAADJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAASQAAAAAAAABJAAAAAAAAAAAAAAAAPC/"
				],
				[
					1735,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA1SMAAAAAAADVIwAAAAAAAAAAAAAAsHNA"
				],
				[
					1736,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANUjAAAAAAAA1yMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1SMAAAAAAADVIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1737,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANcjAAAAAAAA2SMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1yMAAAAAAADXIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1738,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANkjAAAAAAAA2yMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2SMAAAAAAADZIwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "qjsm.c",
			"settings":
			{
				"buffer_size": 27687,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					88,
					1,
					"insert",
					{
						"characters": "\njsm_"
					},
					"BgAAAClkAAAAAAAAKmQAAAAAAAAAAAAAKmQAAAAAAAA0ZAAAAAAAAAAAAAA0ZAAAAAAAADVkAAAAAAAAAAAAADVkAAAAAAAANmQAAAAAAAAAAAAANmQAAAAAAAA3ZAAAAAAAAAAAAAA3ZAAAAAAAADhkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKWQAAAAAAAApZAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "dup_"
					},
					"BAAAADhkAAAAAAAAOWQAAAAAAAAAAAAAOWQAAAAAAAA6ZAAAAAAAAAAAAAA6ZAAAAAAAADtkAAAAAAAAAAAAADtkAAAAAAAAPGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOGQAAAAAAAA4ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					2,
					"left_delete",
					null,
					"AgAAADtkAAAAAAAAO2QAAAAAAAABAAAAXzpkAAAAAAAAOmQAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAPGQAAAAAAAA8ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "mp_error"
					},
					"CAAAADpkAAAAAAAAO2QAAAAAAAAAAAAAO2QAAAAAAAA8ZAAAAAAAAAAAAAA8ZAAAAAAAAD1kAAAAAAAAAAAAAD1kAAAAAAAAPmQAAAAAAAAAAAAAPmQAAAAAAAA/ZAAAAAAAAAAAAAA/ZAAAAAAAAEBkAAAAAAAAAAAAAEBkAAAAAAAAQWQAAAAAAAAAAAAAQWQAAAAAAABCZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOmQAAAAAAAA6ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEJkAAAAAAAARGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQmQAAAAAAABCZAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "ctx"
					},
					"AwAAAENkAAAAAAAARGQAAAAAAAAAAAAARGQAAAAAAABFZAAAAAAAAAAAAABFZAAAAAAAAEZkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQ2QAAAAAAABDZAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEdkAAAAAAAASGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAR2QAAAAAAABHZAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/console.js",
			"settings":
			{
				"buffer_size": 3778,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFQAAAAAAAAAVgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAABUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "typeof(out"
					},
					"CgAAADwBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAQAEAAAAAAAAAAAAAQAEAAAAAAABBAQAAAAAAAAAAAABBAQAAAAAAAEIBAAAAAAAAAAAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAABEAQAAAAAAAEUBAAAAAAAAAAAAAEUBAAAAAAAARgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAEAAAAAAAA8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEYBAAAAAAAARwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgEAAAAAAABGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEcBAAAAAAAASAEAAAAAAAAAAAAASAEAAAAAAABJAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwEAAAAAAABHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					7,
					"left_delete",
					null,
					"BwAAAEgBAAAAAAAASAEAAAAAAAABAAAAPUcBAAAAAAAARwEAAAAAAAABAAAAIEYBAAAAAAAARgEAAAAAAAABAAAAKUUBAAAAAAAARQEAAAAAAAABAAAAdEQBAAAAAAAARAEAAAAAAAABAAAAdUMBAAAAAAAAQwEAAAAAAAABAAAAb0IBAAAAAAAAQgEAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAASQEAAAAAAABJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " out"
					},
					"BAAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAABEAQAAAAAAAEUBAAAAAAAAAAAAAEUBAAAAAAAARgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgEAAAAAAABCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAEYBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABIAQAAAAAAAAAAAABIAQAAAAAAAEkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgEAAAAAAABGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " 'object'"
					},
					"CQAAAEkBAAAAAAAASgEAAAAAAAAAAAAASgEAAAAAAABLAQAAAAAAAAAAAABLAQAAAAAAAEwBAAAAAAAAAAAAAEwBAAAAAAAATQEAAAAAAAAAAAAATQEAAAAAAABOAQAAAAAAAAAAAABOAQAAAAAAAE8BAAAAAAAAAAAAAE8BAAAAAAAAUAEAAAAAAAAAAAAAUAEAAAAAAABRAQAAAAAAAAAAAABRAQAAAAAAAFIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQEAAAAAAABJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAFIBAAAAAAAAUwEAAAAAAAAAAAAAUwEAAAAAAABUAQAAAAAAAAAAAABUAQAAAAAAAFUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgEAAAAAAABSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " out"
					},
					"BAAAAFUBAAAAAAAAVgEAAAAAAAAAAAAAVgEAAAAAAABXAQAAAAAAAAAAAABXAQAAAAAAAFgBAAAAAAAAAAAAAFgBAAAAAAAAWQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQEAAAAAAABVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAAFkBAAAAAAAAWgEAAAAAAAAAAAAAWgEAAAAAAABbAQAAAAAAAAAAAABbAQAAAAAAAFwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQEAAAAAAABZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " null"
					},
					"BQAAAFwBAAAAAAAAXQEAAAAAAAAAAAAAXQEAAAAAAABeAQAAAAAAAAAAAABeAQAAAAAAAF8BAAAAAAAAAAAAAF8BAAAAAAAAYAEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAEAAAAAAABcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " &/&"
					},
					"BAAAAGEBAAAAAAAAYgEAAAAAAAAAAAAAYgEAAAAAAABjAQAAAAAAAAAAAABjAQAAAAAAAGQBAAAAAAAAAAAAAGQBAAAAAAAAZQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQEAAAAAAABhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					2,
					"left_delete",
					null,
					"AgAAAGQBAAAAAAAAZAEAAAAAAAABAAAAJmMBAAAAAAAAYwEAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAZQEAAAAAAABlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAGMBAAAAAAAAZAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwEAAAAAAABjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " typeof"
					},
					"BwAAAGQBAAAAAAAAZQEAAAAAAAAAAAAAZQEAAAAAAABmAQAAAAAAAAAAAABmAQAAAAAAAGcBAAAAAAAAAAAAAGcBAAAAAAAAaAEAAAAAAAAAAAAAaAEAAAAAAABpAQAAAAAAAAAAAABpAQAAAAAAAGoBAAAAAAAAAAAAAGoBAAAAAAAAawEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAEAAAAAAABkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " out.,"
					},
					"BgAAAGsBAAAAAAAAbAEAAAAAAAAAAAAAbAEAAAAAAABtAQAAAAAAAAAAAABtAQAAAAAAAG4BAAAAAAAAAAAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAABwAQAAAAAAAHEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawEAAAAAAABrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					2,
					"left_delete",
					null,
					"AgAAAHABAAAAAAAAcAEAAAAAAAABAAAALG8BAAAAAAAAbwEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAcQEAAAAAAABxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": ".write"
					},
					"BgAAAG8BAAAAAAAAcAEAAAAAAAAAAAAAcAEAAAAAAABxAQAAAAAAAAAAAABxAQAAAAAAAHIBAAAAAAAAAAAAAHIBAAAAAAAAcwEAAAAAAAAAAAAAcwEAAAAAAAB0AQAAAAAAAAAAAAB0AQAAAAAAAHUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwEAAAAAAABvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAHUBAAAAAAAAdgEAAAAAAAAAAAAAdgEAAAAAAAB3AQAAAAAAAAAAAAB3AQAAAAAAAHgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQEAAAAAAAB1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " 'function')"
					},
					"DAAAAHgBAAAAAAAAeQEAAAAAAAAAAAAAeQEAAAAAAAB6AQAAAAAAAAAAAAB6AQAAAAAAAHsBAAAAAAAAAAAAAHsBAAAAAAAAfAEAAAAAAAAAAAAAfAEAAAAAAAB9AQAAAAAAAAAAAAB9AQAAAAAAAH4BAAAAAAAAAAAAAH4BAAAAAAAAfwEAAAAAAAAAAAAAfwEAAAAAAACAAQAAAAAAAAAAAACAAQAAAAAAAIEBAAAAAAAAAAAAAIEBAAAAAAAAggEAAAAAAAAAAAAAggEAAAAAAACDAQAAAAAAAAAAAACDAQAAAAAAAIQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAEAAAAAAAB4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAIQBAAAAAAAAhQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAEAAAAAAACEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"left_delete",
					null,
					"AQAAAIQBAAAAAAAAhAEAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAhQEAAAAAAACFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAIQBAAAAAAAAhQEAAAAAAAAAAAAAhQEAAAAAAACHAQAAAAAAAAAAAACFAQAAAAAAAIUBAAAAAAAAAgAAACAghQEAAAAAAACJAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAEAAAAAAACEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					3,
					"left_delete",
					null,
					"AwAAAIcBAAAAAAAAhwEAAAAAAAACAAAAICCFAQAAAAAAAIUBAAAAAAAAAgAAACAghAEAAAAAAACEAQAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAiQEAAAAAAACJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAIQBAAAAAAAAhQEAAAAAAAAAAAAAhQEAAAAAAACGAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAEAAAAAAACEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BQAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACJAQAAAAAAAAAAAACJAQAAAAAAAIkBAAAAAAAAPwAAAE9iamVjdC5nZXRQcm90b3R5cGVPZihvdXQpID09IE9iamVjdC5nZXRQcm90b3R5cGVPZihzdGQub3V0KSkge4cBAAAAAAAAhwEAAAAAAAACAAAAICCHAQAAAAAAAIsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgEAAAAAAADFAQAAAAAAAP///////+9/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"
					},
					"EwAAAPcAAAAAAAAA+QAAAAAAAAAAAAAAiQEAAAAAAACJAQAAAAAAAAQAAAAgICAg+QAAAAAAAAD7AAAAAAAAAAAAAAD7AAAAAAAAAP0AAAAAAAAAAAAAAP0AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAMBAAAAAAAAAAAAAAMBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAkBAAAAAAAAAAAAAAkBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\t\t\t\t\t\t\t\t"
					},
					"CAAAAAkBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAPcAAAAAAAAA+QAAAAAAAAAAAAAAngAAAAAAAACgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAACeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAIAAAAvKg",
					"AQAAAAAAAAABAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "K"
					},
					"AgAAAFQAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABVAAAAAAAAAAMAAAA7Ki8",
					"AQAAAAAAAAABAAAAVAAAAAAAAABXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"left_delete",
					null,
					"AQAAAFQAAAAAAAAAVAAAAAAAAAABAAAASw",
					"AQAAAAAAAAABAAAAVQAAAAAAAABVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAAAAAAAAABUAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "AccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignOperands: true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: InlineOnly\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: TopLevel\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping: \n  AfterClass: false\n  AfterControlStatement: false\n  AfterEnum: false\n  AfterFunction: false\n  AfterNamespace: false\n  AfterStruct: true\n  AfterUnion: false\n  BeforeCatch: false\n  BeforeElse: false\n  IndentBraces: false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nCommentPragmas: '^ IWYU pragma:'\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nDisableFormat: false\nExperimentalAutoDetectBinPacking: false\nIndentCaseLabels: true\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd: ''\nNamespaceIndentation: None\nPointerAlignment: Left\nSortIncludes: false\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: false\nSpaceInEmptyParentheses: false\nSpacesInAngles: false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nUseTab: Never\nAlwaysBreakAfterDefinitionReturnType: All\nColumnLimit: 96\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nIndentWidth: 2\nMaxEmptyLinesToKeep: 1\nPenaltyBreakBeforeFirstCallParameter: 120\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 100\nSpacesBeforeTrailingComments: 1\nTabWidth: 2\nSpaceAfterTemplateKeyword: false\n",
			"file": ".clang-format",
			"file_size": 2035,
			"file_write_time": 132764841196460230,
			"redo_stack":
			[
				[
					17,
					1,
					"insert",
					{
						"characters": "150"
					},
					"BAAAAIAGAAAAAAAAgAYAAAAAAAABAAAAMH8GAAAAAAAAfwYAAAAAAAABAAAANX8GAAAAAAAAgQYAAAAAAAAAAAAAfgYAAAAAAAB+BgAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAAgQYAAAAAAACBBgAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 2034,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": "96"
					},
					"AwAAAH4GAAAAAAAAfwYAAAAAAAAAAAAAfwYAAAAAAAB/BgAAAAAAAAMAAAAyNDB/BgAAAAAAAIAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgYAAAAAAACBBgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 20312,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "Searching 789 files for \"JS_GetProto\" (regex, case sensitive)\n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-pointer.c:\n  429      return TRUE;\n  430    } else {\n  431:     JSValue proto = JS_GetPrototype(ctx, obj);\n  432      if(JS_IsObject(proto) && JS_HasProperty(ctx, proto, prop))\n  433        return TRUE;\n  ...\n  461  \n  462    } else {\n  463:     JSValue proto = JS_IsUndefined(pointer_proto) ? JS_GetPrototype(ctx, obj) : pointer_proto;\n  464      if(JS_IsObject(proto))\n  465        value = JS_GetProperty(ctx, proto, prop);\n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-location.c:\n  296      return JS_EXCEPTION;\n  297  \n  298:   return js_location_new_proto(ctx, JS_GetPrototype(ctx, this_val), loc);\n  299  }\n  300  \n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c:\n  343  \n  344    if(argc >= 1 && JS_IsObject(argv[0])) {\n  345:     JSValue proto = JS_GetPrototype(ctx, argv[0]);\n  346      size_t j = 0;\n  347      ret = JS_NewArray(ctx);\n  ...\n  349      do {\n  350        JS_SetPropertyUint32(ctx, ret, j++, proto);\n  351:       proto = JS_GetPrototype(ctx, proto);\n  352  \n  353      } while(JS_IsObject(proto));\n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.c:\n  423    ctor = js_object_constructor(ctx, value);\n  424    if(!JS_IsFunction(ctx, ctor)) {\n  425:     proto = JS_GetPrototype(ctx, value);\n  426      ctor = js_object_constructor(ctx, proto);\n  427    }\n  ...\n  657      if(JS_GetOwnProperty(ctx, desc, obj, prop) == TRUE)\n  658        return TRUE;\n  659:     proto = JS_GetPrototype(ctx, obj);\n  660      if(JS_VALUE_GET_OBJ(proto) == JS_VALUE_GET_OBJ(obj))\n  661        break;\n  ...\n 1724  js_typedarray_prototype(JSContext* ctx) {\n 1725    JSValue u8arr_proto = js_global_prototype(ctx, \"Uint8Array\");\n 1726:   JSValue typedarr_proto = JS_GetPrototype(ctx, u8arr_proto);\n 1727    JS_FreeValue(ctx, u8arr_proto);\n 1728    return typedarr_proto;\n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/predicate.c:\n  242  \n  243      case PREDICATE_PROTOTYPEIS: {\n  244:       JSValue proto = JS_GetPrototype(ctx, js_arguments_shift(args));\n  245  \n  246        ret = JS_NewBool(ctx, JS_VALUE_GET_OBJ(proto) == JS_VALUE_GET_OBJ(pr->unary.predicate));\n\n/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-inspect.c:\n  282  \n  283    if((ret = js_object_getpropertynames(ctx, propenum_tab, obj, flags)) >= 0) {\n  284:     JSValue proto = JS_GetPrototype(ctx, obj);\n  285  \n  286      if(JS_IsObject(proto))\n  ...\n  426    ptr = JS_GetArrayBuffer(ctx, &size, value);\n  427    // printf(\"maxArrayLength: %i\\n\", opts->max_array_length);\n  428:   proto = JS_GetPrototype(ctx, value);\n  429    str = js_object_tostring(ctx, proto);\n  430    JS_FreeValue(ctx, proto);\n  ...\n  740        vector_init(&propenum_tab, ctx);\n  741  \n  742:       if(js_object_getpropertynames_recursive(ctx, &propenum_tab, opts->proto_chain ? JS_GetPrototype(ctx, value) : value, JS_GPN_STRING_MASK | JS_GPN_SYMBOL_MASK | (opts->show_hidden ? 0 : JS_GPN_ENUM_ONLY)))\n  743          return -1;\n  744  \n\n12 matches across 6 files\n",
			"settings":
			{
				"buffer_size": 3073,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.c",
			"settings":
			{
				"buffer_size": 52294,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA9ScAAAAAAAD1JwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "utils.h",
			"settings":
			{
				"buffer_size": 30605,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					27,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAUGIAAAAAAABhYgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeFiles",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib"
	],
	"file_history":
	[
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fd_set.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/bc-socklen_t.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/.clang-format",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/socklen_t.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/test-socklen_t.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/.prettierrc",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/bc-fd_set.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-fdset.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_location.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/usr/include/x86_64-linux-gnu/bits/syscall.h",
		"/usr/include/x86_64-linux-gnu/sys/syscall.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/libregexp.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_inspect.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_path.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_blob.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_qjsm.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/Findpigpio.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pigpio/pigpio.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pigpio/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pigpio/README",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stringdecoder.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-libc.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/stack.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/pigpio/pigpiod_if2.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/pigpio/pigpio.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/test-gpio.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/gpio.c"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"std.in",
			"GetExc",
			"Column",
			"JS_GetProto",
			"isObj",
			"IsBigInt",
			"class_id",
			"cfunc",
			"JS_IsCFunction",
			"CFunction",
			"isCFunction",
			"ISEM",
			"HTMLDDA",
			"IsReg",
			"IsEx",
			"\"is",
			"Constructor",
			"getPrototypeChain",
			"hasPrototype",
			"getConstructorChain",
			"filter",
			"js_object_construct",
			"'main",
			"Exception:",
			"TOKEN_PROP",
			"\"byte_offset\"",
			"dump_err",
			"dump_error",
			"js_std_",
			"realpath",
			"pow",
			"SockAddr\\* a",
			"sa;",
			"sa->s[^a]",
			"sa->s",
			"socket_send",
			"SOCKET_",
			"_PROP",
			"SOCKADDR_PROP",
			"SOCKET_METHOD_RECVFROM",
			"JS_NewArrayBuffer",
			"^js_strv",
			"js_strv",
			"argv_free",
			"js_is_nullis",
			"528",
			"\"jsm*_module_lo",
			"\"js_module_lo",
			"\"js_module",
			"FD_SETSIZE",
			"struct ",
			"import_",
			"array_to",
			"LOAD_MOD",
			"path;",
			"\"js_eval",
			"import_def",
			"import",
			"imp->",
			"dbuf_",
			"putstr",
			"va_start",
			"^dbuf_",
			", Dyn",
			"LOAD_MODULE",
			"\"loadMod",
			"^js_module",
			"js_module",
			"module_import",
			"import_name",
			"LIB_MOD",
			"syscallerr",
			"syscaller",
			"syscallerr",
			"evalbin",
			"JS_CONSTANT",
			"lookupModule",
			"compile_mo",
			"JS_CGETSET_MAGIC_DEF",
			"cxt,",
			"JS_DupValue.*TAG_MODULE",
			"modules_obj",
			"js_modules_entries",
			"$",
			"\"moduleList",
			"\"module",
			"basename",
			"_const",
			"_constructor",
			"if((def = js_module_get(ctx, argv[0])))",
			"GET_MODULE_NAME",
			"namestr",
			"module_name",
			"[^a-z0-9_]module_(ns|name|func|exports)",
			"module_(ns|name|func|exports)",
			"this_val",
			"this_vakl",
			"JS_DefineProp",
			"^js_module",
			"filename",
			"JSValue\\)",
			"^static ",
			"module_loader_so",
			"JSModuleDef",
			"#ifndef _GNU_SOURCE\n#define _GNU_SOURCE\n#endif\\n*",
			"js_eval_file",
			"jsm*_eval_buf",
			"jsm_eval",
			", ",
			"[^a-z0-9_]module_[a-z]+",
			"[^a-z0-9]module_[a-z]+",
			"module_[a-z]+",
			"module_name",
			"filename",
			"module_",
			"filename",
			"module_[a-z0-9_]+",
			"module_[a-z0-9_]\\+",
			"module_[a-z0-9_]*;",
			"module_[a-z]*",
			"module_name",
			"jsm_module_loader_path",
			"jsm_normalize_module",
			"jsm_module_loader_so",
			"module_loader",
			"^js_module",
			"jsm_module_loader",
			"jsm_module_loader_path"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"imp.",
			"ctx,",
			"",
			"JSValueConst)",
			"",
			"jsm_module_loader",
			"js_module_loader_so",
			"js_eval_file",
			"js_eval_buf",
			"js_load_script",
			"jsm_eval_script",
			"js_eval_file",
			"js_load_module",
			"js_eval_str",
			"js_module_get",
			"JSValueConst)",
			"js_module_search",
			"jsm_module_find",
			"js_module_find",
			"js_load_",
			"js_load_module",
			"js_eval_buf",
			"js_load_script",
			"js_std_dump_error",
			"js_module_exports",
			"fdset",
			" ",
			"js_input_buffer",
			"\\1(\\2, sock",
			"\\1(",
			"",
			"JS_CGETSET_MAGIC_DEF",
			"off.",
			"} else if(",
			"port",
			".buf",
			"'",
			"",
			"socket_send",
			"0x00",
			" 0x00,",
			"0x78,",
			"0x78",
			" 0x00,",
			"0x78",
			"JS_CGETSET_MAGIC_DEF",
			"socket_syscalls_size",
			"js_syscallerror_get, js_syscallerror_set,",
			"js_socket_get, js_socket_set, ",
			"e",
			"js_syscallerror_proto_funcs",
			"s.fd",
			"js_socket_proto_funcs",
			"\"",
			"SYSCALLERROR_VALUEOF",
			"s, ",
			"JS_SOCKETCALL",
			"JS_SOCKETCALL_RETURN",
			"js_socket_data2(ctx",
			"sa->family",
			"QUICKJS_SYSCALLERROR_H",
			"data2",
			"js_syscallerror_data2",
			"QUICKJS_MISC_H",
			"js_sockets_defines",
			"js_sockaddr_data2",
			"js_sockaddr_data",
			"SockAddr",
			"struct sockaddr*",
			"sockets_init",
			"argv[i]",
			"pigpio",
			"CHAR_UTILS",
			"${util_SOURCES}",
			"ol.",
			"range_from",
			".range.length",
			".range.offset",
			"input_buffer_length(in)",
			"input_buffer_data(in)",
			"blob",
			"location->vec",
			"location",
			"Location",
			"r->data\\1",
			" this.fs.",
			"stringdecoder",
			"js_stringdecoder_set",
			"js_stringdecoder_get",
			"stringdecoder",
			"\\1if(gpio->debug) fprintf",
			"struct gpio",
			"struct GPIO",
			"struct GPIO*",
			"ctx->rt",
			"",
			": ",
			"\"",
			"ret = \\1;",
			"->errnum",
			"(",
			"error",
			"JS_NewInt32",
			"",
			",",
			"left, right",
			"predicate_nextarg(ctx, &args)",
			"predicate_nextarg(ctx, &args),predicate_nextarg(ctx, &args))",
			"predicate_argument_shift(ctx, &args)",
			"js_arguments_shift(&args)",
			"",
			"ret = PRECEDENCE_",
			"args",
			"",
			"dbuf",
			": left",
			"pred",
			"args->",
			"r",
			"predicate_value",
			"",
			"'x'",
			"0",
			"\\1this.last_cmd",
			"\\1this.cmd",
			"level",
			"cmd",
			"  "
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": null,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1632010338.94,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37581,
						"regions":
						{
						},
						"selection":
						[
							[
								9179,
								9179
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632011149.96,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5372.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "qjsm.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27687,
						"regions":
						{
						},
						"selection":
						[
							[
								25672,
								25672
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632011134.52,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14790.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/console.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3778,
						"regions":
						{
						},
						"selection":
						[
							[
								85,
								85
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632011136.51,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1275.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": ".clang-format",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2034,
						"regions":
						{
						},
						"selection":
						[
							[
								1662,
								1664
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632011052.95,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 510.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20312,
						"regions":
						{
						},
						"selection":
						[
							[
								6649,
								6654
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632009914.61,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1758.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3073,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										199,
										210
									],
									[
										413,
										424
									],
									[
										697,
										708
									],
									[
										901,
										912
									],
									[
										1092,
										1103
									],
									[
										1338,
										1349
									],
									[
										1545,
										1556
									],
									[
										1816,
										1827
									],
									[
										2064,
										2075
									],
									[
										2411,
										2422
									],
									[
										2624,
										2635
									],
									[
										2888,
										2899
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								911,
								911
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1632009925.15,
							"tabs_extra_last_activated_sheet_index": 2
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52294,
						"regions":
						{
						},
						"selection":
						[
							[
								10229,
								10229
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632009923.58,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6764.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30605,
						"regions":
						{
						},
						"selection":
						[
							[
								25168,
								25185
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632009789.97,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1231.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"conso",
				"lib/console.js"
			],
			[
				"clang-f",
				".clang-format"
			],
			[
				"quickjs.h",
				"~/Sources/plot-cv/quickjs/quickjs.h"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"test_mi",
				"tests/test_misc.js"
			],
			[
				"ockets.",
				"quickjs-sockets.h"
			],
			[
				"quickjs-ar",
				"quickjs-archive.c"
			],
			[
				"fd_set",
				"lib/fd_set.js"
			],
			[
				"char-",
				"char-utils.h"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"buffer-ut",
				"buffer-utils.c"
			],
			[
				"misc.",
				"quickjs-misc.h"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"socklen_t.js",
				"lib/socklen_t.js"
			],
			[
				"str.h",
				"quickjs-stringdecoder.h"
			],
			[
				"quickjs-libc",
				"~/Sources/plot-cv/quickjs/quickjs-libc.h"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.c"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"test_loca",
				"tests/test_location.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				".clang-fo",
				".clang-format"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"buff",
				"buffer-utils.c"
			],
			[
				"buffer-util",
				"buffer-utils.c"
			],
			[
				"buffer-utils.c",
				"buffer-utils.c"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"quickjs-so",
				"quickjs-sockets.c"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"quickjs-insp",
				"quickjs-inspect.c"
			],
			[
				"test_soc",
				"tests/test_sockets.js"
			],
			[
				"",
				"CMakeLists.txt"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"test_qjsm",
				"tests/test_qjsm.js"
			],
			[
				"buffer-tu",
				"buffer-utils.c"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"repl.",
				"lib/repl.js"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"quickjs-blo",
				"quickjs-blob.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"test_mis",
				"tests/test_misc.js"
			],
			[
				"test_blob",
				"tests/test_blob.js"
			],
			[
				"test_string",
				"tests/test_stringdecoder.js"
			],
			[
				"test_str",
				"tests/test_stringdecoder.js"
			],
			[
				"quickjs-blb",
				"quickjs-blob.h"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"ringbuffer.h",
				"ringbuffer.h"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			],
			[
				"source.h",
				"src/source.h"
			],
			[
				"fdtable",
				"src/fdtable.h"
			],
			[
				"fd.h",
				"src/fd.h"
			],
			[
				"eval",
				"src/eval.h"
			],
			[
				"ieee",
				"doc/posix/ieee-p1003.2-d11.2-s3.txt"
			],
			[
				"expand.h",
				"src/expand.h"
			],
			[
				"builtin_dum",
				"src/builtin/builtin_dump.c"
			],
			[
				"h_main",
				"src/sh/sh_main.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 251.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
