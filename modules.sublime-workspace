{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Ret",
				"ReturnValuePathFunction"
			],
			[
				"cFunc",
				"cFuncListObjects"
			],
			[
				"isC",
				"isCFuncCall"
			],
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_Set",
				"JS_SetProperty"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  Ⓜ  GLOB_MAGCHAR … — macro object\n  Ⓜ  GLOB_ALTDIRFUNC … — macro object\n  Ⓜ  GLOB_BRACE … — macro object\n  Ⓜ  GLOB_NOMAGIC … — macro object\n  Ⓜ  GLOB_TILDE … — macro object\n  Ⓜ  GLOB_ONLYDIR … — macro object\n  Ⓜ  GLOB_TILDE_CHECK … — macro object\n—Ⓕ– memmem ( ) { … } — function\n  Ⓣ  pcg32_random_t ; — typedef\n—Ⓕ– pcg32_random_r ( ) { … } — function\n—Ⓕ– pcg32_random ( ) { … } — function\n—Ⓕ– pcg32_init_state ( ) { … } — function\n—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function\n—Ⓕ– js_pointer_free_func ( ) { … } — function\n—Ⓕ– js_string_free_func ( ) { … } — function\n—Ⓕ– js_arraybuffer_free_func ( ) { … } — function\n—Ⓕ– js_misc_getrelease ( ) { … } — function\n—Ⓕ– js_misc_tostring ( ) { … } — function\n—Ⓕ– js_misc_topointer ( ) { … } — function\n—Ⓕ– js_misc_toarraybuffer ( ) { … } — function\n—Ⓕ– js_misc_slice ( ) { … } — function\n—Ⓕ– js_misc_duparraybuffer ( ) { … } — function\n—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function\n—Ⓕ– js_misc_concat ( ) { … } — function\n—Ⓕ– js_misc_searcharraybuffer ( ) { … } — function\n—Ⓕ– js_misc_memcpy ( ) { … } — function\n—Ⓕ– js_misc_fmemopen ( ) { … } — function\n—Ⓕ– js_misc_getperformancecounter ( ) { … } — function\n—Ⓕ– js_misc_proclink ( ) { … } — function\n—Ⓕ– js_misc_procread ( ) { … } — function\n—Ⓕ– js_misc_getprototypechain ( ) { … } — function\n—Ⓕ– js_misc_hrtime ( ) { … } — function\n—Ⓕ– js_misc_tempnam ( ) { … } — function\n—Ⓕ– js_misc_mkstemp ( ) { … } — function\n—Ⓕ– js_misc_fnmatch ( ) { … } — function\n—Ⓕ– js_misc_glob_errfunc ( ) { … } — function\n—Ⓕ– js_misc_glob ( ) { … } — function\n—Ⓕ– js_misc_wordexp ( ) { … } — function\n—Ⓕ– js_misc_uname ( ) { … } — function\n—Ⓕ– js_misc_ioctl ( ) { … } — function\n—Ⓕ– js_misc_screensize ( ) { … } — function\n—Ⓕ– js_misc_btoa ( ) { … } — function\n—Ⓕ– js_misc_atob ( ) { … } — function\n—Ⓕ– js_misc_compile ( ) { … } — function\nImmutableClosure\n—Ⓕ– js_misc_immutable_free ( ) { … } — function\n—Ⓕ– js_misc_immutable_constructor ( ) { … } — function\n—Ⓕ– js_misc_immutable_class ( ) { … } — function\n—Ⓕ– js_misc_write_object ( ) { … } — function\n—Ⓕ– js_misc_read_object ( ) { … } — function\n—Ⓕ– js_misc_getx ( ) { … } — function\n—Ⓕ– js_misc_valuetype ( ) { … } — function\n—Ⓕ– js_misc_evalbinary ( ) { … } — function\n—Ⓕ– js_misc_opcode_array ( ) { … } — function\n—Ⓕ– js_misc_opcode_object ( ) { … } — function\n—Ⓕ– js_misc_opcodes ( ) { … } — function\n—Ⓕ– js_misc_get_bytecode ( ) { … } — function\n—Ⓕ– js_misc_atom ( ) { … } — function\n—Ⓕ– js_misc_classid ( ) { … } — function\n—Ⓕ– js_misc_type ( ) { … } — function\n—Ⓕ– js_misc_bitfield ( ) { … } — function\n—Ⓕ– js_misc_bitop ( ) { … } — function\n—Ⓕ– js_misc_random ( ) { … } — function\n—Ⓕ– js_misc_escape ( ) { … } — function\n—Ⓕ– js_misc_quote ( ) { … } — function\n—Ⓕ– js_misc_error ( ) { … } — function\n—Ⓕ– js_misc_is ( ) { … } — function\n—Ⓕ– js_misc_watch ( ) { … } — function\n—Ⓕ– js_misc_daemon ( ) { … } — function\n—Ⓕ– js_misc_fork ( ) { … } — function\n—Ⓕ– js_misc_vfork ( ) { … } — function\n—Ⓕ– js_misc_setsid ( ) { … } — function\n  Ⓣ  JSAtExitEntry ; — typedef\n—Ⓕ– js_misc_atexit_handler ( ) { … } — function\n—Ⓕ– js_misc_atexit ( ) { … } — function\n—Ⓕ– js_misc_init ( ) { … } — function\n  Ⓜ  JS_INIT_MODULE … — macro object\n  Ⓜ  JS_INIT_MODULE … — macro object\n—Ⓕ– JS_INIT_MODULE ( ) { … } — function",
			"settings":
			{
				"buffer_size": 3259,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								703,
								717
							],
							[
								797,
								820
							],
							[
								958,
								975
							],
							[
								1016,
								1033
							],
							[
								1066,
								1075
							],
							[
								1109,
								1119
							],
							[
								1153,
								1163
							],
							[
								1198,
								1209
							],
							[
								1243,
								1253
							],
							[
								1288,
								1299
							],
							[
								1336,
								1349
							],
							[
								1387,
								1401
							],
							[
								1437,
								1449
							],
							[
								1485,
								1497
							],
							[
								1550,
								1570
							],
							[
								1832,
								1848
							],
							[
								1902,
								1921
							],
							[
								1956,
								1972
							],
							[
								2014,
								2029
							],
							[
								2050,
								2054
							],
							[
								2092,
								2126
							],
							[
								2149,
								2181
							],
							[
								2204,
								2247
							],
							[
								4076,
								4095
							],
							[
								4193,
								4209
							],
							[
								4271,
								4289
							],
							[
								4353,
								4372
							],
							[
								4437,
								4446
							],
							[
								4501,
								4518
							],
							[
								4581,
								4598
							],
							[
								4661,
								4675
							],
							[
								4735,
								4750
							],
							[
								4811,
								4826
							],
							[
								4887,
								4895
							],
							[
								4949,
								4961
							],
							[
								5019,
								5029
							],
							[
								5085,
								5096
							],
							[
								5153,
								5161
							],
							[
								5215,
								5237
							],
							[
								5305,
								5320
							],
							[
								5381,
								5403
							],
							[
								5471,
								5487
							],
							[
								5549,
								5565
							],
							[
								5627,
								5639
							],
							[
								5697,
								5709
							],
							[
								5767,
								5780
							],
							[
								5839,
								5857
							],
							[
								5915,
								5933
							],
							[
								5997,
								6019
							],
							[
								6087,
								6114
							],
							[
								6187,
								6204
							],
							[
								6261,
								6278
							],
							[
								6335,
								6352
							],
							[
								6399,
								6415
							],
							[
								6498,
								6514
							],
							[
								6586,
								6602
							],
							[
								6674,
								6691
							],
							[
								6748,
								6768
							],
							[
								6827,
								6847
							],
							[
								7006,
								7025
							],
							[
								7101,
								7108
							],
							[
								7137,
								7157
							],
							[
								7227,
								7242
							],
							[
								7303,
								7329
							],
							[
								7400,
								7416
							],
							[
								7472,
								7485
							],
							[
								7562,
								7580
							],
							[
								7662,
								7675
							],
							[
								7740,
								7754
							],
							[
								7856,
								7882
							],
							[
								7928,
								7953
							],
							[
								8038,
								8080
							],
							[
								8214,
								8254
							],
							[
								11183,
								11226
							],
							[
								11643,
								11678
							],
							[
								11834,
								11852
							],
							[
								11882,
								11887
							],
							[
								11977,
								12004
							],
							[
								12123,
								12158
							],
							[
								12219,
								12223
							],
							[
								12239,
								12243
							],
							[
								12270,
								12279
							],
							[
								12442,
								12475
							],
							[
								12604,
								12636
							],
							[
								12800,
								12833
							],
							[
								13029,
								13050
							],
							[
								13128,
								13134
							],
							[
								13151,
								13167
							],
							[
								13313,
								13319
							],
							[
								13332,
								13348
							],
							[
								13521,
								13526
							],
							[
								13540,
								13549
							],
							[
								13599,
								13626
							],
							[
								13671,
								13677
							],
							[
								13722,
								13734
							],
							[
								13764,
								13797
							],
							[
								13855,
								13861
							],
							[
								13976,
								13988
							],
							[
								14042,
								14054
							],
							[
								14202,
								14213
							],
							[
								14255,
								14288
							],
							[
								14346,
								14355
							],
							[
								14477,
								14498
							],
							[
								14559,
								14580
							],
							[
								14738,
								14752
							],
							[
								14801,
								14840
							],
							[
								14913,
								14927
							],
							[
								15082,
								15099
							],
							[
								15240,
								15257
							],
							[
								15288,
								15305
							],
							[
								15405,
								15422
							],
							[
								15714,
								15728
							],
							[
								15774,
								15798
							],
							[
								15848,
								15852
							],
							[
								15892,
								15919
							],
							[
								16149,
								16169
							],
							[
								16199,
								16210
							],
							[
								16309,
								16344
							],
							[
								16384,
								16402
							],
							[
								16589,
								16610
							],
							[
								16634,
								16644
							],
							[
								16683,
								16713
							],
							[
								17261,
								17295
							],
							[
								17602,
								17657
							],
							[
								17933,
								17977
							],
							[
								18144,
								18178
							],
							[
								18244,
								18280
							],
							[
								18355,
								18372
							],
							[
								18516,
								18561
							],
							[
								18704,
								18717
							],
							[
								18815,
								18828
							],
							[
								18910,
								18947
							],
							[
								18948,
								18962
							],
							[
								18968,
								18972
							],
							[
								19047,
								19079
							],
							[
								19107,
								19133
							],
							[
								19458,
								19480
							],
							[
								19531,
								19547
							],
							[
								19562,
								19569
							],
							[
								19597,
								19613
							],
							[
								19654,
								19682
							],
							[
								19901,
								19918
							],
							[
								19919,
								19928
							],
							[
								19980,
								19997
							],
							[
								19998,
								20007
							],
							[
								20067,
								20084
							],
							[
								20085,
								20108
							],
							[
								20164,
								20188
							],
							[
								22815,
								22843
							],
							[
								23274,
								23278
							],
							[
								23406,
								23419
							],
							[
								23735,
								23747
							],
							[
								24010,
								24023
							],
							[
								24128,
								24142
							],
							[
								25035,
								25063
							],
							[
								25179,
								25192
							],
							[
								25304,
								25330
							],
							[
								25520,
								25568
							],
							[
								25616,
								25728
							],
							[
								25833,
								25856
							],
							[
								25995,
								26047
							],
							[
								26141,
								26157
							],
							[
								26241,
								26252
							],
							[
								26365,
								26369
							],
							[
								26648,
								26681
							],
							[
								26795,
								26847
							],
							[
								27021,
								27057
							],
							[
								27214,
								27230
							],
							[
								27248,
								27270
							],
							[
								27383,
								27389
							],
							[
								27493,
								27506
							],
							[
								28914,
								28956
							],
							[
								29151,
								29182
							],
							[
								29232,
								29274
							],
							[
								29394,
								29418
							],
							[
								29638,
								29648
							],
							[
								29701,
								29705
							],
							[
								29744,
								29775
							],
							[
								29786,
								29803
							],
							[
								29944,
								29979
							],
							[
								30027,
								30054
							],
							[
								30145,
								30183
							],
							[
								30392,
								30440
							],
							[
								31028,
								31055
							],
							[
								31258,
								31272
							],
							[
								31321,
								31327
							],
							[
								31368,
								31434
							],
							[
								31436,
								31440
							],
							[
								31598,
								31605
							],
							[
								31697,
								31707
							],
							[
								31818,
								31827
							],
							[
								31933,
								31959
							],
							[
								32092,
								32123
							],
							[
								32298,
								32317
							],
							[
								32368,
								32376
							],
							[
								32405,
								32439
							],
							[
								32583,
								32608
							],
							[
								32705,
								32740
							],
							[
								32792,
								32821
							],
							[
								32903,
								32939
							],
							[
								33124,
								33128
							],
							[
								33155,
								33159
							],
							[
								33198,
								33202
							],
							[
								33230,
								33234
							],
							[
								33263,
								33291
							],
							[
								33421,
								33425
							],
							[
								33482,
								33513
							],
							[
								33631,
								33658
							],
							[
								33711,
								33720
							],
							[
								33781,
								33793
							],
							[
								33935,
								33947
							],
							[
								34074,
								34099
							],
							[
								34139,
								34165
							],
							[
								34424,
								34590
							],
							[
								34599,
								34656
							],
							[
								34663,
								34704
							],
							[
								34971,
								34991
							],
							[
								35193,
								35208
							],
							[
								35489,
								35512
							],
							[
								35717,
								35735
							],
							[
								35948,
								35962
							],
							[
								36023,
								36035
							],
							[
								36133,
								36142
							],
							[
								36418,
								36434
							],
							[
								36869,
								36905
							],
							[
								37000,
								37009
							],
							[
								37185,
								37195
							],
							[
								37206,
								37214
							],
							[
								37263,
								37275
							],
							[
								37520,
								37532
							]
						],
						"symlist":
						[
							"sliceFn = x =>",
							"ArrayBuffer(start, end)",
							"SharedArrayBuffer",
							"Uint8ClampedArray",
							"Int8Array",
							"Uint8Array",
							"Int16Array",
							"Uint16Array",
							"Int32Array",
							"Uint32Array",
							"BigInt64Array",
							"BigUint64Array",
							"Float32Array",
							"Float64Array",
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							"function util()",
							"util",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterable(v)",
							"isAsyncIterable(v)",
							"isIterator(v)",
							"isArrayLike(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function memoize(fn, cache = {})",
							" function Memoize(n, ...rest)",
							" function getset(target, ...args)",
							"GetSet = (...args) =>",
							"key =>",
							" (key, value) =>",
							"key =>",
							" (key, value) =>",
							"() =>",
							" value =>",
							" function modifier(...args)",
							" fn =>",
							" newValue =>",
							" function getter(target, ...args)",
							" () =>",
							"ret = key =>",
							"ret = key =>",
							"ret = () =>",
							" function setter(target, ...args)",
							" value =>",
							"ret = (key, value) =>",
							"ret = (key, value) =>",
							"ret = value =>",
							" function gettersetter(target, ...args)",
							" (...args2) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							" (...args2) =>",
							" function hasGetSet(obj)",
							"m =>",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getPrototypeChain(obj, limit = -1, start = 0)",
							" function getConstructorChain(obj, ...range)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" function filterKeys(r, needles, keep = true)",
							"pred = key =>",
							"(obj, key) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							"(acc, arg) =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function shorten(str, max = 40, suffix = '...')",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function arrayFacade(proto, itemFn = (container, i) => container.",
							"(i))",
							"*keys()",
							"*entries()",
							"*values()",
							"forEach(callback, thisArg)",
							"reduce(callback, accu, thisArg)",
							" function mod(a, b)",
							"b : n =>",
							" function pushUnique(arr, ...args)",
							" function intersect(a, b)",
							" function symmetricDifference(a, b)",
							" function* partition(a, size)",
							" function difference(a, b, includes)",
							"x =>",
							"x =>",
							"x =>",
							"x =>",
							" function intersection(a, b)",
							"x =>",
							" function union(a, b, equality)",
							" function repeater(n, what)",
							"n = () =>",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function functionName(fn)",
							" function instrument( fn, log = (duration, name, args, ret) => console.log( `function '${name}'` + (ret !== undefined ? ` {= ${escape(ret + '').",
							"(0, 100) + '...'}}` : '') + ` timing: ${duration.",
							"(3)}ms` ), logInterval = 0 //1000 )",
							"async (args, ret) =>",
							" (args, ret) =>",
							"async function(...args)",
							" function(...args)",
							"newMap = () =>",
							"(...args) =>",
							"get(path)",
							"set(path, value)",
							"catchable = function Catchable(self)",
							"catchable",
							"function()",
							"then(fn)",
							"(...args) =>",
							"(...args) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1EgAAICBzbGljZUZuID0geCA9PgpBcnJheUJ1ZmZlcihzdGFydCwgZW5kKQpTaGFyZWRBcnJheUJ1ZmZlcgpVaW50OENsYW1wZWRBcnJheQpJbnQ4QXJyYXkKVWludDhBcnJheQpJbnQxNkFycmF5ClVpbnQxNkFycmF5CkludDMyQXJyYXkKVWludDMyQXJyYXkKQmlnSW50NjRBcnJheQpCaWdVaW50NjRBcnJheQpGbG9hdDMyQXJyYXkKRmxvYXQ2NEFycmF5CiAgc2xpY2UgPSAoeCwgcywgZSkgPT4KICBzdHJpbmdpZnkgPSB2ID0+CiAgZm9ybWF0TnVtYmVyID0gbiA9PgogIGlzTmF0aXZlID0gZm4gPT4KICB1dGlsKCkKICB1dGlsCkFzeW5jRnVuY3Rpb24gPSBmdW5jdGlvbiB4KCkKR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGN0b3IgPT4KICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNDb25zdHJ1Y3Rvcih2KQogIGlzSXRlcmFibGUodikKICBpc0FzeW5jSXRlcmFibGUodikKICBpc0l0ZXJhdG9yKHYpCiAgaXNBcnJheUxpa2UodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKKCkgPT4KICBjbGVhckludGVydmFsKGlkKQogIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3RvcikKICBjdG9yCiAgY3RvcgogIHN1cGVyQ3RvcgogIG1lbW9pemUoZm4sIGNhY2hlID0ge30pCk1lbW9pemUobiwgLi4ucmVzdCkKICBnZXRzZXQodGFyZ2V0LCAuLi5hcmdzKQpHZXRTZXQgPSAoLi4uYXJncykgPT4KICBrZXkgPT4KICAoa2V5LCB2YWx1ZSkgPT4KICBrZXkgPT4KICAoa2V5LCB2YWx1ZSkgPT4KKCkgPT4KICB2YWx1ZSA9PgogIG1vZGlmaWVyKC4uLmFyZ3MpCiAgZm4gPT4KICBuZXdWYWx1ZSA9PgogIGdldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgKCkgPT4KICByZXQgPSBrZXkgPT4KICByZXQgPSBrZXkgPT4KICByZXQgPSAoKSA9PgogIHNldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgdmFsdWUgPT4KICByZXQgPSAoa2V5LCB2YWx1ZSkgPT4KICByZXQgPSAoa2V5LCB2YWx1ZSkgPT4KICByZXQgPSB2YWx1ZSA9PgogIGdldHRlcnNldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgKC4uLmFyZ3MyKSA9PgogIGZuID0gKC4uLmFyZ3MpID0+CiAgZm4gPSAoLi4uYXJncykgPT4KICBmbiA9ICguLi5hcmdzKSA9PgogIGZuID0gKC4uLmFyZ3MpID0+CiAgKC4uLmFyZ3MyKSA9PgogIGhhc0dldFNldChvYmopCiAgbSA9PgogIG1hcE9iamVjdCh0YXJnZXQpCiAgc2V0OiAoa2V5LCB2YWx1ZSkgPT4KICBnZXQ6IGtleSA9PgogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0UHJvdG90eXBlQ2hhaW4ob2JqLCBsaW1pdCA9IC0xLCBzdGFydCA9IDApCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmosIC4uLnJhbmdlKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgcHJlZCA9IChlbCwgaSkgPT4KICBmaWx0ZXJLZXlzKHIsIG5lZWRsZXMsIGtlZXAgPSB0cnVlKQogIHByZWQgPSBrZXkgPT4KKG9iaiwga2V5KSA9PgogIChmLCBhcnIgPSBbXSwgbGVuZ3RoID0gZi5sZW5ndGgpID0+CiAgKC4uLmFyZ3MpID0+CiAgYSA9PgogIHNwbGl0KGJ1ZiwgLi4ucG9pbnRzKQogIHNwbGl0QXQgPSAoYiwgcG9zLCBsZW4pID0+CiAgdW5pcXVlID0gKGFyciwgY21wKSA9PgogIChlbCwgaSwgYXJyKSA9PgogIGl0ZW0gPT4KICAoZWwsIGksIGFycikgPT4KICBnZXRGdW5jdGlvbkFyZ3VtZW50cyA9IGZuID0+CiAgKG9mZnNldCA9IDApID0+CiAgY29kZSA9PgogIChvZmZzZXQgPSAwKSA9PgogIGNvZGUgPT4KICAob2Zmc2V0ID0gMCkgPT4KICAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICBnZXRBbnNpU3R5bGVzKCkKICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgYyA9PgogIHZhbHVlOiBoZXggPT4KICBjaGFyYWN0ZXIgPT4KICB2YWx1ZTogaGV4ID0+CiAgdmFsdWU6IGNvZGUgPT4KICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgdmFsdWU6IGhleCA9PgogIHJhbmRJbnQoLi4uYXJncykKICByYW5kRmxvYXQobWluLCBtYXgsIHJuZyA9IE1hdGgucmFuZG9tKQogIHJhbmRTdHIobiwgc2V0ID0gJ18wMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eicsIHJuZyA9IE1hdGgucmFuZG9tKQogIHRvQmlnSW50KGFyZykKICBsYXp5UHJvcGVydHkob2JqLCBuYW1lLCBnZXR0ZXIsIG9wdHMgPSB7fSkKICBmdW5jdGlvbigpCiAgZnVuY3Rpb24oKQogIHYgPT4KICByZXBsYWNlUHJvcGVydHkodmFsdWUpCiAgbGF6eVByb3BlcnRpZXMob2JqLCBnZXR0ZXJzT2JqLCBvcHRzID0ge30pCiAgZ2V0T3B0KG9wdGlvbnMgPSB7fSwgYXJncykKICBmaW5kT3B0ID0gYXJnID0+Cihbb3B0bmFtZSwgb3B0aW9uXSkgPT4KICBvcHQgPT4KKGFjYywgYXJnKSA9PgogIHRvVW5peFRpbWUoZGF0ZU9iaiwgdXRjID0gZmFsc2UpCiAgdW5peFRpbWUodXRjID0gZmFsc2UpCiAgZnJvbVVuaXhUaW1lKGVwb2NoLCB1dGMgPSBmYWxzZSkKICByYW5nZSguLi5hcmdzKQogICh2LCBrKSA9PgogIG4gPT4KICBjaHVua0FycmF5KGFyciwgc2l6ZSkKICBmbiA9IChhLCB2LCBpKSA9PgogIGNhbWVsaXplKHN0ciwgZGVsaW0gPSAnJykKICAobWF0Y2gsIHAxLCBwMiwgb2Zmc2V0KSA9PgogIGRlY2FtZWxpemUoc3RyLCBkZWxpbSA9ICctJykKICBzaG9ydGVuKHN0ciwgbWF4ID0gNDAsIHN1ZmZpeCA9ICcuLi4nKQogIGFycmF5c0luQ29tbW9uKGEpCihpdG0sIGluZHgpID0+CiAgYXJyID0+CiAgYXJyYXlGYWNhZGUocHJvdG8sIGl0ZW1GbiA9IChjb250YWluZXIsIGkpID0+IGNvbnRhaW5lci4KKGkpKQoqa2V5cygpCiplbnRyaWVzKCkKKnZhbHVlcygpCiAgZm9yRWFjaChjYWxsYmFjaywgdGhpc0FyZykKICByZWR1Y2UoY2FsbGJhY2ssIGFjY3UsIHRoaXNBcmcpCiAgbW9kKGEsIGIpCiAgYiA6IG4gPT4KICBwdXNoVW5pcXVlKGFyciwgLi4uYXJncykKICBpbnRlcnNlY3QoYSwgYikKICBzeW1tZXRyaWNEaWZmZXJlbmNlKGEsIGIpCiAgcGFydGl0aW9uKGEsIHNpemUpCiAgZGlmZmVyZW5jZShhLCBiLCBpbmNsdWRlcykKICB4ID0+CiAgeCA9PgogIHggPT4KICB4ID0+CiAgaW50ZXJzZWN0aW9uKGEsIGIpCiAgeCA9PgogIHVuaW9uKGEsIGIsIGVxdWFsaXR5KQogIHJlcGVhdGVyKG4sIHdoYXQpCiAgbiA9ICgpID0+CigpCigpCiAgcmVwZWF0KG4sIHdoYXQpCiAgZnVuY3Rpb25OYW1lKGZuKQogIGluc3RydW1lbnQoIGZuLCBsb2cgPSAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4gY29uc29sZS5sb2coIGBmdW5jdGlvbiAnJHtuYW1lfSdgICsgKHJldCAhPT0gdW5kZWZpbmVkID8gYCB7PSAke2VzY2FwZShyZXQgKyAnJykuCigwLCAxMDApICsgJy4uLid9fWAgOiAnJykgKyBgIHRpbWluZzogJHtkdXJhdGlvbi4KKDMpfW1zYCApLCBsb2dJbnRlcnZhbCA9IDAgLy8xMDAwICkKKGFyZ3MsIHJldCkgPT4KICAoYXJncywgcmV0KSA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgZnVuY3Rpb24oLi4uYXJncykKICBuZXdNYXAgPSAoKSA9PgooLi4uYXJncykgPT4KICBnZXQocGF0aCkKICBzZXQocGF0aCwgdmFsdWUpCiAgY2F0Y2hhYmxlID0gZnVuY3Rpb24gQ2F0Y2hhYmxlKHNlbGYpCiAgY2F0Y2hhYmxlCiAgZnVuY3Rpb24oKQogIHRoZW4oZm4pCiguLi5hcmdzKSA9PgooLi4uYXJncykgPT4AAAAAAAAAADUSAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
						"symkeys":
						[
							[
								557,
								577
							],
							[
								614,
								634
							],
							[
								666,
								673
							],
							[
								856,
								868
							],
							[
								948,
								970
							],
							[
								1923,
								1951
							],
							[
								3421,
								3438
							],
							[
								4245,
								4287
							]
						],
						"symlist":
						[
							"printStatus(...args)",
							"function StartREPL()",
							"REPL =>",
							"(...args) =>",
							"function main(...args)",
							" function processFile(file)",
							" (node, stack) =>",
							" function Recurse(node, fn, stack = [])"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1EgAAICBzbGljZUZuID0geCA9PgpBcnJheUJ1ZmZlcihzdGFydCwgZW5kKQpTaGFyZWRBcnJheUJ1ZmZlcgpVaW50OENsYW1wZWRBcnJheQpJbnQ4QXJyYXkKVWludDhBcnJheQpJbnQxNkFycmF5ClVpbnQxNkFycmF5CkludDMyQXJyYXkKVWludDMyQXJyYXkKQmlnSW50NjRBcnJheQpCaWdVaW50NjRBcnJheQpGbG9hdDMyQXJyYXkKRmxvYXQ2NEFycmF5CiAgc2xpY2UgPSAoeCwgcywgZSkgPT4KICBzdHJpbmdpZnkgPSB2ID0+CiAgZm9ybWF0TnVtYmVyID0gbiA9PgogIGlzTmF0aXZlID0gZm4gPT4KICB1dGlsKCkKICB1dGlsCkFzeW5jRnVuY3Rpb24gPSBmdW5jdGlvbiB4KCkKR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGN0b3IgPT4KICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNDb25zdHJ1Y3Rvcih2KQogIGlzSXRlcmFibGUodikKICBpc0FzeW5jSXRlcmFibGUodikKICBpc0l0ZXJhdG9yKHYpCiAgaXNBcnJheUxpa2UodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKKCkgPT4KICBjbGVhckludGVydmFsKGlkKQogIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3RvcikKICBjdG9yCiAgY3RvcgogIHN1cGVyQ3RvcgogIG1lbW9pemUoZm4sIGNhY2hlID0ge30pCk1lbW9pemUobiwgLi4ucmVzdCkKICBnZXRzZXQodGFyZ2V0LCAuLi5hcmdzKQpHZXRTZXQgPSAoLi4uYXJncykgPT4KICBrZXkgPT4KICAoa2V5LCB2YWx1ZSkgPT4KICBrZXkgPT4KICAoa2V5LCB2YWx1ZSkgPT4KKCkgPT4KICB2YWx1ZSA9PgogIG1vZGlmaWVyKC4uLmFyZ3MpCiAgZm4gPT4KICBuZXdWYWx1ZSA9PgogIGdldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgKCkgPT4KICByZXQgPSBrZXkgPT4KICByZXQgPSBrZXkgPT4KICByZXQgPSAoKSA9PgogIHNldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgdmFsdWUgPT4KICByZXQgPSAoa2V5LCB2YWx1ZSkgPT4KICByZXQgPSAoa2V5LCB2YWx1ZSkgPT4KICByZXQgPSB2YWx1ZSA9PgogIGdldHRlcnNldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgKC4uLmFyZ3MyKSA9PgogIGZuID0gKC4uLmFyZ3MpID0+CiAgZm4gPSAoLi4uYXJncykgPT4KICBmbiA9ICguLi5hcmdzKSA9PgogIGZuID0gKC4uLmFyZ3MpID0+CiAgKC4uLmFyZ3MyKSA9PgogIGhhc0dldFNldChvYmopCiAgbSA9PgogIG1hcE9iamVjdCh0YXJnZXQpCiAgc2V0OiAoa2V5LCB2YWx1ZSkgPT4KICBnZXQ6IGtleSA9PgogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0UHJvdG90eXBlQ2hhaW4ob2JqLCBsaW1pdCA9IC0xLCBzdGFydCA9IDApCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmosIC4uLnJhbmdlKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgcHJlZCA9IChlbCwgaSkgPT4KICBmaWx0ZXJLZXlzKHIsIG5lZWRsZXMsIGtlZXAgPSB0cnVlKQogIHByZWQgPSBrZXkgPT4KKG9iaiwga2V5KSA9PgogIChmLCBhcnIgPSBbXSwgbGVuZ3RoID0gZi5sZW5ndGgpID0+CiAgKC4uLmFyZ3MpID0+CiAgYSA9PgogIHNwbGl0KGJ1ZiwgLi4ucG9pbnRzKQogIHNwbGl0QXQgPSAoYiwgcG9zLCBsZW4pID0+CiAgdW5pcXVlID0gKGFyciwgY21wKSA9PgogIChlbCwgaSwgYXJyKSA9PgogIGl0ZW0gPT4KICAoZWwsIGksIGFycikgPT4KICBnZXRGdW5jdGlvbkFyZ3VtZW50cyA9IGZuID0+CiAgKG9mZnNldCA9IDApID0+CiAgY29kZSA9PgogIChvZmZzZXQgPSAwKSA9PgogIGNvZGUgPT4KICAob2Zmc2V0ID0gMCkgPT4KICAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICBnZXRBbnNpU3R5bGVzKCkKICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgYyA9PgogIHZhbHVlOiBoZXggPT4KICBjaGFyYWN0ZXIgPT4KICB2YWx1ZTogaGV4ID0+CiAgdmFsdWU6IGNvZGUgPT4KICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgdmFsdWU6IGhleCA9PgogIHJhbmRJbnQoLi4uYXJncykKICByYW5kRmxvYXQobWluLCBtYXgsIHJuZyA9IE1hdGgucmFuZG9tKQogIHJhbmRTdHIobiwgc2V0ID0gJ18wMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eicsIHJuZyA9IE1hdGgucmFuZG9tKQogIHRvQmlnSW50KGFyZykKICBsYXp5UHJvcGVydHkob2JqLCBuYW1lLCBnZXR0ZXIsIG9wdHMgPSB7fSkKICBmdW5jdGlvbigpCiAgZnVuY3Rpb24oKQogIHYgPT4KICByZXBsYWNlUHJvcGVydHkodmFsdWUpCiAgbGF6eVByb3BlcnRpZXMob2JqLCBnZXR0ZXJzT2JqLCBvcHRzID0ge30pCiAgZ2V0T3B0KG9wdGlvbnMgPSB7fSwgYXJncykKICBmaW5kT3B0ID0gYXJnID0+Cihbb3B0bmFtZSwgb3B0aW9uXSkgPT4KICBvcHQgPT4KKGFjYywgYXJnKSA9PgogIHRvVW5peFRpbWUoZGF0ZU9iaiwgdXRjID0gZmFsc2UpCiAgdW5peFRpbWUodXRjID0gZmFsc2UpCiAgZnJvbVVuaXhUaW1lKGVwb2NoLCB1dGMgPSBmYWxzZSkKICByYW5nZSguLi5hcmdzKQogICh2LCBrKSA9PgogIG4gPT4KICBjaHVua0FycmF5KGFyciwgc2l6ZSkKICBmbiA9IChhLCB2LCBpKSA9PgogIGNhbWVsaXplKHN0ciwgZGVsaW0gPSAnJykKICAobWF0Y2gsIHAxLCBwMiwgb2Zmc2V0KSA9PgogIGRlY2FtZWxpemUoc3RyLCBkZWxpbSA9ICctJykKICBzaG9ydGVuKHN0ciwgbWF4ID0gNDAsIHN1ZmZpeCA9ICcuLi4nKQogIGFycmF5c0luQ29tbW9uKGEpCihpdG0sIGluZHgpID0+CiAgYXJyID0+CiAgYXJyYXlGYWNhZGUocHJvdG8sIGl0ZW1GbiA9IChjb250YWluZXIsIGkpID0+IGNvbnRhaW5lci4KKGkpKQoqa2V5cygpCiplbnRyaWVzKCkKKnZhbHVlcygpCiAgZm9yRWFjaChjYWxsYmFjaywgdGhpc0FyZykKICByZWR1Y2UoY2FsbGJhY2ssIGFjY3UsIHRoaXNBcmcpCiAgbW9kKGEsIGIpCiAgYiA6IG4gPT4KICBwdXNoVW5pcXVlKGFyciwgLi4uYXJncykKICBpbnRlcnNlY3QoYSwgYikKICBzeW1tZXRyaWNEaWZmZXJlbmNlKGEsIGIpCiAgcGFydGl0aW9uKGEsIHNpemUpCiAgZGlmZmVyZW5jZShhLCBiLCBpbmNsdWRlcykKICB4ID0+CiAgeCA9PgogIHggPT4KICB4ID0+CiAgaW50ZXJzZWN0aW9uKGEsIGIpCiAgeCA9PgogIHVuaW9uKGEsIGIsIGVxdWFsaXR5KQogIHJlcGVhdGVyKG4sIHdoYXQpCiAgbiA9ICgpID0+CigpCigpCiAgcmVwZWF0KG4sIHdoYXQpCiAgZnVuY3Rpb25OYW1lKGZuKQogIGluc3RydW1lbnQoIGZuLCBsb2cgPSAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4gY29uc29sZS5sb2coIGBmdW5jdGlvbiAnJHtuYW1lfSdgICsgKHJldCAhPT0gdW5kZWZpbmVkID8gYCB7PSAke2VzY2FwZShyZXQgKyAnJykuCigwLCAxMDApICsgJy4uLid9fWAgOiAnJykgKyBgIHRpbWluZzogJHtkdXJhdGlvbi4KKDMpfW1zYCApLCBsb2dJbnRlcnZhbCA9IDAgLy8xMDAwICkKKGFyZ3MsIHJldCkgPT4KICAoYXJncywgcmV0KSA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgZnVuY3Rpb24oLi4uYXJncykKICBuZXdNYXAgPSAoKSA9PgooLi4uYXJncykgPT4KICBnZXQocGF0aCkKICBzZXQocGF0aCwgdmFsdWUpCiAgY2F0Y2hhYmxlID0gZnVuY3Rpb24gQ2F0Y2hhYmxlKHNlbGYpCiAgY2F0Y2hhYmxlCiAgZnVuY3Rpb24oKQogIHRoZW4oZm4pCiguLi5hcmdzKSA9PgooLi4uYXJncykgPT4AAAAAAAAAAIwAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
						"symkeys":
						[
							[
								34,
								51
							],
							[
								312,
								328
							],
							[
								450,
								465
							],
							[
								550,
								565
							],
							[
								597,
								611
							]
						],
						"symlist":
						[
							" Ⓜ  QUICKJS_POINTER_H … — macro object",
							"—Ⓕ– js_pointer_data2 ( ) { … } — function",
							"—Ⓕ– js_pointer_data ( ) { … } — function",
							" ⒡  js_pointer_wrap ( ) ; — function declaration",
							" ⒡  js_pointer_new ( ) ; — function declaration"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACMAAAAICBwcmludFN0YXR1cyguLi5hcmdzKQpTdGFydFJFUEwoKQpSRVBMID0+CiguLi5hcmdzKSA9PgogIG1haW4oLi4uYXJncykKICBwcm9jZXNzRmlsZShmaWxlKQogIChub2RlLCBzdGFjaykgPT4KUmVjdXJzZShub2RlLCBmbiwgc3RhY2sgPSBbXSkAAAAAAAAAAN0AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
						"symkeys":
						[
							[
								31,
								45
							],
							[
								219,
								223
							],
							[
								391,
								395
							],
							[
								504,
								512
							],
							[
								579,
								589
							],
							[
								647,
								656
							],
							[
								694,
								704
							],
							[
								738,
								750
							],
							[
								784,
								795
							],
							[
								858,
								870
							],
							[
								921,
								930
							],
							[
								990,
								999
							],
							[
								1058,
								1070
							]
						],
						"symlist":
						[
							" Ⓜ  QUICKJS_BLOB_H … — macro object",
							"—Ⓒ– blob { … } ; — type",
							" Ⓣ  Blob ; — typedef",
							" ⒡  blob_new ( ) ; — function declaration",
							" ⒡  blob_write ( ) ; — function declaration",
							" ⒡  blob_free ( ) ; — function declaration",
							" ⒡  blob_input ( ) ; — function declaration",
							" ⒡  js_blob_wrap ( ) ; — function declaration",
							" ⒡  js_blob_new ( ) ; — function declaration",
							" ⒡  js_blob_init ( ) ; — function declaration",
							"—Ⓕ– blob_data ( ) { … } — function",
							"—Ⓕ– blob_size ( ) { … } — function",
							"—Ⓕ– js_blob_data ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAICDik4IgIFFVSUNLSlNfUE9JTlRFUl9IIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBqc19wb2ludGVyX2RhdGEyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcG9pbnRlcl9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfcG9pbnRlcl93cmFwICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAganNfcG9pbnRlcl9uZXcgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uAAAAAAAAAAD7AQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
						"symkeys":
						[
							[
								194,
								197
							],
							[
								487,
								496
							],
							[
								754,
								762
							],
							[
								967,
								977
							],
							[
								1128,
								1137
							],
							[
								1258,
								1270
							],
							[
								1392,
								1402
							],
							[
								1569,
								1586
							],
							[
								1666,
								1678
							],
							[
								1843,
								1854
							],
							[
								2067,
								2078
							],
							[
								2458,
								2477
							],
							[
								4700,
								4714
							],
							[
								5901,
								5916
							],
							[
								6357,
								6374
							],
							[
								7167,
								7179
							],
							[
								8038,
								8052
							],
							[
								8082,
								8096
							]
						],
						"symlist":
						[
							"—Ⓜ– max ( ) … — macro function",
							"—Ⓕ– blob_init ( ) { … } — function",
							"—Ⓕ– blob_new ( ) { … } — function",
							"—Ⓕ– blob_write ( ) { … } — function",
							"—Ⓕ– blob_free ( ) { … } — function",
							"—Ⓕ– blob_free_rt ( ) { … } — function",
							"—Ⓕ– blob_input ( ) { … } — function",
							"—Ⓕ– js_blob_free_func ( ) { … } — function",
							"—Ⓕ– js_blob_wrap ( ) { … } — function",
							"—Ⓕ– js_blob_new ( ) { … } — function",
							"—Ⓕ– js_blob_get ( ) { … } — function",
							"—Ⓕ– js_blob_constructor ( ) { … } — function",
							"—Ⓕ– js_blob_method ( ) { … } — function",
							"—Ⓕ– js_blob_inspect ( ) { … } — function",
							"—Ⓕ– js_blob_finalizer ( ) { … } — function",
							"—Ⓕ– js_blob_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAgAAICDik4IgIFFVSUNLSlNfQkxPQl9IIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSuOKAkyBibG9iIHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgQmxvYiA7IOKAlCB0eXBlZGVmCiAg4pKhICBibG9iX25ldyAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICDikqEgIGJsb2Jfd3JpdGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBibG9iX2ZyZWUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBibG9iX2lucHV0ICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAganNfYmxvYl93cmFwICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAganNfYmxvYl9uZXcgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBqc19ibG9iX2luaXQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBibG9iX2RhdGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9iX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19ibG9iX2RhdGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAACoAgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
						"symkeys":
						[
							[
								31,
								45
							],
							[
								161,
								175
							],
							[
								241,
								254
							],
							[
								320,
								333
							]
						],
						"symlist":
						[
							" Ⓜ  QUICKJS_MISC_H … — macro object",
							" ⒡  js_misc_escape ( ) ; — function declaration",
							" ⒡  js_misc_quote ( ) ; — function declaration",
							" ⒡  js_misc_error ( ) ; — function declaration"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABUAwAA4oCU4pOC4oCTIG1heCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9iX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9pbnB1dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYmxvYl93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYmxvYl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19ibG9iX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19ibG9iX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYmxvYl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAC1AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAQAAAAAAAJsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								497,
								509
							],
							[
								553,
								568
							],
							[
								607,
								617
							],
							[
								659,
								671
							],
							[
								711,
								721
							],
							[
								763,
								775
							],
							[
								821,
								837
							],
							[
								1162,
								1168
							],
							[
								1663,
								1677
							],
							[
								1789,
								1803
							],
							[
								2112,
								2124
							],
							[
								2188,
								2204
							],
							[
								2301,
								2334
							],
							[
								2813,
								2833
							],
							[
								2914,
								2933
							],
							[
								3065,
								3089
							],
							[
								3231,
								3249
							],
							[
								3596,
								3612
							],
							[
								4367,
								4384
							],
							[
								5433,
								5454
							],
							[
								6311,
								6324
							],
							[
								7035,
								7057
							],
							[
								7765,
								7790
							],
							[
								8551,
								8565
							],
							[
								9406,
								9431
							],
							[
								10997,
								11011
							],
							[
								12119,
								12135
							],
							[
								13205,
								13234
							],
							[
								13473,
								13489
							],
							[
								14370,
								14386
							],
							[
								15489,
								15514
							],
							[
								16508,
								16522
							],
							[
								17691,
								17706
							],
							[
								18134,
								18149
							],
							[
								18691,
								18706
							],
							[
								19287,
								19307
							],
							[
								19662,
								19674
							],
							[
								20812,
								20827
							],
							[
								21767,
								21780
							],
							[
								22374,
								22387
							],
							[
								22824,
								22842
							],
							[
								23703,
								23715
							],
							[
								24121,
								24133
							],
							[
								24548,
								24563
							],
							[
								25636,
								25652
							],
							[
								25711,
								25733
							],
							[
								25913,
								25942
							],
							[
								26249,
								26272
							],
							[
								27894,
								27914
							],
							[
								28252,
								28271
							],
							[
								28490,
								28502
							],
							[
								30628,
								30645
							],
							[
								31243,
								31261
							],
							[
								32473,
								32493
							],
							[
								32954,
								32975
							],
							[
								33449,
								33464
							],
							[
								33957,
								33977
							],
							[
								34436,
								34448
							],
							[
								35215,
								35230
							],
							[
								36803,
								36815
							],
							[
								37803,
								37819
							],
							[
								41866,
								41879
							],
							[
								42925,
								42939
							],
							[
								43852,
								43866
							],
							[
								44225,
								44238
							],
							[
								46339,
								46352
							],
							[
								47293,
								47303
							],
							[
								49411,
								49424
							],
							[
								50803,
								50817
							],
							[
								51113,
								51125
							],
							[
								51276,
								51289
							],
							[
								51442,
								51456
							],
							[
								51627,
								51640
							],
							[
								51702,
								51724
							],
							[
								51936,
								51950
							],
							[
								62696,
								62708
							],
							[
								63115,
								63129
							],
							[
								63159,
								63173
							],
							[
								63223,
								63237
							]
						],
						"symlist":
						[
							" Ⓜ  GLOB_MAGCHAR … — macro object",
							" Ⓜ  GLOB_ALTDIRFUNC … — macro object",
							" Ⓜ  GLOB_BRACE … — macro object",
							" Ⓜ  GLOB_NOMAGIC … — macro object",
							" Ⓜ  GLOB_TILDE … — macro object",
							" Ⓜ  GLOB_ONLYDIR … — macro object",
							" Ⓜ  GLOB_TILDE_CHECK … — macro object",
							"—Ⓕ– memmem ( ) { … } — function",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_pointer_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_getrelease ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_slice ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concat ( ) { … } — function",
							"—Ⓕ– js_misc_searcharraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_memcpy ( ) { … } — function",
							"—Ⓕ– js_misc_fmemopen ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_tempnam ( ) { … } — function",
							"—Ⓕ– js_misc_mkstemp ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_glob_errfunc ( ) { … } — function",
							"—Ⓕ– js_misc_glob ( ) { … } — function",
							"—Ⓕ– js_misc_wordexp ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_ioctl ( ) { … } — function",
							"—Ⓕ– js_misc_screensize ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile ( ) { … } — function",
							"ImmutableClosure",
							"—Ⓕ– js_misc_immutable_free ( ) { … } — function",
							"—Ⓕ– js_misc_immutable_constructor ( ) { … } — function",
							"—Ⓕ– js_misc_immutable_class ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_type ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_bitop ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function",
							"—Ⓕ– js_misc_is ( ) { … } — function",
							"—Ⓕ– js_misc_watch ( ) { … } — function",
							"—Ⓕ– js_misc_daemon ( ) { … } — function",
							"—Ⓕ– js_misc_fork ( ) { … } — function",
							"—Ⓕ– js_misc_vfork ( ) { … } — function",
							"—Ⓕ– js_misc_setsid ( ) { … } — function",
							" Ⓣ  JSAtExitEntry ; — typedef",
							"—Ⓕ– js_misc_atexit_handler ( ) { … } — function",
							"—Ⓕ– js_misc_atexit ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHAAAAICDik4IgIFFVSUNLSlNfTUlTQ19IIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pKhICBqc19taXNjX2VzY2FwZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICDikqEgIGpzX21pc2NfcXVvdGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBqc19taXNjX2Vycm9yICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgAAAAAAAAAAuwwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								497,
								509
							],
							[
								553,
								568
							],
							[
								607,
								617
							],
							[
								659,
								671
							],
							[
								711,
								721
							],
							[
								763,
								775
							],
							[
								821,
								837
							],
							[
								1162,
								1168
							],
							[
								1663,
								1677
							],
							[
								1789,
								1803
							],
							[
								2112,
								2124
							],
							[
								2188,
								2204
							],
							[
								2301,
								2334
							],
							[
								2813,
								2833
							],
							[
								2914,
								2933
							],
							[
								3065,
								3089
							],
							[
								3231,
								3249
							],
							[
								3596,
								3612
							],
							[
								4367,
								4384
							],
							[
								5433,
								5454
							],
							[
								6311,
								6324
							],
							[
								7035,
								7057
							],
							[
								7765,
								7790
							],
							[
								8551,
								8565
							],
							[
								9406,
								9431
							],
							[
								10997,
								11011
							],
							[
								12119,
								12135
							],
							[
								13205,
								13234
							],
							[
								13473,
								13489
							],
							[
								14370,
								14386
							],
							[
								15489,
								15514
							],
							[
								16508,
								16522
							],
							[
								17691,
								17706
							],
							[
								18134,
								18149
							],
							[
								18691,
								18706
							],
							[
								19287,
								19307
							],
							[
								19662,
								19674
							],
							[
								20812,
								20827
							],
							[
								21767,
								21780
							],
							[
								22374,
								22387
							],
							[
								22824,
								22842
							],
							[
								23703,
								23715
							],
							[
								24121,
								24133
							],
							[
								24548,
								24563
							],
							[
								25636,
								25652
							],
							[
								25711,
								25733
							],
							[
								25913,
								25942
							],
							[
								26249,
								26272
							],
							[
								27894,
								27914
							],
							[
								28252,
								28271
							],
							[
								28490,
								28502
							],
							[
								30628,
								30645
							],
							[
								31243,
								31261
							],
							[
								32473,
								32493
							],
							[
								32954,
								32975
							],
							[
								33449,
								33464
							],
							[
								33957,
								33977
							],
							[
								34436,
								34448
							],
							[
								35215,
								35230
							],
							[
								36803,
								36815
							],
							[
								37803,
								37819
							],
							[
								41866,
								41879
							],
							[
								42925,
								42939
							],
							[
								43852,
								43866
							],
							[
								44225,
								44238
							],
							[
								46339,
								46352
							],
							[
								47293,
								47303
							],
							[
								49411,
								49424
							],
							[
								50803,
								50817
							],
							[
								51113,
								51125
							],
							[
								51276,
								51289
							],
							[
								51442,
								51456
							],
							[
								51627,
								51640
							],
							[
								51702,
								51724
							],
							[
								51936,
								51950
							],
							[
								62696,
								62708
							],
							[
								63115,
								63129
							],
							[
								63159,
								63173
							],
							[
								63223,
								63237
							]
						],
						"symlist":
						[
							" Ⓜ  GLOB_MAGCHAR … — macro object",
							" Ⓜ  GLOB_ALTDIRFUNC … — macro object",
							" Ⓜ  GLOB_BRACE … — macro object",
							" Ⓜ  GLOB_NOMAGIC … — macro object",
							" Ⓜ  GLOB_TILDE … — macro object",
							" Ⓜ  GLOB_ONLYDIR … — macro object",
							" Ⓜ  GLOB_TILDE_CHECK … — macro object",
							"—Ⓕ– memmem ( ) { … } — function",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_pointer_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_getrelease ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_slice ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concat ( ) { … } — function",
							"—Ⓕ– js_misc_searcharraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_memcpy ( ) { … } — function",
							"—Ⓕ– js_misc_fmemopen ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_tempnam ( ) { … } — function",
							"—Ⓕ– js_misc_mkstemp ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_glob_errfunc ( ) { … } — function",
							"—Ⓕ– js_misc_glob ( ) { … } — function",
							"—Ⓕ– js_misc_wordexp ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_ioctl ( ) { … } — function",
							"—Ⓕ– js_misc_screensize ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile ( ) { … } — function",
							"ImmutableClosure",
							"—Ⓕ– js_misc_immutable_free ( ) { … } — function",
							"—Ⓕ– js_misc_immutable_constructor ( ) { … } — function",
							"—Ⓕ– js_misc_immutable_class ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_type ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_bitop ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function",
							"—Ⓕ– js_misc_is ( ) { … } — function",
							"—Ⓕ– js_misc_watch ( ) { … } — function",
							"—Ⓕ– js_misc_daemon ( ) { … } — function",
							"—Ⓕ– js_misc_fork ( ) { … } — function",
							"—Ⓕ– js_misc_vfork ( ) { … } — function",
							"—Ⓕ– js_misc_setsid ( ) { … } — function",
							" Ⓣ  JSAtExitEntry ; — typedef",
							"—Ⓕ– js_misc_atexit_handler ( ) { … } — function",
							"—Ⓕ– js_misc_atexit ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXDwAAICDik4IgIEdMT0JfTUFHQ0hBUiDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgR0xPQl9BTFRESVJGVU5DIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBHTE9CX0JSQUNFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBHTE9CX05PTUFHSUMg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEdMT0JfVElMREUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEdMT0JfT05MWURJUiDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgR0xPQl9USUxERV9DSEVDSyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbWVtbWVtICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgcGNnMzJfcmFuZG9tX3QgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcGNnMzJfcmFuZG9tX3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9yYW5kb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9pbml0X3N0YXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGNnMzJfcmFuZG9tX2JvdW5kZWRfZGl2aXNpb25sZXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcG9pbnRlcl9mcmVlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdHJpbmdfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYXJyYXlidWZmZXJfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXRyZWxlYXNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9wb2ludGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190b2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19zbGljZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZHVwYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb25jYXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3NlYXJjaGFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19tZW1jcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ZtZW1vcGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXRwZXJmb3JtYW5jZWNvdW50ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Byb2NsaW5rICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19wcm9jcmVhZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0cHJvdG90eXBlY2hhaW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2hydGltZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdGVtcG5hbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfbWtzdGVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZm5tYXRjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2xvYl9lcnJmdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nbG9iICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193b3JkZXhwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY191bmFtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfaW9jdGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3NjcmVlbnNpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2J0b2EgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2F0b2IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2NvbXBpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCkltbXV0YWJsZUNsb3N1cmUK4oCU4pK74oCTIGpzX21pc2NfaW1tdXRhYmxlX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ltbXV0YWJsZV9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfaW1tdXRhYmxlX2NsYXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193cml0ZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JlYWRfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192YWx1ZXR5cGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2V2YWxiaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jbGFzc2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190eXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19iaXRmaWVsZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfYml0b3AgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JhbmRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXNjYXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19xdW90ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2lzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193YXRjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZGFlbW9uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19mb3JrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192Zm9yayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfc2V0c2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgSlNBdEV4aXRFbnRyeSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBqc19taXNjX2F0ZXhpdF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdGV4aXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIEpTX0lOSVRfTU9EVUxFICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAuwwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								286,
								305
							],
							[
								434,
								436
							],
							[
								450,
								455
							],
							[
								469,
								472
							],
							[
								486,
								491
							],
							[
								505,
								510
							],
							[
								524,
								529
							],
							[
								543,
								550
							],
							[
								564,
								569
							],
							[
								583,
								592
							],
							[
								607,
								615
							],
							[
								630,
								636
							],
							[
								651,
								657
							],
							[
								1021,
								1032
							],
							[
								1117,
								1129
							],
							[
								1137,
								1159
							],
							[
								1491,
								1500
							],
							[
								1537,
								1546
							],
							[
								1572,
								1582
							],
							[
								1860,
								1869
							],
							[
								2198,
								2207
							],
							[
								2352,
								2362
							],
							[
								2541,
								2553
							],
							[
								2828,
								2838
							],
							[
								2894,
								2904
							],
							[
								3041,
								3052
							],
							[
								3087,
								3102
							],
							[
								3139,
								3147
							],
							[
								3193,
								3205
							],
							[
								3321,
								3332
							],
							[
								3606,
								3614
							],
							[
								3975,
								3994
							],
							[
								4274,
								4290
							],
							[
								4580,
								4598
							],
							[
								4832,
								4850
							],
							[
								5121,
								5141
							],
							[
								6043,
								6059
							],
							[
								6148,
								6164
							],
							[
								6834,
								6848
							],
							[
								7322,
								7339
							],
							[
								9048,
								9065
							],
							[
								9680,
								9700
							],
							[
								10825,
								10837
							],
							[
								17175,
								17186
							],
							[
								18480,
								18497
							],
							[
								19799,
								19816
							],
							[
								21417,
								21429
							],
							[
								22658,
								22669
							],
							[
								23142,
								23156
							],
							[
								23186,
								23200
							],
							[
								23249,
								23263
							]
						],
						"symlist":
						[
							"—Ⓕ– js_inspect_tostring ( ) { … } — function",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							" Ⓣ  ParseOptions ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– xml_debug ( ) … — macro function",
							"—Ⓜ– xml_debug ( ) … — macro function",
							"—Ⓜ– yield_push ( ) … — macro function",
							"—Ⓜ– yield_pop ( ) … — macro function",
							"—Ⓜ– yield_add ( ) … — macro function",
							"—Ⓜ– yield_next ( ) … — macro function",
							"—Ⓜ– yield_return ( ) … — macro function",
							"—Ⓜ– parse_getc ( ) … — macro function",
							"—Ⓜ– parse_skip ( ) … — macro function",
							"—Ⓜ– parse_until ( ) … — macro function",
							"—Ⓜ– parse_skipspace ( ) … — macro function",
							"—Ⓜ– parse_is ( ) … — macro function",
							"—Ⓜ– parse_inside ( ) … — macro function",
							"—Ⓜ– parse_close ( ) … — macro function",
							"—Ⓕ– find_tag ( ) { … } — function",
							"—Ⓕ– is_self_closing_tag ( ) { … } — function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_tree ( ) { … } — function",
							"—Ⓕ– js_xml_write_list ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXDwAAICDik4IgIEdMT0JfTUFHQ0hBUiDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgR0xPQl9BTFRESVJGVU5DIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBHTE9CX0JSQUNFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBHTE9CX05PTUFHSUMg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEdMT0JfVElMREUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEdMT0JfT05MWURJUiDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgR0xPQl9USUxERV9DSEVDSyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbWVtbWVtICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgcGNnMzJfcmFuZG9tX3QgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcGNnMzJfcmFuZG9tX3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9yYW5kb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9pbml0X3N0YXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGNnMzJfcmFuZG9tX2JvdW5kZWRfZGl2aXNpb25sZXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcG9pbnRlcl9mcmVlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdHJpbmdfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYXJyYXlidWZmZXJfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXRyZWxlYXNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9wb2ludGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190b2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19zbGljZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZHVwYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb25jYXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3NlYXJjaGFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19tZW1jcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ZtZW1vcGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXRwZXJmb3JtYW5jZWNvdW50ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Byb2NsaW5rICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19wcm9jcmVhZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0cHJvdG90eXBlY2hhaW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2hydGltZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdGVtcG5hbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfbWtzdGVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZm5tYXRjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2xvYl9lcnJmdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nbG9iICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193b3JkZXhwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY191bmFtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfaW9jdGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3NjcmVlbnNpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2J0b2EgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2F0b2IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2NvbXBpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCkltbXV0YWJsZUNsb3N1cmUK4oCU4pK74oCTIGpzX21pc2NfaW1tdXRhYmxlX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ltbXV0YWJsZV9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfaW1tdXRhYmxlX2NsYXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193cml0ZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JlYWRfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192YWx1ZXR5cGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2V2YWxiaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jbGFzc2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190eXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19iaXRmaWVsZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfYml0b3AgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JhbmRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXNjYXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19xdW90ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2lzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193YXRjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZGFlbW9uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19mb3JrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192Zm9yayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfc2V0c2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgSlNBdEV4aXRFbnRyeSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBqc19taXNjX2F0ZXhpdF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdGV4aXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIEpTX0lOSVRfTU9EVUxFICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAYwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAdCQAA4oCU4pK74oCTIGpzX2luc3BlY3RfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAg4pOCICBXUyDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU1RBUlQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEVORCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIENMT1NFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBFUVVBTCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEJBQ0tTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEVYQ0xBTSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSFlQSEVOIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCiAg4pOJICBQYXJzZU9wdGlvbnMgOyDigJQgdHlwZWRlZgrigJTikrvigJMgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIHhtbF9kZWJ1ZyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeG1sX2RlYnVnICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyB5aWVsZF9wdXNoICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyB5aWVsZF9wb3AgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIHlpZWxkX2FkZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeWllbGRfbmV4dCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeWllbGRfcmV0dXJuICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9nZXRjICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9za2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV91bnRpbCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgcGFyc2Vfc2tpcHNwYWNlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9pcyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgcGFyc2VfaW5zaWRlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9jbG9zZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgZmluZF90YWcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpc19zZWxmX2Nsb3NpbmdfdGFnICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX251bV9jaGlsZHJlbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9zZXRfYXR0cl92YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9zZXRfYXR0cl9ieXRlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9hdHRyaWJ1dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2luZGVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfdGV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX2Nsb3NlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfZW51bWVyYXRpb25fbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9yZWFkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlX3RyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF93cml0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBKU19JTklUX01PRFVMRSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								286,
								305
							],
							[
								434,
								436
							],
							[
								450,
								455
							],
							[
								469,
								472
							],
							[
								486,
								491
							],
							[
								505,
								510
							],
							[
								524,
								529
							],
							[
								543,
								550
							],
							[
								564,
								569
							],
							[
								583,
								592
							],
							[
								607,
								615
							],
							[
								630,
								636
							],
							[
								651,
								657
							],
							[
								1021,
								1032
							],
							[
								1117,
								1129
							],
							[
								1137,
								1159
							],
							[
								1491,
								1500
							],
							[
								1537,
								1546
							],
							[
								1572,
								1582
							],
							[
								1860,
								1869
							],
							[
								2198,
								2207
							],
							[
								2352,
								2362
							],
							[
								2541,
								2553
							],
							[
								2828,
								2838
							],
							[
								2894,
								2904
							],
							[
								3041,
								3052
							],
							[
								3087,
								3102
							],
							[
								3139,
								3147
							],
							[
								3193,
								3205
							],
							[
								3321,
								3332
							],
							[
								3606,
								3614
							],
							[
								3975,
								3994
							],
							[
								4274,
								4290
							],
							[
								4580,
								4598
							],
							[
								4832,
								4850
							],
							[
								5121,
								5141
							],
							[
								6043,
								6059
							],
							[
								6148,
								6164
							],
							[
								6834,
								6848
							],
							[
								7322,
								7339
							],
							[
								9048,
								9065
							],
							[
								9680,
								9700
							],
							[
								10825,
								10837
							],
							[
								17175,
								17186
							],
							[
								18480,
								18497
							],
							[
								19799,
								19816
							],
							[
								21417,
								21429
							],
							[
								22658,
								22669
							],
							[
								23142,
								23156
							],
							[
								23186,
								23200
							],
							[
								23249,
								23263
							]
						],
						"symlist":
						[
							"—Ⓕ– js_inspect_tostring ( ) { … } — function",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							" Ⓣ  ParseOptions ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– xml_debug ( ) … — macro function",
							"—Ⓜ– xml_debug ( ) … — macro function",
							"—Ⓜ– yield_push ( ) … — macro function",
							"—Ⓜ– yield_pop ( ) … — macro function",
							"—Ⓜ– yield_add ( ) … — macro function",
							"—Ⓜ– yield_next ( ) … — macro function",
							"—Ⓜ– yield_return ( ) … — macro function",
							"—Ⓜ– parse_getc ( ) … — macro function",
							"—Ⓜ– parse_skip ( ) … — macro function",
							"—Ⓜ– parse_until ( ) … — macro function",
							"—Ⓜ– parse_skipspace ( ) … — macro function",
							"—Ⓜ– parse_is ( ) … — macro function",
							"—Ⓜ– parse_inside ( ) … — macro function",
							"—Ⓜ– parse_close ( ) … — macro function",
							"—Ⓕ– find_tag ( ) { … } — function",
							"—Ⓕ– is_self_closing_tag ( ) { … } — function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_tree ( ) { … } — function",
							"—Ⓕ– js_xml_write_list ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAYwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAdCQAA4oCU4pK74oCTIGpzX2luc3BlY3RfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAg4pOCICBXUyDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU1RBUlQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEVORCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIENMT1NFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBFUVVBTCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEJBQ0tTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEVYQ0xBTSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSFlQSEVOIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCiAg4pOJICBQYXJzZU9wdGlvbnMgOyDigJQgdHlwZWRlZgrigJTikrvigJMgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIHhtbF9kZWJ1ZyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeG1sX2RlYnVnICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyB5aWVsZF9wdXNoICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyB5aWVsZF9wb3AgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIHlpZWxkX2FkZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeWllbGRfbmV4dCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeWllbGRfcmV0dXJuICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9nZXRjICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9za2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV91bnRpbCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgcGFyc2Vfc2tpcHNwYWNlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9pcyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgcGFyc2VfaW5zaWRlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9jbG9zZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgZmluZF90YWcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpc19zZWxmX2Nsb3NpbmdfdGFnICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX251bV9jaGlsZHJlbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9zZXRfYXR0cl92YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9zZXRfYXR0cl9ieXRlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9hdHRyaWJ1dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2luZGVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfdGV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX2Nsb3NlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfZW51bWVyYXRpb25fbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9yZWFkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlX3RyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF93cml0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBKU19JTklUX01PRFVMRSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgYAAAAAAAAWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								286,
								305
							],
							[
								434,
								436
							],
							[
								450,
								455
							],
							[
								469,
								472
							],
							[
								486,
								491
							],
							[
								505,
								510
							],
							[
								524,
								529
							],
							[
								543,
								550
							],
							[
								564,
								569
							],
							[
								583,
								592
							],
							[
								607,
								615
							],
							[
								630,
								636
							],
							[
								651,
								657
							],
							[
								1021,
								1032
							],
							[
								1117,
								1129
							],
							[
								1137,
								1159
							],
							[
								1491,
								1500
							],
							[
								1537,
								1546
							],
							[
								1572,
								1582
							],
							[
								1860,
								1869
							],
							[
								2198,
								2207
							],
							[
								2352,
								2362
							],
							[
								2541,
								2553
							],
							[
								2828,
								2838
							],
							[
								2894,
								2904
							],
							[
								3041,
								3052
							],
							[
								3087,
								3102
							],
							[
								3139,
								3147
							],
							[
								3193,
								3205
							],
							[
								3321,
								3332
							],
							[
								3606,
								3614
							],
							[
								3975,
								3994
							],
							[
								4274,
								4290
							],
							[
								4580,
								4598
							],
							[
								4832,
								4850
							],
							[
								5121,
								5141
							],
							[
								6043,
								6059
							],
							[
								6148,
								6164
							],
							[
								6834,
								6848
							],
							[
								7322,
								7339
							],
							[
								9048,
								9065
							],
							[
								9680,
								9700
							],
							[
								10825,
								10837
							],
							[
								17175,
								17186
							],
							[
								18480,
								18497
							],
							[
								19799,
								19816
							],
							[
								21417,
								21429
							],
							[
								22658,
								22669
							],
							[
								23142,
								23156
							],
							[
								23186,
								23200
							],
							[
								23249,
								23263
							]
						],
						"symlist":
						[
							"—Ⓕ– js_inspect_tostring ( ) { … } — function",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							" Ⓣ  ParseOptions ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– xml_debug ( ) … — macro function",
							"—Ⓜ– xml_debug ( ) … — macro function",
							"—Ⓜ– yield_push ( ) … — macro function",
							"—Ⓜ– yield_pop ( ) … — macro function",
							"—Ⓜ– yield_add ( ) … — macro function",
							"—Ⓜ– yield_next ( ) … — macro function",
							"—Ⓜ– yield_return ( ) … — macro function",
							"—Ⓜ– parse_getc ( ) … — macro function",
							"—Ⓜ– parse_skip ( ) … — macro function",
							"—Ⓜ– parse_until ( ) … — macro function",
							"—Ⓜ– parse_skipspace ( ) … — macro function",
							"—Ⓜ– parse_is ( ) … — macro function",
							"—Ⓜ– parse_inside ( ) … — macro function",
							"—Ⓜ– parse_close ( ) … — macro function",
							"—Ⓕ– find_tag ( ) { … } — function",
							"—Ⓕ– is_self_closing_tag ( ) { … } — function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_tree ( ) { … } — function",
							"—Ⓕ– js_xml_write_list ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAYwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAdCQAA4oCU4pK74oCTIGpzX2luc3BlY3RfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAg4pOCICBXUyDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU1RBUlQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEVORCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIENMT1NFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBFUVVBTCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEJBQ0tTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEVYQ0xBTSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSFlQSEVOIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCiAg4pOJICBQYXJzZU9wdGlvbnMgOyDigJQgdHlwZWRlZgrigJTikrvigJMgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIHhtbF9kZWJ1ZyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeG1sX2RlYnVnICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyB5aWVsZF9wdXNoICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyB5aWVsZF9wb3AgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIHlpZWxkX2FkZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeWllbGRfbmV4dCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeWllbGRfcmV0dXJuICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9nZXRjICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9za2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV91bnRpbCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgcGFyc2Vfc2tpcHNwYWNlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9pcyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgcGFyc2VfaW5zaWRlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9jbG9zZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgZmluZF90YWcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpc19zZWxmX2Nsb3NpbmdfdGFnICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX251bV9jaGlsZHJlbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9zZXRfYXR0cl92YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9zZXRfYXR0cl9ieXRlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9hdHRyaWJ1dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2luZGVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfdGV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX2Nsb3NlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfZW51bWVyYXRpb25fbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9yZWFkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlX3RyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF93cml0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBKU19JTklUX01PRFVMRSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					7,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					13,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								286,
								305
							],
							[
								434,
								436
							],
							[
								450,
								455
							],
							[
								469,
								472
							],
							[
								486,
								491
							],
							[
								505,
								510
							],
							[
								524,
								529
							],
							[
								543,
								550
							],
							[
								564,
								569
							],
							[
								583,
								592
							],
							[
								607,
								615
							],
							[
								630,
								636
							],
							[
								651,
								657
							],
							[
								1021,
								1032
							],
							[
								1117,
								1129
							],
							[
								1137,
								1159
							],
							[
								1491,
								1500
							],
							[
								1537,
								1546
							],
							[
								1572,
								1582
							],
							[
								1860,
								1869
							],
							[
								2198,
								2207
							],
							[
								2352,
								2362
							],
							[
								2541,
								2553
							],
							[
								2828,
								2838
							],
							[
								2894,
								2904
							],
							[
								3041,
								3052
							],
							[
								3087,
								3102
							],
							[
								3139,
								3147
							],
							[
								3193,
								3205
							],
							[
								3321,
								3332
							],
							[
								3606,
								3614
							],
							[
								3975,
								3994
							],
							[
								4274,
								4290
							],
							[
								4580,
								4598
							],
							[
								4832,
								4850
							],
							[
								5121,
								5141
							],
							[
								6043,
								6059
							],
							[
								6148,
								6164
							],
							[
								6834,
								6848
							],
							[
								7322,
								7339
							],
							[
								9048,
								9065
							],
							[
								9680,
								9700
							],
							[
								10825,
								10837
							],
							[
								17175,
								17186
							],
							[
								18480,
								18497
							],
							[
								19799,
								19816
							],
							[
								21417,
								21429
							],
							[
								22658,
								22669
							],
							[
								23142,
								23156
							],
							[
								23186,
								23200
							],
							[
								23249,
								23263
							]
						],
						"symlist":
						[
							"—Ⓕ– js_inspect_tostring ( ) { … } — function",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							" Ⓣ  ParseOptions ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– xml_debug ( ) … — macro function",
							"—Ⓜ– xml_debug ( ) … — macro function",
							"—Ⓜ– yield_push ( ) … — macro function",
							"—Ⓜ– yield_pop ( ) … — macro function",
							"—Ⓜ– yield_add ( ) … — macro function",
							"—Ⓜ– yield_next ( ) … — macro function",
							"—Ⓜ– yield_return ( ) … — macro function",
							"—Ⓜ– parse_getc ( ) … — macro function",
							"—Ⓜ– parse_skip ( ) … — macro function",
							"—Ⓜ– parse_until ( ) … — macro function",
							"—Ⓜ– parse_skipspace ( ) … — macro function",
							"—Ⓜ– parse_is ( ) … — macro function",
							"—Ⓜ– parse_inside ( ) … — macro function",
							"—Ⓜ– parse_close ( ) … — macro function",
							"—Ⓕ– find_tag ( ) { … } — function",
							"—Ⓕ– is_self_closing_tag ( ) { … } — function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_tree ( ) { … } — function",
							"—Ⓕ– js_xml_write_list ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAYwcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
						"symkeys":
						[
							[
								31,
								45
							],
							[
								391,
								395
							],
							[
								504,
								512
							],
							[
								579,
								589
							],
							[
								647,
								656
							],
							[
								694,
								704
							],
							[
								738,
								750
							],
							[
								784,
								795
							],
							[
								858,
								870
							],
							[
								921,
								930
							],
							[
								990,
								999
							],
							[
								1058,
								1070
							]
						],
						"symlist":
						[
							" Ⓜ  QUICKJS_BLOB_H … — macro object",
							" Ⓣ  Blob ; — typedef",
							"—Ⓕ– blob_new ( ) { … } — function",
							"—Ⓕ– blob_write ( ) { … } — function",
							"—Ⓕ– blob_free ( ) { … } — function",
							"—Ⓕ– blob_input ( ) { … } — function",
							"—Ⓕ– js_blob_wrap ( ) { … } — function",
							"—Ⓕ– js_blob_new ( ) { … } — function",
							"—Ⓕ– js_blob_init ( ) { … } — function",
							"—Ⓕ– blob_data ( ) { … } — function",
							"—Ⓕ– blob_size ( ) { … } — function",
							"—Ⓕ– js_blob_data ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAdCQAA4oCU4pK74oCTIGpzX2luc3BlY3RfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAg4pOCICBXUyDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU1RBUlQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEVORCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIENMT1NFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBFUVVBTCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEJBQ0tTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEVYQ0xBTSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSFlQSEVOIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCiAg4pOJICBQYXJzZU9wdGlvbnMgOyDigJQgdHlwZWRlZgrigJTikrvigJMgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIHhtbF9kZWJ1ZyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeG1sX2RlYnVnICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyB5aWVsZF9wdXNoICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyB5aWVsZF9wb3AgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIHlpZWxkX2FkZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeWllbGRfbmV4dCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeWllbGRfcmV0dXJuICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9nZXRjICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9za2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV91bnRpbCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgcGFyc2Vfc2tpcHNwYWNlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9pcyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgcGFyc2VfaW5zaWRlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9jbG9zZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgZmluZF90YWcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpc19zZWxmX2Nsb3NpbmdfdGFnICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX251bV9jaGlsZHJlbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9zZXRfYXR0cl92YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9zZXRfYXR0cl9ieXRlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9hdHRyaWJ1dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2luZGVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfdGV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX2Nsb3NlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfZW51bWVyYXRpb25fbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9yZWFkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlX3RyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF93cml0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBKU19JTklUX01PRFVMRSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAKQBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
						"symkeys":
						[
							[
								31,
								45
							],
							[
								161,
								175
							],
							[
								241,
								254
							],
							[
								320,
								333
							]
						],
						"symlist":
						[
							" Ⓜ  QUICKJS_MISC_H … — macro object",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASAgAAICDik4IgIFFVSUNLSlNfQkxPQl9IIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOJICBCbG9iIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGJsb2JfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl93cml0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2JfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2JfaW5wdXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19ibG9iX3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19ibG9iX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2JfZGF0YSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2Jfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfZGF0YSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAJoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								497,
								509
							],
							[
								553,
								568
							],
							[
								607,
								617
							],
							[
								659,
								671
							],
							[
								711,
								721
							],
							[
								763,
								775
							],
							[
								821,
								837
							],
							[
								1162,
								1168
							],
							[
								1663,
								1677
							],
							[
								1789,
								1803
							],
							[
								2112,
								2124
							],
							[
								2188,
								2204
							],
							[
								2301,
								2334
							],
							[
								2813,
								2833
							],
							[
								2914,
								2933
							],
							[
								3065,
								3089
							],
							[
								3231,
								3249
							],
							[
								3596,
								3612
							],
							[
								4367,
								4384
							],
							[
								5433,
								5454
							],
							[
								6311,
								6324
							],
							[
								7035,
								7057
							],
							[
								7765,
								7790
							],
							[
								8551,
								8565
							],
							[
								9406,
								9431
							],
							[
								10997,
								11011
							],
							[
								12119,
								12135
							],
							[
								13205,
								13234
							],
							[
								13473,
								13489
							],
							[
								14370,
								14386
							],
							[
								15489,
								15514
							],
							[
								16508,
								16522
							],
							[
								17691,
								17706
							],
							[
								18134,
								18149
							],
							[
								18691,
								18706
							],
							[
								19287,
								19307
							],
							[
								19662,
								19674
							],
							[
								20812,
								20827
							],
							[
								21767,
								21780
							],
							[
								22374,
								22387
							],
							[
								22824,
								22842
							],
							[
								23703,
								23715
							],
							[
								24121,
								24133
							],
							[
								24548,
								24563
							],
							[
								25636,
								25652
							],
							[
								25711,
								25733
							],
							[
								25913,
								25942
							],
							[
								26249,
								26272
							],
							[
								27894,
								27914
							],
							[
								28252,
								28271
							],
							[
								28490,
								28502
							],
							[
								30628,
								30645
							],
							[
								31243,
								31261
							],
							[
								32473,
								32493
							],
							[
								32954,
								32975
							],
							[
								33449,
								33464
							],
							[
								33957,
								33977
							],
							[
								34436,
								34448
							],
							[
								35215,
								35230
							],
							[
								36803,
								36815
							],
							[
								37803,
								37819
							],
							[
								41866,
								41879
							],
							[
								42925,
								42939
							],
							[
								43852,
								43866
							],
							[
								44225,
								44238
							],
							[
								46339,
								46352
							],
							[
								47293,
								47303
							],
							[
								49411,
								49424
							],
							[
								50803,
								50817
							],
							[
								51113,
								51125
							],
							[
								51276,
								51289
							],
							[
								51442,
								51456
							],
							[
								51627,
								51640
							],
							[
								51702,
								51724
							],
							[
								51936,
								51950
							],
							[
								62696,
								62708
							],
							[
								63115,
								63129
							],
							[
								63159,
								63173
							],
							[
								63223,
								63237
							]
						],
						"symlist":
						[
							" Ⓜ  GLOB_MAGCHAR … — macro object",
							" Ⓜ  GLOB_ALTDIRFUNC … — macro object",
							" Ⓜ  GLOB_BRACE … — macro object",
							" Ⓜ  GLOB_NOMAGIC … — macro object",
							" Ⓜ  GLOB_TILDE … — macro object",
							" Ⓜ  GLOB_ONLYDIR … — macro object",
							" Ⓜ  GLOB_TILDE_CHECK … — macro object",
							"—Ⓕ– memmem ( ) { … } — function",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_pointer_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_getrelease ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_slice ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concat ( ) { … } — function",
							"—Ⓕ– js_misc_searcharraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_memcpy ( ) { … } — function",
							"—Ⓕ– js_misc_fmemopen ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_tempnam ( ) { … } — function",
							"—Ⓕ– js_misc_mkstemp ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_glob_errfunc ( ) { … } — function",
							"—Ⓕ– js_misc_glob ( ) { … } — function",
							"—Ⓕ– js_misc_wordexp ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_ioctl ( ) { … } — function",
							"—Ⓕ– js_misc_screensize ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile ( ) { … } — function",
							"ImmutableClosure",
							"—Ⓕ– js_misc_immutable_free ( ) { … } — function",
							"—Ⓕ– js_misc_immutable_constructor ( ) { … } — function",
							"—Ⓕ– js_misc_immutable_class ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_type ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_bitop ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function",
							"—Ⓕ– js_misc_is ( ) { … } — function",
							"—Ⓕ– js_misc_watch ( ) { … } — function",
							"—Ⓕ– js_misc_daemon ( ) { … } — function",
							"—Ⓕ– js_misc_fork ( ) { … } — function",
							"—Ⓕ– js_misc_vfork ( ) { … } — function",
							"—Ⓕ– js_misc_setsid ( ) { … } — function",
							" Ⓣ  JSAtExitEntry ; — typedef",
							"—Ⓕ– js_misc_atexit_handler ( ) { … } — function",
							"—Ⓕ– js_misc_atexit ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC+AAAAICDik4IgIFFVSUNLSlNfTUlTQ19IIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBqc19taXNjX2VzY2FwZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfcXVvdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2Vycm9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAuwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXDwAAICDik4IgIEdMT0JfTUFHQ0hBUiDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgR0xPQl9BTFRESVJGVU5DIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBHTE9CX0JSQUNFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBHTE9CX05PTUFHSUMg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEdMT0JfVElMREUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEdMT0JfT05MWURJUiDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgR0xPQl9USUxERV9DSEVDSyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbWVtbWVtICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgcGNnMzJfcmFuZG9tX3QgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcGNnMzJfcmFuZG9tX3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9yYW5kb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9pbml0X3N0YXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGNnMzJfcmFuZG9tX2JvdW5kZWRfZGl2aXNpb25sZXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcG9pbnRlcl9mcmVlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdHJpbmdfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYXJyYXlidWZmZXJfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXRyZWxlYXNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9wb2ludGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190b2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19zbGljZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZHVwYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb25jYXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3NlYXJjaGFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19tZW1jcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ZtZW1vcGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXRwZXJmb3JtYW5jZWNvdW50ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Byb2NsaW5rICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19wcm9jcmVhZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0cHJvdG90eXBlY2hhaW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2hydGltZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdGVtcG5hbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfbWtzdGVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZm5tYXRjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2xvYl9lcnJmdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nbG9iICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193b3JkZXhwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY191bmFtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfaW9jdGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3NjcmVlbnNpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2J0b2EgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2F0b2IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2NvbXBpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCkltbXV0YWJsZUNsb3N1cmUK4oCU4pK74oCTIGpzX21pc2NfaW1tdXRhYmxlX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ltbXV0YWJsZV9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfaW1tdXRhYmxlX2NsYXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193cml0ZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JlYWRfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192YWx1ZXR5cGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2V2YWxiaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jbGFzc2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190eXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19iaXRmaWVsZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfYml0b3AgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JhbmRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXNjYXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19xdW90ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2lzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193YXRjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZGFlbW9uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19mb3JrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192Zm9yayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfc2V0c2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgSlNBdEV4aXRFbnRyeSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBqc19taXNjX2F0ZXhpdF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdGV4aXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIEpTX0lOSVRfTU9EVUxFICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					6,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								497,
								509
							],
							[
								553,
								568
							],
							[
								607,
								617
							],
							[
								659,
								671
							],
							[
								711,
								721
							],
							[
								763,
								775
							],
							[
								821,
								837
							],
							[
								1162,
								1168
							],
							[
								1663,
								1677
							],
							[
								1789,
								1803
							],
							[
								2112,
								2124
							],
							[
								2188,
								2204
							],
							[
								2301,
								2334
							],
							[
								2813,
								2833
							],
							[
								2914,
								2933
							],
							[
								3065,
								3089
							],
							[
								3231,
								3249
							],
							[
								3596,
								3612
							],
							[
								4367,
								4384
							],
							[
								5433,
								5454
							],
							[
								6311,
								6324
							],
							[
								7035,
								7057
							],
							[
								7765,
								7790
							],
							[
								8551,
								8565
							],
							[
								9406,
								9431
							],
							[
								10997,
								11011
							],
							[
								12119,
								12135
							],
							[
								13205,
								13234
							],
							[
								13473,
								13489
							],
							[
								14370,
								14386
							],
							[
								15489,
								15514
							],
							[
								16508,
								16522
							],
							[
								17691,
								17706
							],
							[
								18134,
								18149
							],
							[
								18691,
								18706
							],
							[
								19287,
								19307
							],
							[
								19662,
								19674
							],
							[
								20812,
								20827
							],
							[
								21767,
								21780
							],
							[
								22374,
								22387
							],
							[
								22824,
								22842
							],
							[
								23703,
								23715
							],
							[
								24121,
								24133
							],
							[
								24548,
								24563
							],
							[
								25636,
								25652
							],
							[
								25711,
								25733
							],
							[
								25913,
								25942
							],
							[
								26249,
								26272
							],
							[
								27894,
								27914
							],
							[
								28252,
								28271
							],
							[
								28490,
								28502
							],
							[
								30628,
								30645
							],
							[
								31243,
								31261
							],
							[
								32473,
								32493
							],
							[
								32954,
								32975
							],
							[
								33449,
								33464
							],
							[
								33957,
								33977
							],
							[
								34436,
								34448
							],
							[
								35215,
								35230
							],
							[
								36803,
								36815
							],
							[
								37803,
								37819
							],
							[
								41866,
								41879
							],
							[
								42925,
								42939
							],
							[
								43852,
								43866
							],
							[
								44225,
								44238
							],
							[
								46339,
								46352
							],
							[
								47293,
								47303
							],
							[
								49411,
								49424
							],
							[
								50803,
								50817
							],
							[
								51113,
								51125
							],
							[
								51276,
								51289
							],
							[
								51442,
								51456
							],
							[
								51627,
								51640
							],
							[
								51702,
								51724
							],
							[
								51936,
								51950
							],
							[
								62696,
								62708
							],
							[
								63115,
								63129
							],
							[
								63159,
								63173
							],
							[
								63223,
								63237
							]
						],
						"symlist":
						[
							" Ⓜ  GLOB_MAGCHAR … — macro object",
							" Ⓜ  GLOB_ALTDIRFUNC … — macro object",
							" Ⓜ  GLOB_BRACE … — macro object",
							" Ⓜ  GLOB_NOMAGIC … — macro object",
							" Ⓜ  GLOB_TILDE … — macro object",
							" Ⓜ  GLOB_ONLYDIR … — macro object",
							" Ⓜ  GLOB_TILDE_CHECK … — macro object",
							"—Ⓕ– memmem ( ) { … } — function",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_pointer_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_getrelease ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_slice ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concat ( ) { … } — function",
							"—Ⓕ– js_misc_searcharraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_memcpy ( ) { … } — function",
							"—Ⓕ– js_misc_fmemopen ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_tempnam ( ) { … } — function",
							"—Ⓕ– js_misc_mkstemp ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_glob_errfunc ( ) { … } — function",
							"—Ⓕ– js_misc_glob ( ) { … } — function",
							"—Ⓕ– js_misc_wordexp ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_ioctl ( ) { … } — function",
							"—Ⓕ– js_misc_screensize ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile ( ) { … } — function",
							"ImmutableClosure",
							"—Ⓕ– js_misc_immutable_free ( ) { … } — function",
							"—Ⓕ– js_misc_immutable_constructor ( ) { … } — function",
							"—Ⓕ– js_misc_immutable_class ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_type ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_bitop ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function",
							"—Ⓕ– js_misc_is ( ) { … } — function",
							"—Ⓕ– js_misc_watch ( ) { … } — function",
							"—Ⓕ– js_misc_daemon ( ) { … } — function",
							"—Ⓕ– js_misc_fork ( ) { … } — function",
							"—Ⓕ– js_misc_vfork ( ) { … } — function",
							"—Ⓕ– js_misc_setsid ( ) { … } — function",
							" Ⓣ  JSAtExitEntry ; — typedef",
							"—Ⓕ– js_misc_atexit_handler ( ) { … } — function",
							"—Ⓕ– js_misc_atexit ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAuwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXDwAAICDik4IgIEdMT0JfTUFHQ0hBUiDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgR0xPQl9BTFRESVJGVU5DIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBHTE9CX0JSQUNFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBHTE9CX05PTUFHSUMg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEdMT0JfVElMREUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEdMT0JfT05MWURJUiDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgR0xPQl9USUxERV9DSEVDSyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbWVtbWVtICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgcGNnMzJfcmFuZG9tX3QgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcGNnMzJfcmFuZG9tX3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9yYW5kb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwY2czMl9pbml0X3N0YXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcGNnMzJfcmFuZG9tX2JvdW5kZWRfZGl2aXNpb25sZXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcG9pbnRlcl9mcmVlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdHJpbmdfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYXJyYXlidWZmZXJfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXRyZWxlYXNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdG9wb2ludGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190b2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19zbGljZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZHVwYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jb25jYXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3NlYXJjaGFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19tZW1jcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ZtZW1vcGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXRwZXJmb3JtYW5jZWNvdW50ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3Byb2NsaW5rICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19wcm9jcmVhZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0cHJvdG90eXBlY2hhaW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2hydGltZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfdGVtcG5hbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfbWtzdGVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZm5tYXRjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2xvYl9lcnJmdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nbG9iICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193b3JkZXhwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY191bmFtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfaW9jdGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3NjcmVlbnNpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2J0b2EgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2F0b2IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2NvbXBpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCkltbXV0YWJsZUNsb3N1cmUK4oCU4pK74oCTIGpzX21pc2NfaW1tdXRhYmxlX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2ltbXV0YWJsZV9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfaW1tdXRhYmxlX2NsYXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193cml0ZV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JlYWRfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19nZXR4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192YWx1ZXR5cGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2V2YWxiaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX29wY29kZV9hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfb3Bjb2RlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZ2V0X2J5dGVjb2RlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19jbGFzc2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY190eXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19iaXRmaWVsZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfYml0b3AgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX3JhbmRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXNjYXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19xdW90ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2lzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY193YXRjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2NfZGFlbW9uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19mb3JrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY192Zm9yayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pc2Nfc2V0c2lkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgSlNBdEV4aXRFbnRyeSA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyBqc19taXNjX2F0ZXhpdF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbWlzY19hdGV4aXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19taXNjX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIEpTX0lOSVRfTU9EVUxFICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/timers.js",
						"symkeys":
						[
							[
								33,
								60
							],
							[
								103,
								129
							],
							[
								208,
								236
							],
							[
								310,
								321
							],
							[
								365,
								376
							],
							[
								437,
								464
							]
						],
						"symlist":
						[
							" function setTimeout(fn, t)",
							" function clearTimeout(id)",
							" function setInterval(fn, t)",
							"sto = () =>",
							"fn2 = () =>",
							" function clearInterval(id)"
						]
					},
					"AQAAAAAAAAAAAAAAawAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								286,
								305
							],
							[
								434,
								436
							],
							[
								450,
								455
							],
							[
								469,
								472
							],
							[
								486,
								491
							],
							[
								505,
								510
							],
							[
								524,
								529
							],
							[
								543,
								550
							],
							[
								564,
								569
							],
							[
								583,
								592
							],
							[
								607,
								615
							],
							[
								630,
								636
							],
							[
								651,
								657
							],
							[
								1021,
								1032
							],
							[
								1117,
								1129
							],
							[
								1137,
								1159
							],
							[
								1491,
								1500
							],
							[
								1537,
								1546
							],
							[
								1572,
								1582
							],
							[
								1860,
								1869
							],
							[
								2198,
								2207
							],
							[
								2352,
								2362
							],
							[
								2541,
								2553
							],
							[
								2828,
								2838
							],
							[
								2894,
								2904
							],
							[
								3041,
								3052
							],
							[
								3087,
								3102
							],
							[
								3139,
								3147
							],
							[
								3193,
								3205
							],
							[
								3321,
								3332
							],
							[
								3606,
								3614
							],
							[
								3975,
								3994
							],
							[
								4274,
								4290
							],
							[
								4580,
								4598
							],
							[
								4832,
								4850
							],
							[
								5121,
								5141
							],
							[
								6043,
								6059
							],
							[
								6148,
								6164
							],
							[
								6834,
								6848
							],
							[
								7322,
								7339
							],
							[
								9048,
								9065
							],
							[
								9680,
								9700
							],
							[
								10825,
								10837
							],
							[
								17175,
								17186
							],
							[
								18480,
								18497
							],
							[
								19799,
								19816
							],
							[
								21417,
								21429
							],
							[
								22658,
								22669
							],
							[
								23142,
								23156
							],
							[
								23186,
								23200
							],
							[
								23249,
								23263
							]
						],
						"symlist":
						[
							"—Ⓕ– js_inspect_tostring ( ) { … } — function",
							" Ⓜ  WS … — macro object",
							" Ⓜ  START … — macro object",
							" Ⓜ  END … — macro object",
							" Ⓜ  QUOTE … — macro object",
							" Ⓜ  CLOSE … — macro object",
							" Ⓜ  EQUAL … — macro object",
							" Ⓜ  SPECIAL … — macro object",
							" Ⓜ  SLASH … — macro object",
							" Ⓜ  BACKSLASH … — macro object",
							" Ⓜ  QUESTION … — macro object",
							" Ⓜ  EXCLAM … — macro object",
							" Ⓜ  HYPHEN … — macro object",
							" Ⓣ  OutputValue ; — typedef",
							" Ⓣ  ParseOptions ; — typedef",
							"—Ⓕ– character_classes_init ( ) { … } — function",
							"—Ⓜ– xml_debug ( ) … — macro function",
							"—Ⓜ– xml_debug ( ) … — macro function",
							"—Ⓜ– yield_push ( ) … — macro function",
							"—Ⓜ– yield_pop ( ) … — macro function",
							"—Ⓜ– yield_add ( ) … — macro function",
							"—Ⓜ– yield_next ( ) … — macro function",
							"—Ⓜ– yield_return ( ) … — macro function",
							"—Ⓜ– parse_getc ( ) … — macro function",
							"—Ⓜ– parse_skip ( ) … — macro function",
							"—Ⓜ– parse_until ( ) … — macro function",
							"—Ⓜ– parse_skipspace ( ) … — macro function",
							"—Ⓜ– parse_is ( ) … — macro function",
							"—Ⓜ– parse_inside ( ) … — macro function",
							"—Ⓜ– parse_close ( ) … — macro function",
							"—Ⓕ– find_tag ( ) { … } — function",
							"—Ⓕ– is_self_closing_tag ( ) { … } — function",
							"—Ⓕ– xml_num_children ( ) { … } — function",
							"—Ⓕ– xml_set_attr_value ( ) { … } — function",
							"—Ⓕ– xml_set_attr_bytes ( ) { … } — function",
							"—Ⓕ– xml_write_attributes ( ) { … } — function",
							"—Ⓕ– xml_write_indent ( ) { … } — function",
							"—Ⓕ– xml_write_string ( ) { … } — function",
							"—Ⓕ– xml_write_text ( ) { … } — function",
							"—Ⓕ– xml_write_element ( ) { … } — function",
							"—Ⓕ– xml_close_element ( ) { … } — function",
							"—Ⓕ– xml_enumeration_next ( ) { … } — function",
							"—Ⓕ– js_xml_parse ( ) { … } — function",
							"—Ⓕ– js_xml_read ( ) { … } — function",
							"—Ⓕ– js_xml_write_tree ( ) { … } — function",
							"—Ⓕ– js_xml_write_list ( ) { … } — function",
							"—Ⓕ– js_xml_write ( ) { … } — function",
							"—Ⓕ– js_xml_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrAAAAICBzZXRUaW1lb3V0KGZuLCB0KQogIGNsZWFyVGltZW91dChpZCkKICBzZXRJbnRlcnZhbChmbiwgdCkKICBzdG8gPSAoKSA9PgogIGZuMiA9ICgpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkAAAAAAAAAAGMHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								497,
								509
							],
							[
								553,
								568
							],
							[
								607,
								617
							],
							[
								659,
								671
							],
							[
								711,
								721
							],
							[
								763,
								775
							],
							[
								821,
								837
							],
							[
								1162,
								1168
							],
							[
								1663,
								1677
							],
							[
								1789,
								1803
							],
							[
								2112,
								2124
							],
							[
								2188,
								2204
							],
							[
								2301,
								2334
							],
							[
								2813,
								2833
							],
							[
								2914,
								2933
							],
							[
								3065,
								3089
							],
							[
								3231,
								3249
							],
							[
								3596,
								3612
							],
							[
								4367,
								4384
							],
							[
								5433,
								5454
							],
							[
								6311,
								6324
							],
							[
								7035,
								7057
							],
							[
								7765,
								7790
							],
							[
								8551,
								8565
							],
							[
								9406,
								9431
							],
							[
								10997,
								11011
							],
							[
								12119,
								12135
							],
							[
								13205,
								13234
							],
							[
								13473,
								13489
							],
							[
								14370,
								14386
							],
							[
								15489,
								15514
							],
							[
								16508,
								16522
							],
							[
								17691,
								17706
							],
							[
								18134,
								18149
							],
							[
								18691,
								18706
							],
							[
								19287,
								19307
							],
							[
								19662,
								19674
							],
							[
								20812,
								20827
							],
							[
								21767,
								21780
							],
							[
								22374,
								22387
							],
							[
								22824,
								22842
							],
							[
								23703,
								23715
							],
							[
								24121,
								24133
							],
							[
								24548,
								24563
							],
							[
								25636,
								25652
							],
							[
								25711,
								25733
							],
							[
								25913,
								25942
							],
							[
								26249,
								26272
							],
							[
								27894,
								27914
							],
							[
								28252,
								28271
							],
							[
								28490,
								28502
							],
							[
								30628,
								30645
							],
							[
								31243,
								31261
							],
							[
								32473,
								32493
							],
							[
								32954,
								32975
							],
							[
								33449,
								33464
							],
							[
								33957,
								33977
							],
							[
								34436,
								34448
							],
							[
								35215,
								35230
							],
							[
								36803,
								36815
							],
							[
								37803,
								37819
							],
							[
								41866,
								41879
							],
							[
								42925,
								42939
							],
							[
								43852,
								43866
							],
							[
								44225,
								44238
							],
							[
								46339,
								46352
							],
							[
								47293,
								47303
							],
							[
								49411,
								49424
							],
							[
								50803,
								50817
							],
							[
								51113,
								51125
							],
							[
								51276,
								51289
							],
							[
								51442,
								51456
							],
							[
								51627,
								51640
							],
							[
								51702,
								51724
							],
							[
								51936,
								51950
							],
							[
								62696,
								62708
							],
							[
								63115,
								63129
							],
							[
								63159,
								63173
							],
							[
								63223,
								63237
							]
						],
						"symlist":
						[
							" Ⓜ  GLOB_MAGCHAR … — macro object",
							" Ⓜ  GLOB_ALTDIRFUNC … — macro object",
							" Ⓜ  GLOB_BRACE … — macro object",
							" Ⓜ  GLOB_NOMAGIC … — macro object",
							" Ⓜ  GLOB_TILDE … — macro object",
							" Ⓜ  GLOB_ONLYDIR … — macro object",
							" Ⓜ  GLOB_TILDE_CHECK … — macro object",
							"—Ⓕ– memmem ( ) { … } — function",
							" Ⓣ  pcg32_random_t ; — typedef",
							"—Ⓕ– pcg32_random_r ( ) { … } — function",
							"—Ⓕ– pcg32_random ( ) { … } — function",
							"—Ⓕ– pcg32_init_state ( ) { … } — function",
							"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
							"—Ⓕ– js_pointer_free_func ( ) { … } — function",
							"—Ⓕ– js_string_free_func ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
							"—Ⓕ– js_misc_getrelease ( ) { … } — function",
							"—Ⓕ– js_misc_tostring ( ) { … } — function",
							"—Ⓕ– js_misc_topointer ( ) { … } — function",
							"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_slice ( ) { … } — function",
							"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_concat ( ) { … } — function",
							"—Ⓕ– js_misc_searcharraybuffer ( ) { … } — function",
							"—Ⓕ– js_misc_memcpy ( ) { … } — function",
							"—Ⓕ– js_misc_fmemopen ( ) { … } — function",
							"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
							"—Ⓕ– js_misc_proclink ( ) { … } — function",
							"—Ⓕ– js_misc_procread ( ) { … } — function",
							"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
							"—Ⓕ– js_misc_hrtime ( ) { … } — function",
							"—Ⓕ– js_misc_tempnam ( ) { … } — function",
							"—Ⓕ– js_misc_mkstemp ( ) { … } — function",
							"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
							"—Ⓕ– js_misc_glob_errfunc ( ) { … } — function",
							"—Ⓕ– js_misc_glob ( ) { … } — function",
							"—Ⓕ– js_misc_wordexp ( ) { … } — function",
							"—Ⓕ– js_misc_uname ( ) { … } — function",
							"—Ⓕ– js_misc_ioctl ( ) { … } — function",
							"—Ⓕ– js_misc_screensize ( ) { … } — function",
							"—Ⓕ– js_misc_btoa ( ) { … } — function",
							"—Ⓕ– js_misc_atob ( ) { … } — function",
							"—Ⓕ– js_misc_compile ( ) { … } — function",
							"ImmutableClosure",
							"—Ⓕ– js_misc_immutable_free ( ) { … } — function",
							"—Ⓕ– js_misc_immutable_constructor ( ) { … } — function",
							"—Ⓕ– js_misc_immutable_class ( ) { … } — function",
							"—Ⓕ– js_misc_write_object ( ) { … } — function",
							"—Ⓕ– js_misc_read_object ( ) { … } — function",
							"—Ⓕ– js_misc_getx ( ) { … } — function",
							"—Ⓕ– js_misc_valuetype ( ) { … } — function",
							"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
							"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
							"—Ⓕ– js_misc_opcodes ( ) { … } — function",
							"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
							"—Ⓕ– js_misc_atom ( ) { … } — function",
							"—Ⓕ– js_misc_classid ( ) { … } — function",
							"—Ⓕ– js_misc_type ( ) { … } — function",
							"—Ⓕ– js_misc_bitfield ( ) { … } — function",
							"—Ⓕ– js_misc_bitop ( ) { … } — function",
							"—Ⓕ– js_misc_random ( ) { … } — function",
							"—Ⓕ– js_misc_escape ( ) { … } — function",
							"—Ⓕ– js_misc_quote ( ) { … } — function",
							"—Ⓕ– js_misc_error ( ) { … } — function",
							"—Ⓕ– js_misc_is ( ) { … } — function",
							"—Ⓕ– js_misc_watch ( ) { … } — function",
							"—Ⓕ– js_misc_daemon ( ) { … } — function",
							"—Ⓕ– js_misc_fork ( ) { … } — function",
							"—Ⓕ– js_misc_vfork ( ) { … } — function",
							"—Ⓕ– js_misc_setsid ( ) { … } — function",
							" Ⓣ  JSAtExitEntry ; — typedef",
							"—Ⓕ– js_misc_atexit_handler ( ) { … } — function",
							"—Ⓕ– js_misc_atexit ( ) { … } — function",
							"—Ⓕ– js_misc_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAdCQAA4oCU4pK74oCTIGpzX2luc3BlY3RfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAg4pOCICBXUyDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU1RBUlQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEVORCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgUVVPVEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIENMT1NFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBFUVVBTCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU1BFQ0lBTCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgU0xBU0gg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEJBQ0tTTEFTSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgUVVFU1RJT04g4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEVYQ0xBTSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSFlQSEVOIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOJICBPdXRwdXRWYWx1ZSA7IOKAlCB0eXBlZGVmCiAg4pOJICBQYXJzZU9wdGlvbnMgOyDigJQgdHlwZWRlZgrigJTikrvigJMgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIHhtbF9kZWJ1ZyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeG1sX2RlYnVnICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyB5aWVsZF9wdXNoICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyB5aWVsZF9wb3AgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIHlpZWxkX2FkZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeWllbGRfbmV4dCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgeWllbGRfcmV0dXJuICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9nZXRjICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9za2lwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV91bnRpbCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgcGFyc2Vfc2tpcHNwYWNlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9pcyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgcGFyc2VfaW5zaWRlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBwYXJzZV9jbG9zZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgZmluZF90YWcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpc19zZWxmX2Nsb3NpbmdfdGFnICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX251bV9jaGlsZHJlbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9zZXRfYXR0cl92YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF9zZXRfYXR0cl9ieXRlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9hdHRyaWJ1dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX3dyaXRlX2luZGVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfd3JpdGVfdGV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHhtbF93cml0ZV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgeG1sX2Nsb3NlX2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB4bWxfZW51bWVyYXRpb25fbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9yZWFkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfeG1sX3dyaXRlX3RyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc194bWxfd3JpdGVfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF93cml0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3htbF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBKU19JTklUX01PRFVMRSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAALsMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				]
			]
		},
		{
			"contents": "Wetterstation und Himmelsbeobachtung Projekte:\n\nhttps://thepihut.com/blogs/raspberry-pi-roundup/raspberry-pi-roundup-a-flight-tracker-a-cctv-camera-and-a-sensehat-driven-weather-station\nhttps://olegkutkov.me/2018/03/20/autonomous-allsky-camera-with-raspberry-pi-part-1-overview/\nhttps://olegkutkov.me/2018/03/22/autonomous-allsky-camera-with-raspberry-pi-part-2-powering-and-lightning-protection/\nhttps://olegkutkov.me/2018/06/07/autonomous-allsky-camera-with-raspberry-pi-part-3-shooting-night-sky-in-fits-using-qhy5-iim-camera/\nhttps://www.switchdoc.com/2016/12/tutorial-part-1-building-a-solar-powered-raspberry-pi-weather-station-groveweatherpi/\n\nEigener ADS-B flighttracker mit SDR (Software Defined Radio):\n\nhttps://hackaday.com/2011/09/22/tracking-commercial-aircraft-with-salvaged-electronics/\nhttps://hackaday.com/2014/08/25/piaware-automated-airliner-tracking-on-the-raspberry-pi/\nhttps://hackaday.com/2014/11/27/keep-tabs-on-passing-jets-with-pi-and-sdr/\nhttps://hackaday.com/2015/07/18/tracking-nearly-every-aircraft-with-a-raspberry-pi/\nhttps://hackaday.com/2017/09/05/19-rtl-sdr-dongles-reviewed/\nhttps://hackaday.com/2018/06/05/cat-compels-raspberry-pi-flight-tracker/\nhttps://hackaday.com/2019/07/31/rtl-sdr-seven-years-later/\nhttps://hackaday.com/2019/08/14/remote-ads-b-install-listens-in-on-all-the-aircraft-transmissions-with-rtl-sdr-trio-phones-home-on-cellular/\n\nFlighttracker-Systeme, evtl. haben sie schon Abdeckung für unsere Gebiete und wenn nicht dann könnten wir ihnen Daten liefern:\n\nhttps://opensky-network.org/ (unzensiert, also auch militär)\nhttps://opensky-network.org/aircraft-database/\nhttps://www.adsbexchange.com/\nhttp://openadsbapp.com/\nhttps://www.planewatcher.app/\n\n\nLösung für Standort Wylerringstr. 90, 13. Stock\n\n- kann keinen Strom von Waschküche auf Dachterrasse ziehen, brauche Lösung mit 2 wechselbaren Akkus\n- mein Wifi reicht nicht aufs Dach, brauche von den oberen Nachbarn oder einen 3G/4G Stick, allerdings würd das die Akkulaufzeit erheblich verkürzen\n- vorerst nur Aufnahme wenn Bewegung am Himmel dann Video und ADS-B Daten mit USB-Stick holen gehen\n- Noch keine Erfahrung ob Fischauge geeignet, zum Glück Preis nicht so hoch\n- Ausführung: Sperrholzbox mit Bitumenlack oder Dachpappe, seitliche Klappe für Akkuwechsel und USB-ports\n- Ohne 1090 MHz Filter kann auch Flugfunk (118-136 MHz) aufgezeichnet werden\n\n\nhttps://www.pi-shop.ch/raspberry-pi-camera-i-fisheye-lens-fischauge (CHF 29.90) oder\nhttps://www.pi-shop.ch/raspberry-pi-camera-h-fisheye-lens-supports-night-vision (CHF 37.90)\n\n(nightvision heisst im Prinzip einfach ohne IR-filter, da CMOS/CCD kameras auch IR-empfindlich sind.\nErwartungsgemäss könnten Trails selber sichtbar sein auf Infrarot, die Flugis aber wohl nicht.\nAber am Tag kann eine IR-filter-lose Kamera durch Streulicht geblendet werden durch zusätzlichen IR-Einfall)\n\nhttps://www.pi-shop.ch/flightaware-pro-stick-usb-sdr-ads-b-receiver (CHF 49.90)\nhttps://www.pi-shop.ch/3dbi-ads-b-1090mhz-sma-antenna-w-magnetic-base (CHF 15.90)\n\noptional: https://www.pi-shop.ch/sma-male-to-n-type-male-antenna-cable-5m (CHF 29.90)\n\nhttps://www.pi-shop.ch/sandisk-microsdxc-karte-ultra-uhs-i-a1-64-gb (CHF 15.90)\n\nhttps://www.pi-shop.ch/ansmann-powerbank-10ah-mit-usb (2x CHF 39.90)\n\n\nTotal: (nightvision) CHF 199.40 (normal) CHF 191.40\n\n\n\nhttps://www.maker-shop.ch/raspberry-pi-camera-i-fisheye-lens-fischauge\nhttps://www.maker-shop.ch/flightaware-pro-stick-usb-sdr-ads-b-receiver\nhttps://www.maker-shop.ch/3dbi-ads-b-1090mhz-sma-antenna-w-magnetic-base\nhttps://www.maker-shop.ch/cm3-8gb-single-board-computer-raspberry-pi-compute-module-3-bcm2837b0-soc-1\nhttps://www.maker-shop.ch/ersatzkabel-fuer-kamera-modul-ca-35cm\nhttps://www.maker-shop.ch/ansmann-powerbank-10ah-mit-usb\nhttps://www.maker-shop.ch/heatsink-kit-for-raspberry-pi-4b\n\n\nhttps://www.maker-shop.ch/as7341-spectral-color-sensor-visible-spectrum-sensor-multi-channels-high-precision-i2c-bus\n\nRaspberry Pi 4 (minicomputer mit Wifi) hab ich schon 2 solche:\nhttps://www.reichelt.com/ch/de/raspberry-pi-4-b-4x-1-5-ghz-2-gb-ram-wlan-bt-rasp-pi-4-b-2gb-p259919.html\nmit Kühlkörper, Netzgerät, Gehäuse, Speicherkarte, HDMI-Kabel ca. CHF 80\n\nalternative Kamera:\n \nhttps://www.adafruit.com/product/1722 (siehe erster Link, \"Wetterstation und Himmelsbeobachtung Projekte\")\n\n\n ",
			"file": "/home/roman/Dokumente/Himmelsbeobachtung.txt",
			"file_size": 4316,
			"file_write_time": 132932132543347648,
			"settings":
			{
				"buffer_size": 4298,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMkQAAAAAAAAyhAAAAAAAAAAAAAA",
					"EgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkQAAAAAAAAyRAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "lib/timers.js",
			"settings":
			{
				"buffer_size": 528,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs-misc.c",
			"settings":
			{
				"buffer_size": 63523,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"EAAAAAAAAAAAAAAAAAAAAAAAAAAj+AAAI2luY2x1ZGUgImluY2x1ZGUvZGVmaW5lcy5oIgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8cXVpY2tqcy1saWJjLmg+CiNpbmNsdWRlIDxxdWlja2pzLWNvbmZpZy5oPgojaW5jbHVkZSAicXVpY2tqcy1taXNjLmgiCiNpbmNsdWRlICJxdWlja2pzLWludGVybmFsLmgiCiNpbmNsdWRlICJxdWlja2pzLWxvY2F0aW9uLmgiCiNpbmNsdWRlICJxdWlja2pzLXRleHRjb2RlLmgiCiNpbmNsdWRlICJpbmNsdWRlL3V0aWxzLmgiCiNpbmNsdWRlICJpbmNsdWRlL3BhdGguaCIKI2luY2x1ZGUgImluY2x1ZGUvYmFzZTY0LmgiCiNpbmNsdWRlIDx0aW1lLmg+CiNpZm5kZWYgX1dJTjMyCiNpbmNsdWRlIDxzeXMvdXRzbmFtZS5oPgojZW5kaWYKI2luY2x1ZGUgPGVycm5vLmg+CiNpZmRlZiBIQVZFX0ZOTUFUQ0gKI2luY2x1ZGUgPGZubWF0Y2guaD4KI2VuZGlmCiNpZmRlZiBIQVZFX0dMT0IKI2luY2x1ZGUgPGdsb2IuaD4KI2lmbmRlZiBHTE9CX01BR0NIQVIKI2RlZmluZSBHTE9CX01BR0NIQVIgMjU2CiNlbmRpZgojaWZuZGVmIEdMT0JfQUxURElSRlVOQwojZGVmaW5lIEdMT0JfQUxURElSRlVOQyA1MTIKI2VuZGlmCiNpZm5kZWYgR0xPQl9CUkFDRQojZGVmaW5lIEdMT0JfQlJBQ0UgMTAyNAojZW5kaWYKI2lmbmRlZiBHTE9CX05PTUFHSUMKI2RlZmluZSBHTE9CX05PTUFHSUMgMjA0OAojZW5kaWYKI2lmbmRlZiBHTE9CX1RJTERFCiNkZWZpbmUgR0xPQl9USUxERSA0MDk2CiNlbmRpZgojaWZuZGVmIEdMT0JfT05MWURJUgojZGVmaW5lIEdMT0JfT05MWURJUiA4MTkyCiNlbmRpZgojaWZuZGVmIEdMT0JfVElMREVfQ0hFQ0sKI2RlZmluZSBHTE9CX1RJTERFX0NIRUNLIDE2Mzg0CiNlbmRpZgojZW5kaWYKI2lmZGVmIEhBVkVfV09SREVYUAojaW5jbHVkZSAid29yZGV4cC5oIgojZW5kaWYKI2lmZGVmIEhBVkVfSU5PVElGWQojaW5jbHVkZSA8c3lzL2lub3RpZnkuaD4KI2VuZGlmCiNpbmNsdWRlICJpbmNsdWRlL2J1ZmZlci11dGlscy5oIgojaWZkZWYgSEFWRV9URVJNSU9TX0gKI2luY2x1ZGUgPHRlcm1pb3MuaD4KI2luY2x1ZGUgPHN5cy9pb2N0bC5oPgojZW5kaWYKI2luY2x1ZGUgImluY2x1ZGUvZGVidWcuaCIKCi8qKgogKiBcYWRkdG9ncm91cCBxdWlja2pzLW1pc2MKICogQHsKICovCgojaWZuZGVmIEhBVkVfTUVNTUVNCnZvaWQqIG1lbW1lbShjb25zdCB2b2lkKiwgc2l6ZV90LCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKI2VuZGlmCgplbnVtIHsKICBGVU5DX0dFVEVYRUNVVEFCTEUgPSAwLAogIEZVTkNfR0VUQ1dELAogIEZVTkNfR0VUUk9PVCwKICBGVU5DX0dFVEZELAogIEZVTkNfR0VUQ09NTUFORExJTkUsCiAgRlVOQ19HRVRQUk9DTUFQUywKICBGVU5DX0dFVFBST0NNT1VOVFMsCiAgRlVOQ19HRVRQUk9DU1RBVCwKICBGVU5DX0dFVFBJRCwKICBGVU5DX0dFVFBQSUQsCiAgRlVOQ19HRVRTSUQsCiAgRlVOQ19HRVRVSUQsCiAgRlVOQ19HRVRHSUQsCiAgRlVOQ19HRVRFVUlELAogIEZVTkNfR0VURUdJRCwKICBGVU5DX1NFVFVJRCwKICBGVU5DX1NFVEdJRCwKICBGVU5DX1NFVEVVSUQsCiAgRlVOQ19TRVRFR0lECn07CgovLyBzdGF0aWMgdGhyZWFkX2xvY2FsIGludCBpbm90aWZ5X2ZkID0gLTE7Cgp0eXBlZGVmIHN0cnVjdCBwY2dfc3RhdGVfc2V0c2VxXzY0IHsKICB1aW50NjRfdCBzdGF0ZSwgaW5jOwp9IHBjZzMyX3JhbmRvbV90OwoKc3RhdGljIHBjZzMyX3JhbmRvbV90IHBjZzMyX2dsb2JhbCA9IHsweDg1M2M0OWU2NzQ4ZmVhOWJVTEwsIDB4ZGEzZTM5Y2I5NGI5NWJkYlVMTH07CgpzdGF0aWMgaW5saW5lIHVpbnQzMl90CnBjZzMyX3JhbmRvbV9yKHBjZzMyX3JhbmRvbV90KiBybmcpIHsKICB1aW50NjRfdCBvbGRzdGF0ZSA9IHJuZy0+c3RhdGU7CiAgcm5nLT5zdGF0ZSA9IG9sZHN0YXRlICogNjM2NDEzNjIyMzg0Njc5MzAwNVVMTCArIHJuZy0+aW5jOwogIHVpbnQzMl90IHhvcnNoaWZ0ZWQgPSAodWludDMyX3QpKCgob2xkc3RhdGUgPj4gMTh1KSBeIG9sZHN0YXRlKSA+PiAyN3UpOwogIHVpbnQzMl90IHJvdCA9IG9sZHN0YXRlID4+IDU5dTsKICByZXR1cm4gKHhvcnNoaWZ0ZWQgPj4gcm90KSB8ICh4b3JzaGlmdGVkIDw8ICgoLXJvdCkgJiAzMSkpOwp9CgpzdGF0aWMgdWludDMyX3QKcGNnMzJfcmFuZG9tKHZvaWQpIHsKICByZXR1cm4gcGNnMzJfcmFuZG9tX3IoJnBjZzMyX2dsb2JhbCk7Cn0KCnN0YXRpYyB2b2lkCnBjZzMyX2luaXRfc3RhdGUodWludDMyX3Qgc3RhdGUpIHsKICBwY2czMl9nbG9iYWwuc3RhdGUgPSB+KCgodWludDY0X3Qpc3RhdGUpIDw8IDMyKSB8IHN0YXRlOwp9CgpzdGF0aWMgdWludDMyX3QKcGNnMzJfcmFuZG9tX2JvdW5kZWRfZGl2aXNpb25sZXNzKHVpbnQzMl90IHJhbmdlKSB7CiAgdWludDY0X3QgcmFuZG9tMzJiaXQsIG11bHRpcmVzdWx0OwogIHVpbnQzMl90IGxlZnRvdmVyOwogIHVpbnQzMl90IHRocmVzaG9sZDsKICByYW5kb20zMmJpdCA9IHBjZzMyX3JhbmRvbSgpOwogIG11bHRpcmVzdWx0ID0gcmFuZG9tMzJiaXQgKiByYW5nZTsKICBsZWZ0b3ZlciA9ICh1aW50MzJfdCltdWx0aXJlc3VsdDsKICBpZihsZWZ0b3ZlciA8IHJhbmdlKSB7CiAgICB0aHJlc2hvbGQgPSAtcmFuZ2UgJSByYW5nZTsKICAgIHdoaWxlKGxlZnRvdmVyIDwgdGhyZXNob2xkKSB7CiAgICAgIHJhbmRvbTMyYml0ID0gcGNnMzJfcmFuZG9tKCk7CiAgICAgIG11bHRpcmVzdWx0ID0gcmFuZG9tMzJiaXQgKiByYW5nZTsKICAgICAgbGVmdG92ZXIgPSAodWludDMyX3QpbXVsdGlyZXN1bHQ7CiAgICB9CiAgfQogIHJldHVybiBtdWx0aXJlc3VsdCA+PiAzMjsgLy8gWzAsIHJhbmdlKQp9CgpzdGF0aWMgdm9pZApqc19wb2ludGVyX2ZyZWVfZnVuYyhKU1J1bnRpbWUqIHJ0LCB2b2lkKiBvcGFxdWUsIHZvaWQqIHB0cikgewogIGpzX2ZyZWVfcnQocnQsIHB0cik7Cn0KCnN0YXRpYyB2b2lkCmpzX3N0cmluZ19mcmVlX2Z1bmMoSlNSdW50aW1lKiBydCwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpIHsKICBKU1ZhbHVlIHZhbHVlID0ganNfY3N0cmluZ192YWx1ZShvcGFxdWUpOwoKICBKU19GcmVlVmFsdWVSVChydCwgdmFsdWUpOwp9CgpzdGF0aWMgdm9pZApqc19hcnJheWJ1ZmZlcl9mcmVlX2Z1bmMoSlNSdW50aW1lKiBydCwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpIHsKICBKU1ZhbHVlIHZhbHVlID0gSlNfTUtQVFIoSlNfVEFHX09CSkVDVCwgb3BhcXVlKTsKCiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbHVlKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19nZXRyZWxlYXNlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQ7CgogIHJldCA9IEpTX05ld09iamVjdChjdHgpOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgIm5hbWUiLCBKU19OZXdTdHJpbmcoY3R4LCAicXVpY2tqcyIpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgInNvdXJjZVVybCIsIEpTX05ld1N0cmluZyhjdHgsICJodHRwczovL2JlbGxhcmQub3JnL3F1aWNranMvcXVpY2tqcy0iIENPTkZJR19WRVJTSU9OICIudGFyLnh6IikpOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX3Rvc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgLy8gIEpTVmFsdWUgYXJyYXlidWZmZXJfY3RvciA9IGpzX2dsb2JhbF9nZXRfc3RyKGN0eCwgIkFycmF5QnVmZmVyIik7CgogIGlmKGpzX3ZhbHVlX2lzY2xhc3MoY3R4LCBhcmd2WzBdLCBKU19DTEFTU19BUlJBWV9CVUZGRVIpIHx8IGpzX2lzX2FycmF5YnVmZmVyKGN0eCwgYXJndlswXSkgLyogfHwgSlNfSXNJbnN0YW5jZU9mKGN0eCwgYXJndlswXSwgYXJyYXlidWZmZXJfY3RvcikqLykgewogICAgdWludDhfdCogZGF0YTsKICAgIHNpemVfdCBsZW47CgogICAgaWYoKGRhdGEgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZsZW4sIGFyZ3ZbMF0pKSkgewogICAgICBPZmZzZXRMZW5ndGggb2w7CgogICAgICBqc19vZmZzZXRfbGVuZ3RoKGN0eCwgbGVuLCBhcmdjIC0gMSwgYXJndiArIDEsICZvbCk7CgogICAgICByZXQgPSBKU19OZXdTdHJpbmdMZW4oY3R4LCAoY29uc3QgY2hhciopZGF0YSArIG9sLm9mZnNldCwgb2wubGVuZ3RoKTsKICAgIH0KICB9IGVsc2UgewogICAgcmV0ID0ganNfdmFsdWVfdG9zdHJpbmcoY3R4LCAiT2JqZWN0IiwgYXJnYyA+IDAgPyBhcmd2WzBdIDogdGhpc192YWwpOwogIH0KCiAgLy8gIEpTX0ZyZWVWYWx1ZShjdHgsIGFycmF5YnVmZmVyX2N0b3IpOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX3RvcG9pbnRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIHZvaWQqIHB0ciA9IDA7CiAgY2hhciBidWZbMTI4XTsKCiAgaWYoanNfaXNfYXJyYXlidWZmZXIoY3R4LCBhcmd2WzBdKSB8fCBqc19pc19zaGFyZWRhcnJheWJ1ZmZlcihjdHgsIGFyZ3ZbMF0pKSB7CiAgICBzaXplX3QgbGVuOwogICAgcHRyID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmd2WzBdKTsKICB9IGVsc2UgaWYoSlNfSXNTdHJpbmcoYXJndlswXSkpIHsKICAgIHB0ciA9IGpzX2NzdHJpbmdfcHRyKGFyZ3ZbMF0pOwogIH0gZWxzZSB7CiAgICBzd2l0Y2goSlNfVkFMVUVfR0VUX1RBRyhhcmd2WzBdKSkgewogICAgICAgIC8qICBjYXNlIEpTX1RBR19CSUdfREVDSU1BTDoKICAgICAgICAgIGNhc2UgSlNfVEFHX0JJR19GTE9BVDoKICAgICAgICAgIGNhc2UgSlNfVEFHX0JJR19JTlQ6CiAgICAgICAgICBjYXNlIEpTX1RBR19GVU5DVElPTl9CWVRFQ09ERToKICAgICAgICAgIGNhc2UgSlNfVEFHX0lOVDoqLwogICAgICBjYXNlIEpTX1RBR19NT0RVTEU6CiAgICAgICAgLyogICAgICBjYXNlIEpTX1RBR19PQkpFQ1Q6CiAgICAgICAgICAgICAgIGNhc2UgSlNfVEFHX1NZTUJPTDoqLwogICAgICAgIHsKICAgICAgICAgIHB0ciA9IEpTX1ZBTFVFX0dFVF9QVFIoYXJndlswXSk7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIGRlZmF1bHQ6IHsKICAgICAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAidG9Qb2ludGVyOiBpbnZhbGlkIHR5cGUgJXMiLCBqc192YWx1ZV90eXBlc3RyKGN0eCwgYXJndlswXSkpOwogICAgICB9CiAgICB9CiAgfQoKICBpZihwdHIpIHsKICAgIHNucHJpbnRmKGJ1Ziwgc2l6ZW9mKGJ1ZiksICIlcCIsIHB0cik7CiAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBidWYpOwogIH0gZWxzZSB7CiAgICByZXQgPSBKU19OVUxMOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY190b2FycmF5YnVmZmVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgTWVtb3J5QmxvY2sgYjsKICBPZmZzZXRMZW5ndGggbzsKICBKU0ZyZWVBcnJheUJ1ZmZlckRhdGFGdW5jKiBmOwogIHZvaWQqIG9wYXF1ZTsKCiAgLyogIGlmKEpTX0lzU3RyaW5nKGFyZ3ZbMF0pKSB7CiAgICAgIEpTVmFsdWVDb25zdCB2YWx1ZSA9IGFyZ3ZbMF07IC8vIEpTX0R1cFZhbHVlKGN0eCwgYXJndlswXSk7CiAgICAgIGIuYmFzZSA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZiLnNpemUsIHZhbHVlKTsKICAgICAgZiA9ICZqc19zdHJpbmdfZnJlZV9mdW5jOwogICAgICBvcGFxdWUgPSBiLmJhc2U7CiAgICAgIHJldCA9CiAgICAgICAgICBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGIuYmFzZSArIG8ub2Zmc2V0LCBNSU5fTlVNKGIuc2l6ZSwgby5sZW5ndGgpLAogICAganNfc3RyaW5nX2ZyZWVfZnVuYywgKHZvaWQqKWIuYmFzZSwgRkFMU0UpOyB9IGVsc2UqLwoKICBJbnB1dEJ1ZmZlciBpbnB1dCA9IGpzX2lucHV0X2NoYXJzKGN0eCwgYXJndlswXSk7CiAganNfb2Zmc2V0X2xlbmd0aChjdHgsIGlucHV0LnNpemUsIGFyZ2MgLSAxLCBhcmd2ICsgMSwgJm8pOwogIGIgPSBpbnB1dF9idWZmZXJfYmxvY2soJmlucHV0KTsKICAvLyAgICBiID0gYmxvY2tfcmFuZ2UoJmIsICZpbnB1dC5yYW5nZSk7CiAgYiA9IGJsb2NrX3JhbmdlKCZiLCAmbyk7CiAgcmV0ID0ganNfYXJyYXlidWZmZXJfZnJvbXZhbHVlKGN0eCwgYi5iYXNlLCBiLnNpemUsIGFyZ3ZbMF0pOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX3NsaWNlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3QgbGVuOwoKICBpZigoZGF0YSA9IEpTX0dldEFycmF5QnVmZmVyKGN0eCwgJmxlbiwgYXJndlswXSkpKSB7CiAgICBJbmRleFJhbmdlIGlyOwogICAgSlNBcnJheUJ1ZmZlciogYWI7CiAgICBpZighKGFiID0gSlNfR2V0T3BhcXVlKGFyZ3ZbMF0sIEpTX0NMQVNTX0FSUkFZX0JVRkZFUikpKQogICAgICBhYiA9IEpTX0dldE9wYXF1ZShhcmd2WzBdLCBKU19DTEFTU19TSEFSRURfQVJSQVlfQlVGRkVSKTsKCiAgICBqc19pbmRleF9yYW5nZShjdHgsIGxlbiwgYXJnYyAtIDEsIGFyZ3YgKyAxLCAmaXIpOwoKICAgIEpTVmFsdWUgdmFsdWUgPSBKU19EdXBWYWx1ZShjdHgsIGFyZ3ZbMF0pOwogICAgSlNPYmplY3QqIG9iaiA9IEpTX1ZBTFVFX0dFVF9PQkoodmFsdWUpOwogICAgcmV0dXJuIEpTX05ld0FycmF5QnVmZmVyKGN0eCwgZGF0YSArIGlyLnN0YXJ0LCBpci5lbmQgLSBpci5zdGFydCwganNfYXJyYXlidWZmZXJfZnJlZV9mdW5jLCAodm9pZCopb2JqLCBhYiAmJiBhYi0+c2hhcmVkID8gVFJVRSA6IEZBTFNFKTsKICB9CgogIHJldHVybiBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJhcmd1bWVudCAxIG11c3QgYmUgYW4gQXJyYXlCdWZmZXIiKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19kdXBhcnJheWJ1ZmZlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHVpbnQ4X3QqIGRhdGE7CiAgc2l6ZV90IGxlbjsKCiAgaWYoKGRhdGEgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZsZW4sIGFyZ3ZbMF0pKSkgewogICAgT2Zmc2V0TGVuZ3RoIG9sOwogICAgSlNBcnJheUJ1ZmZlciogYWI7CiAgICBpZighKGFiID0gSlNfR2V0T3BhcXVlKGFyZ3ZbMF0sIEpTX0NMQVNTX0FSUkFZX0JVRkZFUikpKQogICAgICBhYiA9IEpTX0dldE9wYXF1ZShhcmd2WzBdLCBKU19DTEFTU19TSEFSRURfQVJSQVlfQlVGRkVSKTsKCiAgICBqc19vZmZzZXRfbGVuZ3RoKGN0eCwgbGVuLCBhcmdjIC0gMSwgYXJndiArIDEsICZvbCk7CgogICAgSlNWYWx1ZSB2YWx1ZSA9IEpTX0R1cFZhbHVlKGN0eCwgYXJndlswXSk7CiAgICBKU09iamVjdCogb2JqID0gSlNfVkFMVUVfR0VUX09CSih2YWx1ZSk7CiAgICByZXR1cm4gSlNfTmV3QXJyYXlCdWZmZXIoY3R4LCBkYXRhICsgb2wub2Zmc2V0LCBvbC5sZW5ndGgsIGpzX2FycmF5YnVmZmVyX2ZyZWVfZnVuYywgKHZvaWQqKW9iaiwgYWIgJiYgYWItPnNoYXJlZCA/IFRSVUUgOiBGQUxTRSk7CiAgfQoKICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgMSBtdXN0IGJlIGFuIEFycmF5QnVmZmVyIik7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfcmVzaXplYXJyYXlidWZmZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBKU09iamVjdCogb2JqOwogIEpTQXJyYXlCdWZmZXIqIGFycmF5YnVmOwogIHVpbnQ2NF90IG5ld2xlbjsKCiAgaWYoIWpzX2lzX2FycmF5YnVmZmVyKGN0eCwgYXJndlswXSkpCiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgMSBtdXN0IGJlIGFuIEFycmF5QnVmZmVyIik7CgogIG9iaiA9IEpTX1ZBTFVFX0dFVF9PQkooYXJndlswXSk7CiAgYXJyYXlidWYgPSBvYmotPnUuYXJyYXlfYnVmZmVyOwogIEpTX1RvSW5kZXgoY3R4LCAmbmV3bGVuLCBhcmd2WzFdKTsKCiAgaWYoYXJyYXlidWYtPnNoYXJlZCkKICAgIHJldCA9IEpTX1Rocm93VHlwZUVycm9yKGN0eCwgIkFycmF5QnVmZmVyIG11c3Qgbm90IGJlIHNoYXJlZCIpOwogIGVsc2UgaWYoYXJyYXlidWYtPnNoYXJlZCkKICAgIHJldCA9IEpTX1Rocm93VHlwZUVycm9yKGN0eCwgIkFycmF5QnVmZmVyIG11c3QgaGF2ZSBvcGFxdWUgPT0gMCIpOwogIGVsc2UgewogICAgYXJyYXlidWYtPmRhdGEgPSBqc19yZWFsbG9jKGN0eCwgYXJyYXlidWYtPmRhdGEsIG5ld2xlbik7CiAgICBhcnJheWJ1Zi0+Ynl0ZV9sZW5ndGggPSBuZXdsZW47CgogICAgcmV0ID0gSlNfTUtQVFIoSlNfVEFHX09CSkVDVCwgb2JqKTsKICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfY29uY2F0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgaW50IGk7CiAgc2l6ZV90IHRvdGFsX2xlbiA9IDAsIHBvcyA9IDA7CiAgdWludDhfdCogYnVmOwogIElucHV0QnVmZmVyKiBidWZmZXJzID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihJbnB1dEJ1ZmZlcikgKiBhcmdjKTsKICBmb3IoaSA9IDA7IGkgPCBhcmdjOyBpKyspIHsKICAgIGJ1ZmZlcnNbaV0gPSBqc19pbnB1dF9idWZmZXIoY3R4LCBhcmd2W2ldKTsKICAgIGlmKCFidWZmZXJzW2ldLmRhdGEpIHsKICAgICAgcmV0ID0gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgJWQgaXMgbm90IEFycmF5QnVmZmVyIiwgaSArIDEpOwogICAgICBnb3RvIGZhaWw7CiAgICB9CiAgICB0b3RhbF9sZW4gKz0gYnVmZmVyc1tpXS5zaXplOwogIH0KICBidWYgPSBqc19tYWxsb2MoY3R4LCB0b3RhbF9sZW4pOwogIGZvcihpID0gMDsgaSA8IGFyZ2M7IGkrKykgewogICAgbWVtY3B5KCZidWZbcG9zXSwgYnVmZmVyc1tpXS5kYXRhLCBidWZmZXJzW2ldLnNpemUpOwogICAgcG9zICs9IGJ1ZmZlcnNbaV0uc2l6ZTsKICB9CiAgcmV0ID0gSlNfTmV3QXJyYXlCdWZmZXIoY3R4LCBidWYsIHRvdGFsX2xlbiwganNfcG9pbnRlcl9mcmVlX2Z1bmMsIDAsIEZBTFNFKTsKZmFpbDoKICBmb3IoaSA9IDA7IGkgPCBhcmdjOyBpKyspCiAgICBpZihidWZmZXJzW2ldLmRhdGEpCiAgICAgIGlucHV0X2J1ZmZlcl9mcmVlKCZidWZmZXJzW2ldLCBjdHgpOwogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2Nfc2VhcmNoYXJyYXlidWZmZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBNZW1vcnlCbG9jayBoYXlzdGFjaywgbmVlZGxlLCBtYXNrOwogIHNpemVfdCBuX3NpemUsIGhfZW5kOwoKICBpZighYmxvY2tfYXJyYXlidWZmZXIoJmhheXN0YWNrLCBhcmd2WzBdLCBjdHgpKQogICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgImFyZ3VtZW50IDEgKGhheXN0YWNrKSBtdXN0IGJlIGFuIEFycmF5QnVmZmVyIik7CiAgaWYoIWJsb2NrX2FycmF5YnVmZmVyKCZuZWVkbGUsIGFyZ3ZbMV0sIGN0eCkpCiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgMiAoaGF5c3RhY2spIG11c3QgYmUgYW4gQXJyYXlCdWZmZXIiKTsKICBpZihhcmdjIDwgMykgewogICAgdWludDhfdCogcHRyOwogICAgcHRyZGlmZl90IG9mczsKCiAgICBpZihuZWVkbGUuc2l6ZSA8PSBoYXlzdGFjay5zaXplICYmIChwdHIgPSBtZW1tZW0oaGF5c3RhY2suYmFzZSwgaGF5c3RhY2suc2l6ZSwgbmVlZGxlLmJhc2UsIG5lZWRsZS5zaXplKSkpIHsKICAgICAgb2ZzID0gcHRyIC0gaGF5c3RhY2suYmFzZTsKICAgICAgcmV0dXJuIEpTX05ld0ludDY0KGN0eCwgb2ZzKTsKICAgIH0KCiAgICByZXR1cm4gSlNfTlVMTDsKICB9CgogIGlmKCFibG9ja19hcnJheWJ1ZmZlcigmbWFzaywgYXJndlsyXSwgY3R4KSkKICAgIHJldHVybiBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJhcmd1bWVudCAzIChtYXNrKSBtdXN0IGJlIGFuIEFycmF5QnVmZmVyIik7CgogIG5fc2l6ZSA9IE1JTl9OVU0obmVlZGxlLnNpemUsIG1hc2suc2l6ZSk7CiAgaF9lbmQgPSBoYXlzdGFjay5zaXplIC0gbl9zaXplOwoKICAvLyBuYWl2ZSBzZWFyY2hpbmcgYWxnb3JpdGhtIChzbG93KQogIGZvcihzaXplX3QgaSA9IDA7IGkgPCBoX2VuZDsgaSsrKSB7CiAgICBpbnQgZm91bmQgPSAxOwogICAgZm9yKHNpemVfdCBqID0gMDsgaiA8IG5fc2l6ZTsgaisrKSB7CiAgICAgIGlmKChoYXlzdGFjay5iYXNlW2kgKyBqXSBeIG5lZWRsZS5iYXNlW2pdKSAmIG1hc2suYmFzZVtqXSkgewogICAgICAgIGZvdW5kID0gMDsKICAgICAgICBicmVhazsKICAgICAgfQogICAgfQogICAgaWYoZm91bmQpIHsKICAgICAgLypmb3Ioc2l6ZV90IGogPSAwOyBqIDwgbl9zaXplOyBqKyspIHsKICAgICAgICB1aW50OF90IHhvcnZhbCA9IGhheXN0YWNrLmJhc2VbaSArIGpdIF4gbmVlZGxlLmJhc2Vbal07CiAgICAgICAgcHJpbnRmKCJAKCV6dSArICV6dSk7ICIsIGksIGopOwogICAgICAgIHByaW50ZigiJTAyeCBYT1IgJTAyeCA9ICUwMng7ICIsIGhheXN0YWNrLmJhc2VbaSArIGpdLCBuZWVkbGUuYmFzZVtqXSwgeG9ydmFsKTsKICAgICAgICBwcmludGYoIiUwMnggQU5EICUwMnggPSAlMDJ4XG4iLCB4b3J2YWwsIG1hc2suYmFzZVtqXSwgeG9ydmFsICYgbWFzay5iYXNlW2pdKTsKICAgICAgfSovCgogICAgICByZXR1cm4gSlNfTmV3SW50NjQoY3R4LCAoaW50NjRfdClpKTsKICAgIH0KICB9CgogIHJldHVybiBKU19OVUxMOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX21lbWNweShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIE1lbW9yeUJsb2NrIGRzdCA9IHswLCAwfSwgc3JjID0gezAsIDB9OwogIE9mZnNldExlbmd0aCBzX29mZnMsIGRfb2ZmczsKCiAgaW50IGkgPSAwOwoKICBpZighYmxvY2tfYXJyYXlidWZmZXIoJmRzdCwgYXJndlswXSwgY3R4KSkKICAgIHJldHVybiBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJhcmd1bWVudCAxIChkc3QpIG11c3QgYmUgYW4gQXJyYXlCdWZmZXIiKTsKCiAgaSsrOwoKICBpICs9IGpzX29mZnNldF9sZW5ndGgoY3R4LCBkc3Quc2l6ZSwgYXJnYyAtIGksIGFyZ3YgKyBpLCAmc19vZmZzKTsKCiAgLyogZHN0LmJhc2UgKz0gc19vZmZzLm9mZnNldDsKICAgZHN0LnNpemUgLT0gc19vZmZzLm9mZnNldDsKICAgZHN0LnNpemUgPSBNSU5fTlVNKGRzdC5zaXplLCBzX29mZnMubGVuZ3RoKTsqLwoKICBpZihpID09IGFyZ2MgfHwgIWJsb2NrX2FycmF5YnVmZmVyKCZzcmMsIGFyZ3ZbaV0sIGN0eCkpCiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgJWQgKHNyYykgbXVzdCBiZSBhbiBBcnJheUJ1ZmZlciIsIGkgKyAxKTsKCiAgaSsrOwoKICBpICs9IGpzX29mZnNldF9sZW5ndGgoY3R4LCBkc3Quc2l6ZSwgYXJnYyAtIGksIGFyZ3YgKyBpLCAmZF9vZmZzKTsKCiAgLyogc3JjLmJhc2UgKz0gZF9vZmZzLm9mZnNldDsKICAgc3JjLnNpemUgLT0gZF9vZmZzLm9mZnNldDsKICAgc3JjLnNpemUgPSBNSU5fTlVNKHNyYy5zaXplLCBkX29mZnMubGVuZ3RoKTsqLwoKICB7CiAgICBzaXplX3QgbiA9IE1JTl9OVU0ob2Zmc2V0X3NpemUoJmRfb2ZmcywgYmxvY2tfbGVuZ3RoKCZkc3QpKSwgb2Zmc2V0X3NpemUoJnNfb2ZmcywgYmxvY2tfbGVuZ3RoKCZzcmMpKSk7CgogICAgaWYobikKICAgICAgbWVtY3B5KG9mZnNldF9kYXRhKCZkX29mZnMsIGJsb2NrX2RhdGEoJmRzdCkpLCBvZmZzZXRfZGF0YSgmc19vZmZzLCBibG9ja19kYXRhKCZzcmMpKSwgbik7CgogICAgcmV0dXJuIEpTX05ld0ludDY0KGN0eCwgbik7CiAgfQp9CgojaWZkZWYgSEFWRV9GTUVNT1BFTgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2ZtZW1vcGVuKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgdWludDhfdCogcHRyOwogIHNpemVfdCBsZW47CiAgaW50IGkgPSAwOwogIGNvbnN0IGNoYXIqIG1vZGU7CgogIGlmKCEocHRyID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmd2WzBdKSkpCiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgMSAoZHN0KSBtdXN0IGJlIGFuIEFycmF5QnVmZmVyIik7CgogIGkrKzsKCiAgaWYoaSArIDEgPCBhcmdjICYmIEpTX0lzTnVtYmVyKGFyZ3ZbaV0pKSB7CiAgICBpbnQ2NF90IG9mZnNldCA9IDA7CiAgICBKU19Ub0ludDY0KGN0eCwgJm9mZnNldCwgYXJndltpKytdKTsKICAgIG9mZnNldCA9IE1JTl9OVU0obGVuLCBvZmZzZXQpOwoKICAgIHB0ciArPSBvZmZzZXQ7CiAgICBsZW4gLT0gb2Zmc2V0OwogIH0KCiAgaWYoaSArIDEgPCBhcmdjICYmIEpTX0lzTnVtYmVyKGFyZ3ZbaV0pKSB7CiAgICBpbnQ2NF90IGxlbmd0aCA9IDA7CiAgICBpZighSlNfVG9JbnQ2NChjdHgsICZsZW5ndGgsIGFyZ3ZbaSsrXSkpCiAgICAgIGxlbiA9IE1JTl9OVU0obGVuLCBsZW5ndGgpOwogIH0KCiAgewogICAgSlNDbGFzc0lEIGNsYXNzX2lkID0ganNfY2xhc3NfZmluZChjdHgsICJGSUxFIik7CiAgICBKU1ZhbHVlIG9iaiwgcHJvdG8gPSBKU19HZXRDbGFzc1Byb3RvKGN0eCwgY2xhc3NfaWQpOwogICAgRklMRSogZnA7CiAgICBKU1NUREZpbGUqIGZpbGU7CiAgICBtb2RlID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSk7CgogICAgZmlsZSA9IGpzX21hbGxvYyhjdHgsIHNpemVvZihKU1NUREZpbGUpKTsKICAgICpmaWxlID0gKEpTU1RERmlsZSl7MCwgVFJVRSwgRkFMU0V9OwoKICAgIGZpbGUtPmYgPSBmbWVtb3BlbihwdHIsIGxlbiwgbW9kZSk7CgogICAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBjbGFzc19pZCk7CgogICAgSlNfU2V0T3BhcXVlKG9iaiwgZmlsZSk7CgogICAgcmV0dXJuIG9iajsKICB9Cn0KI2VuZGlmCgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2dldHBlcmZvcm1hbmNlY291bnRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHN0cnVjdCB0aW1lc3BlYyB0czsKCiAgY2xvY2tfZ2V0dGltZShDTE9DS19NT05PVE9OSUMsICZ0cyk7CgogIHJldHVybiBKU19OZXdGbG9hdDY0KGN0eCwgKGRvdWJsZSl0cy50dl9zZWMgKiAxMDAwICsgKChkb3VibGUpdHMudHZfbnNlYyAvIDFlMDYpKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19wcm9jbGluayhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgRHluQnVmIGRidWYgPSB7MH07CiAgY29uc3QgY2hhciogbGluazsKICBjaGFyIHBhdGhbMjU2XTsKICBzaXplX3QgbjsKICBzc2l6ZV90IHI7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBGVU5DX0dFVEVYRUNVVEFCTEU6IGxpbmsgPSAiZXhlIjsgYnJlYWs7CiAgICBjYXNlIEZVTkNfR0VUQ1dEOiBsaW5rID0gImN3ZCI7IGJyZWFrOwogICAgY2FzZSBGVU5DX0dFVFJPT1Q6IGxpbmsgPSAicm9vdCI7IGJyZWFrOwogICAgY2FzZSBGVU5DX0dFVEZEOiBsaW5rID0gImZkLyI7IGJyZWFrOwogIH0KCiAgbiA9IHNucHJpbnRmKHBhdGgsIHNpemVvZihwYXRoKSwgIi9wcm9jL3NlbGYvJXMiLCBsaW5rKTsKCiAgaWYobWFnaWMgPT0gRlVOQ19HRVRGRCkgewogICAgaW50MzJfdCBmZDsKICAgIGlmKGFyZ2MgPCAxIHx8ICFKU19Jc051bWJlcihhcmd2WzBdKSkKICAgICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgImFyZ3VtZW50IDEgbXVzdCBiZSBOdW1iZXIiKTsKCiAgICBKU19Ub0ludDMyKGN0eCwgJmZkLCBhcmd2WzBdKTsKICAgIHNucHJpbnRmKCZwYXRoW25dLCBzaXplb2YocGF0aCkgLSBuLCAiJWQiLCBmZCk7CiAgfQoKICBqc19kYnVmX2luaXQoY3R4LCAmZGJ1Zik7CgogIGlmKChyID0gcGF0aF9yZWFkbGluayhwYXRoLCAmZGJ1ZikpID4gMCkgewogICAgcmV0ID0gZGJ1Zl90b3N0cmluZ19mcmVlKCZkYnVmLCBjdHgpOwogIH0gZWxzZSBpZihyIDwgMCkgewogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19wcm9jcmVhZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgRHluQnVmIGRidWYgPSB7MH07CiAgc3NpemVfdCBpLCBqID0gMCwgc2l6ZSwgbjsKICBjb25zdCBjaGFyKiBmaWxlOwogIGNoYXIgc2VwID0gJ1xuJzsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIEZVTkNfR0VUQ09NTUFORExJTkU6CiAgICAgIGZpbGUgPSAiL3Byb2Mvc2VsZi9jbWRsaW5lIjsKICAgICAgc2VwID0gJ1wwJzsKICAgICAgYnJlYWs7CiAgICBjYXNlIEZVTkNfR0VUUFJPQ01BUFM6CiAgICAgIGZpbGUgPSAiL3Byb2Mvc2VsZi9tYXBzIjsKICAgICAgc2VwID0gJ1xuJzsKICAgICAgYnJlYWs7CiAgICBjYXNlIEZVTkNfR0VUUFJPQ01PVU5UUzoKICAgICAgZmlsZSA9ICIvcHJvYy9zZWxmL21vdW50cyI7CiAgICAgIHNlcCA9ICdcbic7CiAgICAgIGJyZWFrOwogICAgY2FzZSBGVU5DX0dFVFBST0NTVEFUOgogICAgICBmaWxlID0gIi9wcm9jL3NlbGYvc3RhdCI7CiAgICAgIHNlcCA9ICcgJzsKICAgICAgYnJlYWs7CiAgfQoKICBqc19kYnVmX2luaXQoY3R4LCAmZGJ1Zik7CgogIGlmKChzaXplID0gZGJ1Zl9sb2FkKCZkYnVmLCBmaWxlKSkgPiAwKSB7CgogICAgd2hpbGUoc2l6ZSA+IDAgJiYgZGJ1Zi5idWZbc2l6ZSAtIDFdID09ICdcbicpIHNpemUtLTsKCiAgICByZXQgPSBKU19OZXdBcnJheShjdHgpOwogICAgZm9yKGkgPSAwOyBpIDwgc2l6ZTsgaSArPSBuICsgMSkgewogICAgICBzaXplX3QgbGVuOwogICAgICBsZW4gPSBuID0gYnl0ZV9jaHIoJmRidWYuYnVmW2ldLCBzaXplIC0gaSwgc2VwKTsKICAgICAgd2hpbGUobGVuID4gMCAmJiBpc193aGl0ZXNwYWNlX2NoYXIoZGJ1Zi5idWZbaSArIGxlbiAtIDFdKSkgbGVuLS07CiAgICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCBqKyssIEpTX05ld1N0cmluZ0xlbihjdHgsIChjb25zdCBjaGFyKikmZGJ1Zi5idWZbaV0sIGxlbikpOwogICAgfQogIH0KCiAgZGJ1Zl9mcmVlKCZkYnVmKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19nZXRwcm90b3R5cGVjaGFpbihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcHJvdG8sIHByZXYgPSBKU19VTkRFRklORUQsIHJldDsKICBpbnQ2NF90IGkgPSAtMSwgaiA9IDAsIGxpbWl0ID0gLTEsIHN0YXJ0ID0gMCwgZW5kOwoKICBpZihhcmdjIDwgMSB8fCAhSlNfSXNPYmplY3QoYXJndlswXSkpCiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgMSBvYmplY3QgZXhjZXB0ZWQiKTsKCiAgaWYoYXJnYyA+PSAyICYmICFqc19pc19udWxsX29yX3VuZGVmaW5lZChhcmd2WzFdKSkKICAgIEpTX1RvSW50NjQoY3R4LCAmbGltaXQsIGFyZ3ZbMV0pOwoKICBpZihhcmdjID49IDMgJiYgIWpzX2lzX251bGxfb3JfdW5kZWZpbmVkKGFyZ3ZbMl0pKQogICAgSlNfVG9JbnQ2NChjdHgsICZzdGFydCwgYXJndlsyXSk7CgogIHJldCA9IEpTX05ld0FycmF5KGN0eCk7CiAgZW5kID0gbGltaXQgPj0gMCA/IHN0YXJ0ICsgbGltaXQgOiAtMTsKCiAgZm9yKHByb3RvID0gSlNfRHVwVmFsdWUoY3R4LCBhcmd2WzBdKTsgIUpTX0lzRXhjZXB0aW9uKHByb3RvKSAmJiAhSlNfSXNOdWxsKHByb3RvKSAmJiBKU19Jc09iamVjdChwcm90byk7IHByb3RvID0gSlNfR2V0UHJvdG90eXBlKGN0eCwgcHJvdG8pKSB7CiAgICBCT09MIGNpcmN1bGFyID0gKEpTX1ZBTFVFX0dFVF9PQkoocHJvdG8pID09IEpTX1ZBTFVFX0dFVF9PQkoocHJldikpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgcHJldik7CiAgICBpZihjaXJjdWxhcikKICAgICAgYnJlYWs7CiAgICBpZihpID49IHN0YXJ0ICYmIChlbmQgPT0gLTEgfHwgaSA8IGVuZCkpCiAgICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCBqKyssIHByb3RvKTsKICAgICsraTsKICAgIHByZXYgPSBwcm90bzsKICB9CgogIEpTX0ZyZWVWYWx1ZShjdHgsIHByb3RvKTsKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2hydGltZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHN0cnVjdCB0aW1lc3BlYyB0czsKICBKU1ZhbHVlIHJldDsKCiAgY2xvY2tfZ2V0dGltZShDTE9DS19NT05PVE9OSUMsICZ0cyk7CgogIGlmKGFyZ2MgPj0gMSAmJiBKU19Jc0FycmF5KGN0eCwgYXJndlswXSkpIHsKICAgIGludDY0X3Qgc2VjLCBuc2VjOwogICAgSlNWYWx1ZSBwc2VjLCBwbnNlYzsKCiAgICBwc2VjID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmd2WzBdLCAwKTsKICAgIHBuc2VjID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmd2WzBdLCAxKTsKCiAgICBKU19Ub0ludDY0KGN0eCwgJnNlYywgcHNlYyk7CiAgICBKU19Ub0ludDY0KGN0eCwgJm5zZWMsIHBuc2VjKTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHBzZWMpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgcG5zZWMpOwoKICAgIGlmKG5zZWMgPiB0cy50dl9uc2VjKSB7CiAgICAgIHRzLnR2X3NlYyAtPSAxOwogICAgICB0cy50dl9uc2VjICs9IDEwMDAwMDAwMDA7CiAgICB9CgogICAgdHMudHZfc2VjIC09IHNlYzsKICAgIHRzLnR2X25zZWMgLT0gbnNlYzsKICB9CgogIHJldCA9IEpTX05ld0FycmF5KGN0eCk7CiAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIDAsIEpTX05ld0ludDY0KGN0eCwgdHMudHZfc2VjKSk7CiAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIDEsIEpTX05ld0ludDY0KGN0eCwgdHMudHZfbnNlYykpOwoKICByZXR1cm4gcmV0Owp9CgojaWZuZGVmIF9fd2FzaV9fCi8qc3RhdGljIEpTVmFsdWUKanNfbWlzY19yZWFscGF0aChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIGNoYXIgcmVzb2x2ZWRbUEFUSF9NQVhdOwogIGNvbnN0IGNoYXIqIHBhdGggPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzBdKTsKICBjaGFyKiByZXN1bHQ7CgojaWZuZGVmIF9fd2FzaV9fCiAgaWYoKHJlc3VsdCA9IHJlYWxwYXRoKHBhdGgsIHJlc29sdmVkKSkpCiNlbmRpZgogICAgcmV0dXJuIEpTX05ld1N0cmluZyhjdHgsIHJlc3VsdCk7CiAgcmV0dXJuIEpTX05VTEw7Cn0qLwojaWZkZWYgVVNFX1RFTVBOQU0Kc3RhdGljIEpTVmFsdWUKanNfbWlzY190ZW1wbmFtKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgY29uc3QgY2hhciAqZGlyID0gMCwgKnBmeCA9IDA7CiAgY2hhciogbmFtOwogIEpTVmFsdWUgcmV0ID0gSlNfTlVMTDsKCiAgaWYoYXJnYyA+PSAxICYmIEpTX0lzU3RyaW5nKGFyZ3ZbMF0pKQogICAgZGlyID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSk7CiAgaWYoYXJnYyA+PSAyICYmIEpTX0lzU3RyaW5nKGFyZ3ZbMV0pKQogICAgcGZ4ID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlsxXSk7CgogIGlmKChuYW0gPSB0ZW1wbmFtKGRpciwgcGZ4KSkpIHsKICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIG5hbSk7CiAgICBmcmVlKG5hbSk7CiAgfQogIHJldHVybiByZXQ7Cn0KI2VuZGlmCgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX21rc3RlbXAoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBjb25zdCBjaGFyKiB0bXAgPSAwOwogIGNoYXIqIHRlbXBsYXRlOwogIGludCBmZDsKCiAgaWYoYXJnYyA+PSAxICYmIEpTX0lzU3RyaW5nKGFyZ3ZbMF0pKQogICAgdG1wID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSk7CgogIHRlbXBsYXRlID0ganNfc3RyZHVwKGN0eCwgdG1wID8gdG1wIDogIi90bXAvZmlsZVhYWFhYWCIpOwoKICBpZih0bXApCiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHRtcCk7CgogIGlmKCF0ZW1wbGF0ZSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIGZkID0gbWtzdGVtcCh0ZW1wbGF0ZSk7CgogIGpzX2ZyZWUoY3R4LCB0ZW1wbGF0ZSk7CgogIGlmKGZkIDwgMCkgewogICAgZmQgPSAtZXJybm87CiAgICBlcnJubyA9IDA7CiAgfQoKICByZXR1cm4gSlNfTmV3SW50MzIoY3R4LCBmZCk7Cn0KI2VuZGlmCgojaWZkZWYgSEFWRV9GTk1BVENICnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfZm5tYXRjaChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHNpemVfdCBwbGVuLCBzbGVuOwogIGludDMyX3QgZmxhZ3MgPSAwLCByZXQ7CgogIGNvbnN0IGNoYXIqIHBhdHRlcm4gPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmcGxlbiwgYXJndlswXSk7CiAgY29uc3QgY2hhciogc3RyaW5nID0gSlNfVG9DU3RyaW5nTGVuKGN0eCwgJnNsZW4sIGFyZ3ZbMV0pOwoKICBpZihhcmdjID49IDMpCiAgICBKU19Ub0ludDMyKGN0eCwgJmZsYWdzLCBhcmd2WzJdKTsKCiAgcmV0ID0gcGF0aF9mbm1hdGNoKHBhdHRlcm4sIHBsZW4sIHN0cmluZywgc2xlbiwgZmxhZ3MpOwogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcGF0dGVybik7CiAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHJpbmcpOwogIHJldHVybiBKU19OZXdCb29sKGN0eCwgIXJldCk7Cn0KI2VuZGlmCgojaWZkZWYgSEFWRV9HTE9CCnN0YXRpYyBKU0NvbnRleHQqIGpzX21pc2NfZ2xvYl9lcnJmdW5jX2N0eDsKc3RhdGljIEpTVmFsdWVDb25zdCBqc19taXNjX2dsb2JfZXJyZnVuY19mbjsKCnN0YXRpYyBpbnQKanNfbWlzY19nbG9iX2VycmZ1bmMoY29uc3QgY2hhciogZXBhdGgsIGludCBlZXJybm8pIHsKICBKU0NvbnRleHQqIGN0eDsKCiAgaWYoKGN0eCA9IGpzX21pc2NfZ2xvYl9lcnJmdW5jX2N0eCkpIHsKICAgIEpTVmFsdWVDb25zdCBhcmd2WzJdID0ge0pTX05ld1N0cmluZyhjdHgsIGVwYXRoKSwgSlNfTmV3SW50MzIoY3R4LCBlZXJybm8pfTsKCiAgICBKU19GcmVlVmFsdWUoY3R4LCBKU19DYWxsKGN0eCwganNfbWlzY19nbG9iX2VycmZ1bmNfZm4sIEpTX05VTEwsIDIsIGFyZ3YpKTsKCiAgICBKU19GcmVlVmFsdWUoY3R4LCBhcmd2WzBdKTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGFyZ3ZbMV0pOwogIH0KICByZXR1cm4gMDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19nbG9iKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgc2l6ZV90IHN0YXJ0ID0gMCwgaTsKICBpbnQzMl90IGZsYWdzID0gMDsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBnbG9iX3QgZyA9IHswLCAwLCAwfTsKICBpbnQgcmVzdWx0OwogIEJPT0wgYXJyYXlfYXJnID0gRkFMU0U7CiAgY29uc3QgY2hhciogcGF0dGVybiA9IEpTX1RvQ1N0cmluZyhjdHgsIGFyZ3ZbMF0pOwoKICBpZihhcmdjID49IDIpCiAgICBKU19Ub0ludDMyKGN0eCwgJmZsYWdzLCBhcmd2WzFdKTsKCiAgaWYoKGFycmF5X2FyZyA9IChhcmdjID49IDQgJiYgSlNfSXNBcnJheShjdHgsIGFyZ3ZbM10pKSkpIHsKICAgIHJldCA9IEpTX0R1cFZhbHVlKGN0eCwgYXJndlszXSk7CgogICAgaWYoZmxhZ3MgJiBHTE9CX0FQUEVORCkKICAgICAgc3RhcnQgPSBqc19hcnJheV9sZW5ndGgoY3R4LCByZXQpOwogIH0gZWxzZSB7CiAgICByZXQgPSBKU19OZXdBcnJheShjdHgpOwogIH0KCiAganNfbWlzY19nbG9iX2VycmZ1bmNfY3R4ID0gY3R4OwogIGpzX21pc2NfZ2xvYl9lcnJmdW5jX2ZuID0gYXJnYyA+PSAzID8gYXJndlsyXSA6IEpTX1VOREVGSU5FRDsKCiAgaWYoKHJlc3VsdCA9IGdsb2IocGF0dGVybiwgZmxhZ3MgJiAofihHTE9CX0FQUEVORCB8IEdMT0JfRE9PRkZTKSksIGpzX21pc2NfZ2xvYl9lcnJmdW5jLCAmZykpID09IDApIHsKICAgIGZvcihpID0gMDsgaSA8IGcuZ2xfcGF0aGM7IGkrKykgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIGkgKyBzdGFydCwgSlNfTmV3U3RyaW5nKGN0eCwgZy5nbF9wYXRodltpXSkpOwoKICAgIGdsb2JmcmVlKCZnKTsKICB9CgogIGlmKGFycmF5X2FyZyB8fCByZXN1bHQpIHsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHJldCk7CiAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHJlc3VsdCk7CiAgfQoKICBKU19GcmVlVmFsdWUoY3R4LCBqc19taXNjX2dsb2JfZXJyZnVuY19mbik7CiAganNfbWlzY19nbG9iX2VycmZ1bmNfY3R4ID0gMDsKICBKU19GcmVlQ1N0cmluZyhjdHgsIHBhdHRlcm4pOwogIHJldHVybiByZXQ7Cn0KI2VuZGlmCgojaWZkZWYgSEFWRV9XT1JERVhQCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2Nfd29yZGV4cChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHNpemVfdCBzdGFydCA9IDAsIGk7CiAgaW50MzJfdCBmbGFncyA9IDA7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgd29yZGV4cF90IHdlID0gezAsIDAsIDB9OwogIGludCByZXN1bHQ7CiAgQk9PTCBhcnJheV9hcmcgPSBGQUxTRTsKICBjb25zdCBjaGFyKiBzID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSk7CgogIGlmKGFyZ2MgPj0gMykKICAgIEpTX1RvSW50MzIoY3R4LCAmZmxhZ3MsIGFyZ3ZbMl0pOwoKICBpZigoYXJyYXlfYXJnID0gKGFyZ2MgPj0gMiAmJiBKU19Jc0FycmF5KGN0eCwgYXJndlsxXSkpKSkgewogICAgcmV0ID0gSlNfRHVwVmFsdWUoY3R4LCBhcmd2WzFdKTsKCiAgICBpZihmbGFncyAmIFdSREVfQVBQRU5EKQogICAgICBzdGFydCA9IGpzX2FycmF5X2xlbmd0aChjdHgsIHJldCk7CiAgfSBlbHNlIHsKICAgIHJldCA9IEpTX05ld0FycmF5KGN0eCk7CiAgfQoKICBpZigocmVzdWx0ID0gd29yZGV4cChzLCAmd2UsIGZsYWdzICYgKH4oV1JERV9BUFBFTkQgfCBXUkRFX0RPT0ZGUyB8IFdSREVfUkVVU0UpKSkpID09IDApIHsKICAgIGZvcihpID0gMDsgaSA8IHdlLndlX3dvcmRjOyBpKyspIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCBpICsgc3RhcnQsIEpTX05ld1N0cmluZyhjdHgsIHdlLndlX3dvcmR2W2ldKSk7CgogICAgd29yZGZyZWUoJndlKTsKICB9CgogIGlmKGFycmF5X2FyZyB8fCByZXN1bHQpIHsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHJldCk7CiAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHJlc3VsdCk7CiAgfQoKICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIHJldHVybiByZXQ7Cn0KI2VuZGlmCgojaWZuZGVmIF9XSU4zMgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX3VuYW1lKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgc3RydWN0IHV0c25hbWUgdW47CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKHVuYW1lKCZ1bikgIT0gLTEpIHsKICAgIHJldCA9IEpTX05ld09iamVjdChjdHgpOwoKICAgIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAic3lzbmFtZSIsIEpTX05ld1N0cmluZyhjdHgsIHVuLnN5c25hbWUpKTsKICAgIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAibm9kZW5hbWUiLCBKU19OZXdTdHJpbmcoY3R4LCB1bi5ub2RlbmFtZSkpOwogICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJyZWxlYXNlIiwgSlNfTmV3U3RyaW5nKGN0eCwgdW4ucmVsZWFzZSkpOwogICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJ2ZXJzaW9uIiwgSlNfTmV3U3RyaW5nKGN0eCwgdW4udmVyc2lvbikpOwogICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJtYWNoaW5lIiwgSlNfTmV3U3RyaW5nKGN0eCwgdW4ubWFjaGluZSkpOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19pb2N0bChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGludDMyX3QgZmQgPSAtMSwgYXJnc1syXSA9IHstMSwgLTF9OwogIGludDY0X3QgcmVxdWVzdCA9IC0xTEw7CgogIEpTX1RvSW50MzIoY3R4LCAmZmQsIGFyZ3ZbMF0pOwogIEpTX1RvSW50NjQoY3R4LCAmcmVxdWVzdCwgYXJndlsxXSk7CgogIGlmKGFyZ2MgPj0gMykKICAgIEpTX1RvSW50MzIoY3R4LCAmYXJnc1swXSwgYXJndlsyXSk7CiAgaWYoYXJnYyA+PSA0KQogICAgSlNfVG9JbnQzMihjdHgsICZhcmdzWzFdLCBhcmd2WzNdKTsKCiAgcmV0dXJuIEpTX05ld0ludDMyKGN0eCwgaW9jdGwoZmQsIHJlcXVlc3QsIGFyZ3NbMF0sIGFyZ3NbMV0pKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19zY3JlZW5zaXplKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgaW50IHNpemVbMl0gPSB7LTEsIC0xfTsKCiAgaWYoYXJnYyA+PSAxICYmIEpTX0lzT2JqZWN0KGFyZ3ZbMF0pKQogICAgcmV0ID0gSlNfRHVwVmFsdWUoY3R4LCBhcmd2WzBdKTsKCiAgaWYoIXNjcmVlbl9zaXplKHNpemUpKSB7CiAgICBKU1ZhbHVlIHdpZHRoLCBoZWlnaHQ7CiAgICBpZihKU19Jc1VuZGVmaW5lZChyZXQpKQogICAgICByZXQgPSBhcmdjID49IDEgJiYgSlNfSXNBcnJheShjdHgsIGFyZ3ZbMF0pID8gSlNfRHVwVmFsdWUoY3R4LCBhcmd2WzBdKSA6IEpTX05ld0FycmF5KGN0eCk7CiAgICB3aWR0aCA9IEpTX05ld0ludDMyKGN0eCwgc2l6ZVswXSk7CiAgICBoZWlnaHQgPSBKU19OZXdJbnQzMihjdHgsIHNpemVbMV0pOwogICAgaWYoSlNfSXNBcnJheShjdHgsIHJldCkpIHsKICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIDAsIHdpZHRoKTsKICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIDEsIGhlaWdodCk7CiAgICB9IGVsc2UgaWYoSlNfSXNPYmplY3QocmV0KSkgewogICAgICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgIndpZHRoIiwgd2lkdGgpOwogICAgICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgImhlaWdodCIsIGhlaWdodCk7CiAgICB9IGVsc2UgewogICAgICBKU19GcmVlVmFsdWUoY3R4LCB3aWR0aCk7CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGhlaWdodCk7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CiNlbmRpZgoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19idG9hKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQ7CiAgSW5wdXRCdWZmZXIgaW5wdXQgPSBqc19pbnB1dF9jaGFycyhjdHgsIGFyZ3ZbMF0pOwogIHNpemVfdCBlbmNsZW4gPSBiNjRfZ2V0X2VuY29kZWRfYnVmZmVyX3NpemUoaW5wdXQuc2l6ZSk7CiAgdWludDhfdCogZW5jYnVmID0ganNfbWFsbG9jKGN0eCwgZW5jbGVuKTsKCiAgYjY0X2VuY29kZShpbnB1dC5kYXRhLCBpbnB1dC5zaXplLCBlbmNidWYpOwoKICByZXQgPSBKU19OZXdTdHJpbmdMZW4oY3R4LCAoY29uc3QgY2hhciopZW5jYnVmLCBlbmNsZW4pOwogIGpzX2ZyZWUoY3R4LCBlbmNidWYpOwogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfYXRvYihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0OwogIElucHV0QnVmZmVyIGlucHV0ID0ganNfaW5wdXRfY2hhcnMoY3R4LCBhcmd2WzBdKTsKICBzaXplX3QgZGVjbGVuID0gYjY0X2dldF9kZWNvZGVkX2J1ZmZlcl9zaXplKGlucHV0LnNpemUpOwogIHVpbnQ4X3QqIGRlY2J1ZiA9IGpzX21hbGxvYyhjdHgsIGRlY2xlbik7CgogIGI2NF9kZWNvZGUoaW5wdXQuZGF0YSwgaW5wdXQuc2l6ZSwgZGVjYnVmKTsKCiAgcmV0ID0gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KGN0eCwgKGNvbnN0IHVpbnQ4X3QqKWRlY2J1ZiwgZGVjbGVuKTsKICBqc19mcmVlKGN0eCwgZGVjYnVmKTsKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2NvbXBpbGUoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGNvbnN0IGNoYXIqIGZpbGUgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzBdKTsKICBCT09MIGlzX21vZCA9IEZBTFNFOwogIHVpbnQ4X3QqIGJ1ZjsKICBzaXplX3QgbGVuOwogIGludDMyX3QgZmxhZ3MgPSBKU19FVkFMX1RZUEVfR0xPQkFMOwoKICBpZihhcmdjID49IDIgJiYgSlNfSXNOdW1iZXIoYXJndlsxXSkpIHsKICAgIEpTX1RvSW50MzIoY3R4LCAmZmxhZ3MsIGFyZ3ZbMV0pOwogIH0gZWxzZSBpZihhcmdjID49IDIgJiYgSlNfSXNCb29sKGFyZ3ZbMV0pKSB7CiAgICBpZihKU19Ub0Jvb2woY3R4LCBhcmd2WzFdKSkKICAgICAgZmxhZ3MgfD0gSlNfRVZBTF9UWVBFX01PRFVMRTsKICB9CiAgaXNfbW9kID0gISEoZmxhZ3MgJiBKU19FVkFMX1RZUEVfTU9EVUxFKTsKICBpZihzdHJfZW5kcyhmaWxlLCAiLmpzbSIpKQogICAgaXNfbW9kID0gVFJVRTsKICBpZigoYnVmID0ganNfbG9hZF9maWxlKGN0eCwgJmxlbiwgZmlsZSkpKSB7CiAgICBpZighaXNfbW9kICYmIEpTX0RldGVjdE1vZHVsZSgoY29uc3QgY2hhciopYnVmLCBsZW4pKQogICAgICBpc19tb2QgPSBUUlVFOwogICAgZmxhZ3MgfD0gKGlzX21vZCA/IEpTX0VWQUxfVFlQRV9NT0RVTEUgOiBKU19FVkFMX1RZUEVfR0xPQkFMKTsKICAgIHJldCA9IEpTX0V2YWwoY3R4LCAoY29uc3QgY2hhciopYnVmLCBsZW4sIGZpbGUsIGZsYWdzIHwgKGlzX21vZCA/IEpTX0VWQUxfRkxBR19DT01QSUxFX09OTFkgOiAwKSk7CgogICAgaWYoaXNfbW9kICYmICEoZmxhZ3MgJiBKU19FVkFMX0ZMQUdfQ09NUElMRV9PTkxZKSkgewogICAgICByZXQgPSBKU19FdmFsRnVuY3Rpb24oY3R4LCByZXQpOwogICAgfQogIH0gZWxzZSB7CiAgICByZXQgPSBKU19UaHJvd1JlZmVyZW5jZUVycm9yKGN0eCwgImNvdWxkIG5vdCBsb2FkICclcyc6ICVzIiwgZmlsZSwgc3RyZXJyb3IoZXJybm8pKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3RydWN0IEltbXV0YWJsZUNsb3N1cmUgewogIEpTUnVudGltZSogcnQ7CiAgSlNWYWx1ZSBjdG9yLCBwcm90bzsKfTsKCnN0YXRpYyB2b2lkCmpzX21pc2NfaW1tdXRhYmxlX2ZyZWUodm9pZCogcHRyKSB7CiAgc3RydWN0IEltbXV0YWJsZUNsb3N1cmUqIGNsb3N1cmUgPSBwdHI7CiAgSlNfRnJlZVZhbHVlUlQoY2xvc3VyZS0+cnQsIGNsb3N1cmUtPmN0b3IpOwogIEpTX0ZyZWVWYWx1ZVJUKGNsb3N1cmUtPnJ0LCBjbG9zdXJlLT5wcm90byk7CiAgZnJlZShwdHIpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2ltbXV0YWJsZV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMsIHZvaWQqIHB0cikgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZihwdHIpIHsKICAgIHN0cnVjdCBJbW11dGFibGVDbG9zdXJlKiBjbG9zdXJlID0gcHRyOwoKICAgIHJldCA9IEpTX0NhbGxDb25zdHJ1Y3RvcjIoY3R4LCBjbG9zdXJlLT5jdG9yLCBuZXdfdGFyZ2V0LCBhcmdjLCBhcmd2KTsKICB9IGVsc2UgewogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2ltbXV0YWJsZV9jbGFzcyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IEltbXV0YWJsZUNsb3N1cmUqIGNsb3N1cmU7CiAgSlNWYWx1ZSByZXQsIHByb3RvOwogIEpTQ2xhc3NJRCBpZDsKICBKU0NGdW5jdGlvbkxpc3RFbnRyeSBlbnRyeTsKICBjaGFyICpuYW1lLCAqbmV3X25hbWU7CgogIGlmKGFyZ2MgPT0gMCB8fCAhSlNfSXNDb25zdHJ1Y3RvcihjdHgsIGFyZ3ZbMF0pKQogICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgImFyZ3VtZW50IDEgbXVzdCBiZSBhIGNvbnN0cnVjdG9yIik7CgogIGlmKCEoY2xvc3VyZSA9IG1hbGxvYyhzaXplb2Yoc3RydWN0IEltbXV0YWJsZUNsb3N1cmUpKSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICBjbG9zdXJlLT5ydCA9IEpTX0dldFJ1bnRpbWUoY3R4KTsKICBjbG9zdXJlLT5jdG9yID0gSlNfRHVwVmFsdWUoY3R4LCBhcmd2WzBdKTsKICBjbG9zdXJlLT5wcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgY2xvc3VyZS0+Y3RvciwgInByb3RvdHlwZSIpOwoKICBpZihKU19Jc0V4Y2VwdGlvbihjbG9zdXJlLT5wcm90bykpIHsKICAgIGpzX21pc2NfaW1tdXRhYmxlX2ZyZWUoY2xvc3VyZSk7CiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgMSBtdXN0IGhhdmUgYSAncHJvdG90eXBlJyBwcm9wZXJ0eSIpOwogIH0KCiAgbmFtZSA9IGpzX29iamVjdF9jbGFzc25hbWUoY3R4LCBjbG9zdXJlLT5wcm90byk7CiAgbmV3X25hbWUgPSBhbGxvY2Eoc3RybGVuKG5hbWUpICsgc2l6ZW9mKCJJbW11dGFibGUiKSk7CgogIHN0cl9jb3B5KCZuZXdfbmFtZVtzdHJfY29weShuZXdfbmFtZSwgIkltbXV0YWJsZSIpXSwgbmFtZSk7CgogIHByb3RvID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgSlNfU2V0UHJvdG90eXBlKGN0eCwgcHJvdG8sIGNsb3N1cmUtPnByb3RvKTsKCiAgLyogewogICAgIEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGVudHJpZXNbXSA9IHtKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgbmV3X25hbWUsIEpTX1BST1BfQ09ORklHVVJBQkxFKX07CiAgICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBwcm90bywgZW50cmllcywgY291bnRvZihlbnRyaWVzKSk7CiAgIH0qLwogIGpzX3NldF90b3N0cmluZ3RhZ192YWx1ZShjdHgsIHByb3RvLCBKU19OZXdTdHJpbmcoY3R4LCBuZXdfbmFtZSkpOwoKICByZXQgPSBKU19OZXdDQ2xvc3VyZShjdHgsIGpzX21pc2NfaW1tdXRhYmxlX2NvbnN0cnVjdG9yLCAwLCAwLCBjbG9zdXJlLCBqc19taXNjX2ltbXV0YWJsZV9mcmVlKTsKICAvLyByZXQgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwganNfbWlzY19pbW11dGFibGVfY29uc3RydWN0b3IsIG5ld19uYW1lLCAxLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CgogIGlmKCFKU19Jc0NvbnN0cnVjdG9yKGN0eCwgcmV0KSkKICAgIEpTX1NldENvbnN0cnVjdG9yQml0KGN0eCwgcmV0LCBUUlVFKTsKCiAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCByZXQsIHByb3RvKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY193cml0ZV9vYmplY3QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBzaXplX3Qgc2l6ZTsKICB1aW50OF90KiBieXRlY29kZTsKCiAgaWYoKGJ5dGVjb2RlID0gSlNfV3JpdGVPYmplY3QoY3R4LCAmc2l6ZSwgYXJndlswXSwgSlNfV1JJVEVfT0JKX0JZVEVDT0RFKSkpIHsKICAgIHJldCA9IEpTX05ld0FycmF5QnVmZmVyKGN0eCwgYnl0ZWNvZGUsIHNpemUsIGpzX3BvaW50ZXJfZnJlZV9mdW5jLCAwLCBGQUxTRSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfcmVhZF9vYmplY3QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBJbnB1dEJ1ZmZlciBpbnB1dCA9IGpzX2lucHV0X2NoYXJzKGN0eCwgYXJndlswXSk7CgogIHJldHVybiBKU19SZWFkT2JqZWN0KGN0eCwgaW5wdXQuZGF0YSwgaW5wdXQuc2l6ZSwgSlNfUkVBRF9PQkpfQllURUNPREUpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2dldHgoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewoKICBpbnQzMl90IHJldCA9IDA7CgogIHN3aXRjaChtYWdpYykgewojaWZuZGVmIF9fd2FzaV9fCiAgICBjYXNlIEZVTkNfR0VUUElEOiB7CiAgICAgIHJldCA9IGdldHBpZCgpOwogICAgICBicmVhazsKICAgIH0KI2VuZGlmCiNpZiAhZGVmaW5lZChfX3dhc2lfXykgJiYgIWRlZmluZWQoX1dJTjMyKQogICAgY2FzZSBGVU5DX0dFVFBQSUQ6IHsKICAgICAgcmV0ID0gZ2V0cHBpZCgpOwogICAgICBicmVhazsKICAgIH0KI2VuZGlmCiAgICBjYXNlIEZVTkNfR0VUU0lEOiB7CiAgICAgIC8vIHNyZXQgPSBnZXRzaWQoKTsKICAgICAgYnJlYWs7CiAgICB9CiNpZiAhZGVmaW5lZChfX3dhc2lfXykgJiYgIWRlZmluZWQoX1dJTjMyKQogICAgY2FzZSBGVU5DX0dFVFVJRDogewogICAgICByZXQgPSBnZXR1aWQoKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEZVTkNfR0VUR0lEOiB7CiAgICAgIHJldCA9IGdldGdpZCgpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRlVOQ19HRVRFVUlEOiB7CiAgICAgIHJldCA9IGdldGV1aWQoKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEZVTkNfR0VURUdJRDogewogICAgICByZXQgPSBnZXRlZ2lkKCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBGVU5DX1NFVFVJRDogewogICAgICBpbnQzMl90IHVpZDsKICAgICAgSlNfVG9JbnQzMihjdHgsICZ1aWQsIGFyZ3ZbMF0pOwogICAgICByZXQgPSBzZXR1aWQodWlkKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEZVTkNfU0VUR0lEOiB7CiAgICAgIGludDMyX3QgZ2lkOwogICAgICBKU19Ub0ludDMyKGN0eCwgJmdpZCwgYXJndlswXSk7CiAgICAgIHJldCA9IHNldGdpZChnaWQpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRlVOQ19TRVRFVUlEOiB7CiAgICAgIGludDMyX3QgZXVpZDsKICAgICAgSlNfVG9JbnQzMihjdHgsICZldWlkLCBhcmd2WzBdKTsKICAgICAgcmV0ID0gc2V0ZXVpZChldWlkKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEZVTkNfU0VURUdJRDogewogICAgICBpbnQzMl90IGVnaWQ7CiAgICAgIEpTX1RvSW50MzIoY3R4LCAmZWdpZCwgYXJndlswXSk7CiAgICAgIHJldCA9IHNldGVnaWQoZWdpZCk7CiAgICAgIGJyZWFrOwogICAgfQojZW5kaWYKICB9CiAgaWYocmV0ID09IC0xKQogICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIlcygpIGZhaWxlZDogJXMiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoKGNvbnN0IGNoYXIqIGNvbnN0W10pewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImdldHBpZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZ2V0cHBpZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZ2V0c2lkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJnZXR1aWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImdldGdpZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZ2V0ZXVpZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZ2V0ZWdpZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2V0dWlkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZXRnaWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNldGV1aWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNldGVnaWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVttYWdpYyAtIEZVTkNfR0VUUElEXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyZXJyb3IoZXJybm8pKTsKCiAgcmV0dXJuIEpTX05ld0ludDMyKGN0eCwgcmV0KTsKfQoKZW51bSB7CiAgVkFMVUVfVFlQRSA9IDAsCiAgVkFMVUVfVEFHLAogIFZBTFVFX1BUUiwKfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfdmFsdWV0eXBlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFZBTFVFX1RZUEU6IHsKICAgICAgY29uc3QgY2hhciogdHlwZXN0ciA9IGpzX3ZhbHVlX3R5cGVzdHIoY3R4LCBhcmd2WzBdKTsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgdHlwZXN0cik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBWQUxVRV9UQUc6IHsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBKU19WQUxVRV9HRVRfVEFHKGFyZ3ZbMF0pKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFZBTFVFX1BUUjogewogICAgICB2b2lkKiBwdHIgPSBKU19WQUxVRV9HRVRfUFRSKGFyZ3ZbMF0pOwogICAgICBjaGFyIGJ1ZlsxMjhdOwoKICAgICAgc25wcmludGYoYnVmLCBzaXplb2YoYnVmKSwgIiVwIiwgcHRyKTsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgYnVmKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfZXZhbGJpbmFyeShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIEJPT0wgbG9hZF9vbmx5ID0gRkFMU0U7CiAgSlNWYWx1ZUNvbnN0IG9iajsKICBpbnQgdGFnID0gSlNfVkFMVUVfR0VUX1RBRyhhcmd2WzBdKTsKICBpZihhcmdjID49IDIpCiAgICBsb2FkX29ubHkgPSBKU19Ub0Jvb2woY3R4LCBhcmd2WzFdKTsKCiAgaWYodGFnICE9IEpTX1RBR19NT0RVTEUgJiYgdGFnICE9IEpTX1RBR19GVU5DVElPTl9CWVRFQ09ERSkKICAgIG9iaiA9IGpzX21pc2NfcmVhZF9vYmplY3QoY3R4LCB0aGlzX3ZhbCwgYXJnYywgYXJndik7CiAgZWxzZQogICAgb2JqID0gYXJndlswXTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgcmV0dXJuIG9iajsKCiAgdGFnID0gSlNfVkFMVUVfR0VUX1RBRyhvYmopOwoKICBpZih0YWcgIT0gSlNfVEFHX01PRFVMRSAmJiB0YWcgIT0gSlNfVEFHX0ZVTkNUSU9OX0JZVEVDT0RFKQogICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgIm9iaiBpcyBub3QgTU9EVUxFIG5vciBCWVRFQ09ERSIpOwoKICBpZihsb2FkX29ubHkpIHsKICAgIGlmKHRhZyA9PSBKU19UQUdfTU9EVUxFKQogICAgICBqc19tb2R1bGVfc2V0X2ltcG9ydF9tZXRhKGN0eCwgb2JqLCBGQUxTRSwgRkFMU0UpOwogIH0gZWxzZSB7CiAgICBpZih0YWcgPT0gSlNfVEFHX01PRFVMRSkgewogICAgICBpZihKU19SZXNvbHZlTW9kdWxlKGN0eCwgb2JqKSA8IDApIHsKICAgICAgICBKU01vZHVsZURlZiogbSA9IEpTX1ZBTFVFX0dFVF9QVFIob2JqKTsKICAgICAgICBjb25zdCBjaGFyKiBuYW1lID0gSlNfQXRvbVRvQ1N0cmluZyhjdHgsIG0tPm1vZHVsZV9uYW1lKTsKICAgICAgICByZXQgPSBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiRmFpbGVkIHJlc29sdmluZyBtb2R1bGUgJyVzJyIsIG5hbWUpOwogICAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbmFtZSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICAgICAgICByZXR1cm4gcmV0OwogICAgICB9CiAgICAgIGpzX21vZHVsZV9zZXRfaW1wb3J0X21ldGEoY3R4LCBvYmosIEZBTFNFLCBUUlVFKTsKICAgIH0KICAgIHJldCA9IEpTX0V2YWxGdW5jdGlvbihjdHgsIG9iaik7CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2Nfb3Bjb2RlX2FycmF5KEpTQ29udGV4dCogY3R4LCBjb25zdCBKU09wQ29kZSogb3Bjb2RlKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdBcnJheShjdHgpOwogIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCAwLCBKU19OZXdVaW50MzIoY3R4LCBvcGNvZGUtPnNpemUpKTsKICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgMSwgSlNfTmV3VWludDMyKGN0eCwgb3Bjb2RlLT5uX3BvcCkpOwogIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCAyLCBKU19OZXdVaW50MzIoY3R4LCBvcGNvZGUtPm5fcHVzaCkpOwogIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCAzLCBKU19OZXdVaW50MzIoY3R4LCBvcGNvZGUtPmZtdCkpOwogIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCA0LCBKU19OZXdTdHJpbmcoY3R4LCBvcGNvZGUtPm5hbWUpKTsKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX29wY29kZV9vYmplY3QoSlNDb250ZXh0KiBjdHgsIGNvbnN0IEpTT3BDb2RlKiBvcGNvZGUpIHsKICBKU1ZhbHVlIHJldCA9IEpTX05ld09iamVjdChjdHgpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAic2l6ZSIsIEpTX05ld1VpbnQzMihjdHgsIG9wY29kZS0+c2l6ZSkpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAibl9wb3AiLCBKU19OZXdVaW50MzIoY3R4LCBvcGNvZGUtPm5fcG9wKSk7CiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJuX3B1c2giLCBKU19OZXdVaW50MzIoY3R4LCBvcGNvZGUtPm5fcHVzaCkpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAiZm10IiwgSlNfTmV3VWludDMyKGN0eCwgb3Bjb2RlLT5mbXQpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgIm5hbWUiLCBKU19OZXdTdHJpbmcoY3R4LCBvcGNvZGUtPm5hbWUpKTsKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX29wY29kZXMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX05ld0FycmF5KGN0eCk7CiAgc2l6ZV90IGksIGosIGxlbiA9IGNvdW50b2YoanNfb3Bjb2Rlcyk7CiAgQk9PTCBhc19vYmplY3QgPSBGQUxTRTsKCiAgaWYoYXJnYyA+PSAxKQogICAgYXNfb2JqZWN0ID0gSlNfVG9Cb29sKGN0eCwgYXJndlswXSk7CgogIGZvcihpID0gMCwgaiA9IDA7IGkgPCBsZW47IGkrKykgewoKICAgIGlmKGkgPj0gT1BfVEVNUF9TVEFSVCAmJiBpIDwgT1BfVEVNUF9FTkQpCiAgICAgIGNvbnRpbnVlOwoKICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCBqKyssIChhc19vYmplY3QgPyBqc19taXNjX29wY29kZV9vYmplY3QgOiBqc19taXNjX29wY29kZV9hcnJheSkoY3R4LCAmanNfb3Bjb2Rlc1tpXSkpOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19nZXRfYnl0ZWNvZGUoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoSlNfSXNGdW5jdGlvbihjdHgsIGFyZ3ZbMF0pKSB7CiAgICBKU09iamVjdCogb2JqID0gSlNfVkFMVUVfR0VUX09CSihhcmd2WzBdKTsKICAgIEpTRnVuY3Rpb25CeXRlY29kZSogZm5iYzsKCiAgICBpZigoZm5iYyA9IG9iai0+dS5mdW5jLmZ1bmN0aW9uX2J5dGVjb2RlKSkgewogICAgICByZXQgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBmbmJjLT5ieXRlX2NvZGVfYnVmLCBmbmJjLT5ieXRlX2NvZGVfbGVuKTsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCmVudW0gewogIEFUT01fVE9fU1RSSU5HID0gMCwKICBBVE9NX1RPX1ZBTFVFLAogIFZBTFVFX1RPX0FUT00sCn07CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2F0b20oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgQVRPTV9UT19TVFJJTkc6IHsKICAgICAgaW50MzJfdCBhdG9tOwogICAgICBKU19Ub0ludDMyKGN0eCwgJmF0b20sIGFyZ3ZbMF0pOwogICAgICByZXQgPSBKU19BdG9tVG9TdHJpbmcoY3R4LCBhdG9tKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEFUT01fVE9fVkFMVUU6IHsKICAgICAgaW50MzJfdCBhdG9tOwogICAgICBKU19Ub0ludDMyKGN0eCwgJmF0b20sIGFyZ3ZbMF0pOwogICAgICByZXQgPSBKU19BdG9tVG9WYWx1ZShjdHgsIGF0b20pOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgVkFMVUVfVE9fQVRPTTogewogICAgICBKU0F0b20gYXRvbSA9IEpTX1ZhbHVlVG9BdG9tKGN0eCwgYXJndlswXSk7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIGF0b20pOwogICAgICBicmVhazsKICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKZW51bSB7CiAgR0VUX0NMQVNTX0lEID0gMCwKICBHRVRfQ0xBU1NfTkFNRSwKICBHRVRfQ0xBU1NfQVRPTSwKICBHRVRfQ0xBU1NfQ09VTlQsCiAgR0VUX0NMQVNTX1BST1RPLAogIEdFVF9DTEFTU19DT05TVFJVQ1RPUiwKICBHRVRfVFlQRV9JRCwKICBHRVRfVFlQRV9TVFIsCiAgR0VUX1RZUEVfTkFNRSwKfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfY2xhc3NpZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgSlNPYmplY3QqIG9iajsKICBpbnQzMl90IGNsYXNzX2lkID0gMDsKCiAgaWYoYXJnYyA+PSAxKSB7CiAgICBpZihKU19Jc051bWJlcihhcmd2WzBdKSkKICAgICAgSlNfVG9JbnQzMihjdHgsICZjbGFzc19pZCwgYXJndlswXSk7CiAgICBlbHNlIGlmKChvYmogPSBqc192YWx1ZV9vYmooYXJndlswXSkpKQogICAgICBjbGFzc19pZCA9IG9iai0+Y2xhc3NfaWQ7CiAgICBlbHNlIGlmKEpTX0lzT2JqZWN0KGFyZ3ZbMF0pKQogICAgICBjbGFzc19pZCA9IEpTX0dldENsYXNzSUQoYXJndlswXSk7CiAgfQoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgR0VUX0NMQVNTX0lEOiB7CiAgICAgIGlmKGNsYXNzX2lkID4gMCkKICAgICAgICByZXQgPSBKU19OZXdVaW50MzIoY3R4LCBjbGFzc19pZCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHRVRfQ0xBU1NfTkFNRTogewogICAgICBpZihjbGFzc19pZCA+IDApIHsKICAgICAgICBKU0F0b20gYXRvbTsKICAgICAgICBpZigoYXRvbSA9IGpzX2NsYXNzX2F0b20oY3R4LCBjbGFzc19pZCkpKQogICAgICAgICAgcmV0ID0gSlNfQXRvbVRvVmFsdWUoY3R4LCBhdG9tKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR0VUX0NMQVNTX0FUT006IHsKICAgICAgaWYoY2xhc3NfaWQgPiAwKSB7CiAgICAgICAgSlNBdG9tIGF0b207CiAgICAgICAgaWYoKGF0b20gPSBqc19jbGFzc19hdG9tKGN0eCwgY2xhc3NfaWQpKSkKICAgICAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgYXRvbSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdFVF9DTEFTU19DT1VOVDogewogICAgICB1aW50MzJfdCBpLCBjbGFzc19jb3VudCA9IGN0eC0+cnQtPmNsYXNzX2NvdW50OwogICAgICBmb3IoaSA9IDE7IGkgPCBjbGFzc19jb3VudDsgaSsrKQogICAgICAgIGlmKCFKU19Jc1JlZ2lzdGVyZWRDbGFzcyhjdHgtPnJ0LCBpKSkKICAgICAgICAgIGJyZWFrOwoKICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgaSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHRVRfQ0xBU1NfUFJPVE86IHsKICAgICAgaWYoY2xhc3NfaWQgPiAwKQogICAgICAgIHJldCA9IEpTX0dldENsYXNzUHJvdG8oY3R4LCBjbGFzc19pZCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHRVRfQ0xBU1NfQ09OU1RSVUNUT1I6IHsKICAgICAgaWYoY2xhc3NfaWQgPiAwKSB7CiAgICAgICAgSlNWYWx1ZSBwcm90byA9IEpTX0dldENsYXNzUHJvdG8oY3R4LCBjbGFzc19pZCk7CiAgICAgICAgaWYoSlNfSXNPYmplY3QocHJvdG8pKQogICAgICAgICAgcmV0ID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBwcm90bywgImNvbnN0cnVjdG9yIik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX3R5cGUoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGludDMyX3QgdHlwZV9pZCA9IDA7CgogIGlmKGFyZ2MgPj0gMSkgewogICAgLyogIGlmKEpTX0lzTnVtYmVyKGFyZ3ZbMF0pKQogICAgICAgICAgSlNfVG9JbnQzMihjdHgsICZ0eXBlX2lkLCBhcmd2WzBdKTsKICAgICAgICBlbHNlKi8KICAgIHR5cGVfaWQgPSBqc192YWx1ZV90eXBlKGN0eCwgYXJndlswXSk7CiAgfQoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgR0VUX1RZUEVfSUQ6IHsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCB0eXBlX2lkKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdFVF9UWVBFX1NUUjogewogICAgICBjb25zdCBjaGFyKiB0eXBlOwogICAgICBpZigodHlwZSA9IGpzX3ZhbHVlX3R5cGVfbmFtZSh0eXBlX2lkKSkpCiAgICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgdHlwZSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHRVRfVFlQRV9OQU1FOiB7CiAgICAgIGNvbnN0IGNoYXIqIHR5cGU7CiAgICAgIGlmKCh0eXBlID0gKGNvbnN0IGNoYXIqKWpzX29iamVjdF9jbGFzc25hbWUoY3R4LCBhcmd2WzBdKSkpIHsKICAgICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCB0eXBlKTsKICAgICAgICBqc19mcmVlKGN0eCwgKHZvaWQqKXR5cGUpOwogICAgICB9IGVsc2UgaWYoKHR5cGUgPSBqc192YWx1ZV90eXBlX25hbWUodHlwZV9pZCkpKSB7CiAgICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgdHlwZSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiByZXQ7Cn0KCmVudW0gewogIEJJVEZJRUxEX1NFVCwKICBCSVRGSUVMRF9CSVRTLAogIEJJVEZJRUxEX0ZST01BUlJBWSwKICBCSVRGSUVMRF9UT0FSUkFZLAp9OwoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19iaXRmaWVsZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgc2l6ZV90IGxlbjsKICBpbnQ2NF90IG9mZnNldCA9IDA7CiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIEJJVEZJRUxEX1NFVDogewogICAgICBjb25zdCB1aW50OF90KiBidWY7CgogICAgICBpZihhcmdjID49IDIpCiAgICAgICAgSlNfVG9JbnQ2NChjdHgsICZvZmZzZXQsIGFyZ3ZbMV0pOwoKICAgICAgaWYoKGJ1ZiA9IEpTX0dldEFycmF5QnVmZmVyKGN0eCwgJmxlbiwgYXJndlswXSkpKSB7CiAgICAgICAgc2l6ZV90IGksIGogPSAwLCBiaXRzID0gbGVuICogODsKICAgICAgICByZXQgPSBKU19OZXdBcnJheShjdHgpOwoKICAgICAgICBmb3IoaSA9IDA7IGkgPCBiaXRzOyBpKyspIHsKICAgICAgICAgIGlmKGJ1ZltpID4+IDNdICYgKDF1IDw8IChpICYgMHg3KSkpIHsKICAgICAgICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIGorKywgSlNfTmV3SW50NjQoY3R4LCBpICsgb2Zmc2V0KSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgQklURklFTERfQklUUzogewogICAgICBjb25zdCB1aW50OF90KiBidWY7CgogICAgICBpZihhcmdjID49IDIpCiAgICAgICAgSlNfVG9JbnQ2NChjdHgsICZvZmZzZXQsIGFyZ3ZbMV0pOwoKICAgICAgaWYoYXJnYyA+PSAxICYmIChidWYgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZsZW4sIGFyZ3ZbMF0pKSkgewogICAgICAgIHNpemVfdCBpLCBqID0gMCwgYml0cyA9IGxlbiAqIDg7CiAgICAgICAgcmV0ID0gSlNfTmV3QXJyYXkoY3R4KTsKCiAgICAgICAgZm9yKGkgPSAwOyBpIDwgYml0czsgaSsrKSB7CiAgICAgICAgICBCT09MIHZhbHVlID0gISEoYnVmW2kgPj4gM10gJiAoMXUgPDwgKGkgJiAweDcpKSk7CiAgICAgICAgICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgaisrLCBKU19OZXdJbnQzMihjdHgsIHZhbHVlKSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYoYXJnYyA+PSAxICYmIEpTX0lzQXJyYXkoY3R4LCBhcmd2WzBdKSkgewoKICAgICAgICBzaXplX3QgaSwgbGVuID0ganNfYXJyYXlfbGVuZ3RoKGN0eCwgYXJndlswXSk7CiAgICAgICAgdWludDhfdCogYnVmcHRyOwogICAgICAgIHNpemVfdCBidWZzaXplID0gKGxlbiArIDcpID4+IDM7CgogICAgICAgIGlmKChidWZwdHIgPSBqc19tYWxsb2N6KGN0eCwgYnVmc2l6ZSkpID09IDApCiAgICAgICAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICAgICAgICBmb3IoaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgSlNWYWx1ZSBlbGVtZW50ID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmd2WzBdLCBpKTsKICAgICAgICAgIEJPT0wgdmFsdWUgPSBKU19Ub0Jvb2woY3R4LCBlbGVtZW50KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGVsZW1lbnQpOwoKICAgICAgICAgIGlmKHZhbHVlKQogICAgICAgICAgICBidWZwdHJbaSA+PiAzXSB8PSAxdSA8PCAoaSAmIDB4Nyk7CiAgICAgICAgfQogICAgICAgIHJldCA9IEpTX05ld0FycmF5QnVmZmVyKGN0eCwgYnVmcHRyLCBidWZzaXplLCBqc19wb2ludGVyX2ZyZWVfZnVuYywgYnVmcHRyLCBGQUxTRSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEJJVEZJRUxEX1RPQVJSQVk6IHsKICAgICAgY29uc3QgdWludDhfdCogYnVmOwoKICAgICAgaWYoYXJnYyA+PSAyKQogICAgICAgIEpTX1RvSW50NjQoY3R4LCAmb2Zmc2V0LCBhcmd2WzFdKTsKCiAgICAgIGlmKChidWYgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZsZW4sIGFyZ3ZbMF0pKSkgewogICAgICAgIHNpemVfdCBpLCBqID0gMCwgYml0cyA9IGxlbiAqIDg7CiAgICAgICAgcmV0ID0gSlNfTmV3QXJyYXkoY3R4KTsKCiAgICAgICAgZm9yKGkgPSAwOyBpIDwgYml0czsgaSsrKSB7CiAgICAgICAgICBCT09MIHZhbHVlID0gYnVmW2kgPj4gM10gJiAoMXUgPDwgKGkgJiAweDcpKTsKCiAgICAgICAgICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgaSwgSlNfTmV3Qm9vbChjdHgsIHZhbHVlKSk7CiAgICAgICAgfQogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBCSVRGSUVMRF9GUk9NQVJSQVk6IHsKICAgICAgSlNWYWx1ZSBwcm9wOwogICAgICBpZihhcmdjID49IDIpCiAgICAgICAgSlNfVG9JbnQ2NChjdHgsICZvZmZzZXQsIGFyZ3ZbMV0pOwoKICAgICAgaWYoIUpTX0lzQXJyYXkoY3R4LCBhcmd2WzBdKSkKICAgICAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgbXVzdCBiZSBhbiBhcnJheSIpOwoKICAgICAgcHJvcCA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgYXJndlswXSwgMCk7CiAgICAgIGxlbiA9IGpzX2FycmF5X2xlbmd0aChjdHgsIGFyZ3ZbMF0pOwogICAgICBpZihsZW4pIHsKICAgICAgICB1aW50OF90KiBidWZwdHI7CiAgICAgICAgc2l6ZV90IGJ1ZnNpemU7CgogICAgICAgIGlmKEpTX0lzQm9vbChwcm9wKSkgewogICAgICAgICAgc2l6ZV90IGk7CiAgICAgICAgICBidWZzaXplID0gKGxlbiArIDcpID4+IDM7CiAgICAgICAgICBpZigoYnVmcHRyID0ganNfbWFsbG9jeihjdHgsIGJ1ZnNpemUpKSA9PSAwKQogICAgICAgICAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICAgICAgICAgIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgIEpTVmFsdWUgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIGFyZ3ZbMF0sIGkpOwogICAgICAgICAgICBCT09MIGIgPSBKU19Ub0Jvb2woY3R4LCB2YWx1ZSk7CiAgICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKCiAgICAgICAgICAgIGJ1ZnB0cltpID4+IDNdIHw9IChiID8gMSA6IDApIDw8IChpICYgMHg3KTsKICAgICAgICAgIH0KCiAgICAgICAgfSBlbHNlIHsKCiAgICAgICAgICBzaXplX3QgaTsKICAgICAgICAgIGludDY0X3QgbWF4ID0gLTE7CgogICAgICAgICAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgICAgSlNWYWx1ZSB2YWx1ZSA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgYXJndlswXSwgaSk7CiAgICAgICAgICAgIHVpbnQzMl90IG51bWJlcjsKICAgICAgICAgICAgSlNfVG9VaW50MzIoY3R4LCAmbnVtYmVyLCB2YWx1ZSk7CiAgICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKCiAgICAgICAgICAgIGlmKG1heCA8IG51bWJlcikKICAgICAgICAgICAgICBtYXggPSBudW1iZXI7CiAgICAgICAgICB9CiAgICAgICAgICBidWZzaXplID0gKChtYXggKyAxKSArIDcpID4+IDM7CiAgICAgICAgICBpZigoYnVmcHRyID0ganNfbWFsbG9jeihjdHgsIGJ1ZnNpemUpKSA9PSAwKQogICAgICAgICAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICAgICAgICAgIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgIEpTVmFsdWUgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIGFyZ3ZbMF0sIGkpOwogICAgICAgICAgICB1aW50MzJfdCBudW1iZXI7CiAgICAgICAgICAgIEpTX1RvVWludDMyKGN0eCwgJm51bWJlciwgdmFsdWUpOwogICAgICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogICAgICAgICAgICBudW1iZXIgLT0gb2Zmc2V0OwoKICAgICAgICAgICAgYnVmcHRyW251bWJlciA+PiAzXSB8PSAxdSA8PCAobnVtYmVyICYgMHg3KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0ID0gSlNfTmV3QXJyYXlCdWZmZXIoY3R4LCBidWZwdHIsIGJ1ZnNpemUsIGpzX3BvaW50ZXJfZnJlZV9mdW5jLCBidWZwdHIsIEZBTFNFKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQplbnVtIHsKICBCSVRPUF9OT1QsCiAgQklUT1BfWE9SLAogIEJJVE9QX0FORCwKICBCSVRPUF9PUiwKfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfYml0b3AoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIHNpemVfdCBpOwogIHN0cnVjdCB7CiAgICB1aW50OF90KiBidWY7CiAgICBzaXplX3QgbGVuOwogIH0gYWJbMl0gPSB7ezAsIDB9LCB7MCwgMH19OwoKICBpZihhcmdjID49IDEpIHsKICAgIGFiWzBdLmJ1ZiA9IEpTX0dldEFycmF5QnVmZmVyKGN0eCwgJmFiWzBdLmxlbiwgYXJndlswXSk7CgogICAgaWYoYXJnYyA+PSAyKQogICAgICBhYlsxXS5idWYgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZhYlsxXS5sZW4sIGFyZ3ZbMV0pOwogIH0KCiAgaWYoYWJbMF0uYnVmID09IDApCiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgMSBtdXN0IGJlIGFuIEFycmF5QnVmZmVyIik7CgogIGlmKG1hZ2ljID4gQklUT1BfTk9UICYmIGFiWzFdLmJ1ZiA9PSAwKQogICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgImFyZ3VtZW50IDIgbXVzdCBiZSBhbiBBcnJheUJ1ZmZlciIpOwoKICByZXQgPSBKU19EdXBWYWx1ZShjdHgsIGFyZ3ZbMF0pOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgQklUT1BfTk9UOiB7CiAgICAgIGZvcihpID0gMDsgaSA8IGFiWzBdLmxlbjsgaSsrKSBhYlswXS5idWZbaV0gXj0gMHhmZnU7CgogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgQklUT1BfWE9SOiB7CgogICAgICBmb3IoaSA9IDA7IGkgPCBhYlswXS5sZW47IGkrKykgYWJbMF0uYnVmW2ldIF49IGFiWzFdLmJ1ZltpICUgYWJbMV0ubGVuXTsKCiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBCSVRPUF9BTkQ6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEJJVE9QX09SOiB7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgplbnVtIHsKICBSQU5ET01fUkFORCwKICBSQU5ET01fUkFOREksCiAgUkFORE9NX1JBTkRGLAogIFJBTkRPTV9TUkFORCwKfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfcmFuZG9tKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICB1aW50MzJfdCBib3VuZCA9IDA7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKGFyZ2MgPiAwICYmIEpTX0lzTnVtYmVyKGFyZ3ZbMF0pKQogICAgSlNfVG9VaW50MzIoY3R4LCAmYm91bmQsIGFyZ3ZbMF0pOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUkFORE9NX1JBTkQ6IHsKICAgICAgdWludDMyX3QgbnVtID0gYXJnYyA+IDAgPyBwY2czMl9yYW5kb21fYm91bmRlZF9kaXZpc2lvbmxlc3MoYm91bmQpIDogcGNnMzJfcmFuZG9tKCk7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIG51bSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSQU5ET01fUkFOREk6IHsKICAgICAgaW50MzJfdCBudW0gPSBhcmdjID4gMCA/IHBjZzMyX3JhbmRvbV9ib3VuZGVkX2RpdmlzaW9ubGVzcyhib3VuZCAqIDIpIC0gYm91bmQgOiBwY2czMl9yYW5kb20oKTsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBudW0pOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFORE9NX1JBTkRGOiB7CiAgICAgIHVpbnQzMl90IG51bSA9IHBjZzMyX3JhbmRvbSgpOwogICAgICByZXQgPSBKU19OZXdGbG9hdDY0KGN0eCwgKGRvdWJsZSludW0gLyBVSU5UMzJfTUFYKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBTkRPTV9TUkFORDogewogICAgICB1aW50MzJfdCBzdCA9IDA7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnN0LCBhcmd2WzBdKTsKICAgICAgcGNnMzJfaW5pdF9zdGF0ZShzdCk7CiAgICAgIHJldCA9IEpTX1VOREVGSU5FRDsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX21pc2NfZXNjYXBlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSW5wdXRCdWZmZXIgaW5wdXQgPSBqc19pbnB1dF9jaGFycyhjdHgsIGFyZ3ZbMF0pOwogIGlmKGlucHV0LmRhdGEpIHsKICAgIER5bkJ1ZiBvdXRwdXQ7CiAgICBqc19kYnVmX2luaXQoY3R4LCAmb3V0cHV0KTsKICAgIGRidWZfcHV0X2VzY2FwZWQoJm91dHB1dCwgKGNvbnN0IGNoYXIqKWlucHV0LmRhdGEsIGlucHV0LnNpemUpOwogICAgcmV0dXJuIGRidWZfdG9zdHJpbmdfZnJlZSgmb3V0cHV0LCBjdHgpOwogIH0KICByZXR1cm4gSlNfRHVwVmFsdWUoY3R4LCBhcmd2WzBdKTsKfQoKSlNWYWx1ZQpqc19taXNjX3F1b3RlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSW5wdXRCdWZmZXIgaW5wdXQgPSBqc19pbnB1dF9jaGFycyhjdHgsIGFyZ3ZbMF0pOwogIER5bkJ1ZiBvdXRwdXQ7CiAgY2hhciBxdW90ZSA9ICciJzsKICB1aW50OF90IHRhYmxlWzI1Nl0gPSB7CiAgICAgIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsICdiJywgICd0JywgICduJywgICd2JywgICdmJywgICdyJywgIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsCiAgICAgIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsCiAgICAgIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsCiAgICAgIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsICdcXCcsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsCiAgICAgIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsCiAgICAgIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsCiAgICAgIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsCiAgICAgIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4MDAsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsCiAgICAgIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsIDB4NzUsCiAgfTsKCiAganNfZGJ1Zl9pbml0KGN0eCwgJm91dHB1dCk7CiAgaWYoYXJnYyA+PSAyKSB7CiAgICBjb25zdCBjaGFyKiBzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzFdKTsKICAgIGlmKHN0clswXSkKICAgICAgcXVvdGUgPSBzdHJbMF07CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CiAgfQoKICB0YWJsZVsodW5zaWduZWQpcXVvdGVdID0gcXVvdGU7CgogIGlmKHF1b3RlID09ICdgJykgewogICAgdGFibGVbKHVuc2lnbmVkKSdcciddID0gMDsKICAgIHRhYmxlWyh1bnNpZ25lZCknXG4nXSA9IDA7CiAgICB0YWJsZVsodW5zaWduZWQpJyQnXSA9ICckJzsKICB9CgogIGRidWZfcHV0Yygmb3V0cHV0LCBxdW90ZSk7CiAgZGJ1Zl9wdXRfZXNjYXBlZF90YWJsZSgmb3V0cHV0LCAoY29uc3QgY2hhciopaW5wdXQuZGF0YSwgaW5wdXQuc2l6ZSwgdGFibGUpOwogIGRidWZfcHV0Yygmb3V0cHV0LCBxdW90ZSk7CiAgcmV0dXJuIGRidWZfdG9zdHJpbmdfZnJlZSgmb3V0cHV0LCBjdHgpOwp9CgpKU1ZhbHVlCmpzX21pc2NfZXJyb3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBpbnQzMl90IGVycm51bSA9IGVycm5vOwogIGNvbnN0IGNoYXIqIHN5c2NhbGwgPSAwOwogIEpTVmFsdWUgZXJyOwogIGlmKGFyZ2MgPj0gMSkKICAgIEpTX1RvSW50MzIoY3R4LCAmZXJybnVtLCBhcmd2WzBdKTsKICBpZihhcmdjID49IDIpCiAgICBzeXNjYWxsID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlsxXSk7CgogIGVyciA9IEpTX05ld09iamVjdChjdHgpOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIGVyciwgImVycm5vIiwgSlNfTmV3SW50MzIoY3R4LCBlcnJudW0pKTsKICBpZihzeXNjYWxsKQogICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBlcnIsICJzeXNjYWxsIiwgSlNfTmV3U3RyaW5nKGN0eCwgc3lzY2FsbCkpOwoKICBpZihzeXNjYWxsKQogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzeXNjYWxsKTsKCiAgcmV0dXJuIGVycjsKfQplbnVtIHsKICBJU19BUlJBWSwKICBJU19CSUdERUNJTUFMLAogIElTX0JJR0ZMT0FULAogIElTX0JJR0lOVCwKICBJU19CT09MLAogIElTX0NGVU5DVElPTiwKICBJU19DT05TVFJVQ1RPUiwKICBJU19FTVBUWVNUUklORywKICBJU19FUlJPUiwKICBJU19FWENFUFRJT04sCiAgSVNfRVhURU5TSUJMRSwKICBJU19GVU5DVElPTiwKICBJU19IVE1MRERBLAogIElTX0lOU1RBTkNFT0YsCiAgSVNfSU5URUdFUiwKICBJU19KT0JQRU5ESU5HLAogIElTX0xJVkVPQkpFQ1QsCiAgSVNfTlVMTCwKICBJU19OVU1CRVIsCiAgSVNfT0JKRUNULAogIElTX1JFR0lTVEVSRURDTEFTUywKICBJU19TVFJJTkcsCiAgSVNfU1lNQk9MLAogIElTX1VOQ0FUQ0hBQkxFRVJST1IsCiAgSVNfVU5ERUZJTkVELAogIElTX1VOSU5JVElBTElaRUQsCiAgSVNfQVJSQVlCVUZGRVIsCn07CgpKU1ZhbHVlCmpzX21pc2NfaXMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIGludDMyX3QgciA9IC0xOwogIEpTVmFsdWVDb25zdCBhcmcgPSBhcmdjID49IDEgPyBhcmd2WzBdIDogSlNfVU5ERUZJTkVEOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgSVNfQVJSQVk6IHIgPSBKU19Jc0FycmF5KGN0eCwgYXJnKTsgYnJlYWs7CiAgICBjYXNlIElTX0JJR0RFQ0lNQUw6IHIgPSBKU19Jc0JpZ0RlY2ltYWwoYXJnKTsgYnJlYWs7CiAgICBjYXNlIElTX0JJR0ZMT0FUOiByID0gSlNfSXNCaWdGbG9hdChhcmcpOyBicmVhazsKICAgIGNhc2UgSVNfQklHSU5UOiByID0gSlNfSXNCaWdJbnQoY3R4LCBhcmcpOyBicmVhazsKICAgIGNhc2UgSVNfQk9PTDogciA9IEpTX0lzQm9vbChhcmcpOyBicmVhazsKICAgIGNhc2UgSVNfQ0ZVTkNUSU9OOiByID0gSlNfR2V0Q2xhc3NJRChhcmcpID09IEpTX0NMQVNTX0NfRlVOQ1RJT047IGJyZWFrOwogICAgY2FzZSBJU19DT05TVFJVQ1RPUjogciA9IEpTX0lzQ29uc3RydWN0b3IoY3R4LCBhcmcpOyBicmVhazsKICAgIGNhc2UgSVNfRU1QVFlTVFJJTkc6IHIgPSBKU19WQUxVRV9HRVRfVEFHKGFyZykgPT0gSlNfVEFHX1NUUklORyAmJiBKU19WQUxVRV9HRVRfU1RSSU5HKGFyZyktPmxlbiA9PSAwOyBicmVhazsKICAgIGNhc2UgSVNfRVJST1I6IHIgPSBKU19Jc0Vycm9yKGN0eCwgYXJnKTsgYnJlYWs7CiAgICBjYXNlIElTX0VYQ0VQVElPTjogciA9IEpTX0lzRXhjZXB0aW9uKGFyZyk7IGJyZWFrOwogICAgY2FzZSBJU19FWFRFTlNJQkxFOiByID0gSlNfSXNFeHRlbnNpYmxlKGN0eCwgYXJnKTsgYnJlYWs7CiAgICBjYXNlIElTX0ZVTkNUSU9OOiByID0gSlNfSXNGdW5jdGlvbihjdHgsIGFyZyk7IGJyZWFrOwogICAgY2FzZSBJU19IVE1MRERBOiByID0gSlNfVkFMVUVfR0VUX1RBRyhhcmcpID09IEpTX1RBR19PQkpFQ1QgJiYgSlNfVkFMVUVfR0VUX09CSihhcmcpLT5pc19IVE1MRERBOyBicmVhazsKICAgIGNhc2UgSVNfSU5TVEFOQ0VPRjogciA9IEpTX0lzSW5zdGFuY2VPZihjdHgsIGFyZywgYXJndlsxXSk7IGJyZWFrOwogICAgY2FzZSBJU19JTlRFR0VSOiByID0gSlNfSXNOdW1iZXIoYXJnKSAmJiBKU19WQUxVRV9HRVRfVEFHKGFyZykgIT0gSlNfVEFHX0ZMT0FUNjQ7IGJyZWFrOwogICAgY2FzZSBJU19KT0JQRU5ESU5HOiByID0gSlNfSXNKb2JQZW5kaW5nKEpTX0dldFJ1bnRpbWUoY3R4KSk7IGJyZWFrOwogICAgY2FzZSBJU19MSVZFT0JKRUNUOiByID0gSlNfSXNMaXZlT2JqZWN0KEpTX0dldFJ1bnRpbWUoY3R4KSwgYXJnKTsgYnJlYWs7CiAgICBjYXNlIElTX05VTEw6IHIgPSBKU19Jc051bGwoYXJnKTsgYnJlYWs7CiAgICBjYXNlIElTX05VTUJFUjogciA9IEpTX0lzTnVtYmVyKGFyZyk7IGJyZWFrOwogICAgY2FzZSBJU19PQkpFQ1Q6IHIgPSBKU19Jc09iamVjdChhcmcpOyBicmVhazsKICAgIGNhc2UgSVNfUkVHSVNURVJFRENMQVNTOiByID0gIUpTX1RvSW50MzIoY3R4LCAmciwgYXJnKSAmJiBKU19Jc1JlZ2lzdGVyZWRDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIHIpOyBicmVhazsKICAgIGNhc2UgSVNfU1RSSU5HOiByID0gSlNfSXNTdHJpbmcoYXJnKTsgYnJlYWs7CiAgICBjYXNlIElTX1NZTUJPTDogciA9IEpTX0lzU3ltYm9sKGFyZyk7IGJyZWFrOwogICAgY2FzZSBJU19VTkNBVENIQUJMRUVSUk9SOiByID0gSlNfSXNVbmNhdGNoYWJsZUVycm9yKGN0eCwgYXJnKTsgYnJlYWs7CiAgICBjYXNlIElTX1VOREVGSU5FRDogciA9IEpTX0lzVW5kZWZpbmVkKGFyZyk7IGJyZWFrOwogICAgY2FzZSBJU19VTklOSVRJQUxJWkVEOiByID0gSlNfSXNVbmluaXRpYWxpemVkKGFyZyk7IGJyZWFrOwogICAgY2FzZSBJU19BUlJBWUJVRkZFUjogciA9IGpzX2lzX2FycmF5YnVmZmVyKGN0eCwgYXJnKTsgYnJlYWs7CiAgfQogIGlmKHIgPT0gLTEpCiAgICByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImpzX21pc2NfaXMgJWQiLCBtYWdpYyk7CiAgcmV0dXJuIEpTX05ld0Jvb2woY3R4LCByID49IDEpOwp9CgojaWZkZWYgSEFWRV9JTk9USUZZCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2Nfd2F0Y2goSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBpbnQzMl90IGZkID0gLTE7CgogIGlmKGFyZ2MgPj0gMSkgewogICAgSlNfVG9JbnQzMihjdHgsICZmZCwgYXJndlswXSk7CiAgfQoKICBpZihhcmdjID49IDIgJiYgSlNfSXNTdHJpbmcoYXJndlsxXSkpIHsKICAgIGludCB3ZDsKICAgIGludDMyX3QgZmxhZ3MgPSBJTl9BTExfRVZFTlRTOwogICAgY29uc3QgY2hhciogZmlsZW5hbWU7CgogICAgZmlsZW5hbWUgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzFdKTsKICAgIGlmKGFyZ2MgPj0gMykKICAgICAgSlNfVG9JbnQzMihjdHgsICZmbGFncywgYXJndlsyXSk7CgogICAgaWYoKHdkID0gaW5vdGlmeV9hZGRfd2F0Y2goZmQsIGZpbGVuYW1lLCBmbGFncykpID09IC0xKQogICAgICByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImlub3RpZnlfYWRkX3dhdGNoKCVkLCAlcywgJTA4eCkgPSAlZCAoJXMpIiwgZmQsIGZpbGVuYW1lLCBmbGFncywgd2QsIHN0cmVycm9yKGVycm5vKSk7CgogICAgLy8gcHJpbnRmKCJpbm90aWZ5X2FkZF93YXRjaCglZCwgJXMsICUwOHgpID0gJWRcbiIsIGZkLCBmaWxlbmFtZSwgZmxhZ3MsIHdkKTsKCiAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHdkKTsKICB9IGVsc2UgaWYoYXJnYyA+PSAyICYmIEpTX0lzTnVtYmVyKGFyZ3ZbMV0pKSB7CiAgICBpbnQgcjsKICAgIGludDMyX3Qgd2QgPSAtMTsKCiAgICBKU19Ub0ludDMyKGN0eCwgJndkLCBhcmd2WzFdKTsKCiAgICBpZigociA9IGlub3RpZnlfcm1fd2F0Y2goZmQsIHdkKSkgPT0gLTEpCiAgICAgIHJldHVybiBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiaW5vdGlmeV9ybV93YXRjaCglZCwgJWQpID0gJWQgKCVzKSIsIGZkLCB3ZCwgciwgc3RyZXJyb3IoZXJybm8pKTsKICAgIC8vIHByaW50ZigiaW5vdGlmeV9hZGRfd2F0Y2goJWQsICVkKSA9ICVkXG4iLCBmZCwgd2QsIHIpOwoKICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgcik7CiAgfSBlbHNlIHsKICAgIGludCBmZDsKICAgIGlmKChmZCA9IGlub3RpZnlfaW5pdDEoSU5fTk9OQkxPQ0spKSA9PSAtMSkKICAgICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJpbm90aWZ5X2luaXQxKElOX05PTkJMT0NLKSBmYWlsZWQgKCVzKSIsIHN0cmVycm9yKGVycm5vKSk7CgogICAgLy8gcHJpbnRmKCJpbm90aWZ5X2luaXQxKCkgPSAlZFxuIiwgZmQpOwogICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBmZCk7CiAgfQoKICByZXR1cm4gcmV0Owp9CiNlbmRpZgoKI2lmZGVmIEhBVkVfREFFTU9OCnN0YXRpYyBKU1ZhbHVlCmpzX21pc2NfZGFlbW9uKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgQk9PTCBub2NoZGlyLCBub2Nsb3NlOwoKICBub2NoZGlyID0gYXJnYyA+PSAxICYmIEpTX1RvQm9vbChjdHgsIGFyZ3ZbMF0pOwoKICBub2Nsb3NlID0gYXJnYyA+PSAyICYmIEpTX1RvQm9vbChjdHgsIGFyZ3ZbMF0pOwoKICByZXR1cm4gSlNfTmV3SW50MzIoY3R4LCBkYWVtb24obm9jaGRpciwgbm9jbG9zZSkpOwp9CiNlbmRpZgoKI2lmZGVmIEhBVkVfRk9SSwpzdGF0aWMgSlNWYWx1ZQpqc19taXNjX2ZvcmsoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICByZXR1cm4gSlNfTmV3SW50MzIoY3R4LCBmb3JrKCkpOwp9CiNlbmRpZgoKI2lmZGVmIEhBVkVfVkZPUksKc3RhdGljIEpTVmFsdWUKanNfbWlzY192Zm9yayhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHJldHVybiBKU19OZXdJbnQzMihjdHgsIHZmb3JrKCkpOwp9CiNlbmRpZgoKI2lmZGVmIEhBVkVfU0VUU0lECnN0YXRpYyBKU1ZhbHVlCmpzX21pc2Nfc2V0c2lkKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgcmV0dXJuIEpTX05ld0ludDMyKGN0eCwgc2V0c2lkKCkpOwp9CiNlbmRpZgoKdHlwZWRlZiBzdHJ1Y3QgewogIEpTQ29udGV4dCogY3R4OwogIEpTVmFsdWUgZm47Cn0gSlNBdEV4aXRFbnRyeTsKCnRocmVhZF9sb2NhbCBWZWN0b3IganNfbWlzY19hdGV4aXRfZnVuY3Rpb25zOwoKc3RhdGljIHZvaWQKanNfbWlzY19hdGV4aXRfaGFuZGxlcigpIHsKICBKU0F0RXhpdEVudHJ5KiBlbnRyeTsKCiAgdmVjdG9yX2ZvcmVhY2hfdCgmanNfbWlzY19hdGV4aXRfZnVuY3Rpb25zLCBlbnRyeSkgewogICAgSlNWYWx1ZSByZXQgPSBKU19DYWxsKGVudHJ5LT5jdHgsIGVudHJ5LT5mbiwgSlNfVU5ERUZJTkVELCAwLCAwKTsKICAgIEpTX0ZyZWVWYWx1ZShlbnRyeS0+Y3R4LCByZXQpOwogIH0KfQoKc3RhdGljIEpTVmFsdWUKanNfbWlzY19hdGV4aXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU0F0RXhpdEVudHJ5IGVudHJ5OwoKICBpZihhcmdjIDwgMSB8fCAhSlNfSXNGdW5jdGlvbihjdHgsIGFyZ3ZbMF0pKQogICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgImFyZ3VtZW50IDEgbXVzdCBiZSBmdW5jdGlvbiIpOwoKICBlbnRyeS5jdHggPSBjdHg7CiAgZW50cnkuZm4gPSBKU19EdXBWYWx1ZShjdHgsIGFyZ3ZbMF0pOwoKICB2ZWN0b3JfcHVzaCgmanNfbWlzY19hdGV4aXRfZnVuY3Rpb25zLCBlbnRyeSk7CiAgcmV0dXJuIEpTX1VOREVGSU5FRDsKfQoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX21pc2NfZnVuY3NbXSA9IHsKICAgIEpTX0NGVU5DX0RFRigiZ2V0UmVsZWFzZSIsIDAsIGpzX21pc2NfZ2V0cmVsZWFzZSksCiNpZm5kZWYgX193YXNpX18KLy8gSlNfQ0ZVTkNfREVGKCJyZWFscGF0aCIsIDEsIGpzX21pc2NfcmVhbHBhdGgpLAojaWZkZWYgVVNFX1RFTVBOQU0KICAgIEpTX0NGVU5DX0RFRigidGVtcG5hbSIsIDAsIGpzX21pc2NfdGVtcG5hbSksCiNlbmRpZgogICAgSlNfQ0ZVTkNfREVGKCJta3N0ZW1wIiwgMSwganNfbWlzY19ta3N0ZW1wKSwKI2VuZGlmCiNpZmRlZiBIQVZFX0ZOTUFUQ0gKICAgIEpTX0NGVU5DX0RFRigiZm5tYXRjaCIsIDMsIGpzX21pc2NfZm5tYXRjaCksCiNlbmRpZgojaWZkZWYgSEFWRV9HTE9CCiAgICBKU19DRlVOQ19ERUYoImdsb2IiLCAyLCBqc19taXNjX2dsb2IpLAojZW5kaWYKI2lmZGVmIEhBVkVfV09SREVYUAogICAgSlNfQ0ZVTkNfREVGKCJ3b3JkZXhwIiwgMiwganNfbWlzY193b3JkZXhwKSwKI2VuZGlmCiNpZmRlZiBIQVZFX0lOT1RJRlkKICAgIEpTX0NGVU5DX0RFRigid2F0Y2giLCAyLCBqc19taXNjX3dhdGNoKSwKI2VuZGlmCiNpZmRlZiBIQVZFX0RBRU1PTgogICAgSlNfQ0ZVTkNfREVGKCJkYWVtb24iLCAyLCBqc19taXNjX2RhZW1vbiksCiNlbmRpZgojaWZkZWYgSEFWRV9GT1JLCiAgICBKU19DRlVOQ19ERUYoImZvcmsiLCAwLCBqc19taXNjX2ZvcmspLAojZW5kaWYKI2lmZGVmIEhBVkVfVkZPUksKICAgIEpTX0NGVU5DX0RFRigidmZvcmsiLCAwLCBqc19taXNjX3Zmb3JrKSwKI2VuZGlmCiNpZmRlZiBIQVZFX1NFVFNJRAogICAgSlNfQ0ZVTkNfREVGKCJzZXRzaWQiLCAwLCBqc19taXNjX3NldHNpZCksCiNlbmRpZgogICAgSlNfQ0ZVTkNfREVGKCJhdGV4aXQiLCAxLCBqc19taXNjX2F0ZXhpdCksCiAgICBKU19DRlVOQ19ERUYoInRvU3RyaW5nIiwgMSwganNfbWlzY190b3N0cmluZyksCiAgICBKU19DRlVOQ19ERUYoInRvUG9pbnRlciIsIDEsIGpzX21pc2NfdG9wb2ludGVyKSwKICAgIEpTX0NGVU5DX0RFRigidG9BcnJheUJ1ZmZlciIsIDEsIGpzX21pc2NfdG9hcnJheWJ1ZmZlciksCiAgICBKU19DRlVOQ19ERUYoImR1cEFycmF5QnVmZmVyIiwgMSwganNfbWlzY19kdXBhcnJheWJ1ZmZlciksCiAgICBKU19DRlVOQ19ERUYoInNsaWNlQXJyYXlCdWZmZXIiLCAxLCBqc19taXNjX3NsaWNlKSwKICAgIEpTX0NGVU5DX0RFRigicmVzaXplQXJyYXlCdWZmZXIiLCAxLCBqc19taXNjX3Jlc2l6ZWFycmF5YnVmZmVyKSwKICAgIEpTX0NGVU5DX0RFRigiY29uY2F0IiwgMSwganNfbWlzY19jb25jYXQpLAogICAgSlNfQ0ZVTkNfREVGKCJzZWFyY2hBcnJheUJ1ZmZlciIsIDIsIGpzX21pc2Nfc2VhcmNoYXJyYXlidWZmZXIpLAogICAgSlNfQ0ZVTkNfREVGKCJtZW1jcHkiLCAyLCBqc19taXNjX21lbWNweSksCiNpZmRlZiBIQVZFX0ZNRU1PUEVOCiAgICBKU19DRlVOQ19ERUYoImZtZW1vcGVuIiwgMiwganNfbWlzY19mbWVtb3BlbiksCiNlbmRpZgogICAgSlNfQ0ZVTkNfREVGKCJnZXRQZXJmb3JtYW5jZUNvdW50ZXIiLCAwLCBqc19taXNjX2dldHBlcmZvcm1hbmNlY291bnRlciksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldEV4ZWN1dGFibGUiLCAwLCBqc19taXNjX3Byb2NsaW5rLCBGVU5DX0dFVEVYRUNVVEFCTEUpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRDdXJyZW50V29ya2luZ0RpcmVjdG9yeSIsIDAsIGpzX21pc2NfcHJvY2xpbmssIEZVTkNfR0VUQ1dEKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0Um9vdERpcmVjdG9yeSIsIDAsIGpzX21pc2NfcHJvY2xpbmssIEZVTkNfR0VUUk9PVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldEZpbGVEZXNjcmlwdG9yIiwgMCwganNfbWlzY19wcm9jbGluaywgRlVOQ19HRVRGRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldENvbW1hbmRMaW5lIiwgMCwganNfbWlzY19wcm9jcmVhZCwgRlVOQ19HRVRDT01NQU5ETElORSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFByb2NNYXBzIiwgMCwganNfbWlzY19wcm9jcmVhZCwgRlVOQ19HRVRQUk9DTUFQUyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFByb2NNb3VudHMiLCAwLCBqc19taXNjX3Byb2NyZWFkLCBGVU5DX0dFVFBST0NNT1VOVFMpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRQcm9jU3RhdCIsIDAsIGpzX21pc2NfcHJvY3JlYWQsIEZVTkNfR0VUUFJPQ1NUQVQpLAogICAgSlNfQ0ZVTkNfREVGKCJnZXRQcm90b3R5cGVDaGFpbiIsIDAsIGpzX21pc2NfZ2V0cHJvdG90eXBlY2hhaW4pLAojaWZuZGVmIF9fd2FzaV9fCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldHBpZCIsIDAsIGpzX21pc2NfZ2V0eCwgRlVOQ19HRVRQSUQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRwcGlkIiwgMCwganNfbWlzY19nZXR4LCBGVU5DX0dFVFBQSUQpLAojZW5kaWYKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0c2lkIiwgMCwganNfbWlzY19nZXR4LCBGVU5DX0dFVFNJRCksCiNpZiAhZGVmaW5lZChfX3dhc2lfXykgJiYgIWRlZmluZWQoX1dJTjMyKQogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXR1aWQiLCAwLCBqc19taXNjX2dldHgsIEZVTkNfR0VUVUlEKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0Z2lkIiwgMCwganNfbWlzY19nZXR4LCBGVU5DX0dFVEdJRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldGV1aWQiLCAwLCBqc19taXNjX2dldHgsIEZVTkNfR0VURVVJRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldGVnaWQiLCAwLCBqc19taXNjX2dldHgsIEZVTkNfR0VURUdJRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNldHVpZCIsIDEsIGpzX21pc2NfZ2V0eCwgRlVOQ19TRVRVSUQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzZXRnaWQiLCAxLCBqc19taXNjX2dldHgsIEZVTkNfU0VUR0lEKSwKI2VuZGlmCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNldGV1aWQiLCAxLCBqc19taXNjX2dldHgsIEZVTkNfU0VURVVJRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNldGVnaWQiLCAxLCBqc19taXNjX2dldHgsIEZVTkNfU0VURUdJRCksCiAgICBKU19DRlVOQ19ERUYoImhydGltZSIsIDAsIGpzX21pc2NfaHJ0aW1lKSwKI2lmbmRlZiBfV0lOMzIKICAgIEpTX0NGVU5DX0RFRigidW5hbWUiLCAwLCBqc19taXNjX3VuYW1lKSwKI2VuZGlmCiNpZmRlZiBIQVZFX1RFUk1JT1NfSAogICAgSlNfQ0ZVTkNfREVGKCJpb2N0bCIsIDMsIGpzX21pc2NfaW9jdGwpLAogICAgSlNfQ0ZVTkNfREVGKCJnZXRTY3JlZW5TaXplIiwgMCwganNfbWlzY19zY3JlZW5zaXplKSwKI2VuZGlmCiAgICBKU19DRlVOQ19ERUYoImJ0b2EiLCAxLCBqc19taXNjX2J0b2EpLAogICAgSlNfQ0ZVTkNfREVGKCJhdG9iIiwgMSwganNfbWlzY19hdG9iKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigibm90IiwgMSwganNfbWlzY19iaXRvcCwgQklUT1BfTk9UKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigieG9yIiwgMiwganNfbWlzY19iaXRvcCwgQklUT1BfWE9SKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiYW5kIiwgMiwganNfbWlzY19iaXRvcCwgQklUT1BfQU5EKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigib3IiLCAyLCBqc19taXNjX2JpdG9wLCBCSVRPUF9PUiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImJpdGZpZWxkU2V0IiwgMSwganNfbWlzY19iaXRmaWVsZCwgQklURklFTERfU0VUKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiYml0cyIsIDEsIGpzX21pc2NfYml0ZmllbGQsIEJJVEZJRUxEX0JJVFMpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJiaXRmaWVsZFRvQXJyYXkiLCAxLCBqc19taXNjX2JpdGZpZWxkLCBCSVRGSUVMRF9UT0FSUkFZKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiYXJyYXlUb0JpdGZpZWxkIiwgMSwganNfbWlzY19iaXRmaWVsZCwgQklURklFTERfRlJPTUFSUkFZKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiY29tcGlsZVNjcmlwdCIsIDEsIGpzX21pc2NfY29tcGlsZSwgMCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImV2YWxTY3JpcHQiLCAxLCBqc19taXNjX2NvbXBpbGUsIDEpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpbW11dGFibGVDbGFzcyIsIDEsIGpzX21pc2NfaW1tdXRhYmxlX2NsYXNzLCAxKSwKICAgIEpTX0NGVU5DX0RFRigid3JpdGVPYmplY3QiLCAxLCBqc19taXNjX3dyaXRlX29iamVjdCksCiAgICBKU19DRlVOQ19ERUYoInJlYWRPYmplY3QiLCAxLCBqc19taXNjX3JlYWRfb2JqZWN0KSwKICAgIEpTX0NGVU5DX0RFRigiZ2V0T3BDb2RlcyIsIDAsIGpzX21pc2Nfb3Bjb2RlcyksCiAgICBKU19DRlVOQ19ERUYoImdldEJ5dGVDb2RlIiwgMSwganNfbWlzY19nZXRfYnl0ZWNvZGUpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ2YWx1ZVR5cGUiLCAxLCBqc19taXNjX3ZhbHVldHlwZSwgVkFMVUVfVFlQRSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInZhbHVlVGFnIiwgMSwganNfbWlzY192YWx1ZXR5cGUsIFZBTFVFX1RBRyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInZhbHVlUHRyIiwgMSwganNfbWlzY192YWx1ZXR5cGUsIFZBTFVFX1BUUiksCiAgICBKU19DRlVOQ19ERUYoImV2YWxCaW5hcnkiLCAxLCBqc19taXNjX2V2YWxiaW5hcnkpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJhdG9tVG9TdHJpbmciLCAxLCBqc19taXNjX2F0b20sIEFUT01fVE9fU1RSSU5HKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiYXRvbVRvVmFsdWUiLCAxLCBqc19taXNjX2F0b20sIEFUT01fVE9fVkFMVUUpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ2YWx1ZVRvQXRvbSIsIDEsIGpzX21pc2NfYXRvbSwgVkFMVUVfVE9fQVRPTSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldENsYXNzSUQiLCAxLCBqc19taXNjX2NsYXNzaWQsIEdFVF9DTEFTU19JRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldENsYXNzTmFtZSIsIDEsIGpzX21pc2NfY2xhc3NpZCwgR0VUX0NMQVNTX05BTUUpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRDbGFzc0F0b20iLCAxLCBqc19taXNjX2NsYXNzaWQsIEdFVF9DTEFTU19BVE9NKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0Q2xhc3NDb3VudCIsIDEsIGpzX21pc2NfY2xhc3NpZCwgR0VUX0NMQVNTX0NPVU5UKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0Q2xhc3NQcm90byIsIDEsIGpzX21pc2NfY2xhc3NpZCwgR0VUX0NMQVNTX1BST1RPKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0Q2xhc3NDb25zdHJ1Y3RvciIsIDEsIGpzX21pc2NfY2xhc3NpZCwgR0VUX0NMQVNTX0NPTlNUUlVDVE9SKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0VHlwZUlkIiwgMSwganNfbWlzY190eXBlLCBHRVRfVFlQRV9JRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFR5cGVTdHIiLCAxLCBqc19taXNjX3R5cGUsIEdFVF9UWVBFX1NUUiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFR5cGVOYW1lIiwgMSwganNfbWlzY190eXBlLCBHRVRfVFlQRV9OQU1FKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigicmFuZCIsIDAsIGpzX21pc2NfcmFuZG9tLCBSQU5ET01fUkFORCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInJhbmRpIiwgMCwganNfbWlzY19yYW5kb20sIFJBTkRPTV9SQU5ESSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInJhbmRmIiwgMCwganNfbWlzY19yYW5kb20sIFJBTkRPTV9SQU5ERiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNyYW5kIiwgMSwganNfbWlzY19yYW5kb20sIFJBTkRPTV9TUkFORCksCiAgICBKU19DRlVOQ19ERUYoImVzY2FwZSIsIDEsIGpzX21pc2NfZXNjYXBlKSwKICAgIEpTX0NGVU5DX0RFRigicXVvdGUiLCAxLCBqc19taXNjX3F1b3RlKSwKICAgIEpTX0NGVU5DX0RFRigiZXJyb3IiLCAwLCBqc19taXNjX2Vycm9yKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNBcnJheSIsIDEsIGpzX21pc2NfaXMsIElTX0FSUkFZKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNCaWdEZWNpbWFsIiwgMSwganNfbWlzY19pcywgSVNfQklHREVDSU1BTCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImlzQmlnRmxvYXQiLCAxLCBqc19taXNjX2lzLCBJU19CSUdGTE9BVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImlzQmlnSW50IiwgMSwganNfbWlzY19pcywgSVNfQklHSU5UKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNCb29sIiwgMSwganNfbWlzY19pcywgSVNfQk9PTCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImlzQ0Z1bmN0aW9uIiwgMSwganNfbWlzY19pcywgSVNfQ0ZVTkNUSU9OKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNDb25zdHJ1Y3RvciIsIDEsIGpzX21pc2NfaXMsIElTX0NPTlNUUlVDVE9SKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNFbXB0eVN0cmluZyIsIDEsIGpzX21pc2NfaXMsIElTX0VNUFRZU1RSSU5HKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNFcnJvciIsIDEsIGpzX21pc2NfaXMsIElTX0VSUk9SKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNFeGNlcHRpb24iLCAxLCBqc19taXNjX2lzLCBJU19FWENFUFRJT04pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpc0V4dGVuc2libGUiLCAxLCBqc19taXNjX2lzLCBJU19FWFRFTlNJQkxFKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNGdW5jdGlvbiIsIDEsIGpzX21pc2NfaXMsIElTX0ZVTkNUSU9OKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNIVE1MRERBIiwgMSwganNfbWlzY19pcywgSVNfSFRNTEREQSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImlzSW5zdGFuY2VPZiIsIDEsIGpzX21pc2NfaXMsIElTX0lOU1RBTkNFT0YpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpc0ludGVnZXIiLCAxLCBqc19taXNjX2lzLCBJU19JTlRFR0VSKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNKb2JQZW5kaW5nIiwgMSwganNfbWlzY19pcywgSVNfSk9CUEVORElORyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImlzTGl2ZU9iamVjdCIsIDEsIGpzX21pc2NfaXMsIElTX0xJVkVPQkpFQ1QpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpc051bGwiLCAxLCBqc19taXNjX2lzLCBJU19OVUxMKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNOdW1iZXIiLCAxLCBqc19taXNjX2lzLCBJU19OVU1CRVIpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpc09iamVjdCIsIDEsIGpzX21pc2NfaXMsIElTX09CSkVDVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImlzUmVnaXN0ZXJlZENsYXNzIiwgMSwganNfbWlzY19pcywgSVNfUkVHSVNURVJFRENMQVNTKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaXNTdHJpbmciLCAxLCBqc19taXNjX2lzLCBJU19TVFJJTkcpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpc1N5bWJvbCIsIDEsIGpzX21pc2NfaXMsIElTX1NZTUJPTCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImlzVW5jYXRjaGFibGVFcnJvciIsIDEsIGpzX21pc2NfaXMsIElTX1VOQ0FUQ0hBQkxFRVJST1IpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpc1VuZGVmaW5lZCIsIDEsIGpzX21pc2NfaXMsIElTX1VOREVGSU5FRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImlzVW5pbml0aWFsaXplZCIsIDEsIGpzX21pc2NfaXMsIElTX1VOSU5JVElBTElaRUQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpc0FycmF5QnVmZmVyIiwgMSwganNfbWlzY19pcywgSVNfQVJSQVlCVUZGRVIpLAoKICAgIEpTX0NPTlNUQU5UKEpTX0VWQUxfVFlQRV9HTE9CQUwpLAogICAgSlNfQ09OU1RBTlQoSlNfRVZBTF9UWVBFX01PRFVMRSksCiAgICBKU19DT05TVEFOVChKU19FVkFMX1RZUEVfRElSRUNUKSwKICAgIEpTX0NPTlNUQU5UKEpTX0VWQUxfVFlQRV9JTkRJUkVDVCksCiAgICBKU19DT05TVEFOVChKU19FVkFMX1RZUEVfTUFTSyksCiAgICBKU19DT05TVEFOVChKU19FVkFMX0ZMQUdfU1RSSUNUKSwKICAgIEpTX0NPTlNUQU5UKEpTX0VWQUxfRkxBR19TVFJJUCksCiAgICBKU19DT05TVEFOVChKU19FVkFMX0ZMQUdfQ09NUElMRV9PTkxZKSwKICAgIEpTX0NPTlNUQU5UKEpTX0VWQUxfRkxBR19CQUNLVFJBQ0VfQkFSUklFUiksCiNpZmRlZiBIQVZFX0ZOTUFUQ0gKICAgIEpTX0NPTlNUQU5UKEZOTV9DQVNFRk9MRCksCiNpZmRlZiBGTk1fRVhUTUFUQ0gKICAgIEpTX0NPTlNUQU5UKEZOTV9FWFRNQVRDSCksCiNlbmRpZgogICAgSlNfQ09OU1RBTlQoRk5NX0ZJTEVfTkFNRSksCiAgICBKU19DT05TVEFOVChGTk1fTEVBRElOR19ESVIpLAogICAgSlNfQ09OU1RBTlQoRk5NX05PRVNDQVBFKSwKICAgIEpTX0NPTlNUQU5UKEZOTV9OT01BVENIKSwKICAgIEpTX0NPTlNUQU5UKEZOTV9QQVRITkFNRSksCiAgICBKU19DT05TVEFOVChGTk1fUEVSSU9EKSwKI2VuZGlmCiNpZmRlZiBIQVZFX0dMT0IKICAgIEpTX0NPTlNUQU5UKEdMT0JfRVJSKSwKICAgIEpTX0NPTlNUQU5UKEdMT0JfTUFSSyksCiAgICBKU19DT05TVEFOVChHTE9CX05PU09SVCksCiAgICBKU19DT05TVEFOVChHTE9CX05PQ0hFQ0spLAogICAgSlNfQ09OU1RBTlQoR0xPQl9OT01BVENIKSwKICAgIEpTX0NPTlNUQU5UKEdMT0JfTk9FU0NBUEUpLAogICAgLy8gSlNfQ09OU1RBTlQoR0xPQl9QRVJJT0QpLAogICAgSlNfQ09OU1RBTlQoR0xPQl9BTFRESVJGVU5DKSwKICAgIEpTX0NPTlNUQU5UKEdMT0JfQlJBQ0UpLAogICAgSlNfQ09OU1RBTlQoR0xPQl9OT01BR0lDKSwKICAgIEpTX0NPTlNUQU5UKEdMT0JfVElMREUpLAogICAgLy8gSlNfQ09OU1RBTlQoR0xPQl9USUxERV9DSEVDSyksCiAgICAvLyBKU19DT05TVEFOVChHTE9CX09OTFlESVIpLAogICAgSlNfQ09OU1RBTlQoR0xPQl9NQUdDSEFSKSwKICAgIEpTX0NPTlNUQU5UKEdMT0JfTk9TUEFDRSksCiAgICBKU19DT05TVEFOVChHTE9CX0FCT1JURUQpLAojZW5kaWYKI2lmZGVmIEhBVkVfV09SREVYUAogICAgSlNfQ09OU1RBTlQoV1JERV9TSE9XRVJSKSwKICAgIEpTX0NPTlNUQU5UKFdSREVfVU5ERUYpLAogICAgSlNfQ09OU1RBTlQoV1JERV9CQURDSEFSKSwKICAgIEpTX0NPTlNUQU5UKFdSREVfQkFEVkFMKSwKICAgIEpTX0NPTlNUQU5UKFdSREVfQ01EU1VCKSwKICAgIEpTX0NPTlNUQU5UKFdSREVfTk9DTUQpLAogICAgSlNfQ09OU1RBTlQoV1JERV9OT1NQQUNFKSwKICAgIEpTX0NPTlNUQU5UKFdSREVfU1lOVEFYKSwKI2VuZGlmCiNpZmRlZiBIQVZFX0lOT1RJRlkKICAgIEpTX0NPTlNUQU5UKElOX0FDQ0VTUyksCiAgICBKU19DT05TVEFOVChJTl9NT0RJRlkpLAogICAgSlNfQ09OU1RBTlQoSU5fQVRUUklCKSwKICAgIEpTX0NPTlNUQU5UKElOX0NMT1NFX1dSSVRFKSwKICAgIEpTX0NPTlNUQU5UKElOX0NMT1NFX05PV1JJVEUpLAogICAgSlNfQ09OU1RBTlQoSU5fQ0xPU0UpLAogICAgSlNfQ09OU1RBTlQoSU5fT1BFTiksCiAgICBKU19DT05TVEFOVChJTl9NT1ZFRF9GUk9NKSwKICAgIEpTX0NPTlNUQU5UKElOX01PVkVEX1RPKSwKICAgIEpTX0NPTlNUQU5UKElOX01PVkUpLAogICAgSlNfQ09OU1RBTlQoSU5fQ1JFQVRFKSwKICAgIEpTX0NPTlNUQU5UKElOX0RFTEVURSksCiAgICBKU19DT05TVEFOVChJTl9ERUxFVEVfU0VMRiksCiAgICBKU19DT05TVEFOVChJTl9NT1ZFX1NFTEYpLAogICAgSlNfQ09OU1RBTlQoSU5fVU5NT1VOVCksCiAgICBKU19DT05TVEFOVChJTl9RX09WRVJGTE9XKSwKICAgIEpTX0NPTlNUQU5UKElOX0lHTk9SRUQpLAogICAgSlNfQ09OU1RBTlQoSU5fT05MWURJUiksCiAgICBKU19DT05TVEFOVChJTl9ET05UX0ZPTExPVyksCiAgICBKU19DT05TVEFOVChJTl9FWENMX1VOTElOSyksCiAgICBKU19DT05TVEFOVChJTl9NQVNLX0FERCksCiAgICBKU19DT05TVEFOVChJTl9JU0RJUiksCiAgICBKU19DT05TVEFOVChJTl9PTkVTSE9UKSwKICAgIEpTX0NPTlNUQU5UKElOX0FMTF9FVkVOVFMpLAojZW5kaWYKI2lmZGVmIEhBVkVfVEVSTUlPU19ICiAgICBKU19DT05TVEFOVChUSU9DU0NUVFkpLAogICAgSlNfQ09OU1RBTlQoVElPQ0dQR1JQKSwKICAgIEpTX0NPTlNUQU5UKFRJT0NTUEdSUCksCiAgICBKU19DT05TVEFOVChUSU9DR1dJTlNaKSwKICAgIEpTX0NPTlNUQU5UKFRJT0NTV0lOU1opLAogICAgSlNfQ09OU1RBTlQoVElPQ01HRVQpLAogICAgSlNfQ09OU1RBTlQoVElPQ01CSVMpLAogICAgSlNfQ09OU1RBTlQoVElPQ01CSUMpLAogICAgSlNfQ09OU1RBTlQoVElPQ01TRVQpLAogICAgSlNfQ09OU1RBTlQoVElPQ0lOUSksCiAgICBKU19DT05TVEFOVChUSU9DTElOVVgpLAogICAgSlNfQ09OU1RBTlQoVElPQ1BLVCksCiAgICBKU19DT05TVEFOVChUSU9DU0JSSyksCiAgICBKU19DT05TVEFOVChUSU9DQ0JSSyksCiNlbmRpZgp9OwoKc3RhdGljIGludApqc19taXNjX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKCFqc19sb2NhdGlvbl9jbGFzc19pZCkKICAgIGpzX2xvY2F0aW9uX2luaXQoY3R4LCAwKTsKCiAgdmVjdG9yX2luaXQoJmpzX21pc2NfYXRleGl0X2Z1bmN0aW9ucywgY3R4KTsKICBhdGV4aXQoJmpzX21pc2NfYXRleGl0X2hhbmRsZXIpOwoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnRMaXN0KGN0eCwgbSwganNfbWlzY19mdW5jcywgY291bnRvZihqc19taXNjX2Z1bmNzKSk7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiTG9jYXRpb24iLCBsb2NhdGlvbl9jdG9yKTsKICB9CiAgcmV0dXJuIDA7Cn0KCiNpZiBkZWZpbmVkKEpTX1NIQVJFRF9MSUJSQVJZKSAmJiBkZWZpbmVkKEpTX01JU0NfTU9EVUxFKQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfbWlzYwojZW5kaWYKClZJU0lCTEUgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwoKICBtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCBqc19taXNjX2luaXQpOwogIGlmKCFtKQogICAgcmV0dXJuIE5VTEw7CiAgSlNfQWRkTW9kdWxlRXhwb3J0TGlzdChjdHgsIG0sIGpzX21pc2NfZnVuY3MsIGNvdW50b2YoanNfbWlzY19mdW5jcykpOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJMb2NhdGlvbiIpOwogIHJldHVybiBtOwp9CgovKioKICogQH0KICovCgAAAAAAAAAAI/gAAAAAAAAAAAAAAAAAAAAAAAAj+AAAAAAAAAAAAAAAAAAAAAAAACP4AAAAAAAAAAAAAAAAAAAAAAAAI/gAAAAAAAAAAAAAAAAAAAAAAAAj+AAAAAAAAAAAAAAAAAAAAAAAACP4AAAAAAAAAAAAAAAAAAAAAAAAI/gAAAAAAAAAAAAAAAAAAAAAAAAj+AAAAAAAAAAAAAAAAAAAAAAAACP4AAAAAAAAAAAAAAAAAAAAAAAAI/gAAAAAAAAAAAAAAAAAAAAAAAAj+AAAAAAAAAAAAAAAAAAAAAAAACP4AAAAAAAAAAAAAAAAAAAAAAAAI/gAAAAAAAAAAAAAAAAAAAAAAAAj+AAAAAAAAAAAAAAAAAAAAAAAACP4AAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGILAAAAAAAAdQsAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "quickjs-xml.c",
			"settings":
			{
				"buffer_size": 23529,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					28,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvgUAAAAAAADKBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 40210,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2988,
					1,
					"insert",
					{
						"characters": "jE"
					},
					"AgAAAOmQAAAAAAAA6pAAAAAAAAAAAAAA6pAAAAAAAADrkAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpkAAAAAAAAOmQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2989,
					1,
					"left_delete",
					null,
					"AQAAAOqQAAAAAAAA6pAAAAAAAAABAAAARQ",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrkAAAAAAAAOuQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2990,
					1,
					"insert",
					{
						"characters": "JE"
					},
					"AgAAAOqQAAAAAAAA65AAAAAAAAAAAAAA65AAAAAAAADskAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqkAAAAAAAAOqQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2991,
					2,
					"left_delete",
					null,
					"AgAAAOuQAAAAAAAA65AAAAAAAAABAAAAReqQAAAAAAAA6pAAAAAAAAABAAAASg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADskAAAAAAAAOyQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2992,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAAOqQAAAAAAAA65AAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqkAAAAAAAAOqQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2993,
					1,
					"left_delete",
					null,
					"AQAAAOqQAAAAAAAA6pAAAAAAAAABAAAAag",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrkAAAAAAAAOuQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2994,
					1,
					"insert",
					{
						"characters": "ect.assign("
					},
					"CwAAAOqQAAAAAAAA65AAAAAAAAAAAAAA65AAAAAAAADskAAAAAAAAAAAAADskAAAAAAAAO2QAAAAAAAAAAAAAO2QAAAAAAAA7pAAAAAAAAAAAAAA7pAAAAAAAADvkAAAAAAAAAAAAADvkAAAAAAAAPCQAAAAAAAAAAAAAPCQAAAAAAAA8ZAAAAAAAAAAAAAA8ZAAAAAAAADykAAAAAAAAAAAAADykAAAAAAAAPOQAAAAAAAAAAAAAPOQAAAAAAAA9JAAAAAAAAAAAAAA9JAAAAAAAAD1kAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqkAAAAAAAAOqQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2995,
					1,
					"insert",
					{
						"characters": "catchable,"
					},
					"CgAAAPWQAAAAAAAA9pAAAAAAAAAAAAAA9pAAAAAAAAD3kAAAAAAAAAAAAAD3kAAAAAAAAPiQAAAAAAAAAAAAAPiQAAAAAAAA+ZAAAAAAAAAAAAAA+ZAAAAAAAAD6kAAAAAAAAAAAAAD6kAAAAAAAAPuQAAAAAAAAAAAAAPuQAAAAAAAA/JAAAAAAAAAAAAAA/JAAAAAAAAD9kAAAAAAAAAAAAAD9kAAAAAAAAP6QAAAAAAAAAAAAAP6QAAAAAAAA/5AAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1kAAAAAAAAPWQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2996,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAP+QAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAABkQAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/kAAAAAAAAP+QAAAAAAAAAAAAAAAA8L8"
				],
				[
					2997,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAGRAAAAAAAAApEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABkQAAAAAAAAGRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3000,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AgAAABKRAAAAAAAAE5EAAAAAAAAAAAAAE5EAAAAAAAATkQAAAAAAAAUAAAAoKSAgPQ",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASkQAAAAAAABeRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3002,
					1,
					"left_delete",
					null,
					"AQAAAB2RAAAAAAAAHZEAAAAAAAABAAAAOw",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAekQAAAAAAAB6RAAAAAAAA////////738"
				],
				[
					3003,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAB2RAAAAAAAAHpEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdkQAAAAAAAB2RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3004,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB6RAAAAAAAAH5EAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAekQAAAAAAAB6RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3006,
					2,
					"right_delete",
					null,
					"AgAAACSRAAAAAAAAJJEAAAAAAAABAAAAYySRAAAAAAAAJJEAAAAAAAABAAAAYQ",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkkQAAAAAAACSRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3010,
					1,
					"revert",
					null,
					"",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAElAAAAAAAAASUAAAAAAAAAAAAAAAAREA"
				],
				[
					3023,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AwAAAEmQAAAAAAAASpAAAAAAAAAAAAAASpAAAAAAAABKkAAAAAAAAAQAAAAgIC8vSpAAAAAAAABLkAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNkAAAAAAAAEmQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3026,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAG2QAAAAAAAAbpAAAAAAAAAAAAAAbpAAAAAAAABvkAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtkAAAAAAAAG2QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3052,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKOQAAAAAAAApJAAAAAAAAAAAAAApJAAAAAAAAClkAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjkAAAAAAAAKOQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3054,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAKOQAAAAAAAApJAAAAAAAAAAAAAApJAAAAAAAAClkAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjkAAAAAAAAKOQAAAAAAAAAAAAAAAAJEA"
				],
				[
					3055,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKWQAAAAAAAAp5AAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClkAAAAAAAAKWQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3056,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAKaQAAAAAAAAqJAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmkAAAAAAAAKaQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3057,
					1,
					"insert",
					{
						"characters": "constructor"
					},
					"CwAAAKeQAAAAAAAAqJAAAAAAAAAAAAAAqJAAAAAAAACpkAAAAAAAAAAAAACpkAAAAAAAAKqQAAAAAAAAAAAAAKqQAAAAAAAAq5AAAAAAAAAAAAAAq5AAAAAAAACskAAAAAAAAAAAAACskAAAAAAAAK2QAAAAAAAAAAAAAK2QAAAAAAAArpAAAAAAAAAAAAAArpAAAAAAAACvkAAAAAAAAAAAAACvkAAAAAAAALCQAAAAAAAAAAAAALCQAAAAAAAAsZAAAAAAAAAAAAAAsZAAAAAAAACykAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnkAAAAAAAAKeQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3059,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAALOQAAAAAAAAtJAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzkAAAAAAAALOQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3060,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALSQAAAAAAAAtZAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0kAAAAAAAALSQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3061,
					2,
					"left_delete",
					null,
					"AgAAALSQAAAAAAAAtJAAAAAAAAABAAAAILOQAAAAAAAAs5AAAAAAAAABAAAAMA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1kAAAAAAAALWQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3062,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAALOQAAAAAAAAtJAAAAAAAAAAAAAAtJAAAAAAAAC1kAAAAAAAAAAAAAC1kAAAAAAAALaQAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzkAAAAAAAALOQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3063,
					1,
					"insert",
					{
						"characters": " self"
					},
					"BQAAALaQAAAAAAAAt5AAAAAAAAAAAAAAt5AAAAAAAAC4kAAAAAAAAAAAAAC4kAAAAAAAALmQAAAAAAAAAAAAALmQAAAAAAAAupAAAAAAAAAAAAAAupAAAAAAAAC7kAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2kAAAAAAAALaQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3072,
					1,
					"revert",
					null,
					"",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7kAAAAAAAALuQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3131,
					1,
					"paste",
					null,
					"AgAAAPePAAAAAAAAU5MAAAAAAAAAAAAAU5MAAAAAAABTkwAAAAAAAHADAAAKZXhwb3J0IGNvbnN0IGNhdGNoYWJsZSA9IGZ1bmN0aW9uIENhdGNoYWJsZShzZWxmKSB7CiAgYXNzZXJ0KGlzRnVuY3Rpb24oc2VsZikpOwoKICBpZighKHNlbGYgaW5zdGFuY2VvZiBjYXRjaGFibGUpKSBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc2VsZiwgY2F0Y2hhYmxlLnByb3RvdHlwZSk7CiAgaWYoJ2NvbnN0cnVjdG9yJyBpbiBzZWxmKSBzZWxmLmNvbnN0cnVjdG9yID0gY2F0Y2hhYmxlOwoKICByZXR1cm4gc2VsZjsKfTsKCk9iamVjdC5hc3NpZ24oY2F0Y2hhYmxlLCB7CiAgW1N5bWJvbC5zcGVjaWVzXTogY2F0Y2hhYmxlLAogIHByb3RvdHlwZTogT2JqZWN0LmFzc2lnbihmdW5jdGlvbiBDYXRjaGFibGUoKSB7fSwgewogICAgdGhlbihoYW5kbGVyKSB7CiAgICAgIHJldHVybiB0aGlzLmNvbnN0cnVjdG9yW1N5bWJvbC5zcGVjaWVzXSgoLi4uYXJncykgPT4gewogICAgICAgIGxldCByZXRWYWw7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIHJldFZhbCA9IHRoaXMoLi4uYXJncyk7CiAgICAgICAgfSBjYXRjaChlKSB7CiAgICAgICAgICB0aHJvdyBlOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICByZXR1cm4gaGFuZGxlcihyZXRWYWwpOwogICAgICB9KTsKICAgIH0sCiAgICBjYXRjaChoYW5kbGVyKSB7CiAgICAgIHJldHVybiB0aGlzLmNvbnN0cnVjdG9yW1N5bWJvbC5zcGVjaWVzXSgoLi4uYXJncykgPT4gewogICAgICAgIGxldCByZXRWYWw7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIHJldFZhbCA9IHRoaXMoLi4uYXJncyk7CiAgICAgICAgfSBjYXRjaChlKSB7CiAgICAgICAgICByZXR1cm4gaGFuZGxlcihlKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHJldFZhbDsKICAgICAgfSk7CiAgICB9CiAgfSkKfSk7",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3jwAAAAAAAGeTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3203,
					2,
					"left_delete",
					null,
					"AgAAAEqRAAAAAAAASpEAAAAAAAAJAAAAQ2F0Y2hhYmxlSZEAAAAAAABJkQAAAAAAAAEAAAAg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKkQAAAAAAAFORAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "quickjs-blob.c",
			"settings":
			{
				"buffer_size": 8449,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/deconflict.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_textcode.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/os.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/css3-selectors.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/predicate.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/std.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tree_walker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml/write.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml/read.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/c.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/deep.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/timers.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_predicate.js",
		"/home/roman/Schreibtisch/Ophtalmologische Gruppen.txt",
		"/home/roman/Schreibtisch/discogs-shipping-policies.js",
		"/home/roman/.config/sublime-text/Packages/JsPrettier/JsPrettier.sublime-settings",
		"/home/roman/.config/sublime-text/Packages/User/JsPrettier.sublime-settings",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/mmap-win32.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_treewalker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_css3_selectors.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/modules.sublime-project",
		"/home/roman/Projects/c-mcp3301/fast-arduino-lib/cores/fastarduino/devices/mcp3001.h",
		"/home/roman/Projects/c-mcp3301/mcp300x/mcp300x.c",
		"/home/roman/Projects/c-mcp3301/mcp3001/src/mcp3001.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/c-mcp3301/fast-arduino-lib/cores/fastarduino/devices/mcp3x0x.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/require.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tree-walker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml-write.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml-parse.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_css3_selector.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/callgrind.out.142973",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/src/tutf8e.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e/iso_8859_15.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/ecmascript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/csv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/include/libutf.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/src/libutf.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/debug.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stream.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,-*/inst/*,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"\"mem",
			"xml_debug",
			"^\\s*f*printf",
			"isFunction",
			"function asser",
			"catchable",
			"isFunct",
			"assert",
			"this",
			"try {",
			"try",
			"function [^ ]*filter",
			"function [^ ]*eys",
			"functiuon [^ ]*eys",
			"Keys",
			"function [^ ]*[Oo]bject",
			"ntries",
			"function union",
			"symmetric",
			"setInterval",
			"toArray",
			"IFREG",
			"statSync",
			"readSync",
			"\\((path|file)",
			"readlinkSync",
			"'getset'",
			"memoize",
			"search",
			"ListExports",
			"onlyUp",
			"getOpt",
			"FileSystemWritableFileStream",
			"waitFor",
			"timer",
			"Timer",
			"gettersetter",
			"getset\\(",
			"gettersetter",
			"gettersetter ",
			"gettersetter",
			"getset\\(",
			"gettersetter\\(",
			"memoize",
			" getset\\(",
			"getset\\(",
			"memoize",
			"getset\\(",
			"'');",
			"^(\\s*)console.log",
			"checkNode",
			"hier\\(",
			"hier",
			"hier\\(",
			"get attributes",
			"NamedNodeMap",
			"'NamedNodeMap'",
			"Attr ",
			"factories",
			"function Factory",
			"Factory",
			"for =",
			"Factory.for",
			"querySelectorAll",
			"applyPath",
			"deep\\.",
			"ReturnValuePathFunction",
			"ReturnValuePath",
			"iterate =",
			"deep\\.",
			"  static ([^=]*) = \\(?([^=\\(\\)]*)\\)? => {",
			"static ",
			"Util\\.",
			"_AND:",
			"\"and\"",
			"NodeList",
			"static cache",
			"constructor.cache",
			"\\.create",
			"os\\.",
			"getFileDescriptor",
			"misc\\.",
			"getFileDesc",
			"watch",
			"export \\*",
			"watch",
			"watchj",
			"\"watch",
			"RANDOM_RAND:",
			"isUndefined",
			"IS_INTEGER:",
			"IS_INSTANCE",
			"obj",
			"IS_CONSTRUCTOR:",
			"isConstructor",
			"isBigDec",
			"functionName",
			"dupArrayBuffer",
			"now",
			"getFunction",
			"functionName",
			"Util",
			"Util\\.",
			"abbreviate",
			"BITFIELD_BITS:",
			"BITFIELD_BITS",
			"\"",
			"bits",
			"Location",
			"JS_EVAL_FLAG_BACKTRACE_BARRIER",
			"repeater",
			"std.open",
			"std\\.",
			"pars",
			"parse2",
			"Util\\.",
			"isIterator",
			"Util\\.",
			"inspect",
			"Inexist",
			"printFiles",
			"list-impo",
			"Inexistent",
			"Inexistens",
			"printFiles",
			"list-import",
			"getOpt",
			"fileno"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"js_input_buffer",
			"\\1//console.log",
			"export function \\1(\\2) {",
			"export const ",
			"num",
			"fopen",
			"",
			"isCFuncList",
			"",
			"js_arguments_at\\(args, 1\\)",
			"js_arguments_at\\(args, 0\\)",
			"js_arguments_at\\(args, 1\\)",
			"js_arguments_at\\(args, 0\\)",
			"js_arguments_at\\(args, i\\)",
			"getSelectPos",
			"getSelectText",
			"g.",
			"globalThis.\\1 = ",
			"  ",
			"ret = \\1\\nbreak;",
			"ret = \\1",
			"ret = \\1\\nbreak;",
			"->filter",
			"\\1//console",
			"}\\n\\n\\1",
			"writeXML",
			"readXML",
			"fs.readFileSync",
			"process.release.name == 'quickjs' ? requireModule",
			"process.release.name == 'quickjs' ? requireModule(",
			"typeof \\1 == 'function'",
			"typeof(\\1) == 'function'",
			"inspect",
			"writeXML",
			"readXML",
			"(typeof \\1 == 'object' && \\1 != null)",
			"typeof \\1 == 'function'",
			"is\\1",
			"return TYPE_\\1",
			";\\\\n\" \"",
			"timers.",
			"",
			"\\1\\2(",
			"\\1function \\2(",
			"\\1//console.",
			"createModule",
			"static \\1\\2 {",
			"static ",
			"pnws",
			"sel = \\1;",
			"js_is_array",
			"if(debug_module_loader >= 2)",
			"INSPECT_LEVEL(opts, depth)",
			"BOOL compact =",
			"INSPECT_IS_COMPACT\\(opts, depth\\)",
			"path_skip_component(\\1, \\2, 0);",
			"-18s",
			"%-\\1s",
			"__FUNCTION__",
			".value",
			"->value",
			"\\1//printf",
			"stream",
			"_ENDIANNESS",
			"_ENDIAN",
			"be'",
			"le'",
			"'utf-",
			"-BE'",
			"'UTF-",
			"endian",
			"->endian == BIG",
			"transform_terminate",
			"transform_",
			"\\1",
			"type",
			"js_misc_duparraybuffer",
			"out.puts",
			"putline",
			"\\1: \\2,",
			"",
			"{ return",
			"\\\\\"",
			"\\1if(debug_module_loader) \\2",
			"",
			"BuiltinModule",
			"Text.store",
			"Tokens",
			"tokenModifiers",
			"xml_debug",
			"\\1",
			"xml_debug",
			"WRITABLE_GET_WRITER",
			"WRITABLE_CLOSE",
			"struct stream_reader",
			"readable_cancel",
			"READABLE_CANCEL",
			"readable_unlock",
			"writable_get_writer",
			"writable_\\1lock",
			"READABLE_",
			"writ",
			"FUNC_CLOSE",
			"js_reader_method",
			"js_writer_method",
			"js_stream_method",
			"STREAM_LOCKED",
			"->reader",
			"\"StreamReader",
			"Reader",
			"METHOD_",
			"array",
			"funcs.array",
			"js_resolve_functions",
			"js_resolvefunctions",
			"funcs[1]",
			"funcs[0]",
			"js_resolvingfunctions_free",
			"js_resolvingfunctions_ree",
			"length",
			"Chunk",
			"loc",
			"prevLength",
			"prevOffset",
			"compact(\\1)",
			"js_location_create",
			"lexer_token(",
			"token_lex("
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3259,
						"regions":
						{
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										3259,
										3259
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										3259,
										3259
									]
								],
								"scope": "col_gutter"
							},
							"col_008000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										3259,
										3259
									]
								],
								"scope": "col_008000FF"
							},
							"col_008000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_008000FF_circle.png",
								"regions":
								[
									[
										3259,
										3259
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										3259,
										3259
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										3259,
										3259
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"color_scheme": "Packages/Outline/outline-Dark.hidden-tmTheme",
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
							"function_name_status_row": 42,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									497,
									509
								],
								[
									553,
									568
								],
								[
									607,
									617
								],
								[
									659,
									671
								],
								[
									711,
									721
								],
								[
									763,
									775
								],
								[
									821,
									837
								],
								[
									1162,
									1168
								],
								[
									1663,
									1677
								],
								[
									1789,
									1803
								],
								[
									2112,
									2124
								],
								[
									2188,
									2204
								],
								[
									2301,
									2334
								],
								[
									2813,
									2833
								],
								[
									2914,
									2933
								],
								[
									3065,
									3089
								],
								[
									3231,
									3249
								],
								[
									3596,
									3612
								],
								[
									4367,
									4384
								],
								[
									5433,
									5454
								],
								[
									6311,
									6324
								],
								[
									7035,
									7057
								],
								[
									7765,
									7790
								],
								[
									8551,
									8565
								],
								[
									9406,
									9431
								],
								[
									10997,
									11011
								],
								[
									12119,
									12135
								],
								[
									13205,
									13234
								],
								[
									13473,
									13489
								],
								[
									14370,
									14386
								],
								[
									15489,
									15514
								],
								[
									16508,
									16522
								],
								[
									17691,
									17706
								],
								[
									18134,
									18149
								],
								[
									18691,
									18706
								],
								[
									19287,
									19307
								],
								[
									19662,
									19674
								],
								[
									20812,
									20827
								],
								[
									21767,
									21780
								],
								[
									22374,
									22387
								],
								[
									22824,
									22842
								],
								[
									23703,
									23715
								],
								[
									24121,
									24133
								],
								[
									24548,
									24563
								],
								[
									25636,
									25652
								],
								[
									25711,
									25733
								],
								[
									25913,
									25942
								],
								[
									26249,
									26272
								],
								[
									27894,
									27914
								],
								[
									28252,
									28271
								],
								[
									28490,
									28502
								],
								[
									30628,
									30645
								],
								[
									31243,
									31261
								],
								[
									32473,
									32493
								],
								[
									32954,
									32975
								],
								[
									33449,
									33464
								],
								[
									33957,
									33977
								],
								[
									34436,
									34448
								],
								[
									35215,
									35230
								],
								[
									36803,
									36815
								],
								[
									37803,
									37819
								],
								[
									41866,
									41879
								],
								[
									42925,
									42939
								],
								[
									43852,
									43866
								],
								[
									44225,
									44238
								],
								[
									46339,
									46352
								],
								[
									47293,
									47303
								],
								[
									49411,
									49424
								],
								[
									50803,
									50817
								],
								[
									51113,
									51125
								],
								[
									51276,
									51289
								],
								[
									51442,
									51456
								],
								[
									51627,
									51640
								],
								[
									51702,
									51724
								],
								[
									51936,
									51950
								],
								[
									62696,
									62708
								],
								[
									63115,
									63129
								],
								[
									63159,
									63173
								],
								[
									63223,
									63237
								]
							],
							"symlist":
							[
								"\tⓂ  GLOB_MAGCHAR … — macro object",
								"\tⓂ  GLOB_ALTDIRFUNC … — macro object",
								"\tⓂ  GLOB_BRACE … — macro object",
								"\tⓂ  GLOB_NOMAGIC … — macro object",
								"\tⓂ  GLOB_TILDE … — macro object",
								"\tⓂ  GLOB_ONLYDIR … — macro object",
								"\tⓂ  GLOB_TILDE_CHECK … — macro object",
								"—Ⓕ– memmem ( ) { … } — function",
								"\tⓉ  pcg32_random_t ; — typedef",
								"—Ⓕ– pcg32_random_r ( ) { … } — function",
								"—Ⓕ– pcg32_random ( ) { … } — function",
								"—Ⓕ– pcg32_init_state ( ) { … } — function",
								"—Ⓕ– pcg32_random_bounded_divisionless ( ) { … } — function",
								"—Ⓕ– js_pointer_free_func ( ) { … } — function",
								"—Ⓕ– js_string_free_func ( ) { … } — function",
								"—Ⓕ– js_arraybuffer_free_func ( ) { … } — function",
								"—Ⓕ– js_misc_getrelease ( ) { … } — function",
								"—Ⓕ– js_misc_tostring ( ) { … } — function",
								"—Ⓕ– js_misc_topointer ( ) { … } — function",
								"—Ⓕ– js_misc_toarraybuffer ( ) { … } — function",
								"—Ⓕ– js_misc_slice ( ) { … } — function",
								"—Ⓕ– js_misc_duparraybuffer ( ) { … } — function",
								"—Ⓕ– js_misc_resizearraybuffer ( ) { … } — function",
								"—Ⓕ– js_misc_concat ( ) { … } — function",
								"—Ⓕ– js_misc_searcharraybuffer ( ) { … } — function",
								"—Ⓕ– js_misc_memcpy ( ) { … } — function",
								"—Ⓕ– js_misc_fmemopen ( ) { … } — function",
								"—Ⓕ– js_misc_getperformancecounter ( ) { … } — function",
								"—Ⓕ– js_misc_proclink ( ) { … } — function",
								"—Ⓕ– js_misc_procread ( ) { … } — function",
								"—Ⓕ– js_misc_getprototypechain ( ) { … } — function",
								"—Ⓕ– js_misc_hrtime ( ) { … } — function",
								"—Ⓕ– js_misc_tempnam ( ) { … } — function",
								"—Ⓕ– js_misc_mkstemp ( ) { … } — function",
								"—Ⓕ– js_misc_fnmatch ( ) { … } — function",
								"—Ⓕ– js_misc_glob_errfunc ( ) { … } — function",
								"—Ⓕ– js_misc_glob ( ) { … } — function",
								"—Ⓕ– js_misc_wordexp ( ) { … } — function",
								"—Ⓕ– js_misc_uname ( ) { … } — function",
								"—Ⓕ– js_misc_ioctl ( ) { … } — function",
								"—Ⓕ– js_misc_screensize ( ) { … } — function",
								"—Ⓕ– js_misc_btoa ( ) { … } — function",
								"—Ⓕ– js_misc_atob ( ) { … } — function",
								"—Ⓕ– js_misc_compile ( ) { … } — function",
								"ImmutableClosure",
								"—Ⓕ– js_misc_immutable_free ( ) { … } — function",
								"—Ⓕ– js_misc_immutable_constructor ( ) { … } — function",
								"—Ⓕ– js_misc_immutable_class ( ) { … } — function",
								"—Ⓕ– js_misc_write_object ( ) { … } — function",
								"—Ⓕ– js_misc_read_object ( ) { … } — function",
								"—Ⓕ– js_misc_getx ( ) { … } — function",
								"—Ⓕ– js_misc_valuetype ( ) { … } — function",
								"—Ⓕ– js_misc_evalbinary ( ) { … } — function",
								"—Ⓕ– js_misc_opcode_array ( ) { … } — function",
								"—Ⓕ– js_misc_opcode_object ( ) { … } — function",
								"—Ⓕ– js_misc_opcodes ( ) { … } — function",
								"—Ⓕ– js_misc_get_bytecode ( ) { … } — function",
								"—Ⓕ– js_misc_atom ( ) { … } — function",
								"—Ⓕ– js_misc_classid ( ) { … } — function",
								"—Ⓕ– js_misc_type ( ) { … } — function",
								"—Ⓕ– js_misc_bitfield ( ) { … } — function",
								"—Ⓕ– js_misc_bitop ( ) { … } — function",
								"—Ⓕ– js_misc_random ( ) { … } — function",
								"—Ⓕ– js_misc_escape ( ) { … } — function",
								"—Ⓕ– js_misc_quote ( ) { … } — function",
								"—Ⓕ– js_misc_error ( ) { … } — function",
								"—Ⓕ– js_misc_is ( ) { … } — function",
								"—Ⓕ– js_misc_watch ( ) { … } — function",
								"—Ⓕ– js_misc_daemon ( ) { … } — function",
								"—Ⓕ– js_misc_fork ( ) { … } — function",
								"—Ⓕ– js_misc_vfork ( ) { … } — function",
								"—Ⓕ– js_misc_setsid ( ) { … } — function",
								"\tⓉ  JSAtExitEntry ; — typedef",
								"—Ⓕ– js_misc_atexit_handler ( ) { … } — function",
								"—Ⓕ– js_misc_atexit ( ) { … } — function",
								"—Ⓕ– js_misc_init ( ) { … } — function",
								"\tⓂ  JS_INIT_MODULE … — macro object",
								"\tⓂ  JS_INIT_MODULE … — macro object",
								"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658867253.79,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "/home/roman/Dokumente/Himmelsbeobachtung.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4298,
						"regions":
						{
						},
						"selection":
						[
							[
								4298,
								4298
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 79,
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage",
							"tabs_extra_last_activated": 1655334689.06,
							"tabs_extra_last_activated_sheet_index": 0
						},
						"translation.x": 0.0,
						"translation.y": 1065.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/timers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 528,
						"regions":
						{
						},
						"selection":
						[
							[
								25,
								25
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658887302.97,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "quickjs-misc.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 63523,
						"regions":
						{
						},
						"selection":
						[
							[
								54630,
								54630
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": -1,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658897751.59,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 37518.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "quickjs-xml.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23529,
						"regions":
						{
						},
						"selection":
						[
							[
								1470,
								1482
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 81,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658887304.34,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1142.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40210,
						"regions":
						{
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										20100,
										20104
									],
									[
										20154,
										20158
									],
									[
										20645,
										20649
									],
									[
										22835,
										22839
									],
									[
										23033,
										23037
									],
									[
										23264,
										23268
									],
									[
										24324,
										24328
									],
									[
										24437,
										24441
									],
									[
										24635,
										24639
									],
									[
										24719,
										24723
									],
									[
										24828,
										24832
									],
									[
										25055,
										25059
									],
									[
										25117,
										25121
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										20085,
										20085
									],
									[
										20109,
										20109
									],
									[
										20639,
										20639
									],
									[
										22809,
										22809
									],
									[
										22995,
										22995
									],
									[
										23233,
										23233
									],
									[
										24312,
										24312
									],
									[
										24427,
										24427
									],
									[
										24625,
										24625
									],
									[
										24676,
										24676
									],
									[
										24789,
										24789
									],
									[
										25029,
										25029
									]
								],
								"scope": "col_gutter"
							},
							"col_008000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										20093,
										20098
									],
									[
										20145,
										20150
									],
									[
										20598,
										20603
									],
									[
										22828,
										22833
									],
									[
										23014,
										23019
									],
									[
										23023,
										23028
									],
									[
										23257,
										23262
									],
									[
										24305,
										24310
									],
									[
										24414,
										24419
									],
									[
										24584,
										24589
									],
									[
										24712,
										24717
									],
									[
										24854,
										24859
									],
									[
										25048,
										25053
									],
									[
										25110,
										25115
									]
								],
								"scope": "col_008000FF"
							},
							"col_008000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_008000FF_circle.png",
								"regions":
								[
									[
										20085,
										20085
									],
									[
										20109,
										20109
									],
									[
										20592,
										20592
									],
									[
										22809,
										22809
									],
									[
										22995,
										22995
									],
									[
										23233,
										23233
									],
									[
										24293,
										24293
									],
									[
										24404,
										24404
									],
									[
										24574,
										24574
									],
									[
										24676,
										24676
									],
									[
										24789,
										24789
									],
									[
										25029,
										25029
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										20692,
										20696
									]
								],
								"scope": "col_00FFFFFF"
							},
							"col_00FFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFFF_circle.png",
								"regions":
								[
									[
										20686,
										20686
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										20554,
										20559
									],
									[
										21512,
										21517
									],
									[
										22934,
										22939
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										20548,
										20548
									],
									[
										21494,
										21494
									],
									[
										22923,
										22923
									]
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21521,
										21525
									],
									[
										21531,
										21535
									]
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
									[
										21494,
										21494
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										20088,
										20091
									],
									[
										20138,
										20141
									],
									[
										20577,
										20580
									],
									[
										22823,
										22826
									],
									[
										23006,
										23009
									],
									[
										23054,
										23057
									],
									[
										23114,
										23117
									],
									[
										23194,
										23197
									],
									[
										23252,
										23255
									],
									[
										24288,
										24291
									],
									[
										24367,
										24370
									],
									[
										24422,
										24425
									],
									[
										24444,
										24447
									],
									[
										24539,
										24542
									],
									[
										24707,
										24710
									],
									[
										24880,
										24883
									],
									[
										25043,
										25046
									],
									[
										25105,
										25108
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										20085,
										20085
									],
									[
										20109,
										20109
									],
									[
										20571,
										20571
									],
									[
										22809,
										22809
									],
									[
										22995,
										22995
									],
									[
										23041,
										23041
									],
									[
										23101,
										23101
									],
									[
										23164,
										23164
									],
									[
										23233,
										23233
									],
									[
										24276,
										24276
									],
									[
										24357,
										24357
									],
									[
										24404,
										24404
									],
									[
										24427,
										24427
									],
									[
										24529,
										24529
									],
									[
										24676,
										24676
									],
									[
										24789,
										24789
									],
									[
										25029,
										25029
									]
								],
								"scope": "col_gutter"
							},
							"col_FF00FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										20667,
										20674
									]
								],
								"scope": "col_FF00FFFF"
							},
							"col_FF00FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF00FFFF_circle.png",
								"regions":
								[
									[
										20661,
										20661
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										20621,
										20627
									]
								],
								"scope": "col_FFFF00FF"
							},
							"col_FFFF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFF00FF_circle.png",
								"regions":
								[
									[
										20615,
										20615
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										20714,
										20719
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										20708,
										20708
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								37413,
								37413
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1300,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1656475523.48,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 26120.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "quickjs-blob.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8449,
						"regions":
						{
						},
						"selection":
						[
							[
								2458,
								2477
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 121,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658500080.49,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2004.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.792447636134,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139621680902448)":
	{
		"height": 0.0
	},
	"output.Protocol(139700989780224)":
	{
		"height": 0.0
	},
	"output.Protocol(139713493134064)":
	{
		"height": 0.0
	},
	"output.Protocol(139717986633232)":
	{
		"height": 0.0
	},
	"output.Protocol(139737089962816)":
	{
		"height": 0.0
	},
	"output.Protocol(139742375937312)":
	{
		"height": 0.0
	},
	"output.Protocol(139743392563408)":
	{
		"height": 0.0
	},
	"output.Protocol(139869175351088)":
	{
		"height": 0.0
	},
	"output.Protocol(140020109919472)":
	{
		"height": 0.0
	},
	"output.Protocol(140057995247920)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752673856)":
	{
		"height": 0.0
	},
	"output.Protocol(140156677514432)":
	{
		"height": 0.0
	},
	"output.Protocol(140172266688720)":
	{
		"height": 0.0
	},
	"output.Protocol(140190208797904)":
	{
		"height": 0.0
	},
	"output.Protocol(140274144834032)":
	{
		"height": 0.0
	},
	"output.Protocol(140329701419328)":
	{
		"height": 0.0
	},
	"output.Protocol(140434608857040)":
	{
		"height": 0.0
	},
	"output.Protocol(140444770579072)":
	{
		"height": 0.0
	},
	"output.Protocol(140481508459424)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873537696)":
	{
		"height": 0.0
	},
	"output.Protocol(140517145188336)":
	{
		"height": 0.0
	},
	"output.Protocol(140557325510688)":
	{
		"height": 0.0
	},
	"output.Protocol(140569677099648)":
	{
		"height": 0.0
	},
	"output.Protocol(140571426803920)":
	{
		"height": 0.0
	},
	"output.Protocol(140585353818944)":
	{
		"height": 0.0
	},
	"output.Protocol(140589364043584)":
	{
		"height": 0.0
	},
	"output.Protocol(140603239164464)":
	{
		"height": 0.0
	},
	"output.Protocol(140614610715648)":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"util.js",
				"lib/util.js"
			],
			[
				"quickjs-deep",
				"quickjs-deep.c"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"lit-ex",
				"list-exports.js"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"dom",
				"lib/dom.js"
			],
			[
				"css3-",
				"lib/css3-selectors.js"
			],
			[
				"predicate.c",
				"src/predicate.c"
			],
			[
				"writ",
				"lib/xml/write.js"
			],
			[
				"xpath.js",
				"lib/xpath.js"
			],
			[
				"quickjs-bl",
				"quickjs-blob.c"
			],
			[
				"console.js",
				"lib/console.js"
			],
			[
				"c.js",
				"lib/lexer/c.js"
			],
			[
				"console.j",
				"lib/console.js"
			],
			[
				"inspect",
				"quickjs-inspect.c"
			],
			[
				"quickjs-le",
				"quickjs-lexer.c"
			],
			[
				"deep.c",
				"quickjs-deep.c"
			],
			[
				"prop",
				"src/property-enumeration.c"
			],
			[
				"proper",
				"include/property-enumeration.h"
			],
			[
				"test_dom",
				"tests/test_dom.js"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"predicate.h",
				"include/predicate.h"
			],
			[
				"quickjs-pred",
				"quickjs-predicate.c"
			],
			[
				"test_pred",
				"tests/test_predicate.js"
			],
			[
				"utils.h",
				"include/utils.h"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"char-u",
				"include/char-utils.h"
			],
			[
				"vector.h",
				"include/vector.h"
			],
			[
				"path.h",
				"include/path.h"
			],
			[
				"vecto",
				"src/vector.c"
			],
			[
				"events",
				"lib/events.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"extract",
				"extract-structs.js"
			],
			[
				"test_lexe",
				"tests/test_lexer.js"
			],
			[
				"test_css",
				"tests/test_css3_selectors.js"
			],
			[
				"events.j",
				"lib/events.js"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			],
			[
				"qjsm",
				"src/qjsm.c"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"resolve-import",
				"resolve-imports.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"require.js",
				"lib/require.js"
			],
			[
				"test_do",
				"tests/test_dom.js"
			],
			[
				"css3-se",
				"lib/css3-selectors.js"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"console.",
				"lib/console.js"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_dom.js",
				"tests/test_dom.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"write.js",
				"lib/xml/write.js"
			],
			[
				"css-",
				"lib/css3-selectors.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"resolve-impo",
				"resolve-imports.js"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"location.h",
				"include/location.h"
			],
			[
				"l",
				"quickjs-lexer.c"
			],
			[
				"path.c",
				"src/path.c"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"repl.j",
				"lib/repl.js"
			],
			[
				"js-u",
				"src/js-utils.c"
			],
			[
				"js-ut",
				"include/js-utils.h"
			],
			[
				"streams.js",
				"tests/test_streams.js"
			],
			[
				"buffer",
				"src/buffer-utils.c"
			],
			[
				"test_te",
				"tests/test_textcode.js"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"extract-str",
				"extract-structs.js"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"list-exp",
				"list-exports.js"
			],
			[
				"token.c",
				"token.c"
			],
			[
				"jsutil",
				"js-utils.c"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.h"
			],
			[
				"quickjs-location",
				"quickjs-location.h"
			],
			[
				"quickjs-loca",
				"quickjs-location.c"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"char-ut",
				"char-utils.h"
			],
			[
				"buff",
				"buffer-utils.h"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"location",
				"location.c"
			],
			[
				"quickjs-child",
				"quickjs-child-process.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"CMakeLi",
				"CMakeLists.txt"
			],
			[
				"defines.h",
				"defines.h"
			],
			[
				"queue.c",
				"queue.c"
			],
			[
				"extend",
				"lib/extendArray.js"
			],
			[
				"quickjs-sockets",
				"quickjs-sockets.c"
			],
			[
				"lexer",
				"quickjs-lexer.c"
			],
			[
				"buffer-ut",
				"buffer-utils.h"
			],
			[
				"ringbuf",
				"ringbuffer.h"
			],
			[
				"debug.h",
				"debug.h"
			],
			[
				"debug.c",
				"debug.c"
			],
			[
				"quickjs-lexer.c",
				"quickjs-lexer.c"
			],
			[
				"quickjs-loc",
				"quickjs-location.c"
			],
			[
				"xml.c",
				"quickjs-xml.c"
			],
			[
				"test-dia",
				"build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"resol",
				"resolve-imports.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"quickjs-mis",
				"quickjs-misc.c"
			],
			[
				"location.c",
				"quickjs-location.c"
			],
			[
				"extra",
				"extract-structs.js"
			],
			[
				"-inspe",
				"quickjs-inspect.c"
			],
			[
				"vector",
				"vector.h"
			],
			[
				"dom.j",
				"lib/dom.js"
			],
			[
				"res",
				"resolve-imports.js"
			],
			[
				"lexre",
				"lexer.c"
			],
			[
				"lexer.c",
				"quickjs-lexer.c"
			],
			[
				"pointer",
				"pointer.c"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"archive",
				"quickjs-archive.c"
			],
			[
				"pointer.c",
				"quickjs-pointer.c"
			],
			[
				"spect.c",
				"quickjs-inspect.c"
			],
			[
				"blob.c",
				"quickjs-blob.c"
			],
			[
				"repea",
				"quickjs-repeater.c"
			],
			[
				"loca",
				"quickjs-location.c"
			],
			[
				"bjson.c",
				"quickjs-bjson.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"predi",
				"predicate.h"
			],
			[
				"virtua",
				"virtual-properties.c"
			],
			[
				"pointre",
				"pointer.c"
			],
			[
				"child-",
				"child-process.c"
			],
			[
				"child-pro",
				"quickjs-child-process.c"
			],
			[
				"gpio.c",
				"quickjs-gpio.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 244.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
