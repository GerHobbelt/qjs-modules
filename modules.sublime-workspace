{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"JS_Get",
				"JS_GetPropertyUint32"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"JS_",
				"JS_ThrowTypeError"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"JS_New",
				"JS_NewCFunctionData"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_SetP",
				"JS_SetPropertyStr"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Throw",
				"JS_ThrowOutOfMemory"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"js_sys",
				"js_syscallerror_get"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_",
				"js_sockaddr_class_id"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"get",
				"getOwnPropertyNames"
			],
			[
				"JS_Thr",
				"JS_ThrowInternalError"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  slice = (x, s, e) =>\n  stringify = v =>\n  formatNumber = n =>\n  isNative = fn =>\n  util()\nAsyncFunction = function x()\nGeneratorFunction = function*()\nAsyncGeneratorFunction = function*()\n  isAnyArrayBuffer(v)\n  isArrayBuffer(v)\n  isBigInt64Array(v)\n  isBigUint64Array(v)\n  isDate(v)\n  isFloat32Array(v)\n  isFloat64Array(v)\n  isInt8Array(v)\n  isInt16Array(v)\n  isInt32Array(v)\n  isMap(v)\n  isPromise(v)\n  isProxy(v)\n  isRegExp(v)\n  isSet(v)\n  isSharedArrayBuffer(v)\n  isUint8Array(v)\n  isUint8ClampedArray(v)\n  isUint16Array(v)\n  isUint32Array(v)\n  isWeakMap(v)\n  isWeakSet(v)\n  isDataView(v)\n  isBooleanObject(v)\n  isAsyncFunction(v)\n  isGeneratorFunction(v)\n  isAsyncGeneratorFunction(v)\n  isNumberObject(v)\n  isBigIntObject(v)\n  isSymbolObject(v)\n  isNativeError(v)\n  isMapIterator(v)\n  isSetIterator(v)\n  isStringObject(v)\n  isArrayBufferView(v)\n  isArgumentsObject(v)\n  isBoxedPrimitive(v)\n  ctor =>\n  isGeneratorObject(v)\n  isTypedArray(v)\n  isModuleNamespaceObject(v)\n  isConstructor(v)\n  isIterator(v)\n  hasBuiltIn(o, m)\n  format(...args)\n  formatWithOptions(opts, ...args)\n  formatWithOptionsInternal(o, v)\n  assert(actual, expected, message)\n  setInterval(callback, ms)\n  start()\n() =>\n  clearInterval(id)\n  memoize(fn)\n   (n, ...rest) =>\n  once(fn, thisArg, memoFn)\n   function(...args)\n  waitFor(ms)\n  resolve =>\n  define(obj, ...args)\n  weakAssign(obj, ...args)\n  getConstructorChain(obj)\n  hasPrototype(obj, proto)\n  filter(seq, pred, thisArg)\n  pred = (el, i) =>\n   (f, arr = [], length = f.length) =>\n   (...args) =>\n  a =>\n  split(buf, ...points)\n  splitAt = (b, pos, len) =>\n  unique = (arr, cmp) =>\n   (el, i, arr) =>\n  item =>\n   (el, i, arr) =>\n  getFunctionArguments = fn =>\n   (offset = 0) =>\n   code =>\n   (offset = 0) =>\n   code =>\n   (offset = 0) =>\n   (red, green, blue) =>\n  getAnsiStyles()\n  value: (red, green, blue) =>\n  c =>\n  value: hex =>\n  character =>\n  value: hex =>\n  value: code =>\n  value: (red, green, blue) =>\n  value: hex =>\n  randInt(...args)\n  toBigInt(arg)\n  lazyProperty(obj, name, getter, opts = {})\n  function()\n   function()\n  v =>\n  replaceProperty(value)\n  getOpt(options = {}, args)\n  findOpt = arg =>\n([optname, option]) =>\n  opt =>\n  toUnixTime(dateObj, utc = false)\n  unixTime(utc = false)\n  fromUnixTime(epoch, utc = false)\n  range(...args)\n   (v, k) =>\n  n =>\n  repeater(n, what)\n()\n()\n  repeat(n, what)\n  chunkArray(arr, size)\n  fn = (a, v, i) =>",
			"settings":
			{
				"buffer_size": 2407,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					111,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAV3JpdGVGaWxlKGZpbGUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogIHN0ZCA9PgooKSA9PgogIGVycm9yID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					112,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								190,
								209
							],
							[
								690,
								701
							],
							[
								709,
								731
							],
							[
								1024,
								1034
							],
							[
								1214,
								1223
							],
							[
								1424,
								1434
							],
							[
								1569,
								1581
							],
							[
								1762,
								1772
							],
							[
								1828,
								1838
							],
							[
								1975,
								1986
							],
							[
								2021,
								2036
							],
							[
								2073,
								2081
							],
							[
								2135,
								2143
							],
							[
								2507,
								2523
							],
							[
								2813,
								2831
							],
							[
								3065,
								3083
							],
							[
								3354,
								3374
							],
							[
								4276,
								4292
							],
							[
								4381,
								4397
							],
							[
								5037,
								5051
							],
							[
								5525,
								5542
							],
							[
								6926,
								6943
							],
							[
								7558,
								7578
							],
							[
								8703,
								8715
							],
							[
								14794,
								14805
							],
							[
								15605,
								15622
							],
							[
								16844,
								16861
							],
							[
								18432,
								18444
							],
							[
								19656,
								19667
							],
							[
								19958,
								19972
							]
						],
						"symlist":
						[
							"js_inspect_tostring",
							"OutputValue",
							"character_classes_init",
							"yield_push",
							"yield_pop",
							"yield_next",
							"yield_return",
							"parse_getc",
							"parse_skip",
							"parse_until",
							"parse_skipspace",
							"parse_is",
							"find_tag",
							"xml_num_children",
							"xml_set_attr_value",
							"xml_set_attr_bytes",
							"xml_write_attributes",
							"xml_write_indent",
							"xml_write_string",
							"xml_write_text",
							"xml_write_element",
							"xml_close_element",
							"xml_enumeration_next",
							"js_xml_parse",
							"js_xml_read",
							"js_xml_write_tree",
							"js_xml_write_list",
							"js_xml_write",
							"js_xml_init",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAA+gEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					113,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								624,
								650
							],
							[
								709,
								729
							],
							[
								800,
								818
							],
							[
								1334,
								1359
							],
							[
								1561,
								1589
							],
							[
								1619,
								1623
							],
							[
								1642,
								1670
							],
							[
								1703,
								1722
							],
							[
								1781,
								1808
							],
							[
								1841,
								1860
							],
							[
								1935,
								1964
							],
							[
								2082,
								2105
							],
							[
								2245,
								2268
							],
							[
								2543,
								2565
							],
							[
								3106,
								3130
							],
							[
								3435,
								3459
							],
							[
								3488,
								3494
							],
							[
								3645,
								3669
							],
							[
								3698,
								3704
							],
							[
								3795,
								3821
							],
							[
								3848,
								3854
							],
							[
								3902,
								3908
							],
							[
								3965,
								3971
							],
							[
								4289,
								4315
							],
							[
								4428,
								4434
							],
							[
								4482,
								4488
							],
							[
								4738,
								4744
							],
							[
								4780,
								4786
							],
							[
								4887,
								4893
							],
							[
								4929,
								4935
							],
							[
								5032,
								5038
							],
							[
								5545,
								5573
							],
							[
								5622,
								5643
							],
							[
								5717,
								5738
							],
							[
								5799,
								5820
							],
							[
								5893,
								5939
							],
							[
								5988,
								5994
							],
							[
								6068,
								6074
							],
							[
								6140,
								6146
							],
							[
								6217,
								6239
							],
							[
								6890,
								6912
							],
							[
								7075,
								7103
							],
							[
								7157,
								7175
							],
							[
								7803,
								7821
							],
							[
								8084,
								8101
							],
							[
								8530,
								8547
							],
							[
								8737,
								8753
							],
							[
								8846,
								8852
							],
							[
								9358,
								9376
							],
							[
								9470,
								9486
							],
							[
								9587,
								9626
							],
							[
								9969,
								9973
							],
							[
								10128,
								10135
							],
							[
								10204,
								10215
							],
							[
								10643,
								10661
							],
							[
								12130,
								12134
							],
							[
								12470,
								12486
							],
							[
								12624,
								12632
							],
							[
								12998,
								13004
							],
							[
								13079,
								13092
							],
							[
								13192,
								13196
							],
							[
								13527,
								13533
							],
							[
								13611,
								13617
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(acc, col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"i =>",
							"(acc, tok, i) =>",
							"index =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAOADAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					114,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
						"symkeys":
						[
							[
								527,
								553
							],
							[
								612,
								632
							],
							[
								703,
								721
							],
							[
								1237,
								1262
							],
							[
								1463,
								1491
							],
							[
								1521,
								1525
							],
							[
								1544,
								1572
							],
							[
								1605,
								1624
							],
							[
								1683,
								1710
							],
							[
								1743,
								1762
							],
							[
								1837,
								1866
							],
							[
								1984,
								2007
							],
							[
								2147,
								2170
							],
							[
								2445,
								2467
							],
							[
								3008,
								3032
							],
							[
								3337,
								3361
							],
							[
								3390,
								3396
							],
							[
								3547,
								3571
							],
							[
								3600,
								3606
							],
							[
								3697,
								3723
							],
							[
								3750,
								3756
							],
							[
								3804,
								3810
							],
							[
								3867,
								3873
							],
							[
								4191,
								4217
							],
							[
								4330,
								4336
							],
							[
								4384,
								4390
							],
							[
								4640,
								4646
							],
							[
								4682,
								4688
							],
							[
								4789,
								4795
							],
							[
								4831,
								4837
							],
							[
								4934,
								4940
							],
							[
								5447,
								5475
							],
							[
								5524,
								5545
							],
							[
								5619,
								5640
							],
							[
								5701,
								5722
							],
							[
								5795,
								5841
							],
							[
								5890,
								5896
							],
							[
								5970,
								5976
							],
							[
								6042,
								6048
							],
							[
								6119,
								6141
							],
							[
								6807,
								6829
							],
							[
								6992,
								7020
							],
							[
								7076,
								7094
							],
							[
								7505,
								7523
							],
							[
								7597,
								7614
							],
							[
								7865,
								7882
							],
							[
								8072,
								8088
							],
							[
								8181,
								8187
							],
							[
								8703,
								8721
							],
							[
								8815,
								8831
							],
							[
								8932,
								8971
							],
							[
								9314,
								9318
							],
							[
								9473,
								9480
							],
							[
								9549,
								9560
							],
							[
								9761,
								9779
							],
							[
								11073,
								11077
							],
							[
								11413,
								11429
							],
							[
								11569,
								11577
							],
							[
								11916,
								11922
							],
							[
								11997,
								12010
							],
							[
								12110,
								12114
							],
							[
								12272,
								12278
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(acc, col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"i =>",
							"(acc, tok, i) =>",
							"index =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAwAAQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CkJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCih0eXBlLCBsZXhlbWUsIHRvaykgPT4KSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQogIHRvayA9PgpFeHBvcnROYW1lKHNlcSkKICB0b2sgPT4KQWRkRXhwb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4KQWRkSW1wb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICAgKCkgPT4KICB0b2sgPT4KICAgKCkgPT4KICB0b2sgPT4KICAgKCkgPT4KUHJpbnRFUzZJbXBvcnQoaW1wKQogICAoeyBsb2NhbCwgZmlsZSB9KSA9PgogICAoeyBsb2NhbCwgZmlsZSB9KSA9PgogICAoeyBsb2NhbCwgZmlsZSB9KSA9PgpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgICgpID0+CiAgICgpID0+CiAgICgpID0+CiAgbWFpbiguLi5hcmdzKQpSZWxhdGl2ZVBhdGggPSBmaWxlID0+ClByb2Nlc3NGaWxlKGZpbGUpCiAgbG9nID0gKC4uLmFyZ3MpID0+CihhY2MsIG5hbWUsIGlkKSA9PgogIC5oYW5kbGVyID0gbGV4ID0+CiAgICh0b2ssIHByZWZpeCkgPT4KKGFjYywgY29sLCBpKSA9PgogICAoKSA9PgogIC5iZWdpbkNvZGUgPSAoKSA9PgogIGJhbGFuY2VyID0gKCkgPT4KICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICBzID0+CiAgcmVzZXQoKQogIGdldCBkZXB0aCgpCiAgc2hvd1Rva2VuID0gdG9rID0+CiAgaSA9PgooYWNjLCB0b2ssIGkpID0+CiAgaW5kZXggPT4KICBpbXAgPT4KKGFjYywgaW1wKSA9PgogIGIgPT4KICBpbXAgPT4KICBpbXAgPT4AAAAAAAAAANcDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					115,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								524,
								544
							],
							[
								640,
								660
							],
							[
								816,
								821
							],
							[
								826,
								841
							],
							[
								923,
								936
							],
							[
								984,
								1003
							],
							[
								1051,
								1066
							],
							[
								1114,
								1122
							],
							[
								1170,
								1178
							],
							[
								1226,
								1242
							],
							[
								1290,
								1300
							],
							[
								1465,
								1476
							],
							[
								1530,
								1542
							],
							[
								2249,
								2273
							],
							[
								2531,
								2574
							],
							[
								2760,
								2785
							],
							[
								3022,
								3067
							],
							[
								3171,
								3223
							],
							[
								3366,
								3399
							],
							[
								3538,
								3561
							],
							[
								3821,
								3846
							],
							[
								3960,
								3994
							],
							[
								4313,
								4333
							],
							[
								4485,
								4509
							],
							[
								4708,
								4726
							],
							[
								4768,
								4789
							],
							[
								4834,
								4856
							],
							[
								4917,
								4939
							],
							[
								5098,
								5144
							],
							[
								5770,
								5827
							],
							[
								6602,
								6625
							],
							[
								6705,
								6731
							],
							[
								6842,
								6871
							],
							[
								6970,
								7009
							],
							[
								7060,
								7115
							],
							[
								7249,
								7292
							],
							[
								7613,
								7640
							],
							[
								7687,
								7715
							],
							[
								7763,
								7791
							],
							[
								7839,
								7877
							],
							[
								7935,
								7963
							],
							[
								8061,
								8096
							],
							[
								8151,
								8177
							],
							[
								8223,
								8268
							],
							[
								8758,
								8774
							],
							[
								8833,
								8872
							],
							[
								8984,
								9024
							],
							[
								9137,
								9175
							],
							[
								9280,
								9304
							],
							[
								9387,
								9407
							],
							[
								9435,
								9441
							],
							[
								9523,
								9562
							],
							[
								9668,
								9693
							],
							[
								9776,
								9796
							],
							[
								9825,
								9831
							],
							[
								9914,
								9954
							],
							[
								10304,
								10317
							],
							[
								10342,
								10363
							],
							[
								10436,
								10449
							],
							[
								10606,
								10614
							],
							[
								10703,
								10718
							],
							[
								10876,
								10886
							],
							[
								10978,
								10995
							],
							[
								11153,
								11165
							],
							[
								11255,
								11269
							],
							[
								11428,
								11437
							],
							[
								11513,
								11528
							],
							[
								11685,
								11695
							],
							[
								11744,
								11764
							],
							[
								11847,
								11860
							],
							[
								11880,
								11890
							],
							[
								12195,
								12274
							],
							[
								12482,
								12494
							],
							[
								12544,
								12556
							],
							[
								13087,
								13093
							],
							[
								13803,
								13836
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, options = {})",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = 'r', mode = 0o644)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"inotify_event",
							"constructor(obj = {})",
							"set wd(value)",
							"get wd()",
							"set mask(value)",
							"get mask()",
							"set cookie(value)",
							"get cookie()",
							"set len(value)",
							"get len()",
							"set name(value)",
							"get name()",
							"static from(address)",
							"inotify_event",
							"toString()",
							" function watch(filename, options = {}, callback = (eventType, filename) => {})",
							" filename =>",
							" filename =>",
							" () =>",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADXAwAAQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CkJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCih0eXBlLCBsZXhlbWUsIHRvaykgPT4KSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQogIHRvayA9PgpFeHBvcnROYW1lKHNlcSkKICB0b2sgPT4KQWRkRXhwb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4KQWRkSW1wb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICAgKCkgPT4KICB0b2sgPT4KICAgKCkgPT4KICB0b2sgPT4KICAgKCkgPT4KUHJpbnRFUzZJbXBvcnQoaW1wKQogICAoeyBsb2NhbCwgZmlsZSB9KSA9PgogICAoeyBsb2NhbCwgZmlsZSB9KSA9PgogICAoeyBsb2NhbCwgZmlsZSB9KSA9PgpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgICgpID0+CiAgICgpID0+CiAgICgpID0+CiAgbWFpbiguLi5hcmdzKQpSZWxhdGl2ZVBhdGggPSBmaWxlID0+ClByb2Nlc3NGaWxlKGZpbGUpCiAgbG9nID0gKC4uLmFyZ3MpID0+CihhY2MsIG5hbWUsIGlkKSA9PgogIC5oYW5kbGVyID0gbGV4ID0+CiAgICh0b2ssIHByZWZpeCkgPT4KKGFjYywgY29sLCBpKSA9PgogICAoKSA9PgogIC5iZWdpbkNvZGUgPSAoKSA9PgogIGJhbGFuY2VyID0gKCkgPT4KICBzZWxmID0gZnVuY3Rpb24gUGFyZW50aGVzZUJhbGFuY2VyKHRvaykKICBzID0+CiAgcmVzZXQoKQogIGdldCBkZXB0aCgpCiAgc2hvd1Rva2VuID0gdG9rID0+CiAgaSA9PgooYWNjLCB0b2ssIGkpID0+CiAgaW5kZXggPT4KICBpbXAgPT4KKGFjYywgaW1wKSA9PgogIGIgPT4KICBpbXAgPT4AAAAAAAAAAFcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					116,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
						"symkeys":
						[
							[
								555,
								574
							],
							[
								700,
								719
							],
							[
								884,
								904
							],
							[
								1091,
								1101
							],
							[
								1116,
								1133
							],
							[
								1372,
								1391
							],
							[
								1593,
								1609
							],
							[
								1892,
								1918
							],
							[
								2833,
								2856
							],
							[
								3261,
								3280
							],
							[
								3936,
								3957
							],
							[
								5451,
								5469
							],
							[
								6662,
								6680
							],
							[
								7434,
								7457
							],
							[
								7843,
								7867
							],
							[
								8264,
								8292
							],
							[
								9178,
								9199
							],
							[
								10420,
								10446
							],
							[
								14044,
								14063
							],
							[
								15751,
								15765
							]
						],
						"symlist":
						[
							"tree_walker_methods",
							"tree_walker_getters",
							"tree_iterator_return",
							"TreeWalker",
							"tree_walker_reset",
							"tree_walker_setroot",
							"tree_walker_dump",
							"js_tree_walker_constructor",
							"js_tree_walker_tostring",
							"js_tree_walker_next",
							"js_tree_walker_method",
							"js_tree_walker_get",
							"js_tree_walker_set",
							"js_tree_walker_iterator",
							"js_tree_walker_finalizer",
							"js_tree_iterator_constructor",
							"js_tree_iterator_next",
							"js_tree_iterator_finalizer",
							"js_tree_walker_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABXBgAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGJ1ZmZlcihsZW5ndGgpCiAgYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCiAgYnVmZmVyU2l6ZShidWYpCiAgYnVmZmVyVG9TdHJpbmcoYnVmLCBvZmZzZXQsIGxlbmd0aCkKICBmb3BlbihmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKICBmZG9wZW4oZmQsIGZsYWdzID0gJ3InKQogIHB1dHMoZmQsIHN0cikKICBmbHVzaFN5bmMoZmlsZSkKICBzZWVrKGZkLCBvZmZzZXQsIHdoZW5jZSkKICB0ZWxsKGZpbGUpCiAgc2l6ZVN5bmMoZmlsZSkKICBnZXRjd2QoKQogIGNoZGlyKHBhdGgpCiAgaXNhdHR5KGZpbGUpCiAgZmlsZW5vKGZpbGUpCiAgcmVhZEZpbGVTeW5jKGZpbGVuYW1lLCBvcHRpb25zID0ge30pCiAgd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKICBjbG9zZVN5bmMoZmQpCiAgZXhpc3RzU3luYyhwYXRoKQogIGxzdGF0U3luYyhwYXRoLCBjYikKICBta2RpclN5bmMocGF0aCwgbW9kZSA9IDBvNzc3KQogIG9wZW5TeW5jKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIHJlYWRTeW5jKGZkLCBidWYsIG9mZnNldCwgbGVuZ3RoKQogIHJlYWRkaXJTeW5jKHBhdGgpCiAgcmVhZGxpbmtTeW5jKHBhdGgpCiAgcmVhbHBhdGhTeW5jKHBhdGgpCiAgcmVuYW1lU3luYyhvbGRuYW1lLCBuZXduYW1lKQogIHN0YXRTeW5jKHBhdGgsIGNiKQogIHN5bWxpbmtTeW5jKHRhcmdldCwgcGF0aCkKICB1bmxpbmtTeW5jKHBhdGgpCiAgd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKICBwaXBlKCkKICBzZXRSZWFkSGFuZGxlcihmaWxlLCBoYW5kbGVyKQogIHNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQogIG9uUmVhZChmaWxlLCBoYW5kbGVyID0gbnVsbCkKICB3YWl0UmVhZChmaWxlKQoocmVzb2x2ZSwgcmVqZWN0KSA9PgogICAoKSA9PgogIG9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCiAgd2FpdFdyaXRlKGZpbGUpCihyZXNvbHZlLCByZWplY3QpID0+CiAgICgpID0+CiAgcmVhZEFsbChpbnB1dCwgYnVmU2l6ZSA9IDEwMjQpCiAgaW5vdGlmeV9ldmVudAogIGNvbnN0cnVjdG9yKG9iaiA9IHt9KQogIHNldCB3ZCh2YWx1ZSkKICBnZXQgd2QoKQogIHNldCBtYXNrKHZhbHVlKQogIGdldCBtYXNrKCkKICBzZXQgY29va2llKHZhbHVlKQogIGdldCBjb29raWUoKQogIHNldCBsZW4odmFsdWUpCiAgZ2V0IGxlbigpCiAgc2V0IG5hbWUodmFsdWUpCiAgZ2V0IG5hbWUoKQogIHN0YXRpYyBmcm9tKGFkZHJlc3MpCiAgaW5vdGlmeV9ldmVudAogIHRvU3RyaW5nKCkKICB3YXRjaChmaWxlbmFtZSwgb3B0aW9ucyA9IHt9LCBjYWxsYmFjayA9IChldmVudFR5cGUsIGZpbGVuYW1lKSA9PiB7fSkKICAgZmlsZW5hbWUgPT4KICAgZmlsZW5hbWUgPT4KICAgKCkgPT4KRW5jb2RpbmcyQnl0ZXMoZW5jb2RpbmcpAAAAAAAAAADHAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					117,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								828,
								848
							],
							[
								1038,
								1054
							],
							[
								1108,
								1127
							],
							[
								1162,
								1178
							],
							[
								1238,
								1254
							],
							[
								1317,
								1351
							],
							[
								1374,
								1406
							],
							[
								1429,
								1472
							],
							[
								3301,
								3320
							],
							[
								3418,
								3434
							],
							[
								3496,
								3514
							],
							[
								3578,
								3597
							],
							[
								3662,
								3671
							],
							[
								3726,
								3743
							],
							[
								3806,
								3823
							],
							[
								3886,
								3900
							],
							[
								3960,
								3975
							],
							[
								4036,
								4051
							],
							[
								4112,
								4120
							],
							[
								4174,
								4186
							],
							[
								4244,
								4254
							],
							[
								4310,
								4321
							],
							[
								4378,
								4386
							],
							[
								4440,
								4462
							],
							[
								4530,
								4545
							],
							[
								4606,
								4628
							],
							[
								4696,
								4712
							],
							[
								4774,
								4790
							],
							[
								4852,
								4864
							],
							[
								4922,
								4934
							],
							[
								4992,
								5005
							],
							[
								5064,
								5082
							],
							[
								5140,
								5158
							],
							[
								5222,
								5244
							],
							[
								5312,
								5339
							],
							[
								5412,
								5429
							],
							[
								5486,
								5503
							],
							[
								5560,
								5577
							],
							[
								5624,
								5640
							],
							[
								5723,
								5739
							],
							[
								5811,
								5827
							],
							[
								5899,
								5916
							],
							[
								5973,
								5993
							],
							[
								6052,
								6072
							],
							[
								6231,
								6250
							],
							[
								6326,
								6333
							],
							[
								6362,
								6382
							],
							[
								6452,
								6467
							],
							[
								6528,
								6554
							],
							[
								6625,
								6641
							],
							[
								6697,
								6710
							],
							[
								6782,
								6808
							],
							[
								6854,
								6879
							],
							[
								6964,
								7006
							],
							[
								7140,
								7180
							],
							[
								10109,
								10152
							],
							[
								10533,
								10568
							],
							[
								10724,
								10742
							],
							[
								10772,
								10777
							],
							[
								10867,
								10894
							],
							[
								11013,
								11034
							],
							[
								11063,
								11079
							],
							[
								11172,
								11207
							],
							[
								11247,
								11265
							],
							[
								11452,
								11473
							],
							[
								11497,
								11507
							],
							[
								11546,
								11576
							],
							[
								11902,
								11936
							],
							[
								12237,
								12271
							],
							[
								12491,
								12525
							],
							[
								12591,
								12627
							],
							[
								12702,
								12719
							],
							[
								12878,
								12915
							],
							[
								12916,
								12930
							],
							[
								12936,
								12940
							],
							[
								13015,
								13047
							],
							[
								13075,
								13101
							],
							[
								13426,
								13448
							],
							[
								13486,
								13502
							],
							[
								13517,
								13524
							],
							[
								13546,
								13562
							],
							[
								13600,
								13628
							],
							[
								13847,
								13864
							],
							[
								13865,
								13874
							],
							[
								13926,
								13943
							],
							[
								13944,
								13953
							],
							[
								14013,
								14030
							],
							[
								14031,
								14054
							],
							[
								14110,
								14134
							],
							[
								16761,
								16789
							],
							[
								17220,
								17224
							],
							[
								17352,
								17365
							],
							[
								17681,
								17693
							],
							[
								17956,
								17969
							],
							[
								18074,
								18088
							],
							[
								18981,
								19009
							],
							[
								19125,
								19138
							],
							[
								19250,
								19276
							],
							[
								19456,
								19479
							],
							[
								19623,
								19675
							],
							[
								19769,
								19785
							],
							[
								19869,
								19880
							],
							[
								19993,
								19997
							],
							[
								20276,
								20309
							],
							[
								20423,
								20459
							],
							[
								20616,
								20632
							],
							[
								20646,
								20668
							],
							[
								20781,
								20787
							],
							[
								22149,
								22191
							],
							[
								22386,
								22417
							],
							[
								22467,
								22509
							],
							[
								22629,
								22653
							],
							[
								22873,
								22883
							],
							[
								22936,
								22940
							],
							[
								22979,
								23006
							],
							[
								23053,
								23065
							],
							[
								23135,
								23147
							],
							[
								23210,
								23235
							],
							[
								23280,
								23311
							],
							[
								23322,
								23339
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterator(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHAQAAICB0cmVlX3dhbGtlcl9tZXRob2RzCiAgdHJlZV93YWxrZXJfZ2V0dGVycwogIHRyZWVfaXRlcmF0b3JfcmV0dXJuClRyZWVXYWxrZXIKICB0cmVlX3dhbGtlcl9yZXNldAogIHRyZWVfd2Fsa2VyX3NldHJvb3QKICB0cmVlX3dhbGtlcl9kdW1wCiAganNfdHJlZV93YWxrZXJfY29uc3RydWN0b3IKICBqc190cmVlX3dhbGtlcl90b3N0cmluZwogIGpzX3RyZWVfd2Fsa2VyX25leHQKICBqc190cmVlX3dhbGtlcl9tZXRob2QKICBqc190cmVlX3dhbGtlcl9nZXQKICBqc190cmVlX3dhbGtlcl9zZXQKICBqc190cmVlX3dhbGtlcl9pdGVyYXRvcgogIGpzX3RyZWVfd2Fsa2VyX2ZpbmFsaXplcgogIGpzX3RyZWVfaXRlcmF0b3JfY29uc3RydWN0b3IKICBqc190cmVlX2l0ZXJhdG9yX25leHQKICBqc190cmVlX2l0ZXJhdG9yX2ZpbmFsaXplcgogIGpzX3RyZWVfd2Fsa2VyX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAGcJAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					118,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
						"symkeys":
						[
							[
								302,
								310
							],
							[
								351,
								359
							],
							[
								436,
								443
							],
							[
								516,
								529
							],
							[
								1471,
								1483
							],
							[
								1494,
								1519
							],
							[
								1825,
								1851
							],
							[
								2122,
								2140
							],
							[
								2357,
								2368
							],
							[
								2672,
								2679
							],
							[
								2741,
								2748
							],
							[
								2810,
								2817
							],
							[
								2876,
								2884
							],
							[
								2914,
								2925
							],
							[
								3028,
								3041
							],
							[
								3090,
								3099
							],
							[
								3126,
								3139
							],
							[
								3268,
								3283
							],
							[
								3445,
								3457
							],
							[
								3559,
								3575
							],
							[
								3771,
								3782
							],
							[
								3811,
								3827
							],
							[
								3959,
								3977
							],
							[
								4149,
								4164
							],
							[
								4279,
								4298
							],
							[
								4488,
								4496
							],
							[
								4592,
								4601
							],
							[
								4666,
								4675
							],
							[
								4739,
								4749
							],
							[
								4825,
								4834
							],
							[
								5704,
								5711
							],
							[
								5739,
								5754
							],
							[
								5861,
								5873
							],
							[
								6022,
								6028
							],
							[
								6035,
								6056
							],
							[
								6074,
								6097
							],
							[
								6119,
								6135
							],
							[
								6191,
								6207
							],
							[
								6243,
								6257
							],
							[
								6294,
								6309
							],
							[
								6358,
								6372
							],
							[
								6451,
								6462
							],
							[
								6545,
								6562
							],
							[
								6606,
								6625
							],
							[
								6681,
								6699
							],
							[
								6753,
								6766
							],
							[
								7004,
								7023
							],
							[
								7073,
								7097
							],
							[
								7170,
								7191
							],
							[
								7262,
								7273
							],
							[
								7738,
								7748
							],
							[
								8596,
								8614
							],
							[
								8644,
								8661
							],
							[
								8722,
								8740
							],
							[
								8849,
								8862
							],
							[
								8934,
								8948
							],
							[
								9290,
								9305
							],
							[
								9708,
								9726
							],
							[
								9755,
								9771
							],
							[
								9974,
								9986
							],
							[
								10062,
								10074
							],
							[
								10165,
								10177
							],
							[
								10234,
								10256
							],
							[
								10280,
								10293
							],
							[
								10327,
								10343
							],
							[
								10377,
								10392
							],
							[
								10447,
								10461
							],
							[
								10507,
								10521
							],
							[
								10568,
								10581
							],
							[
								10639,
								10653
							],
							[
								10713,
								10730
							],
							[
								10792,
								10811
							],
							[
								10871,
								10886
							],
							[
								10928,
								10941
							],
							[
								11017,
								11031
							],
							[
								11072,
								11086
							],
							[
								11117,
								11133
							],
							[
								11157,
								11172
							],
							[
								11249,
								11263
							],
							[
								11441,
								11458
							],
							[
								11650,
								11665
							],
							[
								11834,
								11844
							],
							[
								11971,
								11985
							],
							[
								12283,
								12294
							],
							[
								12399,
								12414
							],
							[
								12872,
								12884
							],
							[
								12989,
								13006
							],
							[
								13400,
								13415
							],
							[
								13487,
								13509
							],
							[
								13667,
								13688
							],
							[
								13842,
								13862
							],
							[
								14003,
								14023
							],
							[
								14160,
								14178
							],
							[
								14221,
								14239
							],
							[
								14428,
								14441
							],
							[
								14553,
								14569
							],
							[
								15004,
								15025
							],
							[
								15107,
								15130
							],
							[
								15213,
								15236
							],
							[
								15305,
								15329
							],
							[
								15413,
								15437
							],
							[
								15486,
								15512
							],
							[
								15703,
								15724
							],
							[
								15797,
								15823
							],
							[
								15985,
								15999
							],
							[
								16026,
								16049
							],
							[
								16112,
								16131
							],
							[
								16180,
								16200
							],
							[
								16245,
								16267
							],
							[
								16310,
								16331
							],
							[
								16372,
								16386
							],
							[
								16427,
								16441
							],
							[
								16485,
								16503
							],
							[
								16547,
								16562
							],
							[
								16606,
								16622
							],
							[
								16680,
								16698
							],
							[
								16746,
								16762
							],
							[
								16795,
								16808
							],
							[
								16854,
								16872
							],
							[
								16920,
								16947
							],
							[
								16973,
								16999
							],
							[
								17026,
								17045
							],
							[
								17105,
								17121
							],
							[
								17251,
								17264
							],
							[
								17316,
								17337
							],
							[
								17540,
								17553
							],
							[
								17597,
								17612
							],
							[
								17674,
								17687
							],
							[
								17752,
								17764
							],
							[
								17795,
								17810
							],
							[
								17861,
								17876
							],
							[
								17930,
								17945
							],
							[
								18110,
								18126
							],
							[
								18153,
								18174
							],
							[
								18223,
								18235
							],
							[
								18295,
								18311
							],
							[
								18362,
								18379
							],
							[
								18423,
								18441
							],
							[
								18491,
								18510
							],
							[
								18581,
								18597
							],
							[
								18647,
								18667
							],
							[
								18718,
								18735
							],
							[
								18769,
								18789
							],
							[
								18831,
								18847
							],
							[
								18893,
								18909
							],
							[
								18971,
								18992
							],
							[
								19046,
								19063
							],
							[
								19098,
								19126
							],
							[
								19148,
								19172
							],
							[
								19208,
								19227
							],
							[
								19269,
								19281
							],
							[
								19344,
								19363
							],
							[
								19408,
								19423
							],
							[
								19470,
								19483
							],
							[
								19564,
								19582
							],
							[
								19661,
								19675
							],
							[
								19905,
								19919
							],
							[
								20086,
								20104
							],
							[
								20162,
								20185
							],
							[
								20243,
								20268
							],
							[
								20338,
								20360
							],
							[
								20428,
								20453
							],
							[
								20529,
								20557
							],
							[
								20652,
								20678
							],
							[
								20734,
								20758
							],
							[
								20818,
								20844
							],
							[
								20910,
								20939
							],
							[
								21013,
								21038
							],
							[
								21098,
								21126
							],
							[
								21202,
								21226
							],
							[
								21289,
								21314
							],
							[
								21372,
								21397
							],
							[
								21481,
								21504
							],
							[
								21578,
								21599
							],
							[
								21925,
								21949
							],
							[
								22222,
								22244
							],
							[
								22373,
								22384
							],
							[
								22420,
								22434
							],
							[
								22451,
								22463
							],
							[
								22502,
								22515
							],
							[
								22559,
								22572
							],
							[
								22614,
								22627
							],
							[
								22683,
								22700
							],
							[
								22799,
								22815
							],
							[
								22949,
								22966
							],
							[
								22999,
								23022
							],
							[
								23055,
								23064
							],
							[
								23097,
								23106
							],
							[
								23139,
								23154
							],
							[
								23187,
								23199
							],
							[
								23232,
								23245
							],
							[
								23278,
								23292
							],
							[
								23340,
								23363
							],
							[
								23460,
								23473
							],
							[
								23840,
								23852
							],
							[
								23929,
								23942
							],
							[
								24123,
								24146
							],
							[
								24172,
								24197
							],
							[
								24235,
								24252
							],
							[
								24452,
								24468
							],
							[
								24674,
								24685
							],
							[
								24792,
								24803
							],
							[
								24846,
								24861
							],
							[
								24909,
								24925
							],
							[
								24983,
								24998
							],
							[
								25041,
								25055
							],
							[
								25101,
								25115
							],
							[
								25138,
								25149
							],
							[
								25186,
								25200
							],
							[
								25238,
								25250
							],
							[
								25286,
								25301
							],
							[
								25339,
								25355
							],
							[
								25394,
								25410
							],
							[
								25458,
								25474
							],
							[
								25528,
								25542
							],
							[
								25594,
								25607
							],
							[
								25676,
								25685
							],
							[
								25799,
								25820
							],
							[
								25973,
								25998
							],
							[
								26055,
								26078
							],
							[
								26337,
								26359
							],
							[
								26638,
								26649
							],
							[
								26684,
								26699
							],
							[
								26733,
								26753
							],
							[
								26794,
								26815
							],
							[
								26863,
								26878
							],
							[
								26913,
								26925
							],
							[
								26968,
								26984
							],
							[
								27017,
								27041
							],
							[
								27088,
								27112
							],
							[
								27167,
								27177
							],
							[
								27537,
								27552
							],
							[
								27563,
								27574
							],
							[
								27608,
								27622
							],
							[
								27658,
								27669
							],
							[
								27705,
								27714
							],
							[
								27750,
								27769
							],
							[
								27810,
								27828
							],
							[
								27907,
								27921
							],
							[
								27957,
								27969
							],
							[
								28005,
								28017
							],
							[
								28053,
								28066
							],
							[
								28113,
								28128
							],
							[
								28150,
								28166
							],
							[
								28217,
								28235
							],
							[
								28286,
								28300
							],
							[
								28351,
								28368
							],
							[
								28461,
								28477
							],
							[
								28542,
								28562
							],
							[
								28635,
								28654
							],
							[
								28731,
								28744
							],
							[
								28786,
								28804
							],
							[
								28849,
								28867
							],
							[
								28903,
								28920
							],
							[
								28965,
								28977
							],
							[
								29011,
								29025
							],
							[
								29077,
								29091
							],
							[
								29161,
								29172
							],
							[
								29254,
								29265
							],
							[
								29330,
								29340
							],
							[
								29352,
								29372
							],
							[
								29399,
								29414
							],
							[
								29445,
								29458
							],
							[
								29490,
								29505
							],
							[
								29540,
								29552
							],
							[
								29574,
								29585
							],
							[
								29606,
								29616
							],
							[
								29654,
								29673
							],
							[
								29702,
								29721
							],
							[
								29751,
								29766
							],
							[
								29791,
								29811
							],
							[
								29841,
								29854
							],
							[
								29900,
								29917
							],
							[
								29950,
								29964
							],
							[
								30000,
								30014
							],
							[
								30041,
								30059
							],
							[
								30107,
								30122
							],
							[
								30204,
								30227
							],
							[
								30441,
								30456
							],
							[
								30502,
								30518
							]
						],
						"symlist":
						[
							"basename",
							"offsetof",
							"inrange",
							"trim_dotslash",
							"JSPrecedence",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_MAGIC_FLAGS_DEF",
							"JS_CFUNC_DEF_FLAGS",
							"JS_CONSTANT",
							"MAX_NUM",
							"MIN_NUM",
							"ABS_NUM",
							"SIGN_NUM",
							"JS_IsModule",
							"IteratorValue",
							"Arguments",
							"arguments_new",
							"arguments_shift",
							"arguments_at",
							"arguments_shiftn",
							"JSArguments",
							"js_arguments_new",
							"js_arguments_shift",
							"js_arguments_at",
							"js_arguments_shiftn",
							"min_size",
							"abs_int64",
							"abs_int32",
							"sign_int32",
							"mod_int32",
							"time_us",
							"js_dbuf_init_rt",
							"js_dbuf_init",
							"RegExp",
							"regexp_flags_tostring",
							"regexp_flags_fromstring",
							"regexp_from_argv",
							"regexp_from_dbuf",
							"regexp_compile",
							"regexp_to_value",
							"regexp_free_rt",
							"regexp_free",
							"js_global_get_str",
							"js_global_get_str_n",
							"js_global_get_atom",
							"js_global_new",
							"js_global_prototype",
							"js_global_prototype_func",
							"js_global_static_func",
							"value_types",
							"value_mask",
							"js_value_type_flag",
							"js_value_type_get",
							"js_value_type2flag",
							"js_value_type",
							"js_value_types",
							"js_value_typeof",
							"js_value_type_name",
							"js_value_typestr",
							"js_value_ptr",
							"js_value_obj",
							"js_value_tag",
							"js_value_has_ref_count",
							"js_value_free",
							"js_value_free_rt",
							"js_value_equals",
							"js_value_print",
							"js_value_clone",
							"js_values_dup",
							"js_values_free",
							"js_values_toarray",
							"js_values_fromarray",
							"js_value_fwrite",
							"js_value_dump",
							"js_cstring_dup",
							"js_cstring_ptr",
							"js_cstring_value",
							"js_cstring_dump",
							"js_cstring_new",
							"js_cstring_newlen",
							"js_cstring_free",
							"js_toint64",
							"js_tostringlen",
							"js_tostring",
							"js_towstringlen",
							"js_towstring",
							"js_value_tostring",
							"js_value_tosize",
							"js_value_todouble_free",
							"js_value_toint64_free",
							"js_value_tobool_free",
							"js_value_toatom_free",
							"js_value_from_char",
							"js_value_cmpstring",
							"JS_VALUE_FREE",
							"JS_VALUE_FREE_RT",
							"js_object_tmpmark_set",
							"js_object_tmpmark_clear",
							"js_object_tmpmark_isset",
							"js_runtime_exception_set",
							"js_runtime_exception_get",
							"js_runtime_exception_clear",
							"js_propertyenums_free",
							"js_propertydescriptor_free",
							"js_symbol_ctor",
							"js_symbol_invoke_static",
							"js_symbol_to_string",
							"js_symbol_to_cstring",
							"js_symbol_static_value",
							"js_symbol_static_atom",
							"js_is_iterable",
							"js_is_iterator",
							"js_iterator_method",
							"js_iterator_new",
							"js_iterator_next",
							"js_iterator_result",
							"js_iterator_then",
							"js_symbol_for",
							"js_symbol_for_atom",
							"js_symbol_operatorset_value",
							"js_symbol_operatorset_atom",
							"js_operators_create",
							"js_int64_default",
							"js_number_new",
							"js_new_bool_or_number",
							"js_atom_isint",
							"js_atom_fromint",
							"js_atom_toint",
							"js_atom_from",
							"js_atom_toint64",
							"js_atom_toint32",
							"js_atom_tovalue",
							"js_atom_tobinary",
							"js_atom_to_cstringlen",
							"js_atom_dump",
							"js_atom_is_index",
							"js_atom_is_length",
							"js_object_tostring",
							"js_object_tostring2",
							"js_function_name",
							"js_function_tostring",
							"js_function_cfunc",
							"js_function_isnative",
							"js_function_argc",
							"js_function_bind",
							"js_function_bind_this",
							"js_function_throw",
							"js_function_return_undefined",
							"js_function_return_value",
							"js_object_classname",
							"js_object_is",
							"js_object_construct",
							"js_object_error",
							"js_object_new",
							"js_object_function",
							"js_object_same",
							"js_get_classid",
							"js_has_propertystr",
							"js_get_propertystr_bool",
							"js_set_propertyint_string",
							"js_set_propertyint_int",
							"js_set_propertystr_string",
							"js_set_propertystr_stringlen",
							"js_get_propertyint_cstring",
							"js_get_propertyint_int32",
							"js_get_propertystr_cstring",
							"js_get_propertystr_cstringlen",
							"js_get_propertystr_string",
							"js_get_propertystr_stringlen",
							"js_get_propertystr_int32",
							"js_get_propertystr_uint64",
							"js_get_propertydescriptor",
							"js_get_propertystr_atom",
							"js_set_inspect_method",
							"js_set_tostringtag_value",
							"js_set_tostringtag_str",
							"js_class_id",
							"js_class_newid",
							"js_class_get",
							"js_class_atom",
							"js_class_name",
							"js_class_find",
							"js_object_isclass",
							"js_value_isclass",
							"js_is_arraybuffer",
							"js_is_sharedarraybuffer",
							"js_is_map",
							"js_is_set",
							"js_is_generator",
							"js_is_regexp",
							"js_is_promise",
							"js_is_dataview",
							"js_is_null_or_undefined",
							"js_is_falsish",
							"js_is_truish",
							"js_is_nullish",
							"js_typedarray_prototype",
							"js_typedarray_constructor",
							"js_is_basic_array",
							"js_is_typedarray",
							"js_is_array",
							"js_is_input",
							"js_propenum_cmp",
							"js_object_equals",
							"js_array_length",
							"js_array_clear",
							"js_strv_length",
							"js_strv_dup",
							"js_strv_free_n",
							"js_strv_free",
							"js_strv_free_rt",
							"js_strv_to_array",
							"js_intv_to_array",
							"js_array_to_argv",
							"js_array_copys",
							"js_strv_copys",
							"js_invoke",
							"js_arraybuffer_length",
							"js_arraybuffer_bytelength",
							"js_find_cfunction_entry",
							"js_find_cfunction_atom",
							"js_date_new",
							"js_date_from_ms",
							"js_date_from_time_ns",
							"js_date_from_timespec",
							"js_date_gettime",
							"js_date_time",
							"js_date_timespec",
							"js_arraybuffer_freevalue",
							"js_arraybuffer_fromvalue",
							"js_map_new",
							"ImportDirective",
							"module_name",
							"module_namestr",
							"module_func",
							"module_ns",
							"module_exports_find",
							"module_exports_get",
							"module_exports",
							"module_value",
							"module_entry",
							"module_object",
							"js_modules_list",
							"js_modules_array",
							"js_modules_entries",
							"js_modules_map",
							"js_modules_object",
							"js_module_search",
							"js_module_search_ext",
							"js_module_normalize",
							"js_module_def",
							"js_module_find_fwd",
							"js_module_find_rev",
							"js_module_indexof",
							"js_module_at",
							"js_eval_module",
							"js_eval_binary",
							"js_eval_buf",
							"js_eval_str",
							"js_time_ms",
							"js_interrupt_handler",
							"js_timer_unlink",
							"js_timer_free",
							"js_call_handler",
							"js_sab_alloc",
							"js_sab_free",
							"js_sab_dup",
							"js_new_message_pipe",
							"js_dup_message_pipe",
							"js_free_message",
							"js_free_message_pipe",
							"js_error_dump",
							"js_error_tostring",
							"js_error_print",
							"js_error_stack",
							"js_promise_resolve",
							"js_promise_then",
							"js_promise_resolve_then",
							"js_promise_wrap",
							"js_promise_adopt"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABnCQAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzQ29uc3RydWN0b3IodikKICBpc0l0ZXJhdG9yKHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogICAobiwgLi4ucmVzdCkgPT4KICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgd2FpdEZvcihtcykKICByZXNvbHZlID0+CiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBoYXNQcm90b3R5cGUob2JqLCBwcm90bykKICBmaWx0ZXIoc2VxLCBwcmVkLCB0aGlzQXJnKQogIHByZWQgPSAoZWwsIGkpID0+CiAgIChmLCBhcnIgPSBbXSwgbGVuZ3RoID0gZi5sZW5ndGgpID0+CiAgICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAgKGVsLCBpLCBhcnIpID0+CiAgaXRlbSA9PgogICAoZWwsIGksIGFycikgPT4KICBnZXRGdW5jdGlvbkFyZ3VtZW50cyA9IGZuID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICBjb2RlID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICBjb2RlID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICBnZXRBbnNpU3R5bGVzKCkKICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgYyA9PgogIHZhbHVlOiBoZXggPT4KICBjaGFyYWN0ZXIgPT4KICB2YWx1ZTogaGV4ID0+CiAgdmFsdWU6IGNvZGUgPT4KICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgdmFsdWU6IGhleCA9PgogIHJhbmRJbnQoLi4uYXJncykKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogICBmdW5jdGlvbigpCiAgdiA9PgogIHJlcGxhY2VQcm9wZXJ0eSh2YWx1ZSkKICBnZXRPcHQob3B0aW9ucyA9IHt9LCBhcmdzKQogIGZpbmRPcHQgPSBhcmcgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG9wdCA9PgogIHRvVW5peFRpbWUoZGF0ZU9iaiwgdXRjID0gZmFsc2UpCiAgdW5peFRpbWUodXRjID0gZmFsc2UpCiAgZnJvbVVuaXhUaW1lKGVwb2NoLCB1dGMgPSBmYWxzZSkKICByYW5nZSguLi5hcmdzKQogICAodiwgaykgPT4KICBuID0+CiAgcmVwZWF0ZXIobiwgd2hhdCkKKCkKKCkKICByZXBlYXQobiwgd2hhdCkKICBjaHVua0FycmF5KGFyciwgc2l6ZSkKICBmbiA9IChhLCB2LCBpKSA9PgAAAAAAAAAA6RQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					119,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								828,
								848
							],
							[
								1038,
								1054
							],
							[
								1108,
								1127
							],
							[
								1162,
								1178
							],
							[
								1238,
								1254
							],
							[
								1317,
								1351
							],
							[
								1374,
								1406
							],
							[
								1429,
								1472
							],
							[
								3301,
								3320
							],
							[
								3418,
								3434
							],
							[
								3496,
								3514
							],
							[
								3578,
								3597
							],
							[
								3662,
								3671
							],
							[
								3726,
								3743
							],
							[
								3806,
								3823
							],
							[
								3886,
								3900
							],
							[
								3960,
								3975
							],
							[
								4036,
								4051
							],
							[
								4112,
								4120
							],
							[
								4174,
								4186
							],
							[
								4244,
								4254
							],
							[
								4310,
								4321
							],
							[
								4378,
								4386
							],
							[
								4440,
								4462
							],
							[
								4530,
								4545
							],
							[
								4606,
								4628
							],
							[
								4696,
								4712
							],
							[
								4774,
								4790
							],
							[
								4852,
								4864
							],
							[
								4922,
								4934
							],
							[
								4992,
								5005
							],
							[
								5064,
								5082
							],
							[
								5140,
								5158
							],
							[
								5222,
								5244
							],
							[
								5312,
								5339
							],
							[
								5412,
								5429
							],
							[
								5486,
								5503
							],
							[
								5560,
								5577
							],
							[
								5624,
								5640
							],
							[
								5723,
								5739
							],
							[
								5811,
								5827
							],
							[
								5899,
								5916
							],
							[
								5973,
								5993
							],
							[
								6052,
								6072
							],
							[
								6231,
								6250
							],
							[
								6326,
								6333
							],
							[
								6362,
								6382
							],
							[
								6452,
								6467
							],
							[
								6528,
								6554
							],
							[
								6625,
								6641
							],
							[
								6697,
								6710
							],
							[
								6782,
								6808
							],
							[
								6854,
								6879
							],
							[
								6964,
								7006
							],
							[
								7140,
								7180
							],
							[
								10109,
								10152
							],
							[
								10533,
								10568
							],
							[
								10724,
								10742
							],
							[
								10772,
								10777
							],
							[
								10867,
								10894
							],
							[
								11013,
								11034
							],
							[
								11063,
								11079
							],
							[
								11172,
								11207
							],
							[
								11247,
								11265
							],
							[
								11452,
								11473
							],
							[
								11497,
								11507
							],
							[
								11546,
								11576
							],
							[
								11902,
								11936
							],
							[
								12237,
								12271
							],
							[
								12491,
								12525
							],
							[
								12591,
								12627
							],
							[
								12702,
								12719
							],
							[
								12878,
								12915
							],
							[
								12916,
								12930
							],
							[
								12936,
								12940
							],
							[
								13015,
								13047
							],
							[
								13075,
								13101
							],
							[
								13426,
								13448
							],
							[
								13486,
								13502
							],
							[
								13517,
								13524
							],
							[
								13546,
								13562
							],
							[
								13600,
								13628
							],
							[
								13847,
								13864
							],
							[
								13865,
								13874
							],
							[
								13926,
								13943
							],
							[
								13944,
								13953
							],
							[
								14013,
								14030
							],
							[
								14031,
								14054
							],
							[
								14110,
								14134
							],
							[
								16761,
								16789
							],
							[
								17220,
								17224
							],
							[
								17352,
								17365
							],
							[
								17681,
								17693
							],
							[
								17956,
								17969
							],
							[
								18074,
								18088
							],
							[
								18981,
								19009
							],
							[
								19125,
								19138
							],
							[
								19250,
								19276
							],
							[
								19456,
								19479
							],
							[
								19623,
								19675
							],
							[
								19769,
								19785
							],
							[
								19869,
								19880
							],
							[
								19993,
								19997
							],
							[
								20276,
								20309
							],
							[
								20423,
								20459
							],
							[
								20616,
								20632
							],
							[
								20646,
								20668
							],
							[
								20781,
								20787
							],
							[
								22149,
								22191
							],
							[
								22386,
								22417
							],
							[
								22467,
								22509
							],
							[
								22629,
								22653
							],
							[
								22873,
								22883
							],
							[
								22936,
								22940
							],
							[
								22979,
								23006
							],
							[
								23053,
								23065
							],
							[
								23135,
								23147
							],
							[
								23210,
								23235
							],
							[
								23280,
								23311
							],
							[
								23322,
								23339
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterator(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADpFAAAICBiYXNlbmFtZQogIG9mZnNldG9mCiAgaW5yYW5nZQogIHRyaW1fZG90c2xhc2gKSlNQcmVjZWRlbmNlCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYKSlNfQ0ZVTkNfREVGX0ZMQUdTCkpTX0NPTlNUQU5UCk1BWF9OVU0KTUlOX05VTQpBQlNfTlVNClNJR05fTlVNCkpTX0lzTW9kdWxlCkl0ZXJhdG9yVmFsdWUKQXJndW1lbnRzCiAgYXJndW1lbnRzX25ldwogIGFyZ3VtZW50c19zaGlmdAogIGFyZ3VtZW50c19hdAogIGFyZ3VtZW50c19zaGlmdG4KSlNBcmd1bWVudHMKICBqc19hcmd1bWVudHNfbmV3CiAganNfYXJndW1lbnRzX3NoaWZ0CiAganNfYXJndW1lbnRzX2F0CiAganNfYXJndW1lbnRzX3NoaWZ0bgogIG1pbl9zaXplCiAgYWJzX2ludDY0CiAgYWJzX2ludDMyCiAgc2lnbl9pbnQzMgogIG1vZF9pbnQzMgogIHRpbWVfdXMKICBqc19kYnVmX2luaXRfcnQKICBqc19kYnVmX2luaXQKUmVnRXhwCiAgcmVnZXhwX2ZsYWdzX3Rvc3RyaW5nCiAgcmVnZXhwX2ZsYWdzX2Zyb21zdHJpbmcKICByZWdleHBfZnJvbV9hcmd2CiAgcmVnZXhwX2Zyb21fZGJ1ZgogIHJlZ2V4cF9jb21waWxlCiAgcmVnZXhwX3RvX3ZhbHVlCiAgcmVnZXhwX2ZyZWVfcnQKICByZWdleHBfZnJlZQogIGpzX2dsb2JhbF9nZXRfc3RyCiAganNfZ2xvYmFsX2dldF9zdHJfbgogIGpzX2dsb2JhbF9nZXRfYXRvbQogIGpzX2dsb2JhbF9uZXcKICBqc19nbG9iYWxfcHJvdG90eXBlCiAganNfZ2xvYmFsX3Byb3RvdHlwZV9mdW5jCiAganNfZ2xvYmFsX3N0YXRpY19mdW5jCiAgdmFsdWVfdHlwZXMKICB2YWx1ZV9tYXNrCiAganNfdmFsdWVfdHlwZV9mbGFnCiAganNfdmFsdWVfdHlwZV9nZXQKICBqc192YWx1ZV90eXBlMmZsYWcKICBqc192YWx1ZV90eXBlCiAganNfdmFsdWVfdHlwZXMKICBqc192YWx1ZV90eXBlb2YKICBqc192YWx1ZV90eXBlX25hbWUKICBqc192YWx1ZV90eXBlc3RyCiAganNfdmFsdWVfcHRyCiAganNfdmFsdWVfb2JqCiAganNfdmFsdWVfdGFnCiAganNfdmFsdWVfaGFzX3JlZl9jb3VudAogIGpzX3ZhbHVlX2ZyZWUKICBqc192YWx1ZV9mcmVlX3J0CiAganNfdmFsdWVfZXF1YWxzCiAganNfdmFsdWVfcHJpbnQKICBqc192YWx1ZV9jbG9uZQogIGpzX3ZhbHVlc19kdXAKICBqc192YWx1ZXNfZnJlZQogIGpzX3ZhbHVlc190b2FycmF5CiAganNfdmFsdWVzX2Zyb21hcnJheQogIGpzX3ZhbHVlX2Z3cml0ZQogIGpzX3ZhbHVlX2R1bXAKICBqc19jc3RyaW5nX2R1cAogIGpzX2NzdHJpbmdfcHRyCiAganNfY3N0cmluZ192YWx1ZQogIGpzX2NzdHJpbmdfZHVtcAogIGpzX2NzdHJpbmdfbmV3CiAganNfY3N0cmluZ19uZXdsZW4KICBqc19jc3RyaW5nX2ZyZWUKICBqc190b2ludDY0CiAganNfdG9zdHJpbmdsZW4KICBqc190b3N0cmluZwogIGpzX3Rvd3N0cmluZ2xlbgogIGpzX3Rvd3N0cmluZwogIGpzX3ZhbHVlX3Rvc3RyaW5nCiAganNfdmFsdWVfdG9zaXplCiAganNfdmFsdWVfdG9kb3VibGVfZnJlZQogIGpzX3ZhbHVlX3RvaW50NjRfZnJlZQogIGpzX3ZhbHVlX3RvYm9vbF9mcmVlCiAganNfdmFsdWVfdG9hdG9tX2ZyZWUKICBqc192YWx1ZV9mcm9tX2NoYXIKICBqc192YWx1ZV9jbXBzdHJpbmcKSlNfVkFMVUVfRlJFRQpKU19WQUxVRV9GUkVFX1JUCiAganNfb2JqZWN0X3RtcG1hcmtfc2V0CiAganNfb2JqZWN0X3RtcG1hcmtfY2xlYXIKICBqc19vYmplY3RfdG1wbWFya19pc3NldAogIGpzX3J1bnRpbWVfZXhjZXB0aW9uX3NldAogIGpzX3J1bnRpbWVfZXhjZXB0aW9uX2dldAogIGpzX3J1bnRpbWVfZXhjZXB0aW9uX2NsZWFyCiAganNfcHJvcGVydHllbnVtc19mcmVlCiAganNfcHJvcGVydHlkZXNjcmlwdG9yX2ZyZWUKICBqc19zeW1ib2xfY3RvcgogIGpzX3N5bWJvbF9pbnZva2Vfc3RhdGljCiAganNfc3ltYm9sX3RvX3N0cmluZwogIGpzX3N5bWJvbF90b19jc3RyaW5nCiAganNfc3ltYm9sX3N0YXRpY192YWx1ZQogIGpzX3N5bWJvbF9zdGF0aWNfYXRvbQogIGpzX2lzX2l0ZXJhYmxlCiAganNfaXNfaXRlcmF0b3IKICBqc19pdGVyYXRvcl9tZXRob2QKICBqc19pdGVyYXRvcl9uZXcKICBqc19pdGVyYXRvcl9uZXh0CiAganNfaXRlcmF0b3JfcmVzdWx0CiAganNfaXRlcmF0b3JfdGhlbgogIGpzX3N5bWJvbF9mb3IKICBqc19zeW1ib2xfZm9yX2F0b20KICBqc19zeW1ib2xfb3BlcmF0b3JzZXRfdmFsdWUKICBqc19zeW1ib2xfb3BlcmF0b3JzZXRfYXRvbQogIGpzX29wZXJhdG9yc19jcmVhdGUKICBqc19pbnQ2NF9kZWZhdWx0CiAganNfbnVtYmVyX25ldwogIGpzX25ld19ib29sX29yX251bWJlcgogIGpzX2F0b21faXNpbnQKICBqc19hdG9tX2Zyb21pbnQKICBqc19hdG9tX3RvaW50CiAganNfYXRvbV9mcm9tCiAganNfYXRvbV90b2ludDY0CiAganNfYXRvbV90b2ludDMyCiAganNfYXRvbV90b3ZhbHVlCiAganNfYXRvbV90b2JpbmFyeQogIGpzX2F0b21fdG9fY3N0cmluZ2xlbgogIGpzX2F0b21fZHVtcAogIGpzX2F0b21faXNfaW5kZXgKICBqc19hdG9tX2lzX2xlbmd0aAogIGpzX29iamVjdF90b3N0cmluZwogIGpzX29iamVjdF90b3N0cmluZzIKICBqc19mdW5jdGlvbl9uYW1lCiAganNfZnVuY3Rpb25fdG9zdHJpbmcKICBqc19mdW5jdGlvbl9jZnVuYwogIGpzX2Z1bmN0aW9uX2lzbmF0aXZlCiAganNfZnVuY3Rpb25fYXJnYwogIGpzX2Z1bmN0aW9uX2JpbmQKICBqc19mdW5jdGlvbl9iaW5kX3RoaXMKICBqc19mdW5jdGlvbl90aHJvdwogIGpzX2Z1bmN0aW9uX3JldHVybl91bmRlZmluZWQKICBqc19mdW5jdGlvbl9yZXR1cm5fdmFsdWUKICBqc19vYmplY3RfY2xhc3NuYW1lCiAganNfb2JqZWN0X2lzCiAganNfb2JqZWN0X2NvbnN0cnVjdAogIGpzX29iamVjdF9lcnJvcgogIGpzX29iamVjdF9uZXcKICBqc19vYmplY3RfZnVuY3Rpb24KICBqc19vYmplY3Rfc2FtZQogIGpzX2dldF9jbGFzc2lkCiAganNfaGFzX3Byb3BlcnR5c3RyCiAganNfZ2V0X3Byb3BlcnR5c3RyX2Jvb2wKICBqc19zZXRfcHJvcGVydHlpbnRfc3RyaW5nCiAganNfc2V0X3Byb3BlcnR5aW50X2ludAogIGpzX3NldF9wcm9wZXJ0eXN0cl9zdHJpbmcKICBqc19zZXRfcHJvcGVydHlzdHJfc3RyaW5nbGVuCiAganNfZ2V0X3Byb3BlcnR5aW50X2NzdHJpbmcKICBqc19nZXRfcHJvcGVydHlpbnRfaW50MzIKICBqc19nZXRfcHJvcGVydHlzdHJfY3N0cmluZwogIGpzX2dldF9wcm9wZXJ0eXN0cl9jc3RyaW5nbGVuCiAganNfZ2V0X3Byb3BlcnR5c3RyX3N0cmluZwogIGpzX2dldF9wcm9wZXJ0eXN0cl9zdHJpbmdsZW4KICBqc19nZXRfcHJvcGVydHlzdHJfaW50MzIKICBqc19nZXRfcHJvcGVydHlzdHJfdWludDY0CiAganNfZ2V0X3Byb3BlcnR5ZGVzY3JpcHRvcgogIGpzX2dldF9wcm9wZXJ0eXN0cl9hdG9tCiAganNfc2V0X2luc3BlY3RfbWV0aG9kCiAganNfc2V0X3Rvc3RyaW5ndGFnX3ZhbHVlCiAganNfc2V0X3Rvc3RyaW5ndGFnX3N0cgogIGpzX2NsYXNzX2lkCiAganNfY2xhc3NfbmV3aWQKICBqc19jbGFzc19nZXQKICBqc19jbGFzc19hdG9tCiAganNfY2xhc3NfbmFtZQogIGpzX2NsYXNzX2ZpbmQKICBqc19vYmplY3RfaXNjbGFzcwogIGpzX3ZhbHVlX2lzY2xhc3MKICBqc19pc19hcnJheWJ1ZmZlcgogIGpzX2lzX3NoYXJlZGFycmF5YnVmZmVyCiAganNfaXNfbWFwCiAganNfaXNfc2V0CiAganNfaXNfZ2VuZXJhdG9yCiAganNfaXNfcmVnZXhwCiAganNfaXNfcHJvbWlzZQogIGpzX2lzX2RhdGF2aWV3CiAganNfaXNfbnVsbF9vcl91bmRlZmluZWQKICBqc19pc19mYWxzaXNoCiAganNfaXNfdHJ1aXNoCiAganNfaXNfbnVsbGlzaAogIGpzX3R5cGVkYXJyYXlfcHJvdG90eXBlCiAganNfdHlwZWRhcnJheV9jb25zdHJ1Y3RvcgogIGpzX2lzX2Jhc2ljX2FycmF5CiAganNfaXNfdHlwZWRhcnJheQogIGpzX2lzX2FycmF5CiAganNfaXNfaW5wdXQKICBqc19wcm9wZW51bV9jbXAKICBqc19vYmplY3RfZXF1YWxzCiAganNfYXJyYXlfbGVuZ3RoCiAganNfYXJyYXlfY2xlYXIKICBqc19zdHJ2X2xlbmd0aAogIGpzX3N0cnZfZHVwCiAganNfc3Rydl9mcmVlX24KICBqc19zdHJ2X2ZyZWUKICBqc19zdHJ2X2ZyZWVfcnQKICBqc19zdHJ2X3RvX2FycmF5CiAganNfaW50dl90b19hcnJheQogIGpzX2FycmF5X3RvX2FyZ3YKICBqc19hcnJheV9jb3B5cwogIGpzX3N0cnZfY29weXMKICBqc19pbnZva2UKICBqc19hcnJheWJ1ZmZlcl9sZW5ndGgKICBqc19hcnJheWJ1ZmZlcl9ieXRlbGVuZ3RoCiAganNfZmluZF9jZnVuY3Rpb25fZW50cnkKICBqc19maW5kX2NmdW5jdGlvbl9hdG9tCiAganNfZGF0ZV9uZXcKICBqc19kYXRlX2Zyb21fbXMKICBqc19kYXRlX2Zyb21fdGltZV9ucwogIGpzX2RhdGVfZnJvbV90aW1lc3BlYwogIGpzX2RhdGVfZ2V0dGltZQogIGpzX2RhdGVfdGltZQogIGpzX2RhdGVfdGltZXNwZWMKICBqc19hcnJheWJ1ZmZlcl9mcmVldmFsdWUKICBqc19hcnJheWJ1ZmZlcl9mcm9tdmFsdWUKICBqc19tYXBfbmV3CkltcG9ydERpcmVjdGl2ZQogIG1vZHVsZV9uYW1lCiAgbW9kdWxlX25hbWVzdHIKICBtb2R1bGVfZnVuYwogIG1vZHVsZV9ucwogIG1vZHVsZV9leHBvcnRzX2ZpbmQKICBtb2R1bGVfZXhwb3J0c19nZXQKICBtb2R1bGVfZXhwb3J0cwogIG1vZHVsZV92YWx1ZQogIG1vZHVsZV9lbnRyeQogIG1vZHVsZV9vYmplY3QKICBqc19tb2R1bGVzX2xpc3QKICBqc19tb2R1bGVzX2FycmF5CiAganNfbW9kdWxlc19lbnRyaWVzCiAganNfbW9kdWxlc19tYXAKICBqc19tb2R1bGVzX29iamVjdAogIGpzX21vZHVsZV9zZWFyY2gKICBqc19tb2R1bGVfc2VhcmNoX2V4dAogIGpzX21vZHVsZV9ub3JtYWxpemUKICBqc19tb2R1bGVfZGVmCiAganNfbW9kdWxlX2ZpbmRfZndkCiAganNfbW9kdWxlX2ZpbmRfcmV2CiAganNfbW9kdWxlX2luZGV4b2YKICBqc19tb2R1bGVfYXQKICBqc19ldmFsX21vZHVsZQogIGpzX2V2YWxfYmluYXJ5CiAganNfZXZhbF9idWYKICBqc19ldmFsX3N0cgogIGpzX3RpbWVfbXMKICBqc19pbnRlcnJ1cHRfaGFuZGxlcgogIGpzX3RpbWVyX3VubGluawogIGpzX3RpbWVyX2ZyZWUKICBqc19jYWxsX2hhbmRsZXIKICBqc19zYWJfYWxsb2MKICBqc19zYWJfZnJlZQogIGpzX3NhYl9kdXAKICBqc19uZXdfbWVzc2FnZV9waXBlCiAganNfZHVwX21lc3NhZ2VfcGlwZQogIGpzX2ZyZWVfbWVzc2FnZQogIGpzX2ZyZWVfbWVzc2FnZV9waXBlCiAganNfZXJyb3JfZHVtcAogIGpzX2Vycm9yX3Rvc3RyaW5nCiAganNfZXJyb3JfcHJpbnQKICBqc19lcnJvcl9zdGFjawogIGpzX3Byb21pc2VfcmVzb2x2ZQogIGpzX3Byb21pc2VfdGhlbgogIGpzX3Byb21pc2VfcmVzb2x2ZV90aGVuCiAganNfcHJvbWlzZV93cmFwCiAganNfcHJvbWlzZV9hZG9wdAAAAAAAAAAAZwkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					120,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
						"symkeys":
						[
							[
								150,
								165
							],
							[
								281,
								301
							],
							[
								370,
								383
							],
							[
								422,
								437
							],
							[
								463,
								481
							],
							[
								567,
								585
							],
							[
								671,
								680
							],
							[
								726,
								742
							],
							[
								2819,
								2837
							],
							[
								3098,
								3112
							],
							[
								3221,
								3238
							],
							[
								3374,
								3385
							],
							[
								3435,
								3448
							],
							[
								3687,
								3697
							],
							[
								3906,
								3916
							],
							[
								4140,
								4148
							],
							[
								4333,
								4342
							],
							[
								4539,
								4548
							],
							[
								4782,
								4794
							],
							[
								4996,
								5003
							],
							[
								5203,
								5211
							],
							[
								5486,
								5494
							],
							[
								5720,
								5729
							],
							[
								6025,
								6033
							],
							[
								6245,
								6253
							],
							[
								6343,
								6353
							],
							[
								6535,
								6544
							],
							[
								6626,
								6638
							],
							[
								6683,
								6693
							],
							[
								6730,
								6739
							],
							[
								6885,
								6893
							],
							[
								7024,
								7033
							],
							[
								7193,
								7201
							],
							[
								7359,
								7373
							],
							[
								7548,
								7559
							],
							[
								7749,
								7767
							],
							[
								8251,
								8263
							],
							[
								8305,
								8314
							],
							[
								8345,
								8356
							],
							[
								8395,
								8407
							],
							[
								8432,
								8445
							],
							[
								8471,
								8484
							],
							[
								8510,
								8523
							],
							[
								8555,
								8569
							],
							[
								8602,
								8616
							],
							[
								8661,
								8673
							]
						],
						"symlist":
						[
							"is_control_char",
							"is_alphanumeric_char",
							"is_digit_char",
							"is_newline_char",
							"is_identifier_char",
							"is_whitespace_char",
							"str_equal",
							"escape_char_pred",
							"unescape_char_pred",
							"is_escape_char",
							"is_backslash_char",
							"is_dot_char",
							"is_identifier",
							"is_integer",
							"byte_count",
							"byte_chr",
							"byte_rchr",
							"byte_chrs",
							"byte_charlen",
							"str_chr",
							"str_chrs",
							"str_rchr",
							"str_rchrs",
							"str_endb",
							"str_ends",
							"str_startb",
							"str_start",
							"str_contains",
							"str_escape",
							"str_count",
							"str_copy",
							"str_copyn",
							"str_ndup",
							"predicate_find",
							"lookup_find",
							"escape_char_letter",
							"token_length",
							"fmt_ulong",
							"scan_ushort",
							"fmt_longlong",
							"fmt_ulonglong",
							"fmt_xlonglong",
							"scan_longlong",
							"scan_ulonglong",
							"scan_xlonglong",
							"scan_fromhex"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABnCQAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzQ29uc3RydWN0b3IodikKICBpc0l0ZXJhdG9yKHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogICAobiwgLi4ucmVzdCkgPT4KICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgd2FpdEZvcihtcykKICByZXNvbHZlID0+CiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBoYXNQcm90b3R5cGUob2JqLCBwcm90bykKICBmaWx0ZXIoc2VxLCBwcmVkLCB0aGlzQXJnKQogIHByZWQgPSAoZWwsIGkpID0+CiAgIChmLCBhcnIgPSBbXSwgbGVuZ3RoID0gZi5sZW5ndGgpID0+CiAgICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAgKGVsLCBpLCBhcnIpID0+CiAgaXRlbSA9PgogICAoZWwsIGksIGFycikgPT4KICBnZXRGdW5jdGlvbkFyZ3VtZW50cyA9IGZuID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICBjb2RlID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICBjb2RlID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICBnZXRBbnNpU3R5bGVzKCkKICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgYyA9PgogIHZhbHVlOiBoZXggPT4KICBjaGFyYWN0ZXIgPT4KICB2YWx1ZTogaGV4ID0+CiAgdmFsdWU6IGNvZGUgPT4KICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgdmFsdWU6IGhleCA9PgogIHJhbmRJbnQoLi4uYXJncykKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogICBmdW5jdGlvbigpCiAgdiA9PgogIHJlcGxhY2VQcm9wZXJ0eSh2YWx1ZSkKICBnZXRPcHQob3B0aW9ucyA9IHt9LCBhcmdzKQogIGZpbmRPcHQgPSBhcmcgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG9wdCA9PgogIHRvVW5peFRpbWUoZGF0ZU9iaiwgdXRjID0gZmFsc2UpCiAgdW5peFRpbWUodXRjID0gZmFsc2UpCiAgZnJvbVVuaXhUaW1lKGVwb2NoLCB1dGMgPSBmYWxzZSkKICByYW5nZSguLi5hcmdzKQogICAodiwgaykgPT4KICBuID0+CiAgcmVwZWF0ZXIobiwgd2hhdCkKKCkKKCkKICByZXBlYXQobiwgd2hhdCkKICBjaHVua0FycmF5KGFyciwgc2l6ZSkKICBmbiA9IChhLCB2LCBpKSA9PgAAAAAAAAAAqQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					121,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								828,
								848
							],
							[
								1038,
								1054
							],
							[
								1108,
								1127
							],
							[
								1162,
								1178
							],
							[
								1238,
								1254
							],
							[
								1317,
								1351
							],
							[
								1374,
								1406
							],
							[
								1429,
								1472
							],
							[
								3301,
								3320
							],
							[
								3418,
								3434
							],
							[
								3496,
								3514
							],
							[
								3578,
								3597
							],
							[
								3662,
								3671
							],
							[
								3726,
								3743
							],
							[
								3806,
								3823
							],
							[
								3886,
								3900
							],
							[
								3960,
								3975
							],
							[
								4036,
								4051
							],
							[
								4112,
								4120
							],
							[
								4174,
								4186
							],
							[
								4244,
								4254
							],
							[
								4310,
								4321
							],
							[
								4378,
								4386
							],
							[
								4440,
								4462
							],
							[
								4530,
								4545
							],
							[
								4606,
								4628
							],
							[
								4696,
								4712
							],
							[
								4774,
								4790
							],
							[
								4852,
								4864
							],
							[
								4922,
								4934
							],
							[
								4992,
								5005
							],
							[
								5064,
								5082
							],
							[
								5140,
								5158
							],
							[
								5222,
								5244
							],
							[
								5312,
								5339
							],
							[
								5412,
								5429
							],
							[
								5486,
								5503
							],
							[
								5560,
								5577
							],
							[
								5624,
								5640
							],
							[
								5723,
								5739
							],
							[
								5811,
								5827
							],
							[
								5899,
								5916
							],
							[
								5973,
								5993
							],
							[
								6052,
								6072
							],
							[
								6231,
								6250
							],
							[
								6326,
								6333
							],
							[
								6362,
								6382
							],
							[
								6452,
								6467
							],
							[
								6528,
								6554
							],
							[
								6625,
								6641
							],
							[
								6697,
								6710
							],
							[
								6782,
								6808
							],
							[
								6854,
								6879
							],
							[
								6964,
								7006
							],
							[
								7140,
								7180
							],
							[
								10109,
								10152
							],
							[
								10533,
								10568
							],
							[
								10724,
								10742
							],
							[
								10772,
								10777
							],
							[
								10867,
								10894
							],
							[
								11013,
								11034
							],
							[
								11063,
								11079
							],
							[
								11172,
								11207
							],
							[
								11247,
								11265
							],
							[
								11452,
								11473
							],
							[
								11497,
								11507
							],
							[
								11546,
								11576
							],
							[
								11902,
								11936
							],
							[
								12237,
								12271
							],
							[
								12491,
								12525
							],
							[
								12591,
								12627
							],
							[
								12702,
								12719
							],
							[
								12878,
								12915
							],
							[
								12916,
								12930
							],
							[
								12936,
								12940
							],
							[
								13015,
								13047
							],
							[
								13075,
								13101
							],
							[
								13426,
								13448
							],
							[
								13486,
								13502
							],
							[
								13517,
								13524
							],
							[
								13546,
								13562
							],
							[
								13600,
								13628
							],
							[
								13847,
								13864
							],
							[
								13865,
								13874
							],
							[
								13926,
								13943
							],
							[
								13944,
								13953
							],
							[
								14013,
								14030
							],
							[
								14031,
								14054
							],
							[
								14110,
								14134
							],
							[
								16761,
								16789
							],
							[
								17220,
								17224
							],
							[
								17352,
								17365
							],
							[
								17681,
								17693
							],
							[
								17956,
								17969
							],
							[
								18074,
								18088
							],
							[
								18981,
								19009
							],
							[
								19125,
								19138
							],
							[
								19250,
								19276
							],
							[
								19456,
								19479
							],
							[
								19623,
								19675
							],
							[
								19769,
								19785
							],
							[
								19869,
								19880
							],
							[
								19993,
								19997
							],
							[
								20276,
								20309
							],
							[
								20423,
								20459
							],
							[
								20616,
								20632
							],
							[
								20646,
								20668
							],
							[
								20781,
								20787
							],
							[
								22149,
								22191
							],
							[
								22386,
								22417
							],
							[
								22467,
								22509
							],
							[
								22629,
								22653
							],
							[
								22873,
								22883
							],
							[
								22936,
								22940
							],
							[
								22979,
								23006
							],
							[
								23053,
								23065
							],
							[
								23135,
								23147
							],
							[
								23210,
								23235
							],
							[
								23280,
								23311
							],
							[
								23322,
								23339
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterator(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACpAgAAICBpc19jb250cm9sX2NoYXIKICBpc19hbHBoYW51bWVyaWNfY2hhcgogIGlzX2RpZ2l0X2NoYXIKICBpc19uZXdsaW5lX2NoYXIKICBpc19pZGVudGlmaWVyX2NoYXIKICBpc193aGl0ZXNwYWNlX2NoYXIKICBzdHJfZXF1YWwKICBlc2NhcGVfY2hhcl9wcmVkCiAgdW5lc2NhcGVfY2hhcl9wcmVkCiAgaXNfZXNjYXBlX2NoYXIKICBpc19iYWNrc2xhc2hfY2hhcgogIGlzX2RvdF9jaGFyCiAgaXNfaWRlbnRpZmllcgogIGlzX2ludGVnZXIKICBieXRlX2NvdW50CiAgYnl0ZV9jaHIKICBieXRlX3JjaHIKICBieXRlX2NocnMKICBieXRlX2NoYXJsZW4KICBzdHJfY2hyCiAgc3RyX2NocnMKICBzdHJfcmNocgogIHN0cl9yY2hycwogIHN0cl9lbmRiCiAgc3RyX2VuZHMKICBzdHJfc3RhcnRiCiAgc3RyX3N0YXJ0CiAgc3RyX2NvbnRhaW5zCiAgc3RyX2VzY2FwZQogIHN0cl9jb3VudAogIHN0cl9jb3B5CiAgc3RyX2NvcHluCiAgc3RyX25kdXAKICBwcmVkaWNhdGVfZmluZAogIGxvb2t1cF9maW5kCiAgZXNjYXBlX2NoYXJfbGV0dGVyCiAgdG9rZW5fbGVuZ3RoCiAgZm10X3Vsb25nCiAgc2Nhbl91c2hvcnQKICBmbXRfbG9uZ2xvbmcKICBmbXRfdWxvbmdsb25nCiAgZm10X3hsb25nbG9uZwogIHNjYW5fbG9uZ2xvbmcKICBzY2FuX3Vsb25nbG9uZwogIHNjYW5feGxvbmdsb25nCiAgc2Nhbl9mcm9taGV4AAAAAAAAAABnCQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					122,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABnCQAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzQ29uc3RydWN0b3IodikKICBpc0l0ZXJhdG9yKHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogICAobiwgLi4ucmVzdCkgPT4KICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgd2FpdEZvcihtcykKICByZXNvbHZlID0+CiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBoYXNQcm90b3R5cGUob2JqLCBwcm90bykKICBmaWx0ZXIoc2VxLCBwcmVkLCB0aGlzQXJnKQogIHByZWQgPSAoZWwsIGkpID0+CiAgIChmLCBhcnIgPSBbXSwgbGVuZ3RoID0gZi5sZW5ndGgpID0+CiAgICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAgKGVsLCBpLCBhcnIpID0+CiAgaXRlbSA9PgogICAoZWwsIGksIGFycikgPT4KICBnZXRGdW5jdGlvbkFyZ3VtZW50cyA9IGZuID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICBjb2RlID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICBjb2RlID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICBnZXRBbnNpU3R5bGVzKCkKICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgYyA9PgogIHZhbHVlOiBoZXggPT4KICBjaGFyYWN0ZXIgPT4KICB2YWx1ZTogaGV4ID0+CiAgdmFsdWU6IGNvZGUgPT4KICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgdmFsdWU6IGhleCA9PgogIHJhbmRJbnQoLi4uYXJncykKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogICBmdW5jdGlvbigpCiAgdiA9PgogIHJlcGxhY2VQcm9wZXJ0eSh2YWx1ZSkKICBnZXRPcHQob3B0aW9ucyA9IHt9LCBhcmdzKQogIGZpbmRPcHQgPSBhcmcgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG9wdCA9PgogIHRvVW5peFRpbWUoZGF0ZU9iaiwgdXRjID0gZmFsc2UpCiAgdW5peFRpbWUodXRjID0gZmFsc2UpCiAgZnJvbVVuaXhUaW1lKGVwb2NoLCB1dGMgPSBmYWxzZSkKICByYW5nZSguLi5hcmdzKQogICAodiwgaykgPT4KICBuID0+CiAgcmVwZWF0ZXIobiwgd2hhdCkKKCkKKCkKICByZXBlYXQobiwgd2hhdCkKICBjaHVua0FycmF5KGFyciwgc2l6ZSkKICBmbiA9IChhLCB2LCBpKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					123,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								828,
								848
							],
							[
								1038,
								1054
							],
							[
								1108,
								1127
							],
							[
								1162,
								1178
							],
							[
								1238,
								1254
							],
							[
								1317,
								1351
							],
							[
								1374,
								1406
							],
							[
								1429,
								1472
							],
							[
								3301,
								3320
							],
							[
								3418,
								3434
							],
							[
								3496,
								3514
							],
							[
								3578,
								3597
							],
							[
								3662,
								3671
							],
							[
								3726,
								3743
							],
							[
								3806,
								3823
							],
							[
								3886,
								3900
							],
							[
								3960,
								3975
							],
							[
								4036,
								4051
							],
							[
								4112,
								4120
							],
							[
								4174,
								4186
							],
							[
								4244,
								4254
							],
							[
								4310,
								4321
							],
							[
								4378,
								4386
							],
							[
								4440,
								4462
							],
							[
								4530,
								4545
							],
							[
								4606,
								4628
							],
							[
								4696,
								4712
							],
							[
								4774,
								4790
							],
							[
								4852,
								4864
							],
							[
								4922,
								4934
							],
							[
								4992,
								5005
							],
							[
								5064,
								5082
							],
							[
								5140,
								5158
							],
							[
								5222,
								5244
							],
							[
								5312,
								5339
							],
							[
								5412,
								5429
							],
							[
								5486,
								5503
							],
							[
								5560,
								5577
							],
							[
								5624,
								5640
							],
							[
								5723,
								5739
							],
							[
								5811,
								5827
							],
							[
								5899,
								5916
							],
							[
								5973,
								5993
							],
							[
								6052,
								6072
							],
							[
								6231,
								6250
							],
							[
								6326,
								6333
							],
							[
								6362,
								6382
							],
							[
								6452,
								6467
							],
							[
								6528,
								6554
							],
							[
								6625,
								6641
							],
							[
								6697,
								6710
							],
							[
								6782,
								6808
							],
							[
								6854,
								6879
							],
							[
								6964,
								7006
							],
							[
								7140,
								7180
							],
							[
								10109,
								10152
							],
							[
								10533,
								10568
							],
							[
								10724,
								10742
							],
							[
								10772,
								10777
							],
							[
								10867,
								10894
							],
							[
								11013,
								11034
							],
							[
								11063,
								11079
							],
							[
								11172,
								11207
							],
							[
								11247,
								11265
							],
							[
								11452,
								11473
							],
							[
								11497,
								11507
							],
							[
								11546,
								11576
							],
							[
								11902,
								11936
							],
							[
								12237,
								12271
							],
							[
								12491,
								12525
							],
							[
								12591,
								12627
							],
							[
								12702,
								12719
							],
							[
								12878,
								12915
							],
							[
								12916,
								12930
							],
							[
								12936,
								12940
							],
							[
								13015,
								13047
							],
							[
								13075,
								13101
							],
							[
								13426,
								13448
							],
							[
								13486,
								13502
							],
							[
								13517,
								13524
							],
							[
								13546,
								13562
							],
							[
								13600,
								13628
							],
							[
								13847,
								13864
							],
							[
								13865,
								13874
							],
							[
								13926,
								13943
							],
							[
								13944,
								13953
							],
							[
								14013,
								14030
							],
							[
								14031,
								14054
							],
							[
								14110,
								14134
							],
							[
								16761,
								16789
							],
							[
								17220,
								17224
							],
							[
								17352,
								17365
							],
							[
								17681,
								17693
							],
							[
								17956,
								17969
							],
							[
								18074,
								18088
							],
							[
								18981,
								19009
							],
							[
								19125,
								19138
							],
							[
								19250,
								19276
							],
							[
								19456,
								19479
							],
							[
								19623,
								19675
							],
							[
								19769,
								19785
							],
							[
								19869,
								19880
							],
							[
								19993,
								19997
							],
							[
								20276,
								20309
							],
							[
								20423,
								20459
							],
							[
								20616,
								20632
							],
							[
								20646,
								20668
							],
							[
								20781,
								20787
							],
							[
								22149,
								22191
							],
							[
								22386,
								22417
							],
							[
								22467,
								22509
							],
							[
								22629,
								22653
							],
							[
								22873,
								22883
							],
							[
								22936,
								22940
							],
							[
								22979,
								23006
							],
							[
								23053,
								23065
							],
							[
								23135,
								23147
							],
							[
								23210,
								23235
							],
							[
								23280,
								23311
							],
							[
								23322,
								23339
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterator(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>"
						]
					},
					"AQAAAAAAAAAAAAAAZwkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					124,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABnCQAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzQ29uc3RydWN0b3IodikKICBpc0l0ZXJhdG9yKHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogICAobiwgLi4ucmVzdCkgPT4KICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgd2FpdEZvcihtcykKICByZXNvbHZlID0+CiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBoYXNQcm90b3R5cGUob2JqLCBwcm90bykKICBmaWx0ZXIoc2VxLCBwcmVkLCB0aGlzQXJnKQogIHByZWQgPSAoZWwsIGkpID0+CiAgIChmLCBhcnIgPSBbXSwgbGVuZ3RoID0gZi5sZW5ndGgpID0+CiAgICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAgKGVsLCBpLCBhcnIpID0+CiAgaXRlbSA9PgogICAoZWwsIGksIGFycikgPT4KICBnZXRGdW5jdGlvbkFyZ3VtZW50cyA9IGZuID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICBjb2RlID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICBjb2RlID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICBnZXRBbnNpU3R5bGVzKCkKICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgYyA9PgogIHZhbHVlOiBoZXggPT4KICBjaGFyYWN0ZXIgPT4KICB2YWx1ZTogaGV4ID0+CiAgdmFsdWU6IGNvZGUgPT4KICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgdmFsdWU6IGhleCA9PgogIHJhbmRJbnQoLi4uYXJncykKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogICBmdW5jdGlvbigpCiAgdiA9PgogIHJlcGxhY2VQcm9wZXJ0eSh2YWx1ZSkKICBnZXRPcHQob3B0aW9ucyA9IHt9LCBhcmdzKQogIGZpbmRPcHQgPSBhcmcgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG9wdCA9PgogIHRvVW5peFRpbWUoZGF0ZU9iaiwgdXRjID0gZmFsc2UpCiAgdW5peFRpbWUodXRjID0gZmFsc2UpCiAgZnJvbVVuaXhUaW1lKGVwb2NoLCB1dGMgPSBmYWxzZSkKICByYW5nZSguLi5hcmdzKQogICAodiwgaykgPT4KICBuID0+CiAgcmVwZWF0ZXIobiwgd2hhdCkKKCkKKCkKICByZXBlYXQobiwgd2hhdCkKICBjaHVua0FycmF5KGFyciwgc2l6ZSkKICBmbiA9IChhLCB2LCBpKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					125,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								828,
								848
							],
							[
								1038,
								1054
							],
							[
								1108,
								1127
							],
							[
								1162,
								1178
							],
							[
								1238,
								1254
							],
							[
								1317,
								1351
							],
							[
								1374,
								1406
							],
							[
								1429,
								1472
							],
							[
								3301,
								3320
							],
							[
								3418,
								3434
							],
							[
								3496,
								3514
							],
							[
								3578,
								3597
							],
							[
								3662,
								3671
							],
							[
								3726,
								3743
							],
							[
								3806,
								3823
							],
							[
								3886,
								3900
							],
							[
								3960,
								3975
							],
							[
								4036,
								4051
							],
							[
								4112,
								4120
							],
							[
								4174,
								4186
							],
							[
								4244,
								4254
							],
							[
								4310,
								4321
							],
							[
								4378,
								4386
							],
							[
								4440,
								4462
							],
							[
								4530,
								4545
							],
							[
								4606,
								4628
							],
							[
								4696,
								4712
							],
							[
								4774,
								4790
							],
							[
								4852,
								4864
							],
							[
								4922,
								4934
							],
							[
								4992,
								5005
							],
							[
								5064,
								5082
							],
							[
								5140,
								5158
							],
							[
								5222,
								5244
							],
							[
								5312,
								5339
							],
							[
								5412,
								5429
							],
							[
								5486,
								5503
							],
							[
								5560,
								5577
							],
							[
								5624,
								5640
							],
							[
								5723,
								5739
							],
							[
								5811,
								5827
							],
							[
								5899,
								5916
							],
							[
								5973,
								5993
							],
							[
								6052,
								6072
							],
							[
								6231,
								6250
							],
							[
								6326,
								6333
							],
							[
								6362,
								6382
							],
							[
								6452,
								6467
							],
							[
								6528,
								6554
							],
							[
								6625,
								6641
							],
							[
								6697,
								6710
							],
							[
								6782,
								6808
							],
							[
								6854,
								6879
							],
							[
								6964,
								7006
							],
							[
								7140,
								7180
							],
							[
								10109,
								10152
							],
							[
								10533,
								10568
							],
							[
								10724,
								10742
							],
							[
								10772,
								10777
							],
							[
								10867,
								10894
							],
							[
								11013,
								11034
							],
							[
								11063,
								11079
							],
							[
								11172,
								11207
							],
							[
								11247,
								11265
							],
							[
								11452,
								11473
							],
							[
								11497,
								11507
							],
							[
								11546,
								11576
							],
							[
								11902,
								11936
							],
							[
								12237,
								12271
							],
							[
								12491,
								12525
							],
							[
								12591,
								12627
							],
							[
								12702,
								12719
							],
							[
								12878,
								12915
							],
							[
								12916,
								12930
							],
							[
								12936,
								12940
							],
							[
								13015,
								13047
							],
							[
								13075,
								13101
							],
							[
								13426,
								13448
							],
							[
								13486,
								13502
							],
							[
								13517,
								13524
							],
							[
								13546,
								13562
							],
							[
								13600,
								13628
							],
							[
								13847,
								13864
							],
							[
								13865,
								13874
							],
							[
								13926,
								13943
							],
							[
								13944,
								13953
							],
							[
								14013,
								14030
							],
							[
								14031,
								14054
							],
							[
								14110,
								14134
							],
							[
								16761,
								16789
							],
							[
								17220,
								17224
							],
							[
								17352,
								17365
							],
							[
								17681,
								17693
							],
							[
								17956,
								17969
							],
							[
								18074,
								18088
							],
							[
								18981,
								19009
							],
							[
								19125,
								19138
							],
							[
								19250,
								19276
							],
							[
								19456,
								19479
							],
							[
								19623,
								19675
							],
							[
								19769,
								19785
							],
							[
								19869,
								19880
							],
							[
								19993,
								19997
							],
							[
								20276,
								20309
							],
							[
								20423,
								20459
							],
							[
								20616,
								20632
							],
							[
								20646,
								20668
							],
							[
								20781,
								20787
							],
							[
								22149,
								22191
							],
							[
								22386,
								22417
							],
							[
								22467,
								22509
							],
							[
								22629,
								22653
							],
							[
								22873,
								22883
							],
							[
								22936,
								22940
							],
							[
								22979,
								23006
							],
							[
								23053,
								23065
							],
							[
								23135,
								23147
							],
							[
								23210,
								23235
							],
							[
								23280,
								23311
							],
							[
								23322,
								23339
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterator(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>"
						]
					},
					"AQAAAAAAAAAAAAAAZwkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					126,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
						"symkeys":
						[
							[
								811,
								830
							],
							[
								954,
								979
							],
							[
								1056,
								1081
							],
							[
								1159,
								1184
							],
							[
								1231,
								1244
							],
							[
								1320,
								1339
							],
							[
								1415,
								1434
							],
							[
								1504,
								1514
							]
						],
						"symlist":
						[
							"CMAKE_CACHEFILE_DIR",
							"CMAKE_CACHE_MAJOR_VERSION",
							"CMAKE_CACHE_MINOR_VERSION",
							"CMAKE_CACHE_PATCH_VERSION",
							"CMAKE_COMMAND",
							"CMAKE_CPACK_COMMAND",
							"CMAKE_CTEST_COMMAND",
							"CMAKE_ROOT"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABnCQAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzQ29uc3RydWN0b3IodikKICBpc0l0ZXJhdG9yKHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogICAobiwgLi4ucmVzdCkgPT4KICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCiAgIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgd2FpdEZvcihtcykKICByZXNvbHZlID0+CiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykKICBnZXRDb25zdHJ1Y3RvckNoYWluKG9iaikKICBoYXNQcm90b3R5cGUob2JqLCBwcm90bykKICBmaWx0ZXIoc2VxLCBwcmVkLCB0aGlzQXJnKQogIHByZWQgPSAoZWwsIGkpID0+CiAgIChmLCBhcnIgPSBbXSwgbGVuZ3RoID0gZi5sZW5ndGgpID0+CiAgICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAgKGVsLCBpLCBhcnIpID0+CiAgaXRlbSA9PgogICAoZWwsIGksIGFycikgPT4KICBnZXRGdW5jdGlvbkFyZ3VtZW50cyA9IGZuID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICBjb2RlID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICBjb2RlID0+CiAgIChvZmZzZXQgPSAwKSA9PgogICAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICBnZXRBbnNpU3R5bGVzKCkKICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgYyA9PgogIHZhbHVlOiBoZXggPT4KICBjaGFyYWN0ZXIgPT4KICB2YWx1ZTogaGV4ID0+CiAgdmFsdWU6IGNvZGUgPT4KICB2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgdmFsdWU6IGhleCA9PgogIHJhbmRJbnQoLi4uYXJncykKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogICBmdW5jdGlvbigpCiAgdiA9PgogIHJlcGxhY2VQcm9wZXJ0eSh2YWx1ZSkKICBnZXRPcHQob3B0aW9ucyA9IHt9LCBhcmdzKQogIGZpbmRPcHQgPSBhcmcgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG9wdCA9PgogIHRvVW5peFRpbWUoZGF0ZU9iaiwgdXRjID0gZmFsc2UpCiAgdW5peFRpbWUodXRjID0gZmFsc2UpCiAgZnJvbVVuaXhUaW1lKGVwb2NoLCB1dGMgPSBmYWxzZSkKICByYW5nZSguLi5hcmdzKQogICAodiwgaykgPT4KICBuID0+CiAgcmVwZWF0ZXIobiwgd2hhdCkKKCkKKCkKICByZXBlYXQobiwgd2hhdCkKICBjaHVua0FycmF5KGFyciwgc2l6ZSkKICBmbiA9IChhLCB2LCBpKSA9PgAAAAAAAAAAogAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					127,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								61,
								77
							],
							[
								255,
								278
							],
							[
								480,
								512
							],
							[
								617,
								634
							],
							[
								721,
								745
							],
							[
								780,
								804
							],
							[
								841,
								865
							],
							[
								904,
								928
							],
							[
								1102,
								1126
							],
							[
								1167,
								1191
							],
							[
								1238,
								1241
							],
							[
								1245,
								1269
							],
							[
								1332,
								1336
							],
							[
								1340,
								1364
							],
							[
								1759,
								1779
							],
							[
								2539,
								2556
							],
							[
								2601,
								2610
							],
							[
								5527,
								5551
							],
							[
								5581,
								5605
							],
							[
								5676,
								5692
							],
							[
								5719,
								5732
							],
							[
								5776,
								5796
							],
							[
								5866,
								5888
							],
							[
								5920,
								5936
							],
							[
								6025,
								6049
							],
							[
								6161,
								6181
							],
							[
								6203,
								6222
							],
							[
								6333,
								6348
							],
							[
								6524,
								6539
							],
							[
								6550,
								6565
							],
							[
								6636,
								6651
							],
							[
								6654,
								6669
							],
							[
								6754,
								6769
							],
							[
								6772,
								6787
							],
							[
								6873,
								6884
							],
							[
								6980,
								6989
							],
							[
								7000,
								7014
							],
							[
								7017,
								7025
							],
							[
								7029,
								7038
							],
							[
								7053,
								7073
							],
							[
								7109,
								7123
							],
							[
								7144,
								7164
							],
							[
								7171,
								7189
							],
							[
								7221,
								7234
							],
							[
								7253,
								7271
							],
							[
								7307,
								7324
							],
							[
								7351,
								7364
							],
							[
								7397,
								7410
							],
							[
								7413,
								7426
							],
							[
								7495,
								7508
							],
							[
								7511,
								7524
							],
							[
								7563,
								7576
							],
							[
								7579,
								7592
							],
							[
								7609,
								7625
							],
							[
								7688,
								7701
							],
							[
								7726,
								7746
							],
							[
								7754,
								7774
							],
							[
								7826,
								7847
							],
							[
								7954,
								7967
							],
							[
								7971,
								7985
							],
							[
								7992,
								8004
							],
							[
								8007,
								8021
							],
							[
								8119,
								8132
							],
							[
								8136,
								8153
							],
							[
								8191,
								8205
							],
							[
								8237,
								8252
							],
							[
								8255,
								8269
							],
							[
								8285,
								8298
							],
							[
								8390,
								8409
							],
							[
								8412,
								8426
							],
							[
								8476,
								8489
							],
							[
								8496,
								8507
							],
							[
								8510,
								8524
							],
							[
								8574,
								8587
							],
							[
								8591,
								8607
							],
							[
								8627,
								8642
							],
							[
								8649,
								8661
							],
							[
								8678,
								8691
							],
							[
								8695,
								8715
							],
							[
								8743,
								8755
							],
							[
								8758,
								8770
							],
							[
								8811,
								8828
							],
							[
								8855,
								8869
							],
							[
								8873,
								8886
							],
							[
								8893,
								8908
							],
							[
								8931,
								8944
							],
							[
								8948,
								8968
							],
							[
								8975,
								8988
							],
							[
								9029,
								9042
							],
							[
								9046,
								9060
							],
							[
								9083,
								9098
							],
							[
								9117,
								9129
							],
							[
								9132,
								9145
							],
							[
								9149,
								9169
							],
							[
								9176,
								9192
							],
							[
								9195,
								9208
							],
							[
								9212,
								9232
							],
							[
								9239,
								9254
							],
							[
								9257,
								9270
							],
							[
								9274,
								9294
							],
							[
								9326,
								9341
							],
							[
								9344,
								9359
							],
							[
								9429,
								9444
							],
							[
								9447,
								9462
							],
							[
								9528,
								9545
							],
							[
								9568,
								9583
							],
							[
								9586,
								9601
							],
							[
								9650,
								9662
							],
							[
								9665,
								9679
							],
							[
								9683,
								9696
							],
							[
								9703,
								9724
							],
							[
								9827,
								9847
							],
							[
								9851,
								9864
							],
							[
								9868,
								9882
							],
							[
								9890,
								9902
							],
							[
								9961,
								9973
							],
							[
								9977,
								9993
							],
							[
								10014,
								10028
							],
							[
								10036,
								10048
							],
							[
								10068,
								10088
							],
							[
								10091,
								10104
							],
							[
								10108,
								10128
							],
							[
								10242,
								10265
							],
							[
								10272,
								10287
							],
							[
								10290,
								10303
							],
							[
								10310,
								10327
							],
							[
								10330,
								10350
							],
							[
								10358,
								10376
							],
							[
								10379,
								10393
							],
							[
								10397,
								10417
							],
							[
								10461,
								10476
							],
							[
								10479,
								10494
							],
							[
								10572,
								10587
							],
							[
								10590,
								10605
							],
							[
								10621,
								10633
							],
							[
								10636,
								10648
							],
							[
								10825,
								10845
							],
							[
								11247,
								11266
							],
							[
								11294,
								11313
							],
							[
								11317,
								11336
							],
							[
								11395,
								11414
							],
							[
								11525,
								11544
							],
							[
								11574,
								11593
							],
							[
								11597,
								11616
							],
							[
								11677,
								11696
							],
							[
								11816,
								11835
							],
							[
								11867,
								11886
							],
							[
								11890,
								11909
							],
							[
								11972,
								11991
							],
							[
								12134,
								12158
							],
							[
								12163,
								12168
							],
							[
								12220,
								12225
							],
							[
								12249,
								12253
							],
							[
								12295,
								12299
							],
							[
								12324,
								12328
							],
							[
								12365,
								12389
							],
							[
								12393,
								12417
							],
							[
								12458,
								12461
							],
							[
								12476,
								12480
							],
							[
								12504,
								12528
							],
							[
								12564,
								12568
							],
							[
								12609,
								12633
							],
							[
								12637,
								12661
							],
							[
								12666,
								12670
							],
							[
								12728,
								12732
							],
							[
								12740,
								12744
							],
							[
								12750,
								12774
							],
							[
								12778,
								12782
							],
							[
								12812,
								12836
							],
							[
								12850,
								12854
							],
							[
								12878,
								12883
							],
							[
								13313,
								13328
							],
							[
								13368,
								13382
							],
							[
								13432,
								13443
							],
							[
								13447,
								13471
							],
							[
								13496,
								13511
							],
							[
								13530,
								13539
							],
							[
								13588,
								13597
							],
							[
								13629,
								13640
							],
							[
								13669,
								13684
							],
							[
								13733,
								13752
							],
							[
								13755,
								13759
							],
							[
								13779,
								13796
							],
							[
								13819,
								13833
							],
							[
								13862,
								13866
							],
							[
								13873,
								13888
							],
							[
								13908,
								13918
							],
							[
								14057,
								14070
							],
							[
								14078,
								14082
							],
							[
								14086,
								14110
							],
							[
								14216,
								14229
							],
							[
								14268,
								14292
							],
							[
								14298,
								14309
							],
							[
								14336,
								14347
							],
							[
								14373,
								14382
							],
							[
								14395,
								14399
							],
							[
								14413,
								14424
							],
							[
								14459,
								14483
							],
							[
								14513,
								14526
							],
							[
								14549,
								14573
							],
							[
								14676,
								14681
							],
							[
								14698,
								14719
							],
							[
								14781,
								14792
							],
							[
								14967,
								14978
							],
							[
								15049,
								15059
							],
							[
								15089,
								15100
							],
							[
								15116,
								15140
							],
							[
								15163,
								15183
							],
							[
								15186,
								15210
							],
							[
								15229,
								15249
							],
							[
								15275,
								15295
							],
							[
								15368,
								15387
							],
							[
								15391,
								15411
							],
							[
								15470,
								15489
							],
							[
								15507,
								15531
							],
							[
								15580,
								15591
							],
							[
								15615,
								15619
							],
							[
								15638,
								15649
							],
							[
								15666,
								15690
							],
							[
								15718,
								15727
							],
							[
								15751,
								15775
							],
							[
								15843,
								15867
							],
							[
								15911,
								15923
							],
							[
								15937,
								15948
							],
							[
								15959,
								15970
							],
							[
								15984,
								15995
							],
							[
								16009,
								16020
							],
							[
								16037,
								16048
							],
							[
								16062,
								16073
							],
							[
								16082,
								16093
							],
							[
								16110,
								16121
							],
							[
								16139,
								16150
							],
							[
								16160,
								16171
							],
							[
								16182,
								16200
							],
							[
								16216,
								16240
							],
							[
								16296,
								16308
							],
							[
								16311,
								16323
							],
							[
								16327,
								16351
							],
							[
								16398,
								16422
							],
							[
								16456,
								16474
							],
							[
								16520,
								16544
							],
							[
								16613,
								16625
							],
							[
								16701,
								16719
							],
							[
								16795,
								16811
							],
							[
								17036,
								17047
							],
							[
								17054,
								17076
							],
							[
								17080,
								17102
							],
							[
								17108,
								17119
							],
							[
								17177,
								17188
							],
							[
								17194,
								17205
							],
							[
								17274,
								17296
							],
							[
								17350,
								17369
							],
							[
								17408,
								17423
							],
							[
								17427,
								17437
							],
							[
								17441,
								17451
							],
							[
								17455,
								17459
							],
							[
								17463,
								17468
							],
							[
								17472,
								17481
							],
							[
								17560,
								17575
							],
							[
								17595,
								17617
							],
							[
								17658,
								17677
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_EXECUTABLE_SUFFIX",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"USE_SPAWN",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"stringdecoder_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"archive_SOURCES",
							"utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJS",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"NAME",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST",
							"CMAKE_CURRENT_BINARY_DIR",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QUICKJS_MODULES",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"QJSM",
							"TEST_SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY",
							"QJSM_LDADD",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_MODULE_PATH"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACiAAAAQ01BS0VfQ0FDSEVGSUxFX0RJUgpDTUFLRV9DQUNIRV9NQUpPUl9WRVJTSU9OCkNNQUtFX0NBQ0hFX01JTk9SX1ZFUlNJT04KQ01BS0VfQ0FDSEVfUEFUQ0hfVkVSU0lPTgpDTUFLRV9DT01NQU5ECkNNQUtFX0NQQUNLX0NPTU1BTkQKQ01BS0VfQ1RFU1RfQ09NTUFORApDTUFLRV9ST09UAAAAAAAAAABIEQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					128,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABIEQAAQ01BS0VfQ19TVEFOREFSRApDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKU0MKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX1JFUVVJUkVEX1FVSUVUCkhBVkVfUE9TSVhfU1BBV05QClVTRV9TUEFXTgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NfQ09NUElMRVIKQ01BS0VfU1lTUk9PVApDTUFLRV9UT09MQ0hBSU5fRklMRQpDTUFLRV9WRVJCT1NFX01BS0VGSUxFCkNNQUtFX0JVSUxEX1RZUEUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFVSUNLSlNfSU5DTFVERV9ESVJTClFVSUNLSlNfTElCUkFSWV9ESVIKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTCkxJQl9NT0RVTEVTClFVSUNLSlNfSApDT01NT05fSEVBREVSUwpDVVRJTFNfSApRVUlDS0pTX0gKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBjaGFyX3V0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgY2hhcl91dGlsc19TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgbG9jYXRpb25fU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgY2hpbGRfcHJvY2Vzc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgZGVlcF9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICBkZWVwX0xJQlJBUklFUwogIGluc3BlY3RfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHRyZWVfd2Fsa2VyX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB4bWxfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICBpbnNwZWN0X1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwcmVkaWNhdGVfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHBvaW50ZXJfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIGxleGVyX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBsZXhlcl9MSUJSQVJJRVMKICBtbWFwX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICByZXBlYXRlcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19MSUJSQVJJRVMKICBzb2NrZXRzX1NPVVJDRVMKICBzb2NrZXRzX1NPVVJDRVMKICBibG9iX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBzdHJpbmdkZWNvZGVyX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIG1pc2NfU09VUkNFUwogIHBhdGhfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGdwaW9fU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCkxpYkFyY2hpdmVfSU5DTFVERV9ESVJTCiAgYXJjaGl2ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGFyY2hpdmVfTElCUkFSSUVTCkxpYkFyY2hpdmVfTElCUkFSSUVTClFKU01fRVhUUkFfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTCiAgbW1hcF9TT1VSQ0VTCiAgbW1hcF9TT1VSQ0VTCkNNQUtFX1JFUVVJUkVEX1FVSUVUCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpURVNUUwpURVNUUwpURVNUCkJBU0UKQkFTRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKUwpURVNUCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpCQVNFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTQwpOQU1FCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1QKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRFU1QKVEVTVFMKUVVJQ0tKU19NT0RVTEVTClNIQVJFRF9UQVJHRVRTClFKU01fTElCRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRVUlDS0pTX01PRFVMRVMKICBwcmVkaWNhdGVfTElCUkFSSUVTCkxJQk0KICBzb2NrZXRzX0xJQlJBUklFUwogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9MSUJSQVJJRVMKICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FClFKU00KVEVTVF9TT1VSQ0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkxJQkpTClFVSUNLSlNfSlNfTU9EVUxFX0RJUgpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFCkxJQl9NT0RVTEVTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19JTkNMVURFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVTX0RJUgpRSlNDCk1PRFVMRVNfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNDX0RFUFMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKUUpTTV9FWFRSQV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTTV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVFJBTlNQT1JUX1BMQVRGT1JNCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTX01PRFVMRVNfU1RBVElDCkNPTVBJTEVEX01PRFVMRVMKUUpTTV9MSUJESVIKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTClFKU01fTElCRElSCkxJTktfRVhQT1JUClFKU01fTElCRElSClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKUVVJQ0tKU19MSUJSQVJZX0RJUgpRVUlDS0pTX0xJQlJBUlkKUUpTTV9MREFERApMSUJQVEhSRUFECkxJQk0KTElCREwKTElCV1MyXzMyClFVSUNLSlNfVkVSU0lPTgpRVUlDS0pTX0lOU1RBTExfUFJFRklYClFVSUNLSlNfTU9EVUxFX1BBVEgAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					129,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								61,
								77
							],
							[
								255,
								278
							],
							[
								480,
								512
							],
							[
								617,
								634
							],
							[
								721,
								745
							],
							[
								780,
								804
							],
							[
								841,
								865
							],
							[
								904,
								928
							],
							[
								1102,
								1126
							],
							[
								1167,
								1191
							],
							[
								1238,
								1241
							],
							[
								1245,
								1269
							],
							[
								1332,
								1336
							],
							[
								1340,
								1364
							],
							[
								1759,
								1779
							],
							[
								2539,
								2556
							],
							[
								2601,
								2610
							],
							[
								5527,
								5551
							],
							[
								5581,
								5605
							],
							[
								5676,
								5692
							],
							[
								5719,
								5732
							],
							[
								5776,
								5796
							],
							[
								5866,
								5888
							],
							[
								5920,
								5936
							],
							[
								6025,
								6049
							],
							[
								6161,
								6181
							],
							[
								6203,
								6222
							],
							[
								6333,
								6348
							],
							[
								6524,
								6539
							],
							[
								6550,
								6565
							],
							[
								6636,
								6651
							],
							[
								6654,
								6669
							],
							[
								6754,
								6769
							],
							[
								6772,
								6787
							],
							[
								6873,
								6884
							],
							[
								6980,
								6989
							],
							[
								7000,
								7014
							],
							[
								7017,
								7025
							],
							[
								7029,
								7038
							],
							[
								7053,
								7073
							],
							[
								7109,
								7123
							],
							[
								7144,
								7164
							],
							[
								7171,
								7189
							],
							[
								7221,
								7234
							],
							[
								7253,
								7271
							],
							[
								7307,
								7324
							],
							[
								7351,
								7364
							],
							[
								7397,
								7410
							],
							[
								7413,
								7426
							],
							[
								7495,
								7508
							],
							[
								7511,
								7524
							],
							[
								7563,
								7576
							],
							[
								7579,
								7592
							],
							[
								7609,
								7625
							],
							[
								7688,
								7701
							],
							[
								7726,
								7746
							],
							[
								7754,
								7774
							],
							[
								7826,
								7847
							],
							[
								7954,
								7967
							],
							[
								7971,
								7985
							],
							[
								7992,
								8004
							],
							[
								8007,
								8021
							],
							[
								8119,
								8132
							],
							[
								8136,
								8153
							],
							[
								8191,
								8205
							],
							[
								8237,
								8252
							],
							[
								8255,
								8269
							],
							[
								8285,
								8298
							],
							[
								8390,
								8409
							],
							[
								8412,
								8426
							],
							[
								8476,
								8489
							],
							[
								8496,
								8507
							],
							[
								8510,
								8524
							],
							[
								8574,
								8587
							],
							[
								8591,
								8607
							],
							[
								8627,
								8642
							],
							[
								8649,
								8661
							],
							[
								8678,
								8691
							],
							[
								8695,
								8715
							],
							[
								8743,
								8755
							],
							[
								8758,
								8770
							],
							[
								8811,
								8828
							],
							[
								8855,
								8869
							],
							[
								8873,
								8886
							],
							[
								8893,
								8908
							],
							[
								8931,
								8944
							],
							[
								8948,
								8968
							],
							[
								8975,
								8988
							],
							[
								9029,
								9042
							],
							[
								9046,
								9060
							],
							[
								9083,
								9098
							],
							[
								9117,
								9129
							],
							[
								9132,
								9145
							],
							[
								9149,
								9169
							],
							[
								9176,
								9192
							],
							[
								9195,
								9208
							],
							[
								9212,
								9232
							],
							[
								9239,
								9254
							],
							[
								9257,
								9270
							],
							[
								9274,
								9294
							],
							[
								9326,
								9341
							],
							[
								9344,
								9359
							],
							[
								9429,
								9444
							],
							[
								9447,
								9462
							],
							[
								9528,
								9545
							],
							[
								9568,
								9583
							],
							[
								9586,
								9601
							],
							[
								9650,
								9662
							],
							[
								9665,
								9679
							],
							[
								9683,
								9696
							],
							[
								9703,
								9724
							],
							[
								9827,
								9847
							],
							[
								9851,
								9864
							],
							[
								9868,
								9882
							],
							[
								9890,
								9902
							],
							[
								9961,
								9973
							],
							[
								9977,
								9993
							],
							[
								10014,
								10028
							],
							[
								10036,
								10048
							],
							[
								10068,
								10088
							],
							[
								10091,
								10104
							],
							[
								10108,
								10128
							],
							[
								10242,
								10265
							],
							[
								10272,
								10287
							],
							[
								10290,
								10303
							],
							[
								10310,
								10327
							],
							[
								10330,
								10350
							],
							[
								10358,
								10376
							],
							[
								10379,
								10393
							],
							[
								10397,
								10417
							],
							[
								10461,
								10476
							],
							[
								10479,
								10494
							],
							[
								10572,
								10587
							],
							[
								10590,
								10605
							],
							[
								10621,
								10633
							],
							[
								10636,
								10648
							],
							[
								10825,
								10845
							],
							[
								11247,
								11266
							],
							[
								11294,
								11313
							],
							[
								11317,
								11336
							],
							[
								11395,
								11414
							],
							[
								11525,
								11544
							],
							[
								11574,
								11593
							],
							[
								11597,
								11616
							],
							[
								11677,
								11696
							],
							[
								11816,
								11835
							],
							[
								11867,
								11886
							],
							[
								11890,
								11909
							],
							[
								11972,
								11991
							],
							[
								12134,
								12158
							],
							[
								12163,
								12168
							],
							[
								12220,
								12225
							],
							[
								12249,
								12253
							],
							[
								12295,
								12299
							],
							[
								12324,
								12328
							],
							[
								12365,
								12389
							],
							[
								12393,
								12417
							],
							[
								12458,
								12461
							],
							[
								12476,
								12480
							],
							[
								12504,
								12528
							],
							[
								12564,
								12568
							],
							[
								12609,
								12633
							],
							[
								12637,
								12661
							],
							[
								12666,
								12670
							],
							[
								12728,
								12732
							],
							[
								12740,
								12744
							],
							[
								12750,
								12774
							],
							[
								12778,
								12782
							],
							[
								12812,
								12836
							],
							[
								12850,
								12854
							],
							[
								12878,
								12883
							],
							[
								13313,
								13328
							],
							[
								13368,
								13382
							],
							[
								13432,
								13443
							],
							[
								13447,
								13471
							],
							[
								13496,
								13511
							],
							[
								13530,
								13539
							],
							[
								13588,
								13597
							],
							[
								13629,
								13640
							],
							[
								13669,
								13684
							],
							[
								13733,
								13752
							],
							[
								13755,
								13759
							],
							[
								13779,
								13796
							],
							[
								13819,
								13833
							],
							[
								13862,
								13866
							],
							[
								13873,
								13888
							],
							[
								13908,
								13918
							],
							[
								14057,
								14070
							],
							[
								14078,
								14082
							],
							[
								14086,
								14110
							],
							[
								14216,
								14229
							],
							[
								14268,
								14292
							],
							[
								14298,
								14309
							],
							[
								14336,
								14347
							],
							[
								14373,
								14382
							],
							[
								14395,
								14399
							],
							[
								14413,
								14424
							],
							[
								14459,
								14483
							],
							[
								14513,
								14526
							],
							[
								14549,
								14573
							],
							[
								14676,
								14681
							],
							[
								14698,
								14719
							],
							[
								14781,
								14792
							],
							[
								14967,
								14978
							],
							[
								15049,
								15059
							],
							[
								15089,
								15100
							],
							[
								15116,
								15140
							],
							[
								15163,
								15183
							],
							[
								15186,
								15210
							],
							[
								15229,
								15249
							],
							[
								15275,
								15295
							],
							[
								15368,
								15387
							],
							[
								15391,
								15411
							],
							[
								15470,
								15489
							],
							[
								15507,
								15531
							],
							[
								15580,
								15591
							],
							[
								15615,
								15619
							],
							[
								15638,
								15649
							],
							[
								15666,
								15690
							],
							[
								15718,
								15727
							],
							[
								15751,
								15775
							],
							[
								15843,
								15867
							],
							[
								15911,
								15923
							],
							[
								15937,
								15948
							],
							[
								15959,
								15970
							],
							[
								15984,
								15995
							],
							[
								16009,
								16020
							],
							[
								16037,
								16048
							],
							[
								16062,
								16073
							],
							[
								16082,
								16093
							],
							[
								16110,
								16121
							],
							[
								16139,
								16150
							],
							[
								16160,
								16171
							],
							[
								16182,
								16200
							],
							[
								16216,
								16240
							],
							[
								16296,
								16308
							],
							[
								16311,
								16323
							],
							[
								16327,
								16351
							],
							[
								16398,
								16422
							],
							[
								16456,
								16474
							],
							[
								16520,
								16544
							],
							[
								16613,
								16625
							],
							[
								16701,
								16719
							],
							[
								16795,
								16811
							],
							[
								17036,
								17047
							],
							[
								17054,
								17076
							],
							[
								17080,
								17102
							],
							[
								17108,
								17119
							],
							[
								17177,
								17188
							],
							[
								17194,
								17205
							],
							[
								17274,
								17296
							],
							[
								17350,
								17369
							],
							[
								17408,
								17423
							],
							[
								17427,
								17437
							],
							[
								17441,
								17451
							],
							[
								17455,
								17459
							],
							[
								17463,
								17468
							],
							[
								17472,
								17481
							],
							[
								17560,
								17575
							],
							[
								17595,
								17617
							],
							[
								17658,
								17677
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_EXECUTABLE_SUFFIX",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"USE_SPAWN",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"stringdecoder_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"archive_SOURCES",
							"utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJS",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"NAME",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST",
							"CMAKE_CURRENT_BINARY_DIR",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QUICKJS_MODULES",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"QJSM",
							"TEST_SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY",
							"QJSM_LDADD",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_MODULE_PATH"
						]
					},
					"AQAAAAAAAAAAAAAASBEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					130,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								61,
								77
							],
							[
								255,
								278
							],
							[
								480,
								512
							],
							[
								617,
								634
							],
							[
								721,
								745
							],
							[
								780,
								804
							],
							[
								841,
								865
							],
							[
								904,
								928
							],
							[
								1102,
								1126
							],
							[
								1167,
								1191
							],
							[
								1238,
								1241
							],
							[
								1245,
								1269
							],
							[
								1332,
								1336
							],
							[
								1340,
								1364
							],
							[
								1759,
								1779
							],
							[
								2539,
								2556
							],
							[
								2601,
								2610
							],
							[
								5532,
								5556
							],
							[
								5586,
								5610
							],
							[
								5681,
								5697
							],
							[
								5724,
								5737
							],
							[
								5781,
								5801
							],
							[
								5871,
								5893
							],
							[
								5925,
								5941
							],
							[
								6030,
								6054
							],
							[
								6166,
								6186
							],
							[
								6208,
								6227
							],
							[
								6338,
								6353
							],
							[
								6529,
								6544
							],
							[
								6555,
								6570
							],
							[
								6641,
								6656
							],
							[
								6659,
								6674
							],
							[
								6759,
								6774
							],
							[
								6777,
								6792
							],
							[
								6878,
								6889
							],
							[
								6985,
								6994
							],
							[
								7005,
								7019
							],
							[
								7022,
								7030
							],
							[
								7034,
								7043
							],
							[
								7058,
								7078
							],
							[
								7114,
								7128
							],
							[
								7149,
								7169
							],
							[
								7176,
								7194
							],
							[
								7226,
								7239
							],
							[
								7258,
								7276
							],
							[
								7312,
								7329
							],
							[
								7356,
								7369
							],
							[
								7402,
								7415
							],
							[
								7418,
								7431
							],
							[
								7500,
								7513
							],
							[
								7516,
								7529
							],
							[
								7568,
								7581
							],
							[
								7584,
								7597
							],
							[
								7614,
								7630
							],
							[
								7693,
								7706
							],
							[
								7731,
								7751
							],
							[
								7759,
								7779
							],
							[
								7831,
								7852
							],
							[
								7959,
								7972
							],
							[
								7976,
								7990
							],
							[
								7997,
								8009
							],
							[
								8012,
								8026
							],
							[
								8124,
								8137
							],
							[
								8141,
								8158
							],
							[
								8196,
								8210
							],
							[
								8242,
								8257
							],
							[
								8260,
								8274
							],
							[
								8290,
								8303
							],
							[
								8395,
								8414
							],
							[
								8417,
								8431
							],
							[
								8481,
								8494
							],
							[
								8501,
								8512
							],
							[
								8515,
								8529
							],
							[
								8579,
								8592
							],
							[
								8596,
								8612
							],
							[
								8632,
								8647
							],
							[
								8654,
								8666
							],
							[
								8683,
								8696
							],
							[
								8700,
								8720
							],
							[
								8748,
								8760
							],
							[
								8763,
								8775
							],
							[
								8816,
								8833
							],
							[
								8860,
								8874
							],
							[
								8878,
								8891
							],
							[
								8898,
								8913
							],
							[
								8936,
								8949
							],
							[
								8953,
								8973
							],
							[
								8980,
								8993
							],
							[
								9034,
								9047
							],
							[
								9051,
								9065
							],
							[
								9088,
								9103
							],
							[
								9122,
								9134
							],
							[
								9137,
								9150
							],
							[
								9154,
								9174
							],
							[
								9181,
								9197
							],
							[
								9200,
								9213
							],
							[
								9217,
								9237
							],
							[
								9244,
								9259
							],
							[
								9262,
								9275
							],
							[
								9279,
								9299
							],
							[
								9331,
								9346
							],
							[
								9349,
								9364
							],
							[
								9434,
								9449
							],
							[
								9452,
								9467
							],
							[
								9533,
								9550
							],
							[
								9573,
								9588
							],
							[
								9591,
								9606
							],
							[
								9655,
								9667
							],
							[
								9670,
								9684
							],
							[
								9688,
								9701
							],
							[
								9708,
								9729
							],
							[
								9832,
								9852
							],
							[
								9856,
								9869
							],
							[
								9873,
								9887
							],
							[
								9895,
								9907
							],
							[
								9966,
								9978
							],
							[
								9982,
								9998
							],
							[
								10019,
								10033
							],
							[
								10041,
								10053
							],
							[
								10073,
								10093
							],
							[
								10096,
								10109
							],
							[
								10113,
								10133
							],
							[
								10247,
								10270
							],
							[
								10277,
								10292
							],
							[
								10295,
								10308
							],
							[
								10315,
								10332
							],
							[
								10335,
								10355
							],
							[
								10363,
								10381
							],
							[
								10384,
								10398
							],
							[
								10402,
								10422
							],
							[
								10466,
								10481
							],
							[
								10484,
								10499
							],
							[
								10577,
								10592
							],
							[
								10595,
								10610
							],
							[
								10626,
								10638
							],
							[
								10641,
								10653
							],
							[
								10830,
								10850
							],
							[
								11252,
								11271
							],
							[
								11299,
								11318
							],
							[
								11322,
								11341
							],
							[
								11400,
								11419
							],
							[
								11530,
								11549
							],
							[
								11579,
								11598
							],
							[
								11602,
								11621
							],
							[
								11682,
								11701
							],
							[
								11821,
								11840
							],
							[
								11872,
								11891
							],
							[
								11895,
								11914
							],
							[
								11977,
								11996
							],
							[
								12139,
								12163
							],
							[
								12168,
								12173
							],
							[
								12225,
								12230
							],
							[
								12254,
								12258
							],
							[
								12300,
								12304
							],
							[
								12329,
								12333
							],
							[
								12370,
								12394
							],
							[
								12398,
								12422
							],
							[
								12463,
								12466
							],
							[
								12481,
								12485
							],
							[
								12509,
								12533
							],
							[
								12569,
								12573
							],
							[
								12614,
								12638
							],
							[
								12642,
								12666
							],
							[
								12671,
								12675
							],
							[
								12733,
								12737
							],
							[
								12745,
								12749
							],
							[
								12755,
								12779
							],
							[
								12783,
								12787
							],
							[
								12817,
								12841
							],
							[
								12855,
								12859
							],
							[
								12883,
								12888
							],
							[
								13318,
								13333
							],
							[
								13373,
								13387
							],
							[
								13437,
								13448
							],
							[
								13452,
								13476
							],
							[
								13501,
								13516
							],
							[
								13535,
								13544
							],
							[
								13593,
								13602
							],
							[
								13634,
								13645
							],
							[
								13674,
								13689
							],
							[
								13738,
								13757
							],
							[
								13760,
								13764
							],
							[
								13784,
								13801
							],
							[
								13824,
								13838
							],
							[
								13867,
								13871
							],
							[
								13878,
								13893
							],
							[
								13913,
								13923
							],
							[
								14062,
								14075
							],
							[
								14083,
								14087
							],
							[
								14091,
								14115
							],
							[
								14221,
								14234
							],
							[
								14273,
								14297
							],
							[
								14303,
								14314
							],
							[
								14341,
								14352
							],
							[
								14378,
								14387
							],
							[
								14400,
								14404
							],
							[
								14418,
								14429
							],
							[
								14464,
								14488
							],
							[
								14518,
								14531
							],
							[
								14554,
								14578
							],
							[
								14681,
								14686
							],
							[
								14703,
								14724
							],
							[
								14786,
								14797
							],
							[
								14972,
								14983
							],
							[
								15054,
								15064
							],
							[
								15094,
								15105
							],
							[
								15121,
								15145
							],
							[
								15168,
								15188
							],
							[
								15191,
								15215
							],
							[
								15234,
								15254
							],
							[
								15280,
								15300
							],
							[
								15373,
								15392
							],
							[
								15396,
								15416
							],
							[
								15475,
								15494
							],
							[
								15512,
								15536
							],
							[
								15585,
								15596
							],
							[
								15620,
								15624
							],
							[
								15643,
								15654
							],
							[
								15671,
								15695
							],
							[
								15723,
								15732
							],
							[
								15756,
								15780
							],
							[
								15848,
								15872
							],
							[
								15916,
								15928
							],
							[
								15942,
								15953
							],
							[
								15964,
								15975
							],
							[
								15989,
								16000
							],
							[
								16014,
								16025
							],
							[
								16042,
								16053
							],
							[
								16067,
								16078
							],
							[
								16087,
								16098
							],
							[
								16115,
								16126
							],
							[
								16144,
								16155
							],
							[
								16165,
								16176
							],
							[
								16187,
								16205
							],
							[
								16221,
								16245
							],
							[
								16301,
								16313
							],
							[
								16316,
								16328
							],
							[
								16332,
								16356
							],
							[
								16403,
								16427
							],
							[
								16461,
								16479
							],
							[
								16525,
								16549
							],
							[
								16618,
								16630
							],
							[
								16706,
								16724
							],
							[
								16800,
								16816
							],
							[
								17041,
								17052
							],
							[
								17059,
								17081
							],
							[
								17085,
								17107
							],
							[
								17113,
								17124
							],
							[
								17182,
								17193
							],
							[
								17199,
								17210
							],
							[
								17279,
								17301
							],
							[
								17355,
								17374
							],
							[
								17413,
								17428
							],
							[
								17432,
								17442
							],
							[
								17446,
								17456
							],
							[
								17460,
								17464
							],
							[
								17468,
								17473
							],
							[
								17477,
								17486
							],
							[
								17565,
								17580
							],
							[
								17600,
								17622
							],
							[
								17663,
								17682
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_EXECUTABLE_SUFFIX",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"USE_SPAWN",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"stringdecoder_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"archive_SOURCES",
							"utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJS",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"NAME",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST",
							"CMAKE_CURRENT_BINARY_DIR",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QUICKJS_MODULES",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"QJSM",
							"TEST_SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY",
							"QJSM_LDADD",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_MODULE_PATH"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABIEQAAQ01BS0VfQ19TVEFOREFSRApDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKU0MKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX1JFUVVJUkVEX1FVSUVUCkhBVkVfUE9TSVhfU1BBV05QClVTRV9TUEFXTgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NfQ09NUElMRVIKQ01BS0VfU1lTUk9PVApDTUFLRV9UT09MQ0hBSU5fRklMRQpDTUFLRV9WRVJCT1NFX01BS0VGSUxFCkNNQUtFX0JVSUxEX1RZUEUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFVSUNLSlNfSU5DTFVERV9ESVJTClFVSUNLSlNfTElCUkFSWV9ESVIKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTCkxJQl9NT0RVTEVTClFVSUNLSlNfSApDT01NT05fSEVBREVSUwpDVVRJTFNfSApRVUlDS0pTX0gKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBjaGFyX3V0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgY2hhcl91dGlsc19TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgbG9jYXRpb25fU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgY2hpbGRfcHJvY2Vzc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgZGVlcF9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICBkZWVwX0xJQlJBUklFUwogIGluc3BlY3RfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHRyZWVfd2Fsa2VyX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB4bWxfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICBpbnNwZWN0X1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwcmVkaWNhdGVfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHBvaW50ZXJfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIGxleGVyX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBsZXhlcl9MSUJSQVJJRVMKICBtbWFwX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICByZXBlYXRlcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19MSUJSQVJJRVMKICBzb2NrZXRzX1NPVVJDRVMKICBzb2NrZXRzX1NPVVJDRVMKICBibG9iX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBzdHJpbmdkZWNvZGVyX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIG1pc2NfU09VUkNFUwogIHBhdGhfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGdwaW9fU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCkxpYkFyY2hpdmVfSU5DTFVERV9ESVJTCiAgYXJjaGl2ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGFyY2hpdmVfTElCUkFSSUVTCkxpYkFyY2hpdmVfTElCUkFSSUVTClFKU01fRVhUUkFfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTCiAgbW1hcF9TT1VSQ0VTCiAgbW1hcF9TT1VSQ0VTCkNNQUtFX1JFUVVJUkVEX1FVSUVUCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpURVNUUwpURVNUUwpURVNUCkJBU0UKQkFTRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKUwpURVNUCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpCQVNFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTQwpOQU1FCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1QKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRFU1QKVEVTVFMKUVVJQ0tKU19NT0RVTEVTClNIQVJFRF9UQVJHRVRTClFKU01fTElCRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRVUlDS0pTX01PRFVMRVMKICBwcmVkaWNhdGVfTElCUkFSSUVTCkxJQk0KICBzb2NrZXRzX0xJQlJBUklFUwogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9MSUJSQVJJRVMKICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FClFKU00KVEVTVF9TT1VSQ0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkxJQkpTClFVSUNLSlNfSlNfTU9EVUxFX0RJUgpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFCkxJQl9NT0RVTEVTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19JTkNMVURFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVTX0RJUgpRSlNDCk1PRFVMRVNfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNDX0RFUFMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKUUpTTV9FWFRSQV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTTV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVFJBTlNQT1JUX1BMQVRGT1JNCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTX01PRFVMRVNfU1RBVElDCkNPTVBJTEVEX01PRFVMRVMKUUpTTV9MSUJESVIKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTClFKU01fTElCRElSCkxJTktfRVhQT1JUClFKU01fTElCRElSClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKUVVJQ0tKU19MSUJSQVJZX0RJUgpRVUlDS0pTX0xJQlJBUlkKUUpTTV9MREFERApMSUJQVEhSRUFECkxJQk0KTElCREwKTElCV1MyXzMyClFVSUNLSlNfVkVSU0lPTgpRVUlDS0pTX0lOU1RBTExfUFJFRklYClFVSUNLSlNfTU9EVUxFX1BBVEgAAAAAAAAAAEgRAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					131,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
						"symkeys":
						[
							[
								811,
								830
							],
							[
								954,
								979
							],
							[
								1056,
								1081
							],
							[
								1159,
								1184
							],
							[
								1231,
								1244
							],
							[
								1320,
								1339
							],
							[
								1415,
								1434
							],
							[
								1504,
								1514
							]
						],
						"symlist":
						[
							"CMAKE_CACHEFILE_DIR",
							"CMAKE_CACHE_MAJOR_VERSION",
							"CMAKE_CACHE_MINOR_VERSION",
							"CMAKE_CACHE_PATCH_VERSION",
							"CMAKE_COMMAND",
							"CMAKE_CPACK_COMMAND",
							"CMAKE_CTEST_COMMAND",
							"CMAKE_ROOT"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABIEQAAQ01BS0VfQ19TVEFOREFSRApDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKU0MKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX1JFUVVJUkVEX1FVSUVUCkhBVkVfUE9TSVhfU1BBV05QClVTRV9TUEFXTgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NfQ09NUElMRVIKQ01BS0VfU1lTUk9PVApDTUFLRV9UT09MQ0hBSU5fRklMRQpDTUFLRV9WRVJCT1NFX01BS0VGSUxFCkNNQUtFX0JVSUxEX1RZUEUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFVSUNLSlNfSU5DTFVERV9ESVJTClFVSUNLSlNfTElCUkFSWV9ESVIKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTCkxJQl9NT0RVTEVTClFVSUNLSlNfSApDT01NT05fSEVBREVSUwpDVVRJTFNfSApRVUlDS0pTX0gKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBjaGFyX3V0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgY2hhcl91dGlsc19TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgbG9jYXRpb25fU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgY2hpbGRfcHJvY2Vzc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgZGVlcF9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICBkZWVwX0xJQlJBUklFUwogIGluc3BlY3RfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHRyZWVfd2Fsa2VyX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB4bWxfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICBpbnNwZWN0X1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwcmVkaWNhdGVfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHBvaW50ZXJfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIGxleGVyX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBsZXhlcl9MSUJSQVJJRVMKICBtbWFwX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICByZXBlYXRlcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19MSUJSQVJJRVMKICBzb2NrZXRzX1NPVVJDRVMKICBzb2NrZXRzX1NPVVJDRVMKICBibG9iX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBzdHJpbmdkZWNvZGVyX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIG1pc2NfU09VUkNFUwogIHBhdGhfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGdwaW9fU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCkxpYkFyY2hpdmVfSU5DTFVERV9ESVJTCiAgYXJjaGl2ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGFyY2hpdmVfTElCUkFSSUVTCkxpYkFyY2hpdmVfTElCUkFSSUVTClFKU01fRVhUUkFfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTCiAgbW1hcF9TT1VSQ0VTCiAgbW1hcF9TT1VSQ0VTCkNNQUtFX1JFUVVJUkVEX1FVSUVUCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpURVNUUwpURVNUUwpURVNUCkJBU0UKQkFTRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKUwpURVNUCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpCQVNFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTQwpOQU1FCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1QKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRFU1QKVEVTVFMKUVVJQ0tKU19NT0RVTEVTClNIQVJFRF9UQVJHRVRTClFKU01fTElCRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRVUlDS0pTX01PRFVMRVMKICBwcmVkaWNhdGVfTElCUkFSSUVTCkxJQk0KICBzb2NrZXRzX0xJQlJBUklFUwogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9MSUJSQVJJRVMKICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FClFKU00KVEVTVF9TT1VSQ0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkxJQkpTClFVSUNLSlNfSlNfTU9EVUxFX0RJUgpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFCkxJQl9NT0RVTEVTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19JTkNMVURFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVTX0RJUgpRSlNDCk1PRFVMRVNfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNDX0RFUFMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKUUpTTV9FWFRSQV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTTV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVFJBTlNQT1JUX1BMQVRGT1JNCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTX01PRFVMRVNfU1RBVElDCkNPTVBJTEVEX01PRFVMRVMKUUpTTV9MSUJESVIKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTClFKU01fTElCRElSCkxJTktfRVhQT1JUClFKU01fTElCRElSClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKUVVJQ0tKU19MSUJSQVJZX0RJUgpRVUlDS0pTX0xJQlJBUlkKUUpTTV9MREFERApMSUJQVEhSRUFECkxJQk0KTElCREwKTElCV1MyXzMyClFVSUNLSlNfVkVSU0lPTgpRVUlDS0pTX0lOU1RBTExfUFJFRklYClFVSUNLSlNfTU9EVUxFX1BBVEgAAAAAAAAAAKIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					132,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								828,
								848
							],
							[
								1038,
								1054
							],
							[
								1108,
								1127
							],
							[
								1162,
								1178
							],
							[
								1238,
								1254
							],
							[
								1317,
								1351
							],
							[
								1374,
								1406
							],
							[
								1429,
								1472
							],
							[
								3301,
								3320
							],
							[
								3418,
								3434
							],
							[
								3496,
								3514
							],
							[
								3578,
								3597
							],
							[
								3662,
								3671
							],
							[
								3726,
								3743
							],
							[
								3806,
								3823
							],
							[
								3886,
								3900
							],
							[
								3960,
								3975
							],
							[
								4036,
								4051
							],
							[
								4112,
								4120
							],
							[
								4174,
								4186
							],
							[
								4244,
								4254
							],
							[
								4310,
								4321
							],
							[
								4378,
								4386
							],
							[
								4440,
								4462
							],
							[
								4530,
								4545
							],
							[
								4606,
								4628
							],
							[
								4696,
								4712
							],
							[
								4774,
								4790
							],
							[
								4852,
								4864
							],
							[
								4922,
								4934
							],
							[
								4992,
								5005
							],
							[
								5064,
								5082
							],
							[
								5140,
								5158
							],
							[
								5222,
								5244
							],
							[
								5312,
								5339
							],
							[
								5412,
								5429
							],
							[
								5486,
								5503
							],
							[
								5560,
								5577
							],
							[
								5624,
								5640
							],
							[
								5723,
								5739
							],
							[
								5811,
								5827
							],
							[
								5899,
								5916
							],
							[
								5973,
								5993
							],
							[
								6052,
								6072
							],
							[
								6231,
								6250
							],
							[
								6326,
								6333
							],
							[
								6362,
								6382
							],
							[
								6452,
								6467
							],
							[
								6528,
								6554
							],
							[
								6625,
								6641
							],
							[
								6697,
								6710
							],
							[
								6782,
								6808
							],
							[
								6854,
								6879
							],
							[
								6964,
								7006
							],
							[
								7140,
								7180
							],
							[
								10109,
								10152
							],
							[
								10533,
								10568
							],
							[
								10724,
								10742
							],
							[
								10772,
								10777
							],
							[
								10867,
								10894
							],
							[
								11013,
								11034
							],
							[
								11063,
								11079
							],
							[
								11172,
								11207
							],
							[
								11247,
								11265
							],
							[
								11452,
								11473
							],
							[
								11497,
								11507
							],
							[
								11546,
								11576
							],
							[
								11902,
								11936
							],
							[
								12237,
								12271
							],
							[
								12491,
								12525
							],
							[
								12591,
								12627
							],
							[
								12702,
								12719
							],
							[
								12878,
								12915
							],
							[
								12916,
								12930
							],
							[
								12936,
								12940
							],
							[
								13015,
								13047
							],
							[
								13075,
								13101
							],
							[
								13426,
								13448
							],
							[
								13486,
								13502
							],
							[
								13517,
								13524
							],
							[
								13546,
								13562
							],
							[
								13600,
								13628
							],
							[
								13847,
								13864
							],
							[
								13865,
								13874
							],
							[
								13926,
								13943
							],
							[
								13944,
								13953
							],
							[
								14013,
								14030
							],
							[
								14031,
								14054
							],
							[
								14110,
								14134
							],
							[
								16761,
								16789
							],
							[
								17220,
								17224
							],
							[
								17352,
								17365
							],
							[
								17681,
								17693
							],
							[
								17956,
								17969
							],
							[
								18074,
								18088
							],
							[
								18981,
								19009
							],
							[
								19125,
								19138
							],
							[
								19250,
								19276
							],
							[
								19456,
								19479
							],
							[
								19623,
								19675
							],
							[
								19769,
								19785
							],
							[
								19869,
								19880
							],
							[
								19993,
								19997
							],
							[
								20276,
								20309
							],
							[
								20423,
								20459
							],
							[
								20616,
								20632
							],
							[
								20646,
								20668
							],
							[
								20781,
								20787
							],
							[
								22149,
								22191
							],
							[
								22386,
								22417
							],
							[
								22467,
								22509
							],
							[
								22629,
								22653
							],
							[
								22873,
								22883
							],
							[
								22936,
								22940
							],
							[
								22979,
								23006
							],
							[
								23053,
								23065
							],
							[
								23135,
								23147
							],
							[
								23210,
								23235
							],
							[
								23280,
								23311
							],
							[
								23322,
								23339
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterator(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACiAAAAQ01BS0VfQ0FDSEVGSUxFX0RJUgpDTUFLRV9DQUNIRV9NQUpPUl9WRVJTSU9OCkNNQUtFX0NBQ0hFX01JTk9SX1ZFUlNJT04KQ01BS0VfQ0FDSEVfUEFUQ0hfVkVSU0lPTgpDTUFLRV9DT01NQU5ECkNNQUtFX0NQQUNLX0NPTU1BTkQKQ01BS0VfQ1RFU1RfQ09NTUFORApDTUFLRV9ST09UAAAAAAAAAABnCQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "/home/roman/.config/sublime-text/Packages/User/Themes/Aurora.tmTheme",
			"settings":
			{
				"buffer_size": 316601,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/util.js",
			"redo_stack":
			[
				[
					26,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AgAAABArAAAAAAAAFysAAAAAAAAAAAAADysAAAAAAAAPKwAAAAAAAAEAAABs",
					"AQAAAAAAAAABAAAAECsAAAAAAAAQKwAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 25389,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 17740,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAAKMKAAAAAAAApAoAAAAAAAAAAAAApAoAAAAAAAClCgAAAAAAAAAAAAClCgAAAAAAAKYKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowoAAAAAAACjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKYKAAAAAAAApwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgoAAAAAAACmCgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAALIKAAAAAAAAswoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgoAAAAAAACyCgAAAAAAAAAAAAAAAAAA"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/Testing"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_console.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/iteration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qsort_r.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/inet_ntop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_location.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debugger.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tmp.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/check-flags.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/TODO",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_watch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/clock_gettime.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/require.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Dokumente/bookmarks_10_26_21.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tmp.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/base64.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/Doxyfile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/.clang-format",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/fs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/util.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/repl.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-gnu/modules/qjscalc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-gnu/modules/repl.c",
		"/home/roman/.config/sublime-text/Packages/User/ExtendedSwitcher.sublime-settings",
		"/home/roman/.config/sublime-text/Packages/ExtendedSwitcher/ExtendedSwitcher.sublime-settings",
		"/home/roman/Projects/plot-cv/lib/jslexer.js",
		"/home/roman/.config/sublime-text/Packages/User/LiveReload.sublime-settings",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/socketpair_win32.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/.config/sublime-text/Packages/LiveReload/LiveReload.sublime-settings",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/coreutils/gnulib/lib/execute.c",
		"/home/roman/Projects/coreutils/gnulib/lib/windows-spawn.h",
		"/home/roman/Projects/coreutils/gnulib/lib/spawn-pipe.c",
		"/tmp/spawn/pcs_exec.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/modules.project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/tmp/spawn/process.2.c",
		"/tmp/spawn/process.c",
		"/tmp/spawn/systemimpl.1.c",
		"/tmp/spawn/systemimpl.c",
		"/tmp/spawnvpe/fgvsys_d.c",
		"/tmp/spawnvpe/posixmodule.1.c"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"lazy",
			"took",
			"'took",
			"'Loading",
			"'files'",
			"'lexer'",
			"^(\\s*)(console)",
			"^\\s*console",
			"readFileSy",
			"'readFile",
			"fileImports",
			"lib/util",
			"/>",
			"xml_enumeration_next",
			"xml_close_el",
			"xml_write_element",
			"property_enumeration_recurse$",
			"property_enumeration_recurse",
			"js_object_tostring",
			"js_global_",
			"js_global",
			"js_global_prototype",
			"js_object_tostring",
			"js_value_tostring",
			"js_object_tostring",
			"object_tostring",
			"js_[^ ]*global",
			"js_object_tostring",
			"print_object",
			"js_is_array",
			"js_is_arraybuffer",
			"js_inspect_custom_atom",
			"add_exe",
			"qjsm",
			"location_SOURCES",
			"write_indent",
			"xml_num_children",
			"JS_HasProperty",
			"yield_push",
			"js_tostring",
			"propertystr_string",
			"js_xml_parse",
			"element =",
			"js_xml_parse",
			"syscall",
			"buffers",
			"BufferLengths",
			"buffers",
			"lexer_peek",
			"lexer_state_top",
			"-x",
			"debug =",
			"printTok",
			"location_print",
			"file",
			"JS_Atom",
			"file",
			"AtomToCString",
			"file",
			"state",
			"topState",
			"lexer_state_top",
			"memmem",
			"max_array_le",
			"LineContinuation",
			"lexer.rule",
			"lexer_states_skip",
			"lexer_rule_dump",
			"getByteCode",
			"GLOB_APPEND",
			"'token'",
			"compact",
			"property_enumeration_next",
			"property_enumeration_deepest",
			"property_enumeration_next",
			"'q'",
			"'cmd'",
			"historySave",
			"deepest",
			"js_math_func",
			"toArrayBuffer",
			"element =",
			"POP",
			"POP\\(",
			"push",
			"FROMARRAY",
			"BITFIELD_FROMARRAY",
			"BITFIELD_SET",
			"js_misc_bitfield",
			"BITFIELD_FROMARRAY",
			"JS_GetOwnPropertyNames",
			"isIterator",
			"Util\\.",
			"getOpt",
			"getPrototype",
			"js_misc_is",
			"isObject",
			"function isObject",
			"isFunction",
			";\n",
			"^\\s*printf",
			"continue",
			"vector_push",
			"'\\?'",
			"SPECIAL",
			"'\\?'",
			"\"xml",
			"printf",
			"tack.depth",
			"\"children",
			"JSCFunction",
			"js_repeater_push",
			"js_archive_version",
			"NewCFunc",
			"js_repeater_push",
			"malloc_usable_size",
			"usable.size",
			"WIFCONF",
			"POSIX_SPAWN",
			")\n",
			"check_func",
			"fork",
			"POSIX_SPAWN",
			"HAVE_INOTIFY",
			"inotify_ini",
			"inotify_",
			"xml_write_text",
			"xml_write_indent"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\1//\\2",
			"js_pointer_free_func",
			"BITFIELD_SET",
			"fd",
			"misc.IN_",
			"fd",
			"wd",
			"JSValueConst\\1",
			"s",
			"queue_alloc(",
			"queue_alloc",
			"rpt",
			"js_return_",
			"tmp",
			"repeater_execute",
			"queue_item",
			"linked_item",
			"queue_",
			"rpt",
			"Repeater",
			"resolvable_item",
			"resolvable_",
			"js_resolvable_",
			"repeater_push",
			"COLOR_NONE",
			"COLOR_CYAN",
			"COLOR_RED",
			"COLOR_LIGHTRED",
			"\" BACKGROUND_RED \"",
			"BACKGROUND_BLUE \"",
			"BACKGROUND_GREEN \"",
			"BACKGROUND_YELLOW \"",
			"\" COLOR_NONE \"",
			"js_inspect_print_map",
			"js_inspect_print_set",
			"js_inspect_print_arraybuffer",
			"js_inspect_print_regexp",
			"js_inspect_print_number",
			"js_inspect_print_string",
			"js_inspect_print_atom",
			"js_inspect_print_module",
			"js_inspect_print_value",
			"imp",
			"INC",
			"format",
			"\\1//\\2",
			"ctx",
			"sel",
			"console.log",
			"cmd",
			"js_socket_async_wait",
			"utils_SOURCES",
			"${util_SOURCES}",
			"${vector_SOURCES}",
			"socketpair",
			"",
			"#",
			"",
			"HAVE_MEMMEM",
			"log",
			"class_key",
			"}\\n\\nsize_t",
			"# ",
			"#",
			"HAVE_REALPATH",
			"",
			"HAVE_TERMIOS_H",
			"HAVE_MMAP",
			"HAVE_SYS_MMAN_H",
			"HAVE_SYS_WAIT_H",
			"length",
			"loc->",
			"ret->",
			"arg",
			" ",
			"",
			"\"\\\\t",
			"\"\\t",
			"imp.",
			"ctx,",
			"",
			"JSValueConst)",
			"",
			"jsm_module_loader",
			"js_module_loader_so",
			"js_eval_file",
			"js_eval_buf",
			"js_load_script",
			"jsm_eval_script",
			"js_eval_file",
			"js_load_module",
			"js_eval_str",
			"js_module_get",
			"JSValueConst)",
			"js_module_search",
			"jsm_module_find",
			"js_module_find",
			"js_load_",
			"js_load_module",
			"js_eval_buf",
			"js_load_script",
			"js_std_dump_error",
			"js_module_exports",
			"fdset",
			" ",
			"js_input_buffer",
			"\\1(\\2, sock",
			"\\1(",
			"",
			"JS_CGETSET_MAGIC_DEF",
			"off.",
			"} else if(",
			"port",
			".buf",
			"'",
			"",
			"socket_send",
			"0x00",
			" 0x00,",
			"0x78,",
			"0x78",
			" 0x00,",
			"0x78",
			"JS_CGETSET_MAGIC_DEF",
			"socket_syscalls_size",
			"js_syscallerror_get, js_syscallerror_set,",
			"js_socket_get, js_socket_set, ",
			"e"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2407,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
							"function_name_status_row": -1,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									828,
									848
								],
								[
									1038,
									1054
								],
								[
									1108,
									1127
								],
								[
									1162,
									1178
								],
								[
									1238,
									1254
								],
								[
									1317,
									1351
								],
								[
									1374,
									1406
								],
								[
									1429,
									1472
								],
								[
									3301,
									3320
								],
								[
									3418,
									3434
								],
								[
									3496,
									3514
								],
								[
									3578,
									3597
								],
								[
									3662,
									3671
								],
								[
									3726,
									3743
								],
								[
									3806,
									3823
								],
								[
									3886,
									3900
								],
								[
									3960,
									3975
								],
								[
									4036,
									4051
								],
								[
									4112,
									4120
								],
								[
									4174,
									4186
								],
								[
									4244,
									4254
								],
								[
									4310,
									4321
								],
								[
									4378,
									4386
								],
								[
									4440,
									4462
								],
								[
									4530,
									4545
								],
								[
									4606,
									4628
								],
								[
									4696,
									4712
								],
								[
									4774,
									4790
								],
								[
									4852,
									4864
								],
								[
									4922,
									4934
								],
								[
									4992,
									5005
								],
								[
									5064,
									5082
								],
								[
									5140,
									5158
								],
								[
									5222,
									5244
								],
								[
									5312,
									5339
								],
								[
									5412,
									5429
								],
								[
									5486,
									5503
								],
								[
									5560,
									5577
								],
								[
									5624,
									5640
								],
								[
									5723,
									5739
								],
								[
									5811,
									5827
								],
								[
									5899,
									5916
								],
								[
									5973,
									5993
								],
								[
									6052,
									6072
								],
								[
									6231,
									6250
								],
								[
									6326,
									6333
								],
								[
									6362,
									6382
								],
								[
									6452,
									6467
								],
								[
									6528,
									6554
								],
								[
									6625,
									6641
								],
								[
									6697,
									6710
								],
								[
									6782,
									6808
								],
								[
									6854,
									6879
								],
								[
									6964,
									7006
								],
								[
									7140,
									7180
								],
								[
									10109,
									10152
								],
								[
									10533,
									10568
								],
								[
									10724,
									10742
								],
								[
									10772,
									10777
								],
								[
									10867,
									10894
								],
								[
									11013,
									11034
								],
								[
									11063,
									11079
								],
								[
									11172,
									11207
								],
								[
									11247,
									11265
								],
								[
									11452,
									11473
								],
								[
									11497,
									11507
								],
								[
									11546,
									11576
								],
								[
									11902,
									11936
								],
								[
									12237,
									12271
								],
								[
									12491,
									12525
								],
								[
									12591,
									12627
								],
								[
									12702,
									12719
								],
								[
									12878,
									12915
								],
								[
									12916,
									12930
								],
								[
									12936,
									12940
								],
								[
									13015,
									13047
								],
								[
									13075,
									13101
								],
								[
									13426,
									13448
								],
								[
									13486,
									13502
								],
								[
									13517,
									13524
								],
								[
									13546,
									13562
								],
								[
									13600,
									13628
								],
								[
									13847,
									13864
								],
								[
									13865,
									13874
								],
								[
									13926,
									13943
								],
								[
									13944,
									13953
								],
								[
									14013,
									14030
								],
								[
									14031,
									14054
								],
								[
									14110,
									14134
								],
								[
									16761,
									16789
								],
								[
									17220,
									17224
								],
								[
									17352,
									17365
								],
								[
									17681,
									17693
								],
								[
									17956,
									17969
								],
								[
									18074,
									18088
								],
								[
									18981,
									19009
								],
								[
									19125,
									19138
								],
								[
									19250,
									19276
								],
								[
									19456,
									19479
								],
								[
									19623,
									19675
								],
								[
									19769,
									19785
								],
								[
									19869,
									19880
								],
								[
									19993,
									19997
								],
								[
									20276,
									20309
								],
								[
									20423,
									20459
								],
								[
									20616,
									20632
								],
								[
									20646,
									20668
								],
								[
									20781,
									20787
								],
								[
									22149,
									22191
								],
								[
									22386,
									22417
								],
								[
									22467,
									22509
								],
								[
									22629,
									22653
								],
								[
									22873,
									22883
								],
								[
									22936,
									22940
								],
								[
									22979,
									23006
								],
								[
									23053,
									23065
								],
								[
									23135,
									23147
								],
								[
									23210,
									23235
								],
								[
									23280,
									23311
								],
								[
									23322,
									23339
								]
							],
							"symlist":
							[
								"  slice = (x, s, e) =>",
								"  stringify = v =>",
								"  formatNumber = n =>",
								"  isNative = fn =>",
								"  util()",
								"AsyncFunction = function x()",
								"GeneratorFunction = function*()",
								"AsyncGeneratorFunction = function*()",
								"  isAnyArrayBuffer(v)",
								"  isArrayBuffer(v)",
								"  isBigInt64Array(v)",
								"  isBigUint64Array(v)",
								"  isDate(v)",
								"  isFloat32Array(v)",
								"  isFloat64Array(v)",
								"  isInt8Array(v)",
								"  isInt16Array(v)",
								"  isInt32Array(v)",
								"  isMap(v)",
								"  isPromise(v)",
								"  isProxy(v)",
								"  isRegExp(v)",
								"  isSet(v)",
								"  isSharedArrayBuffer(v)",
								"  isUint8Array(v)",
								"  isUint8ClampedArray(v)",
								"  isUint16Array(v)",
								"  isUint32Array(v)",
								"  isWeakMap(v)",
								"  isWeakSet(v)",
								"  isDataView(v)",
								"  isBooleanObject(v)",
								"  isAsyncFunction(v)",
								"  isGeneratorFunction(v)",
								"  isAsyncGeneratorFunction(v)",
								"  isNumberObject(v)",
								"  isBigIntObject(v)",
								"  isSymbolObject(v)",
								"  isNativeError(v)",
								"  isMapIterator(v)",
								"  isSetIterator(v)",
								"  isStringObject(v)",
								"  isArrayBufferView(v)",
								"  isArgumentsObject(v)",
								"  isBoxedPrimitive(v)",
								"  ctor =>",
								"  isGeneratorObject(v)",
								"  isTypedArray(v)",
								"  isModuleNamespaceObject(v)",
								"  isConstructor(v)",
								"  isIterator(v)",
								"  hasBuiltIn(o, m)",
								"  format(...args)",
								"  formatWithOptions(opts, ...args)",
								"  formatWithOptionsInternal(o, v)",
								"  assert(actual, expected, message)",
								"  setInterval(callback, ms)",
								"  start()",
								"() =>",
								"  clearInterval(id)",
								"  memoize(fn)",
								"\t(n, ...rest) =>",
								"  once(fn, thisArg, memoFn)",
								"\tfunction(...args)",
								"  waitFor(ms)",
								"  resolve =>",
								"  define(obj, ...args)",
								"  weakAssign(obj, ...args)",
								"  getConstructorChain(obj)",
								"  hasPrototype(obj, proto)",
								"  filter(seq, pred, thisArg)",
								"  pred = (el, i) =>",
								"\t(f, arr = [], length = f.length) =>",
								"\t(...args) =>",
								"  a =>",
								"  split(buf, ...points)",
								"  splitAt = (b, pos, len) =>",
								"  unique = (arr, cmp) =>",
								"\t(el, i, arr) =>",
								"  item =>",
								"\t(el, i, arr) =>",
								"  getFunctionArguments = fn =>",
								"\t(offset = 0) =>",
								"\tcode =>",
								"\t(offset = 0) =>",
								"\tcode =>",
								"\t(offset = 0) =>",
								"\t(red, green, blue) =>",
								"  getAnsiStyles()",
								"  value: (red, green, blue) =>",
								"  c =>",
								"  value: hex =>",
								"  character =>",
								"  value: hex =>",
								"  value: code =>",
								"  value: (red, green, blue) =>",
								"  value: hex =>",
								"  randInt(...args)",
								"  toBigInt(arg)",
								"  lazyProperty(obj, name, getter, opts = {})",
								"  function()",
								"\tfunction()",
								"  v =>",
								"  replaceProperty(value)",
								"  getOpt(options = {}, args)",
								"  findOpt = arg =>",
								"([optname, option]) =>",
								"  opt =>",
								"  toUnixTime(dateObj, utc = false)",
								"  unixTime(utc = false)",
								"  fromUnixTime(epoch, utc = false)",
								"  range(...args)",
								"\t(v, k) =>",
								"  n =>",
								"  repeater(n, what)",
								"()",
								"()",
								"  repeat(n, what)",
								"  chunkArray(arr, size)",
								"  fn = (a, v, i) =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1640227370.33,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/roman/.config/sublime-text/Packages/User/Themes/Aurora.tmTheme",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 316601,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								15
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640274567.96,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 2,
					"file": "lib/util.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25389,
						"regions":
						{
						},
						"selection":
						[
							[
								20251,
								20255
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": -1,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640307748.06,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9436.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17740,
						"regions":
						{
						},
						"selection":
						[
							[
								2739,
								2739
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 99,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640306687.22,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 826.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"tree-wa",
				"quickjs-tree-walker.c"
			],
			[
				"path.c",
				"path.c"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"quick",
				"quickjs-xml.c"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"predi",
				"predicate.c"
			],
			[
				"cmakelis",
				"CMakeLists.txt"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"char-u",
				"char-utils.h"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"",
				"tests/test_xml.js"
			],
			[
				"quickjs-in",
				"quickjs-internal.h"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"doxy",
				"Doxyfile"
			],
			[
				"Doxyfile",
				"Doxyfile"
			],
			[
				"interna",
				"quickjs-internal.h"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"console.js",
				"lib/console.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"child",
				"child-process.c"
			],
			[
				"qsort_r",
				"qsort_r.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"quicksj-misc",
				"quickjs-misc.c"
			],
			[
				"process.js",
				"lib/process.js"
			],
			[
				"quickjs-mm",
				"quickjs-mmap.c"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"quickjs-m",
				"quickjs-misc.c"
			],
			[
				"redicate.c",
				"predicate.c"
			],
			[
				"sockets.h",
				"quickjs-sockets.h"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"char-",
				"char-utils.h"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"conso",
				"lib/console.js"
			],
			[
				"clang-f",
				".clang-format"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"test_mi",
				"tests/test_misc.js"
			],
			[
				"ockets.",
				"quickjs-sockets.h"
			],
			[
				"quickjs-ar",
				"quickjs-archive.c"
			],
			[
				"fd_set",
				"lib/fd_set.js"
			],
			[
				"buffer-ut",
				"buffer-utils.c"
			],
			[
				"misc.",
				"quickjs-misc.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"socklen_t.js",
				"lib/socklen_t.js"
			],
			[
				"str.h",
				"quickjs-stringdecoder.h"
			],
			[
				"quickjs-libc",
				"~/Sources/plot-cv/quickjs/quickjs-libc.h"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.c"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"test_loca",
				"tests/test_location.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				".clang-fo",
				".clang-format"
			],
			[
				"buff",
				"buffer-utils.c"
			],
			[
				"buffer-util",
				"buffer-utils.c"
			],
			[
				"buffer-utils.c",
				"buffer-utils.c"
			],
			[
				"quickjs-so",
				"quickjs-sockets.c"
			],
			[
				"quickjs-insp",
				"quickjs-inspect.c"
			],
			[
				"test_soc",
				"tests/test_sockets.js"
			],
			[
				"test_qjsm",
				"tests/test_qjsm.js"
			],
			[
				"buffer-tu",
				"buffer-utils.c"
			],
			[
				"repl.",
				"lib/repl.js"
			],
			[
				"quickjs-blo",
				"quickjs-blob.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"test_mis",
				"tests/test_misc.js"
			],
			[
				"test_blob",
				"tests/test_blob.js"
			],
			[
				"test_string",
				"tests/test_stringdecoder.js"
			],
			[
				"test_str",
				"tests/test_stringdecoder.js"
			],
			[
				"quickjs-blb",
				"quickjs-blob.h"
			],
			[
				"ringbuffer.h",
				"ringbuffer.h"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 282.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
