{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_Set",
				"JS_SetProperty"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"JS_PROP",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyFunctionList"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"JS_New",
				"JS_NewCFunctionData"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_SetP",
				"JS_SetPropertyStr"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_",
				"js_sockaddr_class_id"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"JS_Thr",
				"JS_ThrowInternalError"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  quicksort_r\n  strverscmp\n  atomic_add_int\n  time_us\n  time_us\n  regexp_flags_fromstring\n  regexp_flags_tostring\n  regexp_from_argv\n  regexp_from_dbuf\n  regexp_compile\n  regexp_to_value\n  js_array_length\n  js_array_clear\n  js_array_to_argv\n  js_array_copys\n  js_strv_copys\n  js_atom_from\n  js_atom_dump\n  js_atom_tobinary\n  js_atom_to_cstringlen\n  js_atom_toint32\n  js_atom_toint64\n  js_atom_is_index\n  js_atom_is_length\n  js_function_name\n  js_function_argc\n  js_function_cfunc\n  js_function_bound\n  js_function_bind\n  js_function_bound_this\n  js_function_bind_this\n  js_function_throw_fn\n  js_function_throw\n  js_function_return_value_fn\n  js_function_return_undefined\n  js_function_return_value\n  js_global_get_str\n  js_global_get_str_n\n  js_global_get_atom\n  js_global_prototype\n  js_global_static_func\n  js_global_prototype_func\n  js_iterator_method\n  js_iterator_new\n  js_iterator_next\n  js_iterator_result\n  js_iterator_then_fn\n  js_iterator_then\n  js_object_constructor\n  js_object_classname\n  js_object_equals\n  js_object_is\n  js_object_construct\n  js_object_error\n  js_object_new\n  js_object_function\n  js_has_propertystr\n  js_get_propertyatom_value\n  js_get_propertystr_bool\n  js_get_propertystr_cstring\n  js_get_propertystr_cstringlen\n  js_get_propertyint_cstring\n  js_get_propertyint_int32\n  js_get_propertystr_string\n  js_get_propertystr_stringlen\n  js_get_propertystr_int32\n  js_get_propertystr_uint64\n  js_get_propertystr_atom\n  js_set_propertyint_string\n  js_set_propertyint_int\n  js_set_propertystr_string\n  js_set_propertystr_stringlen\n  js_get_propertydescriptor\n  js_class_id\n  js_class_newid\n  js_class_get\n  js_class_find\n  js_class_atom\n  js_class_name\n  js_object_tostring\n  js_object_tostring2\n  js_function_tostring\n  js_function_isnative\n  js_is_input\n  js_propenum_cmp\n  js_propertyenums_free\n  js_strv_free_n\n  js_strv_free\n  js_strv_free_rt\n  js_strv_to_array\n  js_strv_length\n  js_strv_dup\n  js_intv_to_array\n  js_symbol_static_atom\n  js_symbol_static_value\n  js_symbol_ctor\n  js_symbol_invoke_static\n  js_symbol_for\n  js_symbol_for_atom\n  js_symbol_to_string\n  js_symbol_to_cstring\n  js_values_dup\n  js_values_free\n  js_values_toarray\n  js_values_fromarray\n  js_value_type_name\n  js_value_typestr\n  js_value_has_ref_count\n  value_mask\n  js_value_type_get\n  js_value_type_flag\n  js_value_free\n  js_value_clone\n  js_value_fwrite\n  js_value_dump\n  js_value_equals\n  js_value_from_char\n  js_value_print\n  js_value_tosize\n  js_value_free_rt\n  js_cstring_ptr\n  js_cstring_dup\n  js_cstring_value\n  js_cstring_dump\n  js_map_new\n  module_name\n  module_namestr\n  call_module_func\n  module_func\n  module_ns\n  module_exports_find\n  module_exports_get\n  module_exports\n  js_modules_list\n  js_modules_array\n  js_modules_entries\n  js_modules_map\n  js_modules_object\n  module_value\n  module_entry\n  module_object\n  js_module_search\n  js_module_search_ext\n  js_module_normalize\n  js_module_def\n  js_module_find_fwd\n  js_module_find_rev\n  js_module_indexof\n  js_module_at\n  js_is_arraybuffer\n  js_is_sharedarraybuffer\n  js_is_date\n  js_is_map\n  js_is_set\n  js_is_generator\n  js_is_regexp\n  js_is_promise\n  js_is_dataview\n  js_is_iterable\n  js_is_iterator\n  js_typedarray_prototype\n  js_typedarray_constructor\n  js_invoke\n  js_symbol_operatorset_value\n  js_symbol_operatorset_atom\n  js_operators_create\n  js_number_new\n  js_date_new\n  js_date_from_ms\n  js_date_from_time_ns\n  js_date_from_timespec\n  js_date_gettime\n  js_date_time\n  timespec\n  js_arraybuffer_freevalue\n  js_arraybuffer_fromvalue\n  js_arraybuffer_bytelength\n  js_eval_module\n  js_eval_binary\n  js_eval_buf\n  js_eval_str\n  js_time_ms\n  js_interrupt_handler\n  js_timer_unlink\n  js_timer_free\n  js_call_handler\n  js_sab_alloc\n  js_sab_free\n  js_sab_dup\n  js_error_dump\n  js_error_tostring\n  js_error_print\n  js_error_stack\n  js_io_readhandler_fn\n  js_io_readhandler_cfunc\n  js_promise_resolve\n  js_promise_then\n  js_promise_catch\n  js_promise_wrap\n  js_promise_adopt\n  js_to_string\n  js_to_source\n  arguments_dump\n  arguments_alloc\n  arguments_push\n  js_arguments_alloc\n  js_arguments_dump",
			"settings":
			{
				"buffer_size": 4067,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					25,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
						"symkeys":
						[
							[
								491,
								502
							],
							[
								580,
								590
							],
							[
								751,
								765
							],
							[
								908,
								915
							],
							[
								1126,
								1133
							],
							[
								1253,
								1276
							],
							[
								1684,
								1705
							],
							[
								2090,
								2106
							],
							[
								2737,
								2753
							],
							[
								2922,
								2936
							],
							[
								3260,
								3275
							],
							[
								3695,
								3710
							],
							[
								3981,
								3995
							],
							[
								4368,
								4384
							],
							[
								4744,
								4758
							],
							[
								5093,
								5106
							],
							[
								5425,
								5437
							],
							[
								5977,
								5989
							],
							[
								6437,
								6453
							],
							[
								6619,
								6640
							],
							[
								6831,
								6846
							],
							[
								7011,
								7026
							],
							[
								7239,
								7255
							],
							[
								7831,
								7848
							],
							[
								8023,
								8039
							],
							[
								8950,
								8966
							],
							[
								9078,
								9095
							],
							[
								9315,
								9332
							],
							[
								9716,
								9732
							],
							[
								10038,
								10060
							],
							[
								10239,
								10260
							],
							[
								10534,
								10554
							],
							[
								10800,
								10817
							],
							[
								11003,
								11030
							],
							[
								11164,
								11192
							],
							[
								11346,
								11370
							],
							[
								11555,
								11572
							],
							[
								11784,
								11803
							],
							[
								12004,
								12022
							],
							[
								12226,
								12245
							],
							[
								12457,
								12478
							],
							[
								12714,
								12738
							],
							[
								12980,
								12998
							],
							[
								13465,
								13480
							],
							[
								13660,
								13676
							],
							[
								14088,
								14106
							],
							[
								14352,
								14371
							],
							[
								14689,
								14705
							],
							[
								14883,
								14904
							],
							[
								15080,
								15099
							],
							[
								15810,
								15826
							],
							[
								16685,
								16697
							],
							[
								16932,
								16951
							],
							[
								17089,
								17104
							],
							[
								17307,
								17320
							],
							[
								17558,
								17576
							],
							[
								17791,
								17809
							],
							[
								18020,
								18045
							],
							[
								18168,
								18191
							],
							[
								18446,
								18472
							],
							[
								18767,
								18796
							],
							[
								19114,
								19140
							],
							[
								19430,
								19454
							],
							[
								19660,
								19685
							],
							[
								19967,
								19995
							],
							[
								20302,
								20326
							],
							[
								20611,
								20636
							],
							[
								20920,
								20943
							],
							[
								21227,
								21252
							],
							[
								21421,
								21443
							],
							[
								21577,
								21602
							],
							[
								21777,
								21805
							],
							[
								21999,
								22024
							],
							[
								22453,
								22464
							],
							[
								22548,
								22562
							],
							[
								22634,
								22646
							],
							[
								22776,
								22789
							],
							[
								23033,
								23046
							],
							[
								23229,
								23242
							],
							[
								23381,
								23399
							],
							[
								23645,
								23664
							],
							[
								23870,
								23890
							],
							[
								24076,
								24096
							],
							[
								24289,
								24300
							],
							[
								24430,
								24445
							],
							[
								24797,
								24818
							],
							[
								24980,
								24994
							],
							[
								25154,
								25166
							],
							[
								25323,
								25338
							],
							[
								25501,
								25517
							],
							[
								25730,
								25744
							],
							[
								25824,
								25835
							],
							[
								26076,
								26092
							],
							[
								26314,
								26335
							],
							[
								26515,
								26537
							],
							[
								26749,
								26763
							],
							[
								26836,
								26859
							],
							[
								27100,
								27113
							],
							[
								27324,
								27342
							],
							[
								27521,
								27540
							],
							[
								27843,
								27863
							],
							[
								28056,
								28069
							],
							[
								28471,
								28485
							],
							[
								28646,
								28663
							],
							[
								28881,
								28900
							],
							[
								29207,
								29225
							],
							[
								29682,
								29698
							],
							[
								29824,
								29846
							],
							[
								29932,
								29942
							],
							[
								30226,
								30243
							],
							[
								30544,
								30562
							],
							[
								31416,
								31429
							],
							[
								31685,
								31699
							],
							[
								33338,
								33353
							],
							[
								33624,
								33637
							],
							[
								34551,
								34566
							],
							[
								35991,
								36009
							],
							[
								36156,
								36170
							],
							[
								36372,
								36387
							],
							[
								36536,
								36552
							],
							[
								36767,
								36781
							],
							[
								36922,
								36936
							],
							[
								37189,
								37205
							],
							[
								37377,
								37392
							],
							[
								37606,
								37616
							],
							[
								37814,
								37825
							],
							[
								37984,
								37998
							],
							[
								38190,
								38206
							],
							[
								38639,
								38650
							],
							[
								39131,
								39140
							],
							[
								39227,
								39246
							],
							[
								39654,
								39672
							],
							[
								40252,
								40266
							],
							[
								40450,
								40465
							],
							[
								40526,
								40542
							],
							[
								41055,
								41073
							],
							[
								41733,
								41747
							],
							[
								41956,
								41973
							],
							[
								42479,
								42491
							],
							[
								42592,
								42604
							],
							[
								42883,
								42896
							],
							[
								43714,
								43730
							],
							[
								44111,
								44131
							],
							[
								44741,
								44760
							],
							[
								45726,
								45739
							],
							[
								46063,
								46081
							],
							[
								46550,
								46568
							],
							[
								47033,
								47050
							],
							[
								47544,
								47556
							],
							[
								48028,
								48045
							],
							[
								48576,
								48599
							],
							[
								48739,
								48749
							],
							[
								48874,
								48883
							],
							[
								49007,
								49016
							],
							[
								49140,
								49155
							],
							[
								49285,
								49297
							],
							[
								49424,
								49437
							],
							[
								49613,
								49627
							],
							[
								49756,
								49770
							],
							[
								50152,
								50166
							],
							[
								50368,
								50391
							],
							[
								50606,
								50631
							],
							[
								50860,
								50869
							],
							[
								51129,
								51156
							],
							[
								51238,
								51264
							],
							[
								51454,
								51473
							],
							[
								51753,
								51766
							],
							[
								51900,
								51911
							],
							[
								52105,
								52120
							],
							[
								52279,
								52299
							],
							[
								52410,
								52431
							],
							[
								52546,
								52561
							],
							[
								52851,
								52863
							],
							[
								53059,
								53067
							],
							[
								53269,
								53293
							],
							[
								53432,
								53456
							],
							[
								53744,
								53769
							],
							[
								54027,
								54041
							],
							[
								54556,
								54570
							],
							[
								55161,
								55172
							],
							[
								55838,
								55849
							],
							[
								56126,
								56136
							],
							[
								56275,
								56295
							],
							[
								56380,
								56395
							],
							[
								56526,
								56539
							],
							[
								56634,
								56649
							],
							[
								56908,
								56920
							],
							[
								57087,
								57098
							],
							[
								57351,
								57361
							],
							[
								57516,
								57529
							],
							[
								58302,
								58319
							],
							[
								58463,
								58477
							],
							[
								59315,
								59329
							],
							[
								59505,
								59525
							],
							[
								60179,
								60202
							],
							[
								60512,
								60530
							],
							[
								60734,
								60749
							],
							[
								60872,
								60888
							],
							[
								61012,
								61027
							],
							[
								61374,
								61390
							],
							[
								61546,
								61558
							],
							[
								61887,
								61899
							],
							[
								62226,
								62240
							],
							[
								62564,
								62579
							],
							[
								63211,
								63225
							],
							[
								63496,
								63514
							],
							[
								63988,
								64005
							]
						],
						"symlist":
						[
							"quicksort_r",
							"strverscmp",
							"atomic_add_int",
							"time_us",
							"time_us",
							"regexp_flags_fromstring",
							"regexp_flags_tostring",
							"regexp_from_argv",
							"regexp_from_dbuf",
							"regexp_compile",
							"regexp_to_value",
							"js_array_length",
							"js_array_clear",
							"js_array_to_argv",
							"js_array_copys",
							"js_strv_copys",
							"js_atom_from",
							"js_atom_dump",
							"js_atom_tobinary",
							"js_atom_to_cstringlen",
							"js_atom_toint32",
							"js_atom_toint64",
							"js_atom_is_index",
							"js_atom_is_length",
							"js_function_name",
							"js_function_argc",
							"js_function_cfunc",
							"js_function_bound",
							"js_function_bind",
							"js_function_bound_this",
							"js_function_bind_this",
							"js_function_throw_fn",
							"js_function_throw",
							"js_function_return_value_fn",
							"js_function_return_undefined",
							"js_function_return_value",
							"js_global_get_str",
							"js_global_get_str_n",
							"js_global_get_atom",
							"js_global_prototype",
							"js_global_static_func",
							"js_global_prototype_func",
							"js_iterator_method",
							"js_iterator_new",
							"js_iterator_next",
							"js_iterator_result",
							"js_iterator_then_fn",
							"js_iterator_then",
							"js_object_constructor",
							"js_object_classname",
							"js_object_equals",
							"js_object_is",
							"js_object_construct",
							"js_object_error",
							"js_object_new",
							"js_object_function",
							"js_has_propertystr",
							"js_get_propertyatom_value",
							"js_get_propertystr_bool",
							"js_get_propertystr_cstring",
							"js_get_propertystr_cstringlen",
							"js_get_propertyint_cstring",
							"js_get_propertyint_int32",
							"js_get_propertystr_string",
							"js_get_propertystr_stringlen",
							"js_get_propertystr_int32",
							"js_get_propertystr_uint64",
							"js_get_propertystr_atom",
							"js_set_propertyint_string",
							"js_set_propertyint_int",
							"js_set_propertystr_string",
							"js_set_propertystr_stringlen",
							"js_get_propertydescriptor",
							"js_class_id",
							"js_class_newid",
							"js_class_get",
							"js_class_find",
							"js_class_atom",
							"js_class_name",
							"js_object_tostring",
							"js_object_tostring2",
							"js_function_tostring",
							"js_function_isnative",
							"js_is_input",
							"js_propenum_cmp",
							"js_propertyenums_free",
							"js_strv_free_n",
							"js_strv_free",
							"js_strv_free_rt",
							"js_strv_to_array",
							"js_strv_length",
							"js_strv_dup",
							"js_intv_to_array",
							"js_symbol_static_atom",
							"js_symbol_static_value",
							"js_symbol_ctor",
							"js_symbol_invoke_static",
							"js_symbol_for",
							"js_symbol_for_atom",
							"js_symbol_to_string",
							"js_symbol_to_cstring",
							"js_values_dup",
							"js_values_free",
							"js_values_toarray",
							"js_values_fromarray",
							"js_value_type_name",
							"js_value_typestr",
							"js_value_has_ref_count",
							"value_mask",
							"js_value_type_get",
							"js_value_type_flag",
							"js_value_free",
							"js_value_clone",
							"js_value_fwrite",
							"js_value_dump",
							"js_value_equals",
							"js_value_from_char",
							"js_value_print",
							"js_value_tosize",
							"js_value_free_rt",
							"js_cstring_ptr",
							"js_cstring_dup",
							"js_cstring_value",
							"js_cstring_dump",
							"js_map_new",
							"module_name",
							"module_namestr",
							"call_module_func",
							"module_func",
							"module_ns",
							"module_exports_find",
							"module_exports_get",
							"module_exports",
							"js_modules_list",
							"js_modules_array",
							"js_modules_entries",
							"js_modules_map",
							"js_modules_object",
							"module_value",
							"module_entry",
							"module_object",
							"js_module_search",
							"js_module_search_ext",
							"js_module_normalize",
							"js_module_def",
							"js_module_find_fwd",
							"js_module_find_rev",
							"js_module_indexof",
							"js_module_at",
							"js_is_arraybuffer",
							"js_is_sharedarraybuffer",
							"js_is_date",
							"js_is_map",
							"js_is_set",
							"js_is_generator",
							"js_is_regexp",
							"js_is_promise",
							"js_is_dataview",
							"js_is_iterable",
							"js_is_iterator",
							"js_typedarray_prototype",
							"js_typedarray_constructor",
							"js_invoke",
							"js_symbol_operatorset_value",
							"js_symbol_operatorset_atom",
							"js_operators_create",
							"js_number_new",
							"js_date_new",
							"js_date_from_ms",
							"js_date_from_time_ns",
							"js_date_from_timespec",
							"js_date_gettime",
							"js_date_time",
							"timespec",
							"js_arraybuffer_freevalue",
							"js_arraybuffer_fromvalue",
							"js_arraybuffer_bytelength",
							"js_eval_module",
							"js_eval_binary",
							"js_eval_buf",
							"js_eval_str",
							"js_time_ms",
							"js_interrupt_handler",
							"js_timer_unlink",
							"js_timer_free",
							"js_call_handler",
							"js_sab_alloc",
							"js_sab_free",
							"js_sab_dup",
							"js_error_dump",
							"js_error_tostring",
							"js_error_print",
							"js_error_stack",
							"js_io_readhandler_fn",
							"js_io_readhandler_cfunc",
							"js_promise_resolve",
							"js_promise_then",
							"js_promise_catch",
							"js_promise_wrap",
							"js_promise_adopt",
							"js_to_string",
							"js_to_source",
							"arguments_dump",
							"arguments_alloc",
							"arguments_push",
							"js_arguments_alloc",
							"js_arguments_dump"
						]
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								765,
								791
							],
							[
								850,
								870
							],
							[
								941,
								959
							],
							[
								1475,
								1500
							],
							[
								1948,
								1976
							],
							[
								2006,
								2010
							],
							[
								2029,
								2057
							],
							[
								2090,
								2109
							],
							[
								2168,
								2195
							],
							[
								2228,
								2247
							],
							[
								2322,
								2351
							],
							[
								2469,
								2492
							],
							[
								2632,
								2655
							],
							[
								2930,
								2952
							],
							[
								3493,
								3517
							],
							[
								3822,
								3846
							],
							[
								3875,
								3881
							],
							[
								4032,
								4056
							],
							[
								4085,
								4091
							],
							[
								4182,
								4208
							],
							[
								4235,
								4241
							],
							[
								4289,
								4295
							],
							[
								4352,
								4358
							],
							[
								4676,
								4702
							],
							[
								4815,
								4821
							],
							[
								4869,
								4875
							],
							[
								5125,
								5131
							],
							[
								5167,
								5173
							],
							[
								5274,
								5280
							],
							[
								5316,
								5322
							],
							[
								5419,
								5425
							],
							[
								5932,
								5960
							],
							[
								6009,
								6030
							],
							[
								6104,
								6125
							],
							[
								6186,
								6207
							],
							[
								6280,
								6326
							],
							[
								6375,
								6381
							],
							[
								6455,
								6461
							],
							[
								6527,
								6533
							],
							[
								6604,
								6626
							],
							[
								7274,
								7296
							],
							[
								7459,
								7487
							],
							[
								7541,
								7559
							],
							[
								8223,
								8241
							],
							[
								8439,
								8456
							],
							[
								8885,
								8902
							],
							[
								9092,
								9108
							],
							[
								9201,
								9207
							],
							[
								9700,
								9718
							],
							[
								9812,
								9828
							],
							[
								9929,
								9968
							],
							[
								10311,
								10315
							],
							[
								10470,
								10477
							],
							[
								10546,
								10557
							],
							[
								11000,
								11018
							],
							[
								12647,
								12651
							],
							[
								12987,
								13003
							],
							[
								13141,
								13149
							],
							[
								13515,
								13521
							],
							[
								13596,
								13609
							],
							[
								13709,
								13713
							],
							[
								14044,
								14050
							],
							[
								14128,
								14134
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(acc, col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"i =>",
							"(acc, tok, i) =>",
							"index =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADjDwAAICBxdWlja3NvcnRfcgogIHN0cnZlcnNjbXAKICBhdG9taWNfYWRkX2ludAogIHRpbWVfdXMKICB0aW1lX3VzCiAgcmVnZXhwX2ZsYWdzX2Zyb21zdHJpbmcKICByZWdleHBfZmxhZ3NfdG9zdHJpbmcKICByZWdleHBfZnJvbV9hcmd2CiAgcmVnZXhwX2Zyb21fZGJ1ZgogIHJlZ2V4cF9jb21waWxlCiAgcmVnZXhwX3RvX3ZhbHVlCiAganNfYXJyYXlfbGVuZ3RoCiAganNfYXJyYXlfY2xlYXIKICBqc19hcnJheV90b19hcmd2CiAganNfYXJyYXlfY29weXMKICBqc19zdHJ2X2NvcHlzCiAganNfYXRvbV9mcm9tCiAganNfYXRvbV9kdW1wCiAganNfYXRvbV90b2JpbmFyeQogIGpzX2F0b21fdG9fY3N0cmluZ2xlbgogIGpzX2F0b21fdG9pbnQzMgogIGpzX2F0b21fdG9pbnQ2NAogIGpzX2F0b21faXNfaW5kZXgKICBqc19hdG9tX2lzX2xlbmd0aAogIGpzX2Z1bmN0aW9uX25hbWUKICBqc19mdW5jdGlvbl9hcmdjCiAganNfZnVuY3Rpb25fY2Z1bmMKICBqc19mdW5jdGlvbl9ib3VuZAogIGpzX2Z1bmN0aW9uX2JpbmQKICBqc19mdW5jdGlvbl9ib3VuZF90aGlzCiAganNfZnVuY3Rpb25fYmluZF90aGlzCiAganNfZnVuY3Rpb25fdGhyb3dfZm4KICBqc19mdW5jdGlvbl90aHJvdwogIGpzX2Z1bmN0aW9uX3JldHVybl92YWx1ZV9mbgogIGpzX2Z1bmN0aW9uX3JldHVybl91bmRlZmluZWQKICBqc19mdW5jdGlvbl9yZXR1cm5fdmFsdWUKICBqc19nbG9iYWxfZ2V0X3N0cgogIGpzX2dsb2JhbF9nZXRfc3RyX24KICBqc19nbG9iYWxfZ2V0X2F0b20KICBqc19nbG9iYWxfcHJvdG90eXBlCiAganNfZ2xvYmFsX3N0YXRpY19mdW5jCiAganNfZ2xvYmFsX3Byb3RvdHlwZV9mdW5jCiAganNfaXRlcmF0b3JfbWV0aG9kCiAganNfaXRlcmF0b3JfbmV3CiAganNfaXRlcmF0b3JfbmV4dAogIGpzX2l0ZXJhdG9yX3Jlc3VsdAogIGpzX2l0ZXJhdG9yX3RoZW5fZm4KICBqc19pdGVyYXRvcl90aGVuCiAganNfb2JqZWN0X2NvbnN0cnVjdG9yCiAganNfb2JqZWN0X2NsYXNzbmFtZQogIGpzX29iamVjdF9lcXVhbHMKICBqc19vYmplY3RfaXMKICBqc19vYmplY3RfY29uc3RydWN0CiAganNfb2JqZWN0X2Vycm9yCiAganNfb2JqZWN0X25ldwogIGpzX29iamVjdF9mdW5jdGlvbgogIGpzX2hhc19wcm9wZXJ0eXN0cgogIGpzX2dldF9wcm9wZXJ0eWF0b21fdmFsdWUKICBqc19nZXRfcHJvcGVydHlzdHJfYm9vbAogIGpzX2dldF9wcm9wZXJ0eXN0cl9jc3RyaW5nCiAganNfZ2V0X3Byb3BlcnR5c3RyX2NzdHJpbmdsZW4KICBqc19nZXRfcHJvcGVydHlpbnRfY3N0cmluZwogIGpzX2dldF9wcm9wZXJ0eWludF9pbnQzMgogIGpzX2dldF9wcm9wZXJ0eXN0cl9zdHJpbmcKICBqc19nZXRfcHJvcGVydHlzdHJfc3RyaW5nbGVuCiAganNfZ2V0X3Byb3BlcnR5c3RyX2ludDMyCiAganNfZ2V0X3Byb3BlcnR5c3RyX3VpbnQ2NAogIGpzX2dldF9wcm9wZXJ0eXN0cl9hdG9tCiAganNfc2V0X3Byb3BlcnR5aW50X3N0cmluZwogIGpzX3NldF9wcm9wZXJ0eWludF9pbnQKICBqc19zZXRfcHJvcGVydHlzdHJfc3RyaW5nCiAganNfc2V0X3Byb3BlcnR5c3RyX3N0cmluZ2xlbgogIGpzX2dldF9wcm9wZXJ0eWRlc2NyaXB0b3IKICBqc19jbGFzc19pZAogIGpzX2NsYXNzX25ld2lkCiAganNfY2xhc3NfZ2V0CiAganNfY2xhc3NfZmluZAogIGpzX2NsYXNzX2F0b20KICBqc19jbGFzc19uYW1lCiAganNfb2JqZWN0X3Rvc3RyaW5nCiAganNfb2JqZWN0X3Rvc3RyaW5nMgogIGpzX2Z1bmN0aW9uX3Rvc3RyaW5nCiAganNfZnVuY3Rpb25faXNuYXRpdmUKICBqc19pc19pbnB1dAogIGpzX3Byb3BlbnVtX2NtcAogIGpzX3Byb3BlcnR5ZW51bXNfZnJlZQogIGpzX3N0cnZfZnJlZV9uCiAganNfc3Rydl9mcmVlCiAganNfc3Rydl9mcmVlX3J0CiAganNfc3Rydl90b19hcnJheQogIGpzX3N0cnZfbGVuZ3RoCiAganNfc3Rydl9kdXAKICBqc19pbnR2X3RvX2FycmF5CiAganNfc3ltYm9sX3N0YXRpY19hdG9tCiAganNfc3ltYm9sX3N0YXRpY192YWx1ZQogIGpzX3N5bWJvbF9jdG9yCiAganNfc3ltYm9sX2ludm9rZV9zdGF0aWMKICBqc19zeW1ib2xfZm9yCiAganNfc3ltYm9sX2Zvcl9hdG9tCiAganNfc3ltYm9sX3RvX3N0cmluZwogIGpzX3N5bWJvbF90b19jc3RyaW5nCiAganNfdmFsdWVzX2R1cAogIGpzX3ZhbHVlc19mcmVlCiAganNfdmFsdWVzX3RvYXJyYXkKICBqc192YWx1ZXNfZnJvbWFycmF5CiAganNfdmFsdWVfdHlwZV9uYW1lCiAganNfdmFsdWVfdHlwZXN0cgogIGpzX3ZhbHVlX2hhc19yZWZfY291bnQKICB2YWx1ZV9tYXNrCiAganNfdmFsdWVfdHlwZV9nZXQKICBqc192YWx1ZV90eXBlX2ZsYWcKICBqc192YWx1ZV9mcmVlCiAganNfdmFsdWVfY2xvbmUKICBqc192YWx1ZV9md3JpdGUKICBqc192YWx1ZV9kdW1wCiAganNfdmFsdWVfZXF1YWxzCiAganNfdmFsdWVfZnJvbV9jaGFyCiAganNfdmFsdWVfcHJpbnQKICBqc192YWx1ZV90b3NpemUKICBqc192YWx1ZV9mcmVlX3J0CiAganNfY3N0cmluZ19wdHIKICBqc19jc3RyaW5nX2R1cAogIGpzX2NzdHJpbmdfdmFsdWUKICBqc19jc3RyaW5nX2R1bXAKICBqc19tYXBfbmV3CiAgbW9kdWxlX25hbWUKICBtb2R1bGVfbmFtZXN0cgogIGNhbGxfbW9kdWxlX2Z1bmMKICBtb2R1bGVfZnVuYwogIG1vZHVsZV9ucwogIG1vZHVsZV9leHBvcnRzX2ZpbmQKICBtb2R1bGVfZXhwb3J0c19nZXQKICBtb2R1bGVfZXhwb3J0cwogIGpzX21vZHVsZXNfbGlzdAogIGpzX21vZHVsZXNfYXJyYXkKICBqc19tb2R1bGVzX2VudHJpZXMKICBqc19tb2R1bGVzX21hcAogIGpzX21vZHVsZXNfb2JqZWN0CiAgbW9kdWxlX3ZhbHVlCiAgbW9kdWxlX2VudHJ5CiAgbW9kdWxlX29iamVjdAogIGpzX21vZHVsZV9zZWFyY2gKICBqc19tb2R1bGVfc2VhcmNoX2V4dAogIGpzX21vZHVsZV9ub3JtYWxpemUKICBqc19tb2R1bGVfZGVmCiAganNfbW9kdWxlX2ZpbmRfZndkCiAganNfbW9kdWxlX2ZpbmRfcmV2CiAganNfbW9kdWxlX2luZGV4b2YKICBqc19tb2R1bGVfYXQKICBqc19pc19hcnJheWJ1ZmZlcgogIGpzX2lzX3NoYXJlZGFycmF5YnVmZmVyCiAganNfaXNfZGF0ZQogIGpzX2lzX21hcAogIGpzX2lzX3NldAogIGpzX2lzX2dlbmVyYXRvcgogIGpzX2lzX3JlZ2V4cAogIGpzX2lzX3Byb21pc2UKICBqc19pc19kYXRhdmlldwogIGpzX2lzX2l0ZXJhYmxlCiAganNfaXNfaXRlcmF0b3IKICBqc190eXBlZGFycmF5X3Byb3RvdHlwZQogIGpzX3R5cGVkYXJyYXlfY29uc3RydWN0b3IKICBqc19pbnZva2UKICBqc19zeW1ib2xfb3BlcmF0b3JzZXRfdmFsdWUKICBqc19zeW1ib2xfb3BlcmF0b3JzZXRfYXRvbQogIGpzX29wZXJhdG9yc19jcmVhdGUKICBqc19udW1iZXJfbmV3CiAganNfZGF0ZV9uZXcKICBqc19kYXRlX2Zyb21fbXMKICBqc19kYXRlX2Zyb21fdGltZV9ucwogIGpzX2RhdGVfZnJvbV90aW1lc3BlYwogIGpzX2RhdGVfZ2V0dGltZQogIGpzX2RhdGVfdGltZQogIHRpbWVzcGVjCiAganNfYXJyYXlidWZmZXJfZnJlZXZhbHVlCiAganNfYXJyYXlidWZmZXJfZnJvbXZhbHVlCiAganNfYXJyYXlidWZmZXJfYnl0ZWxlbmd0aAogIGpzX2V2YWxfbW9kdWxlCiAganNfZXZhbF9iaW5hcnkKICBqc19ldmFsX2J1ZgogIGpzX2V2YWxfc3RyCiAganNfdGltZV9tcwogIGpzX2ludGVycnVwdF9oYW5kbGVyCiAganNfdGltZXJfdW5saW5rCiAganNfdGltZXJfZnJlZQogIGpzX2NhbGxfaGFuZGxlcgogIGpzX3NhYl9hbGxvYwogIGpzX3NhYl9mcmVlCiAganNfc2FiX2R1cAogIGpzX2Vycm9yX2R1bXAKICBqc19lcnJvcl90b3N0cmluZwogIGpzX2Vycm9yX3ByaW50CiAganNfZXJyb3Jfc3RhY2sKICBqc19pb19yZWFkaGFuZGxlcl9mbgogIGpzX2lvX3JlYWRoYW5kbGVyX2NmdW5jCiAganNfcHJvbWlzZV9yZXNvbHZlCiAganNfcHJvbWlzZV90aGVuCiAganNfcHJvbWlzZV9jYXRjaAogIGpzX3Byb21pc2Vfd3JhcAogIGpzX3Byb21pc2VfYWRvcHQKICBqc190b19zdHJpbmcKICBqc190b19zb3VyY2UKICBhcmd1bWVudHNfZHVtcAogIGFyZ3VtZW50c19hbGxvYwogIGFyZ3VtZW50c19wdXNoCiAganNfYXJndW1lbnRzX2FsbG9jCiAganNfYXJndW1lbnRzX2R1bXAAAAAAAAAAANUDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								765,
								791
							],
							[
								850,
								870
							],
							[
								941,
								959
							],
							[
								1475,
								1500
							],
							[
								1948,
								1976
							],
							[
								2006,
								2010
							],
							[
								2029,
								2057
							],
							[
								2090,
								2109
							],
							[
								2168,
								2195
							],
							[
								2228,
								2247
							],
							[
								2322,
								2351
							],
							[
								2469,
								2492
							],
							[
								2632,
								2655
							],
							[
								2930,
								2952
							],
							[
								3493,
								3517
							],
							[
								3822,
								3846
							],
							[
								3875,
								3881
							],
							[
								4032,
								4056
							],
							[
								4085,
								4091
							],
							[
								4182,
								4208
							],
							[
								4235,
								4241
							],
							[
								4289,
								4295
							],
							[
								4352,
								4358
							],
							[
								4676,
								4702
							],
							[
								4815,
								4821
							],
							[
								4869,
								4875
							],
							[
								5125,
								5131
							],
							[
								5167,
								5173
							],
							[
								5274,
								5280
							],
							[
								5316,
								5322
							],
							[
								5419,
								5425
							],
							[
								5932,
								5960
							],
							[
								6009,
								6030
							],
							[
								6104,
								6125
							],
							[
								6186,
								6207
							],
							[
								6280,
								6326
							],
							[
								6375,
								6381
							],
							[
								6455,
								6461
							],
							[
								6527,
								6533
							],
							[
								6604,
								6626
							],
							[
								7274,
								7296
							],
							[
								7459,
								7487
							],
							[
								7541,
								7559
							],
							[
								8223,
								8241
							],
							[
								8439,
								8456
							],
							[
								8885,
								8902
							],
							[
								9092,
								9108
							],
							[
								9201,
								9207
							],
							[
								9700,
								9718
							],
							[
								9812,
								9828
							],
							[
								9929,
								9968
							],
							[
								10311,
								10315
							],
							[
								10470,
								10477
							],
							[
								10546,
								10557
							],
							[
								11000,
								11018
							],
							[
								12647,
								12651
							],
							[
								12987,
								13003
							],
							[
								13141,
								13149
							],
							[
								13515,
								13521
							],
							[
								13596,
								13609
							],
							[
								13709,
								13713
							],
							[
								14044,
								14050
							],
							[
								14128,
								14134
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(acc, col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"i =>",
							"(acc, tok, i) =>",
							"index =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADVAwAAQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CkJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCih0eXBlLCBsZXhlbWUsIHRvaykgPT4KSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQogIHRvayA9PgpFeHBvcnROYW1lKHNlcSkKICB0b2sgPT4KQWRkRXhwb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4KQWRkSW1wb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICAoKSA9PgogIHRvayA9PgogICgpID0+CiAgdG9rID0+CiAgKCkgPT4KUHJpbnRFUzZJbXBvcnQoaW1wKQogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KICAoeyBsb2NhbCwgZmlsZSB9KSA9PgpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgbWFpbiguLi5hcmdzKQpSZWxhdGl2ZVBhdGggPSBmaWxlID0+ClByb2Nlc3NGaWxlKGZpbGUpCiAgbG9nID0gKC4uLmFyZ3MpID0+CihhY2MsIG5hbWUsIGlkKSA9PgogIC5oYW5kbGVyID0gbGV4ID0+CiAgKHRvaywgcHJlZml4KSA9PgooYWNjLCBjb2wsIGkpID0+CiAgKCkgPT4KICAuYmVnaW5Db2RlID0gKCkgPT4KICBiYWxhbmNlciA9ICgpID0+CiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcyA9PgogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQogIHNob3dUb2tlbiA9IHRvayA9PgogIGkgPT4KKGFjYywgdG9rLCBpKSA9PgogIGluZGV4ID0+CiAgaW1wID0+CihhY2MsIGltcCkgPT4KICBiID0+CiAgaW1wID0+CiAgaW1wID0+AAAAAAAAAADVAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADVAwAAQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CkJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCih0eXBlLCBsZXhlbWUsIHRvaykgPT4KSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQogIHRvayA9PgpFeHBvcnROYW1lKHNlcSkKICB0b2sgPT4KQWRkRXhwb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4KQWRkSW1wb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICAoKSA9PgogIHRvayA9PgogICgpID0+CiAgdG9rID0+CiAgKCkgPT4KUHJpbnRFUzZJbXBvcnQoaW1wKQogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KICAoeyBsb2NhbCwgZmlsZSB9KSA9PgpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgbWFpbiguLi5hcmdzKQpSZWxhdGl2ZVBhdGggPSBmaWxlID0+ClByb2Nlc3NGaWxlKGZpbGUpCiAgbG9nID0gKC4uLmFyZ3MpID0+CihhY2MsIG5hbWUsIGlkKSA9PgogIC5oYW5kbGVyID0gbGV4ID0+CiAgKHRvaywgcHJlZml4KSA9PgooYWNjLCBjb2wsIGkpID0+CiAgKCkgPT4KICAuYmVnaW5Db2RlID0gKCkgPT4KICBiYWxhbmNlciA9ICgpID0+CiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcyA9PgogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQogIHNob3dUb2tlbiA9IHRvayA9PgogIGkgPT4KKGFjYywgdG9rLCBpKSA9PgogIGluZGV4ID0+CiAgaW1wID0+CihhY2MsIGltcCkgPT4KICBiID0+CiAgaW1wID0+CiAgaW1wID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					30,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					35,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					36,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					37,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
						"symkeys":
						[
							[
								765,
								791
							],
							[
								850,
								870
							],
							[
								941,
								959
							],
							[
								1475,
								1500
							],
							[
								1948,
								1976
							],
							[
								2006,
								2010
							],
							[
								2029,
								2057
							],
							[
								2090,
								2109
							],
							[
								2168,
								2195
							],
							[
								2228,
								2247
							],
							[
								2322,
								2351
							],
							[
								2469,
								2492
							],
							[
								2632,
								2655
							],
							[
								2930,
								2952
							],
							[
								3493,
								3517
							],
							[
								3822,
								3846
							],
							[
								3875,
								3881
							],
							[
								4032,
								4056
							],
							[
								4085,
								4091
							],
							[
								4182,
								4208
							],
							[
								4235,
								4241
							],
							[
								4289,
								4295
							],
							[
								4352,
								4358
							],
							[
								4676,
								4702
							],
							[
								4815,
								4821
							],
							[
								4869,
								4875
							],
							[
								5125,
								5131
							],
							[
								5167,
								5173
							],
							[
								5274,
								5280
							],
							[
								5316,
								5322
							],
							[
								5419,
								5425
							],
							[
								5932,
								5960
							],
							[
								6009,
								6030
							],
							[
								6104,
								6125
							],
							[
								6186,
								6207
							],
							[
								6280,
								6326
							],
							[
								6375,
								6381
							],
							[
								6455,
								6461
							],
							[
								6527,
								6533
							],
							[
								6604,
								6626
							],
							[
								7274,
								7296
							],
							[
								7459,
								7487
							],
							[
								7541,
								7559
							],
							[
								8223,
								8241
							],
							[
								8439,
								8456
							],
							[
								8885,
								8902
							],
							[
								9092,
								9108
							],
							[
								9201,
								9207
							],
							[
								9700,
								9718
							],
							[
								9812,
								9828
							],
							[
								9929,
								9968
							],
							[
								10311,
								10315
							],
							[
								10470,
								10477
							],
							[
								10546,
								10557
							],
							[
								11000,
								11018
							],
							[
								12647,
								12651
							],
							[
								12987,
								13003
							],
							[
								13141,
								13149
							],
							[
								13515,
								13521
							],
							[
								13596,
								13609
							],
							[
								13709,
								13713
							],
							[
								14044,
								14050
							],
							[
								14128,
								14134
							]
						],
						"symlist":
						[
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"function BufferFile(file)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"(type, lexeme, tok) =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function AddExport(tokens)",
							"tok =>",
							"tok =>",
							"tok =>",
							"function AddImport(tokens)",
							"tok =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"tok =>",
							" () =>",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"RelativePath = file =>",
							" function ProcessFile(file)",
							"log = (...args) =>",
							"(acc, name, id) =>",
							".handler = lex =>",
							" (tok, prefix) =>",
							"(acc, col, i) =>",
							" () =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"i =>",
							"(acc, tok, i) =>",
							"index =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"imp =>",
							"imp =>"
						]
					},
					"AQAAAAAAAAAAAAAA1QMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					39,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
						"symkeys":
						[
							[
								491,
								502
							],
							[
								580,
								590
							],
							[
								751,
								765
							],
							[
								908,
								915
							],
							[
								1126,
								1133
							],
							[
								1253,
								1276
							],
							[
								1684,
								1705
							],
							[
								2090,
								2106
							],
							[
								2737,
								2753
							],
							[
								2922,
								2936
							],
							[
								3260,
								3275
							],
							[
								3695,
								3710
							],
							[
								3981,
								3995
							],
							[
								4368,
								4384
							],
							[
								4744,
								4758
							],
							[
								5093,
								5106
							],
							[
								5425,
								5437
							],
							[
								5977,
								5989
							],
							[
								6437,
								6453
							],
							[
								6619,
								6640
							],
							[
								6831,
								6846
							],
							[
								7011,
								7026
							],
							[
								7239,
								7255
							],
							[
								7831,
								7848
							],
							[
								8023,
								8039
							],
							[
								8950,
								8966
							],
							[
								9078,
								9095
							],
							[
								9315,
								9332
							],
							[
								9716,
								9732
							],
							[
								10038,
								10060
							],
							[
								10239,
								10260
							],
							[
								10534,
								10554
							],
							[
								10800,
								10817
							],
							[
								11003,
								11030
							],
							[
								11164,
								11192
							],
							[
								11346,
								11370
							],
							[
								11555,
								11572
							],
							[
								11784,
								11803
							],
							[
								12004,
								12022
							],
							[
								12226,
								12245
							],
							[
								12457,
								12478
							],
							[
								12714,
								12738
							],
							[
								12980,
								12998
							],
							[
								13465,
								13480
							],
							[
								13660,
								13676
							],
							[
								14088,
								14106
							],
							[
								14352,
								14371
							],
							[
								14689,
								14705
							],
							[
								14883,
								14904
							],
							[
								15080,
								15099
							],
							[
								15810,
								15826
							],
							[
								16685,
								16697
							],
							[
								16932,
								16951
							],
							[
								17089,
								17104
							],
							[
								17307,
								17320
							],
							[
								17558,
								17576
							],
							[
								17791,
								17809
							],
							[
								18020,
								18045
							],
							[
								18168,
								18191
							],
							[
								18446,
								18472
							],
							[
								18767,
								18796
							],
							[
								19114,
								19140
							],
							[
								19430,
								19454
							],
							[
								19660,
								19685
							],
							[
								19967,
								19995
							],
							[
								20302,
								20326
							],
							[
								20611,
								20636
							],
							[
								20920,
								20943
							],
							[
								21227,
								21252
							],
							[
								21421,
								21443
							],
							[
								21577,
								21602
							],
							[
								21777,
								21805
							],
							[
								21999,
								22024
							],
							[
								22453,
								22464
							],
							[
								22548,
								22562
							],
							[
								22634,
								22646
							],
							[
								22776,
								22789
							],
							[
								23033,
								23046
							],
							[
								23229,
								23242
							],
							[
								23381,
								23399
							],
							[
								23645,
								23664
							],
							[
								23870,
								23890
							],
							[
								24076,
								24096
							],
							[
								24289,
								24300
							],
							[
								24430,
								24445
							],
							[
								24797,
								24818
							],
							[
								24980,
								24994
							],
							[
								25154,
								25166
							],
							[
								25323,
								25338
							],
							[
								25501,
								25517
							],
							[
								25730,
								25744
							],
							[
								25824,
								25835
							],
							[
								26076,
								26092
							],
							[
								26314,
								26335
							],
							[
								26515,
								26537
							],
							[
								26749,
								26763
							],
							[
								26836,
								26859
							],
							[
								27100,
								27113
							],
							[
								27324,
								27342
							],
							[
								27521,
								27540
							],
							[
								27843,
								27863
							],
							[
								28056,
								28069
							],
							[
								28471,
								28485
							],
							[
								28646,
								28663
							],
							[
								28881,
								28900
							],
							[
								29207,
								29225
							],
							[
								29682,
								29698
							],
							[
								29824,
								29846
							],
							[
								29932,
								29942
							],
							[
								30226,
								30243
							],
							[
								30544,
								30562
							],
							[
								31416,
								31429
							],
							[
								31685,
								31699
							],
							[
								33338,
								33353
							],
							[
								33624,
								33637
							],
							[
								34551,
								34566
							],
							[
								35991,
								36009
							],
							[
								36156,
								36170
							],
							[
								36372,
								36387
							],
							[
								36536,
								36552
							],
							[
								36767,
								36781
							],
							[
								36922,
								36936
							],
							[
								37189,
								37205
							],
							[
								37377,
								37392
							],
							[
								37606,
								37616
							],
							[
								37814,
								37825
							],
							[
								37984,
								37998
							],
							[
								38190,
								38206
							],
							[
								38639,
								38650
							],
							[
								39131,
								39140
							],
							[
								39227,
								39246
							],
							[
								39654,
								39672
							],
							[
								40252,
								40266
							],
							[
								40450,
								40465
							],
							[
								40526,
								40542
							],
							[
								41055,
								41073
							],
							[
								41733,
								41747
							],
							[
								41956,
								41973
							],
							[
								42479,
								42491
							],
							[
								42592,
								42604
							],
							[
								42883,
								42896
							],
							[
								43714,
								43730
							],
							[
								44111,
								44131
							],
							[
								44741,
								44760
							],
							[
								45726,
								45739
							],
							[
								46063,
								46081
							],
							[
								46550,
								46568
							],
							[
								47033,
								47050
							],
							[
								47544,
								47556
							],
							[
								48028,
								48045
							],
							[
								48576,
								48599
							],
							[
								48739,
								48749
							],
							[
								48874,
								48883
							],
							[
								49007,
								49016
							],
							[
								49140,
								49155
							],
							[
								49285,
								49297
							],
							[
								49424,
								49437
							],
							[
								49613,
								49627
							],
							[
								49756,
								49770
							],
							[
								50152,
								50166
							],
							[
								50368,
								50391
							],
							[
								50606,
								50631
							],
							[
								50860,
								50869
							],
							[
								51129,
								51156
							],
							[
								51238,
								51264
							],
							[
								51454,
								51473
							],
							[
								51753,
								51766
							],
							[
								51900,
								51911
							],
							[
								52105,
								52120
							],
							[
								52279,
								52299
							],
							[
								52410,
								52431
							],
							[
								52546,
								52561
							],
							[
								52851,
								52863
							],
							[
								53059,
								53067
							],
							[
								53269,
								53293
							],
							[
								53432,
								53456
							],
							[
								53744,
								53769
							],
							[
								54027,
								54041
							],
							[
								54556,
								54570
							],
							[
								55161,
								55172
							],
							[
								55838,
								55849
							],
							[
								56126,
								56136
							],
							[
								56275,
								56295
							],
							[
								56380,
								56395
							],
							[
								56526,
								56539
							],
							[
								56634,
								56649
							],
							[
								56908,
								56920
							],
							[
								57087,
								57098
							],
							[
								57351,
								57361
							],
							[
								57516,
								57529
							],
							[
								58302,
								58319
							],
							[
								58463,
								58477
							],
							[
								59315,
								59329
							],
							[
								59505,
								59525
							],
							[
								60179,
								60202
							],
							[
								60512,
								60530
							],
							[
								60734,
								60749
							],
							[
								60872,
								60888
							],
							[
								61012,
								61027
							],
							[
								61374,
								61390
							],
							[
								61546,
								61558
							],
							[
								61887,
								61899
							],
							[
								62226,
								62240
							],
							[
								62564,
								62579
							],
							[
								63211,
								63225
							],
							[
								63496,
								63514
							],
							[
								63988,
								64005
							]
						],
						"symlist":
						[
							"quicksort_r",
							"strverscmp",
							"atomic_add_int",
							"time_us",
							"time_us",
							"regexp_flags_fromstring",
							"regexp_flags_tostring",
							"regexp_from_argv",
							"regexp_from_dbuf",
							"regexp_compile",
							"regexp_to_value",
							"js_array_length",
							"js_array_clear",
							"js_array_to_argv",
							"js_array_copys",
							"js_strv_copys",
							"js_atom_from",
							"js_atom_dump",
							"js_atom_tobinary",
							"js_atom_to_cstringlen",
							"js_atom_toint32",
							"js_atom_toint64",
							"js_atom_is_index",
							"js_atom_is_length",
							"js_function_name",
							"js_function_argc",
							"js_function_cfunc",
							"js_function_bound",
							"js_function_bind",
							"js_function_bound_this",
							"js_function_bind_this",
							"js_function_throw_fn",
							"js_function_throw",
							"js_function_return_value_fn",
							"js_function_return_undefined",
							"js_function_return_value",
							"js_global_get_str",
							"js_global_get_str_n",
							"js_global_get_atom",
							"js_global_prototype",
							"js_global_static_func",
							"js_global_prototype_func",
							"js_iterator_method",
							"js_iterator_new",
							"js_iterator_next",
							"js_iterator_result",
							"js_iterator_then_fn",
							"js_iterator_then",
							"js_object_constructor",
							"js_object_classname",
							"js_object_equals",
							"js_object_is",
							"js_object_construct",
							"js_object_error",
							"js_object_new",
							"js_object_function",
							"js_has_propertystr",
							"js_get_propertyatom_value",
							"js_get_propertystr_bool",
							"js_get_propertystr_cstring",
							"js_get_propertystr_cstringlen",
							"js_get_propertyint_cstring",
							"js_get_propertyint_int32",
							"js_get_propertystr_string",
							"js_get_propertystr_stringlen",
							"js_get_propertystr_int32",
							"js_get_propertystr_uint64",
							"js_get_propertystr_atom",
							"js_set_propertyint_string",
							"js_set_propertyint_int",
							"js_set_propertystr_string",
							"js_set_propertystr_stringlen",
							"js_get_propertydescriptor",
							"js_class_id",
							"js_class_newid",
							"js_class_get",
							"js_class_find",
							"js_class_atom",
							"js_class_name",
							"js_object_tostring",
							"js_object_tostring2",
							"js_function_tostring",
							"js_function_isnative",
							"js_is_input",
							"js_propenum_cmp",
							"js_propertyenums_free",
							"js_strv_free_n",
							"js_strv_free",
							"js_strv_free_rt",
							"js_strv_to_array",
							"js_strv_length",
							"js_strv_dup",
							"js_intv_to_array",
							"js_symbol_static_atom",
							"js_symbol_static_value",
							"js_symbol_ctor",
							"js_symbol_invoke_static",
							"js_symbol_for",
							"js_symbol_for_atom",
							"js_symbol_to_string",
							"js_symbol_to_cstring",
							"js_values_dup",
							"js_values_free",
							"js_values_toarray",
							"js_values_fromarray",
							"js_value_type_name",
							"js_value_typestr",
							"js_value_has_ref_count",
							"value_mask",
							"js_value_type_get",
							"js_value_type_flag",
							"js_value_free",
							"js_value_clone",
							"js_value_fwrite",
							"js_value_dump",
							"js_value_equals",
							"js_value_from_char",
							"js_value_print",
							"js_value_tosize",
							"js_value_free_rt",
							"js_cstring_ptr",
							"js_cstring_dup",
							"js_cstring_value",
							"js_cstring_dump",
							"js_map_new",
							"module_name",
							"module_namestr",
							"call_module_func",
							"module_func",
							"module_ns",
							"module_exports_find",
							"module_exports_get",
							"module_exports",
							"js_modules_list",
							"js_modules_array",
							"js_modules_entries",
							"js_modules_map",
							"js_modules_object",
							"module_value",
							"module_entry",
							"module_object",
							"js_module_search",
							"js_module_search_ext",
							"js_module_normalize",
							"js_module_def",
							"js_module_find_fwd",
							"js_module_find_rev",
							"js_module_indexof",
							"js_module_at",
							"js_is_arraybuffer",
							"js_is_sharedarraybuffer",
							"js_is_date",
							"js_is_map",
							"js_is_set",
							"js_is_generator",
							"js_is_regexp",
							"js_is_promise",
							"js_is_dataview",
							"js_is_iterable",
							"js_is_iterator",
							"js_typedarray_prototype",
							"js_typedarray_constructor",
							"js_invoke",
							"js_symbol_operatorset_value",
							"js_symbol_operatorset_atom",
							"js_operators_create",
							"js_number_new",
							"js_date_new",
							"js_date_from_ms",
							"js_date_from_time_ns",
							"js_date_from_timespec",
							"js_date_gettime",
							"js_date_time",
							"timespec",
							"js_arraybuffer_freevalue",
							"js_arraybuffer_fromvalue",
							"js_arraybuffer_bytelength",
							"js_eval_module",
							"js_eval_binary",
							"js_eval_buf",
							"js_eval_str",
							"js_time_ms",
							"js_interrupt_handler",
							"js_timer_unlink",
							"js_timer_free",
							"js_call_handler",
							"js_sab_alloc",
							"js_sab_free",
							"js_sab_dup",
							"js_error_dump",
							"js_error_tostring",
							"js_error_print",
							"js_error_stack",
							"js_io_readhandler_fn",
							"js_io_readhandler_cfunc",
							"js_promise_resolve",
							"js_promise_then",
							"js_promise_catch",
							"js_promise_wrap",
							"js_promise_adopt",
							"js_to_string",
							"js_to_source",
							"arguments_dump",
							"arguments_alloc",
							"arguments_push",
							"js_arguments_alloc",
							"js_arguments_dump"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADVAwAAQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CkJ1ZmZlckZpbGUoZmlsZSkKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCih0eXBlLCBsZXhlbWUsIHRvaykgPT4KSW1wb3J0VHlwZShzZXEpCkltcG9ydEZpbGUoc2VxKQogIHRvayA9PgpFeHBvcnROYW1lKHNlcSkKICB0b2sgPT4KQWRkRXhwb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4KQWRkSW1wb3J0KHRva2VucykKICB0b2sgPT4KICB0b2sgPT4KICAoKSA9PgogIHRvayA9PgogICgpID0+CiAgdG9rID0+CiAgKCkgPT4KUHJpbnRFUzZJbXBvcnQoaW1wKQogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KICAoeyBsb2NhbCwgZmlsZSB9KSA9PgpQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pCiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgbWFpbiguLi5hcmdzKQpSZWxhdGl2ZVBhdGggPSBmaWxlID0+ClByb2Nlc3NGaWxlKGZpbGUpCiAgbG9nID0gKC4uLmFyZ3MpID0+CihhY2MsIG5hbWUsIGlkKSA9PgogIC5oYW5kbGVyID0gbGV4ID0+CiAgKHRvaywgcHJlZml4KSA9PgooYWNjLCBjb2wsIGkpID0+CiAgKCkgPT4KICAuYmVnaW5Db2RlID0gKCkgPT4KICBiYWxhbmNlciA9ICgpID0+CiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcyA9PgogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQogIHNob3dUb2tlbiA9IHRvayA9PgogIGkgPT4KKGFjYywgdG9rLCBpKSA9PgogIGluZGV4ID0+CiAgaW1wID0+CihhY2MsIGltcCkgPT4KICBiID0+CiAgaW1wID0+CiAgaW1wID0+AAAAAAAAAADjDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				]
			]
		},
		{
			"file": "tests/test_lexer.js",
			"redo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAFktAAAAAAAAWS0AAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbLQAAAAAAAFstAAAAAAAAAAAAAAAA8L8"
				]
			],
			"settings":
			{
				"buffer_size": 14740,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					78,
					1,
					"insert",
					{
						"characters": "\n\nlet"
					},
					"CAAAAIAsAAAAAAAAgSwAAAAAAAAAAAAAgSwAAAAAAACFLAAAAAAAAAAAAACFLAAAAAAAAIYsAAAAAAAAAAAAAIYsAAAAAAAAiiwAAAAAAAAAAAAAgSwAAAAAAACBLAAAAAAAAAQAAAAgICAghiwAAAAAAACHLAAAAAAAAAAAAACHLAAAAAAAAIgsAAAAAAAAAAAAAIgsAAAAAAAAiSwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAsAAAAAAAAgCwAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAIksAAAAAAAAiiwAAAAAAAAAAAAAiiwAAAAAAACLLAAAAAAAAAAAAACLLAAAAAAAAIwsAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIksAAAAAAAAiSwAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIwsAAAAAAAAjSwAAAAAAAAAAAAAjSwAAAAAAACOLAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwsAAAAAAAAjCwAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " lexer"
					},
					"BgAAAI4sAAAAAAAAjywAAAAAAAAAAAAAjywAAAAAAACQLAAAAAAAAAAAAACQLAAAAAAAAJEsAAAAAAAAAAAAAJEsAAAAAAAAkiwAAAAAAAAAAAAAkiwAAAAAAACTLAAAAAAAAAAAAACTLAAAAAAAAJQsAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4sAAAAAAAAjiwAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJQsAAAAAAAAliwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQsAAAAAAAAlCwAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "Symbol.iterator"
					},
					"DwAAAJUsAAAAAAAAliwAAAAAAAAAAAAAliwAAAAAAACXLAAAAAAAAAAAAACXLAAAAAAAAJgsAAAAAAAAAAAAAJgsAAAAAAAAmSwAAAAAAAAAAAAAmSwAAAAAAACaLAAAAAAAAAAAAACaLAAAAAAAAJssAAAAAAAAAAAAAJssAAAAAAAAnCwAAAAAAAAAAAAAnCwAAAAAAACdLAAAAAAAAAAAAACdLAAAAAAAAJ4sAAAAAAAAAAAAAJ4sAAAAAAAAnywAAAAAAAAAAAAAnywAAAAAAACgLAAAAAAAAAAAAACgLAAAAAAAAKEsAAAAAAAAAAAAAKEsAAAAAAAAoiwAAAAAAAAAAAAAoiwAAAAAAACjLAAAAAAAAAAAAACjLAAAAAAAAKQsAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUsAAAAAAAAlSwAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKUsAAAAAAAApiwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUsAAAAAAAApSwAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"left_delete",
					null,
					"AQAAAKUsAAAAAAAApSwAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYsAAAAAAAApiwAAAAAAAAAAAAAAADwvw"
				],
				[
					87,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKUsAAAAAAAApywAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUsAAAAAAAApSwAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKcsAAAAAAAAqCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcsAAAAAAAApywAAAAAAAAAAAAAAADwvw"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "it"
					},
					"AwAAAPYsAAAAAAAA9ywAAAAAAAAAAAAA9ywAAAAAAAD3LAAAAAAAAAUAAABsZXhlcvcsAAAAAAAA+CwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYsAAAAAAAA+ywAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAABYtAAAAAAAAFy0AAAAAAAAAAAAAFy0AAAAAAAAdLQAAAAAAAAAAAAAdLQAAAAAAAB4tAAAAAAAAAAAAAB4tAAAAAAAAHy0AAAAAAAAAAAAAHy0AAAAAAAAgLQAAAAAAAAAAAAAgLQAAAAAAACEtAAAAAAAAAAAAACEtAAAAAAAAIi0AAAAAAAAAAAAAIi0AAAAAAAAjLQAAAAAAAAAAAAAjLQAAAAAAACQtAAAAAAAAAAAAACQtAAAAAAAAJS0AAAAAAAAAAAAAJS0AAAAAAAAmLQAAAAAAAAAAAAAmLQAAAAAAACctAAAAAAAAAAAAACctAAAAAAAAKC0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYtAAAAAAAAFi0AAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACgtAAAAAAAAKi0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgtAAAAAAAAKC0AAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACktAAAAAAAAKy0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACktAAAAAAAAKS0AAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BQAAACotAAAAAAAAKy0AAAAAAAAAAAAAKy0AAAAAAAAsLQAAAAAAAAAAAAAsLQAAAAAAAC0tAAAAAAAAAAAAAC0tAAAAAAAALi0AAAAAAAAAAAAALi0AAAAAAAAvLQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACotAAAAAAAAKi0AAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADAtAAAAAAAAMS0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAtAAAAAAAAMC0AAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAADEtAAAAAAAAMi0AAAAAAAAAAAAAMi0AAAAAAAAzLQAAAAAAAAAAAAAzLQAAAAAAADQtAAAAAAAAAAAAADQtAAAAAAAANS0AAAAAAAAAAAAANS0AAAAAAAA2LQAAAAAAAAAAAAA2LQAAAAAAADctAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEtAAAAAAAAMS0AAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADgtAAAAAAAAOS0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgtAAAAAAAAOC0AAAAAAAAAAAAAAADwvw"
				],
				[
					160,
					1,
					"cut",
					null,
					"AQAAABctAAAAAAAAFy0AAAAAAAAjAAAAICAgICAgY29uc29sZS5sb2coJ3ZhbHVlJywgdmFsdWUpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABctAAAAAAAAOi0AAAAAAAAAAAAAAAAAAA"
				],
				[
					161,
					1,
					"paste",
					null,
					"AQAAABctAAAAAAAAOi0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABctAAAAAAAAFy0AAAAAAAAAAAAAAADwvw"
				],
				[
					163,
					1,
					"paste",
					null,
					"AQAAAKksAAAAAAAAzCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKksAAAAAAAAqSwAAAAAAAAAAAAAAAAAAA"
				],
				[
					173,
					1,
					"paste",
					null,
					"AgAAALwsAAAAAAAAviwAAAAAAAAAAAAAviwAAAAAAAC+LAAAAAAAAAUAAAB2YWx1ZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwsAAAAAAAAwSwAAAAAAAAAAAAAAADwvw"
				],
				[
					178,
					1,
					"paste",
					null,
					"AgAAAMEsAAAAAAAAwywAAAAAAAAAAAAAwywAAAAAAADDLAAAAAAAAAUAAAB2YWx1ZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEsAAAAAAAAxiwAAAAAAAAAAAAAAADwvw"
				],
				[
					186,
					1,
					"cut",
					null,
					"AQAAAP0sAAAAAAAA/SwAAAAAAAAnAAAAbGV0IHsgZG9uZSwgdmFsdWUgfSA9IGl0Lm5leHQoKTsKICAgICAg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0sAAAAAAAAJC0AAAAAAAAAAAAAAABOQA"
				],
				[
					187,
					2,
					"paste",
					null,
					"AgAAAP0sAAAAAAAAJC0AAAAAAAAAAAAAJC0AAAAAAABLLQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0sAAAAAAAA/SwAAAAAAAAAAAAAAADwvw"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": " nextTok"
					},
					"CQAAAAAtAAAAAAAAAS0AAAAAAAAAAAAAAS0AAAAAAAABLQAAAAAAABAAAAAgeyBkb25lLCB2YWx1ZSB9AS0AAAAAAAACLQAAAAAAAAAAAAACLQAAAAAAAAMtAAAAAAAAAAAAAAMtAAAAAAAABC0AAAAAAAAAAAAABC0AAAAAAAAFLQAAAAAAAAAAAAAFLQAAAAAAAAYtAAAAAAAAAAAAAAYtAAAAAAAABy0AAAAAAAAAAAAABy0AAAAAAAAILQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAtAAAAAAAAEC0AAAAAAAAAAAAAAADwvw"
				],
				[
					200,
					1,
					"paste",
					null,
					"AgAAADItAAAAAAAAOS0AAAAAAAAAAAAAOS0AAAAAAAA5LQAAAAAAAAkAAABpdC5uZXh0KCk",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADItAAAAAAAAOy0AAAAAAAAAAAAAAADwvw"
				],
				[
					209,
					1,
					"cut",
					null,
					"AQAAAFEtAAAAAAAAUS0AAAAAAAAjAAAAICAgICAgY29uc29sZS5sb2coJ3ZhbHVlJywgdmFsdWUpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEtAAAAAAAAdC0AAAAAAAAAAAAAAADwvw"
				],
				[
					210,
					1,
					"paste",
					null,
					"AQAAAFEtAAAAAAAAdC0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEtAAAAAAAAUS0AAAAAAAAAAAAAAADwvw"
				],
				[
					217,
					1,
					"cut",
					null,
					"AQAAAFEtAAAAAAAAUS0AAAAAAAAjAAAAICAgICAgY29uc29sZS5sb2coJ3ZhbHVlJywgdmFsdWUpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEtAAAAAAAAdC0AAAAAAAAAAAAAAADwvw"
				],
				[
					218,
					2,
					"paste",
					null,
					"AgAAAFEtAAAAAAAAdC0AAAAAAAAAAAAAdC0AAAAAAACXLQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEtAAAAAAAAUS0AAAAAAAAAAAAAAADwvw"
				],
				[
					232,
					1,
					"paste",
					null,
					"AgAAAGQtAAAAAAAAay0AAAAAAAAAAAAAay0AAAAAAABrLQAAAAAAAAUAAAB2YWx1ZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQtAAAAAAAAaS0AAAAAAAAAAAAAAADwvw"
				],
				[
					239,
					1,
					"paste",
					null,
					"AgAAAG4tAAAAAAAAdS0AAAAAAAAAAAAAdS0AAAAAAAB1LQAAAAAAAAUAAAB2YWx1ZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4tAAAAAAAAcy0AAAAAAAAAAAAAAADwvw"
				],
				[
					257,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAJotAAAAAAAAnC0AAAAAAAAAAAAAUS0AAAAAAABTLQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEtAAAAAAAAmi0AAAAAAAAAAAAAAADwvw"
				],
				[
					286,
					1,
					"cut",
					null,
					"AQAAAJwtAAAAAAAAnC0AAAAAAAACAAAAKi8",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwtAAAAAAAAni0AAAAAAAAAAAAAAADwvw"
				],
				[
					289,
					1,
					"paste",
					null,
					"AQAAAHktAAAAAAAAey0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHktAAAAAAAAeS0AAAAAAAAAAAAAAADwvw"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": "lexer.token"
					},
					"DAAAAOEtAAAAAAAA4i0AAAAAAAAAAAAA4i0AAAAAAADiLQAAAAAAAAUAAAB2YWx1ZeItAAAAAAAA4y0AAAAAAAAAAAAA4y0AAAAAAADkLQAAAAAAAAAAAADkLQAAAAAAAOUtAAAAAAAAAAAAAOUtAAAAAAAA5i0AAAAAAAAAAAAA5i0AAAAAAADnLQAAAAAAAAAAAADnLQAAAAAAAOgtAAAAAAAAAAAAAOgtAAAAAAAA6S0AAAAAAAAAAAAA6S0AAAAAAADqLQAAAAAAAAAAAADqLQAAAAAAAOstAAAAAAAAAAAAAOstAAAAAAAA7C0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEtAAAAAAAA5i0AAAAAAAAAAAAAAADwvw"
				],
				[
					355,
					1,
					"cut",
					null,
					"AQAAANUtAAAAAAAA1S0AAAAAAAAZAAAAICAgICAgdG9rID0gbGV4ZXIudG9rZW47Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUtAAAAAAAA7i0AAAAAAAAAAAAAAADwvw"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOguAAAAAAAA6S4AAAAAAAAAAAAA6S4AAAAAAADvLgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOguAAAAAAAA6C4AAAAAAAAAAAAAAADwvw"
				],
				[
					364,
					1,
					"paste",
					null,
					"AQAAAO8uAAAAAAAACC8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8uAAAAAAAA7y4AAAAAAAAAAAAAAADwvw"
				],
				[
					411,
					1,
					"cut",
					null,
					"AQAAABQlAAAAAAAAFCUAAAAAAAAnAAAAICAgIGxvZygnbGV4ZXIuc3RhdGVzJywgbGV4ZXIuc3RhdGVzKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQlAAAAAAAAOyUAAAAAAAAAAAAAAADwvw"
				],
				[
					412,
					2,
					"paste",
					null,
					"AgAAABQlAAAAAAAAOyUAAAAAAAAAAAAAOyUAAAAAAABiJQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQlAAAAAAAAFCUAAAAAAAAAAAAAAADwvw"
				],
				[
					421,
					1,
					"insert",
					{
						"characters": "rule"
					},
					"BQAAAEolAAAAAAAASyUAAAAAAAAAAAAASyUAAAAAAABLJQAAAAAAAAYAAABzdGF0ZXNLJQAAAAAAAEwlAAAAAAAAAAAAAEwlAAAAAAAATSUAAAAAAAAAAAAATSUAAAAAAABOJQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEolAAAAAAAAUCUAAAAAAAAAAAAAAADwvw"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "Names"
					},
					"BQAAAE4lAAAAAAAATyUAAAAAAAAAAAAATyUAAAAAAABQJQAAAAAAAAAAAABQJQAAAAAAAFElAAAAAAAAAAAAAFElAAAAAAAAUiUAAAAAAAAAAAAAUiUAAAAAAABTJQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4lAAAAAAAATiUAAAAAAAAAAAAAAADwvw"
				],
				[
					436,
					1,
					"paste",
					null,
					"AgAAAFwlAAAAAAAAZSUAAAAAAAAAAAAAZSUAAAAAAABlJQAAAAAAAAYAAABzdGF0ZXM",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwlAAAAAAAAYiUAAAAAAAAAAAAAAADwvw"
				],
				[
					447,
					1,
					"cut",
					null,
					"AQAAADslAAAAAAAAOyUAAAAAAAAtAAAAICAgIGxvZygnbGV4ZXIucnVsZU5hbWVzJywgbGV4ZXIucnVsZU5hbWVzKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADslAAAAAAAAaCUAAAAAAAAAAAAAAADwvw"
				],
				[
					450,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAM04AAAAAAAAzjgAAAAAAAAAAAAAzjgAAAAAAADQOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM04AAAAAAAAzTgAAAAAAAAAAAAAAADwvw"
				],
				[
					451,
					1,
					"paste",
					null,
					"AQAAANA4AAAAAAAA/TgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANA4AAAAAAAA0DgAAAAAAAAAAAAAAADwvw"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": "console."
					},
					"CQAAAM44AAAAAAAAzzgAAAAAAAAAAAAAzzgAAAAAAADPOAAAAAAAAAYAAAAgICAgICDPOAAAAAAAANA4AAAAAAAAAAAAANA4AAAAAAAA0TgAAAAAAAAAAAAA0TgAAAAAAADSOAAAAAAAAAAAAADSOAAAAAAAANM4AAAAAAAAAAAAANM4AAAAAAAA1DgAAAAAAAAAAAAA1DgAAAAAAADVOAAAAAAAAAAAAADVOAAAAAAAANY4AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM44AAAAAAAA1DgAAAAAAAAAAAAAAADwvw"
				],
				[
					464,
					2,
					"right_delete",
					null,
					"AgAAAM44AAAAAAAAzjgAAAAAAAAHAAAAY29uc29sZc44AAAAAAAAzjgAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM44AAAAAAAA1TgAAAAAAAAAAAAAAADwvw"
				],
				[
					466,
					1,
					"cut",
					null,
					"AQAAAM44AAAAAAAAzjgAAAAAAAApAAAAbG9nKCdsZXhlci5ydWxlTmFtZXMnLCBsZXhlci5ydWxlTmFtZXMpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM44AAAAAAAA9zgAAAAAAAAAAAAAAAAAAA"
				],
				[
					468,
					1,
					"paste",
					null,
					"AQAAAHk4AAAAAAAAojgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHk4AAAAAAAAeTgAAAAAAAAAAAAAAAAAAA"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAJo4AAAAAAAAmzgAAAAAAAAAAAAAmzgAAAAAAACbOAAAAAAAAAUAAABOYW1lcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJo4AAAAAAAAnzgAAAAAAAAAAAAAAADwvw"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": "eas"
					},
					"BAAAAIc4AAAAAAAAiDgAAAAAAAAAAAAAiDgAAAAAAACIOAAAAAAAAAYAAABlTmFtZXOIOAAAAAAAAIk4AAAAAAAAAAAAAIk4AAAAAAAAijgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIc4AAAAAAAAjTgAAAAAAAAAAAAAAADwvw"
				],
				[
					483,
					2,
					"left_delete",
					null,
					"AgAAAIk4AAAAAAAAiTgAAAAAAAABAAAAc4g4AAAAAAAAiDgAAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIo4AAAAAAAAijgAAAAAAAAAAAAAAADwvw"
				],
				[
					484,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAIg4AAAAAAAAiTgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIg4AAAAAAAAiDgAAAAAAAAAAAAAAADwvw"
				],
				[
					495,
					1,
					"cut",
					null,
					"AQAAAHk4AAAAAAAAeTgAAAAAAAAhAAAAbG9nKCdsZXhlci5ydWxlcycsIGxleGVyLnJ1bGVzKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHk4AAAAAAAAmjgAAAAAAAAAAAAAAADwvw"
				],
				[
					496,
					2,
					"paste",
					null,
					"AgAAAHk4AAAAAAAAmjgAAAAAAAAAAAAAmjgAAAAAAAC7OAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHk4AAAAAAAAeTgAAAAAAAAAAAAAAADwvw"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "tplems"
					},
					"BwAAAKU4AAAAAAAApjgAAAAAAAAAAAAApjgAAAAAAACmOAAAAAAAAAUAAABydWxlc6Y4AAAAAAAApzgAAAAAAAAAAAAApzgAAAAAAACoOAAAAAAAAAAAAACoOAAAAAAAAKk4AAAAAAAAAAAAAKk4AAAAAAAAqjgAAAAAAAAAAAAAqjgAAAAAAACrOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKU4AAAAAAAAqjgAAAAAAAAAAAAAAADwvw"
				],
				[
					502,
					6,
					"left_delete",
					null,
					"BgAAAKo4AAAAAAAAqjgAAAAAAAABAAAAc6k4AAAAAAAAqTgAAAAAAAABAAAAbag4AAAAAAAAqDgAAAAAAAABAAAAZac4AAAAAAAApzgAAAAAAAABAAAAbKY4AAAAAAAApjgAAAAAAAABAAAAcKU4AAAAAAAApTgAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKs4AAAAAAAAqzgAAAAAAAAAAAAAAADwvw"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": "tokens"
					},
					"BgAAAKU4AAAAAAAApjgAAAAAAAAAAAAApjgAAAAAAACnOAAAAAAAAAAAAACnOAAAAAAAAKg4AAAAAAAAAAAAAKg4AAAAAAAAqTgAAAAAAAAAAAAAqTgAAAAAAACqOAAAAAAAAAAAAACqOAAAAAAAAKs4AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKU4AAAAAAAApTgAAAAAAAAAAAAAAADwvw"
				],
				[
					515,
					1,
					"paste",
					null,
					"AgAAALQ4AAAAAAAAujgAAAAAAAAAAAAAujgAAAAAAAC6OAAAAAAAAAUAAABydWxlcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQ4AAAAAAAAuTgAAAAAAAAAAAAAAADwvw"
				],
				[
					558,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFEtAAAAAAAAUi0AAAAAAAAAAAAAUi0AAAAAAABSLQAAAAAAACsAAAAvKiAgICAgIGNvbnNvbGUubG9nKCduZXh0VG9rJywgbmV4dFRvayk7Ki8K",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEtAAAAAAAAfC0AAAAAAAAAAAAAAADwvw"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAFctAAAAAAAAWC0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFctAAAAAAAAVy0AAAAAAAAAAAAAAADwvw"
				],
				[
					564,
					1,
					"left_delete",
					null,
					"AQAAAFctAAAAAAAAVy0AAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgtAAAAAAAAWC0AAAAAAAAAAAAAAADwvw"
				],
				[
					565,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAFctAAAAAAAAWC0AAAAAAAAAAAAAWC0AAAAAAABZLQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFctAAAAAAAAVy0AAAAAAAAAAAAAAADwvw"
				],
				[
					566,
					1,
					"right_delete",
					null,
					"AQAAAFktAAAAAAAAWS0AAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFktAAAAAAAAWS0AAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "quickjs-lexer.c",
			"settings":
			{
				"buffer_size": 41248,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"insert",
					{
						"characters": "Token"
					},
					"BgAAAH6NAAAAAAAAf40AAAAAAAAAAAAAf40AAAAAAAB/jQAAAAAAAAMAAABPYmp/jQAAAAAAAICNAAAAAAAAAAAAAICNAAAAAAAAgY0AAAAAAAAAAAAAgY0AAAAAAACCjQAAAAAAAAAAAACCjQAAAAAAAIONAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH6NAAAAAAAAgY0AAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJGNAAAAAAAAkY0AAAAAAAAAAAAAAADwvw"
				],
				[
					61,
					1,
					"paste",
					null,
					"AgAAAAVqAAAAAAAAFGoAAAAAAAAAAAAAFGoAAAAAAAAUagAAAAAAAAoAAABsZXgtPnN0YXJ0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAVqAAAAAAAAD2oAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"BAAAABBqAAAAAAAAEWoAAAAAAAAAAAAAEWoAAAAAAAARagAAAAAAAAQAAABkYXRhEWoAAAAAAAASagAAAAAAAAAAAAASagAAAAAAABNqAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABBqAAAAAAAAFGoAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "byte_length"
					},
					"DAAAABpqAAAAAAAAG2oAAAAAAAAAAAAAG2oAAAAAAAAbagAAAAAAABYAAABpbnB1dC5wb3MgLSBsZXgtPnN0YXJ0G2oAAAAAAAAcagAAAAAAAAAAAAAcagAAAAAAAB1qAAAAAAAAAAAAAB1qAAAAAAAAHmoAAAAAAAAAAAAAHmoAAAAAAAAfagAAAAAAAAAAAAAfagAAAAAAACBqAAAAAAAAAAAAACBqAAAAAAAAIWoAAAAAAAAAAAAAIWoAAAAAAAAiagAAAAAAAAAAAAAiagAAAAAAACNqAAAAAAAAAAAAACNqAAAAAAAAJGoAAAAAAAAAAAAAJGoAAAAAAAAlagAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABpqAAAAAAAAMGoAAAAAAAAAAAAAAADwvw"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "input.pos"
					},
					"CgAAAGAmAAAAAAAAYSYAAAAAAAAAAAAAYSYAAAAAAABhJgAAAAAAAAUAAABzdGFydGEmAAAAAAAAYiYAAAAAAAAAAAAAYiYAAAAAAABjJgAAAAAAAAAAAABjJgAAAAAAAGQmAAAAAAAAAAAAAGQmAAAAAAAAZSYAAAAAAAAAAAAAZSYAAAAAAABmJgAAAAAAAAAAAABmJgAAAAAAAGcmAAAAAAAAAAAAAGcmAAAAAAAAaCYAAAAAAAAAAAAAaCYAAAAAAABpJgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAmAAAAAAAAZSYAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"paste",
					null,
					"AgAAAJYmAAAAAAAApCYAAAAAAAAAAAAApCYAAAAAAACkJgAAAAAAAAoAAABsZXgtPnN0YXJ0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYmAAAAAAAAoCYAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "input.pos"
					},
					"CgAAAOA0AAAAAAAA4TQAAAAAAAAAAAAA4TQAAAAAAADhNAAAAAAAAAUAAABzdGFydOE0AAAAAAAA4jQAAAAAAAAAAAAA4jQAAAAAAADjNAAAAAAAAAAAAADjNAAAAAAAAOQ0AAAAAAAAAAAAAOQ0AAAAAAAA5TQAAAAAAAAAAAAA5TQAAAAAAADmNAAAAAAAAAAAAADmNAAAAAAAAOc0AAAAAAAAAAAAAOc0AAAAAAAA6DQAAAAAAAAAAAAA6DQAAAAAAADpNAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOA0AAAAAAAA5TQAAAAAAAAAAAAAAADwvw"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "start"
					},
					"BQAAAPM0AAAAAAAA9DQAAAAAAAAAAAAA9DQAAAAAAAD1NAAAAAAAAAAAAAD1NAAAAAAAAPY0AAAAAAAAAAAAAPY0AAAAAAAA9zQAAAAAAAAAAAAA9zQAAAAAAAD4NAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPM0AAAAAAAA8zQAAAAAAAAAAAAAAADwvw"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAPg0AAAAAAAA+TQAAAAAAAAAAAAA+TQAAAAAAAD6NAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPg0AAAAAAAA+DQAAAAAAAAAAAAAAADwvw"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " lex->bte"
					},
					"CQAAAPo0AAAAAAAA+zQAAAAAAAAAAAAA+zQAAAAAAAD8NAAAAAAAAAAAAAD8NAAAAAAAAP00AAAAAAAAAAAAAP00AAAAAAAA/jQAAAAAAAAAAAAA/jQAAAAAAAD/NAAAAAAAAAAAAAD/NAAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAATUAAAAAAAAAAAAAATUAAAAAAAACNQAAAAAAAAAAAAACNQAAAAAAAAM1AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPo0AAAAAAAA+jQAAAAAAAAAAAAAAADwvw"
				],
				[
					155,
					2,
					"left_delete",
					null,
					"AgAAAAI1AAAAAAAAAjUAAAAAAAABAAAAZQE1AAAAAAAAATUAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAM1AAAAAAAAAzUAAAAAAAAAAAAAAADwvw"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "yte_length"
					},
					"CwAAAAE1AAAAAAAAAjUAAAAAAAAAAAAAAjUAAAAAAAACNQAAAAAAAA4AAABsZXgtPmlucHV0LnBvcwI1AAAAAAAAAzUAAAAAAAAAAAAAAzUAAAAAAAAENQAAAAAAAAAAAAAENQAAAAAAAAU1AAAAAAAAAAAAAAU1AAAAAAAABjUAAAAAAAAAAAAABjUAAAAAAAAHNQAAAAAAAAAAAAAHNQAAAAAAAAg1AAAAAAAAAAAAAAg1AAAAAAAACTUAAAAAAAAAAAAACTUAAAAAAAAKNQAAAAAAAAAAAAAKNQAAAAAAAAs1AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAE1AAAAAAAADzUAAAAAAAAAAAAAAADwvw"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKpFAAAAAAAAq0UAAAAAAAAAAAAAq0UAAAAAAACsRQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKpFAAAAAAAAqkUAAAAAAAAAAAAAAADwvw"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAADFTAAAAAAAAMlMAAAAAAAAAAAAAMlMAAAAAAAAzUwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADFTAAAAAAAAMVMAAAAAAAAAAAAAAADwvw"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "oin"
					},
					"BAAAAL9TAAAAAAAAwFMAAAAAAAAAAAAAwFMAAAAAAADAUwAAAAAAAAUAAABzdGFydMBTAAAAAAAAwVMAAAAAAAAAAAAAwVMAAAAAAADCUwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL9TAAAAAAAAxFMAAAAAAAAAAAAAAADwvw"
				],
				[
					215,
					3,
					"left_delete",
					null,
					"AwAAAMFTAAAAAAAAwVMAAAAAAAABAAAAbsBTAAAAAAAAwFMAAAAAAAABAAAAab9TAAAAAAAAv1MAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMJTAAAAAAAAwlMAAAAAAAAAAAAAAADwvw"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "inpt"
					},
					"BAAAAL9TAAAAAAAAwFMAAAAAAAAAAAAAwFMAAAAAAADBUwAAAAAAAAAAAADBUwAAAAAAAMJTAAAAAAAAAAAAAMJTAAAAAAAAw1MAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL9TAAAAAAAAv1MAAAAAAAAAAAAAAADwvw"
				],
				[
					217,
					1,
					"left_delete",
					null,
					"AQAAAMJTAAAAAAAAwlMAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMNTAAAAAAAAw1MAAAAAAAAAAAAAAADwvw"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "ut.pos"
					},
					"BgAAAMJTAAAAAAAAw1MAAAAAAAAAAAAAw1MAAAAAAADEUwAAAAAAAAAAAADEUwAAAAAAAMVTAAAAAAAAAAAAAMVTAAAAAAAAxlMAAAAAAAAAAAAAxlMAAAAAAADHUwAAAAAAAAAAAADHUwAAAAAAAMhTAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMJTAAAAAAAAwlMAAAAAAAAAAAAAAADwvw"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": "start"
					},
					"BQAAANZTAAAAAAAA11MAAAAAAAAAAAAA11MAAAAAAADYUwAAAAAAAAAAAADYUwAAAAAAANlTAAAAAAAAAAAAANlTAAAAAAAA2lMAAAAAAAAAAAAA2lMAAAAAAADbUwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANZTAAAAAAAA1lMAAAAAAAAAAAAAAADwvw"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAANtTAAAAAAAA3FMAAAAAAAAAAAAA3FMAAAAAAADdUwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANtTAAAAAAAA21MAAAAAAAAAAAAAAADwvw"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": " lex->byte"
					},
					"CgAAAN1TAAAAAAAA3lMAAAAAAAAAAAAA3lMAAAAAAADfUwAAAAAAAAAAAADfUwAAAAAAAOBTAAAAAAAAAAAAAOBTAAAAAAAA4VMAAAAAAAAAAAAA4VMAAAAAAADiUwAAAAAAAAAAAADiUwAAAAAAAONTAAAAAAAAAAAAAONTAAAAAAAA5FMAAAAAAAAAAAAA5FMAAAAAAADlUwAAAAAAAAAAAADlUwAAAAAAAOZTAAAAAAAAAAAAAOZTAAAAAAAA51MAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN1TAAAAAAAA3VMAAAAAAAAAAAAAAADwvw"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "_lengfrth"
					},
					"CQAAAOdTAAAAAAAA6FMAAAAAAAAAAAAA6FMAAAAAAADpUwAAAAAAAAAAAADpUwAAAAAAAOpTAAAAAAAAAAAAAOpTAAAAAAAA61MAAAAAAAAAAAAA61MAAAAAAADsUwAAAAAAAAAAAADsUwAAAAAAAO1TAAAAAAAAAAAAAO1TAAAAAAAA7lMAAAAAAAAAAAAA7lMAAAAAAADvUwAAAAAAAAAAAADvUwAAAAAAAPBTAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOdTAAAAAAAA51MAAAAAAAAAAAAAAADwvw"
				],
				[
					224,
					4,
					"left_delete",
					null,
					"BAAAAO9TAAAAAAAA71MAAAAAAAABAAAAaO5TAAAAAAAA7lMAAAAAAAABAAAAdO1TAAAAAAAA7VMAAAAAAAABAAAAcuxTAAAAAAAA7FMAAAAAAAABAAAAZg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPBTAAAAAAAA8FMAAAAAAAAAAAAAAADwvw"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAOxTAAAAAAAA7VMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOxTAAAAAAAA7FMAAAAAAAAAAAAAAADwvw"
				],
				[
					226,
					1,
					"left_delete",
					null,
					"AQAAAOxTAAAAAAAA7FMAAAAAAAABAAAAZw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO1TAAAAAAAA7VMAAAAAAAAAAAAAAADwvw"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "th"
					},
					"AgAAAOxTAAAAAAAA7VMAAAAAAAAAAAAA7VMAAAAAAADuUwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOxTAAAAAAAA7FMAAAAAAAAAAAAAAADwvw"
				],
				[
					230,
					1,
					"left_delete",
					null,
					"AQAAAO5TAAAAAAAA7lMAAAAAAAAOAAAAbGV4LT5pbnB1dC5wb3M",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO5TAAAAAAAA/FMAAAAAAAAAAAAAAADwvw"
				],
				[
					258,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAOZgAAAAAAAA6GAAAAAAAAAAAAAAk2AAAAAAAACVYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJNgAAAAAAAA5mAAAAAAAAD////////vfw"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAGCOAAAAAAAAYY4AAAAAAAAAAAAAYY4AAAAAAABijgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGCOAAAAAAAAYI4AAAAAAAAAAAAAAADwvw"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABReAAAAAAAAFV4AAAAAAAAAAAAAFV4AAAAAAAAWXgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABReAAAAAAAAFF4AAAAAAAAAAAAAAADwvw"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": "input.pos"
					},
					"CgAAABV9AAAAAAAAFn0AAAAAAAAAAAAAFn0AAAAAAAAWfQAAAAAAAAUAAABzdGFydBZ9AAAAAAAAF30AAAAAAAAAAAAAF30AAAAAAAAYfQAAAAAAAAAAAAAYfQAAAAAAABl9AAAAAAAAAAAAABl9AAAAAAAAGn0AAAAAAAAAAAAAGn0AAAAAAAAbfQAAAAAAAAAAAAAbfQAAAAAAABx9AAAAAAAAAAAAABx9AAAAAAAAHX0AAAAAAAAAAAAAHX0AAAAAAAAefQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABV9AAAAAAAAGn0AAAAAAAAAAAAAAADwvw"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": "input.pos"
					},
					"CQAAALl9AAAAAAAAun0AAAAAAAAAAAAAun0AAAAAAAC7fQAAAAAAAAAAAAC7fQAAAAAAALx9AAAAAAAAAAAAALx9AAAAAAAAvX0AAAAAAAAAAAAAvX0AAAAAAAC+fQAAAAAAAAAAAAC+fQAAAAAAAL99AAAAAAAAAAAAAL99AAAAAAAAwH0AAAAAAAAAAAAAwH0AAAAAAADBfQAAAAAAAAAAAADBfQAAAAAAAMJ9AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALl9AAAAAAAAuX0AAAAAAAAAAAAAAADwvw"
				],
				[
					339,
					5,
					"right_delete",
					null,
					"BQAAAMJ9AAAAAAAAwn0AAAAAAAABAAAAc8J9AAAAAAAAwn0AAAAAAAABAAAAdMJ9AAAAAAAAwn0AAAAAAAABAAAAYcJ9AAAAAAAAwn0AAAAAAAABAAAAcsJ9AAAAAAAAwn0AAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMJ9AAAAAAAAwn0AAAAAAAAAAAAAAADwvw"
				],
				[
					352,
					1,
					"left_delete",
					null,
					"AQAAADuIAAAAAAAAO4gAAAAAAABjAAAAICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAic3RhcnQiLCBKU19OZXdVaW50MzIoY3R4LCBsZXgtPnN0YXJ0KSwgSlNfUFJPUF9FTlVNRVJBQkxFKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADuIAAAAAAAAnogAAAAAAAAAAAAAAAAAAA"
				],
				[
					358,
					1,
					"cut",
					null,
					"AQAAADuIAAAAAAAAO4gAAAAAAABrAAAAICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAiYnl0ZWxlbiIsIEpTX05ld1VpbnQzMihjdHgsIGxleC0+Ynl0ZV9sZW5ndGgpLCBKU19QUk9QX0VOVU1FUkFCTEUpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADuIAAAAAAAApogAAAAAAAAAAAAAAAAAAA"
				],
				[
					359,
					2,
					"paste",
					null,
					"AgAAADuIAAAAAAAApogAAAAAAAAAAAAApogAAAAAAAARiQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADuIAAAAAAAAO4gAAAAAAAAAAAAAAADwvw"
				],
				[
					366,
					1,
					"left_delete",
					null,
					"AQAAAKaIAAAAAAAApogAAAAAAABrAAAAICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAiYnl0ZWxlbiIsIEpTX05ld1VpbnQzMihjdHgsIGxleC0+Ynl0ZV9sZW5ndGgpLCBKU19QUk9QX0VOVU1FUkFCTEUpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKaIAAAAAAAAEYkAAAAAAAAAAAAAAADwvw"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": "input.pos"
					},
					"CQAAADh9AAAAAAAAOX0AAAAAAAAAAAAAOX0AAAAAAAA6fQAAAAAAAAAAAAA6fQAAAAAAADt9AAAAAAAAAAAAADt9AAAAAAAAPH0AAAAAAAAAAAAAPH0AAAAAAAA9fQAAAAAAAAAAAAA9fQAAAAAAAD59AAAAAAAAAAAAAD59AAAAAAAAP30AAAAAAAAAAAAAP30AAAAAAABAfQAAAAAAAAAAAABAfQAAAAAAAEF9AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADh9AAAAAAAAOH0AAAAAAAAAAAAAAADwvw"
				],
				[
					380,
					5,
					"right_delete",
					null,
					"BQAAAEF9AAAAAAAAQX0AAAAAAAABAAAAc0F9AAAAAAAAQX0AAAAAAAABAAAAdEF9AAAAAAAAQX0AAAAAAAABAAAAYUF9AAAAAAAAQX0AAAAAAAABAAAAckF9AAAAAAAAQX0AAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEF9AAAAAAAAQX0AAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "lib/jslexer.js",
			"settings":
			{
				"buffer_size": 16459,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					88,
					1,
					"insert",
					{
						"characters": "ZH"
					},
					"AgAAALU2AAAAAAAAtjYAAAAAAAAAAAAAtjYAAAAAAAC3NgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALU2AAAAAAAAtTYAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					2,
					"left_delete",
					null,
					"AgAAALY2AAAAAAAAtjYAAAAAAAABAAAASLU2AAAAAAAAtTYAAAAAAAABAAAAWg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALc2AAAAAAAAtzYAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "Head"
					},
					"BAAAALU2AAAAAAAAtjYAAAAAAAAAAAAAtjYAAAAAAAC3NgAAAAAAAAAAAAC3NgAAAAAAALg2AAAAAAAAAAAAALg2AAAAAAAAuTYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALU2AAAAAAAAtTYAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "Part"
					},
					"BAAAAGo3AAAAAAAAazcAAAAAAAAAAAAAazcAAAAAAABsNwAAAAAAAAAAAABsNwAAAAAAAG03AAAAAAAAAAAAAG03AAAAAAAAbjcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGo3AAAAAAAAajcAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAAAY4AAAAAAAABzgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAY4AAAAAAAABjgAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"left_delete",
					null,
					"AQAAAAY4AAAAAAAABjgAAAAAAAABAAAARQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAc4AAAAAAAABzgAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "Tail"
					},
					"BAAAAAY4AAAAAAAABzgAAAAAAAAAAAAABzgAAAAAAAAIOAAAAAAAAAAAAAAIOAAAAAAAAAk4AAAAAAAAAAAAAAk4AAAAAAAACjgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAY4AAAAAAAABjgAAAAAAAAAAAAAAADwvw"
				],
				[
					218,
					1,
					"cut",
					null,
					"AQAAACsBAAAAAAAAKwEAAAAAAABFAAAAICBIZXhEaWdpdDogL1swLTlhLWZBLUZdLywKICBIZXhEaWdpdHM6IC97SGV4RGlnaXR9KF8/e0hleERpZ2l0fSkqLywK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsBAAAAAAAAcAEAAAAAAAAAAAAAAAAAAA"
				],
				[
					219,
					2,
					"paste",
					null,
					"AgAAACsBAAAAAAAAcAEAAAAAAAAAAAAAcAEAAAAAAAC1AQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsBAAAAAAAAKwEAAAAAAAAAAAAAAADwvw"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": "Binary"
					},
					"BwAAAHIBAAAAAAAAcwEAAAAAAAAAAAAAcwEAAAAAAABzAQAAAAAAAAMAAABIZXhzAQAAAAAAAHQBAAAAAAAAAAAAAHQBAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB2AQAAAAAAAAAAAAB2AQAAAAAAAHcBAAAAAAAAAAAAAHcBAAAAAAAAeAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIBAAAAAAAAdQEAAAAAAAAAAAAAAADwvw"
				],
				[
					227,
					1,
					"cut",
					null,
					"AQAAAHIBAAAAAAAAcgEAAAAAAAAGAAAAQmluYXJ5",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgBAAAAAAAAcgEAAAAAAAAAAAAAAAA0QA"
				],
				[
					228,
					1,
					"paste",
					null,
					"AQAAAHIBAAAAAAAAeAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIBAAAAAAAAcgEAAAAAAAAAAAAAAADwvw"
				],
				[
					231,
					3,
					"right_delete",
					null,
					"AwAAAJABAAAAAAAAkAEAAAAAAAABAAAASJABAAAAAAAAkAEAAAAAAAABAAAAZZABAAAAAAAAkAEAAAAAAAABAAAAeA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJABAAAAAAAAkAEAAAAAAAAAAAAAAAA0QA"
				],
				[
					232,
					1,
					"paste",
					null,
					"AQAAAJABAAAAAAAAlgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJABAAAAAAAAkAEAAAAAAAAAAAAAAADwvw"
				],
				[
					237,
					7,
					"right_delete",
					null,
					"BwAAAIMBAAAAAAAAgwEAAAAAAAABAAAAOYMBAAAAAAAAgwEAAAAAAAABAAAAYYMBAAAAAAAAgwEAAAAAAAABAAAALYMBAAAAAAAAgwEAAAAAAAABAAAAZoMBAAAAAAAAgwEAAAAAAAABAAAAQYMBAAAAAAAAgwEAAAAAAAABAAAALYMBAAAAAAAAgwEAAAAAAAABAAAARg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIMBAAAAAAAAgwEAAAAAAAAAAAAAAADwvw"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAIMBAAAAAAAAhAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIMBAAAAAAAAgwEAAAAAAAAAAAAAAADwvw"
				],
				[
					240,
					1,
					"left_delete",
					null,
					"AQAAAIIBAAAAAAAAggEAAAAAAAABAAAALQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIMBAAAAAAAAgwEAAAAAAAAAAAAAAADwvw"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "Binary"
					},
					"BwAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACaAQAAAAAAAAMAAABIZXiaAQAAAAAAAJsBAAAAAAAAAAAAAJsBAAAAAAAAnAEAAAAAAAAAAAAAnAEAAAAAAACdAQAAAAAAAAAAAACdAQAAAAAAAJ4BAAAAAAAAAAAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkBAAAAAAAAnAEAAAAAAAAAAAAAAADwvw"
				],
				[
					247,
					3,
					"right_delete",
					null,
					"AwAAAKkBAAAAAAAAqQEAAAAAAAABAAAASKkBAAAAAAAAqQEAAAAAAAABAAAAZakBAAAAAAAAqQEAAAAAAAABAAAAeA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkBAAAAAAAAqQEAAAAAAAAAAAAAAADwvw"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "Binarfy"
					},
					"BwAAAKkBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACrAQAAAAAAAAAAAACrAQAAAAAAAKwBAAAAAAAAAAAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAACuAQAAAAAAAK8BAAAAAAAAAAAAAK8BAAAAAAAAsAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkBAAAAAAAAqQEAAAAAAAAAAAAAAADwvw"
				],
				[
					249,
					2,
					"left_delete",
					null,
					"AgAAAK8BAAAAAAAArwEAAAAAAAABAAAAea4BAAAAAAAArgEAAAAAAAABAAAAZg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALABAAAAAAAAsAEAAAAAAAAAAAAAAADwvw"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAK4BAAAAAAAArwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4BAAAAAAAArgEAAAAAAAAAAAAAAADwvw"
				],
				[
					265,
					1,
					"cut",
					null,
					"AQAAAEMuAAAAAAAAQy4AAAAAAAArAAAAICBIZXhJbnRlZ2VyTGl0ZXJhbDogL1swXVt4WF17SGV4RGlnaXRzfS8sCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMuAAAAAAAAbi4AAAAAAAAAAAAAAAAAAA"
				],
				[
					266,
					2,
					"paste",
					null,
					"AgAAAEMuAAAAAAAAbi4AAAAAAAAAAAAAbi4AAAAAAACZLgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMuAAAAAAAAQy4AAAAAAAAAAAAAAADwvw"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "Binary"
					},
					"BwAAAHAuAAAAAAAAcS4AAAAAAAAAAAAAcS4AAAAAAABxLgAAAAAAAAMAAABIZXhxLgAAAAAAAHIuAAAAAAAAAAAAAHIuAAAAAAAAcy4AAAAAAAAAAAAAcy4AAAAAAAB0LgAAAAAAAAAAAAB0LgAAAAAAAHUuAAAAAAAAAAAAAHUuAAAAAAAAdi4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAuAAAAAAAAcy4AAAAAAAAAAAAAAADwvw"
				],
				[
					272,
					1,
					"right_delete",
					null,
					"AQAAAIwuAAAAAAAAjC4AAAAAAAABAAAAWA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwuAAAAAAAAjC4AAAAAAAAAAAAAAADwvw"
				],
				[
					273,
					1,
					"left_delete",
					null,
					"AQAAAIsuAAAAAAAAiy4AAAAAAAABAAAAeA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwuAAAAAAAAjC4AAAAAAAAAAAAAAADwvw"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "Bb"
					},
					"AgAAAIsuAAAAAAAAjC4AAAAAAAAAAAAAjC4AAAAAAACNLgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsuAAAAAAAAiy4AAAAAAAAAAAAAAADwvw"
				],
				[
					275,
					2,
					"left_delete",
					null,
					"AgAAAIwuAAAAAAAAjC4AAAAAAAABAAAAYosuAAAAAAAAiy4AAAAAAAABAAAAQg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0uAAAAAAAAjS4AAAAAAAAAAAAAAADwvw"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "bB"
					},
					"AgAAAIsuAAAAAAAAjC4AAAAAAAAAAAAAjC4AAAAAAACNLgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsuAAAAAAAAiy4AAAAAAAAAAAAAAADwvw"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "Binary"
					},
					"BwAAAI8uAAAAAAAAkC4AAAAAAAAAAAAAkC4AAAAAAACQLgAAAAAAAAMAAABIZXiQLgAAAAAAAJEuAAAAAAAAAAAAAJEuAAAAAAAAki4AAAAAAAAAAAAAki4AAAAAAACTLgAAAAAAAAAAAACTLgAAAAAAAJQuAAAAAAAAAAAAAJQuAAAAAAAAlS4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8uAAAAAAAAki4AAAAAAAAAAAAAAADwvw"
				],
				[
					314,
					1,
					"cut",
					null,
					"AQAAAA47AAAAAAAADjsAAAAAAAAUAAAAe0hleEludGVnZXJMaXRlcmFsfXw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA47AAAAAAAAIjsAAAAAAAAAAAAAAADwvw"
				],
				[
					315,
					2,
					"paste",
					null,
					"AgAAAA47AAAAAAAAIjsAAAAAAAAAAAAAIjsAAAAAAAA2OwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA47AAAAAAAADjsAAAAAAAAAAAAAAADwvw"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "Binary"
					},
					"BwAAACM7AAAAAAAAJDsAAAAAAAAAAAAAJDsAAAAAAAAkOwAAAAAAAAMAAABIZXgkOwAAAAAAACU7AAAAAAAAAAAAACU7AAAAAAAAJjsAAAAAAAAAAAAAJjsAAAAAAAAnOwAAAAAAAAAAAAAnOwAAAAAAACg7AAAAAAAAAAAAACg7AAAAAAAAKTsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACM7AAAAAAAAJjsAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "utils.c",
			"settings":
			{
				"buffer_size": 64368,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.c",
			"settings":
			{
				"buffer_size": 1522614,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
			"settings":
			{
				"buffer_size": 40236,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 399 files for \"JS_GetOwnPropertyNames\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c:\n  624    assert(ta == TYPE_OBJECT);\n  625    assert(tb == TYPE_OBJECT);\n  626:   if(JS_GetOwnPropertyNames(ctx, &atoms_a, &natoms_a, a, JS_GPN_STRING_MASK | JS_GPN_SYMBOL_MASK | JS_GPN_ENUM_ONLY))\n  627      return FALSE;\n  628  \n  629:   if(JS_GetOwnPropertyNames(ctx, &atoms_b, &natoms_b, b, JS_GPN_STRING_MASK | JS_GPN_SYMBOL_MASK | JS_GPN_ENUM_ONLY))\n  630      return FALSE;\n  631  \n  ...\n 1265        uint32_t tab_atom_len;\n 1266        ret = JS_IsArray(ctx, value) ? JS_NewArray(ctx) : JS_NewObject(ctx);\n 1267:       if(!JS_GetOwnPropertyNames(ctx, &tab_atom, &tab_atom_len, value, JS_GPN_STRING_MASK | JS_GPN_SYMBOL_MASK | JS_GPN_ENUM_ONLY)) {\n 1268          uint32_t i;\n 1269          for(i = 0; i < tab_atom_len; i++) {\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c:\n  313    JSPropertyEnum* tmp_tab;\n  314    uint32_t i, tmp_len;\n  315:   ret = JS_GetOwnPropertyNames(ctx, &tmp_tab, &tmp_len, obj, flags);\n  316  \n  317    for(i = 0; i < tmp_len; i++) {\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c:\n   15    it->is_array = JS_IsArray(ctx, object);\n   16  \n   17:   if(JS_GetOwnPropertyNames(ctx, &it->tab_atom, &it->tab_atom_len, object, flags & 0x3f)) {\n   18      it->tab_atom_len = 0;\n   19      it->tab_atom = 0;\n\n5 matches across 3 files\n\n\nSearching 399 files for \"JS_GetOwnPropertyNames\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c:\n  624    assert(ta == TYPE_OBJECT);\n  625    assert(tb == TYPE_OBJECT);\n  626:   if(JS_GetOwnPropertyNames(ctx, &atoms_a, &natoms_a, a, JS_GPN_STRING_MASK | JS_GPN_SYMBOL_MASK | JS_GPN_ENUM_ONLY))\n  627      return FALSE;\n  628  \n  629:   if(JS_GetOwnPropertyNames(ctx, &atoms_b, &natoms_b, b, JS_GPN_STRING_MASK | JS_GPN_SYMBOL_MASK | JS_GPN_ENUM_ONLY))\n  630      return FALSE;\n  631  \n  ...\n 1265        uint32_t tab_atom_len;\n 1266        ret = JS_IsArray(ctx, value) ? JS_NewArray(ctx) : JS_NewObject(ctx);\n 1267:       if(!JS_GetOwnPropertyNames(ctx, &tab_atom, &tab_atom_len, value, JS_GPN_STRING_MASK | JS_GPN_SYMBOL_MASK | JS_GPN_ENUM_ONLY)) {\n 1268          uint32_t i;\n 1269          for(i = 0; i < tab_atom_len; i++) {\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c:\n  313    JSPropertyEnum* tmp_tab;\n  314    uint32_t i, tmp_len;\n  315:   ret = JS_GetOwnPropertyNames(ctx, &tmp_tab, &tmp_len, obj, flags);\n  316  \n  317    for(i = 0; i < tmp_len; i++) {\n\n/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c:\n   15    it->is_array = JS_IsArray(ctx, object);\n   16  \n   17:   if(JS_GetOwnPropertyNames(ctx, &it->tab_atom, &it->tab_atom_len, object, flags & 0x3f)) {\n   18      it->tab_atom_len = 0;\n   19      it->tab_atom = 0;\n\n5 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 2878,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "property-enumeration.c",
			"settings":
			{
				"buffer_size": 6751,
				"line_ending": "Unix"
			}
		},
		{
			"file": "char-utils.h",
			"settings":
			{
				"buffer_size": 8854,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					53,
					1,
					"insert",
					{
						"characters": "\nwhile"
					},
					"BwAAAOkSAAAAAAAA6hIAAAAAAAAAAAAA6hIAAAAAAADsEgAAAAAAAAAAAADsEgAAAAAAAO0SAAAAAAAAAAAAAO0SAAAAAAAA7hIAAAAAAAAAAAAA7hIAAAAAAADvEgAAAAAAAAAAAADvEgAAAAAAAPASAAAAAAAAAAAAAPASAAAAAAAA8RIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkSAAAAAAAA6RIAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPESAAAAAAAA8xIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPESAAAAAAAA8RIAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"AwAAAPISAAAAAAAA8xIAAAAAAAAAAAAA8xIAAAAAAAD0EgAAAAAAAAAAAAD0EgAAAAAAAPUSAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPISAAAAAAAA8hIAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPUSAAAAAAAA9hIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUSAAAAAAAA9RIAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAPYSAAAAAAAA9xIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYSAAAAAAAA9hIAAAAAAAAAAAAAAADwvw"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " end"
					},
					"BAAAAPcSAAAAAAAA+BIAAAAAAAAAAAAA+BIAAAAAAAD5EgAAAAAAAAAAAAD5EgAAAAAAAPoSAAAAAAAAAAAAAPoSAAAAAAAA+xIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcSAAAAAAAA9xIAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPwSAAAAAAAA/RIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwSAAAAAAAA/BIAAAAAAAAAAAAAAADwvw"
				],
				[
					61,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAP0SAAAAAAAA/xIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0SAAAAAAAA/RIAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"right_delete",
					null,
					"AQAAAP4SAAAAAAAA/hIAAAAAAAABAAAAfQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4SAAAAAAAA/hIAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "\npos"
					},
					"BQAAACoTAAAAAAAAKxMAAAAAAAAAAAAAKxMAAAAAAAAtEwAAAAAAAAAAAAAtEwAAAAAAAC4TAAAAAAAAAAAAAC4TAAAAAAAALxMAAAAAAAAAAAAALxMAAAAAAAAwEwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoTAAAAAAAAKhMAAAAAAAD////////vfw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADATAAAAAAAAMRMAAAAAAAAAAAAAMRMAAAAAAAAyEwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADATAAAAAAAAMBMAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " next;"
					},
					"BgAAADITAAAAAAAAMxMAAAAAAAAAAAAAMxMAAAAAAAA0EwAAAAAAAAAAAAA0EwAAAAAAADUTAAAAAAAAAAAAADUTAAAAAAAANhMAAAAAAAAAAAAANhMAAAAAAAA3EwAAAAAAAAAAAAA3EwAAAAAAADgTAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADITAAAAAAAAMhMAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAADgTAAAAAAAAORMAAAAAAAAAAAAAORMAAAAAAAA7EwAAAAAAAAAAAAA7EwAAAAAAADwTAAAAAAAAAAAAADkTAAAAAAAAORMAAAAAAAACAAAAICA5EwAAAAAAADkTAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgTAAAAAAAAOBMAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAEsTAAAAAAAATBMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsTAAAAAAAASxMAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"left_delete",
					null,
					"AQAAAEsTAAAAAAAASxMAAAAAAAABAAAAKA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwTAAAAAAAATBMAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "\nsize_t"
					},
					"CAAAALoSAAAAAAAAuxIAAAAAAAAAAAAAuxIAAAAAAAC9EgAAAAAAAAAAAAC9EgAAAAAAAL4SAAAAAAAAAAAAAL4SAAAAAAAAvxIAAAAAAAAAAAAAvxIAAAAAAADAEgAAAAAAAAAAAADAEgAAAAAAAMESAAAAAAAAAAAAAMESAAAAAAAAwhIAAAAAAAAAAAAAwhIAAAAAAADDEgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoSAAAAAAAAuhIAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " i=0;"
					},
					"BQAAAMMSAAAAAAAAxBIAAAAAAAAAAAAAxBIAAAAAAADFEgAAAAAAAAAAAADFEgAAAAAAAMYSAAAAAAAAAAAAAMYSAAAAAAAAxxIAAAAAAAAAAAAAxxIAAAAAAADIEgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMSAAAAAAAAwxIAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "\ni++;"
					},
					"BgAAAEYTAAAAAAAARxMAAAAAAAAAAAAARxMAAAAAAABJEwAAAAAAAAAAAABJEwAAAAAAAEoTAAAAAAAAAAAAAEoTAAAAAAAASxMAAAAAAAAAAAAASxMAAAAAAABMEwAAAAAAAAAAAABMEwAAAAAAAE0TAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYTAAAAAAAARhMAAAAAAAAAAAAAAEBgQA"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAE0TAAAAAAAAThMAAAAAAAAAAAAAThMAAAAAAABQEwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0TAAAAAAAATRMAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAFATAAAAAAAAURMAAAAAAAAAAAAAURMAAAAAAABSEwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFATAAAAAAAAUBMAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"left_delete",
					null,
					"AQAAAFMTAAAAAAAAUxMAAAAAAAABAAAAfQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFQTAAAAAAAAVBMAAAAAAAAAAAAAAABEQA"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AgAAAF0TAAAAAAAAXhMAAAAAAAAAAAAAXhMAAAAAAABeEwAAAAAAAAoAAABuZXh0IC0gcG9z",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0TAAAAAAAAZxMAAAAAAAAAAAAAAADwvw"
				],
				[
					102,
					1,
					"left_delete",
					null,
					"AQAAAFITAAAAAAAAUhMAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMTAAAAAAAAUxMAAAAAAAAAAAAAAABZQA"
				],
				[
					105,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFITAAAAAAAAUhMAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "lib/bnflexer.js",
			"settings":
			{
				"buffer_size": 6621,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": ",JS"
					},
					"AwAAALMHAAAAAAAAtAcAAAAAAAAAAAAAtAcAAAAAAAC1BwAAAAAAAAAAAAC1BwAAAAAAALYHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMHAAAAAAAAswcAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAANgHAAAAAAAA2AcAAAAAAAA7AAAAdGhpcy5hZGRSdWxlKCdjZW5kJywgLzxKUz4lfS8sICgpID0+IHRoaXMucG9wU3RhdGUoKSk7CiAgICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgHAAAAAAAAEwgAAAAAAAAAAAAAAABEQA"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMgPAAAAAAAAyQ8AAAAAAAAAAAAAyQ8AAAAAAADKDwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgPAAAAAAAAyA8AAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "d_"
					},
					"AgAAABwJAAAAAAAAHQkAAAAAAAAAAAAAHQkAAAAAAAAeCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwJAAAAAAAAHAkAAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					1,
					"cut",
					null,
					"AQAAABwJAAAAAAAAHAkAAAAAAAACAAAAZF8",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4JAAAAAAAAHAkAAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"paste",
					null,
					"AQAAABwJAAAAAAAAHgkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwJAAAAAAAAHAkAAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					1,
					"paste",
					null,
					"AQAAAFgJAAAAAAAAWgkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgJAAAAAAAAWAkAAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"paste",
					null,
					"AQAAANEJAAAAAAAA0wkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEJAAAAAAAA0QkAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"paste",
					null,
					"AQAAABkKAAAAAAAAGwoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkKAAAAAAAAGQoAAAAAAAAAAAAAAADwvw"
				],
				[
					145,
					1,
					"paste",
					null,
					"AQAAAFoKAAAAAAAAXAoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoKAAAAAAAAWgoAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"paste",
					null,
					"AQAAAI0KAAAAAAAAjwoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0KAAAAAAAAjQoAAAAAAAAAAAAAAADwvw"
				],
				[
					151,
					1,
					"paste",
					null,
					"AQAAAMIKAAAAAAAAxAoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIKAAAAAAAAwgoAAAAAAAAAAAAAAADwvw"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "'c_'+"
					},
					"BQAAAKcVAAAAAAAAqBUAAAAAAAAAAAAAqBUAAAAAAACpFQAAAAAAAAAAAACpFQAAAAAAAKoVAAAAAAAAAAAAAKoVAAAAAAAAqxUAAAAAAAAAAAAAqxUAAAAAAACsFQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcVAAAAAAAApxUAAAAAAAAAAAAAAADwvw"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "<INITIAL,"
					},
					"CQAAAEYTAAAAAAAARxMAAAAAAAAAAAAARxMAAAAAAABIEwAAAAAAAAAAAABIEwAAAAAAAEkTAAAAAAAAAAAAAEkTAAAAAAAAShMAAAAAAAAAAAAAShMAAAAAAABLEwAAAAAAAAAAAABLEwAAAAAAAEwTAAAAAAAAAAAAAEwTAAAAAAAATRMAAAAAAAAAAAAATRMAAAAAAABOEwAAAAAAAAAAAABOEwAAAAAAAE8TAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYTAAAAAAAARhMAAAAAAAAAAAAAAADwvw"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "C>"
					},
					"AgAAAE8TAAAAAAAAUBMAAAAAAAAAAAAAUBMAAAAAAABREwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8TAAAAAAAATxMAAAAAAAAAAAAAAADwvw"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "c_"
					},
					"AgAAAFYWAAAAAAAAVxYAAAAAAAAAAAAAVxYAAAAAAABYFgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYWAAAAAAAAVhYAAAAAAAAAAAAAAADwvw"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "c_"
					},
					"AgAAAAEWAAAAAAAAAhYAAAAAAAAAAAAAAhYAAAAAAAADFgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEWAAAAAAAAARYAAAAAAAAAAAAAAADwvw"
				],
				[
					239,
					2,
					"left_delete",
					null,
					"AgAAAEcTAAAAAAAARxMAAAAAAAAKAAAASU5JVElBTCxDPkYTAAAAAAAARhMAAAAAAAABAAAAPA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcTAAAAAAAAURMAAAAAAAAAAAAAAADwvw"
				],
				[
					278,
					1,
					"cut",
					null,
					"AQAAAFUFAAAAAAAAVQUAAAAAAAAsAAAAICAgIHRoaXMuZGVmaW5lKCd3b3JkJywgL1tBLVphLXpfXVstXHddKi8pOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUFAAAAAAAAgQUAAAAAAAAAAAAAAADwvw"
				],
				[
					279,
					2,
					"paste",
					null,
					"AgAAAFUFAAAAAAAAgQUAAAAAAAAAAAAAgQUAAAAAAACtBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUFAAAAAAAAVQUAAAAAAAAAAAAAAADwvw"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "def"
					},
					"BAAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACTBQAAAAAAAAQAAAB3b3JkkwUAAAAAAACUBQAAAAAAAAAAAACUBQAAAAAAAJUFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIFAAAAAAAAlgUAAAAAAAAAAAAAAADwvw"
				],
				[
					285,
					3,
					"left_delete",
					null,
					"AwAAAJQFAAAAAAAAlAUAAAAAAAABAAAAZpMFAAAAAAAAkwUAAAAAAAABAAAAZZIFAAAAAAAAkgUAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUFAAAAAAAAlQUAAAAAAAAAAAAAAADwvw"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "keyword"
					},
					"BwAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACUBQAAAAAAAAAAAACUBQAAAAAAAJUFAAAAAAAAAAAAAJUFAAAAAAAAlgUAAAAAAAAAAAAAlgUAAAAAAACXBQAAAAAAAAAAAACXBQAAAAAAAJgFAAAAAAAAAAAAAJgFAAAAAAAAmQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIFAAAAAAAAkgUAAAAAAAAAAAAAAADwvw"
				],
				[
					289,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAAJ0FAAAAAAAAnQUAAAAAAAAPAAAAW0EtWmEtel9dWy1cd10qnQUAAAAAAACuBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0FAAAAAAAArAUAAAAAAAAAAAAAAADwvw"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "grammar"
					},
					"CAAAAJ4FAAAAAAAAnwUAAAAAAAAAAAAAnwUAAAAAAACfBQAAAAAAAA8AAABbQS1aYS16X11bLVx3XSqfBQAAAAAAAKAFAAAAAAAAAAAAAKAFAAAAAAAAoQUAAAAAAAAAAAAAoQUAAAAAAACiBQAAAAAAAAAAAACiBQAAAAAAAKMFAAAAAAAAAAAAAKMFAAAAAAAApAUAAAAAAAAAAAAApAUAAAAAAAClBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4FAAAAAAAArQUAAAAAAAAAAAAAAADwvw"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKkFAAAAAAAAqgUAAAAAAAAAAAAAqgUAAAAAAACuBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkFAAAAAAAAqQUAAAAAAAAAAAAAAADwvw"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": "addRule"
					},
					"CQAAAIoFAAAAAAAAiwUAAAAAAAAAAAAAiwUAAAAAAACLBQAAAAAAAAYAAABkZWZpbmWlBQAAAAAAAKUFAAAAAAAABAAAACAgICCLBQAAAAAAAIwFAAAAAAAAAAAAAIwFAAAAAAAAjQUAAAAAAAAAAAAAjQUAAAAAAACOBQAAAAAAAAAAAACOBQAAAAAAAI8FAAAAAAAAAAAAAI8FAAAAAAAAkAUAAAAAAAAAAAAAkAUAAAAAAACRBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoFAAAAAAAAkAUAAAAAAAAAAAAAAADwvw"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIEFAAAAAAAAggUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEFAAAAAAAAgQUAAAAAAAAAAAAAAAAAAA"
				],
				[
					323,
					1,
					"left_delete",
					null,
					"AQAAAKsFAAAAAAAAqwUAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwFAAAAAAAArAUAAAAAAAAAAAAAAAAAAA"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": "'js_'0"
					},
					"BgAAAKkYAAAAAAAAqhgAAAAAAAAAAAAAqhgAAAAAAACrGAAAAAAAAAAAAACrGAAAAAAAAKwYAAAAAAAAAAAAAKwYAAAAAAAArRgAAAAAAAAAAAAArRgAAAAAAACuGAAAAAAAAAAAAACuGAAAAAAAAK8YAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkYAAAAAAAAqRgAAAAAAAAAAAAAAADwvw"
				],
				[
					353,
					1,
					"left_delete",
					null,
					"AQAAAK4YAAAAAAAArhgAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8YAAAAAAAArxgAAAAAAAAAAAAAAADwvw"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAK4YAAAAAAAArxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4YAAAAAAAArhgAAAAAAAAAAAAAAADwvw"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAEQAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACEAAAAAAAAAIAAAAvLw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMQAAAAAAAAARAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "lib/clexer.js",
			"settings":
			{
				"buffer_size": 2633,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lexer.h",
			"settings":
			{
				"buffer_size": 2879,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAGMCAAAAAAAAZQIAAAAAAAAAAAAAXAIAAAAAAABeAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwCAAAAAAAAYwIAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "lexer.c",
			"settings":
			{
				"buffer_size": 10923,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					63,
					1,
					"insert",
					{
						"characters": "\nassert"
					},
					"CAAAALASAAAAAAAAsRIAAAAAAAAAAAAAsRIAAAAAAACzEgAAAAAAAAAAAACzEgAAAAAAALQSAAAAAAAAAAAAALQSAAAAAAAAtRIAAAAAAAAAAAAAtRIAAAAAAAC2EgAAAAAAAAAAAAC2EgAAAAAAALcSAAAAAAAAAAAAALcSAAAAAAAAuBIAAAAAAAAAAAAAuBIAAAAAAAC5EgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALASAAAAAAAAsBIAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALkSAAAAAAAAuxIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkSAAAAAAAAuRIAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BAAAALoSAAAAAAAAuxIAAAAAAAAAAAAAuxIAAAAAAAC8EgAAAAAAAAAAAAC8EgAAAAAAAL0SAAAAAAAAAAAAAL0SAAAAAAAAvhIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoSAAAAAAAAuhIAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAL8SAAAAAAAAwBIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8SAAAAAAAAvxIAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\nassert"
					},
					"CQAAAOgSAAAAAAAA6RIAAAAAAAAAAAAA6RIAAAAAAADrEgAAAAAAAAAAAADrEgAAAAAAAO0SAAAAAAAAAAAAAO0SAAAAAAAA7hIAAAAAAAAAAAAA7hIAAAAAAADvEgAAAAAAAAAAAADvEgAAAAAAAPASAAAAAAAAAAAAAPASAAAAAAAA8RIAAAAAAAAAAAAA8RIAAAAAAADyEgAAAAAAAAAAAADyEgAAAAAAAPMSAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgSAAAAAAAA6BIAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPMSAAAAAAAA9RIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMSAAAAAAAA8xIAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "rule->name"
					},
					"CgAAAPQSAAAAAAAA9RIAAAAAAAAAAAAA9RIAAAAAAAD2EgAAAAAAAAAAAAD2EgAAAAAAAPcSAAAAAAAAAAAAAPcSAAAAAAAA+BIAAAAAAAAAAAAA+BIAAAAAAAD5EgAAAAAAAAAAAAD5EgAAAAAAAPoSAAAAAAAAAAAAAPoSAAAAAAAA+xIAAAAAAAAAAAAA+xIAAAAAAAD8EgAAAAAAAAAAAAD8EgAAAAAAAP0SAAAAAAAAAAAAAP0SAAAAAAAA/hIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQSAAAAAAAA9BIAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAP8SAAAAAAAAABMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8SAAAAAAAA/xIAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"left_delete",
					null,
					"AQAAAAQTAAAAAAAABBMAAAAAAAAdAAAAIGlmKG5hbWUgJiYgcnVsZS0+bmFtZSkgewogICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQTAAAAAAAAIRMAAAAAAAAAAAAAAAA+QA"
				],
				[
					87,
					4,
					"left_delete",
					null,
					"BAAAAD0TAAAAAAAAPRMAAAAAAABBAAAAIH0gZWxzZSB7CiAgICAgIGlmKG5hbWUgPT0gcnVsZS0+bmFtZSkKICAgICAgICByZXR1cm4gcnVsZTsKICAgIH08EwAAAAAAADwTAAAAAAAAAQAAACA6EwAAAAAAADoTAAAAAAAAAgAAACAgORMAAAAAAAA5EwAAAAAAAAEAAAAK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0TAAAAAAAAfhMAAAAAAAD////////vfw"
				],
				[
					90,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkTAAAAAAAAORMAAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"cut",
					null,
					"AQAAANQPAAAAAAAA1A8AAAAAAAAuAAAAID0gdmVjdG9yX3NpemUoJmxleC0+cnVsZXMsIHNpemVvZihMZXhlclJ1bGUpKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQPAAAAAAAAAhAAAAAAAAAAAAAAAADwvw"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAAESAAAAAAAAAhIAAAAAAAAAAAAAAhIAAAAAAAADEgAAAAAAAAAAAAADEgAAAAAAAAQSAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAESAAAAAAAAARIAAAAAAAAAAAAAAADwvw"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAQSAAAAAAAABRIAAAAAAAAAAAAABRIAAAAAAAAGEgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQSAAAAAAAABBIAAAAAAAAAAAAAAADwvw"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYSAAAAAAAABxIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYSAAAAAAAABhIAAAAAAAAAAAAAAADwvw"
				],
				[
					113,
					1,
					"paste",
					null,
					"AQAAAAcSAAAAAAAANRIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcSAAAAAAAABxIAAAAAAAAAAAAAAADwvw"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAADUSAAAAAAAANhIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUSAAAAAAAANRIAAAAAAAAAAAAAAADwvw"
				],
				[
					115,
					1,
					"left_delete",
					null,
					"AQAAADUSAAAAAAAANRIAAAAAAAABAAAATQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYSAAAAAAAANhIAAAAAAAAAAAAAAADwvw"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADUSAAAAAAAANhIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUSAAAAAAAANRIAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					2,
					"right_delete",
					null,
					"AgAAAAUSAAAAAAAABRIAAAAAAAABAAAAPQUSAAAAAAAABRIAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUSAAAAAAAABRIAAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "\n$"
					},
					"AwAAANUPAAAAAAAA1g8AAAAAAAAAAAAA1g8AAAAAAADYDwAAAAAAAAAAAADYDwAAAAAAANkPAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUPAAAAAAAA1Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANkPAAAAAAAA2g8AAAAAAAAAAAAA2g8AAAAAAADcDwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkPAAAAAAAA2Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					3,
					"left_delete",
					null,
					"AwAAANoPAAAAAAAA2g8AAAAAAAACAAAAICDZDwAAAAAAANkPAAAAAAAAAQAAAArYDwAAAAAAANgPAAAAAAAAAQAAACQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwPAAAAAAAA3A8AAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANgPAAAAAAAA2Q8AAAAAAAAAAAAA2Q8AAAAAAADbDwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgPAAAAAAAA2A8AAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAANsPAAAAAAAA3A8AAAAAAAAAAAAA3A8AAAAAAADdDwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsPAAAAAAAA2w8AAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					2,
					"left_delete",
					null,
					"AgAAANwPAAAAAAAA3A8AAAAAAAABAAAAZtsPAAAAAAAA2w8AAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0PAAAAAAAA3Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "assert"
					},
					"BgAAANsPAAAAAAAA3A8AAAAAAAAAAAAA3A8AAAAAAADdDwAAAAAAAAAAAADdDwAAAAAAAN4PAAAAAAAAAAAAAN4PAAAAAAAA3w8AAAAAAAAAAAAA3w8AAAAAAADgDwAAAAAAAAAAAADgDwAAAAAAAOEPAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsPAAAAAAAA2w8AAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOEPAAAAAAAA4w8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEPAAAAAAAA4Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAOIPAAAAAAAA4w8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIPAAAAAAAA4g8AAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "lexer_rule_find"
					},
					"DwAAAOMPAAAAAAAA5A8AAAAAAAAAAAAA5A8AAAAAAADlDwAAAAAAAAAAAADlDwAAAAAAAOYPAAAAAAAAAAAAAOYPAAAAAAAA5w8AAAAAAAAAAAAA5w8AAAAAAADoDwAAAAAAAAAAAADoDwAAAAAAAOkPAAAAAAAAAAAAAOkPAAAAAAAA6g8AAAAAAAAAAAAA6g8AAAAAAADrDwAAAAAAAAAAAADrDwAAAAAAAOwPAAAAAAAAAAAAAOwPAAAAAAAA7Q8AAAAAAAAAAAAA7Q8AAAAAAADuDwAAAAAAAAAAAADuDwAAAAAAAO8PAAAAAAAAAAAAAO8PAAAAAAAA8A8AAAAAAAAAAAAA8A8AAAAAAADxDwAAAAAAAAAAAADxDwAAAAAAAPIPAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMPAAAAAAAA4w8AAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPIPAAAAAAAA9A8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIPAAAAAAAA8g8AAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "lex,"
					},
					"BAAAAPMPAAAAAAAA9A8AAAAAAAAAAAAA9A8AAAAAAAD1DwAAAAAAAAAAAAD1DwAAAAAAAPYPAAAAAAAAAAAAAPYPAAAAAAAA9w8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMPAAAAAAAA8w8AAAAAAAAAAAAAAADwvw"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " name"
					},
					"BQAAAPcPAAAAAAAA+A8AAAAAAAAAAAAA+A8AAAAAAAD5DwAAAAAAAAAAAAD5DwAAAAAAAPoPAAAAAAAAAAAAAPoPAAAAAAAA+w8AAAAAAAAAAAAA+w8AAAAAAAD8DwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcPAAAAAAAA9w8AAAAAAAAAAAAAAADwvw"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAP4PAAAAAAAA/w8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4PAAAAAAAA/g8AAAAAAAAAAAAAAADwvw"
				],
				[
					152,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkPAAAAAAAA2Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					155,
					3,
					"right_delete",
					null,
					"AwAAANkPAAAAAAAA2Q8AAAAAAAAHAAAAYXNzZXJ0KNkPAAAAAAAA2Q8AAAAAAAABAAAAIdkPAAAAAAAA2Q8AAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOAPAAAAAAAA2Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAANkPAAAAAAAA2g8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkPAAAAAAAA2Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"left_delete",
					null,
					"AQAAANkPAAAAAAAA2Q8AAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoPAAAAAAAA2g8AAAAAAAAAAAAAAADwvw"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "if(ol"
					},
					"BQAAANkPAAAAAAAA2g8AAAAAAAAAAAAA2g8AAAAAAADbDwAAAAAAAAAAAADbDwAAAAAAANwPAAAAAAAAAAAAANwPAAAAAAAA3Q8AAAAAAAAAAAAA3Q8AAAAAAADeDwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkPAAAAAAAA2Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					159,
					2,
					"left_delete",
					null,
					"AgAAAN0PAAAAAAAA3Q8AAAAAAAABAAAAbNwPAAAAAAAA3A8AAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4PAAAAAAAA3g8AAAAAAAAAAAAAAADwvw"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAANwPAAAAAAAA3Q8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwPAAAAAAAA3A8AAAAAAAAAAAAAAADwvw"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAANwPAAAAAAAA3Q8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwPAAAAAAAA3A8AAAAAAAAAAAAAAADwvw"
				],
				[
					169,
					1,
					"paste",
					null,
					"AQAAAN0PAAAAAAAA5Q8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0PAAAAAAAA3Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAOUPAAAAAAAA5g8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUPAAAAAAAA5Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOYPAAAAAAAA5w8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYPAAAAAAAA5g8AAAAAAAAAAAAAAADwvw"
				],
				[
					173,
					1,
					"left_delete",
					null,
					"AQAAAAIQAAAAAAAAAhAAAAAAAAABAAAAOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMQAAAAAAAAAxAAAAAAAAD////////vfw"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAAAIQAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAAEEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAADwvw"
				],
				[
					175,
					1,
					"left_delete",
					null,
					"AQAAAAMQAAAAAAAAAxAAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAADwvw"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMQAAAAAAAABBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMQAAAAAAAAAxAAAAAAAAAAAAAAAADwvw"
				],
				[
					177,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAQQAAAAAAAABhAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAADwvw"
				],
				[
					178,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAAUQAAAAAAAABhAAAAAAAAAAAAAABhAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACxAAAAAAAAAAAAAABhAAAAAAAAAGEAAAAAAAAAIAAAAgIAYQAAAAAAAAChAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAADwvw"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CQAAAAoQAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAAPEAAAAAAAAAAAAAAGEAAAAAAAAAYQAAAAAAAABAAAACAgICALEAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAAOEAAAAAAAAAAAAAAOEAAAAAAAAA8QAAAAAAAAAAAAAA8QAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAREAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoQAAAAAAAAChAAAAAAAAAAAAAAAADwvw"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": " -1;"
					},
					"BAAAABEQAAAAAAAAEhAAAAAAAAAAAAAAEhAAAAAAAAATEAAAAAAAAAAAAAATEAAAAAAAABQQAAAAAAAAAAAAABQQAAAAAAAAFRAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEQAAAAAAAAERAAAAAAAAAAAAAAAADwvw"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "fprintf"
					},
					"BwAAAAYQAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAAChAAAAAAAAAAAAAAChAAAAAAAAALEAAAAAAAAAAAAAALEAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADRAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAIBhQA"
				],
				[
					183,
					7,
					"left_delete",
					null,
					"BwAAAAwQAAAAAAAADBAAAAAAAAABAAAAZgsQAAAAAAAACxAAAAAAAAABAAAAdAoQAAAAAAAAChAAAAAAAAABAAAAbgkQAAAAAAAACRAAAAAAAAABAAAAaQgQAAAAAAAACBAAAAAAAAABAAAAcgcQAAAAAAAABxAAAAAAAAABAAAAcAYQAAAAAAAABhAAAAAAAAABAAAAZg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0QAAAAAAAADRAAAAAAAAAAAAAAAADwvw"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAAYQAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAIEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAADwvw"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAYQAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHEAAAAAAAAAMAAAAgIAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYQAAAAAAAACRAAAAAAAAAAAAAAAADwvw"
				],
				[
					202,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAADwvw"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJojAAAAAAAAmyMAAAAAAAAAAAAAmyMAAAAAAACcIwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJojAAAAAAAAmiMAAAAAAAAAAAAAAADwvw"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": "lex->byte_leng"
					},
					"DgAAAA4kAAAAAAAADyQAAAAAAAAAAAAADyQAAAAAAAAQJAAAAAAAAAAAAAAQJAAAAAAAABEkAAAAAAAAAAAAABEkAAAAAAAAEiQAAAAAAAAAAAAAEiQAAAAAAAATJAAAAAAAAAAAAAATJAAAAAAAABQkAAAAAAAAAAAAABQkAAAAAAAAFSQAAAAAAAAAAAAAFSQAAAAAAAAWJAAAAAAAAAAAAAAWJAAAAAAAABckAAAAAAAAAAAAABckAAAAAAAAGCQAAAAAAAAAAAAAGCQAAAAAAAAZJAAAAAAAAAAAAAAZJAAAAAAAABokAAAAAAAAAAAAABokAAAAAAAAGyQAAAAAAAAAAAAAGyQAAAAAAAAcJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4kAAAAAAAADiQAAAAAAAAAAAAAAADwvw"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "th"
					},
					"AgAAABwkAAAAAAAAHSQAAAAAAAAAAAAAHSQAAAAAAAAeJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwkAAAAAAAAHCQAAAAAAAAAAAAAAADwvw"
				],
				[
					262,
					3,
					"right_delete",
					null,
					"AwAAAB4kAAAAAAAAHiQAAAAAAAABAAAAbB4kAAAAAAAAHiQAAAAAAAABAAAAZR4kAAAAAAAAHiQAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4kAAAAAAAAHiQAAAAAAAAAAAAAAADwvw"
				],
				[
					267,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4kAAAAAAAAHiQAAAAAAAAAAAAAAADwvw"
				],
				[
					275,
					1,
					"paste",
					null,
					"AgAAAOwjAAAAAAAA+yMAAAAAAAAAAAAA+yMAAAAAAAD7IwAAAAAAAAoAAABsZXgtPnN0YXJ0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwjAAAAAAAA9iMAAAAAAAAAAAAAAADwvw"
				],
				[
					280,
					1,
					"left_delete",
					null,
					"AQAAAPojAAAAAAAA+iMAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsjAAAAAAAA+yMAAAAAAAAAAAAAAADwvw"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMIbAAAAAAAAwxsAAAAAAAAAAAAAwxsAAAAAAADEGwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIbAAAAAAAAwhsAAAAAAAAAAAAAAADwvw"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": "input.püo"
					},
					"CgAAACkiAAAAAAAAKiIAAAAAAAAAAAAAKiIAAAAAAAAqIgAAAAAAAAUAAABzdGFydCoiAAAAAAAAKyIAAAAAAAAAAAAAKyIAAAAAAAAsIgAAAAAAAAAAAAAsIgAAAAAAAC0iAAAAAAAAAAAAAC0iAAAAAAAALiIAAAAAAAAAAAAALiIAAAAAAAAvIgAAAAAAAAAAAAAvIgAAAAAAADAiAAAAAAAAAAAAADAiAAAAAAAAMSIAAAAAAAAAAAAAMSIAAAAAAAAyIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkiAAAAAAAALiIAAAAAAAAAAAAAAADwvw"
				],
				[
					408,
					2,
					"left_delete",
					null,
					"AgAAADEiAAAAAAAAMSIAAAAAAAABAAAAbzAiAAAAAAAAMCIAAAAAAAACAAAAw7w",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIiAAAAAAAAMiIAAAAAAAAAAAAAAADwvw"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "os"
					},
					"AgAAADAiAAAAAAAAMSIAAAAAAAAAAAAAMSIAAAAAAAAyIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAiAAAAAAAAMCIAAAAAAAAAAAAAAADwvw"
				],
				[
					445,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAACYlAAAAAAAAJyUAAAAAAAAAAAAAJyUAAAAAAAAoJQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYlAAAAAAAAJiUAAAAAAAAAAAAAAAA0QA"
				],
				[
					480,
					1,
					"right_delete",
					null,
					"AQAAAKgpAAAAAAAAqCkAAAAAAAAMAAAAc3RhcnQ6ICV6dSwg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgpAAAAAAAAtCkAAAAAAAAAAAAAAADwvw"
				],
				[
					483,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAL4pAAAAAAAAvykAAAAAAAAAAAAAvykAAAAAAAC/KQAAAAAAAAwAAAAgbGV4LT5zdGFydCw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4pAAAAAAAAyikAAAAAAAAAAAAAAADwvw"
				],
				[
					488,
					1,
					"right_delete",
					null,
					"AQAAAL8pAAAAAAAAvykAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8pAAAAAAAAvykAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/doc",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/Testing"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/stack.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/usr/include/zlib.h",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Niji.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_mmap.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/csv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/bnflexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/wasmedge-quickjs/example_js/es6_module_demo/c.",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/.config/sublime-text/Packages/User/Themes/ES6 Next.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_deep.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_path.js",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/socklen_t.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.c.structs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/blah.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/iteration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_watch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_childprocess.js",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Aurora.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qsort_r.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/inet_ntop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_location.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debugger.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tmp.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/check-flags.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/TODO",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/clock_gettime.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/require.c",
		"/home/roman/Dokumente/bookmarks_10_26_21.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tmp.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/base64.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/Doxyfile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"JS_GetOwnPropertyNames",
			"JS_GetOwnPropertyNamesInternal",
			"tab_atom =",
			"ptab =",
			"return ",
			"^JS_GetOwnPropertyNames",
			"JS_GetOwnPropertyNames",
			"charlen",
			"HexInteger",
			"HexInter",
			"PROP_START",
			"LEXEME:",
			"byte_charlen",
			"\"next",
			"rule #",
			"'identifier",
			"'keyword'",
			"grammar",
			"keyword",
			"'ws'",
			"'semi'",
			"'ws'",
			"'identifier'",
			"identifier'",
			"cend",
			"templateLiteral",
			"JSLexer",
			"regexpLiteral",
			"lexer_rule_add",
			"PROP_RULENA",
			"PROP_RULENAMES",
			"tok",
			"PROP_",
			"PROP_TOKEN",
			"lexer_token",
			"js_lexer_lex",
			"PROP_SIZE:",
			"JSLexerRule",
			"BYTE_LENG",
			"PROP_BYTE_LENGTH",
			"unicode_from_utf8",
			"lexer_skip",
			"lexer_next\\(",
			"lexer_next",
			"METHOD_TOKEN_CLASS",
			"printTok",
			"js_lexer_nextfn",
			"YIELD_DONE_VALUE",
			"METHOD_",
			"JS_NewCFunction",
			"stateDepth",
			"bind",
			"magic",
			"js_token_data\\(ctx,",
			"js_lexer_data\\(ctx,",
			"js_token[a-z_]*\\(",
			"js_token",
			"acceptLine",
			"historyAdd",
			"mod",
			"js_module_",
			"LOAD_MODULE:",
			"js_modules_object",
			"js_modules_array",
			"INSPECT_IS_COMPACT",
			"'doc'",
			"'elm'",
			"xpath",
			"'same",
			"'m'",
			"'node'",
			"'Text",
			"\\.text",
			"new Text",
			"\n    ",
			"id",
			"2\\(",
			"class Text",
			"constructor",
			"Factory",
			"Text",
			"new Text",
			"\n});",
			"\n    if(raw.children) {\n      let cl = node.children; /*Factory(raw.children, node)*/\n\n      if(raw.children[0]) {\n        //console.log('cl', cl);\n        //console.log('raw.children[0]', raw.children[0]);\n        let y = cl.path;\n        //console.log('cl.path', cl.path);\n        let elm = cl[0]; /*Factory(raw.children[0], cl, Element)*/\nif(cl.length) {\nif(elm) {\nif(isObject(elm) && 'tagName' in elm)\n      console.log('elm', elm.tagName, elm.path);\n      else\n        console.log('elm',elm);\n       } //console.log('elm.path', elm.path);\n        //console.log('elm.ownerDocument', elm.ownerDocument);\n      }\n    }\n}\n    if(raw.attributes) {\n      //console.log('raw.attributes', raw.attributes);\n      let al = node.attributes; //Factory(raw.attributes, node, NamedNodeMap);\n      //  console.log('al', al);\n      let z = al.path;\n\n      let at = al[Object.keys(raw.attributes)[0]];\n\n      if(at) {\n        let x = at.path;\n        //console.log('at', at,at.path);\n        //console.log('at.ownerElement', at.ownerElement, at.ownerElement.path);\n      }\n    }\n\n    //console.log('node.nextSibling', node.nextSibling, Node.types[node.nodeType], Node.path(node).slice(-2));\n\n    /*else {\n      console.log('node.tagName', node.tagName);\n      console.log('node.parentElement', node.parentElement);\n      console.log('node.parentNode', node.parentNode);\n      const { attributes } = Node.raw(node);\n      if(isObject(attributes)) {\n        console.log('attributes', attributes);\n        if(attributes[Symbol.iterator]) for(let attr in attributes) Recurse([attr, attributes[attr]], fn, [...stack, node]);\n      }\n    }\n*/\n    //    console.log(node.tagName ? `<${node.tagName} ${node.nodeType} ${stack.length}>` : node[Symbol.toStringTag] ?? node);\n  });\n",
			"'elm'",
			"'elm",
			"'elm'",
			"'al'",
			"'cl'",
			"inspect\\(",
			"inspectSy",
			"\n    ",
			"const",
			"        ",
			"NodeList",
			"ustom",
			"inspectSym",
			"^(\\s*)console",
			"Pointer",
			"Pointre",
			"P",
			"Pointer",
			"Path",
			"Pointer",
			"'Attr'",
			"class Attr",
			"new Attr",
			"class Attr",
			"NamedNodeMap",
			"get path",
			"class Attr",
			"al",
			"      .join(',\\n  ');\n",
			"NodeList",
			"Symbol.inspect",
			"NodeList",
			"MakeFa",
			"ownerEle",
			"});\n",
			"Factory",
			"root",
			"let f",
			"memoize",
			"ctor,",
			"list\\)",
			"Node.raw",
			"Fac",
			"parnet"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"js_token_data2(ctx,",
			"js_lexer_data2(ctx,",
			"\\1//console",
			"inspectSymbol",
			"parent",
			"gettersetter",
			"ELEMENT_NODE",
			"parent",
			"attributes",
			"Node.prototype.",
			"\\1static \\2 = \\3;",
			"const raw = Node.raw(this);",
			"\\1.set\\(\\2\\)",
			"\\1.get\\(this\\)",
			"ownerElement.get\\(this\\)",
			"rawNode.get\\(this\\)",
			"inspectSymbol",
			"CSV",
			"\\1//",
			"args->c",
			"args->",
			"\\1//\\2",
			"METHOD_VALUES",
			"pr->",
			"property",
			"size[0]",
			"s->",
			"(sock)->",
			", s,",
			"(sock).",
			", *s,",
			"s->",
			"obj",
			"js_socket_data(",
			"obj",
			"loc",
			"YIELD_",
			"if",
			"\\1//\\2",
			"",
			"\\1//\\2",
			"js_pointer_free_func",
			"BITFIELD_SET",
			"fd",
			"misc.IN_",
			"fd",
			"wd",
			"JSValueConst\\1",
			"s",
			"queue_alloc(",
			"queue_alloc",
			"rpt",
			"js_return_",
			"tmp",
			"repeater_execute",
			"queue_item",
			"linked_item",
			"queue_",
			"rpt",
			"Repeater",
			"resolvable_item",
			"resolvable_",
			"js_resolvable_",
			"repeater_push",
			"COLOR_NONE",
			"COLOR_CYAN",
			"COLOR_RED",
			"COLOR_LIGHTRED",
			"\" BACKGROUND_RED \"",
			"BACKGROUND_BLUE \"",
			"BACKGROUND_GREEN \"",
			"BACKGROUND_YELLOW \"",
			"\" COLOR_NONE \"",
			"js_inspect_print_map",
			"js_inspect_print_set",
			"js_inspect_print_arraybuffer",
			"js_inspect_print_regexp",
			"js_inspect_print_number",
			"js_inspect_print_string",
			"js_inspect_print_atom",
			"js_inspect_print_module",
			"js_inspect_print_value",
			"imp",
			"INC",
			"format",
			"\\1//\\2",
			"ctx",
			"sel",
			"console.log",
			"cmd",
			"js_socket_async_wait",
			"utils_SOURCES",
			"${util_SOURCES}",
			"${vector_SOURCES}",
			"socketpair",
			"",
			"#",
			"",
			"HAVE_MEMMEM",
			"log",
			"class_key",
			"}\\n\\nsize_t",
			"# ",
			"#",
			"HAVE_REALPATH",
			"",
			"HAVE_TERMIOS_H",
			"HAVE_MMAP",
			"HAVE_SYS_MMAN_H",
			"HAVE_SYS_WAIT_H",
			"length",
			"loc->",
			"ret->",
			"arg",
			" ",
			"",
			"\"\\\\t",
			"\"\\t",
			"imp.",
			"ctx,",
			"",
			"JSValueConst)",
			"",
			"jsm_module_loader",
			"js_module_loader_so",
			"js_eval_file",
			"js_eval_buf",
			"js_load_script"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4067,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
							"function_name_status_row": 35,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									491,
									502
								],
								[
									580,
									590
								],
								[
									751,
									765
								],
								[
									908,
									915
								],
								[
									1126,
									1133
								],
								[
									1253,
									1276
								],
								[
									1684,
									1705
								],
								[
									2090,
									2106
								],
								[
									2737,
									2753
								],
								[
									2922,
									2936
								],
								[
									3260,
									3275
								],
								[
									3695,
									3710
								],
								[
									3981,
									3995
								],
								[
									4368,
									4384
								],
								[
									4744,
									4758
								],
								[
									5093,
									5106
								],
								[
									5425,
									5437
								],
								[
									5977,
									5989
								],
								[
									6437,
									6453
								],
								[
									6619,
									6640
								],
								[
									6831,
									6846
								],
								[
									7011,
									7026
								],
								[
									7239,
									7255
								],
								[
									7831,
									7848
								],
								[
									8023,
									8039
								],
								[
									8950,
									8966
								],
								[
									9078,
									9095
								],
								[
									9315,
									9332
								],
								[
									9716,
									9732
								],
								[
									10038,
									10060
								],
								[
									10239,
									10260
								],
								[
									10534,
									10554
								],
								[
									10800,
									10817
								],
								[
									11003,
									11030
								],
								[
									11164,
									11192
								],
								[
									11346,
									11370
								],
								[
									11555,
									11572
								],
								[
									11784,
									11803
								],
								[
									12004,
									12022
								],
								[
									12226,
									12245
								],
								[
									12457,
									12478
								],
								[
									12714,
									12738
								],
								[
									12980,
									12998
								],
								[
									13465,
									13480
								],
								[
									13660,
									13676
								],
								[
									14088,
									14106
								],
								[
									14352,
									14371
								],
								[
									14689,
									14705
								],
								[
									14883,
									14904
								],
								[
									15080,
									15099
								],
								[
									15810,
									15826
								],
								[
									16685,
									16697
								],
								[
									16932,
									16951
								],
								[
									17089,
									17104
								],
								[
									17307,
									17320
								],
								[
									17558,
									17576
								],
								[
									17791,
									17809
								],
								[
									18020,
									18045
								],
								[
									18168,
									18191
								],
								[
									18446,
									18472
								],
								[
									18767,
									18796
								],
								[
									19114,
									19140
								],
								[
									19430,
									19454
								],
								[
									19660,
									19685
								],
								[
									19967,
									19995
								],
								[
									20302,
									20326
								],
								[
									20611,
									20636
								],
								[
									20920,
									20943
								],
								[
									21227,
									21252
								],
								[
									21421,
									21443
								],
								[
									21577,
									21602
								],
								[
									21777,
									21805
								],
								[
									21999,
									22024
								],
								[
									22453,
									22464
								],
								[
									22548,
									22562
								],
								[
									22634,
									22646
								],
								[
									22776,
									22789
								],
								[
									23033,
									23046
								],
								[
									23229,
									23242
								],
								[
									23381,
									23399
								],
								[
									23645,
									23664
								],
								[
									23870,
									23890
								],
								[
									24076,
									24096
								],
								[
									24289,
									24300
								],
								[
									24430,
									24445
								],
								[
									24797,
									24818
								],
								[
									24980,
									24994
								],
								[
									25154,
									25166
								],
								[
									25323,
									25338
								],
								[
									25501,
									25517
								],
								[
									25730,
									25744
								],
								[
									25824,
									25835
								],
								[
									26076,
									26092
								],
								[
									26314,
									26335
								],
								[
									26515,
									26537
								],
								[
									26749,
									26763
								],
								[
									26836,
									26859
								],
								[
									27100,
									27113
								],
								[
									27324,
									27342
								],
								[
									27521,
									27540
								],
								[
									27843,
									27863
								],
								[
									28056,
									28069
								],
								[
									28471,
									28485
								],
								[
									28646,
									28663
								],
								[
									28881,
									28900
								],
								[
									29207,
									29225
								],
								[
									29682,
									29698
								],
								[
									29824,
									29846
								],
								[
									29932,
									29942
								],
								[
									30226,
									30243
								],
								[
									30544,
									30562
								],
								[
									31416,
									31429
								],
								[
									31685,
									31699
								],
								[
									33338,
									33353
								],
								[
									33624,
									33637
								],
								[
									34551,
									34566
								],
								[
									35991,
									36009
								],
								[
									36156,
									36170
								],
								[
									36372,
									36387
								],
								[
									36536,
									36552
								],
								[
									36767,
									36781
								],
								[
									36922,
									36936
								],
								[
									37189,
									37205
								],
								[
									37377,
									37392
								],
								[
									37606,
									37616
								],
								[
									37814,
									37825
								],
								[
									37984,
									37998
								],
								[
									38190,
									38206
								],
								[
									38639,
									38650
								],
								[
									39131,
									39140
								],
								[
									39227,
									39246
								],
								[
									39654,
									39672
								],
								[
									40252,
									40266
								],
								[
									40450,
									40465
								],
								[
									40526,
									40542
								],
								[
									41055,
									41073
								],
								[
									41733,
									41747
								],
								[
									41956,
									41973
								],
								[
									42479,
									42491
								],
								[
									42592,
									42604
								],
								[
									42883,
									42896
								],
								[
									43714,
									43730
								],
								[
									44111,
									44131
								],
								[
									44741,
									44760
								],
								[
									45726,
									45739
								],
								[
									46063,
									46081
								],
								[
									46550,
									46568
								],
								[
									47033,
									47050
								],
								[
									47544,
									47556
								],
								[
									48028,
									48045
								],
								[
									48576,
									48599
								],
								[
									48739,
									48749
								],
								[
									48874,
									48883
								],
								[
									49007,
									49016
								],
								[
									49140,
									49155
								],
								[
									49285,
									49297
								],
								[
									49424,
									49437
								],
								[
									49613,
									49627
								],
								[
									49756,
									49770
								],
								[
									50152,
									50166
								],
								[
									50368,
									50391
								],
								[
									50606,
									50631
								],
								[
									50860,
									50869
								],
								[
									51129,
									51156
								],
								[
									51238,
									51264
								],
								[
									51454,
									51473
								],
								[
									51753,
									51766
								],
								[
									51900,
									51911
								],
								[
									52105,
									52120
								],
								[
									52279,
									52299
								],
								[
									52410,
									52431
								],
								[
									52546,
									52561
								],
								[
									52851,
									52863
								],
								[
									53059,
									53067
								],
								[
									53269,
									53293
								],
								[
									53432,
									53456
								],
								[
									53744,
									53769
								],
								[
									54027,
									54041
								],
								[
									54556,
									54570
								],
								[
									55161,
									55172
								],
								[
									55838,
									55849
								],
								[
									56126,
									56136
								],
								[
									56275,
									56295
								],
								[
									56380,
									56395
								],
								[
									56526,
									56539
								],
								[
									56634,
									56649
								],
								[
									56908,
									56920
								],
								[
									57087,
									57098
								],
								[
									57351,
									57361
								],
								[
									57516,
									57529
								],
								[
									58302,
									58319
								],
								[
									58463,
									58477
								],
								[
									59315,
									59329
								],
								[
									59505,
									59525
								],
								[
									60179,
									60202
								],
								[
									60512,
									60530
								],
								[
									60734,
									60749
								],
								[
									60872,
									60888
								],
								[
									61012,
									61027
								],
								[
									61374,
									61390
								],
								[
									61546,
									61558
								],
								[
									61887,
									61899
								],
								[
									62226,
									62240
								],
								[
									62564,
									62579
								],
								[
									63211,
									63225
								],
								[
									63496,
									63514
								],
								[
									63988,
									64005
								]
							],
							"symlist":
							[
								"  quicksort_r",
								"  strverscmp",
								"  atomic_add_int",
								"  time_us",
								"  time_us",
								"  regexp_flags_fromstring",
								"  regexp_flags_tostring",
								"  regexp_from_argv",
								"  regexp_from_dbuf",
								"  regexp_compile",
								"  regexp_to_value",
								"  js_array_length",
								"  js_array_clear",
								"  js_array_to_argv",
								"  js_array_copys",
								"  js_strv_copys",
								"  js_atom_from",
								"  js_atom_dump",
								"  js_atom_tobinary",
								"  js_atom_to_cstringlen",
								"  js_atom_toint32",
								"  js_atom_toint64",
								"  js_atom_is_index",
								"  js_atom_is_length",
								"  js_function_name",
								"  js_function_argc",
								"  js_function_cfunc",
								"  js_function_bound",
								"  js_function_bind",
								"  js_function_bound_this",
								"  js_function_bind_this",
								"  js_function_throw_fn",
								"  js_function_throw",
								"  js_function_return_value_fn",
								"  js_function_return_undefined",
								"  js_function_return_value",
								"  js_global_get_str",
								"  js_global_get_str_n",
								"  js_global_get_atom",
								"  js_global_prototype",
								"  js_global_static_func",
								"  js_global_prototype_func",
								"  js_iterator_method",
								"  js_iterator_new",
								"  js_iterator_next",
								"  js_iterator_result",
								"  js_iterator_then_fn",
								"  js_iterator_then",
								"  js_object_constructor",
								"  js_object_classname",
								"  js_object_equals",
								"  js_object_is",
								"  js_object_construct",
								"  js_object_error",
								"  js_object_new",
								"  js_object_function",
								"  js_has_propertystr",
								"  js_get_propertyatom_value",
								"  js_get_propertystr_bool",
								"  js_get_propertystr_cstring",
								"  js_get_propertystr_cstringlen",
								"  js_get_propertyint_cstring",
								"  js_get_propertyint_int32",
								"  js_get_propertystr_string",
								"  js_get_propertystr_stringlen",
								"  js_get_propertystr_int32",
								"  js_get_propertystr_uint64",
								"  js_get_propertystr_atom",
								"  js_set_propertyint_string",
								"  js_set_propertyint_int",
								"  js_set_propertystr_string",
								"  js_set_propertystr_stringlen",
								"  js_get_propertydescriptor",
								"  js_class_id",
								"  js_class_newid",
								"  js_class_get",
								"  js_class_find",
								"  js_class_atom",
								"  js_class_name",
								"  js_object_tostring",
								"  js_object_tostring2",
								"  js_function_tostring",
								"  js_function_isnative",
								"  js_is_input",
								"  js_propenum_cmp",
								"  js_propertyenums_free",
								"  js_strv_free_n",
								"  js_strv_free",
								"  js_strv_free_rt",
								"  js_strv_to_array",
								"  js_strv_length",
								"  js_strv_dup",
								"  js_intv_to_array",
								"  js_symbol_static_atom",
								"  js_symbol_static_value",
								"  js_symbol_ctor",
								"  js_symbol_invoke_static",
								"  js_symbol_for",
								"  js_symbol_for_atom",
								"  js_symbol_to_string",
								"  js_symbol_to_cstring",
								"  js_values_dup",
								"  js_values_free",
								"  js_values_toarray",
								"  js_values_fromarray",
								"  js_value_type_name",
								"  js_value_typestr",
								"  js_value_has_ref_count",
								"  value_mask",
								"  js_value_type_get",
								"  js_value_type_flag",
								"  js_value_free",
								"  js_value_clone",
								"  js_value_fwrite",
								"  js_value_dump",
								"  js_value_equals",
								"  js_value_from_char",
								"  js_value_print",
								"  js_value_tosize",
								"  js_value_free_rt",
								"  js_cstring_ptr",
								"  js_cstring_dup",
								"  js_cstring_value",
								"  js_cstring_dump",
								"  js_map_new",
								"  module_name",
								"  module_namestr",
								"  call_module_func",
								"  module_func",
								"  module_ns",
								"  module_exports_find",
								"  module_exports_get",
								"  module_exports",
								"  js_modules_list",
								"  js_modules_array",
								"  js_modules_entries",
								"  js_modules_map",
								"  js_modules_object",
								"  module_value",
								"  module_entry",
								"  module_object",
								"  js_module_search",
								"  js_module_search_ext",
								"  js_module_normalize",
								"  js_module_def",
								"  js_module_find_fwd",
								"  js_module_find_rev",
								"  js_module_indexof",
								"  js_module_at",
								"  js_is_arraybuffer",
								"  js_is_sharedarraybuffer",
								"  js_is_date",
								"  js_is_map",
								"  js_is_set",
								"  js_is_generator",
								"  js_is_regexp",
								"  js_is_promise",
								"  js_is_dataview",
								"  js_is_iterable",
								"  js_is_iterator",
								"  js_typedarray_prototype",
								"  js_typedarray_constructor",
								"  js_invoke",
								"  js_symbol_operatorset_value",
								"  js_symbol_operatorset_atom",
								"  js_operators_create",
								"  js_number_new",
								"  js_date_new",
								"  js_date_from_ms",
								"  js_date_from_time_ns",
								"  js_date_from_timespec",
								"  js_date_gettime",
								"  js_date_time",
								"  timespec",
								"  js_arraybuffer_freevalue",
								"  js_arraybuffer_fromvalue",
								"  js_arraybuffer_bytelength",
								"  js_eval_module",
								"  js_eval_binary",
								"  js_eval_buf",
								"  js_eval_str",
								"  js_time_ms",
								"  js_interrupt_handler",
								"  js_timer_unlink",
								"  js_timer_free",
								"  js_call_handler",
								"  js_sab_alloc",
								"  js_sab_free",
								"  js_sab_dup",
								"  js_error_dump",
								"  js_error_tostring",
								"  js_error_print",
								"  js_error_stack",
								"  js_io_readhandler_fn",
								"  js_io_readhandler_cfunc",
								"  js_promise_resolve",
								"  js_promise_then",
								"  js_promise_catch",
								"  js_promise_wrap",
								"  js_promise_adopt",
								"  js_to_string",
								"  js_to_source",
								"  arguments_dump",
								"  arguments_alloc",
								"  arguments_push",
								"  js_arguments_alloc",
								"  js_arguments_dump"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642739915.15,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "tests/test_lexer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14740,
						"regions":
						{
						},
						"selection":
						[
							[
								11609,
								11609
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 367,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642953682.55,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6586.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "quickjs-lexer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41248,
						"regions":
						{
						},
						"selection":
						[
							[
								25949,
								25956
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 968,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642742099.18,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 18946.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/jslexer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16459,
						"regions":
						{
						},
						"selection":
						[
							[
								16211,
								16211
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 116,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642903224.17,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1500.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "utils.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64368,
						"regions":
						{
						},
						"selection":
						[
							[
								16089,
								16111
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 625,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643064673.33,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10274.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1522614,
						"regions":
						{
						},
						"selection":
						[
							[
								223794,
								223794
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 7402,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642903321.29,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 147626.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40236,
						"regions":
						{
						},
						"selection":
						[
							[
								14982,
								14982
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 440,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642903320.2,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8386.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2878,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										216,
										238
									],
									[
										374,
										396
									],
									[
										661,
										683
									],
									[
										1011,
										1033
									],
									[
										1263,
										1285
									],
									[
										1656,
										1678
									],
									[
										1814,
										1836
									],
									[
										2101,
										2123
									],
									[
										2451,
										2473
									],
									[
										2703,
										2725
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								1671,
								1671
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 34,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1642903235.08,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 740.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "property-enumeration.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6751,
						"regions":
						{
						},
						"selection":
						[
							[
								792,
								809
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 31,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642903234.56,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "char-utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8854,
						"regions":
						{
						},
						"selection":
						[
							[
								4323,
								4323
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 116,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642738485.75,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2226.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/bnflexer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6621,
						"regions":
						{
						},
						"selection":
						[
							[
								4098,
								4098
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 102,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642738190.68,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1626.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/clexer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2633,
						"regions":
						{
						},
						"selection":
						[
							[
								2170,
								2173
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 92,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642738191.79,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1079.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "lexer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2879,
						"regions":
						{
						},
						"selection":
						[
							[
								852,
								867
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 50,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642742072.24,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 779.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "lexer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10923,
						"regions":
						{
						},
						"selection":
						[
							[
								674,
								680
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 35,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642742071.32,
							"tabs_extra_last_activated_sheet_index": 8,
							"tabs_extra_moving":
							[
								2,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 106.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"jsutils",
				"CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d"
			],
			[
				"jslexe",
				"lib/jslexer.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"xpath.j",
				"lib/xpath.js"
			],
			[
				"predicate.h",
				"predicate.h"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"list.h",
				"~/Projects/plot-cv/quickjs/list.h"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"queue",
				"queue.c"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"path.c",
				"path.c"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"test_wa",
				"tests/test_watch.js"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"tree-wa",
				"quickjs-tree-walker.c"
			],
			[
				"quick",
				"quickjs-xml.c"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"predi",
				"predicate.c"
			],
			[
				"cmakelis",
				"CMakeLists.txt"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"char-u",
				"char-utils.h"
			],
			[
				"",
				"tests/test_xml.js"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"doxy",
				"Doxyfile"
			],
			[
				"Doxyfile",
				"Doxyfile"
			],
			[
				"interna",
				"quickjs-internal.h"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"console.js",
				"lib/console.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"child",
				"child-process.c"
			],
			[
				"qsort_r",
				"qsort_r.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"quicksj-misc",
				"quickjs-misc.c"
			],
			[
				"process.js",
				"lib/process.js"
			],
			[
				"quickjs-mm",
				"quickjs-mmap.c"
			],
			[
				"quickjs-m",
				"quickjs-misc.c"
			],
			[
				"redicate.c",
				"predicate.c"
			],
			[
				"sockets.h",
				"quickjs-sockets.h"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"char-",
				"char-utils.h"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"conso",
				"lib/console.js"
			],
			[
				"clang-f",
				".clang-format"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"test_mi",
				"tests/test_misc.js"
			],
			[
				"ockets.",
				"quickjs-sockets.h"
			],
			[
				"quickjs-ar",
				"quickjs-archive.c"
			],
			[
				"fd_set",
				"lib/fd_set.js"
			],
			[
				"buffer-ut",
				"buffer-utils.c"
			],
			[
				"misc.",
				"quickjs-misc.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"socklen_t.js",
				"lib/socklen_t.js"
			],
			[
				"str.h",
				"quickjs-stringdecoder.h"
			],
			[
				"quickjs-libc",
				"~/Sources/plot-cv/quickjs/quickjs-libc.h"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.c"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"test_loca",
				"tests/test_location.js"
			],
			[
				".clang-fo",
				".clang-format"
			],
			[
				"buff",
				"buffer-utils.c"
			],
			[
				"buffer-util",
				"buffer-utils.c"
			],
			[
				"buffer-utils.c",
				"buffer-utils.c"
			],
			[
				"quickjs-so",
				"quickjs-sockets.c"
			],
			[
				"quickjs-insp",
				"quickjs-inspect.c"
			],
			[
				"test_soc",
				"tests/test_sockets.js"
			],
			[
				"test_qjsm",
				"tests/test_qjsm.js"
			],
			[
				"buffer-tu",
				"buffer-utils.c"
			],
			[
				"repl.",
				"lib/repl.js"
			],
			[
				"quickjs-blo",
				"quickjs-blob.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"test_mis",
				"tests/test_misc.js"
			],
			[
				"test_blob",
				"tests/test_blob.js"
			],
			[
				"test_string",
				"tests/test_stringdecoder.js"
			],
			[
				"test_str",
				"tests/test_stringdecoder.js"
			],
			[
				"quickjs-blb",
				"quickjs-blob.h"
			],
			[
				"ringbuffer.h",
				"ringbuffer.h"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 282.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
