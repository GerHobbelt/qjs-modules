{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"JS_Get",
				"JS_GetArrayBuffer"
			],
			[
				"JS_",
				"JS_ThrowTypeError"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Throw",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_Set",
				"JS_SetPropertyStr"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"js_sys",
				"js_syscallerror_get"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_",
				"js_sockaddr_class_id"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"JS_New",
				"JS_NewStringLen"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"get",
				"getOwnPropertyNames"
			],
			[
				"JS_Thr",
				"JS_ThrowInternalError"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  Ⓜ  _ISOC99_SOURCE … — macro object\n  ⒡  quicksort_r ( ) ; — function declaration\n  ⒡  strverscmp ( ) ; — function declaration\n  Ⓜ  INFINITY … — macro object\n—Ⓕ– atomic_add_int ( ) { … } — function\n—Ⓕ– time_us ( ) { … } — function\n—Ⓕ– time_us ( ) { … } — function\n—Ⓕ– regexp_flags_fromstring ( ) { … } — function\n—Ⓕ– regexp_flags_tostring ( ) { … } — function\n—Ⓕ– regexp_from_argv ( ) { … } — function\n—Ⓕ– regexp_from_dbuf ( ) { … } — function\n—Ⓕ– regexp_compile ( ) { … } — function\n—Ⓕ– regexp_to_value ( ) { … } — function\n—Ⓕ– js_array_length ( ) { … } — function\n—Ⓕ– js_array_clear ( ) { … } — function\n—Ⓕ– js_array_to_argv ( ) { … } — function\n—Ⓕ– js_array_copys ( ) { … } — function\n—Ⓕ– js_strv_copys ( ) { … } — function\n—Ⓕ– js_atom_from ( ) { … } — function\n—Ⓕ– js_atom_dump ( ) { … } — function\n—Ⓕ– js_atom_tobinary ( ) { … } — function\n—Ⓕ– js_atom_to_cstringlen ( ) { … } — function\n—Ⓕ– js_atom_toint32 ( ) { … } — function\n—Ⓕ– js_atom_toint64 ( ) { … } — function\n—Ⓕ– js_atom_is_index ( ) { … } — function\n—Ⓕ– js_atom_is_length ( ) { … } — function\n—Ⓕ– js_function_name ( ) { … } — function\n—Ⓕ– js_function_argc ( ) { … } — function\n—Ⓕ– js_function_cfunc ( ) { … } — function\n—Ⓕ– js_global_get_str ( ) { … } — function\n—Ⓕ– js_global_get_str_n ( ) { … } — function\n—Ⓕ– js_global_get_atom ( ) { … } — function\n—Ⓕ– js_global_prototype ( ) { … } — function\n—Ⓕ– js_iterator_method ( ) { … } — function\n—Ⓕ– js_iterator_new ( ) { … } — function\n—Ⓕ– js_iterator_next ( ) { … } — function\n—Ⓕ– js_object_constructor ( ) { … } — function\n—Ⓕ– js_object_classname ( ) { … } — function\n—Ⓕ– js_object_equals ( ) { … } — function\n—Ⓕ– js_object_is ( ) { … } — function\n—Ⓕ– js_object_construct ( ) { … } — function\n—Ⓕ– js_object_error ( ) { … } — function\n—Ⓕ– js_object_stack ( ) { … } — function\n—Ⓕ– js_object_new ( ) { … } — function\n—Ⓕ– js_has_propertystr ( ) { … } — function\n—Ⓕ– js_get_propertystr_bool ( ) { … } — function\n—Ⓕ– js_get_propertystr_cstring ( ) { … } — function\n—Ⓕ– js_get_propertystr_cstringlen ( ) { … } — function\n—Ⓕ– js_get_propertyint_cstring ( ) { … } — function\n—Ⓕ– js_get_propertyint_int32 ( ) { … } — function\n—Ⓕ– js_get_propertystr_string ( ) { … } — function\n—Ⓕ– js_get_propertystr_stringlen ( ) { … } — function\n—Ⓕ– js_get_propertystr_int32 ( ) { … } — function\n—Ⓕ– js_get_propertystr_uint64 ( ) { … } — function\n—Ⓕ– js_set_propertyint_string ( ) { … } — function\n—Ⓕ– js_set_propertyint_int ( ) { … } — function\n—Ⓕ– js_set_propertystr_string ( ) { … } — function\n—Ⓕ– js_set_propertystr_stringlen ( ) { … } — function\n—Ⓕ– js_get_propertydescriptor ( ) { … } — function\n—Ⓕ– js_class_id ( ) { … } — function\n—Ⓕ– js_class_newid ( ) { … } — function\n—Ⓕ– js_class_get ( ) { … } — function\n—Ⓕ– js_class_find ( ) { … } — function\n—Ⓕ– js_class_atom ( ) { … } — function\n—Ⓕ– js_class_name ( ) { … } — function\n—Ⓕ– js_object_tostring ( ) { … } — function\n—Ⓕ– js_function_tostring ( ) { … } — function\n—Ⓕ– js_function_isnative ( ) { … } — function\n—Ⓕ– js_is_input ( ) { … } — function\n—Ⓕ– js_propenum_cmp ( ) { … } — function\n—Ⓕ– js_propertyenums_free ( ) { … } — function\n—Ⓕ– js_strv_free_n ( ) { … } — function\n—Ⓕ– js_strv_free ( ) { … } — function\n—Ⓕ– js_strv_free_rt ( ) { … } — function\n—Ⓕ– js_strv_to_array ( ) { … } — function\n—Ⓕ– js_strv_length ( ) { … } — function\n—Ⓕ– js_strv_dup ( ) { … } — function\n—Ⓕ– js_intv_to_array ( ) { … } — function\n—Ⓕ– js_symbol_static_atom ( ) { … } — function\n—Ⓕ– js_symbol_static_value ( ) { … } — function\n—Ⓕ– js_symbol_ctor ( ) { … } — function\n—Ⓕ– js_symbol_invoke_static ( ) { … } — function\n—Ⓕ– js_symbol_for ( ) { … } — function\n—Ⓕ– js_symbol_for_atom ( ) { … } — function\n—Ⓕ– js_symbol_to_string ( ) { … } — function\n—Ⓕ– js_symbol_to_cstring ( ) { … } — function\n—Ⓕ– js_values_dup ( ) { … } — function\n—Ⓕ– js_values_free ( ) { … } — function\n—Ⓕ– js_values_toarray ( ) { … } — function\n—Ⓕ– js_value_type_name ( ) { … } — function\n—Ⓕ– js_value_typestr ( ) { … } — function\n—Ⓕ– js_value_has_ref_count ( ) { … } — function\n—Ⓒ– value_mask { … } ; — type\n—Ⓕ– js_value_type ( ) { … } — function\n—Ⓕ– js_value_type_get ( ) { … } — function\n—Ⓕ– js_value_type_flag ( ) { … } — function\n—Ⓕ– js_value_free ( ) { … } — function\n—Ⓕ– js_value_clone ( ) { … } — function\n—Ⓕ– js_value_fwrite ( ) { … } — function\n—Ⓕ– js_value_dump ( ) { … } — function\n—Ⓕ– js_value_equals ( ) { … } — function\n—Ⓕ– js_value_from_char ( ) { … } — function\n—Ⓕ– js_value_print ( ) { … } — function\n—Ⓕ– js_value_tosize ( ) { … } — function\n—Ⓕ– js_value_free_rt ( ) { … } — function\n—Ⓕ– js_cstring_ptr ( ) { … } — function\n—Ⓕ– js_cstring_dup ( ) { … } — function\n—Ⓕ– js_cstring_value ( ) { … } — function\n—Ⓕ– js_cstring_dump ( ) { … } — function\n—Ⓕ– js_map_new ( ) { … } — function\n—Ⓕ– module_name ( ) { … } — function\n—Ⓕ– module_namestr ( ) { … } — function\n—Ⓕ– call_module_func ( ) { … } — function\n—Ⓕ– module_func ( ) { … } — function\n—Ⓕ– module_ns ( ) { … } — function\n—Ⓕ– module_exports_find ( ) { … } — function\n—Ⓕ– module_exports_get ( ) { … } — function\n—Ⓕ– module_exports ( ) { … } — function\n—Ⓕ– js_modules_list ( ) { … } — function\n—Ⓕ– js_modules_array ( ) { … } — function\n—Ⓕ– js_modules_entries ( ) { … } — function\n—Ⓕ– js_modules_map ( ) { … } — function\n—Ⓕ– js_modules_object ( ) { … } — function\n—Ⓕ– module_value ( ) { … } — function\n—Ⓕ– module_entry ( ) { … } — function\n—Ⓕ– module_object ( ) { … } — function\n—Ⓕ– js_module_search ( ) { … } — function\n—Ⓕ– js_module_search_ext ( ) { … } — function\n—Ⓕ– js_module_normalize ( ) { … } — function\n—Ⓕ– js_module_def ( ) { … } — function\n—Ⓕ– js_module_find ( ) { … } — function\n—Ⓕ– js_import_directive ( ) { … } — function\n—Ⓕ– js_import_load ( ) { … } — function\n—Ⓕ– js_import_eval ( ) { … } — function\n—Ⓕ– js_module_import_default ( ) { … } — function\n—Ⓕ– js_module_import_namespace ( ) { … } — function\n—Ⓕ– js_module_import ( ) { … } — function\n—Ⓕ– js_is_arraybuffer ( ) { … } — function\n—Ⓕ– js_is_sharedarraybuffer ( ) { … } — function\n—Ⓕ– js_is_map ( ) { … } — function\n—Ⓕ– js_is_set ( ) { … } — function\n—Ⓕ– js_is_generator ( ) { … } — function\n—Ⓕ– js_is_regexp ( ) { … } — function\n—Ⓕ– js_is_promise ( ) { … } — function\n—Ⓕ– js_is_dataview ( ) { … } — function\n—Ⓕ– js_is_iterable ( ) { … } — function\n—Ⓕ– js_is_iterator ( ) { … } — function\n—Ⓕ– js_typedarray_prototype ( ) { … } — function\n—Ⓕ– js_typedarray_constructor ( ) { … } — function\n—Ⓕ– js_invoke ( ) { … } — function\n—Ⓕ– js_symbol_operatorset_value ( ) { … } — function\n—Ⓕ– js_symbol_operatorset_atom ( ) { … } — function\n—Ⓕ– js_operators_create ( ) { … } — function\n—Ⓕ– js_number_new ( ) { … } — function\n—Ⓕ– js_date_new ( ) { … } — function\n—Ⓕ– js_date_from_ms ( ) { … } — function\n—Ⓕ– js_date_from_time_ns ( ) { … } — function\n—Ⓕ– js_date_from_timespec ( ) { … } — function\n—Ⓕ– js_date_gettime ( ) { … } — function\n—Ⓕ– js_date_time ( ) { … } — function\n—Ⓒ– timespec { … } ; — type\n—Ⓕ– js_date_timespec ( ) { … } — function\n—Ⓕ– js_arraybuffer_freevalue ( ) { … } — function\n—Ⓕ– js_arraybuffer_fromvalue ( ) { … } — function\n—Ⓕ– js_arraybuffer_bytelength ( ) { … } — function\n—Ⓕ– js_eval_module ( ) { … } — function\n—Ⓕ– js_eval_binary ( ) { … } — function\n—Ⓕ– js_eval_buf ( ) { … } — function\n—Ⓕ– js_eval_str ( ) { … } — function\n—Ⓕ– js_time_ms ( ) { … } — function\n—Ⓕ– js_interrupt_handler ( ) { … } — function\n—Ⓕ– js_timer_unlink ( ) { … } — function\n—Ⓕ– js_timer_free ( ) { … } — function\n—Ⓕ– js_call_handler ( ) { … } — function\n—Ⓕ– js_sab_alloc ( ) { … } — function\n—Ⓕ– js_sab_free ( ) { … } — function\n—Ⓕ– js_sab_dup ( ) { … } — function\n—Ⓕ– js_error_dump ( ) { … } — function\n—Ⓕ– js_error_tostring ( ) { … } — function\n—Ⓕ– js_error_print ( ) { … } — function\n—Ⓕ– js_io_readhandler_fn ( ) { … } — function\n—Ⓕ– js_io_readhandler_cfunc ( ) { … } — function",
			"settings":
			{
				"buffer_size": 7706,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					80,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					81,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
						"symkeys":
						[
							[
								30,
								44
							],
							[
								355,
								366
							],
							[
								444,
								454
							],
							[
								508,
								516
							],
							[
								615,
								629
							],
							[
								772,
								779
							],
							[
								990,
								997
							],
							[
								1117,
								1140
							],
							[
								1548,
								1569
							],
							[
								1954,
								1970
							],
							[
								2601,
								2617
							],
							[
								2786,
								2800
							],
							[
								3124,
								3139
							],
							[
								3559,
								3574
							],
							[
								3845,
								3859
							],
							[
								4232,
								4248
							],
							[
								4608,
								4622
							],
							[
								4957,
								4970
							],
							[
								5289,
								5301
							],
							[
								5841,
								5853
							],
							[
								6302,
								6318
							],
							[
								6484,
								6505
							],
							[
								6696,
								6711
							],
							[
								6876,
								6891
							],
							[
								7104,
								7120
							],
							[
								7696,
								7713
							],
							[
								7888,
								7904
							],
							[
								8815,
								8831
							],
							[
								8943,
								8960
							],
							[
								9173,
								9190
							],
							[
								9402,
								9421
							],
							[
								9622,
								9640
							],
							[
								9844,
								9863
							],
							[
								10075,
								10093
							],
							[
								10560,
								10575
							],
							[
								10755,
								10771
							],
							[
								11183,
								11204
							],
							[
								11380,
								11399
							],
							[
								12110,
								12126
							],
							[
								12985,
								12997
							],
							[
								13208,
								13227
							],
							[
								13365,
								13380
							],
							[
								13583,
								13598
							],
							[
								13774,
								13787
							],
							[
								14022,
								14040
							],
							[
								14248,
								14271
							],
							[
								14526,
								14552
							],
							[
								14847,
								14876
							],
							[
								15194,
								15220
							],
							[
								15510,
								15534
							],
							[
								15740,
								15765
							],
							[
								16047,
								16075
							],
							[
								16382,
								16406
							],
							[
								16691,
								16716
							],
							[
								16998,
								17023
							],
							[
								17192,
								17214
							],
							[
								17348,
								17373
							],
							[
								17548,
								17576
							],
							[
								17770,
								17795
							],
							[
								18224,
								18235
							],
							[
								18319,
								18333
							],
							[
								18405,
								18417
							],
							[
								18547,
								18560
							],
							[
								18804,
								18817
							],
							[
								19000,
								19013
							],
							[
								19152,
								19170
							],
							[
								19361,
								19381
							],
							[
								19567,
								19587
							],
							[
								19780,
								19791
							],
							[
								19921,
								19936
							],
							[
								20288,
								20309
							],
							[
								20471,
								20485
							],
							[
								20645,
								20657
							],
							[
								20814,
								20829
							],
							[
								20992,
								21008
							],
							[
								21221,
								21235
							],
							[
								21315,
								21326
							],
							[
								21567,
								21583
							],
							[
								21793,
								21814
							],
							[
								21994,
								22016
							],
							[
								22228,
								22242
							],
							[
								22315,
								22338
							],
							[
								22579,
								22592
							],
							[
								22803,
								22821
							],
							[
								23000,
								23019
							],
							[
								23322,
								23342
							],
							[
								23535,
								23548
							],
							[
								23950,
								23964
							],
							[
								24125,
								24142
							],
							[
								24363,
								24381
							],
							[
								24899,
								24915
							],
							[
								25041,
								25063
							],
							[
								25149,
								25159
							],
							[
								25160,
								25173
							],
							[
								25443,
								25460
							],
							[
								25709,
								25727
							],
							[
								26581,
								26594
							],
							[
								26850,
								26864
							],
							[
								28503,
								28518
							],
							[
								28789,
								28802
							],
							[
								29555,
								29570
							],
							[
								30995,
								31013
							],
							[
								31160,
								31174
							],
							[
								31376,
								31391
							],
							[
								31540,
								31556
							],
							[
								31771,
								31785
							],
							[
								31926,
								31940
							],
							[
								32193,
								32209
							],
							[
								32381,
								32396
							],
							[
								32610,
								32620
							],
							[
								32818,
								32829
							],
							[
								32988,
								33002
							],
							[
								33194,
								33210
							],
							[
								33643,
								33654
							],
							[
								34135,
								34144
							],
							[
								34231,
								34250
							],
							[
								34658,
								34676
							],
							[
								35256,
								35270
							],
							[
								35454,
								35469
							],
							[
								35530,
								35546
							],
							[
								36053,
								36071
							],
							[
								36721,
								36735
							],
							[
								36944,
								36961
							],
							[
								37462,
								37474
							],
							[
								37575,
								37587
							],
							[
								37866,
								37879
							],
							[
								38697,
								38713
							],
							[
								39132,
								39152
							],
							[
								39762,
								39781
							],
							[
								40747,
								40760
							],
							[
								41084,
								41098
							],
							[
								41566,
								41585
							],
							[
								42792,
								42806
							],
							[
								43154,
								43168
							],
							[
								43497,
								43521
							],
							[
								43882,
								43908
							],
							[
								44250,
								44266
							],
							[
								46054,
								46071
							],
							[
								46596,
								46619
							],
							[
								46853,
								46862
							],
							[
								47034,
								47043
							],
							[
								47216,
								47231
							],
							[
								47415,
								47427
							],
							[
								47605,
								47618
							],
							[
								47794,
								47808
							],
							[
								47990,
								48004
							],
							[
								48386,
								48400
							],
							[
								48602,
								48625
							],
							[
								48840,
								48865
							],
							[
								49094,
								49103
							],
							[
								49363,
								49390
							],
							[
								49472,
								49498
							],
							[
								49688,
								49707
							],
							[
								49987,
								50000
							],
							[
								50134,
								50145
							],
							[
								50339,
								50354
							],
							[
								50513,
								50533
							],
							[
								50644,
								50665
							],
							[
								50780,
								50795
							],
							[
								51085,
								51097
							],
							[
								51293,
								51301
							],
							[
								51302,
								51318
							],
							[
								51503,
								51527
							],
							[
								51666,
								51690
							],
							[
								51978,
								52003
							],
							[
								52261,
								52275
							],
							[
								52790,
								52804
							],
							[
								53395,
								53406
							],
							[
								54072,
								54083
							],
							[
								54360,
								54370
							],
							[
								54509,
								54529
							],
							[
								54614,
								54629
							],
							[
								54760,
								54773
							],
							[
								54868,
								54883
							],
							[
								55142,
								55154
							],
							[
								55321,
								55332
							],
							[
								55585,
								55595
							],
							[
								55750,
								55763
							],
							[
								56536,
								56553
							],
							[
								56697,
								56711
							],
							[
								57494,
								57514
							],
							[
								58123,
								58146
							]
						],
						"symlist":
						[
							" Ⓜ  _ISOC99_SOURCE … — macro object",
							" ⒡  quicksort_r ( ) ; — function declaration",
							" ⒡  strverscmp ( ) ; — function declaration",
							" Ⓜ  INFINITY … — macro object",
							"—Ⓕ– atomic_add_int ( ) { … } — function",
							"—Ⓕ– time_us ( ) { … } — function",
							"—Ⓕ– time_us ( ) { … } — function",
							"—Ⓕ– regexp_flags_fromstring ( ) { … } — function",
							"—Ⓕ– regexp_flags_tostring ( ) { … } — function",
							"—Ⓕ– regexp_from_argv ( ) { … } — function",
							"—Ⓕ– regexp_from_dbuf ( ) { … } — function",
							"—Ⓕ– regexp_compile ( ) { … } — function",
							"—Ⓕ– regexp_to_value ( ) { … } — function",
							"—Ⓕ– js_array_length ( ) { … } — function",
							"—Ⓕ– js_array_clear ( ) { … } — function",
							"—Ⓕ– js_array_to_argv ( ) { … } — function",
							"—Ⓕ– js_array_copys ( ) { … } — function",
							"—Ⓕ– js_strv_copys ( ) { … } — function",
							"—Ⓕ– js_atom_from ( ) { … } — function",
							"—Ⓕ– js_atom_dump ( ) { … } — function",
							"—Ⓕ– js_atom_tobinary ( ) { … } — function",
							"—Ⓕ– js_atom_to_cstringlen ( ) { … } — function",
							"—Ⓕ– js_atom_toint32 ( ) { … } — function",
							"—Ⓕ– js_atom_toint64 ( ) { … } — function",
							"—Ⓕ– js_atom_is_index ( ) { … } — function",
							"—Ⓕ– js_atom_is_length ( ) { … } — function",
							"—Ⓕ– js_function_name ( ) { … } — function",
							"—Ⓕ– js_function_argc ( ) { … } — function",
							"—Ⓕ– js_function_cfunc ( ) { … } — function",
							"—Ⓕ– js_global_get_str ( ) { … } — function",
							"—Ⓕ– js_global_get_str_n ( ) { … } — function",
							"—Ⓕ– js_global_get_atom ( ) { … } — function",
							"—Ⓕ– js_global_prototype ( ) { … } — function",
							"—Ⓕ– js_iterator_method ( ) { … } — function",
							"—Ⓕ– js_iterator_new ( ) { … } — function",
							"—Ⓕ– js_iterator_next ( ) { … } — function",
							"—Ⓕ– js_object_constructor ( ) { … } — function",
							"—Ⓕ– js_object_classname ( ) { … } — function",
							"—Ⓕ– js_object_equals ( ) { … } — function",
							"—Ⓕ– js_object_is ( ) { … } — function",
							"—Ⓕ– js_object_construct ( ) { … } — function",
							"—Ⓕ– js_object_error ( ) { … } — function",
							"—Ⓕ– js_object_stack ( ) { … } — function",
							"—Ⓕ– js_object_new ( ) { … } — function",
							"—Ⓕ– js_has_propertystr ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_bool ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_cstring ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_cstringlen ( ) { … } — function",
							"—Ⓕ– js_get_propertyint_cstring ( ) { … } — function",
							"—Ⓕ– js_get_propertyint_int32 ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_string ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_stringlen ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_int32 ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_uint64 ( ) { … } — function",
							"—Ⓕ– js_set_propertyint_string ( ) { … } — function",
							"—Ⓕ– js_set_propertyint_int ( ) { … } — function",
							"—Ⓕ– js_set_propertystr_string ( ) { … } — function",
							"—Ⓕ– js_set_propertystr_stringlen ( ) { … } — function",
							"—Ⓕ– js_get_propertydescriptor ( ) { … } — function",
							"—Ⓕ– js_class_id ( ) { … } — function",
							"—Ⓕ– js_class_newid ( ) { … } — function",
							"—Ⓕ– js_class_get ( ) { … } — function",
							"—Ⓕ– js_class_find ( ) { … } — function",
							"—Ⓕ– js_class_atom ( ) { … } — function",
							"—Ⓕ– js_class_name ( ) { … } — function",
							"—Ⓕ– js_object_tostring ( ) { … } — function",
							"—Ⓕ– js_function_tostring ( ) { … } — function",
							"—Ⓕ– js_function_isnative ( ) { … } — function",
							"—Ⓕ– js_is_input ( ) { … } — function",
							"—Ⓕ– js_propenum_cmp ( ) { … } — function",
							"—Ⓕ– js_propertyenums_free ( ) { … } — function",
							"—Ⓕ– js_strv_free_n ( ) { … } — function",
							"—Ⓕ– js_strv_free ( ) { … } — function",
							"—Ⓕ– js_strv_free_rt ( ) { … } — function",
							"—Ⓕ– js_strv_to_array ( ) { … } — function",
							"—Ⓕ– js_strv_length ( ) { … } — function",
							"—Ⓕ– js_strv_dup ( ) { … } — function",
							"—Ⓕ– js_intv_to_array ( ) { … } — function",
							"—Ⓕ– js_symbol_static_atom ( ) { … } — function",
							"—Ⓕ– js_symbol_static_value ( ) { … } — function",
							"—Ⓕ– js_symbol_ctor ( ) { … } — function",
							"—Ⓕ– js_symbol_invoke_static ( ) { … } — function",
							"—Ⓕ– js_symbol_for ( ) { … } — function",
							"—Ⓕ– js_symbol_for_atom ( ) { … } — function",
							"—Ⓕ– js_symbol_to_string ( ) { … } — function",
							"—Ⓕ– js_symbol_to_cstring ( ) { … } — function",
							"—Ⓕ– js_values_dup ( ) { … } — function",
							"—Ⓕ– js_values_free ( ) { … } — function",
							"—Ⓕ– js_values_toarray ( ) { … } — function",
							"—Ⓕ– js_value_type_name ( ) { … } — function",
							"—Ⓕ– js_value_typestr ( ) { … } — function",
							"—Ⓕ– js_value_has_ref_count ( ) { … } — function",
							"—Ⓒ– value_mask { … } ; — type",
							"—Ⓕ– js_value_type ( ) { … } — function",
							"—Ⓕ– js_value_type_get ( ) { … } — function",
							"—Ⓕ– js_value_type_flag ( ) { … } — function",
							"—Ⓕ– js_value_free ( ) { … } — function",
							"—Ⓕ– js_value_clone ( ) { … } — function",
							"—Ⓕ– js_value_fwrite ( ) { … } — function",
							"—Ⓕ– js_value_dump ( ) { … } — function",
							"—Ⓕ– js_value_equals ( ) { … } — function",
							"—Ⓕ– js_value_from_char ( ) { … } — function",
							"—Ⓕ– js_value_print ( ) { … } — function",
							"—Ⓕ– js_value_tosize ( ) { … } — function",
							"—Ⓕ– js_value_free_rt ( ) { … } — function",
							"—Ⓕ– js_cstring_ptr ( ) { … } — function",
							"—Ⓕ– js_cstring_dup ( ) { … } — function",
							"—Ⓕ– js_cstring_value ( ) { … } — function",
							"—Ⓕ– js_cstring_dump ( ) { … } — function",
							"—Ⓕ– js_map_new ( ) { … } — function",
							"—Ⓕ– module_name ( ) { … } — function",
							"—Ⓕ– module_namestr ( ) { … } — function",
							"—Ⓕ– call_module_func ( ) { … } — function",
							"—Ⓕ– module_func ( ) { … } — function",
							"—Ⓕ– module_ns ( ) { … } — function",
							"—Ⓕ– module_exports_find ( ) { … } — function",
							"—Ⓕ– module_exports_get ( ) { … } — function",
							"—Ⓕ– module_exports ( ) { … } — function",
							"—Ⓕ– js_modules_list ( ) { … } — function",
							"—Ⓕ– js_modules_array ( ) { … } — function",
							"—Ⓕ– js_modules_entries ( ) { … } — function",
							"—Ⓕ– js_modules_map ( ) { … } — function",
							"—Ⓕ– js_modules_object ( ) { … } — function",
							"—Ⓕ– module_value ( ) { … } — function",
							"—Ⓕ– module_entry ( ) { … } — function",
							"—Ⓕ– module_object ( ) { … } — function",
							"—Ⓕ– js_module_search ( ) { … } — function",
							"—Ⓕ– js_module_search_ext ( ) { … } — function",
							"—Ⓕ– js_module_normalize ( ) { … } — function",
							"—Ⓕ– js_module_def ( ) { … } — function",
							"—Ⓕ– js_module_find ( ) { … } — function",
							"—Ⓕ– js_import_directive ( ) { … } — function",
							"—Ⓕ– js_import_load ( ) { … } — function",
							"—Ⓕ– js_import_eval ( ) { … } — function",
							"—Ⓕ– js_module_import_default ( ) { … } — function",
							"—Ⓕ– js_module_import_namespace ( ) { … } — function",
							"—Ⓕ– js_module_import ( ) { … } — function",
							"—Ⓕ– js_is_arraybuffer ( ) { … } — function",
							"—Ⓕ– js_is_sharedarraybuffer ( ) { … } — function",
							"—Ⓕ– js_is_map ( ) { … } — function",
							"—Ⓕ– js_is_set ( ) { … } — function",
							"—Ⓕ– js_is_generator ( ) { … } — function",
							"—Ⓕ– js_is_regexp ( ) { … } — function",
							"—Ⓕ– js_is_promise ( ) { … } — function",
							"—Ⓕ– js_is_dataview ( ) { … } — function",
							"—Ⓕ– js_is_iterable ( ) { … } — function",
							"—Ⓕ– js_is_iterator ( ) { … } — function",
							"—Ⓕ– js_typedarray_prototype ( ) { … } — function",
							"—Ⓕ– js_typedarray_constructor ( ) { … } — function",
							"—Ⓕ– js_invoke ( ) { … } — function",
							"—Ⓕ– js_symbol_operatorset_value ( ) { … } — function",
							"—Ⓕ– js_symbol_operatorset_atom ( ) { … } — function",
							"—Ⓕ– js_operators_create ( ) { … } — function",
							"—Ⓕ– js_number_new ( ) { … } — function",
							"—Ⓕ– js_date_new ( ) { … } — function",
							"—Ⓕ– js_date_from_ms ( ) { … } — function",
							"—Ⓕ– js_date_from_time_ns ( ) { … } — function",
							"—Ⓕ– js_date_from_timespec ( ) { … } — function",
							"—Ⓕ– js_date_gettime ( ) { … } — function",
							"—Ⓕ– js_date_time ( ) { … } — function",
							"—Ⓒ– timespec { … } ; — type",
							"—Ⓕ– js_date_timespec ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_freevalue ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_fromvalue ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_bytelength ( ) { … } — function",
							"—Ⓕ– js_eval_module ( ) { … } — function",
							"—Ⓕ– js_eval_binary ( ) { … } — function",
							"—Ⓕ– js_eval_buf ( ) { … } — function",
							"—Ⓕ– js_eval_str ( ) { … } — function",
							"—Ⓕ– js_time_ms ( ) { … } — function",
							"—Ⓕ– js_interrupt_handler ( ) { … } — function",
							"—Ⓕ– js_timer_unlink ( ) { … } — function",
							"—Ⓕ– js_timer_free ( ) { … } — function",
							"—Ⓕ– js_call_handler ( ) { … } — function",
							"—Ⓕ– js_sab_alloc ( ) { … } — function",
							"—Ⓕ– js_sab_free ( ) { … } — function",
							"—Ⓕ– js_sab_dup ( ) { … } — function",
							"—Ⓕ– js_error_dump ( ) { … } — function",
							"—Ⓕ– js_error_tostring ( ) { … } — function",
							"—Ⓕ– js_error_print ( ) { … } — function",
							"—Ⓕ– js_io_readhandler_fn ( ) { … } — function",
							"—Ⓕ– js_io_readhandler_cfunc ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAGh4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					82,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
						"symkeys":
						[
							[
								30,
								44
							],
							[
								355,
								366
							],
							[
								444,
								454
							],
							[
								508,
								516
							],
							[
								615,
								629
							],
							[
								772,
								779
							],
							[
								990,
								997
							],
							[
								1117,
								1140
							],
							[
								1548,
								1569
							],
							[
								1954,
								1970
							],
							[
								2601,
								2617
							],
							[
								2786,
								2800
							],
							[
								3124,
								3139
							],
							[
								3559,
								3574
							],
							[
								3845,
								3859
							],
							[
								4232,
								4248
							],
							[
								4608,
								4622
							],
							[
								4957,
								4970
							],
							[
								5289,
								5301
							],
							[
								5841,
								5853
							],
							[
								6302,
								6318
							],
							[
								6484,
								6505
							],
							[
								6696,
								6711
							],
							[
								6876,
								6891
							],
							[
								7104,
								7120
							],
							[
								7696,
								7713
							],
							[
								7888,
								7904
							],
							[
								8815,
								8831
							],
							[
								8943,
								8960
							],
							[
								9173,
								9190
							],
							[
								9402,
								9421
							],
							[
								9622,
								9640
							],
							[
								9844,
								9863
							],
							[
								10075,
								10093
							],
							[
								10560,
								10575
							],
							[
								10755,
								10771
							],
							[
								11183,
								11204
							],
							[
								11380,
								11399
							],
							[
								12110,
								12126
							],
							[
								12985,
								12997
							],
							[
								13208,
								13227
							],
							[
								13365,
								13380
							],
							[
								13583,
								13598
							],
							[
								13774,
								13787
							],
							[
								14022,
								14040
							],
							[
								14248,
								14271
							],
							[
								14526,
								14552
							],
							[
								14847,
								14876
							],
							[
								15194,
								15220
							],
							[
								15510,
								15534
							],
							[
								15740,
								15765
							],
							[
								16047,
								16075
							],
							[
								16382,
								16406
							],
							[
								16691,
								16716
							],
							[
								16998,
								17023
							],
							[
								17192,
								17214
							],
							[
								17348,
								17373
							],
							[
								17548,
								17576
							],
							[
								17770,
								17795
							],
							[
								18224,
								18235
							],
							[
								18319,
								18333
							],
							[
								18405,
								18417
							],
							[
								18547,
								18560
							],
							[
								18804,
								18817
							],
							[
								19000,
								19013
							],
							[
								19152,
								19170
							],
							[
								19361,
								19381
							],
							[
								19567,
								19587
							],
							[
								19780,
								19791
							],
							[
								19921,
								19936
							],
							[
								20288,
								20309
							],
							[
								20471,
								20485
							],
							[
								20645,
								20657
							],
							[
								20814,
								20829
							],
							[
								20992,
								21008
							],
							[
								21221,
								21235
							],
							[
								21315,
								21326
							],
							[
								21567,
								21583
							],
							[
								21793,
								21814
							],
							[
								21994,
								22016
							],
							[
								22228,
								22242
							],
							[
								22315,
								22338
							],
							[
								22579,
								22592
							],
							[
								22803,
								22821
							],
							[
								23000,
								23019
							],
							[
								23322,
								23342
							],
							[
								23535,
								23548
							],
							[
								23950,
								23964
							],
							[
								24125,
								24142
							],
							[
								24363,
								24381
							],
							[
								24899,
								24915
							],
							[
								25041,
								25063
							],
							[
								25149,
								25159
							],
							[
								25160,
								25173
							],
							[
								25443,
								25460
							],
							[
								25709,
								25727
							],
							[
								26581,
								26594
							],
							[
								26850,
								26864
							],
							[
								28503,
								28518
							],
							[
								28789,
								28802
							],
							[
								29555,
								29570
							],
							[
								30995,
								31013
							],
							[
								31160,
								31174
							],
							[
								31376,
								31391
							],
							[
								31540,
								31556
							],
							[
								31771,
								31785
							],
							[
								31926,
								31940
							],
							[
								32193,
								32209
							],
							[
								32381,
								32396
							],
							[
								32610,
								32620
							],
							[
								32818,
								32829
							],
							[
								32988,
								33002
							],
							[
								33194,
								33210
							],
							[
								33643,
								33654
							],
							[
								34135,
								34144
							],
							[
								34231,
								34250
							],
							[
								34658,
								34676
							],
							[
								35256,
								35270
							],
							[
								35454,
								35469
							],
							[
								35530,
								35546
							],
							[
								36053,
								36071
							],
							[
								36721,
								36735
							],
							[
								36944,
								36961
							],
							[
								37462,
								37474
							],
							[
								37575,
								37587
							],
							[
								37866,
								37879
							],
							[
								38697,
								38713
							],
							[
								39132,
								39152
							],
							[
								39762,
								39781
							],
							[
								40747,
								40760
							],
							[
								41084,
								41098
							],
							[
								41566,
								41585
							],
							[
								42792,
								42806
							],
							[
								43154,
								43168
							],
							[
								43497,
								43521
							],
							[
								43882,
								43908
							],
							[
								44250,
								44266
							],
							[
								46054,
								46071
							],
							[
								46596,
								46619
							],
							[
								46853,
								46862
							],
							[
								47034,
								47043
							],
							[
								47216,
								47231
							],
							[
								47415,
								47427
							],
							[
								47605,
								47618
							],
							[
								47794,
								47808
							],
							[
								47990,
								48004
							],
							[
								48386,
								48400
							],
							[
								48602,
								48625
							],
							[
								48840,
								48865
							],
							[
								49094,
								49103
							],
							[
								49363,
								49390
							],
							[
								49472,
								49498
							],
							[
								49688,
								49707
							],
							[
								49987,
								50000
							],
							[
								50134,
								50145
							],
							[
								50339,
								50354
							],
							[
								50513,
								50533
							],
							[
								50644,
								50665
							],
							[
								50780,
								50795
							],
							[
								51085,
								51097
							],
							[
								51293,
								51301
							],
							[
								51302,
								51318
							],
							[
								51503,
								51527
							],
							[
								51666,
								51690
							],
							[
								51978,
								52003
							],
							[
								52261,
								52275
							],
							[
								52790,
								52804
							],
							[
								53395,
								53406
							],
							[
								54072,
								54083
							],
							[
								54360,
								54370
							],
							[
								54509,
								54529
							],
							[
								54614,
								54629
							],
							[
								54760,
								54773
							],
							[
								54868,
								54883
							],
							[
								55142,
								55154
							],
							[
								55321,
								55332
							],
							[
								55585,
								55595
							],
							[
								55750,
								55763
							],
							[
								56536,
								56553
							],
							[
								56697,
								56711
							],
							[
								57494,
								57514
							],
							[
								58191,
								58214
							]
						],
						"symlist":
						[
							" Ⓜ  _ISOC99_SOURCE … — macro object",
							" ⒡  quicksort_r ( ) ; — function declaration",
							" ⒡  strverscmp ( ) ; — function declaration",
							" Ⓜ  INFINITY … — macro object",
							"—Ⓕ– atomic_add_int ( ) { … } — function",
							"—Ⓕ– time_us ( ) { … } — function",
							"—Ⓕ– time_us ( ) { … } — function",
							"—Ⓕ– regexp_flags_fromstring ( ) { … } — function",
							"—Ⓕ– regexp_flags_tostring ( ) { … } — function",
							"—Ⓕ– regexp_from_argv ( ) { … } — function",
							"—Ⓕ– regexp_from_dbuf ( ) { … } — function",
							"—Ⓕ– regexp_compile ( ) { … } — function",
							"—Ⓕ– regexp_to_value ( ) { … } — function",
							"—Ⓕ– js_array_length ( ) { … } — function",
							"—Ⓕ– js_array_clear ( ) { … } — function",
							"—Ⓕ– js_array_to_argv ( ) { … } — function",
							"—Ⓕ– js_array_copys ( ) { … } — function",
							"—Ⓕ– js_strv_copys ( ) { … } — function",
							"—Ⓕ– js_atom_from ( ) { … } — function",
							"—Ⓕ– js_atom_dump ( ) { … } — function",
							"—Ⓕ– js_atom_tobinary ( ) { … } — function",
							"—Ⓕ– js_atom_to_cstringlen ( ) { … } — function",
							"—Ⓕ– js_atom_toint32 ( ) { … } — function",
							"—Ⓕ– js_atom_toint64 ( ) { … } — function",
							"—Ⓕ– js_atom_is_index ( ) { … } — function",
							"—Ⓕ– js_atom_is_length ( ) { … } — function",
							"—Ⓕ– js_function_name ( ) { … } — function",
							"—Ⓕ– js_function_argc ( ) { … } — function",
							"—Ⓕ– js_function_cfunc ( ) { … } — function",
							"—Ⓕ– js_global_get_str ( ) { … } — function",
							"—Ⓕ– js_global_get_str_n ( ) { … } — function",
							"—Ⓕ– js_global_get_atom ( ) { … } — function",
							"—Ⓕ– js_global_prototype ( ) { … } — function",
							"—Ⓕ– js_iterator_method ( ) { … } — function",
							"—Ⓕ– js_iterator_new ( ) { … } — function",
							"—Ⓕ– js_iterator_next ( ) { … } — function",
							"—Ⓕ– js_object_constructor ( ) { … } — function",
							"—Ⓕ– js_object_classname ( ) { … } — function",
							"—Ⓕ– js_object_equals ( ) { … } — function",
							"—Ⓕ– js_object_is ( ) { … } — function",
							"—Ⓕ– js_object_construct ( ) { … } — function",
							"—Ⓕ– js_object_error ( ) { … } — function",
							"—Ⓕ– js_object_stack ( ) { … } — function",
							"—Ⓕ– js_object_new ( ) { … } — function",
							"—Ⓕ– js_has_propertystr ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_bool ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_cstring ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_cstringlen ( ) { … } — function",
							"—Ⓕ– js_get_propertyint_cstring ( ) { … } — function",
							"—Ⓕ– js_get_propertyint_int32 ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_string ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_stringlen ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_int32 ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_uint64 ( ) { … } — function",
							"—Ⓕ– js_set_propertyint_string ( ) { … } — function",
							"—Ⓕ– js_set_propertyint_int ( ) { … } — function",
							"—Ⓕ– js_set_propertystr_string ( ) { … } — function",
							"—Ⓕ– js_set_propertystr_stringlen ( ) { … } — function",
							"—Ⓕ– js_get_propertydescriptor ( ) { … } — function",
							"—Ⓕ– js_class_id ( ) { … } — function",
							"—Ⓕ– js_class_newid ( ) { … } — function",
							"—Ⓕ– js_class_get ( ) { … } — function",
							"—Ⓕ– js_class_find ( ) { … } — function",
							"—Ⓕ– js_class_atom ( ) { … } — function",
							"—Ⓕ– js_class_name ( ) { … } — function",
							"—Ⓕ– js_object_tostring ( ) { … } — function",
							"—Ⓕ– js_function_tostring ( ) { … } — function",
							"—Ⓕ– js_function_isnative ( ) { … } — function",
							"—Ⓕ– js_is_input ( ) { … } — function",
							"—Ⓕ– js_propenum_cmp ( ) { … } — function",
							"—Ⓕ– js_propertyenums_free ( ) { … } — function",
							"—Ⓕ– js_strv_free_n ( ) { … } — function",
							"—Ⓕ– js_strv_free ( ) { … } — function",
							"—Ⓕ– js_strv_free_rt ( ) { … } — function",
							"—Ⓕ– js_strv_to_array ( ) { … } — function",
							"—Ⓕ– js_strv_length ( ) { … } — function",
							"—Ⓕ– js_strv_dup ( ) { … } — function",
							"—Ⓕ– js_intv_to_array ( ) { … } — function",
							"—Ⓕ– js_symbol_static_atom ( ) { … } — function",
							"—Ⓕ– js_symbol_static_value ( ) { … } — function",
							"—Ⓕ– js_symbol_ctor ( ) { … } — function",
							"—Ⓕ– js_symbol_invoke_static ( ) { … } — function",
							"—Ⓕ– js_symbol_for ( ) { … } — function",
							"—Ⓕ– js_symbol_for_atom ( ) { … } — function",
							"—Ⓕ– js_symbol_to_string ( ) { … } — function",
							"—Ⓕ– js_symbol_to_cstring ( ) { … } — function",
							"—Ⓕ– js_values_dup ( ) { … } — function",
							"—Ⓕ– js_values_free ( ) { … } — function",
							"—Ⓕ– js_values_toarray ( ) { … } — function",
							"—Ⓕ– js_value_type_name ( ) { … } — function",
							"—Ⓕ– js_value_typestr ( ) { … } — function",
							"—Ⓕ– js_value_has_ref_count ( ) { … } — function",
							"—Ⓒ– value_mask { … } ; — type",
							"—Ⓕ– js_value_type ( ) { … } — function",
							"—Ⓕ– js_value_type_get ( ) { … } — function",
							"—Ⓕ– js_value_type_flag ( ) { … } — function",
							"—Ⓕ– js_value_free ( ) { … } — function",
							"—Ⓕ– js_value_clone ( ) { … } — function",
							"—Ⓕ– js_value_fwrite ( ) { … } — function",
							"—Ⓕ– js_value_dump ( ) { … } — function",
							"—Ⓕ– js_value_equals ( ) { … } — function",
							"—Ⓕ– js_value_from_char ( ) { … } — function",
							"—Ⓕ– js_value_print ( ) { … } — function",
							"—Ⓕ– js_value_tosize ( ) { … } — function",
							"—Ⓕ– js_value_free_rt ( ) { … } — function",
							"—Ⓕ– js_cstring_ptr ( ) { … } — function",
							"—Ⓕ– js_cstring_dup ( ) { … } — function",
							"—Ⓕ– js_cstring_value ( ) { … } — function",
							"—Ⓕ– js_cstring_dump ( ) { … } — function",
							"—Ⓕ– js_map_new ( ) { … } — function",
							"—Ⓕ– module_name ( ) { … } — function",
							"—Ⓕ– module_namestr ( ) { … } — function",
							"—Ⓕ– call_module_func ( ) { … } — function",
							"—Ⓕ– module_func ( ) { … } — function",
							"—Ⓕ– module_ns ( ) { … } — function",
							"—Ⓕ– module_exports_find ( ) { … } — function",
							"—Ⓕ– module_exports_get ( ) { … } — function",
							"—Ⓕ– module_exports ( ) { … } — function",
							"—Ⓕ– js_modules_list ( ) { … } — function",
							"—Ⓕ– js_modules_array ( ) { … } — function",
							"—Ⓕ– js_modules_entries ( ) { … } — function",
							"—Ⓕ– js_modules_map ( ) { … } — function",
							"—Ⓕ– js_modules_object ( ) { … } — function",
							"—Ⓕ– module_value ( ) { … } — function",
							"—Ⓕ– module_entry ( ) { … } — function",
							"—Ⓕ– module_object ( ) { … } — function",
							"—Ⓕ– js_module_search ( ) { … } — function",
							"—Ⓕ– js_module_search_ext ( ) { … } — function",
							"—Ⓕ– js_module_normalize ( ) { … } — function",
							"—Ⓕ– js_module_def ( ) { … } — function",
							"—Ⓕ– js_module_find ( ) { … } — function",
							"—Ⓕ– js_import_directive ( ) { … } — function",
							"—Ⓕ– js_import_load ( ) { … } — function",
							"—Ⓕ– js_import_eval ( ) { … } — function",
							"—Ⓕ– js_module_import_default ( ) { … } — function",
							"—Ⓕ– js_module_import_namespace ( ) { … } — function",
							"—Ⓕ– js_module_import ( ) { … } — function",
							"—Ⓕ– js_is_arraybuffer ( ) { … } — function",
							"—Ⓕ– js_is_sharedarraybuffer ( ) { … } — function",
							"—Ⓕ– js_is_map ( ) { … } — function",
							"—Ⓕ– js_is_set ( ) { … } — function",
							"—Ⓕ– js_is_generator ( ) { … } — function",
							"—Ⓕ– js_is_regexp ( ) { … } — function",
							"—Ⓕ– js_is_promise ( ) { … } — function",
							"—Ⓕ– js_is_dataview ( ) { … } — function",
							"—Ⓕ– js_is_iterable ( ) { … } — function",
							"—Ⓕ– js_is_iterator ( ) { … } — function",
							"—Ⓕ– js_typedarray_prototype ( ) { … } — function",
							"—Ⓕ– js_typedarray_constructor ( ) { … } — function",
							"—Ⓕ– js_invoke ( ) { … } — function",
							"—Ⓕ– js_symbol_operatorset_value ( ) { … } — function",
							"—Ⓕ– js_symbol_operatorset_atom ( ) { … } — function",
							"—Ⓕ– js_operators_create ( ) { … } — function",
							"—Ⓕ– js_number_new ( ) { … } — function",
							"—Ⓕ– js_date_new ( ) { … } — function",
							"—Ⓕ– js_date_from_ms ( ) { … } — function",
							"—Ⓕ– js_date_from_time_ns ( ) { … } — function",
							"—Ⓕ– js_date_from_timespec ( ) { … } — function",
							"—Ⓕ– js_date_gettime ( ) { … } — function",
							"—Ⓕ– js_date_time ( ) { … } — function",
							"—Ⓒ– timespec { … } ; — type",
							"—Ⓕ– js_date_timespec ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_freevalue ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_fromvalue ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_bytelength ( ) { … } — function",
							"—Ⓕ– js_eval_module ( ) { … } — function",
							"—Ⓕ– js_eval_binary ( ) { … } — function",
							"—Ⓕ– js_eval_buf ( ) { … } — function",
							"—Ⓕ– js_eval_str ( ) { … } — function",
							"—Ⓕ– js_time_ms ( ) { … } — function",
							"—Ⓕ– js_interrupt_handler ( ) { … } — function",
							"—Ⓕ– js_timer_unlink ( ) { … } — function",
							"—Ⓕ– js_timer_free ( ) { … } — function",
							"—Ⓕ– js_call_handler ( ) { … } — function",
							"—Ⓕ– js_sab_alloc ( ) { … } — function",
							"—Ⓕ– js_sab_free ( ) { … } — function",
							"—Ⓕ– js_sab_dup ( ) { … } — function",
							"—Ⓕ– js_error_dump ( ) { … } — function",
							"—Ⓕ– js_error_tostring ( ) { … } — function",
							"—Ⓕ– js_error_print ( ) { … } — function",
							"—Ⓕ– js_io_readhandler_fn ( ) { … } — function",
							"—Ⓕ– js_io_readhandler_cfunc ( ) { … } — function"
						]
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					83,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
						"symkeys":
						[
							[
								30,
								44
							],
							[
								355,
								366
							],
							[
								444,
								454
							],
							[
								508,
								516
							],
							[
								615,
								629
							],
							[
								772,
								779
							],
							[
								990,
								997
							],
							[
								1117,
								1140
							],
							[
								1548,
								1569
							],
							[
								1954,
								1970
							],
							[
								2601,
								2617
							],
							[
								2786,
								2800
							],
							[
								3124,
								3139
							],
							[
								3559,
								3574
							],
							[
								3845,
								3859
							],
							[
								4232,
								4248
							],
							[
								4608,
								4622
							],
							[
								4957,
								4970
							],
							[
								5289,
								5301
							],
							[
								5841,
								5853
							],
							[
								6302,
								6318
							],
							[
								6484,
								6505
							],
							[
								6696,
								6711
							],
							[
								6876,
								6891
							],
							[
								7104,
								7120
							],
							[
								7696,
								7713
							],
							[
								7888,
								7904
							],
							[
								8815,
								8831
							],
							[
								8943,
								8960
							],
							[
								9173,
								9190
							],
							[
								9402,
								9421
							],
							[
								9622,
								9640
							],
							[
								9844,
								9863
							],
							[
								10075,
								10093
							],
							[
								10560,
								10575
							],
							[
								10755,
								10771
							],
							[
								11183,
								11204
							],
							[
								11380,
								11399
							],
							[
								12110,
								12126
							],
							[
								12985,
								12997
							],
							[
								13208,
								13227
							],
							[
								13365,
								13380
							],
							[
								13583,
								13598
							],
							[
								13774,
								13787
							],
							[
								14022,
								14040
							],
							[
								14248,
								14271
							],
							[
								14526,
								14552
							],
							[
								14847,
								14876
							],
							[
								15194,
								15220
							],
							[
								15510,
								15534
							],
							[
								15740,
								15765
							],
							[
								16047,
								16075
							],
							[
								16382,
								16406
							],
							[
								16691,
								16716
							],
							[
								16998,
								17023
							],
							[
								17192,
								17214
							],
							[
								17348,
								17373
							],
							[
								17548,
								17576
							],
							[
								17770,
								17795
							],
							[
								18224,
								18235
							],
							[
								18319,
								18333
							],
							[
								18405,
								18417
							],
							[
								18547,
								18560
							],
							[
								18804,
								18817
							],
							[
								19000,
								19013
							],
							[
								19152,
								19170
							],
							[
								19361,
								19381
							],
							[
								19567,
								19587
							],
							[
								19780,
								19791
							],
							[
								19921,
								19936
							],
							[
								20288,
								20309
							],
							[
								20471,
								20485
							],
							[
								20645,
								20657
							],
							[
								20814,
								20829
							],
							[
								20992,
								21008
							],
							[
								21221,
								21235
							],
							[
								21315,
								21326
							],
							[
								21567,
								21583
							],
							[
								21793,
								21814
							],
							[
								21994,
								22016
							],
							[
								22228,
								22242
							],
							[
								22315,
								22338
							],
							[
								22579,
								22592
							],
							[
								22803,
								22821
							],
							[
								23000,
								23019
							],
							[
								23322,
								23342
							],
							[
								23535,
								23548
							],
							[
								23950,
								23964
							],
							[
								24125,
								24142
							],
							[
								24363,
								24381
							],
							[
								24899,
								24915
							],
							[
								25041,
								25063
							],
							[
								25149,
								25159
							],
							[
								25160,
								25173
							],
							[
								25443,
								25460
							],
							[
								25709,
								25727
							],
							[
								26581,
								26594
							],
							[
								26850,
								26864
							],
							[
								28503,
								28518
							],
							[
								28789,
								28802
							],
							[
								29555,
								29570
							],
							[
								30995,
								31013
							],
							[
								31160,
								31174
							],
							[
								31376,
								31391
							],
							[
								31540,
								31556
							],
							[
								31771,
								31785
							],
							[
								31926,
								31940
							],
							[
								32193,
								32209
							],
							[
								32381,
								32396
							],
							[
								32610,
								32620
							],
							[
								32818,
								32829
							],
							[
								32988,
								33002
							],
							[
								33194,
								33210
							],
							[
								33643,
								33654
							],
							[
								34135,
								34144
							],
							[
								34231,
								34250
							],
							[
								34658,
								34676
							],
							[
								35256,
								35270
							],
							[
								35454,
								35469
							],
							[
								35530,
								35546
							],
							[
								36053,
								36071
							],
							[
								36721,
								36735
							],
							[
								36944,
								36961
							],
							[
								37462,
								37474
							],
							[
								37575,
								37587
							],
							[
								37866,
								37879
							],
							[
								38697,
								38713
							],
							[
								39132,
								39152
							],
							[
								39762,
								39781
							],
							[
								40747,
								40760
							],
							[
								41084,
								41098
							],
							[
								41566,
								41585
							],
							[
								42792,
								42806
							],
							[
								43154,
								43168
							],
							[
								43497,
								43521
							],
							[
								43882,
								43908
							],
							[
								44250,
								44266
							],
							[
								46054,
								46071
							],
							[
								46596,
								46619
							],
							[
								46853,
								46862
							],
							[
								47034,
								47043
							],
							[
								47216,
								47231
							],
							[
								47415,
								47427
							],
							[
								47605,
								47618
							],
							[
								47794,
								47808
							],
							[
								47990,
								48004
							],
							[
								48386,
								48400
							],
							[
								48602,
								48625
							],
							[
								48840,
								48865
							],
							[
								49094,
								49103
							],
							[
								49363,
								49390
							],
							[
								49472,
								49498
							],
							[
								49688,
								49707
							],
							[
								49987,
								50000
							],
							[
								50134,
								50145
							],
							[
								50339,
								50354
							],
							[
								50513,
								50533
							],
							[
								50644,
								50665
							],
							[
								50780,
								50795
							],
							[
								51085,
								51097
							],
							[
								51293,
								51301
							],
							[
								51302,
								51318
							],
							[
								51503,
								51527
							],
							[
								51666,
								51690
							],
							[
								51978,
								52003
							],
							[
								52261,
								52275
							],
							[
								52790,
								52804
							],
							[
								53395,
								53406
							],
							[
								54072,
								54083
							],
							[
								54360,
								54370
							],
							[
								54509,
								54529
							],
							[
								54614,
								54629
							],
							[
								54760,
								54773
							],
							[
								54868,
								54883
							],
							[
								55142,
								55154
							],
							[
								55321,
								55332
							],
							[
								55585,
								55595
							],
							[
								55750,
								55763
							],
							[
								56536,
								56553
							],
							[
								56697,
								56711
							],
							[
								57494,
								57514
							],
							[
								58171,
								58194
							]
						],
						"symlist":
						[
							" Ⓜ  _ISOC99_SOURCE … — macro object",
							" ⒡  quicksort_r ( ) ; — function declaration",
							" ⒡  strverscmp ( ) ; — function declaration",
							" Ⓜ  INFINITY … — macro object",
							"—Ⓕ– atomic_add_int ( ) { … } — function",
							"—Ⓕ– time_us ( ) { … } — function",
							"—Ⓕ– time_us ( ) { … } — function",
							"—Ⓕ– regexp_flags_fromstring ( ) { … } — function",
							"—Ⓕ– regexp_flags_tostring ( ) { … } — function",
							"—Ⓕ– regexp_from_argv ( ) { … } — function",
							"—Ⓕ– regexp_from_dbuf ( ) { … } — function",
							"—Ⓕ– regexp_compile ( ) { … } — function",
							"—Ⓕ– regexp_to_value ( ) { … } — function",
							"—Ⓕ– js_array_length ( ) { … } — function",
							"—Ⓕ– js_array_clear ( ) { … } — function",
							"—Ⓕ– js_array_to_argv ( ) { … } — function",
							"—Ⓕ– js_array_copys ( ) { … } — function",
							"—Ⓕ– js_strv_copys ( ) { … } — function",
							"—Ⓕ– js_atom_from ( ) { … } — function",
							"—Ⓕ– js_atom_dump ( ) { … } — function",
							"—Ⓕ– js_atom_tobinary ( ) { … } — function",
							"—Ⓕ– js_atom_to_cstringlen ( ) { … } — function",
							"—Ⓕ– js_atom_toint32 ( ) { … } — function",
							"—Ⓕ– js_atom_toint64 ( ) { … } — function",
							"—Ⓕ– js_atom_is_index ( ) { … } — function",
							"—Ⓕ– js_atom_is_length ( ) { … } — function",
							"—Ⓕ– js_function_name ( ) { … } — function",
							"—Ⓕ– js_function_argc ( ) { … } — function",
							"—Ⓕ– js_function_cfunc ( ) { … } — function",
							"—Ⓕ– js_global_get_str ( ) { … } — function",
							"—Ⓕ– js_global_get_str_n ( ) { … } — function",
							"—Ⓕ– js_global_get_atom ( ) { … } — function",
							"—Ⓕ– js_global_prototype ( ) { … } — function",
							"—Ⓕ– js_iterator_method ( ) { … } — function",
							"—Ⓕ– js_iterator_new ( ) { … } — function",
							"—Ⓕ– js_iterator_next ( ) { … } — function",
							"—Ⓕ– js_object_constructor ( ) { … } — function",
							"—Ⓕ– js_object_classname ( ) { … } — function",
							"—Ⓕ– js_object_equals ( ) { … } — function",
							"—Ⓕ– js_object_is ( ) { … } — function",
							"—Ⓕ– js_object_construct ( ) { … } — function",
							"—Ⓕ– js_object_error ( ) { … } — function",
							"—Ⓕ– js_object_stack ( ) { … } — function",
							"—Ⓕ– js_object_new ( ) { … } — function",
							"—Ⓕ– js_has_propertystr ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_bool ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_cstring ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_cstringlen ( ) { … } — function",
							"—Ⓕ– js_get_propertyint_cstring ( ) { … } — function",
							"—Ⓕ– js_get_propertyint_int32 ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_string ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_stringlen ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_int32 ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_uint64 ( ) { … } — function",
							"—Ⓕ– js_set_propertyint_string ( ) { … } — function",
							"—Ⓕ– js_set_propertyint_int ( ) { … } — function",
							"—Ⓕ– js_set_propertystr_string ( ) { … } — function",
							"—Ⓕ– js_set_propertystr_stringlen ( ) { … } — function",
							"—Ⓕ– js_get_propertydescriptor ( ) { … } — function",
							"—Ⓕ– js_class_id ( ) { … } — function",
							"—Ⓕ– js_class_newid ( ) { … } — function",
							"—Ⓕ– js_class_get ( ) { … } — function",
							"—Ⓕ– js_class_find ( ) { … } — function",
							"—Ⓕ– js_class_atom ( ) { … } — function",
							"—Ⓕ– js_class_name ( ) { … } — function",
							"—Ⓕ– js_object_tostring ( ) { … } — function",
							"—Ⓕ– js_function_tostring ( ) { … } — function",
							"—Ⓕ– js_function_isnative ( ) { … } — function",
							"—Ⓕ– js_is_input ( ) { … } — function",
							"—Ⓕ– js_propenum_cmp ( ) { … } — function",
							"—Ⓕ– js_propertyenums_free ( ) { … } — function",
							"—Ⓕ– js_strv_free_n ( ) { … } — function",
							"—Ⓕ– js_strv_free ( ) { … } — function",
							"—Ⓕ– js_strv_free_rt ( ) { … } — function",
							"—Ⓕ– js_strv_to_array ( ) { … } — function",
							"—Ⓕ– js_strv_length ( ) { … } — function",
							"—Ⓕ– js_strv_dup ( ) { … } — function",
							"—Ⓕ– js_intv_to_array ( ) { … } — function",
							"—Ⓕ– js_symbol_static_atom ( ) { … } — function",
							"—Ⓕ– js_symbol_static_value ( ) { … } — function",
							"—Ⓕ– js_symbol_ctor ( ) { … } — function",
							"—Ⓕ– js_symbol_invoke_static ( ) { … } — function",
							"—Ⓕ– js_symbol_for ( ) { … } — function",
							"—Ⓕ– js_symbol_for_atom ( ) { … } — function",
							"—Ⓕ– js_symbol_to_string ( ) { … } — function",
							"—Ⓕ– js_symbol_to_cstring ( ) { … } — function",
							"—Ⓕ– js_values_dup ( ) { … } — function",
							"—Ⓕ– js_values_free ( ) { … } — function",
							"—Ⓕ– js_values_toarray ( ) { … } — function",
							"—Ⓕ– js_value_type_name ( ) { … } — function",
							"—Ⓕ– js_value_typestr ( ) { … } — function",
							"—Ⓕ– js_value_has_ref_count ( ) { … } — function",
							"—Ⓒ– value_mask { … } ; — type",
							"—Ⓕ– js_value_type ( ) { … } — function",
							"—Ⓕ– js_value_type_get ( ) { … } — function",
							"—Ⓕ– js_value_type_flag ( ) { … } — function",
							"—Ⓕ– js_value_free ( ) { … } — function",
							"—Ⓕ– js_value_clone ( ) { … } — function",
							"—Ⓕ– js_value_fwrite ( ) { … } — function",
							"—Ⓕ– js_value_dump ( ) { … } — function",
							"—Ⓕ– js_value_equals ( ) { … } — function",
							"—Ⓕ– js_value_from_char ( ) { … } — function",
							"—Ⓕ– js_value_print ( ) { … } — function",
							"—Ⓕ– js_value_tosize ( ) { … } — function",
							"—Ⓕ– js_value_free_rt ( ) { … } — function",
							"—Ⓕ– js_cstring_ptr ( ) { … } — function",
							"—Ⓕ– js_cstring_dup ( ) { … } — function",
							"—Ⓕ– js_cstring_value ( ) { … } — function",
							"—Ⓕ– js_cstring_dump ( ) { … } — function",
							"—Ⓕ– js_map_new ( ) { … } — function",
							"—Ⓕ– module_name ( ) { … } — function",
							"—Ⓕ– module_namestr ( ) { … } — function",
							"—Ⓕ– call_module_func ( ) { … } — function",
							"—Ⓕ– module_func ( ) { … } — function",
							"—Ⓕ– module_ns ( ) { … } — function",
							"—Ⓕ– module_exports_find ( ) { … } — function",
							"—Ⓕ– module_exports_get ( ) { … } — function",
							"—Ⓕ– module_exports ( ) { … } — function",
							"—Ⓕ– js_modules_list ( ) { … } — function",
							"—Ⓕ– js_modules_array ( ) { … } — function",
							"—Ⓕ– js_modules_entries ( ) { … } — function",
							"—Ⓕ– js_modules_map ( ) { … } — function",
							"—Ⓕ– js_modules_object ( ) { … } — function",
							"—Ⓕ– module_value ( ) { … } — function",
							"—Ⓕ– module_entry ( ) { … } — function",
							"—Ⓕ– module_object ( ) { … } — function",
							"—Ⓕ– js_module_search ( ) { … } — function",
							"—Ⓕ– js_module_search_ext ( ) { … } — function",
							"—Ⓕ– js_module_normalize ( ) { … } — function",
							"—Ⓕ– js_module_def ( ) { … } — function",
							"—Ⓕ– js_module_find ( ) { … } — function",
							"—Ⓕ– js_import_directive ( ) { … } — function",
							"—Ⓕ– js_import_load ( ) { … } — function",
							"—Ⓕ– js_import_eval ( ) { … } — function",
							"—Ⓕ– js_module_import_default ( ) { … } — function",
							"—Ⓕ– js_module_import_namespace ( ) { … } — function",
							"—Ⓕ– js_module_import ( ) { … } — function",
							"—Ⓕ– js_is_arraybuffer ( ) { … } — function",
							"—Ⓕ– js_is_sharedarraybuffer ( ) { … } — function",
							"—Ⓕ– js_is_map ( ) { … } — function",
							"—Ⓕ– js_is_set ( ) { … } — function",
							"—Ⓕ– js_is_generator ( ) { … } — function",
							"—Ⓕ– js_is_regexp ( ) { … } — function",
							"—Ⓕ– js_is_promise ( ) { … } — function",
							"—Ⓕ– js_is_dataview ( ) { … } — function",
							"—Ⓕ– js_is_iterable ( ) { … } — function",
							"—Ⓕ– js_is_iterator ( ) { … } — function",
							"—Ⓕ– js_typedarray_prototype ( ) { … } — function",
							"—Ⓕ– js_typedarray_constructor ( ) { … } — function",
							"—Ⓕ– js_invoke ( ) { … } — function",
							"—Ⓕ– js_symbol_operatorset_value ( ) { … } — function",
							"—Ⓕ– js_symbol_operatorset_atom ( ) { … } — function",
							"—Ⓕ– js_operators_create ( ) { … } — function",
							"—Ⓕ– js_number_new ( ) { … } — function",
							"—Ⓕ– js_date_new ( ) { … } — function",
							"—Ⓕ– js_date_from_ms ( ) { … } — function",
							"—Ⓕ– js_date_from_time_ns ( ) { … } — function",
							"—Ⓕ– js_date_from_timespec ( ) { … } — function",
							"—Ⓕ– js_date_gettime ( ) { … } — function",
							"—Ⓕ– js_date_time ( ) { … } — function",
							"—Ⓒ– timespec { … } ; — type",
							"—Ⓕ– js_date_timespec ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_freevalue ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_fromvalue ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_bytelength ( ) { … } — function",
							"—Ⓕ– js_eval_module ( ) { … } — function",
							"—Ⓕ– js_eval_binary ( ) { … } — function",
							"—Ⓕ– js_eval_buf ( ) { … } — function",
							"—Ⓕ– js_eval_str ( ) { … } — function",
							"—Ⓕ– js_time_ms ( ) { … } — function",
							"—Ⓕ– js_interrupt_handler ( ) { … } — function",
							"—Ⓕ– js_timer_unlink ( ) { … } — function",
							"—Ⓕ– js_timer_free ( ) { … } — function",
							"—Ⓕ– js_call_handler ( ) { … } — function",
							"—Ⓕ– js_sab_alloc ( ) { … } — function",
							"—Ⓕ– js_sab_free ( ) { … } — function",
							"—Ⓕ– js_sab_dup ( ) { … } — function",
							"—Ⓕ– js_error_dump ( ) { … } — function",
							"—Ⓕ– js_error_tostring ( ) { … } — function",
							"—Ⓕ– js_error_print ( ) { … } — function",
							"—Ⓕ– js_io_readhandler_fn ( ) { … } — function",
							"—Ⓕ– js_io_readhandler_cfunc ( ) { … } — function"
						]
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				]
			]
		},
		{
			"file": "quickjs-sockets.c",
			"settings":
			{
				"buffer_size": 52950,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					114,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAC2AAAAAAAAALoAAAAAAAAAAAAAALoAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAM4AAAAAAAAAAAAAALoAAAAAAAAAugAAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC2AAAAAAAAALYAAAAAAAAAAAAAAAADwvw"
				],
				[
					115,
					1,
					"paste",
					null,
					"AQAAADGAAAAAAAAARIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADGAAAAAAAAAMYAAAAAAAAAAAAAAAADwvw"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "js_value_"
					},
					"CQAAADCAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAAN4AAAAAAAAAAAAAAN4AAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADmAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADCAAAAAAAAAMIAAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					6,
					"left_delete",
					null,
					"BgAAADiAAAAAAAAAOIAAAAAAAAABAAAAXzeAAAAAAAAAN4AAAAAAAAABAAAAZTaAAAAAAAAANoAAAAAAAAABAAAAdTWAAAAAAAAANYAAAAAAAAABAAAAbDSAAAAAAAAANIAAAAAAAAABAAAAYTOAAAAAAAAAM4AAAAAAAAABAAAAdg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADmAAAAAAAAAOYAAAAAAAAAAAAAAAADwvw"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "object_Is"
					},
					"CQAAADOAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAAN4AAAAAAAAAAAAAAN4AAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADyAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADOAAAAAAAAAM4AAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AwAAADCAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAAAxgAAAAAAAAAwAAABqc19vYmplY3RfSXMxgAAAAAAAADKAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADCAAAAAAAAAPIAAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADKAAAAAAAAANIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADKAAAAAAAAAMoAAAAAAAAAAAAAAAADwvw"
				],
				[
					126,
					1,
					"paste",
					null,
					"AQAAADOAAAAAAAAAQ4AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADOAAAAAAAAAM4AAAAAAAAAAAAAAAADwvw"
				],
				[
					127,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEOAAAAAAAAARYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEOAAAAAAAAAQ4AAAAAAAAAAAAAAAADwvw"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAESAAAAAAAAARYAAAAAAAAAAAAAARYAAAAAAAABGgAAAAAAAAAAAAABGgAAAAAAAAEeAAAAAAAAAAAAAAEeAAAAAAAAASIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAESAAAAAAAAARIAAAAAAAAAAAAAAAADwvw"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " set_ha"
					},
					"BwAAAEiAAAAAAAAASYAAAAAAAAAAAAAASYAAAAAAAABKgAAAAAAAAAAAAABKgAAAAAAAAEuAAAAAAAAAAAAAAEuAAAAAAAAATIAAAAAAAAAAAAAATIAAAAAAAABNgAAAAAAAAAAAAABNgAAAAAAAAE6AAAAAAAAAAAAAAE6AAAAAAAAAT4AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEiAAAAAAAAASIAAAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "ndler"
					},
					"BQAAAE+AAAAAAAAAUIAAAAAAAAAAAAAAUIAAAAAAAABRgAAAAAAAAAAAAABRgAAAAAAAAFKAAAAAAAAAAAAAAFKAAAAAAAAAU4AAAAAAAAAAAAAAU4AAAAAAAABUgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE+AAAAAAAAAT4AAAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					1,
					"left_delete",
					null,
					"AQAAAFSAAAAAAAAAVIAAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFWAAAAAAAAAVYAAAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFSAAAAAAAAAVYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFSAAAAAAAAAVIAAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFWAAAAAAAAAVoAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFWAAAAAAAAAVYAAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"right_delete",
					null,
					"AQAAAFaAAAAAAAAAVoAAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFaAAAAAAAAAVoAAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAAGqAAAAAAAAAa4AAAAAAAAAAAAAAa4AAAAAAAABsgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGqAAAAAAAAAaoAAAAAAAAD////////vfw"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGyAAAAAAAAAbYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGyAAAAAAAAAbIAAAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG2AAAAAAAAAb4AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG2AAAAAAAAAbYAAAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAG6AAAAAAAAAb4AAAAAAAAAAAAAAb4AAAAAAAABwgAAAAAAAAAAAAABwgAAAAAAAAHGAAAAAAAAAAAAAAHGAAAAAAAAAcoAAAAAAAAAAAAAAb4AAAAAAAABvgAAAAAAAAAEAAAAgb4AAAAAAAABxgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG6AAAAAAAAAboAAAAAAAAAAAAAAAADwvw"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "JSObject*obj"
					},
					"DAAAAHGAAAAAAAAAcoAAAAAAAAAAAAAAcoAAAAAAAABzgAAAAAAAAAAAAABzgAAAAAAAAHSAAAAAAAAAAAAAAHSAAAAAAAAAdYAAAAAAAAAAAAAAdYAAAAAAAAB2gAAAAAAAAAAAAAB2gAAAAAAAAHeAAAAAAAAAAAAAAHeAAAAAAAAAeIAAAAAAAAAAAAAAeIAAAAAAAAB5gAAAAAAAAAAAAAB5gAAAAAAAAHqAAAAAAAAAAAAAAHqAAAAAAAAAe4AAAAAAAAAAAAAAe4AAAAAAAAB8gAAAAAAAAAAAAAB8gAAAAAAAAH2AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHGAAAAAAAAAcYAAAAAAAAAAAAAAAADwvw"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "=JS_G"
					},
					"BQAAAH2AAAAAAAAAfoAAAAAAAAAAAAAAfoAAAAAAAAB/gAAAAAAAAAAAAAB/gAAAAAAAAICAAAAAAAAAAAAAAICAAAAAAAAAgYAAAAAAAAAAAAAAgYAAAAAAAACCgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH2AAAAAAAAAfYAAAAAAAAAAAAAAAADwvw"
				],
				[
					145,
					1,
					"left_delete",
					null,
					"AQAAAIGAAAAAAAAAgYAAAAAAAAABAAAARw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIKAAAAAAAAAgoAAAAAAAAAAAAAAAADwvw"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "VALUE_GET_OBJ"
					},
					"DQAAAIGAAAAAAAAAgoAAAAAAAAAAAAAAgoAAAAAAAACDgAAAAAAAAAAAAACDgAAAAAAAAISAAAAAAAAAAAAAAISAAAAAAAAAhYAAAAAAAAAAAAAAhYAAAAAAAACGgAAAAAAAAAAAAACGgAAAAAAAAIeAAAAAAAAAAAAAAIeAAAAAAAAAiIAAAAAAAAAAAAAAiIAAAAAAAACJgAAAAAAAAAAAAACJgAAAAAAAAIqAAAAAAAAAAAAAAIqAAAAAAAAAi4AAAAAAAAAAAAAAi4AAAAAAAACMgAAAAAAAAAAAAACMgAAAAAAAAI2AAAAAAAAAAAAAAI2AAAAAAAAAjoAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIGAAAAAAAAAgYAAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI6AAAAAAAAAkIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI6AAAAAAAAAjoAAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "set_handler"
					},
					"CwAAAI+AAAAAAAAAkIAAAAAAAAAAAAAAkIAAAAAAAACRgAAAAAAAAAAAAACRgAAAAAAAAJKAAAAAAAAAAAAAAJKAAAAAAAAAk4AAAAAAAAAAAAAAk4AAAAAAAACUgAAAAAAAAAAAAACUgAAAAAAAAJWAAAAAAAAAAAAAAJWAAAAAAAAAloAAAAAAAAAAAAAAloAAAAAAAACXgAAAAAAAAAAAAACXgAAAAAAAAJiAAAAAAAAAAAAAAJiAAAAAAAAAmYAAAAAAAAAAAAAAmYAAAAAAAACagAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI+AAAAAAAAAj4AAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJuAAAAAAAAAnIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJuAAAAAAAAAm4AAAAAAAAAAAAAAAADwvw"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJyAAAAAAAAAnYAAAAAAAAAAAAAAnYAAAAAAAACfgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJyAAAAAAAAAnIAAAAAAAAAAAAAAAADwvw"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "printf8\""
					},
					"CAAAAJ+AAAAAAAAAoIAAAAAAAAAAAAAAoIAAAAAAAAChgAAAAAAAAAAAAAChgAAAAAAAAKKAAAAAAAAAAAAAAKKAAAAAAAAAo4AAAAAAAAAAAAAAo4AAAAAAAACkgAAAAAAAAAAAAACkgAAAAAAAAKWAAAAAAAAAAAAAAKWAAAAAAAAApoAAAAAAAAAAAAAApoAAAAAAAACngAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ+AAAAAAAAAn4AAAAAAAAAAAAAAAADwvw"
				],
				[
					155,
					2,
					"left_delete",
					null,
					"AgAAAKaAAAAAAAAApoAAAAAAAAABAAAAIqWAAAAAAAAApYAAAAAAAAABAAAAOA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKeAAAAAAAAAp4AAAAAAAAAAAAAAAADwvw"
				],
				[
					156,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKWAAAAAAAAAp4AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKWAAAAAAAAApYAAAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAKaAAAAAAAAAqIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKaAAAAAAAAApoAAAAAAAAAAAAAAAADwvw"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "%pn"
					},
					"AwAAAKeAAAAAAAAAqIAAAAAAAAAAAAAAqIAAAAAAAACpgAAAAAAAAAAAAACpgAAAAAAAAKqAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKeAAAAAAAAAp4AAAAAAAAAAAAAAAADwvw"
				],
				[
					159,
					3,
					"left_delete",
					null,
					"AwAAAKmAAAAAAAAAqYAAAAAAAAABAAAAbqiAAAAAAAAAqIAAAAAAAAABAAAAcKeAAAAAAAAAp4AAAAAAAAABAAAAJQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKqAAAAAAAAAqoAAAAAAAAAAAAAAAADwvw"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "cfunc:%p\\"
					},
					"CQAAAKeAAAAAAAAAqIAAAAAAAAAAAAAAqIAAAAAAAACpgAAAAAAAAAAAAACpgAAAAAAAAKqAAAAAAAAAAAAAAKqAAAAAAAAAq4AAAAAAAAAAAAAAq4AAAAAAAACsgAAAAAAAAAAAAACsgAAAAAAAAK2AAAAAAAAAAAAAAK2AAAAAAAAAroAAAAAAAAAAAAAAroAAAAAAAACvgAAAAAAAAAAAAACvgAAAAAAAALCAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKeAAAAAAAAAp4AAAAAAAAAAAAAAAADwvw"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAALCAAAAAAAAAsYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALCAAAAAAAAAsIAAAAAAAAAAAAAAAADwvw"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": ",obj->u"
					},
					"BwAAALKAAAAAAAAAs4AAAAAAAAAAAAAAs4AAAAAAAAC0gAAAAAAAAAAAAAC0gAAAAAAAALWAAAAAAAAAAAAAALWAAAAAAAAAtoAAAAAAAAAAAAAAtoAAAAAAAAC3gAAAAAAAAAAAAAC3gAAAAAAAALiAAAAAAAAAAAAAALiAAAAAAAAAuYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALKAAAAAAAAAsoAAAAAAAAAAAAAAAADwvw"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": ".cu"
					},
					"AwAAALmAAAAAAAAAuoAAAAAAAAAAAAAAuoAAAAAAAAC7gAAAAAAAAAAAAAC7gAAAAAAAALyAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALmAAAAAAAAAuYAAAAAAAAAAAAAAAADwvw"
				],
				[
					165,
					1,
					"left_delete",
					null,
					"AQAAALuAAAAAAAAAu4AAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALyAAAAAAAAAvIAAAAAAAAAAAAAAAADwvw"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "func."
					},
					"BQAAALuAAAAAAAAAvIAAAAAAAAAAAAAAvIAAAAAAAAC9gAAAAAAAAAAAAAC9gAAAAAAAAL6AAAAAAAAAAAAAAL6AAAAAAAAAv4AAAAAAAAAAAAAAv4AAAAAAAADAgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALuAAAAAAAAAu4AAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAMCAAAAAAAAAwYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAgAAAAAAAAMCAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"paste",
					null,
					"AQAAAMGAAAAAAAAAy4AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBgAAAAAAAAMGAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"paste",
					null,
					"AgAAAMCAAAAAAAAAyoAAAAAAAAAAAAAAyoAAAAAAAADKgAAAAAAAAAsAAABjY19mdW5jdGlvbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAgAAAAAAAAMuAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": ".-"
					},
					"AgAAAMqAAAAAAAAAy4AAAAAAAAAAAAAAy4AAAAAAAADMgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKgAAAAAAAAMqAAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAAMuAAAAAAAAAy4AAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMgAAAAAAAAMyAAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "generic"
					},
					"BwAAAMuAAAAAAAAAzIAAAAAAAAAAAAAAzIAAAAAAAADNgAAAAAAAAAAAAADNgAAAAAAAAM6AAAAAAAAAAAAAAM6AAAAAAAAAz4AAAAAAAAAAAAAAz4AAAAAAAADQgAAAAAAAAAAAAADQgAAAAAAAANGAAAAAAAAAAAAAANGAAAAAAAAA0oAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLgAAAAAAAAMuAAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANOAAAAAAAAA1IAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTgAAAAAAAANOAAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUgAAAAAAAANSAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "utils.c",
			"settings":
			{
				"buffer_size": 58492,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					655,
					1,
					"cut",
					null,
					"AQAAAPTgAAAAAAAA9OAAAAAAAAAsAAAAd3JpdGUgPyAic2V0V3JpdGVIYW5kbGVyIiA6ICJzZXRSZWFkSGFuZGxlciI",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD04AAAAAAAACDhAAAAAAAAAAAAAAAA8L8"
				],
				[
					659,
					1,
					"paste",
					null,
					"AgAAAKjhAAAAAAAA1OEAAAAAAAAAAAAA1OEAAAAAAADU4QAAAAAAAAcAAABoYW5kbGVy",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACo4QAAAAAAAK/hAAAAAAAAAAAAAAAA8L8"
				],
				[
					671,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANzgAAAAAAAA3eAAAAAAAAAAAAAA3eAAAAAAAADd4AAAAAAAABoAAAAgIGNvbnN0IGNoYXIqIGhhbmRsZXIgPSA7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADc4AAAAAAAAPbgAAAAAAAAAAAAAAAA8L8"
				],
				[
					681,
					1,
					"paste",
					null,
					"AgAAADzhAAAAAAAAUuEAAAAAAAAAAAAAUuEAAAAAAABS4QAAAAAAABUAAABKU19UaHJvd0ludGVybmFsRXJyb3I",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA84QAAAAAAAFHhAAAAAAAAAAAAAAAA8L8"
				],
				[
					690,
					1,
					"paste",
					null,
					"AgAAAHDiAAAAAAAAhuIAAAAAAAAAAAAAhuIAAAAAAACG4gAAAAAAABUAAABKU19UaHJvd0ludGVybmFsRXJyb3I",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABw4gAAAAAAAIXiAAAAAAAAAAAAAAAA8L8"
				],
				[
					765,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"BwAAAAfhAAAAAAAACOEAAAAAAAAAAAAACOEAAAAAAAAK4QAAAAAAAAAAAAAK4QAAAAAAAAvhAAAAAAAAAAAAAAvhAAAAAAAADOEAAAAAAAAAAAAADOEAAAAAAAAN4QAAAAAAAAAAAAAN4QAAAAAAAA7hAAAAAAAAAAAAAA7hAAAAAAAAD+EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAH4QAAAAAAAAfhAAAAAAAAAAAAAAAA8L8"
				],
				[
					766,
					1,
					"insert",
					{
						"characters": " char*"
					},
					"BgAAAA/hAAAAAAAAEOEAAAAAAAAAAAAAEOEAAAAAAAAR4QAAAAAAAAAAAAAR4QAAAAAAABLhAAAAAAAAAAAAABLhAAAAAAAAE+EAAAAAAAAAAAAAE+EAAAAAAAAU4QAAAAAAAAAAAAAU4QAAAAAAABXhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAP4QAAAAAAAA/hAAAAAAAAAAAAAAAA8L8"
				],
				[
					767,
					1,
					"insert",
					{
						"characters": " handler="
					},
					"CQAAABXhAAAAAAAAFuEAAAAAAAAAAAAAFuEAAAAAAAAX4QAAAAAAAAAAAAAX4QAAAAAAABjhAAAAAAAAAAAAABjhAAAAAAAAGeEAAAAAAAAAAAAAGeEAAAAAAAAa4QAAAAAAAAAAAAAa4QAAAAAAABvhAAAAAAAAAAAAABvhAAAAAAAAHOEAAAAAAAAAAAAAHOEAAAAAAAAd4QAAAAAAAAAAAAAd4QAAAAAAAB7hAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAV4QAAAAAAABXhAAAAAAAAAAAAAAAA8L8"
				],
				[
					768,
					1,
					"paste",
					null,
					"AQAAAB7hAAAAAAAASuEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAe4QAAAAAAAB7hAAAAAAAAAAAAAAAA8L8"
				],
				[
					769,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAErhAAAAAAAAS+EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABK4QAAAAAAAErhAAAAAAAAAAAAAAAA8L8"
				],
				[
					773,
					1,
					"cut",
					null,
					"AQAAAAjhAAAAAAAACOEAAAAAAABEAAAAICBjb25zdCBjaGFyKiBoYW5kbGVyPXdyaXRlID8gInNldFdyaXRlSGFuZGxlciIgOiAic2V0UmVhZEhhbmRsZXIiOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAI4QAAAAAAAEzhAAAAAAAAAAAAAAAAAAA"
				],
				[
					775,
					1,
					"paste",
					null,
					"AQAAANzgAAAAAAAAIOEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADc4AAAAAAAANzgAAAAAAAAAAAAAAAAAAA"
				],
				[
					785,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAPHgAAAAAAAA8uAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADx4AAAAAAAAPHgAAAAAAAAAAAAAAAA8L8"
				],
				[
					786,
					1,
					"left_delete",
					null,
					"AQAAAPHgAAAAAAAA8eAAAAAAAAABAAAAWw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADy4AAAAAAAAPLgAAAAAAAAAAAAAAAA8L8"
				],
				[
					787,
					1,
					"insert",
					{
						"characters": "s[2]=)"
					},
					"BgAAAPHgAAAAAAAA8uAAAAAAAAAAAAAA8uAAAAAAAADz4AAAAAAAAAAAAADz4AAAAAAAAPTgAAAAAAAAAAAAAPTgAAAAAAAA9eAAAAAAAAAAAAAA9eAAAAAAAAD24AAAAAAAAAAAAAD24AAAAAAAAPfgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADx4AAAAAAAAPHgAAAAAAAAAAAAAAAA8L8"
				],
				[
					788,
					1,
					"left_delete",
					null,
					"AQAAAPbgAAAAAAAA9uAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD34AAAAAAAAPfgAAAAAAAAAAAAAAAA8L8"
				],
				[
					789,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAPbgAAAAAAAA9+AAAAAAAAAAAAAA9+AAAAAAAAD44AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD24AAAAAAAAPbgAAAAAAAAAAAAAAAA8L8"
				],
				[
					790,
					8,
					"right_delete",
					null,
					"CAAAAPjgAAAAAAAA+OAAAAAAAAABAAAAPfjgAAAAAAAA+OAAAAAAAAABAAAAd/jgAAAAAAAA+OAAAAAAAAABAAAAcvjgAAAAAAAA+OAAAAAAAAABAAAAafjgAAAAAAAA+OAAAAAAAAABAAAAdPjgAAAAAAAA+OAAAAAAAAABAAAAZfjgAAAAAAAA+OAAAAAAAAABAAAAIPjgAAAAAAAA+OAAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD44AAAAAAAAPjgAAAAAAAAAAAAAAAA8L8"
				],
				[
					792,
					1,
					"cut",
					null,
					"AQAAAPjgAAAAAAAA+OAAAAAAAAATAAAAICJzZXRXcml0ZUhhbmRsZXIiIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD44AAAAAAAAAvhAAAAAAAAAAAAAAAA8L8"
				],
				[
					793,
					1,
					"right_delete",
					null,
					"AQAAAPjgAAAAAAAA+OAAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD44AAAAAAAAPjgAAAAAAAAAAAAAAAA8L8"
				],
				[
					795,
					1,
					"left_delete",
					null,
					"AQAAAAnhAAAAAAAACeEAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAK4QAAAAAAAArhAAAAAAAA////////738"
				],
				[
					796,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAnhAAAAAAAACuEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJ4QAAAAAAAAnhAAAAAAAAAAAAAAAA8L8"
				],
				[
					797,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAArhAAAAAAAAC+EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAK4QAAAAAAAArhAAAAAAAAAAAAAAAA8L8"
				],
				[
					798,
					1,
					"paste",
					null,
					"AQAAAAvhAAAAAAAAHuEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAL4QAAAAAAAAvhAAAAAAAAAAAAAAAA8L8"
				],
				[
					799,
					1,
					"insert",
					{
						"characters": "};"
					},
					"AgAAAB7hAAAAAAAAH+EAAAAAAAAAAAAAH+EAAAAAAAAg4QAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAe4QAAAAAAAB7hAAAAAAAAAAAAAAAA8L8"
				],
				[
					803,
					1,
					"insert",
					{
						"characters": "handlers"
					},
					"CQAAANXhAAAAAAAA1uEAAAAAAAAAAAAA1uEAAAAAAADW4QAAAAAAAAUAAAB3cml0ZdbhAAAAAAAA1+EAAAAAAAAAAAAA1+EAAAAAAADY4QAAAAAAAAAAAADY4QAAAAAAANnhAAAAAAAAAAAAANnhAAAAAAAA2uEAAAAAAAAAAAAA2uEAAAAAAADb4QAAAAAAAAAAAADb4QAAAAAAANzhAAAAAAAAAAAAANzhAAAAAAAA3eEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADV4QAAAAAAANrhAAAAAAAAAAAAAAAA8L8"
				],
				[
					804,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAN3hAAAAAAAA3+EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADd4QAAAAAAAN3hAAAAAAAAAAAAAAAA8L8"
				],
				[
					805,
					1,
					"insert",
					{
						"characters": "write"
					},
					"BQAAAN7hAAAAAAAA3+EAAAAAAAAAAAAA3+EAAAAAAADg4QAAAAAAAAAAAADg4QAAAAAAAOHhAAAAAAAAAAAAAOHhAAAAAAAA4uEAAAAAAAAAAAAA4uEAAAAAAADj4QAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADe4QAAAAAAAN7hAAAAAAAAAAAAAAAA8L8"
				],
				[
					809,
					1,
					"left_delete",
					null,
					"AQAAAOThAAAAAAAA5OEAAAAAAAAnAAAAID8gInNldFdyaXRlSGFuZGxlciIgOiAic2V0UmVhZEhhbmRsZXIi",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADk4QAAAAAAAAviAAAAAAAAAAAAAAAA8L8"
				],
				[
					816,
					1,
					"paste",
					null,
					"AgAAAMniAAAAAAAA2OIAAAAAAAAAAAAA2OIAAAAAAADY4gAAAAAAAAcAAABoYW5kbGVy",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJ4gAAAAAAANDiAAAAAAAAAAAAAAAA8L8"
				],
				[
					824,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB24QAAAAAAALbhAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "quickjs-internal.h",
			"settings":
			{
				"buffer_size": 37634,
				"line_ending": "Unix"
			}
		},
		{
			"file": "utils.h",
			"settings":
			{
				"buffer_size": 28737,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAOZvAAAAAAAA528AAAAAAAAAAAAA528AAAAAAADobwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmbwAAAAAAAOZvAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADobwAAAAAAAOhvAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHdFAAAAAAAAeEUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3RQAAAAAAAHdFAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAAHhFAAAAAAAAuEUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4RQAAAAAAAHhFAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAALdFAAAAAAAAt0UAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4RQAAAAAAALhFAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKRQAAAAAAAJtFAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "",
			"file": "/home/roman/.config/sublime-text/Packages/User/ExtendedSwitcher.sublime-settings",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"unsaved": true
			}
		},
		{
			"file": "quickjs-syscallerror.c",
			"settings":
			{
				"buffer_size": 16552,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					24,
					1,
					"cut",
					null,
					"AQAAALAvAAAAAAAAsC8AAAAAAAA+AAAAICAgIEpTX1BST1BfSU5UMzJfREVGKCJFTk9UUkVDT1ZFUkFCTEUiLCBFTk9UUkVDT1ZFUkFCTEUsIDApLAo",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwLwAAAAAAAO4vAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					2,
					"paste",
					null,
					"AgAAALAvAAAAAAAA7i8AAAAAAAAAAAAA7i8AAAAAAAAsMAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwLwAAAAAAALAvAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "EWOUD"
					},
					"BgAAAAUwAAAAAAAABjAAAAAAAAAAAAAABjAAAAAAAAAGMAAAAAAAAA8AAABFTk9UUkVDT1ZFUkFCTEUGMAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAowAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFMAAAAAAAABQwAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAAkwAAAAAAAACTAAAAAAAAABAAAARA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKMAAAAAAAAAowAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "LDBLOCK"
					},
					"BwAAAAkwAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAALMAAAAAAAAAAAAAALMAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADTAAAAAAAAAAAAAADTAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAEDAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJMAAAAAAAAAkwAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"paste",
					null,
					"AgAAABMwAAAAAAAAHjAAAAAAAAAAAAAAHjAAAAAAAAAeMAAAAAAAAA8AAABFTk9UUkVDT1ZFUkFCTEU",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATMAAAAAAAACIwAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"revert",
					null,
					"",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjMAAAAAAAANoiAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"revert",
					null,
					"",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjMAAAAAAAANoiAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libarchive",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests"
	],
	"file_history":
	[
		"/home/roman/.config/sublime-text/Packages/ExtendedSwitcher/ExtendedSwitcher.sublime-settings",
		"/home/roman/Projects/plot-cv/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/.config/sublime-text/Packages/User/LiveReload.sublime-settings",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/socketpair_win32.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/.config/sublime-text/Packages/LiveReload/LiveReload.sublime-settings",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qsort_r.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.h",
		"/home/roman/Projects/coreutils/gnulib/lib/execute.c",
		"/home/roman/Projects/coreutils/gnulib/lib/windows-spawn.h",
		"/home/roman/Projects/coreutils/gnulib/lib/spawn-pipe.c",
		"/tmp/spawn/pcs_exec.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/modules.project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/tmp/spawn/process.2.c",
		"/tmp/spawn/process.c",
		"/tmp/spawn/systemimpl.1.c",
		"/tmp/spawn/systemimpl.c",
		"/tmp/spawnvpe/fgvsys_d.c",
		"/tmp/spawnvpe/posixmodule.1.c",
		"/tmp/spawnvpe/posixmodule.c",
		"/tmp/spawnvpe/process.c",
		"/tmp/spawnvpe/redirect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/util.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/.config/sublime-text/Packages/Search in Project/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/.config/sublime-text/Packages/Outline/outline-Dark.hidden-tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/fs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/bc-socklen_t.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/stack.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/socklen_t.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fd_set.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/timeval.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/.clang-format",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"js_function",
			"JSCFunctionType",
			"JS_CLASS_C_FUNCTION",
			"JS_CLASS_C_FUNCTION_DATA",
			"struct JSObject",
			"JSVarRef",
			"data:",
			"Location",
			"\\.tokens",
			"topState",
			"popState",
			"\"state",
			"\\.state",
			"outputFunction",
			"logFunction",
			"output",
			"outputFunction",
			"output =",
			"lexer.tokens",
			"JSLexer",
			"new Lexer",
			"js_sockets_init",
			"NewCFunctionData",
			"js_socket_async_wait",
			"js_socket_async_read",
			"module_exports",
			"SOCKETS_ERRNO:",
			"SOCKETS_ERRNO",
			"JSExportEntry",
			"JSModuleDef",
			"^JSModuleDef",
			"wait",
			"CHILD_PROCESS_EXITED",
			"EAGAIN",
			"\"EAGAIN\"",
			"encoding",
			"ArrayBufferToString",
			"encoding",
			"class_id",
			"js_is_location",
			"array_contains",
			"array_sea",
			"QJSM_EXTRA",
			"location_SOURCES",
			"QJSM_EXTRA_SOURCES",
			"qjsm ",
			"\\(qjsm",
			"qjsm",
			"vector_SOURCES",
			"char_utils_SOURCES",
			"util_SOURCES",
			"utils.c utils.h",
			"utils\\.c",
			"set.lexer",
			"vector.c vector.h",
			"vector_",
			"vector",
			"stringde",
			"flags",
			"socketpair_win32",
			"socketpair",
			" qsort_r\\.c",
			" qsort_r.c",
			"qsort",
			"quicksort",
			"status",
			"PROCESS_STATUS_ERROR",
			"child.process",
			"child_process",
			"TERMIOS",
			"prepare_spawn",
			"_WIN32",
			"dup2",
			"spawnvp",
			"child_p",
			"prot",
			"PROT_READ",
			"HAVE_MMAP",
			"gpio",
			"HAVE_MMAP",
			"^",
			"mmap",
			"realpath",
			"getuid",
			"#endif\n#ifndef __wasi__\n",
			"FUNC_GETUID",
			"\"getuid",
			"fmemopen",
			"HAVE_STRVERSCMP",
			"utils.c",
			"qsort",
			"check_func",
			"qsort",
			"QUICKJS_LIBRARY[^_]",
			"QUICKJS_LIBRARY",
			"WIN32",
			"QUICKJS_LIBRARY_DIR",
			"target_link",
			"add_library",
			"add_lib",
			"QUICKJS_LIBRARY",
			"SOCKETS_NDELAY,",
			"_MODE:",
			"SOCKET_ERROR",
			"SOCKET_SYSCALL",
			"SOCKET_",
			"alloca",
			"check_func",
			"lstat",
			"misc_uname",
			"utsname",
			"SIGTERM",
			"readSync",
			"stdout",
			"jsm_load_package",
			"jsm_module_load",
			"jsm_init_modules",
			"jsm_modules",
			"SOCKET_ERROR",
			"js_sockets_init",
			"vector_forea",
			"js_sockets_funcs",
			"exports",
			"valueOf",
			"\"valueOf",
			"JS_ReadObject",
			"uint8_t\\*",
			"compact"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"js_socket_async_wait",
			"utils_SOURCES",
			"${util_SOURCES}",
			"${vector_SOURCES}",
			"socketpair",
			"",
			"#",
			"",
			"HAVE_MEMMEM",
			"log",
			"class_key",
			"}\\n\\nsize_t",
			"# ",
			"#",
			"HAVE_REALPATH",
			"",
			"HAVE_TERMIOS_H",
			"HAVE_MMAP",
			"HAVE_SYS_MMAN_H",
			"HAVE_SYS_WAIT_H",
			"length",
			"loc->",
			"ret->",
			"arg",
			" ",
			"",
			"\"\\\\t",
			"\"\\t",
			"imp.",
			"ctx,",
			"",
			"JSValueConst)",
			"",
			"jsm_module_loader",
			"js_module_loader_so",
			"js_eval_file",
			"js_eval_buf",
			"js_load_script",
			"jsm_eval_script",
			"js_eval_file",
			"js_load_module",
			"js_eval_str",
			"js_module_get",
			"JSValueConst)",
			"js_module_search",
			"jsm_module_find",
			"js_module_find",
			"js_load_",
			"js_load_module",
			"js_eval_buf",
			"js_load_script",
			"js_std_dump_error",
			"js_module_exports",
			"fdset",
			" ",
			"js_input_buffer",
			"\\1(\\2, sock",
			"\\1(",
			"",
			"JS_CGETSET_MAGIC_DEF",
			"off.",
			"} else if(",
			"port",
			".buf",
			"'",
			"",
			"socket_send",
			"0x00",
			" 0x00,",
			"0x78,",
			"0x78",
			" 0x00,",
			"0x78",
			"JS_CGETSET_MAGIC_DEF",
			"socket_syscalls_size",
			"js_syscallerror_get, js_syscallerror_set,",
			"js_socket_get, js_socket_set, ",
			"e",
			"js_syscallerror_proto_funcs",
			"s.fd",
			"js_socket_proto_funcs",
			"\"",
			"SYSCALLERROR_VALUEOF",
			"s, ",
			"JS_SOCKETCALL",
			"JS_SOCKETCALL_RETURN",
			"js_socket_data2(ctx",
			"sa->family",
			"QUICKJS_SYSCALLERROR_H",
			"data2",
			"js_syscallerror_data2",
			"QUICKJS_MISC_H",
			"js_sockets_defines",
			"js_sockaddr_data2",
			"js_sockaddr_data",
			"SockAddr",
			"struct sockaddr*",
			"sockets_init",
			"argv[i]",
			"pigpio",
			"CHAR_UTILS",
			"${util_SOURCES}",
			"ol.",
			"range_from",
			".range.length",
			".range.offset",
			"input_buffer_length(in)",
			"input_buffer_data(in)",
			"blob",
			"location->vec",
			"location",
			"Location",
			"r->data\\1",
			" this.fs.",
			"stringdecoder",
			"js_stringdecoder_set",
			"js_stringdecoder_get",
			"stringdecoder",
			"\\1if(gpio->debug) fprintf",
			"struct gpio",
			"struct GPIO",
			"struct GPIO*",
			"ctx->rt",
			"",
			": ",
			"\"",
			"ret = \\1;",
			"->errnum"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7706,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
							"function_name_status_row": 180,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									30,
									44
								],
								[
									355,
									366
								],
								[
									444,
									454
								],
								[
									508,
									516
								],
								[
									615,
									629
								],
								[
									772,
									779
								],
								[
									990,
									997
								],
								[
									1117,
									1140
								],
								[
									1548,
									1569
								],
								[
									1954,
									1970
								],
								[
									2601,
									2617
								],
								[
									2786,
									2800
								],
								[
									3124,
									3139
								],
								[
									3559,
									3574
								],
								[
									3845,
									3859
								],
								[
									4232,
									4248
								],
								[
									4608,
									4622
								],
								[
									4957,
									4970
								],
								[
									5289,
									5301
								],
								[
									5841,
									5853
								],
								[
									6302,
									6318
								],
								[
									6484,
									6505
								],
								[
									6696,
									6711
								],
								[
									6876,
									6891
								],
								[
									7104,
									7120
								],
								[
									7696,
									7713
								],
								[
									7888,
									7904
								],
								[
									8815,
									8831
								],
								[
									8943,
									8960
								],
								[
									9173,
									9190
								],
								[
									9402,
									9421
								],
								[
									9622,
									9640
								],
								[
									9844,
									9863
								],
								[
									10075,
									10093
								],
								[
									10560,
									10575
								],
								[
									10755,
									10771
								],
								[
									11183,
									11204
								],
								[
									11380,
									11399
								],
								[
									12110,
									12126
								],
								[
									12985,
									12997
								],
								[
									13208,
									13227
								],
								[
									13365,
									13380
								],
								[
									13583,
									13598
								],
								[
									13774,
									13787
								],
								[
									14022,
									14040
								],
								[
									14248,
									14271
								],
								[
									14526,
									14552
								],
								[
									14847,
									14876
								],
								[
									15194,
									15220
								],
								[
									15510,
									15534
								],
								[
									15740,
									15765
								],
								[
									16047,
									16075
								],
								[
									16382,
									16406
								],
								[
									16691,
									16716
								],
								[
									16998,
									17023
								],
								[
									17192,
									17214
								],
								[
									17348,
									17373
								],
								[
									17548,
									17576
								],
								[
									17770,
									17795
								],
								[
									18224,
									18235
								],
								[
									18319,
									18333
								],
								[
									18405,
									18417
								],
								[
									18547,
									18560
								],
								[
									18804,
									18817
								],
								[
									19000,
									19013
								],
								[
									19152,
									19170
								],
								[
									19361,
									19381
								],
								[
									19567,
									19587
								],
								[
									19780,
									19791
								],
								[
									19921,
									19936
								],
								[
									20288,
									20309
								],
								[
									20471,
									20485
								],
								[
									20645,
									20657
								],
								[
									20814,
									20829
								],
								[
									20992,
									21008
								],
								[
									21221,
									21235
								],
								[
									21315,
									21326
								],
								[
									21567,
									21583
								],
								[
									21793,
									21814
								],
								[
									21994,
									22016
								],
								[
									22228,
									22242
								],
								[
									22315,
									22338
								],
								[
									22579,
									22592
								],
								[
									22803,
									22821
								],
								[
									23000,
									23019
								],
								[
									23322,
									23342
								],
								[
									23535,
									23548
								],
								[
									23950,
									23964
								],
								[
									24125,
									24142
								],
								[
									24363,
									24381
								],
								[
									24899,
									24915
								],
								[
									25041,
									25063
								],
								[
									25149,
									25159
								],
								[
									25160,
									25173
								],
								[
									25443,
									25460
								],
								[
									25709,
									25727
								],
								[
									26581,
									26594
								],
								[
									26850,
									26864
								],
								[
									28503,
									28518
								],
								[
									28789,
									28802
								],
								[
									29555,
									29570
								],
								[
									30995,
									31013
								],
								[
									31160,
									31174
								],
								[
									31376,
									31391
								],
								[
									31540,
									31556
								],
								[
									31771,
									31785
								],
								[
									31926,
									31940
								],
								[
									32193,
									32209
								],
								[
									32381,
									32396
								],
								[
									32610,
									32620
								],
								[
									32818,
									32829
								],
								[
									32988,
									33002
								],
								[
									33194,
									33210
								],
								[
									33643,
									33654
								],
								[
									34135,
									34144
								],
								[
									34231,
									34250
								],
								[
									34658,
									34676
								],
								[
									35256,
									35270
								],
								[
									35454,
									35469
								],
								[
									35530,
									35546
								],
								[
									36053,
									36071
								],
								[
									36721,
									36735
								],
								[
									36944,
									36961
								],
								[
									37462,
									37474
								],
								[
									37575,
									37587
								],
								[
									37866,
									37879
								],
								[
									38697,
									38713
								],
								[
									39132,
									39152
								],
								[
									39762,
									39781
								],
								[
									40747,
									40760
								],
								[
									41084,
									41098
								],
								[
									41566,
									41585
								],
								[
									42792,
									42806
								],
								[
									43154,
									43168
								],
								[
									43497,
									43521
								],
								[
									43882,
									43908
								],
								[
									44250,
									44266
								],
								[
									46054,
									46071
								],
								[
									46596,
									46619
								],
								[
									46853,
									46862
								],
								[
									47034,
									47043
								],
								[
									47216,
									47231
								],
								[
									47415,
									47427
								],
								[
									47605,
									47618
								],
								[
									47794,
									47808
								],
								[
									47990,
									48004
								],
								[
									48386,
									48400
								],
								[
									48602,
									48625
								],
								[
									48840,
									48865
								],
								[
									49094,
									49103
								],
								[
									49363,
									49390
								],
								[
									49472,
									49498
								],
								[
									49688,
									49707
								],
								[
									49987,
									50000
								],
								[
									50134,
									50145
								],
								[
									50339,
									50354
								],
								[
									50513,
									50533
								],
								[
									50644,
									50665
								],
								[
									50780,
									50795
								],
								[
									51085,
									51097
								],
								[
									51293,
									51301
								],
								[
									51302,
									51318
								],
								[
									51503,
									51527
								],
								[
									51666,
									51690
								],
								[
									51978,
									52003
								],
								[
									52261,
									52275
								],
								[
									52790,
									52804
								],
								[
									53395,
									53406
								],
								[
									54072,
									54083
								],
								[
									54360,
									54370
								],
								[
									54509,
									54529
								],
								[
									54614,
									54629
								],
								[
									54760,
									54773
								],
								[
									54868,
									54883
								],
								[
									55142,
									55154
								],
								[
									55321,
									55332
								],
								[
									55585,
									55595
								],
								[
									55750,
									55763
								],
								[
									56536,
									56553
								],
								[
									56697,
									56711
								],
								[
									57494,
									57514
								],
								[
									58171,
									58194
								]
							],
							"symlist":
							[
								"\tⓂ  _ISOC99_SOURCE … — macro object",
								"\t⒡  quicksort_r ( ) ; — function declaration",
								"\t⒡  strverscmp ( ) ; — function declaration",
								"\tⓂ  INFINITY … — macro object",
								"—Ⓕ– atomic_add_int ( ) { … } — function",
								"—Ⓕ– time_us ( ) { … } — function",
								"—Ⓕ– time_us ( ) { … } — function",
								"—Ⓕ– regexp_flags_fromstring ( ) { … } — function",
								"—Ⓕ– regexp_flags_tostring ( ) { … } — function",
								"—Ⓕ– regexp_from_argv ( ) { … } — function",
								"—Ⓕ– regexp_from_dbuf ( ) { … } — function",
								"—Ⓕ– regexp_compile ( ) { … } — function",
								"—Ⓕ– regexp_to_value ( ) { … } — function",
								"—Ⓕ– js_array_length ( ) { … } — function",
								"—Ⓕ– js_array_clear ( ) { … } — function",
								"—Ⓕ– js_array_to_argv ( ) { … } — function",
								"—Ⓕ– js_array_copys ( ) { … } — function",
								"—Ⓕ– js_strv_copys ( ) { … } — function",
								"—Ⓕ– js_atom_from ( ) { … } — function",
								"—Ⓕ– js_atom_dump ( ) { … } — function",
								"—Ⓕ– js_atom_tobinary ( ) { … } — function",
								"—Ⓕ– js_atom_to_cstringlen ( ) { … } — function",
								"—Ⓕ– js_atom_toint32 ( ) { … } — function",
								"—Ⓕ– js_atom_toint64 ( ) { … } — function",
								"—Ⓕ– js_atom_is_index ( ) { … } — function",
								"—Ⓕ– js_atom_is_length ( ) { … } — function",
								"—Ⓕ– js_function_name ( ) { … } — function",
								"—Ⓕ– js_function_argc ( ) { … } — function",
								"—Ⓕ– js_function_cfunc ( ) { … } — function",
								"—Ⓕ– js_global_get_str ( ) { … } — function",
								"—Ⓕ– js_global_get_str_n ( ) { … } — function",
								"—Ⓕ– js_global_get_atom ( ) { … } — function",
								"—Ⓕ– js_global_prototype ( ) { … } — function",
								"—Ⓕ– js_iterator_method ( ) { … } — function",
								"—Ⓕ– js_iterator_new ( ) { … } — function",
								"—Ⓕ– js_iterator_next ( ) { … } — function",
								"—Ⓕ– js_object_constructor ( ) { … } — function",
								"—Ⓕ– js_object_classname ( ) { … } — function",
								"—Ⓕ– js_object_equals ( ) { … } — function",
								"—Ⓕ– js_object_is ( ) { … } — function",
								"—Ⓕ– js_object_construct ( ) { … } — function",
								"—Ⓕ– js_object_error ( ) { … } — function",
								"—Ⓕ– js_object_stack ( ) { … } — function",
								"—Ⓕ– js_object_new ( ) { … } — function",
								"—Ⓕ– js_has_propertystr ( ) { … } — function",
								"—Ⓕ– js_get_propertystr_bool ( ) { … } — function",
								"—Ⓕ– js_get_propertystr_cstring ( ) { … } — function",
								"—Ⓕ– js_get_propertystr_cstringlen ( ) { … } — function",
								"—Ⓕ– js_get_propertyint_cstring ( ) { … } — function",
								"—Ⓕ– js_get_propertyint_int32 ( ) { … } — function",
								"—Ⓕ– js_get_propertystr_string ( ) { … } — function",
								"—Ⓕ– js_get_propertystr_stringlen ( ) { … } — function",
								"—Ⓕ– js_get_propertystr_int32 ( ) { … } — function",
								"—Ⓕ– js_get_propertystr_uint64 ( ) { … } — function",
								"—Ⓕ– js_set_propertyint_string ( ) { … } — function",
								"—Ⓕ– js_set_propertyint_int ( ) { … } — function",
								"—Ⓕ– js_set_propertystr_string ( ) { … } — function",
								"—Ⓕ– js_set_propertystr_stringlen ( ) { … } — function",
								"—Ⓕ– js_get_propertydescriptor ( ) { … } — function",
								"—Ⓕ– js_class_id ( ) { … } — function",
								"—Ⓕ– js_class_newid ( ) { … } — function",
								"—Ⓕ– js_class_get ( ) { … } — function",
								"—Ⓕ– js_class_find ( ) { … } — function",
								"—Ⓕ– js_class_atom ( ) { … } — function",
								"—Ⓕ– js_class_name ( ) { … } — function",
								"—Ⓕ– js_object_tostring ( ) { … } — function",
								"—Ⓕ– js_function_tostring ( ) { … } — function",
								"—Ⓕ– js_function_isnative ( ) { … } — function",
								"—Ⓕ– js_is_input ( ) { … } — function",
								"—Ⓕ– js_propenum_cmp ( ) { … } — function",
								"—Ⓕ– js_propertyenums_free ( ) { … } — function",
								"—Ⓕ– js_strv_free_n ( ) { … } — function",
								"—Ⓕ– js_strv_free ( ) { … } — function",
								"—Ⓕ– js_strv_free_rt ( ) { … } — function",
								"—Ⓕ– js_strv_to_array ( ) { … } — function",
								"—Ⓕ– js_strv_length ( ) { … } — function",
								"—Ⓕ– js_strv_dup ( ) { … } — function",
								"—Ⓕ– js_intv_to_array ( ) { … } — function",
								"—Ⓕ– js_symbol_static_atom ( ) { … } — function",
								"—Ⓕ– js_symbol_static_value ( ) { … } — function",
								"—Ⓕ– js_symbol_ctor ( ) { … } — function",
								"—Ⓕ– js_symbol_invoke_static ( ) { … } — function",
								"—Ⓕ– js_symbol_for ( ) { … } — function",
								"—Ⓕ– js_symbol_for_atom ( ) { … } — function",
								"—Ⓕ– js_symbol_to_string ( ) { … } — function",
								"—Ⓕ– js_symbol_to_cstring ( ) { … } — function",
								"—Ⓕ– js_values_dup ( ) { … } — function",
								"—Ⓕ– js_values_free ( ) { … } — function",
								"—Ⓕ– js_values_toarray ( ) { … } — function",
								"—Ⓕ– js_value_type_name ( ) { … } — function",
								"—Ⓕ– js_value_typestr ( ) { … } — function",
								"—Ⓕ– js_value_has_ref_count ( ) { … } — function",
								"—Ⓒ– value_mask { … } ; — type",
								"—Ⓕ– js_value_type ( ) { … } — function",
								"—Ⓕ– js_value_type_get ( ) { … } — function",
								"—Ⓕ– js_value_type_flag ( ) { … } — function",
								"—Ⓕ– js_value_free ( ) { … } — function",
								"—Ⓕ– js_value_clone ( ) { … } — function",
								"—Ⓕ– js_value_fwrite ( ) { … } — function",
								"—Ⓕ– js_value_dump ( ) { … } — function",
								"—Ⓕ– js_value_equals ( ) { … } — function",
								"—Ⓕ– js_value_from_char ( ) { … } — function",
								"—Ⓕ– js_value_print ( ) { … } — function",
								"—Ⓕ– js_value_tosize ( ) { … } — function",
								"—Ⓕ– js_value_free_rt ( ) { … } — function",
								"—Ⓕ– js_cstring_ptr ( ) { … } — function",
								"—Ⓕ– js_cstring_dup ( ) { … } — function",
								"—Ⓕ– js_cstring_value ( ) { … } — function",
								"—Ⓕ– js_cstring_dump ( ) { … } — function",
								"—Ⓕ– js_map_new ( ) { … } — function",
								"—Ⓕ– module_name ( ) { … } — function",
								"—Ⓕ– module_namestr ( ) { … } — function",
								"—Ⓕ– call_module_func ( ) { … } — function",
								"—Ⓕ– module_func ( ) { … } — function",
								"—Ⓕ– module_ns ( ) { … } — function",
								"—Ⓕ– module_exports_find ( ) { … } — function",
								"—Ⓕ– module_exports_get ( ) { … } — function",
								"—Ⓕ– module_exports ( ) { … } — function",
								"—Ⓕ– js_modules_list ( ) { … } — function",
								"—Ⓕ– js_modules_array ( ) { … } — function",
								"—Ⓕ– js_modules_entries ( ) { … } — function",
								"—Ⓕ– js_modules_map ( ) { … } — function",
								"—Ⓕ– js_modules_object ( ) { … } — function",
								"—Ⓕ– module_value ( ) { … } — function",
								"—Ⓕ– module_entry ( ) { … } — function",
								"—Ⓕ– module_object ( ) { … } — function",
								"—Ⓕ– js_module_search ( ) { … } — function",
								"—Ⓕ– js_module_search_ext ( ) { … } — function",
								"—Ⓕ– js_module_normalize ( ) { … } — function",
								"—Ⓕ– js_module_def ( ) { … } — function",
								"—Ⓕ– js_module_find ( ) { … } — function",
								"—Ⓕ– js_import_directive ( ) { … } — function",
								"—Ⓕ– js_import_load ( ) { … } — function",
								"—Ⓕ– js_import_eval ( ) { … } — function",
								"—Ⓕ– js_module_import_default ( ) { … } — function",
								"—Ⓕ– js_module_import_namespace ( ) { … } — function",
								"—Ⓕ– js_module_import ( ) { … } — function",
								"—Ⓕ– js_is_arraybuffer ( ) { … } — function",
								"—Ⓕ– js_is_sharedarraybuffer ( ) { … } — function",
								"—Ⓕ– js_is_map ( ) { … } — function",
								"—Ⓕ– js_is_set ( ) { … } — function",
								"—Ⓕ– js_is_generator ( ) { … } — function",
								"—Ⓕ– js_is_regexp ( ) { … } — function",
								"—Ⓕ– js_is_promise ( ) { … } — function",
								"—Ⓕ– js_is_dataview ( ) { … } — function",
								"—Ⓕ– js_is_iterable ( ) { … } — function",
								"—Ⓕ– js_is_iterator ( ) { … } — function",
								"—Ⓕ– js_typedarray_prototype ( ) { … } — function",
								"—Ⓕ– js_typedarray_constructor ( ) { … } — function",
								"—Ⓕ– js_invoke ( ) { … } — function",
								"—Ⓕ– js_symbol_operatorset_value ( ) { … } — function",
								"—Ⓕ– js_symbol_operatorset_atom ( ) { … } — function",
								"—Ⓕ– js_operators_create ( ) { … } — function",
								"—Ⓕ– js_number_new ( ) { … } — function",
								"—Ⓕ– js_date_new ( ) { … } — function",
								"—Ⓕ– js_date_from_ms ( ) { … } — function",
								"—Ⓕ– js_date_from_time_ns ( ) { … } — function",
								"—Ⓕ– js_date_from_timespec ( ) { … } — function",
								"—Ⓕ– js_date_gettime ( ) { … } — function",
								"—Ⓕ– js_date_time ( ) { … } — function",
								"—Ⓒ– timespec { … } ; — type",
								"—Ⓕ– js_date_timespec ( ) { … } — function",
								"—Ⓕ– js_arraybuffer_freevalue ( ) { … } — function",
								"—Ⓕ– js_arraybuffer_fromvalue ( ) { … } — function",
								"—Ⓕ– js_arraybuffer_bytelength ( ) { … } — function",
								"—Ⓕ– js_eval_module ( ) { … } — function",
								"—Ⓕ– js_eval_binary ( ) { … } — function",
								"—Ⓕ– js_eval_buf ( ) { … } — function",
								"—Ⓕ– js_eval_str ( ) { … } — function",
								"—Ⓕ– js_time_ms ( ) { … } — function",
								"—Ⓕ– js_interrupt_handler ( ) { … } — function",
								"—Ⓕ– js_timer_unlink ( ) { … } — function",
								"—Ⓕ– js_timer_free ( ) { … } — function",
								"—Ⓕ– js_call_handler ( ) { … } — function",
								"—Ⓕ– js_sab_alloc ( ) { … } — function",
								"—Ⓕ– js_sab_free ( ) { … } — function",
								"—Ⓕ– js_sab_dup ( ) { … } — function",
								"—Ⓕ– js_error_dump ( ) { … } — function",
								"—Ⓕ– js_error_tostring ( ) { … } — function",
								"—Ⓕ– js_error_print ( ) { … } — function",
								"—Ⓕ– js_io_readhandler_fn ( ) { … } — function",
								"—Ⓕ– js_io_readhandler_cfunc ( ) { … } — function"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633740790.3,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "quickjs-sockets.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52950,
						"regions":
						{
						},
						"selection":
						[
							[
								32056,
								32813
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1127,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633740210.64,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16779.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "utils.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 58492,
						"regions":
						{
							"col_00DDDDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										6158,
										6168
									]
								],
								"scope": "col_00DDDDFF"
							},
							"col_00DDDDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DDDDFF_circle.png",
								"regions":
								[
									[
										6137,
										6137
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										6086,
										6096
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										6043,
										6043
									]
								],
								"scope": "col_gutter"
							},
							"col_808000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										6073,
										6081
									]
								],
								"scope": "col_808000FF"
							},
							"col_808000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808000FF_circle.png",
								"regions":
								[
									[
										6043,
										6043
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								58492,
								58492
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2266,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633743606.7,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 33249.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "quickjs-internal.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37634,
						"regions":
						{
						},
						"selection":
						[
							[
								22263,
								22273
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 608,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633739789.4,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8904.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28737,
						"regions":
						{
						},
						"selection":
						[
							[
								17802,
								17819
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 644,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633740713.88,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9249.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/roman/.config/sublime-text/Packages/User/ExtendedSwitcher.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tabs_extra_last_activated": 1633496614.03,
							"tabs_extra_last_activated_sheet_index": 22
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "quickjs-syscallerror.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16552,
						"regions":
						{
						},
						"selection":
						[
							[
								12323,
								8922
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 318,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633411808.74,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3936.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"child",
				"child-process.c"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"qsort_r",
				"qsort_r.c"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"quick",
				"quickjs-path.c"
			],
			[
				"path.c",
				"path.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"quicksj-misc",
				"quickjs-misc.c"
			],
			[
				"process.js",
				"lib/process.js"
			],
			[
				"quickjs-mm",
				"quickjs-mmap.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"quickjs-m",
				"quickjs-misc.c"
			],
			[
				"redicate.c",
				"predicate.c"
			],
			[
				"sockets.h",
				"quickjs-sockets.h"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"",
				"quickjs-inspect.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"char-",
				"char-utils.h"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"conso",
				"lib/console.js"
			],
			[
				"clang-f",
				".clang-format"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"test_mi",
				"tests/test_misc.js"
			],
			[
				"ockets.",
				"quickjs-sockets.h"
			],
			[
				"quickjs-ar",
				"quickjs-archive.c"
			],
			[
				"fd_set",
				"lib/fd_set.js"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"buffer-ut",
				"buffer-utils.c"
			],
			[
				"misc.",
				"quickjs-misc.h"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"socklen_t.js",
				"lib/socklen_t.js"
			],
			[
				"str.h",
				"quickjs-stringdecoder.h"
			],
			[
				"quickjs-libc",
				"~/Sources/plot-cv/quickjs/quickjs-libc.h"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.c"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"test_loca",
				"tests/test_location.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				".clang-fo",
				".clang-format"
			],
			[
				"buff",
				"buffer-utils.c"
			],
			[
				"buffer-util",
				"buffer-utils.c"
			],
			[
				"buffer-utils.c",
				"buffer-utils.c"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"quickjs-so",
				"quickjs-sockets.c"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"quickjs-insp",
				"quickjs-inspect.c"
			],
			[
				"test_soc",
				"tests/test_sockets.js"
			],
			[
				"test_qjsm",
				"tests/test_qjsm.js"
			],
			[
				"buffer-tu",
				"buffer-utils.c"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"repl.",
				"lib/repl.js"
			],
			[
				"quickjs-blo",
				"quickjs-blob.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"test_mis",
				"tests/test_misc.js"
			],
			[
				"test_blob",
				"tests/test_blob.js"
			],
			[
				"test_string",
				"tests/test_stringdecoder.js"
			],
			[
				"test_str",
				"tests/test_stringdecoder.js"
			],
			[
				"quickjs-blb",
				"quickjs-blob.h"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"ringbuffer.h",
				"ringbuffer.h"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"scan.",
				"lib/scan.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 236.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
