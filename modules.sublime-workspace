{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_Set",
				"JS_SetProperty"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"JS_PROP",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyFunctionList"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"JS_New",
				"JS_NewCFunctionData"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_SetP",
				"JS_SetPropertyStr"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_",
				"js_sockaddr_class_id"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"JS_Thr",
				"JS_ThrowInternalError"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  typed_array_size_log2\nJSErrorEnum\nJSShape\nJSString\nJSAtomStruct\nJSGCPhaseEnum\nOPCodeEnum\nJSNumericOperations\nJSRuntime\nJSStackFrame\nJSClass\nJSStackFrame\nJSGCObjectTypeEnum\nJSGCObjectHeader\nJSVarRef\nJSFloatEnv\nJSBigFloat\nJSBigDecimal\nJSAutoInitIDEnum\nJSContext\nJSFloat64Union\nJSAtomKindEnum\nJSString\nJSClosureVar\nJSVarScope\nJSVarKindEnum\nJSVarDef\nJSFunctionKindEnum\nJSFunctionBytecode\nJSBoundFunction\nJSIteratorKindEnum\nJSForInIterator\nJSRegExp\nJSProxyData\nJSArrayBuffer\nJSTypedArray\nJSAsyncFunctionState\nJSAsyncFunctionData\nJSOverloadableOperatorEnum\nJSBinaryOperatorDefEntry\nJSBinaryOperatorDef\nJSOperatorSetData\nJSReqModuleEntry\nJSExportTypeEnum\nJSExportEntry\nJSStarExportEntry\nJSImportEntry\nJSModuleDef\nJSJobEntry\nJSProperty\nJSShapeProperty\nJSShape\nJSObject\nJSMapRecord\nJSBoundFunction\nJSCFunctionDataRecord\nJSCClosureRecord\nJSForInIterator\nJSArrayBuffer\nJSTypedArray\nJSFloatEnv\nJSOperatorSetData\nJSMapState\nJSMapIteratorData\nJSArrayIteratorData\nJSRegExpStringIteratorData\nJSGeneratorData\nJSProxyData\nJSPromiseData\nJSPromiseFunctionData\nJSAsyncFunctionData\nJSAsyncFromSyncIteratorData\nJSAsyncGeneratorData\nJSFunctionBytecode\nJSTypedArray\nDEF\nDEF\nFMT\nDEF\nOPCodeFormat\nOPCodeEnum\nFMT\nDEF\n  def\nFMT\nDEF\n  def\nJS_InitAtoms\n  __JS_NewAtomInit\nJS_FreeAtomStruct\n  free_function_bytecode\n  js_call_c_function\n  js_call_bound_function\nJS_CallInternal\nJS_CallConstructorInternal\nJS_CallFree\nJS_InvokeFree\nJS_ToArrayLengthFree\nJS_EvalObject\nJS_ThrowInternalError\nJS_DumpAtoms\nJS_DumpString\nJS_DumpObjectHeader\nJS_DumpObject\nJS_DumpGCObject\nJS_DumpValueShort\nJS_DumpValue\nJS_PrintValue\nJS_DumpShapes\n  js_function_apply\n  js_array_finalizer\n  js_array_mark\n  js_object_data_finalizer\n  js_object_data_mark\n  js_c_function_finalizer\n  js_c_function_mark\n  js_bytecode_function_finalizer\n  js_bytecode_function_mark\n  js_bound_function_finalizer\n  js_bound_function_mark\n  js_for_in_iterator_finalizer\n  js_for_in_iterator_mark\n  js_regexp_finalizer\n  js_array_buffer_finalizer\n  js_typed_array_finalizer\n  js_typed_array_mark\n  js_proxy_finalizer\n  js_proxy_mark\n  js_map_finalizer\n  js_map_mark\n  js_map_iterator_finalizer\n  js_map_iterator_mark\n  js_array_iterator_finalizer\n  js_array_iterator_mark\n  js_regexp_string_iterator_finalizer\n  js_regexp_string_iterator_mark\n  js_generator_finalizer\n  js_generator_mark\n  js_promise_finalizer\n  js_promise_mark\n  js_promise_resolve_function_finalizer\n  js_promise_resolve_function_mark\n  js_operator_set_finalizer\n  js_operator_set_mark\nJS_ToStringFree\nJS_ToBoolFree\nJS_ToInt32Free\nJS_ToFloat64Free\nJS_ToUint8ClampFree\n  js_compile_regexp\n  js_regexp_constructor_internal\n  gc_decref\nJS_NewClass1\nJSStrictEqModeEnum\n  js_strict_eq2\n  js_strict_eq\n  js_same_value\n  js_same_value_zero\nJS_ToObject\nJS_ToObjectFree\n  add_property\n  js_float_env_finalizer\nJS_NewBigFloat\nJS_GetBigFloat\nJS_NewBigDecimal\nJS_GetBigDecimal\nJS_NewBigInt\nJS_GetBigInt\nJS_CompactBigInt1\nJS_CompactBigInt\nJS_ToBigInt64Free\nJS_ToBigInt\nJS_FreeBigInt\nJS_ToBigFloat\nJS_ToBigDecimalFree\nJS_ToBigDecimal\nJS_ThrowOutOfMemory\nJS_ThrowTypeErrorRevokedProxy\n  js_proxy_getPrototypeOf\n  js_proxy_setPrototypeOf\n  js_proxy_isExtensible\n  js_proxy_preventExtensions\n  js_proxy_isArray\nJS_CreateProperty\n  js_string_memcmp\n  reset_weak_ref\n  js_array_buffer_constructor3\n  js_get_array_buffer\n  js_typed_array_constructor\n  typed_array_is_detached\n  typed_array_get_length\nJS_ThrowTypeErrorDetachedArrayBuffer\n  get_var_ref\n  js_generator_function_call\n  js_async_function_resolve_finalizer\n  js_async_function_resolve_mark\nJS_EvalInternal\n  js_free_module_def\n  js_mark_module_def\n  js_import_meta\n  js_dynamic_import\n  free_var_ref\n  js_new_promise_capability\n  perform_promise_then\n  js_promise_resolve\n  js_string_compare\nJS_ToNumber\nJS_SetPropertyValue\nJS_NumberIsInteger\nJS_NumberIsNegativeOrMinusZero\nJS_ToNumberFree\nJS_GetOwnPropertyInternal\n  js_free_desc\n  async_func_mark\nJS_AddIntrinsicBasicObjects\n  js_free_shape\n  js_free_shape_null\n  js_shape_prepare_update\n  init_shape_hash\n  js_get_length32\n  js_get_length64\n  free_arg_list\n  build_arg_list\n  js_get_fast_array\nJS_CreateAsyncFromSyncIterator\n  js_c_function_data_finalizer\n  js_c_function_data_mark\n  js_c_function_data_call\n  js_c_closure_finalizer\n  js_c_closure_call\n  js_symbol_to_atom\n  add_gc_object\n  remove_gc_object\n  js_async_function_free0\n  js_instantiate_prototype\n  js_module_ns_autoinit\nJS_InstantiateFunctionListItem2\nJS_SetUncatchableError\n  js_trigger_gc\n  js_malloc_usable_size_unknown\n  js_malloc_rt\n  js_free_rt\n  js_realloc_rt\n  js_malloc_usable_size_rt\n  js_mallocz_rt\n  js_bf_realloc\n  js_malloc\n  js_mallocz\n  js_free\n  js_realloc\n  js_realloc2\n  js_malloc_usable_size\n  js_strndup\n  js_strdup\n  js_realloc_array\n  js_resize_array\n  js_dbuf_init\n  is_digit\nJSClassShortDef\n  init_class_range\nJS_ThrowUnsupportedOperation\n  invalid_to_string\n  invalid_from_string\n  invalid_unary_arith\n  invalid_binary_arith\n  invalid_mul_pow10_to_float64\n  invalid_mul_pow10\n  set_dummy_numeric_ops\n  js_get_stack_pointer\n  js_check_stack_overflow\n  js_get_stack_pointer\n  js_check_stack_overflow\nJS_NewRuntime2\nJS_GetRuntimeOpaque\nJS_SetRuntimeOpaque\n  js_def_malloc_usable_size\n  js_def_malloc\n  js_def_free\n  js_def_realloc\nJS_NewRuntime\nJS_SetMemoryLimit\nJS_SetGCThreshold\n  malloc\n  free\n  realloc\nJS_SetInterruptHandler\nJS_SetCanBlock\nJS_SetSharedArrayBufferFunctions\nJS_EnqueueJob\nJS_IsJobPending\nJS_ExecutePendingJob\n  atom_get_free\n  atom_is_free\n  atom_set_free\n  js_alloc_string_rt\n  js_alloc_string\n  js_free_string\nJS_SetRuntimeInfo\nJS_FreeRuntime\nJS_NewContextRaw\nJS_NewContext\nJS_GetContextOpaque\nJS_SetContextOpaque\n  set_value\nJS_SetClassProto\nJS_GetClassProto\nJSFreeModuleEnum\n  js_free_modules\nJS_DupContext\nJS_MarkContext\nJS_FreeContext\nJS_GetRuntime\n  update_stack_limit\nJS_SetMaxStackSize\nJS_UpdateStackTop\n  is_strict_mode\n  is_math_mode\nJS_ATOM_COUNT_RESIZE\n  __JS_AtomIsConst\n  __JS_AtomIsTaggedInt\n  __JS_AtomFromUInt32\n  __JS_AtomToUInt32\n  is_num\n  is_num_string\n  hash_string8\n  hash_string16\n  hash_string\nJS_DumpString\nJS_DumpAtoms\nJS_ResizeAtomHash\nJS_InitAtoms\nJS_DupAtomRT\nJS_DupAtom\nJS_AtomGetKind\nJS_AtomIsString\n  js_get_atom_index\n  __JS_NewAtom\n  __JS_NewAtomInit\n  __JS_FindAtom\nJS_FreeAtomStruct\n  __JS_FreeAtom\nJS_NewAtomStr\nJS_NewAtomLen\nJS_NewAtom\nJS_NewAtomUInt32\nJS_NewAtomInt64\nJS_NewSymbol\nJS_NewSymbolFromAtom\nJS_AtomGetStrRT\nJS_AtomGetStr\n  __JS_AtomToValue\nJS_AtomToValue\nJS_AtomToString\nJS_AtomIsArrayIndex\nJS_AtomIsNumericIndex1\nJS_AtomIsNumericIndex\nJS_FreeAtom\nJS_FreeAtomRT\nJS_AtomSymbolHasDescription\n  print_atom\nJS_AtomToCString\n  js_atom_concat_str\n  js_atom_concat_num\nJS_IsEmptyString\nJS_NewClassID\nJS_IsRegisteredClass\nJS_NewClass1\nJS_NewClass\n  js_new_string8\n  js_new_string16\n  js_new_string_char\n  js_sub_string\nStringBuffer\n  string_buffer_init2\n  string_buffer_init\n  string_buffer_free\n  string_buffer_set_error\n  string_buffer_widen\n  string_buffer_realloc\n  string_buffer_putc_slow\n  string_buffer_putc8\n  string_buffer_putc16\n  string_buffer_putc\n  string_get\n  string_getc\n  string_buffer_write8\n  string_buffer_write16\n  string_buffer_puts8\n  string_buffer_concat\n  string_buffer_concat_value\n  string_buffer_concat_value_free\n  string_buffer_fill\n  string_buffer_end\nJS_NewStringLen\nJS_ConcatString3\nJS_NewString\nJS_NewAtomString\nJS_ToCStringLen2\nJS_FreeCString\n  memcmp16_8\n  memcmp16\n  js_string_memcmp\n  js_string_compare\n  copy_str16\nJS_ConcatString1\nJS_ConcatString\n  get_shape_size\n  get_shape_from_alloc\n  prop_hash_end\n  get_alloc_from_shape\n  get_shape_prop\n  init_shape_hash\n  shape_hash\n  get_shape_hash\n  shape_initial_hash\n  resize_shape_hash\n  js_shape_hash_link\n  js_shape_hash_unlink\n  js_new_shape2\n  js_new_shape\n  js_clone_shape\n  js_dup_shape\n  js_free_shape0\n  js_free_shape\n  js_free_shape_null\n  resize_properties\n  compact_properties\n  add_shape_property\n  find_hashed_shape_proto\n  find_hashed_shape_prop\nJS_DumpShape\nJS_DumpShapes\nJS_NewObjectFromShape\n  get_proto_obj\nJS_NewObjectProtoClass\nJS_SetObjectData\nJS_NewObjectClass\nJS_NewObjectProto\nJS_NewArray\nJS_NewObject\n  js_function_set_properties\n  js_class_has_bytecode\nJS_GetFunctionBytecode\n  js_method_set_home_object\n  js_get_function_name\n  js_method_set_properties\nJS_NewCFunction3\nJS_NewCFunction2\nJSCFunctionDataRecord\n  js_c_function_data_finalizer\n  js_c_function_data_mark\n  js_c_function_data_call\nJS_NewCFunctionData\n  js_autoinit_get_realm\n  js_autoinit_get_id\n  js_autoinit_free\n  js_autoinit_mark\nJSCClosureRecord\n  js_c_closure_finalizer\n  js_c_closure_call\nJS_NewCClosure\n  free_property\n  find_own_property1\n  find_own_property\n  set_cycle_flag\n  free_var_ref\n  js_array_finalizer\n  js_array_mark\n  js_object_data_finalizer\n  js_object_data_mark\n  js_c_function_finalizer\n  js_c_function_mark\n  js_bytecode_function_finalizer\n  js_bytecode_function_mark\n  js_bound_function_finalizer\n  js_bound_function_mark\n  js_for_in_iterator_finalizer\n  js_for_in_iterator_mark\n  free_object\n  free_gc_object\n  free_zero_refcount\n  __JS_FreeValueRT\n  __JS_FreeValue\n  add_gc_object\n  remove_gc_object\nJS_MarkValue\n  mark_children\n  gc_decref_child\n  gc_decref\n  gc_scan_incref_child\n  gc_scan_incref_child2\n  gc_scan\n  gc_free_cycles\nJS_RunGC\nJS_IsLiveObject\nJSMemoryUsage_helper\n  compute_value_size\n  compute_jsstring_size\n  compute_bytecode_size\n  compute_value_size\nJS_ComputeMemoryUsage\nJS_DumpMemoryUsage\nJS_GetGlobalObject\nJS_Throw\nJS_GetException\n  dbuf_put_leb128\n  dbuf_put_sleb128\n  get_leb128\n  get_sleb128\n  find_line_num\n  get_func_name\n  build_backtrace\n  is_backtrace_needed\nJS_NewError\nJS_ThrowError2\nJS_ThrowError\nJS_ThrowSyntaxError\nJS_ThrowTypeError\nJS_ThrowTypeErrorOrFalse\n  __JS_ThrowTypeErrorAtom\n  __JS_ThrowSyntaxErrorAtom\nJS_ThrowTypeErrorAtom\nJS_ThrowSyntaxErrorAtom\nJS_ThrowTypeErrorReadOnly\nJS_ThrowReferenceError\nJS_ThrowRangeError\nJS_ThrowInternalError\nJS_ThrowOutOfMemory\nJS_ThrowStackOverflow\nJS_ThrowTypeErrorNotAnObject\nJS_ThrowTypeErrorNotASymbol\nJS_ThrowReferenceErrorNotDefined\nJS_ThrowReferenceErrorUninitialized\nJS_ThrowReferenceErrorUninitialized2\nJS_ThrowTypeErrorInvalidClass\n  __js_poll_interrupts\n  js_poll_interrupts\nJS_SetPrototypeInternal\nJS_SetPrototype\nJS_GetPrototypePrimitive\nJS_GetPrototype\nJS_GetPrototypeFree\nJS_OrdinaryIsInstanceOf\nJS_IsInstanceOf\nJS_AutoInitProperty\nJS_GetPropertyInternal\nJS_ThrowTypeErrorPrivateNotFound\nJS_DefinePrivateField\nJS_GetPrivateField\nJS_SetPrivateField\nJS_AddBrand\nJS_CheckBrand\n  js_string_obj_get_length\n  num_keys_cmp\n  js_free_prop_enum\n  __exception\nJS_GetOwnPropertyNames\nJS_GetOwnPropertyInternal\nJS_GetOwnProperty\nJS_IsExtensible\nJS_PreventExtensions\nJS_HasProperty\n  js_symbol_to_atom\nJS_ValueToAtom\nJS_GetPropertyValue\nJS_GetPropertyUint32\nJS_TryGetPropertyInt64\nJS_GetPropertyInt64\nJS_GetPropertyStr\n  add_property\n  convert_fast_array_to_array\n  delete_property\n  call_setter\n  set_array_length\n  expand_fast_array\n  add_fast_array_element\n  js_free_desc\nJS_SetPropertyGeneric\nJS_SetPropertyInternal\nJS_SetPropertyValue\nJS_SetPropertyUint32\nJS_SetPropertyInt64\nJS_SetPropertyStr\n  get_prop_flags\nJS_CreateProperty\n  check_define_prop_flags\n  js_shape_prepare_update\n  js_update_property_flags\nJS_DefineProperty\nJS_DefineAutoInitProperty\nJS_DefinePropertyValue\nJS_DefinePropertyValueValue\nJS_DefinePropertyValueUint32\nJS_DefinePropertyValueInt64\nJS_DefinePropertyValueStr\nJS_DefinePropertyGetSet\nJS_CreateDataPropertyUint32\n  js_object_has_name\nJS_DefineObjectName\nJS_DefineObjectNameComputed\nJS_ThrowSyntaxErrorVarRedeclaration\nJS_CheckDefineGlobalVar\nJS_DefineGlobalVar\nJS_DefineGlobalFunction\nJS_GetGlobalVar\nJS_GetGlobalVarRef\nJS_CheckGlobalVar\nJS_SetGlobalVar\nJS_DeleteProperty\nJS_DeletePropertyInt64\nJS_IsFunction\nJS_IsCFunction\nJS_IsConstructor\nJS_SetConstructorBit\nJS_IsError\nJS_IsUncatchableError\nJS_SetUncatchableError\nJS_ResetUncatchableError\nJS_NewUncatchableError\nJS_SetOpaque\nJS_GetOpaque\nJS_GetOpaque2\nJS_ToPrimitiveFree\nJS_ToPrimitive\nJS_SetIsHTMLDDA\nJS_IsHTMLDDA\nJS_ToBoolFree\nJS_ToBool\n  skip_spaces\n  to_digit\n  js_strtod\n  js_string_to_bigint\n  js_string_to_bigfloat\n  js_string_to_bigdecimal\n  js_atof2\n  js_atof\n  js_atof\nJSToNumberHintEnum\nJS_ToNumberHintFree\nJS_ToNumberFree\nJS_ToNumericFree\nJS_ToNumeric\n  __JS_ToFloat64Free\nJS_ToFloat64Free\nJS_ToFloat64\nJS_ToNumber\nJSValue\nJS_ToInt32SatFree\nJS_ToInt32Sat\nJS_ToInt32Clamp\nJS_ToInt64SatFree\nJS_ToInt64Sat\nJS_ToInt64Clamp\nJS_ToInt64Free\nJS_ToInt64\nJS_ToInt64Ext\nJS_ToInt32Free\nJS_ToInt32\nJS_ToUint32Free\nJS_ToUint8ClampFree\nJS_ToArrayLengthFree\n  is_safe_integer\nJS_ToIndex\nJS_ToLengthFree\nJS_NumberIsInteger\nJS_NumberIsNegativeOrMinusZero\n  js_bigint_to_string1\n  js_bigint_to_string\n  js_ftoa\n  js_bigfloat_to_string\n  js_bigdecimal_to_string1\n  js_bigdecimal_to_string\n  i64toa\n  js_ecvt1\n  js_ecvt\n  js_fcvt1\n  js_fcvt\n  js_dtoa1\n  js_dtoa\nJS_ToStringInternal\nJS_ToString\nJS_ToStringFree\nJS_ToLocaleStringFree\nJS_ToPropertyKey\nJS_ToStringCheckObject\nJS_ToQuotedString\nJS_DumpObjectHeader\nJS_DumpObject\nJS_DumpGCObject\nJS_DumpValueShort\nJS_DumpValue\nJS_PrintValue\nJS_IsArray\n  js_pow\nJS_NewBigInt64_1\nJS_NewBigInt64\nJS_NewBigUint64\nJS_ToBigFloat\nJS_ToBigDecimal\nJS_StringToBigInt\nJS_StringToBigIntErr\nJS_ToBigIntFree\nJS_ToBigInt\nJSValue\nJS_FreeBigInt\nJS_ToBigInt64Free\nJS_ToBigInt64\n  js_new_bf\nJS_NewBigFloat\nJS_NewBigDecimal\nJS_NewBigInt\nJS_CompactBigInt1\nJS_CompactBigInt\n  get_ovop_from_opcode\n  find_binary_op\n  js_call_binary_op_fallback\n  js_call_binary_op_simple\n  js_call_unary_op_fallback\n  throw_bf_exception\n  js_unary_arith_bigint\n  js_unary_arith_bigfloat\n  js_unary_arith_bigdecimal\n  js_unary_arith_slow\n  js_post_inc_slow\n  js_not_slow\n  js_binary_arith_bigfloat\n  js_binary_arith_bigint\n  js_bfdec_pow\n  js_binary_arith_bigdecimal\n  js_binary_arith_slow\n  js_add_slow\n  js_binary_logic_slow\n  js_compare_bigfloat\n  js_compare_bigdecimal\n  js_relational_slow\n  tag_is_number\n  js_eq_slow\n  js_shr_slow\n  js_mul_pow10_to_float64\n  js_mul_pow10\nJS_ThrowUnsupportedBigint\nJS_NewBigInt64\nJS_NewBigUint64\nJS_ToBigInt64\n  js_unary_arith_slow\n  js_post_inc_slow\n  js_binary_arith_slow\n  js_add_slow\n  js_binary_logic_slow\n  js_not_slow\n  js_relational_slow\n  js_eq_slow\n  js_shr_slow\n  js_strict_eq2\n  js_strict_eq\n  js_same_value\n  js_same_value_zero\n  js_strict_eq_slow\n  js_operator_in\n  js_has_unscopable\n  js_operator_instanceof\n  js_operator_typeof\n  js_operator_delete\n  js_throw_type_error\n  js_function_proto_caller\n  js_function_proto_fileName\n  js_function_proto_lineNumber\n  js_arguments_define_own_property\n  js_build_arguments\n  js_build_mapped_arguments\n  js_build_rest\n  build_for_in_iterator\n  js_for_in_start\n  js_for_in_next\nJS_GetIterator2\nJS_GetIterator\nJS_IteratorNext2\nJS_IteratorNext\nJS_IteratorClose\n  js_for_of_start\n  js_for_of_next\nJS_IteratorGetCompleteValue\n  js_iterator_get_value_done\n  js_create_iterator_result\n  js_array_iterator_next\n  js_create_array_iterator\n  js_is_fast_array\n  js_get_fast_array\n  js_append_enumerate\nJS_CopyDataProperties\nJS_GetActiveFunction\n  get_var_ref\n  js_closure2\n  js_instantiate_prototype\n  js_closure\n  js_op_define_class\n  close_var_refs\n  close_lexical_var\n  js_call_c_function\n  js_call_bound_function\nOPSpecialObjectEnum\nJS_CallInternal\nSWITCH\nCASE\nCASE\nDEF\n  def\n  def\nDEF\n  def\n  def\nSWITCH\nCASE\nCASE\nOP_CMP\nJS_Call\nJS_CallFree\nJS_GetFunctionRealm\n  js_create_from_ctor\nJS_CallConstructorInternal\nJS_CallConstructor2\nJS_CallConstructor\nJS_Invoke\nJS_InvokeFree\n  async_func_init\n  async_func_mark\n  async_func_free\n  async_func_resume\nJSGeneratorStateEnum\nJSGeneratorData\n  free_generator_stack_rt\n  js_generator_finalizer\n  free_generator_stack\n  js_generator_mark\n  js_generator_next\n  js_generator_function_call\n  js_async_function_terminate\n  js_async_function_free0\n  js_async_function_free\n  js_async_function_resolve_finalizer\n  js_async_function_resolve_mark\n  js_async_function_resolve_create\n  js_async_function_resume\n  js_async_function_resolve_call\n  js_async_function_call\nJSAsyncGeneratorStateEnum\nJSAsyncGeneratorRequest\nJSAsyncGeneratorData\n  js_async_generator_free\n  js_async_generator_finalizer\n  js_async_generator_mark\n  js_async_generator_resolve_function\n  js_async_generator_resolve_function_create\n  js_async_generator_await\n  js_async_generator_resolve_or_reject\n  js_async_generator_resolve\n  js_async_generator_reject\n  js_async_generator_complete\n  js_async_generator_completed_return\n  js_async_generator_resume_next\n  js_async_generator_resolve_function\n  js_async_generator_next\n  js_async_generator_function_call\nBlockEnv\nJSGlobalVar\nRelocEntry\nJumpSlot\nLabelSlot\nLineNumberSlot\nJSParseFunctionEnum\nJSParseExportEnum\nJSFunctionDef\nJSToken\nJSParseState\nJSOpCode\nFMT\nDEF\nDEF\n  short_opcode_info\n  short_opcode_info\n  next_token\n  free_token\n  __attribute\n  js_parse_error\n  js_parse_expect\n  js_parse_expect_semi\n  js_parse_error_reserved_identifier\n  js_parse_template_part\n  js_parse_string\n  token_is_pseudo_keyword\n  js_parse_regexp\n  ident_realloc\n  parse_ident\n  next_token\n  json_parse_ident\n  json_next_token\n  simple_next_token\n  peek_token\nJS_DetectModule\n  get_prev_opcode\n  js_is_live_code\n  emit_u8\n  emit_u16\n  emit_u32\n  emit_op\n  emit_atom\n  update_label\n  new_label_fd\n  new_label\n  emit_label\n  emit_goto\n  cpool_add\n  emit_push_const\n  find_arg\n  find_var\n  find_var_in_scope\n  is_child_scope\n  find_var_in_child_scope\n  find_global_var\n  find_lexical_global_var\n  find_lexical_decl\n  push_scope\n  get_first_lexical_var\n  pop_scope\n  close_scopes\n  add_var\n  add_scope_var\n  add_func_var\n  add_arguments_var\n  add_arguments_arg\n  add_arg\n  add_global_var\nJSVarDefEnum\n  define_var\n  add_private_class_field\n  js_parse_expr\n  js_parse_function_decl\n  js_parse_function_class_fields_init\n  js_parse_function_decl2\n  js_parse_assign_expr2\n  js_parse_assign_expr\n  js_parse_unary\n  push_break_entry\n  pop_break_entry\n  add_export_entry\n  seal_template_obj\n  js_parse_template\n  token_is_ident\n  __exception\nJSParsePos\n  js_parse_get_pos\n  js_parse_seek_token\n  is_regexp_allowed\n  js_parse_skip_parens_token\n  set_object_name\n  set_object_name_computed\n  js_parse_object_literal\n  js_parse_postfix_expr\n  js_parse_left_hand_side_expr\n  js_parse_class_default_ctor\n  find_private_class_field\n  emit_class_field_init\n  get_private_setter_name\nClassFieldsDef\n  emit_class_init_start\n  add_brand\n  emit_class_init_end\n  js_parse_class\n  js_parse_array_literal\n  has_with_scope\n  get_lvalue\nPutLValueEnum\n  put_lvalue\n  js_parse_expr_paren\n  js_unsupported_keyword\n  js_define_var\n  js_emit_spread_code\n  js_parse_check_duplicate_parameter\n  js_parse_destructuring_var\n  js_parse_destructuring_element\nFuncCallType\n  optional_chain_test\n  js_parse_postfix_expr\n  js_parse_delete\n  js_parse_unary\n  js_parse_expr_binary\n  js_parse_logical_and_or\n  js_parse_coalesce_expr\n  js_parse_cond_expr\n  emit_return\n  js_parse_assign_expr2\n  js_parse_assign_expr\n  js_parse_expr2\n  js_parse_expr\n  push_break_entry\n  pop_break_entry\n  emit_break\n  emit_return\n  js_parse_statement_or_decl\n  js_parse_statement\n  js_parse_block\n  js_parse_var\n  is_label\n  is_let\n  js_parse_for_in_of\n  set_eval_ret_undefined\n  js_parse_statement_or_decl\n  js_new_module_def\n  js_mark_module_def\n  js_free_module_def\n  add_req_module_entry\n  find_export_entry\n  add_export_entry2\n  add_export_entry\n  add_star_export_entry\nJS_NewCModule\nJS_AddModuleExport\nJS_SetModuleExport\nJS_SetModuleLoaderFunc\nJS_GetModuleLoaderFunc\nJS_GetModuleLoaderOpaque\n  js_default_module_normalize_name\n  js_find_loaded_module\n  js_host_resolve_imported_module\n  js_host_resolve_imported_module_atom\nJSResolveEntry\nJSResolveState\n  find_resolve_entry\n  add_resolve_entry\nJSResolveResultEnum\n  js_resolve_export1\n  js_resolve_export\n  js_resolve_export_throw_error\nExportedNameEntryEnum\nExportedNameEntry\nGetExportNamesState\n  find_exported_name\n  get_exported_names\n  js_module_ns_has\n  exported_names_cmp\n  js_get_module_ns\n  js_module_ns_autoinit\n  js_build_module_ns\n  js_get_module_ns\n  js_resolve_module\n  js_create_module_var\n  js_create_module_bytecode_function\n  js_create_module_function\n  js_link_module\nJS_GetScriptOrModuleName\nJS_GetModuleName\nJS_GetImportMeta\n  js_import_meta\nJS_RunModule\n  js_dynamic_import_job\n  js_dynamic_import\n  js_evaluate_module\nJSAtom\n  js_parse_export\n  add_closure_var\n  add_import\n  js_parse_import\n  js_parse_source_element\n  js_new_function_def\n  free_bytecode_atoms\n  js_free_function_def\n  skip_lines\n  print_lines\n  dump_byte_code\n  dump_pc2line\n  js_dump_function_bytecode\n  add_closure_var\n  find_closure_var\n  get_closure_var2\n  get_closure_var\n  get_with_scope_opcode\n  can_opt_put_ref_value\n  can_opt_put_global_ref_value\n  optimize_scope_make_ref\n  optimize_scope_make_global_ref\n  add_var_this\n  resolve_pseudo_var\n  var_object_test\n  resolve_scope_var\n  find_private_class_field_all\n  get_loc_or_ref\n  resolve_scope_private_field1\n  resolve_scope_private_field\n  mark_eval_captured_variables\n  is_var_in_arg_scope\n  add_eval_variables\n  set_closure_from_var\n  add_closure_variables\nCodeContext\nM2\nM3\nM4\n  code_match\n  instantiate_hoisted_definitions\n  skip_dead_code\n  get_label_pos\n  resolve_variables\n  add_pc2line_info\n  compute_pc2line_info\n  add_reloc\n  code_has_label\n  find_jump_target\n  push_short_int\n  put_short_code\n  resolve_labels\nStackSizeState\n  ss_check\n  compute_stack_size\n  add_module_variables\n  js_create_function\n  free_function_bytecode\n  js_parse_directives\n  js_parse_function_check_names\n  js_parse_function_class_fields_init\n  js_parse_function_decl2\n  js_parse_function_decl\n  js_parse_program\n  js_parse_init\nJS_EvalFunctionInternal\nJS_EvalFunction\n  skip_shebang\n  __JS_EvalInternal\nJS_EvalInternal\nJS_EvalObject\nJS_EvalThis\nJS_Eval\nJS_ResolveModule\nJSObjectListEntry\nJSObjectList\n  js_object_list_init\n  js_object_list_get_hash\n  js_object_list_resize_hash\n  js_object_list_add\n  js_object_list_find\n  js_object_list_end\nBCTagEnum\nBCWriterState\n  bc_put_u8\n  bc_put_u16\n  bc_put_u32\n  bc_put_u64\n  bc_put_leb128\n  bc_put_sleb128\n  bc_set_flags\n  bc_atom_to_idx\n  bc_put_atom\n  bc_byte_swap\nJS_WriteFunctionBytecode\nJS_WriteString\nJS_WriteBigNum\nJS_WriteObjectRec\nJS_WriteFunctionTag\nJS_WriteModule\nJS_WriteArray\nJS_WriteObjectTag\nJS_WriteTypedArray\nJS_WriteArrayBuffer\nJS_WriteSharedArrayBuffer\nJS_WriteObjectRec\nJS_WriteObjectAtoms\nJS_WriteObject2\nJS_WriteObject\nBCReaderState\n  bc_read_trace\n  bc_read_trace\n  bc_read_error_end\n  bc_get_u8\n  bc_get_u16\n  bc_get_u32\n  bc_get_u64\n  bc_get_leb128\n  bc_get_sleb128\n  bc_get_leb128_int\n  bc_get_leb128_u16\n  bc_get_buf\n  bc_idx_to_atom\n  bc_get_atom\nJS_ReadString\n  bc_get_flags\nJS_ReadFunctionBytecode\nJS_ReadBigNum\nJS_ReadObjectRec\nBC_add_object_ref1\nBC_add_object_ref\nJS_ReadFunctionTag\nJS_ReadModule\nJS_ReadObjectTag\nJS_ReadArray\nJS_ReadTypedArray\nJS_ReadArrayBuffer\nJS_ReadSharedArrayBuffer\nJS_ReadDate\nJS_ReadObjectValue\nJS_ReadObjectRec\nJS_ReadObjectAtoms\n  bc_reader_free\nJS_ReadObject\n  js_string_constructor\n  js_boolean_constructor\n  js_number_constructor\n  check_function\n  check_exception_free\n  find_atom\nJS_InstantiateFunctionListItem2\nJS_InstantiateFunctionListItem\nJS_SetPropertyFunctionList\nJS_AddModuleExportList\nJS_SetModuleExportList\nJS_SetConstructor2\nJS_SetConstructor\nJS_NewGlobalCConstructor2\nJS_NewGlobalCConstructor\nJS_NewGlobalCConstructorOnly\n  js_global_eval\n  js_global_isNaN\n  js_global_isFinite\nJS_ToObject\nJS_ToObjectFree\n  js_obj_to_desc\nJS_DefinePropertyDesc\nJS_ObjectDefineProperties\n  js_object_constructor\n  js_object_create\n  js_object_getPrototypeOf\n  js_object_setPrototypeOf\n  js_object_defineProperty\n  js_object_defineProperties\n  js_object___defineGetter__\n  js_object_getOwnPropertyDescriptor\n  js_object_getOwnPropertyDescriptors\nJS_GetOwnPropertyNames2\n  js_object_getOwnPropertyNames\n  js_object_getOwnPropertySymbols\n  js_object_keys\n  js_object_isExtensible\n  js_object_preventExtensions\n  js_object_hasOwnProperty\n  js_object_valueOf\n  js_object_toString\n  js_object_toLocaleString\n  js_object_assign\n  js_object_seal\n  js_object_isSealed\n  js_object_fromEntries\n  js_object___getClass\n  js_object_is\nJS_SpeciesConstructor\n  js_object_get___proto__\n  js_object_set___proto__\n  js_object_isPrototypeOf\n  js_object_propertyIsEnumerable\n  js_object___lookupGetter__\n  js_function_proto\n  js_function_constructor\n  js_get_length32\n  js_get_length64\n  free_arg_list\n  build_arg_list\n  js_function_apply\n  js_function_call\n  js_function_bind\n  js_function_toString\n  js_function_hasInstance\n  iterator_to_array\n  js_error_constructor\n  js_error_toString\n  js_aggregate_error_constructor\nJS_CopySubArray\n  js_array_constructor\n  js_array_from\n  js_array_of\n  js_array_isArray\n  js_get_this\nJS_ArraySpeciesCreate\nJS_isConcatSpreadable\n  js_array_concat\n  js_typed_array_get_length_internal\n  js_typed_array___speciesCreate\n  js_array_every\n  js_array_reduce\n  js_array_fill\n  js_array_includes\n  js_array_indexOf\n  js_array_lastIndexOf\n  js_array_find\n  js_array_toString\n  js_array_join\n  js_array_pop\n  js_array_push\n  js_array_reverse\n  js_array_slice\n  js_array_copyWithin\nJS_FlattenIntoArray\n  js_array_flatten\nValueSlot\n  array_sort_context\n  js_array_cmp_generic\n  js_array_sort\nJSArrayIteratorData\n  js_array_iterator_finalizer\n  js_array_iterator_mark\n  js_create_array\n  js_create_array_iterator\n  js_array_iterator_next\n  js_iterator_proto_iterator\n  js_number_constructor\n  js_number_isNaN\n  js_number_isFinite\n  js_number_isInteger\n  js_number_isSafeInteger\n  js_thisNumberValue\n  js_number_valueOf\n  js_get_radix\n  js_number_toString\n  js_number_toFixed\n  js_number_toExponential\n  js_number_toPrecision\n  js_parseInt\n  js_parseFloat\n  js_boolean_constructor\n  js_thisBooleanValue\n  js_boolean_toString\n  js_boolean_valueOf\n  js_string_get_own_property\n  js_string_define_own_property\n  js_string_delete_property\n  js_string_constructor\n  js_thisStringValue\n  js_string_fromCharCode\n  js_string_fromCodePoint\n  js_string_raw\n  js_string_codePointRange\n  js_string_charCodeAt\n  js_string_charAt\n  js_string_codePointAt\n  js_string_concat\n  string_cmp\n  string_indexof_char\n  string_indexof\n  string_advance_index\n  js_string_indexOf\n  js_is_regexp\n  js_string_includes\n  check_regexp_g_flag\n  js_string_match\n  js_string___GetSubstitution\n  js_string_replace\n  js_string_split\n  js_string_substring\n  js_string_substr\n  js_string_slice\n  js_string_pad\n  js_string_repeat\n  js_string_trim\n  js_string___quote\n  string_prevc\n  test_final_sigma\n  js_string_localeCompare\n  js_string_toLowerCase\nJS_ToUTF32String\nJS_NewUTF32String\n  js_string_normalize\n  js_string_toString\n  js_string_iterator_next\n  js_string_CreateHTML\nJS_AddIntrinsicStringNormalize\n  js_fmin\n  js_fmax\n  js_math_min_max\n  js_math_sign\n  js_math_round\n  js_math_hypot\n  js_math_fround\n  js_math_imul\n  js_math_clz32\n  xorshift64star\n  js_random_init\n  js_math_random\n  js___date_clock\n  getTimezoneOffset\n  js_regexp_finalizer\n  js_compile_regexp\n  js_regexp_constructor_internal\n  js_get_regexp\n  js_is_regexp\n  js_regexp_constructor\n  js_regexp_compile\n  js_regexp_get_source\n  js_regexp_get_flag\n  js_regexp_get_flags\n  js_regexp_toString\n  lre_check_stack_overflow\n  lre_realloc\n  js_regexp_exec\nJS_RegExpDelete\nJS_RegExpExec\n  js_regexp_test\n  js_regexp_Symbol_match\nJSRegExpStringIteratorData\n  js_regexp_string_iterator_finalizer\n  js_regexp_string_iterator_mark\n  js_regexp_string_iterator_next\n  js_regexp_Symbol_matchAll\nValueBuffer\n  value_buffer_init\n  value_buffer_free\n  value_buffer_append\n  js_is_standard_regexp\n  js_regexp_Symbol_replace\n  js_regexp_Symbol_search\n  js_regexp_Symbol_split\nJS_AddIntrinsicRegExpCompiler\nJS_AddIntrinsicRegExp\n  json_parse_expect\n  json_parse_value\nJS_ParseJSON2\nJS_ParseJSON\n  internalize_json_property\n  js_json_parse\nJSONStringifyContext\nJS_ToQuotedStringFree\n  js_json_check\n  js_json_to_str\nJS_JSONStringify\n  js_json_stringify\nJS_AddIntrinsicJSON\n  js_reflect_apply\n  js_reflect_construct\n  js_reflect_deleteProperty\n  js_reflect_get\n  js_reflect_has\n  js_reflect_set\n  js_reflect_setPrototypeOf\n  js_reflect_ownKeys\n  js_proxy_finalizer\n  js_proxy_mark\nJS_ThrowTypeErrorRevokedProxy\n  get_proxy_method\n  js_proxy_getPrototypeOf\n  js_proxy_setPrototypeOf\n  js_proxy_isExtensible\n  js_proxy_preventExtensions\n  js_proxy_has\n  js_proxy_get\n  js_proxy_set\n  js_create_desc\n  js_proxy_get_own_property\n  js_proxy_define_own_property\n  js_proxy_delete_property\n  find_prop_key\n  js_proxy_get_own_property_names\n  js_proxy_call_constructor\n  js_proxy_call\n  js_proxy_isArray\n  js_proxy_constructor\n  js_proxy_revoke\n  js_proxy_revoke_constructor\n  js_proxy_revocable\nJS_AddIntrinsicProxy\n  js_symbol_constructor\n  js_thisSymbolValue\n  js_symbol_toString\n  js_symbol_valueOf\n  js_symbol_get_description\n  js_symbol_for\n  js_symbol_keyFor\nJSMapRecord\nJSMapState\n  js_map_constructor\n  map_normalize_key\n  map_hash_key\n  map_find_record\n  map_hash_resize\n  map_add_record\n  delete_weak_ref\n  map_delete_record\n  map_decref_record\n  reset_weak_ref\n  js_map_set\n  js_map_get\n  js_map_has\n  js_map_delete\n  js_map_clear\n  js_map_get_size\n  js_map_forEach\n  js_map_finalizer\n  js_map_mark\nJSMapIteratorData\n  js_map_iterator_finalizer\n  js_map_iterator_mark\n  js_create_map_iterator\n  js_map_iterator_next\nJS_AddIntrinsicMapSet\nJSPromiseStateEnum\nJSPromiseData\nJSPromiseFunctionDataResolved\nJSPromiseFunctionData\nJSPromiseReactionData\n  js_create_resolving_functions\n  promise_reaction_data_free\n  promise_reaction_job\nJS_SetHostPromiseRejectionTracker\n  fulfill_or_reject_promise\n  reject_promise\n  js_promise_resolve_thenable_job\n  js_promise_resolve_function_free_resolved\n  js_create_resolving_functions\n  js_promise_resolve_function_finalizer\n  js_promise_resolve_function_mark\n  js_promise_resolve_function_call\n  js_promise_finalizer\n  js_promise_mark\n  js_promise_constructor\n  js_promise_executor\n  js_promise_executor_new\n  js_new_promise_capability\nJS_NewPromiseCapability\n  js_promise_resolve\n  remainingElementsCount_add\n  js_promise_all_resolve_element\n  js_promise_all\n  js_promise_race\n  perform_promise_then\n  js_promise_then\n  js_promise_catch\n  js_promise_finally_value_thunk\n  js_promise_finally_thrower\n  js_promise_then_finally_func\n  js_promise_finally\n  js_async_from_sync_iterator_unwrap\n  js_async_from_sync_iterator_unwrap_func_create\nJSAsyncFromSyncIteratorData\n  js_async_from_sync_iterator_finalizer\n  js_async_from_sync_iterator_mark\nJS_CreateAsyncFromSyncIterator\n  js_async_from_sync_iterator_next\nJS_AddIntrinsicPromise\n  string_get_hex\n  isURIReserved\n  js_throw_URIError\n  hex_decode\n  js_global_decodeURI\n  isUnescaped\n  isURIUnescaped\n  encodeURI_hex\n  js_global_encodeURI\n  js_global_escape\n  js_global_unescape\n  math_mod\n  floor_div\n  js_Date_parse\nJS_ThisTimeValue\nJS_SetThisTimeValue\n  days_from_year\n  days_in_year\n  year_from_days\n  get_date_fields\n  time_clip\n  set_date_fields\n  get_date_field\n  set_date_field\n  get_date_string\n  date_now\n  js_date_constructor\n  js_Date_UTC\n  string_skip_spaces\n  string_skip_non_spaces\n  string_get_digits\n  string_get_signed_digits\n  string_get_fixed_width_digits\n  string_get_milliseconds\n  find_abbrev\n  string_get_month\n  js_Date_parse\n  js_Date_now\n  js_date_Symbol_toPrimitive\n  js_date_getTimezoneOffset\n  js_date_getTime\n  js_date_setTime\n  js_date_setYear\n  js_date_toJSON\nJS_AddIntrinsicDate\nJS_AddIntrinsicEval\n  js_operator_set_finalizer\n  js_operator_set_mark\n  js_operators_create_internal\n  js_operators_create\n  js_operators_updateBigIntOperators\n  js_operators_set_default\n  js_dummy_operators_ctor\n  js_global_operators\nJS_AddIntrinsicOperators\nJS_ToBigIntCtorFree\n  js_bigint_constructor\n  js_thisBigIntValue\n  js_bigint_toString\n  js_bigint_valueOf\n  js_bigint_div\n  js_bigint_sqrt\n  js_bigint_op1\n  js_bigint_asUintN\nJS_AddIntrinsicBigInt\n  js_thisBigFloatValue\n  js_bigfloat_toString\n  js_bigfloat_valueOf\n  bigfloat_get_rnd_mode\n  js_bigfloat_toFixed\n  js_bigfloat_is_finite\n  js_bigfloat_toExponential\n  js_bigfloat_toPrecision\n  js_bigfloat_constructor\n  js_bigfloat_get_const\n  js_bigfloat_parseFloat\n  js_bigfloat_isFinite\n  js_bigfloat_isNaN\n  js_bigfloat_fop\n  js_bigfloat_fop2\n  js_float_env_constructor\n  js_float_env_finalizer\n  js_float_env_get_prec\n  js_float_env_get_expBits\n  js_float_env_setPrec\n  js_float_env_proto_get_status\n  js_float_env_proto_set_status\n  js_float_env_clearStatus\nJS_AddIntrinsicBigFloat\nJS_ToBigDecimalFree\n  js_bigdecimal_constructor\n  js_thisBigDecimalValue\n  js_bigdecimal_toString\n  js_bigdecimal_valueOf\n  js_bigdecimal_get_rnd_mode\nBigDecimalEnv\n  js_bigdecimal_get_env\n  js_bigdecimal_fop\n  js_bigdecimal_toFixed\n  js_bigdecimal_toExponential\n  js_bigdecimal_toPrecision\nJS_AddIntrinsicBigDecimal\nJS_EnableBignumExt\nJS_AddIntrinsicBasicObjects\nJS_AddIntrinsicBaseObjects\n  js_array_buffer_constructor3\n  js_array_buffer_free\n  js_array_buffer_constructor2\n  js_array_buffer_constructor1\nJS_NewArrayBuffer\nJS_NewArrayBufferCopy\n  js_array_buffer_constructor\n  js_shared_array_buffer_constructor\n  js_array_buffer_finalizer\n  js_array_buffer_isView\nJS_ThrowTypeErrorDetachedArrayBuffer\n  js_array_buffer_get_byteLength\nJS_DetachArrayBuffer\n  js_get_array_buffer\nJS_GetArrayBuffer\n  js_array_buffer_slice\n  get_typed_array\n  typed_array_is_detached\n  typed_array_get_length\n  validate_typed_array\n  js_typed_array_get_length\n  js_typed_array_get_buffer\n  js_typed_array_get_byteLength\n  js_typed_array_get_byteOffset\nJS_GetTypedArrayBuffer\n  js_typed_array_get_toStringTag\n  js_typed_array_set_internal\n  js_typed_array_set\n  js_create_typed_array_iterator\n  js_typed_array_get_length_internal\n  js_typed_array_create\n  js_typed_array___speciesCreate\n  js_typed_array_from\n  js_typed_array_of\n  js_typed_array_copyWithin\n  js_typed_array_fill\n  js_typed_array_find\n  js_typed_array_indexOf\n  js_typed_array_join\n  js_typed_array_reverse\n  js_typed_array_slice\n  js_typed_array_subarray\n  js_cmp_doubles\n  js_TA_cmp_int8\n  js_TA_cmp_uint8\n  js_TA_cmp_int16\n  js_TA_cmp_uint16\n  js_TA_cmp_int32\n  js_TA_cmp_uint32\n  js_TA_cmp_int64\n  js_TA_cmp_uint64\n  js_TA_cmp_float32\n  js_TA_cmp_float64\n  js_TA_get_int8\n  js_TA_get_uint8\n  js_TA_get_int16\n  js_TA_get_uint16\n  js_TA_get_int32\n  js_TA_get_uint32\n  js_TA_get_int64\n  js_TA_get_uint64\n  js_TA_get_float32\n  js_TA_get_float64\nTA_sort_context\n  js_TA_cmp_generic\n  js_typed_array_sort\n  js_typed_array_base_constructor\n  typed_array_init\n  js_array_from_iterator\n  js_typed_array_constructor_obj\n  js_typed_array_constructor_ta\n  js_typed_array_constructor\n  js_typed_array_finalizer\n  js_typed_array_mark\n  js_dataview_constructor\n  js_dataview_getValue\n  js_dataview_setValue\nAtomicsOpEnum\n  js_atomics_get_ptr\n  js_atomics_op\nOP\nOP\n  js_atomics_store\n  js_atomics_isLockFree\nJSAtomicsWaiter\n  js_atomics_wait\n  js_atomics_notify\nJS_AddIntrinsicAtomics\nJS_AddIntrinsicTypedArrays\nJS_GetClassID\n  js_debugger_current_location\n  js_debugger_info\n  js_debugger_stack_depth\n  js_debugger_build_backtrace\n  js_debugger_check_breakpoint\n  js_debugger_local_variables\n  js_debugger_closure_variables\n  js_debugger_eval\n  js_debugger_evaluate",
			"settings":
			{
				"buffer_size": 34925,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								368,
								374
							],
							[
								760,
								782
							],
							[
								831,
								844
							],
							[
								885,
								903
							],
							[
								1240,
								1250
							],
							[
								1619,
								1636
							],
							[
								1726,
								1748
							],
							[
								1851,
								1867
							],
							[
								2107,
								2127
							],
							[
								2702,
								2722
							],
							[
								3403,
								3423
							],
							[
								3654,
								3673
							],
							[
								7743,
								7765
							],
							[
								9313,
								9335
							],
							[
								9540,
								9555
							],
							[
								9669,
								9695
							],
							[
								10139,
								10175
							],
							[
								10577,
								10599
							],
							[
								10918,
								10940
							],
							[
								11952,
								11973
							],
							[
								12458,
								12478
							],
							[
								14042,
								14062
							],
							[
								15204,
								15232
							],
							[
								17497,
								17520
							],
							[
								17906,
								17929
							],
							[
								19289,
								19312
							],
							[
								21090,
								21111
							],
							[
								21373,
								21396
							],
							[
								23085,
								23107
							],
							[
								23855,
								23878
							],
							[
								33487,
								33509
							],
							[
								35887,
								35897
							],
							[
								36808,
								36827
							],
							[
								37216,
								37231
							],
							[
								37425,
								37452
							],
							[
								37502,
								37529
							],
							[
								37810,
								37831
							],
							[
								38063,
								38078
							],
							[
								39317,
								39331
							]
						],
						"symlist":
						[
							"isatty",
							"INSPECT_INT32T_INRANGE",
							"INSPECT_LEVEL",
							"INSPECT_IS_COMPACT",
							"prop_key_t",
							"inspect_options_t",
							"js_inspect_print_value",
							"regexp_predicate",
							"inspect_screen_width",
							"inspect_options_init",
							"inspect_options_free",
							"inspect_options_get",
							"inspect_options_object",
							"inspect_options_hidden",
							"inspect_newline",
							"js_object_getpropertynames",
							"js_object_getpropertynames_recursive",
							"js_inspect_custom_atom",
							"js_inspect_custom_call",
							"js_inspect_print_date",
							"js_inspect_print_map",
							"js_inspect_print_set",
							"js_inspect_print_arraybuffer",
							"js_inspect_print_regexp",
							"js_inspect_print_number",
							"js_inspect_print_string",
							"js_inspect_print_atom",
							"js_inspect_print_module",
							"js_inspect_print_error",
							"js_inspect_print_object",
							"js_inspect_print_value",
							"js_inspect",
							"js_inspect_tostring",
							"js_inspect_atom",
							"js_debugger_build_backtrace",
							"js_inspect_stacktrace_value",
							"js_inspect_stacktrace",
							"js_inspect_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABLAgAARFVNUApBUkdOClNFUEFSQVRPUgpTRVBBUkFUT1IKU0VQQVJBVE9SClZBUgpWQVIKVkFSCkEKU0VQQVJBVE9SCkEKVkFSCkEKQVJHTgpDQU5PTklDQUxJWkUKU1RSClRNUF9TVFIKVE1QX1NUUgpPVVRQVVRfVkFSClRNUF9TVFIKQkFTRU5BTUUKU1RSCkFSR04KVE1QX1NUUgpPVVRQVVRfVkFSClRNUF9TVFIKQUREUFJFRklYCk9VVFBVVApBUkdOClBSRUZJWApBUkcKQVJHTgpPVVRQVVRfVkFSCk9VVFBVVApBRERTVUZGSVgKT1VUUFVUCkFSR04KQVJHClNVRkZJWApBUkdOCk9VVFBVVF9WQVIKT1VUUFVUClJFTEFUSVZFX1BBVEgKTElTVApBUkdOClJFTEFUSVZFX1RPCkFSRwpBUkcKQVJHTgpPVVRfVkFSCkxJU1QKQVBQRU5EX1BBUkVOVApMSVNUClZBUgpBUkdOClZBUgpMSVNUCkNIRUNLX0ZVTkNUSU9OX0RFRgpGVU5DCkZVTkNfVQpSRVNVTFRfVkFSCkFSR04KRlVOQwpSRVNVTFRfVkFSClJFU1VMVF9WQVIKUkVTVUxUX1ZBUgpGVU5DClJFU1VMVF9WQVIKQ0hFQ0tfRlVOQ1RJT05TCkFSR04KRlVOQwpGVU5DClJFU1VMVF9WQVIKQVJHTgpDSEVDS19JTkNMVURFUwpBUkdOCklOQwpSRVNVTFRfVkFSCklOQwpSRVNVTFRfVkFSCkFSR04AAAAAAAAAAH0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								828,
								848
							],
							[
								1038,
								1054
							],
							[
								1108,
								1127
							],
							[
								1162,
								1178
							],
							[
								1238,
								1254
							],
							[
								1317,
								1351
							],
							[
								1374,
								1406
							],
							[
								1429,
								1472
							],
							[
								3301,
								3320
							],
							[
								3418,
								3434
							],
							[
								3496,
								3514
							],
							[
								3578,
								3597
							],
							[
								3662,
								3671
							],
							[
								3726,
								3743
							],
							[
								3806,
								3823
							],
							[
								3886,
								3900
							],
							[
								3960,
								3975
							],
							[
								4036,
								4051
							],
							[
								4112,
								4120
							],
							[
								4174,
								4186
							],
							[
								4244,
								4254
							],
							[
								4310,
								4321
							],
							[
								4378,
								4386
							],
							[
								4440,
								4462
							],
							[
								4530,
								4545
							],
							[
								4606,
								4628
							],
							[
								4696,
								4712
							],
							[
								4774,
								4790
							],
							[
								4852,
								4864
							],
							[
								4922,
								4934
							],
							[
								4992,
								5005
							],
							[
								5064,
								5082
							],
							[
								5140,
								5158
							],
							[
								5222,
								5244
							],
							[
								5312,
								5339
							],
							[
								5412,
								5429
							],
							[
								5486,
								5503
							],
							[
								5560,
								5577
							],
							[
								5624,
								5640
							],
							[
								5723,
								5739
							],
							[
								5811,
								5827
							],
							[
								5899,
								5916
							],
							[
								5973,
								5993
							],
							[
								6052,
								6072
							],
							[
								6231,
								6250
							],
							[
								6326,
								6333
							],
							[
								6362,
								6382
							],
							[
								6452,
								6467
							],
							[
								6528,
								6554
							],
							[
								6625,
								6641
							],
							[
								6697,
								6710
							],
							[
								6782,
								6808
							],
							[
								6854,
								6879
							],
							[
								6964,
								7006
							],
							[
								7140,
								7180
							],
							[
								10109,
								10152
							],
							[
								10533,
								10568
							],
							[
								10724,
								10742
							],
							[
								10772,
								10777
							],
							[
								10867,
								10894
							],
							[
								11013,
								11048
							],
							[
								11109,
								11113
							],
							[
								11129,
								11133
							],
							[
								11160,
								11169
							],
							[
								11332,
								11365
							],
							[
								11419,
								11451
							],
							[
								11615,
								11639
							],
							[
								11795,
								11816
							],
							[
								11886,
								11892
							],
							[
								11909,
								11925
							],
							[
								11988,
								11994
							],
							[
								12007,
								12023
							],
							[
								12071,
								12101
							],
							[
								12333,
								12360
							],
							[
								12391,
								12418
							],
							[
								12517,
								12544
							],
							[
								12768,
								12792
							],
							[
								12842,
								12846
							],
							[
								12886,
								12913
							],
							[
								13143,
								13163
							],
							[
								13193,
								13204
							],
							[
								13303,
								13338
							],
							[
								13378,
								13396
							],
							[
								13583,
								13604
							],
							[
								13628,
								13638
							],
							[
								13677,
								13707
							],
							[
								14255,
								14289
							],
							[
								14590,
								14624
							],
							[
								14844,
								14878
							],
							[
								14944,
								14980
							],
							[
								15055,
								15072
							],
							[
								15231,
								15268
							],
							[
								15269,
								15283
							],
							[
								15289,
								15293
							],
							[
								15368,
								15400
							],
							[
								15428,
								15454
							],
							[
								15779,
								15801
							],
							[
								15839,
								15855
							],
							[
								15870,
								15877
							],
							[
								15899,
								15915
							],
							[
								15953,
								15981
							],
							[
								16200,
								16217
							],
							[
								16218,
								16227
							],
							[
								16279,
								16296
							],
							[
								16297,
								16306
							],
							[
								16366,
								16383
							],
							[
								16384,
								16407
							],
							[
								16463,
								16487
							],
							[
								19114,
								19142
							],
							[
								19573,
								19577
							],
							[
								19705,
								19718
							],
							[
								20034,
								20046
							],
							[
								20309,
								20322
							],
							[
								20427,
								20441
							],
							[
								21334,
								21362
							],
							[
								21478,
								21491
							],
							[
								21603,
								21629
							],
							[
								21824,
								21872
							],
							[
								21920,
								22032
							],
							[
								22137,
								22160
							],
							[
								22304,
								22356
							],
							[
								22450,
								22466
							],
							[
								22550,
								22561
							],
							[
								22674,
								22678
							],
							[
								22957,
								22990
							],
							[
								23104,
								23156
							],
							[
								23330,
								23366
							],
							[
								23523,
								23539
							],
							[
								23553,
								23575
							],
							[
								23688,
								23694
							],
							[
								25056,
								25098
							],
							[
								25293,
								25324
							],
							[
								25374,
								25416
							],
							[
								25536,
								25560
							],
							[
								25780,
								25790
							],
							[
								25843,
								25847
							],
							[
								25886,
								25913
							],
							[
								25960,
								25972
							],
							[
								26042,
								26054
							],
							[
								26117,
								26142
							],
							[
								26187,
								26218
							],
							[
								26229,
								26246
							],
							[
								26387,
								26422
							],
							[
								26470,
								26497
							],
							[
								26588,
								26626
							],
							[
								26835,
								26862
							],
							[
								27065,
								27079
							],
							[
								27128,
								27134
							],
							[
								27175,
								27194
							],
							[
								27245,
								27253
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterator(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function memoize(fn, cache = {})",
							" function Memoize(n, ...rest)",
							" function getset(target)",
							"GetSet = (...args) =>",
							"key =>",
							" (key, value) =>",
							"key =>",
							" (key, value) =>",
							" function gettersetter(target)",
							"gettersetter = (...args) =>",
							"gettersetter = (...args) =>",
							"gettersetter = (...args) =>",
							" function hasGetSet(obj)",
							"m =>",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function mod(a, b)",
							"b : n =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AwAAICBpc2F0dHkKSU5TUEVDVF9JTlQzMlRfSU5SQU5HRQpJTlNQRUNUX0xFVkVMCklOU1BFQ1RfSVNfQ09NUEFDVAogIHByb3Bfa2V5X3QKICBpbnNwZWN0X29wdGlvbnNfdAogIGpzX2luc3BlY3RfcHJpbnRfdmFsdWUKICByZWdleHBfcHJlZGljYXRlCiAgaW5zcGVjdF9zY3JlZW5fd2lkdGgKICBpbnNwZWN0X29wdGlvbnNfaW5pdAogIGluc3BlY3Rfb3B0aW9uc19mcmVlCiAgaW5zcGVjdF9vcHRpb25zX2dldAogIGluc3BlY3Rfb3B0aW9uc19vYmplY3QKICBpbnNwZWN0X29wdGlvbnNfaGlkZGVuCiAgaW5zcGVjdF9uZXdsaW5lCiAganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMKICBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUKICBqc19pbnNwZWN0X2N1c3RvbV9hdG9tCiAganNfaW5zcGVjdF9jdXN0b21fY2FsbAogIGpzX2luc3BlY3RfcHJpbnRfZGF0ZQogIGpzX2luc3BlY3RfcHJpbnRfbWFwCiAganNfaW5zcGVjdF9wcmludF9zZXQKICBqc19pbnNwZWN0X3ByaW50X2FycmF5YnVmZmVyCiAganNfaW5zcGVjdF9wcmludF9yZWdleHAKICBqc19pbnNwZWN0X3ByaW50X251bWJlcgogIGpzX2luc3BlY3RfcHJpbnRfc3RyaW5nCiAganNfaW5zcGVjdF9wcmludF9hdG9tCiAganNfaW5zcGVjdF9wcmludF9tb2R1bGUKICBqc19pbnNwZWN0X3ByaW50X2Vycm9yCiAganNfaW5zcGVjdF9wcmludF9vYmplY3QKICBqc19pbnNwZWN0X3ByaW50X3ZhbHVlCiAganNfaW5zcGVjdAogIGpzX2luc3BlY3RfdG9zdHJpbmcKICBqc19pbnNwZWN0X2F0b20KICBqc19kZWJ1Z2dlcl9idWlsZF9iYWNrdHJhY2UKICBqc19pbnNwZWN0X3N0YWNrdHJhY2VfdmFsdWUKICBqc19pbnNwZWN0X3N0YWNrdHJhY2UKICBqc19pbnNwZWN0X2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAABYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
						"symkeys":
						[
							[
								9,
								13
							],
							[
								31,
								35
							],
							[
								48,
								57
							],
							[
								83,
								92
							],
							[
								116,
								125
							],
							[
								152,
								155
							],
							[
								162,
								165
							],
							[
								217,
								220
							],
							[
								264,
								265
							],
							[
								301,
								310
							],
							[
								318,
								319
							],
							[
								340,
								343
							],
							[
								349,
								350
							],
							[
								373,
								377
							],
							[
								408,
								420
							],
							[
								485,
								488
							],
							[
								535,
								542
							],
							[
								566,
								573
							],
							[
								595,
								605
							],
							[
								611,
								618
							],
							[
								686,
								694
							],
							[
								754,
								757
							],
							[
								802,
								806
							],
							[
								825,
								832
							],
							[
								860,
								870
							],
							[
								876,
								883
							],
							[
								948,
								957
							],
							[
								983,
								989
							],
							[
								1010,
								1014
							],
							[
								1043,
								1049
							],
							[
								1052,
								1055
							],
							[
								1078,
								1082
							],
							[
								1094,
								1104
							],
							[
								1110,
								1116
							],
							[
								1184,
								1193
							],
							[
								1219,
								1225
							],
							[
								1246,
								1250
							],
							[
								1279,
								1282
							],
							[
								1285,
								1291
							],
							[
								1314,
								1318
							],
							[
								1330,
								1340
							],
							[
								1346,
								1352
							],
							[
								1420,
								1433
							],
							[
								1461,
								1465
							],
							[
								1487,
								1491
							],
							[
								1524,
								1535
							],
							[
								1541,
								1544
							],
							[
								1572,
								1575
							],
							[
								1598,
								1602
							],
							[
								1615,
								1622
							],
							[
								1628,
								1632
							],
							[
								1703,
								1716
							],
							[
								1728,
								1732
							],
							[
								1738,
								1741
							],
							[
								1767,
								1771
							],
							[
								1783,
								1786
							],
							[
								1792,
								1796
							],
							[
								1851,
								1859
							],
							[
								1894,
								1898
							],
							[
								1904,
								1909
							],
							[
								1926,
								1931
							],
							[
								1953,
								1959
							],
							[
								1975,
								1980
							],
							[
								2002,
								2008
							],
							[
								2026,
								2031
							],
							[
								2083,
								2087
							],
							[
								2103,
								2107
							],
							[
								2122,
								2127
							],
							[
								2143,
								2149
							],
							[
								2171,
								2175
							],
							[
								2190,
								2195
							],
							[
								2223,
								2227
							],
							[
								2260,
								2266
							],
							[
								2272,
								2278
							],
							[
								2345,
								2355
							],
							[
								2368,
								2374
							],
							[
								2380,
								2384
							],
							[
								2406,
								2410
							],
							[
								2436,
								2440
							],
							[
								2496,
								2500
							],
							[
								2545,
								2549
							],
							[
								2561,
								2565
							],
							[
								2571,
								2577
							]
						],
						"symlist":
						[
							"DUMP",
							"ARGN",
							"SEPARATOR",
							"SEPARATOR",
							"SEPARATOR",
							"VAR",
							"VAR",
							"VAR",
							"A",
							"SEPARATOR",
							"A",
							"VAR",
							"A",
							"ARGN",
							"CANONICALIZE",
							"STR",
							"TMP_STR",
							"TMP_STR",
							"OUTPUT_VAR",
							"TMP_STR",
							"BASENAME",
							"STR",
							"ARGN",
							"TMP_STR",
							"OUTPUT_VAR",
							"TMP_STR",
							"ADDPREFIX",
							"OUTPUT",
							"ARGN",
							"PREFIX",
							"ARG",
							"ARGN",
							"OUTPUT_VAR",
							"OUTPUT",
							"ADDSUFFIX",
							"OUTPUT",
							"ARGN",
							"ARG",
							"SUFFIX",
							"ARGN",
							"OUTPUT_VAR",
							"OUTPUT",
							"RELATIVE_PATH",
							"LIST",
							"ARGN",
							"RELATIVE_TO",
							"ARG",
							"ARG",
							"ARGN",
							"OUT_VAR",
							"LIST",
							"APPEND_PARENT",
							"LIST",
							"VAR",
							"ARGN",
							"VAR",
							"LIST",
							"CONTAINS",
							"LIST",
							"VALUE",
							"INDEX",
							"RESULT",
							"INDEX",
							"RESULT",
							"INDEX",
							"LIST",
							"ITEM",
							"VALUE",
							"RESULT",
							"ITEM",
							"VALUE",
							"LIST",
							"OUTPUT",
							"RESULT",
							"ADD_UNIQUE",
							"RESULT",
							"LIST",
							"ARGN",
							"ITEM",
							"ITEM",
							"ARGN",
							"LIST",
							"RESULT"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWDAAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzQ29uc3RydWN0b3IodikKICBpc0l0ZXJhdG9yKHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpCiAgY3RvcgogIGN0b3IKICBzdXBlckN0b3IKICBtZW1vaXplKGZuLCBjYWNoZSA9IHt9KQpNZW1vaXplKG4sIC4uLnJlc3QpCiAgZ2V0c2V0KHRhcmdldCkKR2V0U2V0ID0gKC4uLmFyZ3MpID0+CiAga2V5ID0+CiAgKGtleSwgdmFsdWUpID0+CiAga2V5ID0+CiAgKGtleSwgdmFsdWUpID0+CiAgZ2V0dGVyc2V0dGVyKHRhcmdldCkKICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBoYXNHZXRTZXQob2JqKQogIG0gPT4KICBtYXBPYmplY3QodGFyZ2V0KQogIHNldDogKGtleSwgdmFsdWUpID0+CiAgZ2V0OiBrZXkgPT4KICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCiAgZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHdlYWtBc3NpZ24ob2JqLCAuLi5hcmdzKQogIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgcHJlZCA9IChlbCwgaSkgPT4KICAoZiwgYXJyID0gW10sIGxlbmd0aCA9IGYubGVuZ3RoKSA9PgogICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAoZWwsIGksIGFycikgPT4KICBpdGVtID0+CiAgKGVsLCBpLCBhcnIpID0+CiAgZ2V0RnVuY3Rpb25Bcmd1bWVudHMgPSBmbiA9PgogIChvZmZzZXQgPSAwKSA9PgogIGNvZGUgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgZ2V0QW5zaVN0eWxlcygpCiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGMgPT4KICB2YWx1ZTogaGV4ID0+CiAgY2hhcmFjdGVyID0+CiAgdmFsdWU6IGhleCA9PgogIHZhbHVlOiBjb2RlID0+CiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIHZhbHVlOiBoZXggPT4KICByYW5kSW50KC4uLmFyZ3MpCiAgcmFuZEZsb2F0KG1pbiwgbWF4LCBybmcgPSBNYXRoLnJhbmRvbSkKICByYW5kU3RyKG4sIHNldCA9ICdfMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonLCBybmcgPSBNYXRoLnJhbmRvbSkKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogIGZ1bmN0aW9uKCkKICB2ID0+CiAgcmVwbGFjZVByb3BlcnR5KHZhbHVlKQogIGxhenlQcm9wZXJ0aWVzKG9iaiwgZ2V0dGVyc09iaiwgb3B0cyA9IHt9KQogIGdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGFyZyA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgb3B0ID0+CiAgdG9Vbml4VGltZShkYXRlT2JqLCB1dGMgPSBmYWxzZSkKICB1bml4VGltZSh1dGMgPSBmYWxzZSkKICBmcm9tVW5peFRpbWUoZXBvY2gsIHV0YyA9IGZhbHNlKQogIHJhbmdlKC4uLmFyZ3MpCiAgKHYsIGspID0+CiAgbiA9PgogIHJlcGVhdGVyKG4sIHdoYXQpCigpCigpCiAgcmVwZWF0KG4sIHdoYXQpCiAgY2h1bmtBcnJheShhcnIsIHNpemUpCiAgZm4gPSAoYSwgdiwgaSkgPT4KICBjYW1lbGl6ZShzdHIsIGRlbGltID0gJycpCiAgKG1hdGNoLCBwMSwgcDIsIG9mZnNldCkgPT4KICBkZWNhbWVsaXplKHN0ciwgZGVsaW0gPSAnLScpCiAgYXJyYXlzSW5Db21tb24oYSkKKGl0bSwgaW5keCkgPT4KICBhcnIgPT4KICBtb2QoYSwgYikKICBiIDogbiA9PgAAAAAAAAAAIAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgAgAARFVNUApBUkdOClNFUEFSQVRPUgpTRVBBUkFUT1IKU0VQQVJBVE9SClZBUgpWQVIKVkFSCkEKU0VQQVJBVE9SCkEKVkFSCkEKQVJHTgpDQU5PTklDQUxJWkUKU1RSClRNUF9TVFIKVE1QX1NUUgpPVVRQVVRfVkFSClRNUF9TVFIKQkFTRU5BTUUKU1RSCkFSR04KVE1QX1NUUgpPVVRQVVRfVkFSClRNUF9TVFIKQUREUFJFRklYCk9VVFBVVApBUkdOClBSRUZJWApBUkcKQVJHTgpPVVRQVVRfVkFSCk9VVFBVVApBRERTVUZGSVgKT1VUUFVUCkFSR04KQVJHClNVRkZJWApBUkdOCk9VVFBVVF9WQVIKT1VUUFVUClJFTEFUSVZFX1BBVEgKTElTVApBUkdOClJFTEFUSVZFX1RPCkFSRwpBUkcKQVJHTgpPVVRfVkFSCkxJU1QKQVBQRU5EX1BBUkVOVApMSVNUClZBUgpBUkdOClZBUgpMSVNUCkNPTlRBSU5TCkxJU1QKVkFMVUUKSU5ERVgKUkVTVUxUCklOREVYClJFU1VMVApJTkRFWApMSVNUCklURU0KVkFMVUUKUkVTVUxUCklURU0KVkFMVUUKTElTVApPVVRQVVQKUkVTVUxUCkFERF9VTklRVUUKUkVTVUxUCkxJU1QKQVJHTgpJVEVNCklURU0KQVJHTgpMSVNUClJFU1VMVAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
						"symkeys":
						[
							[
								9,
								13
							],
							[
								31,
								35
							],
							[
								48,
								57
							],
							[
								83,
								92
							],
							[
								116,
								125
							],
							[
								152,
								155
							],
							[
								162,
								165
							],
							[
								217,
								220
							],
							[
								264,
								265
							],
							[
								301,
								310
							],
							[
								318,
								319
							],
							[
								340,
								343
							],
							[
								349,
								350
							],
							[
								373,
								377
							],
							[
								408,
								420
							],
							[
								485,
								488
							],
							[
								535,
								542
							],
							[
								566,
								573
							],
							[
								595,
								605
							],
							[
								611,
								618
							],
							[
								686,
								694
							],
							[
								754,
								757
							],
							[
								802,
								806
							],
							[
								825,
								832
							],
							[
								860,
								870
							],
							[
								876,
								883
							],
							[
								948,
								957
							],
							[
								983,
								989
							],
							[
								1010,
								1014
							],
							[
								1043,
								1049
							],
							[
								1052,
								1055
							],
							[
								1078,
								1082
							],
							[
								1094,
								1104
							],
							[
								1110,
								1116
							],
							[
								1184,
								1193
							],
							[
								1219,
								1225
							],
							[
								1246,
								1250
							],
							[
								1279,
								1282
							],
							[
								1285,
								1291
							],
							[
								1314,
								1318
							],
							[
								1330,
								1340
							],
							[
								1346,
								1352
							],
							[
								1420,
								1433
							],
							[
								1461,
								1465
							],
							[
								1487,
								1491
							],
							[
								1524,
								1535
							],
							[
								1541,
								1544
							],
							[
								1572,
								1575
							],
							[
								1598,
								1602
							],
							[
								1615,
								1622
							],
							[
								1628,
								1632
							],
							[
								1703,
								1716
							],
							[
								1728,
								1732
							],
							[
								1738,
								1741
							],
							[
								1767,
								1771
							],
							[
								1783,
								1786
							],
							[
								1792,
								1796
							],
							[
								1848,
								1866
							],
							[
								1893,
								1897
							],
							[
								1986,
								1992
							],
							[
								2036,
								2046
							],
							[
								2050,
								2054
							],
							[
								2202,
								2206
							],
							[
								2212,
								2222
							],
							[
								2235,
								2245
							],
							[
								2260,
								2270
							],
							[
								2302,
								2306
							],
							[
								2413,
								2423
							],
							[
								2479,
								2494
							],
							[
								2513,
								2517
							],
							[
								2547,
								2551
							],
							[
								2592,
								2596
							],
							[
								2602,
								2612
							],
							[
								2636,
								2640
							],
							[
								2676,
								2690
							],
							[
								2708,
								2712
							],
							[
								2742,
								2745
							],
							[
								2819,
								2829
							],
							[
								2913,
								2916
							],
							[
								2922,
								2932
							],
							[
								2955,
								2959
							]
						],
						"symlist":
						[
							"DUMP",
							"ARGN",
							"SEPARATOR",
							"SEPARATOR",
							"SEPARATOR",
							"VAR",
							"VAR",
							"VAR",
							"A",
							"SEPARATOR",
							"A",
							"VAR",
							"A",
							"ARGN",
							"CANONICALIZE",
							"STR",
							"TMP_STR",
							"TMP_STR",
							"OUTPUT_VAR",
							"TMP_STR",
							"BASENAME",
							"STR",
							"ARGN",
							"TMP_STR",
							"OUTPUT_VAR",
							"TMP_STR",
							"ADDPREFIX",
							"OUTPUT",
							"ARGN",
							"PREFIX",
							"ARG",
							"ARGN",
							"OUTPUT_VAR",
							"OUTPUT",
							"ADDSUFFIX",
							"OUTPUT",
							"ARGN",
							"ARG",
							"SUFFIX",
							"ARGN",
							"OUTPUT_VAR",
							"OUTPUT",
							"RELATIVE_PATH",
							"LIST",
							"ARGN",
							"RELATIVE_TO",
							"ARG",
							"ARG",
							"ARGN",
							"OUT_VAR",
							"LIST",
							"APPEND_PARENT",
							"LIST",
							"VAR",
							"ARGN",
							"VAR",
							"LIST",
							"CHECK_FUNCTION_DEF",
							"FUNC",
							"FUNC_U",
							"RESULT_VAR",
							"ARGN",
							"FUNC",
							"RESULT_VAR",
							"RESULT_VAR",
							"RESULT_VAR",
							"FUNC",
							"RESULT_VAR",
							"CHECK_FUNCTIONS",
							"ARGN",
							"FUNC",
							"FUNC",
							"RESULT_VAR",
							"ARGN",
							"CHECK_INCLUDES",
							"ARGN",
							"INC",
							"RESULT_VAR",
							"INC",
							"RESULT_VAR",
							"ARGN"
						]
					},
					"AQAAAAAAAAAAAAAASwIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								118
							],
							[
								437,
								441
							],
							[
								536,
								567
							],
							[
								1274,
								1281
							],
							[
								1397,
								1414
							],
							[
								1429,
								1451
							],
							[
								1485,
								1493
							],
							[
								1563,
								1586
							],
							[
								1638,
								1656
							],
							[
								1741,
								1771
							],
							[
								1926,
								1949
							],
							[
								1950,
								1971
							],
							[
								2312,
								2326
							],
							[
								2816,
								2850
							],
							[
								3213,
								3265
							],
							[
								3306,
								3339
							],
							[
								3519,
								3569
							],
							[
								3615,
								3661
							],
							[
								3769,
								3822
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							"printFunction = out =>",
							" text =>",
							"outputFunction = out =>",
							" function(...args)",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABLAgAARFVNUApBUkdOClNFUEFSQVRPUgpTRVBBUkFUT1IKU0VQQVJBVE9SClZBUgpWQVIKVkFSCkEKU0VQQVJBVE9SCkEKVkFSCkEKQVJHTgpDQU5PTklDQUxJWkUKU1RSClRNUF9TVFIKVE1QX1NUUgpPVVRQVVRfVkFSClRNUF9TVFIKQkFTRU5BTUUKU1RSCkFSR04KVE1QX1NUUgpPVVRQVVRfVkFSClRNUF9TVFIKQUREUFJFRklYCk9VVFBVVApBUkdOClBSRUZJWApBUkcKQVJHTgpPVVRQVVRfVkFSCk9VVFBVVApBRERTVUZGSVgKT1VUUFVUCkFSR04KQVJHClNVRkZJWApBUkdOCk9VVFBVVF9WQVIKT1VUUFVUClJFTEFUSVZFX1BBVEgKTElTVApBUkdOClJFTEFUSVZFX1RPCkFSRwpBUkcKQVJHTgpPVVRfVkFSCkxJU1QKQVBQRU5EX1BBUkVOVApMSVNUClZBUgpBUkdOClZBUgpMSVNUCkNIRUNLX0ZVTkNUSU9OX0RFRgpGVU5DCkZVTkNfVQpSRVNVTFRfVkFSCkFSR04KRlVOQwpSRVNVTFRfVkFSClJFU1VMVF9WQVIKUkVTVUxUX1ZBUgpGVU5DClJFU1VMVF9WQVIKQ0hFQ0tfRlVOQ1RJT05TCkFSR04KRlVOQwpGVU5DClJFU1VMVF9WQVIKQVJHTgpDSEVDS19JTkNMVURFUwpBUkdOCklOQwpSRVNVTFRfVkFSCklOQwpSRVNVTFRfVkFSCkFSR04AAAAAAAAAAPoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAQ29uc29sZSguLi5hcmdzKQogIGYgPT4KICBjb25zb2xlV2lkdGggPSAoZmQgPSB0ZXJtRmQpID0+CkNvbnNvbGUKICAuaW5zcGVjdCA9IGFyZyA9PgogIHByaW50RnVuY3Rpb24gPSBvdXQgPT4KICB0ZXh0ID0+CiAgb3V0cHV0RnVuY3Rpb24gPSBvdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQogIGluc3BlY3RGdW5jdGlvbiA9ICguLi5hcmdzKSA9PgogIGxvZ0Z1bmN0aW9uID0gb3V0cHV0ID0+CiAgZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMKICBhZGRNaXNzaW5nTWV0aG9kcyhjb25zKQpDb25zb2xlLnByb3RvdHlwZS5jb25maWcgPSBmdW5jdGlvbiBjb25maWcob2JqID0ge30pCkNvbnNvbGVPcHRpb25zKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucy5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpCkNvbnNvbGVTZXR1cChpbnNwZWN0T3B0aW9ucyA9IHt9LCBjYWxsYmFjaykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
						"symkeys":
						[
							[
								1368,
								1377
							],
							[
								1416,
								1427
							],
							[
								1528,
								1544
							],
							[
								1603,
								1612
							],
							[
								1628,
								1639
							],
							[
								1686,
								1702
							],
							[
								1763,
								1772
							],
							[
								1799,
								1808
							],
							[
								1834,
								1842
							],
							[
								1867,
								1874
							],
							[
								1893,
								1902
							],
							[
								1921,
								1927
							],
							[
								1983,
								1995
							],
							[
								2015,
								2027
							],
							[
								2736,
								2752
							],
							[
								3126,
								3133
							],
							[
								3167,
								3179
							],
							[
								3190,
								3206
							],
							[
								3318,
								3339
							],
							[
								3371,
								3387
							],
							[
								3425,
								3442
							],
							[
								3474,
								3494
							],
							[
								3534,
								3550
							],
							[
								3593,
								3601
							],
							[
								3662,
								3670
							],
							[
								3721,
								3738
							],
							[
								3847,
								3862
							],
							[
								3959,
								3974
							],
							[
								4050,
								4057
							],
							[
								4098,
								4114
							],
							[
								4143,
								4159
							],
							[
								4180,
								4197
							],
							[
								4218,
								4234
							],
							[
								4268,
								4276
							],
							[
								4339,
								4347
							],
							[
								4513,
								4533
							],
							[
								4770,
								4785
							],
							[
								5081,
								5098
							],
							[
								5265,
								5286
							],
							[
								5449,
								5464
							],
							[
								5665,
								5677
							],
							[
								5740,
								5747
							],
							[
								5788,
								5804
							],
							[
								5909,
								5930
							],
							[
								5962,
								5978
							],
							[
								6004,
								6021
							],
							[
								6047,
								6067
							],
							[
								6095,
								6111
							],
							[
								6136,
								6144
							],
							[
								6215,
								6223
							],
							[
								6289,
								6306
							],
							[
								6449,
								6464
							],
							[
								6588,
								6603
							],
							[
								6831,
								6851
							],
							[
								6921,
								6943
							],
							[
								7046,
								7062
							],
							[
								7107,
								7126
							],
							[
								7171,
								7193
							],
							[
								10188,
								10201
							],
							[
								10459,
								10476
							],
							[
								10511,
								10527
							],
							[
								10541,
								10554
							],
							[
								10610,
								10627
							],
							[
								10667,
								10684
							],
							[
								10720,
								10737
							],
							[
								10828,
								10846
							],
							[
								10994,
								11011
							],
							[
								11039,
								11053
							],
							[
								11103,
								11117
							],
							[
								11140,
								11159
							],
							[
								11181,
								11200
							],
							[
								11299,
								11311
							],
							[
								11375,
								11383
							],
							[
								11408,
								11423
							],
							[
								11470,
								11483
							],
							[
								11505,
								11519
							],
							[
								11546,
								11559
							],
							[
								11583,
								11602
							],
							[
								11625,
								11644
							],
							[
								11687,
								11700
							],
							[
								11723,
								11739
							],
							[
								11798,
								11814
							],
							[
								11952,
								11968
							],
							[
								11990,
								12016
							],
							[
								12039,
								12058
							],
							[
								12081,
								12100
							],
							[
								12123,
								12153
							],
							[
								12176,
								12205
							],
							[
								12228,
								12249
							],
							[
								12272,
								12291
							],
							[
								12314,
								12334
							],
							[
								12357,
								12378
							],
							[
								12401,
								12427
							],
							[
								12450,
								12472
							],
							[
								12495,
								12516
							],
							[
								12539,
								12562
							],
							[
								12585,
								12610
							],
							[
								12667,
								12691
							],
							[
								12738,
								12756
							],
							[
								12799,
								12823
							],
							[
								12901,
								12913
							],
							[
								12948,
								12958
							],
							[
								12992,
								13005
							],
							[
								13053,
								13077
							],
							[
								13117,
								13130
							],
							[
								13167,
								13176
							],
							[
								13212,
								13219
							],
							[
								13254,
								13264
							],
							[
								13313,
								13334
							],
							[
								13375,
								13386
							],
							[
								13450,
								13460
							],
							[
								13497,
								13506
							],
							[
								13547,
								13557
							],
							[
								14155,
								14168
							],
							[
								14176,
								14197
							],
							[
								14237,
								14255
							],
							[
								14357,
								14370
							],
							[
								14424,
								14434
							],
							[
								14476,
								14492
							],
							[
								14529,
								14539
							],
							[
								14572,
								14583
							],
							[
								14616,
								14629
							],
							[
								14664,
								14678
							],
							[
								14717,
								14732
							],
							[
								14775,
								14791
							],
							[
								14829,
								14843
							],
							[
								14982,
								14996
							],
							[
								15105,
								15125
							],
							[
								16704,
								16724
							],
							[
								17630,
								17640
							],
							[
								17653,
								17666
							],
							[
								17700,
								17713
							],
							[
								17735,
								17746
							],
							[
								17816,
								17836
							],
							[
								17919,
								17926
							],
							[
								18039,
								18046
							],
							[
								18152,
								18159
							],
							[
								18280,
								18287
							],
							[
								18491,
								18498
							],
							[
								18687,
								18701
							],
							[
								18738,
								18753
							],
							[
								18807,
								18814
							],
							[
								19206,
								19217
							],
							[
								19348,
								19359
							],
							[
								19484,
								19497
							],
							[
								19608,
								19623
							],
							[
								19736,
								19745
							],
							[
								19834,
								19843
							],
							[
								19932,
								19946
							],
							[
								20040,
								20054
							],
							[
								20161,
								20179
							],
							[
								20290,
								20301
							],
							[
								20392,
								20403
							],
							[
								20494,
								20505
							],
							[
								20582,
								20590
							],
							[
								20629,
								20644
							],
							[
								20670,
								20680
							],
							[
								20721,
								20745
							],
							[
								20771,
								20782
							],
							[
								20808,
								20830
							],
							[
								20856,
								20872
							],
							[
								20946,
								20962
							],
							[
								21034,
								21050
							],
							[
								21127,
								21143
							],
							[
								21216,
								21232
							],
							[
								21308,
								21327
							],
							[
								21351,
								21365
							],
							[
								21413,
								21425
							],
							[
								21632,
								21648
							],
							[
								21695,
								21709
							],
							[
								21934,
								21945
							],
							[
								22150,
								22163
							],
							[
								22349,
								22358
							],
							[
								22431,
								22441
							],
							[
								22510,
								22521
							],
							[
								22627,
								22637
							],
							[
								22692,
								22702
							],
							[
								22758,
								22770
							],
							[
								22871,
								22884
							],
							[
								22983,
								22996
							],
							[
								23056,
								23071
							],
							[
								23128,
								23140
							],
							[
								23183,
								23199
							],
							[
								23242,
								23253
							],
							[
								23297,
								23313
							],
							[
								23361,
								23377
							],
							[
								23469,
								23484
							],
							[
								23611,
								23623
							],
							[
								23715,
								23729
							],
							[
								23773,
								23795
							],
							[
								23861,
								23878
							],
							[
								23918,
								23935
							],
							[
								23981,
								23993
							],
							[
								24020,
								24033
							],
							[
								24077,
								24093
							],
							[
								24137,
								24157
							],
							[
								24220,
								24231
							],
							[
								24253,
								24263
							],
							[
								24308,
								24330
							],
							[
								24450,
								24457
							],
							[
								24604,
								24621
							],
							[
								24688,
								24708
							],
							[
								24768,
								24790
							],
							[
								24886,
								24900
							],
							[
								25048,
								25068
							],
							[
								25140,
								25159
							],
							[
								25230,
								25247
							],
							[
								25323,
								25337
							],
							[
								25395,
								25410
							],
							[
								25450,
								25470
							],
							[
								25510,
								25527
							],
							[
								25591,
								25606
							],
							[
								25674,
								25689
							],
							[
								26000,
								26022
							],
							[
								26112,
								26129
							],
							[
								26215,
								26222
							],
							[
								26324,
								26333
							],
							[
								26425,
								26443
							],
							[
								26522,
								26541
							],
							[
								26645,
								26660
							],
							[
								26775,
								26782
							],
							[
								26949,
								26960
							],
							[
								27084,
								27102
							],
							[
								27124,
								27139
							],
							[
								27197,
								27214
							],
							[
								27348,
								27370
							],
							[
								27452,
								27480
							],
							[
								27563,
								27588
							],
							[
								27675,
								27698
							],
							[
								27800,
								27812
							],
							[
								27847,
								27859
							],
							[
								27905,
								27918
							],
							[
								28045,
								28057
							],
							[
								28199,
								28212
							],
							[
								28304,
								28320
							],
							[
								28489,
								28506
							],
							[
								28634,
								28655
							],
							[
								28710,
								28730
							],
							[
								28775,
								28792
							],
							[
								28851,
								28873
							],
							[
								29163,
								29191
							],
							[
								29198,
								29230
							],
							[
								29296,
								29319
							],
							[
								29566,
								29599
							],
							[
								29789,
								29811
							],
							[
								29926,
								29940
							],
							[
								30021,
								30036
							],
							[
								30100,
								30111
							],
							[
								30520,
								30542
							],
							[
								30705,
								30721
							],
							[
								30762,
								30778
							],
							[
								30912,
								30925
							],
							[
								31003,
								31018
							],
							[
								31039,
								31059
							],
							[
								31520,
								31534
							],
							[
								31605,
								31620
							],
							[
								32013,
								32026
							],
							[
								32217,
								32232
							],
							[
								32369,
								32385
							],
							[
								32465,
								32489
							],
							[
								32576,
								32588
							],
							[
								33456,
								33471
							],
							[
								34308,
								34323
							],
							[
								34334,
								34350
							],
							[
								34460,
								34479
							],
							[
								34585,
								34599
							],
							[
								34727,
								34742
							],
							[
								34908,
								34928
							],
							[
								35124,
								35141
							],
							[
								35849,
								35869
							],
							[
								36202,
								36214
							],
							[
								36457,
								36475
							],
							[
								36755,
								36775
							],
							[
								37026,
								37046
							],
							[
								37326,
								37340
							],
							[
								37581,
								37601
							],
							[
								37879,
								37897
							],
							[
								38052,
								38069
							],
							[
								38221,
								38238
							],
							[
								38390,
								38408
							],
							[
								38561,
								38582
							],
							[
								38731,
								38744
							],
							[
								38910,
								38922
							],
							[
								39121,
								39138
							],
							[
								39343,
								39369
							],
							[
								39551,
								39564
							],
							[
								39691,
								39709
							],
							[
								39769,
								39791
							],
							[
								39929,
								39947
							],
							[
								40023,
								40045
							]
						],
						"symlist":
						[
							"js_likely",
							"js_unlikely",
							"__js_printf_like",
							"js_likely",
							"js_unlikely",
							"__js_printf_like",
							"JSRuntime",
							"JSContext",
							"JSObject",
							"JSClass",
							"JSClassID",
							"JSAtom",
							"JS_PTR64_DEF",
							"JS_PTR64_DEF",
							"JSRefCountHeader",
							"JSValue",
							"JSValueConst",
							"JS_VALUE_GET_TAG",
							"JS_VALUE_GET_NORM_TAG",
							"JS_VALUE_GET_INT",
							"JS_VALUE_GET_BOOL",
							"JS_VALUE_GET_FLOAT64",
							"JS_VALUE_GET_PTR",
							"JS_MKVAL",
							"JS_MKPTR",
							"JS_TAG_IS_FLOAT64",
							"__JS_NewFloat64",
							"JS_VALUE_IS_NAN",
							"JSValue",
							"JS_VALUE_GET_TAG",
							"JS_VALUE_GET_INT",
							"JS_VALUE_GET_BOOL",
							"JS_VALUE_GET_PTR",
							"JS_MKVAL",
							"JS_MKPTR",
							"JS_VALUE_GET_FLOAT64",
							"__JS_NewFloat64",
							"JS_TAG_IS_FLOAT64",
							"JS_VALUE_GET_NORM_TAG",
							"JS_VALUE_IS_NAN",
							"JSValueUnion",
							"JSValue",
							"JS_VALUE_GET_TAG",
							"JS_VALUE_GET_NORM_TAG",
							"JS_VALUE_GET_INT",
							"JS_VALUE_GET_BOOL",
							"JS_VALUE_GET_FLOAT64",
							"JS_VALUE_GET_PTR",
							"JS_MKVAL",
							"JS_MKPTR",
							"JS_TAG_IS_FLOAT64",
							"__JS_NewFloat64",
							"JS_VALUE_IS_NAN",
							"JS_VALUE_IS_BOTH_INT",
							"JS_VALUE_IS_BOTH_FLOAT",
							"JS_VALUE_GET_OBJ",
							"JS_VALUE_GET_STRING",
							"JS_VALUE_HAS_REF_COUNT",
							"JSMallocState",
							"JSMallocFunctions",
							"JSGCObjectHeader",
							"JS_NewRuntime",
							"JS_SetRuntimeInfo",
							"JS_SetMemoryLimit",
							"JS_SetGCThreshold",
							"JS_SetMaxStackSize",
							"JS_UpdateStackTop",
							"JS_NewRuntime2",
							"JS_FreeRuntime",
							"JS_GetRuntimeOpaque",
							"JS_SetRuntimeOpaque",
							"JS_MarkValue",
							"JS_RunGC",
							"JS_IsLiveObject",
							"JS_NewContext",
							"JS_FreeContext",
							"JS_DupContext",
							"JS_GetContextOpaque",
							"JS_SetContextOpaque",
							"JS_GetRuntime",
							"JS_SetClassProto",
							"JS_GetClassProto",
							"JS_NewContextRaw",
							"JS_AddIntrinsicBaseObjects",
							"JS_AddIntrinsicDate",
							"JS_AddIntrinsicEval",
							"JS_AddIntrinsicStringNormalize",
							"JS_AddIntrinsicRegExpCompiler",
							"JS_AddIntrinsicRegExp",
							"JS_AddIntrinsicJSON",
							"JS_AddIntrinsicProxy",
							"JS_AddIntrinsicMapSet",
							"JS_AddIntrinsicTypedArrays",
							"JS_AddIntrinsicPromise",
							"JS_AddIntrinsicBigInt",
							"JS_AddIntrinsicBigFloat",
							"JS_AddIntrinsicBigDecimal",
							"JS_AddIntrinsicOperators",
							"JS_EnableBignumExt",
							"js_string_codePointRange",
							"js_malloc_rt",
							"js_free_rt",
							"js_realloc_rt",
							"js_malloc_usable_size_rt",
							"js_mallocz_rt",
							"js_malloc",
							"js_free",
							"js_realloc",
							"js_malloc_usable_size",
							"js_realloc2",
							"js_mallocz",
							"js_strdup",
							"js_strndup",
							"JSMemoryUsage",
							"JS_ComputeMemoryUsage",
							"JS_DumpMemoryUsage",
							"JS_NewAtomLen",
							"JS_NewAtom",
							"JS_NewAtomUInt32",
							"JS_DupAtom",
							"JS_FreeAtom",
							"JS_FreeAtomRT",
							"JS_AtomToValue",
							"JS_AtomToString",
							"JS_AtomToCString",
							"JS_ValueToAtom",
							"JSPropertyEnum",
							"JSPropertyDescriptor",
							"JSClassExoticMethods",
							"JSClassDef",
							"JS_NewClassID",
							"JS_GetClassID",
							"JS_NewClass",
							"JS_IsRegisteredClass",
							"JSValue",
							"JSValue",
							"JSValue",
							"JSValue",
							"JSValue",
							"JS_NewBigInt64",
							"JS_NewBigUint64",
							"JSValue",
							"JS_IsNumber",
							"JS_IsBigInt",
							"JS_IsBigFloat",
							"JS_IsBigDecimal",
							"JS_IsBool",
							"JS_IsNull",
							"JS_IsUndefined",
							"JS_IsException",
							"JS_IsUninitialized",
							"JS_IsString",
							"JS_IsSymbol",
							"JS_IsObject",
							"JS_Throw",
							"JS_GetException",
							"JS_IsError",
							"JS_ResetUncatchableError",
							"JS_NewError",
							"JS_NewUncatchableError",
							"__js_printf_like",
							"__js_printf_like",
							"__js_printf_like",
							"__js_printf_like",
							"__js_printf_like",
							"JS_ThrowOutOfMemory",
							"__JS_FreeValue",
							"JS_FreeValue",
							"__JS_FreeValueRT",
							"JS_FreeValueRT",
							"JS_DupValue",
							"JS_DupValueRT",
							"JS_ToBool",
							"JS_ToInt32",
							"JS_ToUint32",
							"JS_ToInt64",
							"JS_ToIndex",
							"JS_ToFloat64",
							"JS_ToBigInt64",
							"JS_ToInt64Ext",
							"JS_NewStringLen",
							"JS_NewString",
							"JS_NewAtomString",
							"JS_ToString",
							"JS_ToPropertyKey",
							"JS_ToCStringLen2",
							"JS_ToCStringLen",
							"JS_ToCString",
							"JS_FreeCString",
							"JS_NewObjectProtoClass",
							"JS_NewObjectClass",
							"JS_NewObjectProto",
							"JS_NewObject",
							"JS_IsFunction",
							"JS_IsConstructor",
							"JS_SetConstructorBit",
							"JS_NewArray",
							"JS_IsArray",
							"JS_GetPropertyInternal",
							"JSValue",
							"JS_GetPropertyStr",
							"JS_GetPropertyUint32",
							"JS_SetPropertyInternal",
							"JS_SetProperty",
							"JS_SetPropertyUint32",
							"JS_SetPropertyInt64",
							"JS_SetPropertyStr",
							"JS_HasProperty",
							"JS_IsExtensible",
							"JS_PreventExtensions",
							"JS_DeleteProperty",
							"JS_SetPrototype",
							"JS_GetPrototype",
							"JS_GetOwnPropertyNames",
							"JS_GetOwnProperty",
							"JS_Call",
							"JS_Invoke",
							"JS_CallConstructor",
							"JS_CallConstructor2",
							"JS_DetectModule",
							"JS_Eval",
							"JS_EvalThis",
							"JS_GetGlobalObject",
							"JS_IsInstanceOf",
							"JS_DefineProperty",
							"JS_DefinePropertyValue",
							"JS_DefinePropertyValueUint32",
							"JS_DefinePropertyValueStr",
							"JS_DefinePropertyGetSet",
							"JS_SetOpaque",
							"JS_GetOpaque",
							"JS_GetOpaque2",
							"JS_ParseJSON",
							"JS_ParseJSON2",
							"JS_JSONStringify",
							"JS_NewArrayBuffer",
							"JS_NewArrayBufferCopy",
							"JS_DetachArrayBuffer",
							"JS_GetArrayBuffer",
							"JS_GetTypedArrayBuffer",
							"JSSharedArrayBufferFunctions",
							"JS_SetSharedArrayBufferFunctions",
							"JS_NewPromiseCapability",
							"JS_SetHostPromiseRejectionTracker",
							"JS_SetInterruptHandler",
							"JS_SetCanBlock",
							"JS_SetIsHTMLDDA",
							"JSModuleDef",
							"JS_SetModuleLoaderFunc",
							"JS_GetImportMeta",
							"JS_GetModuleName",
							"JS_EnqueueJob",
							"JS_IsJobPending",
							"JS_ExecutePendingJob",
							"JS_WriteObject",
							"JS_WriteObject2",
							"JS_ReadObject",
							"JS_EvalFunction",
							"JS_ResolveModule",
							"JS_GetScriptOrModuleName",
							"JS_RunModule",
							"JSCFunctionEnum",
							"JSCFunctionType",
							"JS_NewCFunction2",
							"JS_NewCFunctionData",
							"JS_NewCClosure",
							"JS_NewCFunction",
							"JS_NewCFunctionMagic",
							"JS_SetConstructor",
							"JSCFunctionListEntry",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_SPECIAL_DEF",
							"JS_ITERATOR_NEXT_DEF",
							"JS_CGETSET_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT64_DEF",
							"JS_PROP_DOUBLE_DEF",
							"JS_PROP_UNDEFINED_DEF",
							"JS_OBJECT_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_BASE_DEF",
							"JS_SetPropertyFunctionList",
							"JS_NewCModule",
							"JS_AddModuleExport",
							"JS_AddModuleExportList",
							"JS_SetModuleExport",
							"JS_SetModuleExportList"
						]
					},
					"AQAAAAAAAAAAAAAA4hIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADiEgAAICBqc19saWtlbHkKICBqc191bmxpa2VseQogIF9fanNfcHJpbnRmX2xpa2UKICBqc19saWtlbHkKICBqc191bmxpa2VseQogIF9fanNfcHJpbnRmX2xpa2UKSlNSdW50aW1lCkpTQ29udGV4dApKU09iamVjdApKU0NsYXNzCkpTQ2xhc3NJRApKU0F0b20KSlNfUFRSNjRfREVGCkpTX1BUUjY0X0RFRgpKU1JlZkNvdW50SGVhZGVyCkpTVmFsdWUKSlNWYWx1ZUNvbnN0CkpTX1ZBTFVFX0dFVF9UQUcKSlNfVkFMVUVfR0VUX05PUk1fVEFHCkpTX1ZBTFVFX0dFVF9JTlQKSlNfVkFMVUVfR0VUX0JPT0wKSlNfVkFMVUVfR0VUX0ZMT0FUNjQKSlNfVkFMVUVfR0VUX1BUUgpKU19NS1ZBTApKU19NS1BUUgpKU19UQUdfSVNfRkxPQVQ2NAogIF9fSlNfTmV3RmxvYXQ2NApKU19WQUxVRV9JU19OQU4KSlNWYWx1ZQpKU19WQUxVRV9HRVRfVEFHCkpTX1ZBTFVFX0dFVF9JTlQKSlNfVkFMVUVfR0VUX0JPT0wKSlNfVkFMVUVfR0VUX1BUUgpKU19NS1ZBTApKU19NS1BUUgpKU19WQUxVRV9HRVRfRkxPQVQ2NAogIF9fSlNfTmV3RmxvYXQ2NApKU19UQUdfSVNfRkxPQVQ2NApKU19WQUxVRV9HRVRfTk9STV9UQUcKSlNfVkFMVUVfSVNfTkFOCkpTVmFsdWVVbmlvbgpKU1ZhbHVlCkpTX1ZBTFVFX0dFVF9UQUcKSlNfVkFMVUVfR0VUX05PUk1fVEFHCkpTX1ZBTFVFX0dFVF9JTlQKSlNfVkFMVUVfR0VUX0JPT0wKSlNfVkFMVUVfR0VUX0ZMT0FUNjQKSlNfVkFMVUVfR0VUX1BUUgpKU19NS1ZBTApKU19NS1BUUgpKU19UQUdfSVNfRkxPQVQ2NAogIF9fSlNfTmV3RmxvYXQ2NApKU19WQUxVRV9JU19OQU4KSlNfVkFMVUVfSVNfQk9USF9JTlQKSlNfVkFMVUVfSVNfQk9USF9GTE9BVApKU19WQUxVRV9HRVRfT0JKCkpTX1ZBTFVFX0dFVF9TVFJJTkcKSlNfVkFMVUVfSEFTX1JFRl9DT1VOVApKU01hbGxvY1N0YXRlCkpTTWFsbG9jRnVuY3Rpb25zCkpTR0NPYmplY3RIZWFkZXIKSlNfTmV3UnVudGltZQpKU19TZXRSdW50aW1lSW5mbwpKU19TZXRNZW1vcnlMaW1pdApKU19TZXRHQ1RocmVzaG9sZApKU19TZXRNYXhTdGFja1NpemUKSlNfVXBkYXRlU3RhY2tUb3AKSlNfTmV3UnVudGltZTIKSlNfRnJlZVJ1bnRpbWUKSlNfR2V0UnVudGltZU9wYXF1ZQpKU19TZXRSdW50aW1lT3BhcXVlCkpTX01hcmtWYWx1ZQpKU19SdW5HQwpKU19Jc0xpdmVPYmplY3QKSlNfTmV3Q29udGV4dApKU19GcmVlQ29udGV4dApKU19EdXBDb250ZXh0CkpTX0dldENvbnRleHRPcGFxdWUKSlNfU2V0Q29udGV4dE9wYXF1ZQpKU19HZXRSdW50aW1lCkpTX1NldENsYXNzUHJvdG8KSlNfR2V0Q2xhc3NQcm90bwpKU19OZXdDb250ZXh0UmF3CkpTX0FkZEludHJpbnNpY0Jhc2VPYmplY3RzCkpTX0FkZEludHJpbnNpY0RhdGUKSlNfQWRkSW50cmluc2ljRXZhbApKU19BZGRJbnRyaW5zaWNTdHJpbmdOb3JtYWxpemUKSlNfQWRkSW50cmluc2ljUmVnRXhwQ29tcGlsZXIKSlNfQWRkSW50cmluc2ljUmVnRXhwCkpTX0FkZEludHJpbnNpY0pTT04KSlNfQWRkSW50cmluc2ljUHJveHkKSlNfQWRkSW50cmluc2ljTWFwU2V0CkpTX0FkZEludHJpbnNpY1R5cGVkQXJyYXlzCkpTX0FkZEludHJpbnNpY1Byb21pc2UKSlNfQWRkSW50cmluc2ljQmlnSW50CkpTX0FkZEludHJpbnNpY0JpZ0Zsb2F0CkpTX0FkZEludHJpbnNpY0JpZ0RlY2ltYWwKSlNfQWRkSW50cmluc2ljT3BlcmF0b3JzCkpTX0VuYWJsZUJpZ251bUV4dAogIGpzX3N0cmluZ19jb2RlUG9pbnRSYW5nZQogIGpzX21hbGxvY19ydAogIGpzX2ZyZWVfcnQKICBqc19yZWFsbG9jX3J0CiAganNfbWFsbG9jX3VzYWJsZV9zaXplX3J0CiAganNfbWFsbG9jel9ydAogIGpzX21hbGxvYwogIGpzX2ZyZWUKICBqc19yZWFsbG9jCiAganNfbWFsbG9jX3VzYWJsZV9zaXplCiAganNfcmVhbGxvYzIKICBqc19tYWxsb2N6CiAganNfc3RyZHVwCiAganNfc3RybmR1cApKU01lbW9yeVVzYWdlCkpTX0NvbXB1dGVNZW1vcnlVc2FnZQpKU19EdW1wTWVtb3J5VXNhZ2UKSlNfTmV3QXRvbUxlbgpKU19OZXdBdG9tCkpTX05ld0F0b21VSW50MzIKSlNfRHVwQXRvbQpKU19GcmVlQXRvbQpKU19GcmVlQXRvbVJUCkpTX0F0b21Ub1ZhbHVlCkpTX0F0b21Ub1N0cmluZwpKU19BdG9tVG9DU3RyaW5nCkpTX1ZhbHVlVG9BdG9tCkpTUHJvcGVydHlFbnVtCkpTUHJvcGVydHlEZXNjcmlwdG9yCkpTQ2xhc3NFeG90aWNNZXRob2RzCkpTQ2xhc3NEZWYKSlNfTmV3Q2xhc3NJRApKU19HZXRDbGFzc0lECkpTX05ld0NsYXNzCkpTX0lzUmVnaXN0ZXJlZENsYXNzCkpTVmFsdWUKSlNWYWx1ZQpKU1ZhbHVlCkpTVmFsdWUKSlNWYWx1ZQpKU19OZXdCaWdJbnQ2NApKU19OZXdCaWdVaW50NjQKSlNWYWx1ZQpKU19Jc051bWJlcgpKU19Jc0JpZ0ludApKU19Jc0JpZ0Zsb2F0CkpTX0lzQmlnRGVjaW1hbApKU19Jc0Jvb2wKSlNfSXNOdWxsCkpTX0lzVW5kZWZpbmVkCkpTX0lzRXhjZXB0aW9uCkpTX0lzVW5pbml0aWFsaXplZApKU19Jc1N0cmluZwpKU19Jc1N5bWJvbApKU19Jc09iamVjdApKU19UaHJvdwpKU19HZXRFeGNlcHRpb24KSlNfSXNFcnJvcgpKU19SZXNldFVuY2F0Y2hhYmxlRXJyb3IKSlNfTmV3RXJyb3IKSlNfTmV3VW5jYXRjaGFibGVFcnJvcgogIF9fanNfcHJpbnRmX2xpa2UKICBfX2pzX3ByaW50Zl9saWtlCiAgX19qc19wcmludGZfbGlrZQogIF9fanNfcHJpbnRmX2xpa2UKICBfX2pzX3ByaW50Zl9saWtlCkpTX1Rocm93T3V0T2ZNZW1vcnkKICBfX0pTX0ZyZWVWYWx1ZQpKU19GcmVlVmFsdWUKICBfX0pTX0ZyZWVWYWx1ZVJUCkpTX0ZyZWVWYWx1ZVJUCkpTX0R1cFZhbHVlCkpTX0R1cFZhbHVlUlQKSlNfVG9Cb29sCkpTX1RvSW50MzIKSlNfVG9VaW50MzIKSlNfVG9JbnQ2NApKU19Ub0luZGV4CkpTX1RvRmxvYXQ2NApKU19Ub0JpZ0ludDY0CkpTX1RvSW50NjRFeHQKSlNfTmV3U3RyaW5nTGVuCkpTX05ld1N0cmluZwpKU19OZXdBdG9tU3RyaW5nCkpTX1RvU3RyaW5nCkpTX1RvUHJvcGVydHlLZXkKSlNfVG9DU3RyaW5nTGVuMgpKU19Ub0NTdHJpbmdMZW4KSlNfVG9DU3RyaW5nCkpTX0ZyZWVDU3RyaW5nCkpTX05ld09iamVjdFByb3RvQ2xhc3MKSlNfTmV3T2JqZWN0Q2xhc3MKSlNfTmV3T2JqZWN0UHJvdG8KSlNfTmV3T2JqZWN0CkpTX0lzRnVuY3Rpb24KSlNfSXNDb25zdHJ1Y3RvcgpKU19TZXRDb25zdHJ1Y3RvckJpdApKU19OZXdBcnJheQpKU19Jc0FycmF5CkpTX0dldFByb3BlcnR5SW50ZXJuYWwKSlNWYWx1ZQpKU19HZXRQcm9wZXJ0eVN0cgpKU19HZXRQcm9wZXJ0eVVpbnQzMgpKU19TZXRQcm9wZXJ0eUludGVybmFsCkpTX1NldFByb3BlcnR5CkpTX1NldFByb3BlcnR5VWludDMyCkpTX1NldFByb3BlcnR5SW50NjQKSlNfU2V0UHJvcGVydHlTdHIKSlNfSGFzUHJvcGVydHkKSlNfSXNFeHRlbnNpYmxlCkpTX1ByZXZlbnRFeHRlbnNpb25zCkpTX0RlbGV0ZVByb3BlcnR5CkpTX1NldFByb3RvdHlwZQpKU19HZXRQcm90b3R5cGUKSlNfR2V0T3duUHJvcGVydHlOYW1lcwpKU19HZXRPd25Qcm9wZXJ0eQpKU19DYWxsCkpTX0ludm9rZQpKU19DYWxsQ29uc3RydWN0b3IKSlNfQ2FsbENvbnN0cnVjdG9yMgpKU19EZXRlY3RNb2R1bGUKSlNfRXZhbApKU19FdmFsVGhpcwpKU19HZXRHbG9iYWxPYmplY3QKSlNfSXNJbnN0YW5jZU9mCkpTX0RlZmluZVByb3BlcnR5CkpTX0RlZmluZVByb3BlcnR5VmFsdWUKSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVVpbnQzMgpKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyCkpTX0RlZmluZVByb3BlcnR5R2V0U2V0CkpTX1NldE9wYXF1ZQpKU19HZXRPcGFxdWUKSlNfR2V0T3BhcXVlMgpKU19QYXJzZUpTT04KSlNfUGFyc2VKU09OMgpKU19KU09OU3RyaW5naWZ5CkpTX05ld0FycmF5QnVmZmVyCkpTX05ld0FycmF5QnVmZmVyQ29weQpKU19EZXRhY2hBcnJheUJ1ZmZlcgpKU19HZXRBcnJheUJ1ZmZlcgpKU19HZXRUeXBlZEFycmF5QnVmZmVyCkpTU2hhcmVkQXJyYXlCdWZmZXJGdW5jdGlvbnMKSlNfU2V0U2hhcmVkQXJyYXlCdWZmZXJGdW5jdGlvbnMKSlNfTmV3UHJvbWlzZUNhcGFiaWxpdHkKSlNfU2V0SG9zdFByb21pc2VSZWplY3Rpb25UcmFja2VyCkpTX1NldEludGVycnVwdEhhbmRsZXIKSlNfU2V0Q2FuQmxvY2sKSlNfU2V0SXNIVE1MRERBCkpTTW9kdWxlRGVmCkpTX1NldE1vZHVsZUxvYWRlckZ1bmMKSlNfR2V0SW1wb3J0TWV0YQpKU19HZXRNb2R1bGVOYW1lCkpTX0VucXVldWVKb2IKSlNfSXNKb2JQZW5kaW5nCkpTX0V4ZWN1dGVQZW5kaW5nSm9iCkpTX1dyaXRlT2JqZWN0CkpTX1dyaXRlT2JqZWN0MgpKU19SZWFkT2JqZWN0CkpTX0V2YWxGdW5jdGlvbgpKU19SZXNvbHZlTW9kdWxlCkpTX0dldFNjcmlwdE9yTW9kdWxlTmFtZQpKU19SdW5Nb2R1bGUKSlNDRnVuY3Rpb25FbnVtCkpTQ0Z1bmN0aW9uVHlwZQpKU19OZXdDRnVuY3Rpb24yCkpTX05ld0NGdW5jdGlvbkRhdGEKSlNfTmV3Q0Nsb3N1cmUKSlNfTmV3Q0Z1bmN0aW9uCkpTX05ld0NGdW5jdGlvbk1hZ2ljCkpTX1NldENvbnN0cnVjdG9yCkpTQ0Z1bmN0aW9uTGlzdEVudHJ5CkpTX0NGVU5DX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfU1BFQ0lBTF9ERUYKSlNfSVRFUkFUT1JfTkVYVF9ERUYKSlNfQ0dFVFNFVF9ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX1BST1BfSU5UMzJfREVGCkpTX1BST1BfSU5UNjRfREVGCkpTX1BST1BfRE9VQkxFX0RFRgpKU19QUk9QX1VOREVGSU5FRF9ERUYKSlNfT0JKRUNUX0RFRgpKU19BTElBU19ERUYKSlNfQUxJQVNfQkFTRV9ERUYKSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QKSlNfTmV3Q01vZHVsZQpKU19BZGRNb2R1bGVFeHBvcnQKSlNfQWRkTW9kdWxlRXhwb3J0TGlzdApKU19TZXRNb2R1bGVFeHBvcnQKSlNfU2V0TW9kdWxlRXhwb3J0TGlzdAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					25,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					30,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					35,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					36,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					37,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					39,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					40,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					41,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					44,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					45,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					46,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					47,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					48,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					49,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					50,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					51,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
						"symkeys":
						[
							[
								1368,
								1377
							],
							[
								1416,
								1427
							],
							[
								1528,
								1544
							],
							[
								1603,
								1612
							],
							[
								1628,
								1639
							],
							[
								1686,
								1702
							],
							[
								1763,
								1772
							],
							[
								1799,
								1808
							],
							[
								1834,
								1842
							],
							[
								1867,
								1874
							],
							[
								1893,
								1902
							],
							[
								1921,
								1927
							],
							[
								1983,
								1995
							],
							[
								2015,
								2027
							],
							[
								2736,
								2752
							],
							[
								3126,
								3133
							],
							[
								3167,
								3179
							],
							[
								3190,
								3206
							],
							[
								3318,
								3339
							],
							[
								3371,
								3387
							],
							[
								3425,
								3442
							],
							[
								3474,
								3494
							],
							[
								3534,
								3550
							],
							[
								3593,
								3601
							],
							[
								3662,
								3670
							],
							[
								3721,
								3738
							],
							[
								3847,
								3862
							],
							[
								3959,
								3974
							],
							[
								4050,
								4057
							],
							[
								4098,
								4114
							],
							[
								4143,
								4159
							],
							[
								4180,
								4197
							],
							[
								4218,
								4234
							],
							[
								4268,
								4276
							],
							[
								4339,
								4347
							],
							[
								4513,
								4533
							],
							[
								4770,
								4785
							],
							[
								5081,
								5098
							],
							[
								5265,
								5286
							],
							[
								5449,
								5464
							],
							[
								5665,
								5677
							],
							[
								5740,
								5747
							],
							[
								5788,
								5804
							],
							[
								5909,
								5930
							],
							[
								5962,
								5978
							],
							[
								6004,
								6021
							],
							[
								6047,
								6067
							],
							[
								6095,
								6111
							],
							[
								6136,
								6144
							],
							[
								6215,
								6223
							],
							[
								6289,
								6306
							],
							[
								6449,
								6464
							],
							[
								6588,
								6603
							],
							[
								6831,
								6851
							],
							[
								6921,
								6943
							],
							[
								7046,
								7062
							],
							[
								7107,
								7126
							],
							[
								7171,
								7193
							],
							[
								10188,
								10201
							],
							[
								10459,
								10476
							],
							[
								10511,
								10527
							],
							[
								10541,
								10554
							],
							[
								10610,
								10627
							],
							[
								10667,
								10684
							],
							[
								10720,
								10737
							],
							[
								10828,
								10846
							],
							[
								10994,
								11011
							],
							[
								11039,
								11053
							],
							[
								11103,
								11117
							],
							[
								11140,
								11159
							],
							[
								11181,
								11200
							],
							[
								11299,
								11311
							],
							[
								11375,
								11383
							],
							[
								11408,
								11423
							],
							[
								11470,
								11483
							],
							[
								11505,
								11519
							],
							[
								11546,
								11559
							],
							[
								11583,
								11602
							],
							[
								11625,
								11644
							],
							[
								11687,
								11700
							],
							[
								11723,
								11739
							],
							[
								11798,
								11814
							],
							[
								11952,
								11968
							],
							[
								11990,
								12016
							],
							[
								12039,
								12058
							],
							[
								12081,
								12100
							],
							[
								12123,
								12153
							],
							[
								12176,
								12205
							],
							[
								12228,
								12249
							],
							[
								12272,
								12291
							],
							[
								12314,
								12334
							],
							[
								12357,
								12378
							],
							[
								12401,
								12427
							],
							[
								12450,
								12472
							],
							[
								12495,
								12516
							],
							[
								12539,
								12562
							],
							[
								12585,
								12610
							],
							[
								12667,
								12691
							],
							[
								12738,
								12756
							],
							[
								12799,
								12823
							],
							[
								12901,
								12913
							],
							[
								12948,
								12958
							],
							[
								12992,
								13005
							],
							[
								13053,
								13077
							],
							[
								13117,
								13130
							],
							[
								13167,
								13176
							],
							[
								13212,
								13219
							],
							[
								13254,
								13264
							],
							[
								13313,
								13334
							],
							[
								13375,
								13386
							],
							[
								13450,
								13460
							],
							[
								13497,
								13506
							],
							[
								13547,
								13557
							],
							[
								14155,
								14168
							],
							[
								14176,
								14197
							],
							[
								14237,
								14255
							],
							[
								14357,
								14370
							],
							[
								14424,
								14434
							],
							[
								14476,
								14492
							],
							[
								14529,
								14539
							],
							[
								14572,
								14583
							],
							[
								14616,
								14629
							],
							[
								14664,
								14678
							],
							[
								14717,
								14732
							],
							[
								14775,
								14791
							],
							[
								14829,
								14843
							],
							[
								14982,
								14996
							],
							[
								15105,
								15125
							],
							[
								16704,
								16724
							],
							[
								17630,
								17640
							],
							[
								17653,
								17666
							],
							[
								17700,
								17713
							],
							[
								17735,
								17746
							],
							[
								17816,
								17836
							],
							[
								17919,
								17926
							],
							[
								18039,
								18046
							],
							[
								18152,
								18159
							],
							[
								18280,
								18287
							],
							[
								18491,
								18498
							],
							[
								18687,
								18701
							],
							[
								18738,
								18753
							],
							[
								18807,
								18814
							],
							[
								19206,
								19217
							],
							[
								19348,
								19359
							],
							[
								19484,
								19497
							],
							[
								19608,
								19623
							],
							[
								19736,
								19745
							],
							[
								19834,
								19843
							],
							[
								19932,
								19946
							],
							[
								20040,
								20054
							],
							[
								20161,
								20179
							],
							[
								20290,
								20301
							],
							[
								20392,
								20403
							],
							[
								20494,
								20505
							],
							[
								20582,
								20590
							],
							[
								20629,
								20644
							],
							[
								20670,
								20680
							],
							[
								20721,
								20745
							],
							[
								20771,
								20782
							],
							[
								20808,
								20830
							],
							[
								20856,
								20872
							],
							[
								20946,
								20962
							],
							[
								21034,
								21050
							],
							[
								21127,
								21143
							],
							[
								21216,
								21232
							],
							[
								21308,
								21327
							],
							[
								21351,
								21365
							],
							[
								21413,
								21425
							],
							[
								21632,
								21648
							],
							[
								21695,
								21709
							],
							[
								21934,
								21945
							],
							[
								22150,
								22163
							],
							[
								22349,
								22358
							],
							[
								22431,
								22441
							],
							[
								22510,
								22521
							],
							[
								22627,
								22637
							],
							[
								22692,
								22702
							],
							[
								22758,
								22770
							],
							[
								22871,
								22884
							],
							[
								22983,
								22996
							],
							[
								23056,
								23071
							],
							[
								23128,
								23140
							],
							[
								23183,
								23199
							],
							[
								23242,
								23253
							],
							[
								23297,
								23313
							],
							[
								23361,
								23377
							],
							[
								23469,
								23484
							],
							[
								23611,
								23623
							],
							[
								23715,
								23729
							],
							[
								23773,
								23795
							],
							[
								23861,
								23878
							],
							[
								23918,
								23935
							],
							[
								23981,
								23993
							],
							[
								24020,
								24033
							],
							[
								24077,
								24093
							],
							[
								24137,
								24157
							],
							[
								24220,
								24231
							],
							[
								24253,
								24263
							],
							[
								24308,
								24330
							],
							[
								24450,
								24457
							],
							[
								24604,
								24621
							],
							[
								24688,
								24708
							],
							[
								24768,
								24790
							],
							[
								24886,
								24900
							],
							[
								25048,
								25068
							],
							[
								25140,
								25159
							],
							[
								25230,
								25247
							],
							[
								25323,
								25337
							],
							[
								25395,
								25410
							],
							[
								25450,
								25470
							],
							[
								25510,
								25527
							],
							[
								25591,
								25606
							],
							[
								25674,
								25689
							],
							[
								26000,
								26022
							],
							[
								26112,
								26129
							],
							[
								26215,
								26222
							],
							[
								26324,
								26333
							],
							[
								26425,
								26443
							],
							[
								26522,
								26541
							],
							[
								26645,
								26660
							],
							[
								26775,
								26782
							],
							[
								26949,
								26960
							],
							[
								27084,
								27102
							],
							[
								27124,
								27139
							],
							[
								27197,
								27214
							],
							[
								27348,
								27370
							],
							[
								27452,
								27480
							],
							[
								27563,
								27588
							],
							[
								27675,
								27698
							],
							[
								27800,
								27812
							],
							[
								27847,
								27859
							],
							[
								27905,
								27918
							],
							[
								28045,
								28057
							],
							[
								28199,
								28212
							],
							[
								28304,
								28320
							],
							[
								28489,
								28506
							],
							[
								28634,
								28655
							],
							[
								28710,
								28730
							],
							[
								28775,
								28792
							],
							[
								28851,
								28873
							],
							[
								29163,
								29191
							],
							[
								29198,
								29230
							],
							[
								29296,
								29319
							],
							[
								29566,
								29599
							],
							[
								29789,
								29811
							],
							[
								29926,
								29940
							],
							[
								30021,
								30036
							],
							[
								30100,
								30111
							],
							[
								30520,
								30542
							],
							[
								30705,
								30721
							],
							[
								30762,
								30778
							],
							[
								30912,
								30925
							],
							[
								31003,
								31018
							],
							[
								31039,
								31059
							],
							[
								31520,
								31534
							],
							[
								31605,
								31620
							],
							[
								32013,
								32026
							],
							[
								32217,
								32232
							],
							[
								32369,
								32385
							],
							[
								32465,
								32489
							],
							[
								32576,
								32588
							],
							[
								33456,
								33471
							],
							[
								34308,
								34323
							],
							[
								34334,
								34350
							],
							[
								34460,
								34479
							],
							[
								34585,
								34599
							],
							[
								34727,
								34742
							],
							[
								34908,
								34928
							],
							[
								35124,
								35141
							],
							[
								35849,
								35869
							],
							[
								36202,
								36214
							],
							[
								36457,
								36475
							],
							[
								36755,
								36775
							],
							[
								37026,
								37046
							],
							[
								37326,
								37340
							],
							[
								37581,
								37601
							],
							[
								37879,
								37897
							],
							[
								38052,
								38069
							],
							[
								38221,
								38238
							],
							[
								38390,
								38408
							],
							[
								38561,
								38582
							],
							[
								38731,
								38744
							],
							[
								38910,
								38922
							],
							[
								39121,
								39138
							],
							[
								39343,
								39369
							],
							[
								39551,
								39564
							],
							[
								39691,
								39709
							],
							[
								39769,
								39791
							],
							[
								39929,
								39947
							],
							[
								40023,
								40045
							]
						],
						"symlist":
						[
							"js_likely",
							"js_unlikely",
							"__js_printf_like",
							"js_likely",
							"js_unlikely",
							"__js_printf_like",
							"JSRuntime",
							"JSContext",
							"JSObject",
							"JSClass",
							"JSClassID",
							"JSAtom",
							"JS_PTR64_DEF",
							"JS_PTR64_DEF",
							"JSRefCountHeader",
							"JSValue",
							"JSValueConst",
							"JS_VALUE_GET_TAG",
							"JS_VALUE_GET_NORM_TAG",
							"JS_VALUE_GET_INT",
							"JS_VALUE_GET_BOOL",
							"JS_VALUE_GET_FLOAT64",
							"JS_VALUE_GET_PTR",
							"JS_MKVAL",
							"JS_MKPTR",
							"JS_TAG_IS_FLOAT64",
							"__JS_NewFloat64",
							"JS_VALUE_IS_NAN",
							"JSValue",
							"JS_VALUE_GET_TAG",
							"JS_VALUE_GET_INT",
							"JS_VALUE_GET_BOOL",
							"JS_VALUE_GET_PTR",
							"JS_MKVAL",
							"JS_MKPTR",
							"JS_VALUE_GET_FLOAT64",
							"__JS_NewFloat64",
							"JS_TAG_IS_FLOAT64",
							"JS_VALUE_GET_NORM_TAG",
							"JS_VALUE_IS_NAN",
							"JSValueUnion",
							"JSValue",
							"JS_VALUE_GET_TAG",
							"JS_VALUE_GET_NORM_TAG",
							"JS_VALUE_GET_INT",
							"JS_VALUE_GET_BOOL",
							"JS_VALUE_GET_FLOAT64",
							"JS_VALUE_GET_PTR",
							"JS_MKVAL",
							"JS_MKPTR",
							"JS_TAG_IS_FLOAT64",
							"__JS_NewFloat64",
							"JS_VALUE_IS_NAN",
							"JS_VALUE_IS_BOTH_INT",
							"JS_VALUE_IS_BOTH_FLOAT",
							"JS_VALUE_GET_OBJ",
							"JS_VALUE_GET_STRING",
							"JS_VALUE_HAS_REF_COUNT",
							"JSMallocState",
							"JSMallocFunctions",
							"JSGCObjectHeader",
							"JS_NewRuntime",
							"JS_SetRuntimeInfo",
							"JS_SetMemoryLimit",
							"JS_SetGCThreshold",
							"JS_SetMaxStackSize",
							"JS_UpdateStackTop",
							"JS_NewRuntime2",
							"JS_FreeRuntime",
							"JS_GetRuntimeOpaque",
							"JS_SetRuntimeOpaque",
							"JS_MarkValue",
							"JS_RunGC",
							"JS_IsLiveObject",
							"JS_NewContext",
							"JS_FreeContext",
							"JS_DupContext",
							"JS_GetContextOpaque",
							"JS_SetContextOpaque",
							"JS_GetRuntime",
							"JS_SetClassProto",
							"JS_GetClassProto",
							"JS_NewContextRaw",
							"JS_AddIntrinsicBaseObjects",
							"JS_AddIntrinsicDate",
							"JS_AddIntrinsicEval",
							"JS_AddIntrinsicStringNormalize",
							"JS_AddIntrinsicRegExpCompiler",
							"JS_AddIntrinsicRegExp",
							"JS_AddIntrinsicJSON",
							"JS_AddIntrinsicProxy",
							"JS_AddIntrinsicMapSet",
							"JS_AddIntrinsicTypedArrays",
							"JS_AddIntrinsicPromise",
							"JS_AddIntrinsicBigInt",
							"JS_AddIntrinsicBigFloat",
							"JS_AddIntrinsicBigDecimal",
							"JS_AddIntrinsicOperators",
							"JS_EnableBignumExt",
							"js_string_codePointRange",
							"js_malloc_rt",
							"js_free_rt",
							"js_realloc_rt",
							"js_malloc_usable_size_rt",
							"js_mallocz_rt",
							"js_malloc",
							"js_free",
							"js_realloc",
							"js_malloc_usable_size",
							"js_realloc2",
							"js_mallocz",
							"js_strdup",
							"js_strndup",
							"JSMemoryUsage",
							"JS_ComputeMemoryUsage",
							"JS_DumpMemoryUsage",
							"JS_NewAtomLen",
							"JS_NewAtom",
							"JS_NewAtomUInt32",
							"JS_DupAtom",
							"JS_FreeAtom",
							"JS_FreeAtomRT",
							"JS_AtomToValue",
							"JS_AtomToString",
							"JS_AtomToCString",
							"JS_ValueToAtom",
							"JSPropertyEnum",
							"JSPropertyDescriptor",
							"JSClassExoticMethods",
							"JSClassDef",
							"JS_NewClassID",
							"JS_GetClassID",
							"JS_NewClass",
							"JS_IsRegisteredClass",
							"JSValue",
							"JSValue",
							"JSValue",
							"JSValue",
							"JSValue",
							"JS_NewBigInt64",
							"JS_NewBigUint64",
							"JSValue",
							"JS_IsNumber",
							"JS_IsBigInt",
							"JS_IsBigFloat",
							"JS_IsBigDecimal",
							"JS_IsBool",
							"JS_IsNull",
							"JS_IsUndefined",
							"JS_IsException",
							"JS_IsUninitialized",
							"JS_IsString",
							"JS_IsSymbol",
							"JS_IsObject",
							"JS_Throw",
							"JS_GetException",
							"JS_IsError",
							"JS_ResetUncatchableError",
							"JS_NewError",
							"JS_NewUncatchableError",
							"__js_printf_like",
							"__js_printf_like",
							"__js_printf_like",
							"__js_printf_like",
							"__js_printf_like",
							"JS_ThrowOutOfMemory",
							"__JS_FreeValue",
							"JS_FreeValue",
							"__JS_FreeValueRT",
							"JS_FreeValueRT",
							"JS_DupValue",
							"JS_DupValueRT",
							"JS_ToBool",
							"JS_ToInt32",
							"JS_ToUint32",
							"JS_ToInt64",
							"JS_ToIndex",
							"JS_ToFloat64",
							"JS_ToBigInt64",
							"JS_ToInt64Ext",
							"JS_NewStringLen",
							"JS_NewString",
							"JS_NewAtomString",
							"JS_ToString",
							"JS_ToPropertyKey",
							"JS_ToCStringLen2",
							"JS_ToCStringLen",
							"JS_ToCString",
							"JS_FreeCString",
							"JS_NewObjectProtoClass",
							"JS_NewObjectClass",
							"JS_NewObjectProto",
							"JS_NewObject",
							"JS_IsFunction",
							"JS_IsConstructor",
							"JS_SetConstructorBit",
							"JS_NewArray",
							"JS_IsArray",
							"JS_GetPropertyInternal",
							"JSValue",
							"JS_GetPropertyStr",
							"JS_GetPropertyUint32",
							"JS_SetPropertyInternal",
							"JS_SetProperty",
							"JS_SetPropertyUint32",
							"JS_SetPropertyInt64",
							"JS_SetPropertyStr",
							"JS_HasProperty",
							"JS_IsExtensible",
							"JS_PreventExtensions",
							"JS_DeleteProperty",
							"JS_SetPrototype",
							"JS_GetPrototype",
							"JS_GetOwnPropertyNames",
							"JS_GetOwnProperty",
							"JS_Call",
							"JS_Invoke",
							"JS_CallConstructor",
							"JS_CallConstructor2",
							"JS_DetectModule",
							"JS_Eval",
							"JS_EvalThis",
							"JS_GetGlobalObject",
							"JS_IsInstanceOf",
							"JS_DefineProperty",
							"JS_DefinePropertyValue",
							"JS_DefinePropertyValueUint32",
							"JS_DefinePropertyValueStr",
							"JS_DefinePropertyGetSet",
							"JS_SetOpaque",
							"JS_GetOpaque",
							"JS_GetOpaque2",
							"JS_ParseJSON",
							"JS_ParseJSON2",
							"JS_JSONStringify",
							"JS_NewArrayBuffer",
							"JS_NewArrayBufferCopy",
							"JS_DetachArrayBuffer",
							"JS_GetArrayBuffer",
							"JS_GetTypedArrayBuffer",
							"JSSharedArrayBufferFunctions",
							"JS_SetSharedArrayBufferFunctions",
							"JS_NewPromiseCapability",
							"JS_SetHostPromiseRejectionTracker",
							"JS_SetInterruptHandler",
							"JS_SetCanBlock",
							"JS_SetIsHTMLDDA",
							"JSModuleDef",
							"JS_SetModuleLoaderFunc",
							"JS_GetImportMeta",
							"JS_GetModuleName",
							"JS_EnqueueJob",
							"JS_IsJobPending",
							"JS_ExecutePendingJob",
							"JS_WriteObject",
							"JS_WriteObject2",
							"JS_ReadObject",
							"JS_EvalFunction",
							"JS_ResolveModule",
							"JS_GetScriptOrModuleName",
							"JS_RunModule",
							"JSCFunctionEnum",
							"JSCFunctionType",
							"JS_NewCFunction2",
							"JS_NewCFunctionData",
							"JS_NewCClosure",
							"JS_NewCFunction",
							"JS_NewCFunctionMagic",
							"JS_SetConstructor",
							"JSCFunctionListEntry",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_SPECIAL_DEF",
							"JS_ITERATOR_NEXT_DEF",
							"JS_CGETSET_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT64_DEF",
							"JS_PROP_DOUBLE_DEF",
							"JS_PROP_UNDEFINED_DEF",
							"JS_OBJECT_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_BASE_DEF",
							"JS_SetPropertyFunctionList",
							"JS_NewCModule",
							"JS_AddModuleExport",
							"JS_AddModuleExportList",
							"JS_SetModuleExport",
							"JS_SetModuleExportList"
						]
					},
					"AQAAAAAAAAAAAAAA4hIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					52,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/quickjs.c",
						"symkeys":
						[
							[
								7137,
								7158
							],
							[
								7479,
								7490
							],
							[
								7680,
								7687
							],
							[
								7713,
								7721
							],
							[
								7747,
								7759
							],
							[
								7850,
								7863
							],
							[
								7890,
								7900
							],
							[
								8624,
								8643
							],
							[
								8660,
								8669
							],
							[
								9845,
								9857
							],
							[
								10805,
								10812
							],
							[
								11862,
								11874
							],
							[
								12070,
								12088
							],
							[
								12273,
								12289
							],
							[
								13328,
								13336
							],
							[
								13448,
								13458
							],
							[
								13669,
								13679
							],
							[
								13786,
								13798
							],
							[
								13904,
								13920
							],
							[
								14090,
								14099
							],
							[
								15838,
								15852
							],
							[
								16115,
								16129
							],
							[
								16182,
								16190
							],
							[
								17261,
								17273
							],
							[
								17500,
								17510
							],
							[
								18105,
								18118
							],
							[
								19233,
								19241
							],
							[
								19620,
								19638
							],
							[
								21185,
								21203
							],
							[
								21312,
								21327
							],
							[
								21450,
								21468
							],
							[
								21579,
								21594
							],
							[
								21698,
								21706
							],
							[
								21818,
								21829
							],
							[
								22123,
								22136
							],
							[
								22466,
								22478
							],
							[
								22724,
								22744
							],
							[
								23058,
								23077
							],
							[
								23496,
								23522
							],
							[
								23631,
								23655
							],
							[
								23723,
								23742
							],
							[
								24007,
								24024
							],
							[
								24136,
								24152
							],
							[
								24240,
								24256
							],
							[
								24754,
								24767
							],
							[
								24857,
								24874
							],
							[
								25026,
								25039
							],
							[
								25049,
								25060
							],
							[
								26179,
								26189
							],
							[
								26791,
								26801
							],
							[
								27132,
								27147
							],
							[
								27157,
								27164
							],
							[
								27969,
								27977
							],
							[
								29062,
								29073
							],
							[
								29207,
								29222
							],
							[
								29295,
								29316
							],
							[
								29384,
								29400
							],
							[
								29467,
								29482
							],
							[
								29556,
								29569
							],
							[
								29672,
								29684
							],
							[
								29798,
								29808
							],
							[
								29867,
								29884
							],
							[
								29946,
								29956
							],
							[
								30051,
								30068
							],
							[
								30170,
								30189
							],
							[
								30294,
								30320
							],
							[
								30400,
								30415
							],
							[
								30493,
								30504
							],
							[
								30582,
								30595
							],
							[
								30673,
								30694
							],
							[
								30834,
								30853
							],
							[
								30957,
								30984
							],
							[
								31068,
								31088
							],
							[
								31405,
								31423
							],
							[
								31992,
								32004
							],
							[
								33189,
								33192
							],
							[
								33412,
								33415
							],
							[
								33516,
								33519
							],
							[
								33543,
								33546
							],
							[
								33627,
								33639
							],
							[
								33647,
								33657
							],
							[
								33668,
								33671
							],
							[
								33683,
								33686
							],
							[
								33732,
								33735
							],
							[
								34002,
								34005
							],
							[
								34017,
								34020
							],
							[
								34057,
								34060
							],
							[
								34189,
								34201
							],
							[
								34232,
								34248
							],
							[
								34318,
								34335
							],
							[
								34381,
								34403
							],
							[
								34458,
								34476
							],
							[
								34596,
								34618
							],
							[
								34738,
								34753
							],
							[
								34898,
								34924
							],
							[
								35041,
								35052
							],
							[
								35156,
								35169
							],
							[
								35271,
								35291
							],
							[
								35373,
								35386
							],
							[
								35517,
								35538
							],
							[
								35605,
								35617
							],
							[
								35661,
								35674
							],
							[
								35737,
								35756
							],
							[
								35800,
								35813
							],
							[
								35870,
								35885
							],
							[
								35950,
								35967
							],
							[
								36029,
								36041
							],
							[
								36104,
								36117
							],
							[
								36197,
								36210
							],
							[
								36242,
								36259
							],
							[
								36353,
								36371
							],
							[
								36413,
								36426
							],
							[
								36497,
								36521
							],
							[
								36563,
								36582
							],
							[
								36653,
								36676
							],
							[
								36718,
								36736
							],
							[
								36807,
								36837
							],
							[
								36879,
								36904
							],
							[
								36975,
								37002
							],
							[
								37044,
								37066
							],
							[
								37137,
								37165
							],
							[
								37207,
								37230
							],
							[
								37301,
								37320
							],
							[
								37362,
								37387
							],
							[
								37429,
								37453
							],
							[
								37495,
								37514
							],
							[
								37585,
								37603
							],
							[
								37645,
								37658
							],
							[
								37729,
								37745
							],
							[
								37787,
								37798
							],
							[
								37869,
								37894
							],
							[
								37936,
								37956
							],
							[
								38027,
								38054
							],
							[
								38096,
								38118
							],
							[
								38189,
								38224
							],
							[
								38266,
								38296
							],
							[
								38367,
								38389
							],
							[
								38431,
								38448
							],
							[
								38519,
								38539
							],
							[
								38581,
								38596
							],
							[
								38667,
								38704
							],
							[
								38746,
								38778
							],
							[
								38870,
								38895
							],
							[
								38937,
								38957
							],
							[
								39038,
								39053
							],
							[
								39095,
								39108
							],
							[
								39150,
								39164
							],
							[
								39221,
								39237
							],
							[
								39293,
								39312
							],
							[
								39373,
								39390
							],
							[
								39465,
								39495
							],
							[
								39573,
								39582
							],
							[
								39610,
								39622
							],
							[
								39799,
								39817
							],
							[
								39832,
								39845
							],
							[
								39929,
								39941
							],
							[
								39997,
								40010
							],
							[
								40076,
								40094
							],
							[
								40163,
								40174
							],
							[
								40225,
								40240
							],
							[
								40290,
								40302
							],
							[
								40395,
								40417
							],
							[
								40462,
								40476
							],
							[
								40514,
								40528
							],
							[
								40625,
								40641
							],
							[
								40682,
								40698
							],
							[
								40797,
								40809
							],
							[
								40847,
								40859
							],
							[
								40956,
								40973
							],
							[
								41049,
								41065
							],
							[
								41107,
								41124
							],
							[
								41183,
								41194
							],
							[
								41253,
								41266
							],
							[
								41317,
								41330
							],
							[
								41392,
								41411
							],
							[
								41488,
								41503
							],
							[
								41554,
								41573
							],
							[
								41606,
								41635
							],
							[
								41668,
								41691
							],
							[
								41738,
								41761
							],
							[
								41849,
								41870
							],
							[
								41917,
								41943
							],
							[
								41990,
								42006
							],
							[
								42053,
								42070
							],
							[
								42201,
								42217
							],
							[
								42280,
								42294
							],
							[
								42339,
								42367
							],
							[
								42857,
								42876
							],
							[
								42927,
								42953
							],
							[
								43049,
								43072
							],
							[
								43119,
								43141
							],
							[
								43187,
								43223
							],
							[
								43258,
								43269
							],
							[
								43346,
								43372
							],
							[
								43494,
								43529
							],
							[
								43571,
								43601
							],
							[
								43675,
								43690
							],
							[
								43833,
								43851
							],
							[
								43897,
								43915
							],
							[
								43987,
								44001
							],
							[
								44034,
								44051
							],
							[
								44105,
								44117
							],
							[
								44168,
								44193
							],
							[
								44279,
								44299
							],
							[
								44419,
								44437
							],
							[
								44530,
								44547
							],
							[
								44620,
								44631
							],
							[
								44678,
								44697
							],
							[
								44787,
								44805
							],
							[
								44853,
								44883
							],
							[
								44934,
								44949
							],
							[
								44991,
								45016
							],
							[
								45100,
								45112
							],
							[
								45170,
								45185
							],
							[
								45263,
								45290
							],
							[
								45320,
								45333
							],
							[
								45375,
								45393
							],
							[
								45434,
								45457
							],
							[
								45523,
								45538
							],
							[
								45578,
								45593
							],
							[
								45668,
								45683
							],
							[
								45746,
								45759
							],
							[
								45821,
								45835
							],
							[
								45905,
								45922
							],
							[
								46008,
								46038
							],
							[
								46092,
								46120
							],
							[
								46162,
								46185
							],
							[
								46259,
								46282
							],
							[
								46399,
								46421
							],
							[
								46466,
								46483
							],
							[
								46602,
								46619
							],
							[
								46662,
								46675
							],
							[
								46750,
								46766
							],
							[
								46801,
								46824
							],
							[
								46880,
								46904
							],
							[
								46977,
								46998
							],
							[
								47071,
								47102
							],
							[
								47165,
								47187
							],
							[
								47551,
								47564
							],
							[
								48004,
								48033
							],
							[
								48074,
								48086
							],
							[
								48177,
								48187
							],
							[
								48267,
								48280
							],
							[
								48390,
								48414
							],
							[
								48502,
								48515
							],
							[
								48709,
								48722
							],
							[
								48907,
								48916
							],
							[
								49138,
								49148
							],
							[
								49327,
								49334
							],
							[
								49444,
								49454
							],
							[
								49721,
								49732
							],
							[
								50094,
								50115
							],
							[
								50262,
								50272
							],
							[
								50441,
								50450
							],
							[
								50554,
								50570
							],
							[
								51064,
								51079
							],
							[
								51301,
								51313
							],
							[
								51425,
								51433
							],
							[
								51590,
								51605
							],
							[
								57231,
								57247
							],
							[
								57662,
								57690
							],
							[
								57785,
								57802
							],
							[
								57901,
								57920
							],
							[
								58029,
								58048
							],
							[
								58200,
								58220
							],
							[
								58415,
								58443
							],
							[
								58553,
								58570
							],
							[
								58667,
								58688
							],
							[
								59095,
								59115
							],
							[
								59158,
								59181
							],
							[
								59300,
								59320
							],
							[
								59399,
								59422
							],
							[
								59583,
								59597
							],
							[
								61560,
								61579
							],
							[
								61631,
								61650
							],
							[
								61799,
								61824
							],
							[
								62239,
								62252
							],
							[
								62634,
								62645
							],
							[
								62821,
								62835
							],
							[
								63885,
								63898
							],
							[
								63965,
								63982
							],
							[
								64100,
								64117
							],
							[
								64209,
								64215
							],
							[
								64250,
								64254
							],
							[
								64287,
								64294
							],
							[
								64334,
								64356
							],
							[
								64483,
								64497
							],
							[
								64568,
								64600
							],
							[
								64727,
								64740
							],
							[
								65141,
								65156
							],
							[
								65355,
								65375
							],
							[
								65973,
								65986
							],
							[
								66062,
								66074
							],
							[
								66158,
								66171
							],
							[
								66307,
								66325
							],
							[
								66822,
								66837
							],
							[
								67108,
								67122
							],
							[
								67362,
								67379
							],
							[
								67450,
								67464
							],
							[
								72319,
								72335
							],
							[
								73253,
								73266
							],
							[
								73756,
								73775
							],
							[
								73829,
								73848
							],
							[
								74039,
								74048
							],
							[
								74194,
								74210
							],
							[
								74390,
								74406
							],
							[
								74687,
								74703
							],
							[
								74780,
								74795
							],
							[
								75195,
								75208
							],
							[
								75304,
								75318
							],
							[
								76555,
								76569
							],
							[
								78220,
								78233
							],
							[
								78285,
								78303
							],
							[
								78466,
								78484
							],
							[
								78586,
								78603
							],
							[
								78711,
								78725
							],
							[
								78887,
								78899
							],
							[
								79221,
								79241
							],
							[
								79273,
								79289
							],
							[
								79440,
								79460
							],
							[
								79534,
								79553
							],
							[
								79624,
								79641
							],
							[
								79712,
								79718
							],
							[
								79849,
								79862
							],
							[
								80641,
								80653
							],
							[
								80800,
								80813
							],
							[
								80954,
								80965
							],
							[
								81172,
								81185
							],
							[
								81805,
								81817
							],
							[
								82705,
								82722
							],
							[
								83576,
								83588
							],
							[
								84284,
								84296
							],
							[
								84453,
								84463
							],
							[
								84671,
								84685
							],
							[
								85257,
								85272
							],
							[
								85374,
								85391
							],
							[
								85842,
								85854
							],
							[
								89976,
								89992
							],
							[
								90252,
								90265
							],
							[
								90862,
								90879
							],
							[
								91918,
								91931
							],
							[
								92123,
								92136
							],
							[
								92448,
								92461
							],
							[
								92826,
								92836
							],
							[
								92929,
								92945
							],
							[
								93318,
								93333
							],
							[
								93751,
								93763
							],
							[
								94077,
								94097
							],
							[
								94473,
								94488
							],
							[
								95624,
								95637
							],
							[
								95768,
								95784
							],
							[
								96538,
								96552
							],
							[
								96640,
								96655
							],
							[
								96845,
								96864
							],
							[
								97513,
								97535
							],
							[
								99714,
								99735
							],
							[
								99967,
								99978
							],
							[
								100073,
								100086
							],
							[
								100245,
								100272
							],
							[
								100644,
								100654
							],
							[
								101609,
								101625
							],
							[
								101929,
								101947
							],
							[
								102665,
								102683
							],
							[
								102849,
								102865
							],
							[
								103056,
								103069
							],
							[
								103290,
								103310
							],
							[
								103563,
								103575
							],
							[
								105028,
								105039
							],
							[
								105527,
								105541
							],
							[
								105874,
								105889
							],
							[
								106124,
								106142
							],
							[
								106352,
								106365
							],
							[
								107186,
								107198
							],
							[
								107448,
								107467
							],
							[
								107917,
								107935
							],
							[
								108043,
								108061
							],
							[
								108139,
								108162
							],
							[
								108310,
								108329
							],
							[
								108748,
								108769
							],
							[
								109582,
								109605
							],
							[
								110014,
								110033
							],
							[
								110327,
								110347
							],
							[
								110659,
								110677
							],
							[
								110937,
								110947
							],
							[
								111053,
								111064
							],
							[
								111472,
								111492
							],
							[
								111868,
								111889
							],
							[
								112455,
								112474
							],
							[
								112593,
								112613
							],
							[
								112886,
								112912
							],
							[
								113449,
								113480
							],
							[
								113941,
								113959
							],
							[
								114234,
								114251
							],
							[
								115182,
								115197
							],
							[
								116788,
								116804
							],
							[
								117532,
								117544
							],
							[
								117640,
								117656
							],
							[
								118061,
								118077
							],
							[
								120512,
								120526
							],
							[
								120755,
								120765
							],
							[
								120949,
								120957
							],
							[
								121142,
								121158
							],
							[
								121615,
								121632
							],
							[
								121944,
								121954
							],
							[
								122221,
								122237
							],
							[
								123040,
								123055
							],
							[
								124398,
								124412
							],
							[
								124572,
								124592
							],
							[
								124717,
								124730
							],
							[
								124793,
								124813
							],
							[
								124928,
								124942
							],
							[
								124991,
								125006
							],
							[
								125353,
								125363
							],
							[
								125494,
								125508
							],
							[
								125589,
								125607
							],
							[
								125787,
								125804
							],
							[
								126581,
								126599
							],
							[
								126807,
								126827
							],
							[
								127162,
								127175
							],
							[
								128197,
								128209
							],
							[
								128433,
								128447
							],
							[
								129202,
								129214
							],
							[
								129284,
								129298
							],
							[
								129754,
								129767
							],
							[
								129891,
								129909
							],
							[
								130053,
								130070
							],
							[
								132302,
								132320
							],
							[
								134151,
								134169
							],
							[
								135546,
								135569
							],
							[
								136016,
								136038
							],
							[
								136901,
								136913
							],
							[
								137414,
								137427
							],
							[
								138162,
								138183
							],
							[
								140835,
								140848
							],
							[
								141051,
								141073
							],
							[
								142044,
								142060
							],
							[
								142723,
								142740
							],
							[
								142860,
								142877
							],
							[
								142989,
								143000
							],
							[
								143115,
								143127
							],
							[
								143307,
								143333
							],
							[
								143689,
								143710
							],
							[
								144024,
								144046
							],
							[
								144285,
								144310
							],
							[
								144928,
								144948
							],
							[
								145388,
								145412
							],
							[
								146069,
								146085
							],
							[
								147164,
								147180
							],
							[
								147515,
								147536
							],
							[
								147551,
								147579
							],
							[
								147819,
								147842
							],
							[
								148100,
								148123
							],
							[
								148722,
								148741
							],
							[
								149477,
								149498
							],
							[
								149597,
								149615
							],
							[
								149687,
								149703
							],
							[
								149797,
								149813
							],
							[
								150070,
								150086
							],
							[
								150101,
								150123
							],
							[
								150338,
								150355
							],
							[
								150945,
								150959
							],
							[
								151611,
								151624
							],
							[
								152283,
								152301
							],
							[
								152688,
								152705
							],
							[
								153274,
								153288
							],
							[
								153340,
								153352
							],
							[
								153757,
								153775
							],
							[
								153997,
								154010
							],
							[
								154231,
								154255
							],
							[
								154415,
								154434
							],
							[
								154597,
								154620
							],
							[
								154767,
								154785
							],
							[
								154969,
								154999
							],
							[
								155528,
								155553
							],
							[
								156297,
								156324
							],
							[
								156627,
								156649
							],
							[
								156982,
								157010
							],
							[
								157194,
								157217
							],
							[
								157417,
								157428
							],
							[
								158572,
								158586
							],
							[
								158872,
								158890
							],
							[
								159308,
								159324
							],
							[
								160831,
								160845
							],
							[
								160948,
								160961
							],
							[
								161125,
								161141
							],
							[
								161195,
								161207
							],
							[
								161494,
								161507
							],
							[
								164301,
								164316
							],
							[
								164534,
								164543
							],
							[
								165108,
								165128
							],
							[
								165453,
								165474
							],
							[
								165546,
								165553
							],
							[
								166130,
								166144
							],
							[
								167441,
								167449
							],
							[
								167881,
								167896
							],
							[
								168415,
								168435
							],
							[
								168450,
								168468
							],
							[
								168527,
								168548
							],
							[
								168866,
								168887
							],
							[
								170034,
								170052
							],
							[
								170393,
								170414
							],
							[
								181772,
								181790
							],
							[
								187339,
								187357
							],
							[
								187459,
								187467
							],
							[
								187756,
								187771
							],
							[
								187927,
								187942
							],
							[
								188146,
								188162
							],
							[
								188265,
								188275
							],
							[
								188629,
								188640
							],
							[
								188882,
								188895
							],
							[
								190056,
								190069
							],
							[
								190816,
								190831
							],
							[
								193308,
								193327
							],
							[
								193612,
								193623
							],
							[
								193709,
								193723
							],
							[
								194360,
								194373
							],
							[
								194832,
								194851
							],
							[
								195074,
								195091
							],
							[
								195315,
								195339
							],
							[
								195716,
								195739
							],
							[
								195994,
								196019
							],
							[
								196298,
								196319
							],
							[
								196388,
								196411
							],
							[
								196486,
								196511
							],
							[
								196801,
								196823
							],
							[
								197049,
								197067
							],
							[
								197289,
								197310
							],
							[
								197497,
								197516
							],
							[
								197753,
								197774
							],
							[
								197866,
								197894
							],
							[
								197981,
								198008
							],
							[
								198094,
								198126
							],
							[
								198316,
								198351
							],
							[
								198651,
								198687
							],
							[
								199073,
								199102
							],
							[
								199325,
								199345
							],
							[
								199785,
								199803
							],
							[
								199993,
								200016
							],
							[
								201690,
								201705
							],
							[
								201914,
								201938
							],
							[
								202795,
								202810
							],
							[
								203318,
								203337
							],
							[
								203530,
								203553
							],
							[
								205476,
								205491
							],
							[
								206548,
								206567
							],
							[
								207152,
								207174
							],
							[
								211863,
								211895
							],
							[
								212106,
								212127
							],
							[
								212928,
								212946
							],
							[
								213561,
								213579
							],
							[
								214270,
								214281
							],
							[
								215471,
								215484
							],
							[
								216576,
								216600
							],
							[
								216948,
								216960
							],
							[
								217468,
								217485
							],
							[
								217763,
								217774
							],
							[
								223794,
								223816
							],
							[
								224274,
								224299
							],
							[
								226981,
								226998
							],
							[
								227327,
								227342
							],
							[
								227690,
								227710
							],
							[
								228060,
								228074
							],
							[
								229244,
								229261
							],
							[
								229433,
								229447
							],
							[
								230187,
								230206
							],
							[
								232029,
								232049
							],
							[
								232368,
								232390
							],
							[
								233196,
								233215
							],
							[
								233616,
								233633
							],
							[
								233945,
								233957
							],
							[
								235308,
								235335
							],
							[
								236199,
								236214
							],
							[
								238546,
								238557
							],
							[
								239325,
								239341
							],
							[
								241972,
								241989
							],
							[
								242589,
								242611
							],
							[
								243594,
								243606
							],
							[
								243874,
								243895
							],
							[
								247116,
								247138
							],
							[
								254368,
								254387
							],
							[
								258519,
								258539
							],
							[
								258704,
								258723
							],
							[
								259192,
								259209
							],
							[
								259635,
								259649
							],
							[
								259806,
								259823
							],
							[
								263418,
								263441
							],
							[
								264538,
								264561
							],
							[
								265181,
								265205
							],
							[
								265864,
								265881
							],
							[
								275358,
								275383
							],
							[
								276145,
								276167
							],
							[
								276643,
								276670
							],
							[
								277037,
								277065
							],
							[
								277241,
								277268
							],
							[
								277442,
								277467
							],
							[
								277759,
								277782
							],
							[
								278306,
								278333
							],
							[
								278642,
								278660
							],
							[
								279096,
								279115
							],
							[
								279397,
								279424
							],
							[
								280003,
								280038
							],
							[
								280267,
								280290
							],
							[
								281522,
								281540
							],
							[
								282363,
								282386
							],
							[
								282979,
								282994
							],
							[
								283635,
								283653
							],
							[
								284718,
								284735
							],
							[
								285259,
								285274
							],
							[
								286376,
								286393
							],
							[
								286892,
								286914
							],
							[
								287332,
								287345
							],
							[
								287703,
								287717
							],
							[
								288046,
								288062
							],
							[
								288242,
								288262
							],
							[
								288481,
								288491
							],
							[
								288735,
								288756
							],
							[
								288975,
								288997
							],
							[
								289226,
								289250
							],
							[
								289346,
								289368
							],
							[
								289493,
								289505
							],
							[
								289720,
								289732
							],
							[
								289957,
								289970
							],
							[
								290310,
								290328
							],
							[
								292302,
								292316
							],
							[
								292434,
								292449
							],
							[
								292633,
								292645
							],
							[
								292827,
								292840
							],
							[
								294130,
								294139
							],
							[
								294242,
								294253
							],
							[
								294669,
								294677
							],
							[
								294905,
								294914
							],
							[
								296606,
								296625
							],
							[
								297107,
								297128
							],
							[
								297749,
								297772
							],
							[
								298316,
								298324
							],
							[
								298438,
								298445
							],
							[
								303990,
								303997
							],
							[
								304210,
								304228
							],
							[
								304246,
								304265
							],
							[
								306339,
								306354
							],
							[
								306461,
								306477
							],
							[
								306585,
								306597
							],
							[
								306715,
								306733
							],
							[
								307534,
								307550
							],
							[
								307880,
								307892
							],
							[
								308022,
								308033
							],
							[
								308215,
								308222
							],
							[
								309609,
								309626
							],
							[
								310593,
								310606
							],
							[
								310723,
								310738
							],
							[
								311088,
								311105
							],
							[
								312081,
								312094
							],
							[
								312215,
								312230
							],
							[
								312666,
								312680
							],
							[
								313997,
								314007
							],
							[
								314125,
								314138
							],
							[
								314362,
								314376
							],
							[
								315719,
								315729
							],
							[
								315861,
								315876
							],
							[
								315989,
								316008
							],
							[
								317155,
								317175
							],
							[
								319085,
								319100
							],
							[
								319198,
								319208
							],
							[
								319591,
								319606
							],
							[
								319812,
								319830
							],
							[
								320033,
								320063
							],
							[
								320908,
								320928
							],
							[
								321461,
								321480
							],
							[
								321580,
								321587
							],
							[
								323115,
								323136
							],
							[
								323261,
								323285
							],
							[
								323737,
								323760
							],
							[
								323942,
								323948
							],
							[
								324385,
								324393
							],
							[
								325100,
								325107
							],
							[
								327150,
								327158
							],
							[
								327474,
								327481
							],
							[
								329207,
								329215
							],
							[
								331369,
								331376
							],
							[
								331559,
								331578
							],
							[
								333236,
								333247
							],
							[
								333349,
								333364
							],
							[
								333500,
								333521
							],
							[
								333713,
								333729
							],
							[
								333830,
								333852
							],
							[
								334101,
								334118
							],
							[
								335446,
								335465
							],
							[
								335665,
								335678
							],
							[
								338695,
								338710
							],
							[
								339397,
								339414
							],
							[
								341877,
								341889
							],
							[
								341991,
								342004
							],
							[
								342194,
								342204
							],
							[
								342526,
								342532
							],
							[
								342738,
								342754
							],
							[
								343022,
								343036
							],
							[
								343238,
								343253
							],
							[
								343796,
								343809
							],
							[
								344653,
								344668
							],
							[
								345069,
								345086
							],
							[
								345762,
								345782
							],
							[
								346092,
								346107
							],
							[
								347621,
								347632
							],
							[
								347764,
								347771
							],
							[
								348429,
								348442
							],
							[
								348733,
								348750
							],
							[
								348989,
								349002
							],
							[
								349138,
								349147
							],
							[
								349333,
								349347
							],
							[
								349569,
								349585
							],
							[
								349814,
								349826
							],
							[
								350046,
								350063
							],
							[
								350837,
								350853
							],
							[
								351224,
								351244
							],
							[
								352108,
								352122
							],
							[
								352522,
								352548
							],
							[
								355971,
								355995
							],
							[
								357390,
								357415
							],
							[
								358518,
								358536
							],
							[
								358895,
								358916
							],
							[
								359983,
								360006
							],
							[
								360981,
								361006
							],
							[
								361948,
								361967
							],
							[
								363963,
								363979
							],
							[
								364347,
								364358
							],
							[
								365099,
								365123
							],
							[
								366523,
								366545
							],
							[
								370445,
								370457
							],
							[
								370993,
								371019
							],
							[
								372279,
								372299
							],
							[
								376400,
								376411
							],
							[
								379533,
								379553
							],
							[
								381611,
								381630
							],
							[
								382566,
								382587
							],
							[
								383729,
								383747
							],
							[
								387857,
								387870
							],
							[
								388069,
								388079
							],
							[
								392628,
								392639
							],
							[
								393550,
								393573
							],
							[
								394016,
								394028
							],
							[
								394768,
								394793
							],
							[
								394883,
								394897
							],
							[
								394979,
								394994
							],
							[
								395073,
								395086
							],
							[
								395234,
								395253
							],
							[
								395732,
								395748
							],
							[
								396090,
								396110
							],
							[
								396800,
								396811
							],
							[
								398031,
								398051
							],
							[
								398751,
								398762
							],
							[
								398976,
								398994
							],
							[
								400586,
								400596
							],
							[
								402825,
								402836
							],
							[
								403345,
								403358
							],
							[
								407021,
								407033
							],
							[
								407146,
								407159
							],
							[
								407322,
								407340
							],
							[
								407517,
								407534
							],
							[
								407714,
								407728
							],
							[
								408263,
								408280
							],
							[
								408648,
								408670
							],
							[
								408960,
								408978
							],
							[
								410033,
								410051
							],
							[
								410494,
								410513
							],
							[
								410827,
								410851
							],
							[
								411149,
								411175
							],
							[
								411400,
								411428
							],
							[
								411645,
								411677
							],
							[
								412390,
								412408
							],
							[
								413729,
								413754
							],
							[
								415366,
								415379
							],
							[
								415791,
								415812
							],
							[
								419131,
								419146
							],
							[
								419345,
								419359
							],
							[
								420516,
								420531
							],
							[
								420862,
								420876
							],
							[
								421972,
								421988
							],
							[
								423017,
								423032
							],
							[
								423784,
								423800
							],
							[
								424681,
								424696
							],
							[
								425282,
								425296
							],
							[
								425966,
								425993
							],
							[
								426421,
								426447
							],
							[
								426843,
								426868
							],
							[
								427322,
								427344
							],
							[
								427455,
								427479
							],
							[
								427574,
								427590
							],
							[
								427938,
								427955
							],
							[
								428359,
								428378
							],
							[
								430751,
								430772
							],
							[
								432840,
								432860
							],
							[
								432948,
								432959
							],
							[
								433760,
								433771
							],
							[
								434837,
								434861
							],
							[
								435655,
								435665
							],
							[
								437444,
								437462
							],
							[
								440418,
								440432
							],
							[
								441045,
								441062
							],
							[
								441782,
								441800
							],
							[
								445447,
								445469
							],
							[
								446654,
								446673
							],
							[
								446838,
								446853
							],
							[
								447416,
								447422
							],
							[
								447481,
								447485
							],
							[
								447625,
								447629
							],
							[
								447779,
								447782
							],
							[
								447853,
								447856
							],
							[
								447899,
								447902
							],
							[
								448094,
								448097
							],
							[
								448177,
								448180
							],
							[
								448223,
								448226
							],
							[
								448358,
								448364
							],
							[
								448445,
								448449
							],
							[
								448576,
								448580
							],
							[
								506121,
								506127
							],
							[
								515581,
								515588
							],
							[
								515812,
								515823
							],
							[
								516225,
								516244
							],
							[
								517268,
								517287
							],
							[
								517994,
								518020
							],
							[
								519434,
								519453
							],
							[
								519671,
								519689
							],
							[
								519880,
								519889
							],
							[
								520173,
								520186
							],
							[
								520464,
								520479
							],
							[
								521518,
								521533
							],
							[
								522071,
								522086
							],
							[
								522556,
								522573
							],
							[
								523180,
								523200
							],
							[
								523303,
								523318
							],
							[
								523333,
								523356
							],
							[
								523550,
								523572
							],
							[
								523754,
								523774
							],
							[
								523867,
								523884
							],
							[
								524260,
								524277
							],
							[
								526843,
								526869
							],
							[
								527739,
								527766
							],
							[
								527915,
								527938
							],
							[
								528176,
								528198
							],
							[
								528330,
								528365
							],
							[
								528552,
								528582
							],
							[
								528793,
								528825
							],
							[
								529328,
								529352
							],
							[
								531121,
								531151
							],
							[
								531795,
								531817
							],
							[
								532976,
								533001
							],
							[
								533226,
								533249
							],
							[
								533495,
								533515
							],
							[
								533530,
								533553
							],
							[
								534153,
								534181
							],
							[
								534351,
								534374
							],
							[
								535085,
								535120
							],
							[
								535239,
								535281
							],
							[
								535848,
								535872
							],
							[
								536708,
								536744
							],
							[
								537275,
								537301
							],
							[
								537612,
								537637
							],
							[
								537782,
								537809
							],
							[
								538023,
								538058
							],
							[
								538820,
								538850
							],
							[
								542417,
								542452
							],
							[
								543569,
								543592
							],
							[
								544915,
								544947
							],
							[
								548107,
								548115
							],
							[
								548549,
								548560
							],
							[
								548713,
								548723
							],
							[
								548800,
								548808
							],
							[
								549067,
								549076
							],
							[
								549144,
								549158
							],
							[
								549441,
								549460
							],
							[
								549574,
								549591
							],
							[
								554171,
								554184
							],
							[
								554667,
								554674
							],
							[
								555207,
								555219
							],
							[
								555475,
								555483
							],
							[
								555574,
								555577
							],
							[
								555610,
								555613
							],
							[
								555696,
								555699
							],
							[
								556082,
								556099
							],
							[
								556199,
								556216
							],
							[
								556268,
								556278
							],
							[
								556310,
								556320
							],
							[
								556978,
								556989
							],
							[
								558491,
								558505
							],
							[
								558954,
								558969
							],
							[
								559170,
								559190
							],
							[
								559462,
								559496
							],
							[
								559705,
								559727
							],
							[
								561075,
								561090
							],
							[
								564757,
								564780
							],
							[
								564940,
								564955
							],
							[
								567292,
								567305
							],
							[
								567918,
								567929
							],
							[
								569028,
								569038
							],
							[
								582750,
								582766
							],
							[
								583499,
								583514
							],
							[
								588508,
								588525
							],
							[
								590448,
								590458
							],
							[
								590814,
								590829
							],
							[
								591143,
								591158
							],
							[
								591306,
								591321
							],
							[
								591709,
								591716
							],
							[
								591807,
								591815
							],
							[
								591910,
								591918
							],
							[
								592013,
								592020
							],
							[
								592502,
								592511
							],
							[
								592599,
								592611
							],
							[
								592845,
								592857
							],
							[
								593273,
								593282
							],
							[
								593389,
								593399
							],
							[
								593696,
								593705
							],
							[
								594030,
								594039
							],
							[
								594326,
								594341
							],
							[
								595032,
								595040
							],
							[
								595243,
								595251
							],
							[
								595536,
								595553
							],
							[
								596003,
								596017
							],
							[
								596293,
								596316
							],
							[
								596647,
								596662
							],
							[
								596883,
								596906
							],
							[
								597068,
								597085
							],
							[
								597568,
								597578
							],
							[
								598725,
								598746
							],
							[
								598963,
								598972
							],
							[
								599306,
								599318
							],
							[
								599563,
								599570
							],
							[
								600116,
								600129
							],
							[
								600502,
								600514
							],
							[
								600835,
								600852
							],
							[
								601196,
								601213
							],
							[
								601889,
								601896
							],
							[
								602484,
								602498
							],
							[
								603193,
								603205
							],
							[
								603219,
								603229
							],
							[
								607491,
								607514
							],
							[
								607828,
								607841
							],
							[
								607883,
								607905
							],
							[
								608291,
								608326
							],
							[
								608368,
								608391
							],
							[
								608936,
								608957
							],
							[
								609016,
								609036
							],
							[
								609078,
								609092
							],
							[
								609140,
								609156
							],
							[
								609271,
								609286
							],
							[
								609329,
								609345
							],
							[
								609521,
								609538
							],
							[
								609891,
								609908
							],
							[
								613420,
								613434
							],
							[
								613667,
								613678
							],
							[
								617303,
								617313
							],
							[
								617327,
								617343
							],
							[
								617545,
								617564
							],
							[
								617832,
								617849
							],
							[
								618475,
								618501
							],
							[
								621323,
								621338
							],
							[
								622232,
								622256
							],
							[
								622921,
								622944
							],
							[
								626595,
								626616
							],
							[
								626676,
								626704
							],
							[
								626846,
								626873
							],
							[
								627776,
								627800
							],
							[
								628305,
								628326
							],
							[
								628913,
								628936
							],
							[
								629141,
								629155
							],
							[
								629181,
								629202
							],
							[
								629973,
								629982
							],
							[
								630407,
								630426
							],
							[
								630791,
								630805
							],
							[
								644692,
								644714
							],
							[
								648015,
								648029
							],
							[
								648494,
								648504
							],
							[
								652387,
								652400
							],
							[
								652546,
								652556
							],
							[
								655299,
								655318
							],
							[
								655492,
								655514
							],
							[
								655710,
								655723
							],
							[
								656664,
								656683
							],
							[
								657514,
								657548
							],
							[
								657999,
								658025
							],
							[
								658730,
								658760
							],
							[
								673047,
								673059
							],
							[
								673074,
								673093
							],
							[
								673678,
								673699
							],
							[
								693426,
								693441
							],
							[
								695175,
								695189
							],
							[
								699286,
								699306
							],
							[
								701884,
								701907
							],
							[
								702872,
								702894
							],
							[
								703572,
								703590
							],
							[
								704129,
								704140
							],
							[
								704238,
								704259
							],
							[
								711320,
								711340
							],
							[
								711479,
								711493
							],
							[
								712084,
								712097
							],
							[
								712176,
								712192
							],
							[
								712578,
								712593
							],
							[
								712707,
								712717
							],
							[
								714085,
								714096
							],
							[
								717339,
								717365
							],
							[
								717423,
								717441
							],
							[
								717530,
								717544
							],
							[
								717932,
								717944
							],
							[
								720844,
								720852
							],
							[
								721072,
								721078
							],
							[
								722413,
								722431
							],
							[
								729007,
								729029
							],
							[
								729220,
								729246
							],
							[
								750035,
								750052
							],
							[
								750452,
								750470
							],
							[
								750967,
								750985
							],
							[
								751984,
								752004
							],
							[
								752731,
								752748
							],
							[
								753014,
								753031
							],
							[
								753920,
								753936
							],
							[
								754135,
								754156
							],
							[
								754642,
								754655
							],
							[
								754911,
								754929
							],
							[
								755267,
								755285
							],
							[
								755683,
								755705
							],
							[
								756032,
								756054
							],
							[
								756114,
								756138
							],
							[
								756248,
								756280
							],
							[
								757509,
								757530
							],
							[
								757895,
								757926
							],
							[
								758983,
								759019
							],
							[
								759563,
								759577
							],
							[
								759664,
								759678
							],
							[
								759692,
								759710
							],
							[
								759934,
								759951
							],
							[
								760455,
								760474
							],
							[
								760504,
								760522
							],
							[
								762742,
								762759
							],
							[
								763168,
								763197
							],
							[
								764469,
								764490
							],
							[
								764770,
								764787
							],
							[
								764988,
								765007
							],
							[
								765021,
								765039
							],
							[
								765245,
								765263
							],
							[
								766879,
								766895
							],
							[
								767135,
								767153
							],
							[
								767785,
								767801
							],
							[
								767851,
								767872
							],
							[
								768011,
								768029
							],
							[
								770883,
								770899
							],
							[
								771215,
								771232
							],
							[
								772021,
								772041
							],
							[
								772535,
								772569
							],
							[
								773903,
								773928
							],
							[
								774894,
								774908
							],
							[
								779695,
								779719
							],
							[
								780479,
								780495
							],
							[
								780583,
								780599
							],
							[
								780932,
								780946
							],
							[
								781474,
								781486
							],
							[
								782030,
								782051
							],
							[
								783318,
								783335
							],
							[
								784285,
								784303
							],
							[
								785603,
								785609
							],
							[
								786205,
								786220
							],
							[
								791415,
								791430
							],
							[
								791808,
								791818
							],
							[
								792855,
								792870
							],
							[
								796138,
								796161
							],
							[
								796976,
								796995
							],
							[
								798519,
								798538
							],
							[
								799171,
								799191
							],
							[
								800645,
								800655
							],
							[
								800776,
								800787
							],
							[
								801123,
								801137
							],
							[
								808334,
								808346
							],
							[
								809274,
								809299
							],
							[
								812457,
								812472
							],
							[
								813416,
								813432
							],
							[
								813817,
								813833
							],
							[
								814683,
								814698
							],
							[
								815099,
								815120
							],
							[
								815270,
								815291
							],
							[
								815517,
								815545
							],
							[
								815770,
								815793
							],
							[
								817121,
								817151
							],
							[
								818964,
								818976
							],
							[
								819364,
								819382
							],
							[
								820576,
								820591
							],
							[
								821009,
								821026
							],
							[
								835492,
								835520
							],
							[
								835784,
								835798
							],
							[
								836045,
								836073
							],
							[
								837592,
								837619
							],
							[
								840486,
								840514
							],
							[
								840801,
								840820
							],
							[
								841117,
								841135
							],
							[
								845833,
								845853
							],
							[
								846252,
								846273
							],
							[
								848831,
								848842
							],
							[
								848853,
								848855
							],
							[
								848897,
								848899
							],
							[
								848962,
								848964
							],
							[
								849053,
								849063
							],
							[
								851530,
								851561
							],
							[
								855593,
								855607
							],
							[
								856992,
								857005
							],
							[
								857508,
								857525
							],
							[
								868332,
								868348
							],
							[
								868791,
								868811
							],
							[
								869855,
								869864
							],
							[
								870124,
								870138
							],
							[
								870730,
								870746
							],
							[
								871739,
								871753
							],
							[
								872187,
								872201
							],
							[
								873524,
								873538
							],
							[
								905177,
								905191
							],
							[
								905262,
								905270
							],
							[
								906362,
								906380
							],
							[
								910314,
								910334
							],
							[
								911457,
								911475
							],
							[
								919233,
								919255
							],
							[
								920443,
								920462
							],
							[
								922557,
								922586
							],
							[
								924280,
								924315
							],
							[
								925058,
								925081
							],
							[
								942874,
								942896
							],
							[
								943301,
								943317
							],
							[
								944128,
								944141
							],
							[
								944467,
								944490
							],
							[
								945417,
								945432
							],
							[
								945560,
								945572
							],
							[
								946136,
								946153
							],
							[
								949454,
								949469
							],
							[
								949902,
								949915
							],
							[
								950317,
								950328
							],
							[
								950700,
								950707
							],
							[
								950892,
								950908
							],
							[
								951348,
								951365
							],
							[
								951553,
								951565
							],
							[
								951580,
								951599
							],
							[
								951666,
								951689
							],
							[
								951789,
								951815
							],
							[
								952516,
								952534
							],
							[
								953277,
								953296
							],
							[
								953703,
								953721
							],
							[
								954391,
								954400
							],
							[
								955106,
								955119
							],
							[
								955573,
								955582
							],
							[
								955655,
								955665
							],
							[
								955796,
								955806
							],
							[
								955922,
								955932
							],
							[
								956066,
								956079
							],
							[
								956159,
								956173
							],
							[
								956253,
								956265
							],
							[
								956384,
								956398
							],
							[
								957427,
								957438
							],
							[
								957697,
								957709
							],
							[
								959225,
								959249
							],
							[
								960163,
								960177
							],
							[
								960462,
								960476
							],
							[
								963294,
								963311
							],
							[
								963361,
								963380
							],
							[
								966110,
								966124
							],
							[
								967464,
								967477
							],
							[
								968472,
								968489
							],
							[
								969408,
								969426
							],
							[
								969808,
								969827
							],
							[
								970195,
								970220
							],
							[
								970802,
								970819
							],
							[
								974173,
								974192
							],
							[
								975149,
								975164
							],
							[
								976451,
								976465
							],
							[
								977045,
								977058
							],
							[
								977135,
								977148
							],
							[
								977826,
								977839
							],
							[
								977864,
								977881
							],
							[
								978043,
								978052
							],
							[
								978249,
								978259
							],
							[
								978493,
								978503
							],
							[
								978722,
								978732
							],
							[
								978951,
								978964
							],
							[
								979158,
								979172
							],
							[
								979421,
								979438
							],
							[
								979528,
								979545
							],
							[
								979704,
								979714
							],
							[
								979966,
								979980
							],
							[
								980515,
								980526
							],
							[
								980768,
								980781
							],
							[
								981482,
								981494
							],
							[
								981677,
								981700
							],
							[
								983183,
								983196
							],
							[
								985967,
								985983
							],
							[
								986015,
								986033
							],
							[
								986296,
								986313
							],
							[
								986425,
								986443
							],
							[
								992440,
								992453
							],
							[
								995562,
								995578
							],
							[
								996368,
								996380
							],
							[
								997374,
								997391
							],
							[
								998702,
								998720
							],
							[
								999234,
								999258
							],
							[
								999879,
								999890
							],
							[
								1000470,
								1000488
							],
							[
								1000900,
								1000916
							],
							[
								1003647,
								1003665
							],
							[
								1004673,
								1004687
							],
							[
								1004913,
								1004926
							],
							[
								1005800,
								1005821
							],
							[
								1005907,
								1005929
							],
							[
								1006015,
								1006036
							],
							[
								1006119,
								1006133
							],
							[
								1006293,
								1006313
							],
							[
								1006418,
								1006427
							],
							[
								1006988,
								1007019
							],
							[
								1007592,
								1007622
							],
							[
								1010708,
								1010734
							],
							[
								1011034,
								1011056
							],
							[
								1011259,
								1011281
							],
							[
								1012274,
								1012292
							],
							[
								1012655,
								1012672
							],
							[
								1012837,
								1012862
							],
							[
								1013160,
								1013184
							],
							[
								1013480,
								1013508
							],
							[
								1013791,
								1013805
							],
							[
								1013977,
								1013992
							],
							[
								1014245,
								1014263
							],
							[
								1014521,
								1014532
							],
							[
								1015873,
								1015888
							],
							[
								1016013,
								1016027
							],
							[
								1018337,
								1018358
							],
							[
								1018686,
								1018711
							],
							[
								1019653,
								1019674
							],
							[
								1020200,
								1020216
							],
							[
								1020745,
								1020769
							],
							[
								1021227,
								1021251
							],
							[
								1021546,
								1021570
							],
							[
								1022264,
								1022290
							],
							[
								1022613,
								1022639
							],
							[
								1023676,
								1023710
							],
							[
								1025784,
								1025819
							],
							[
								1027110,
								1027133
							],
							[
								1029256,
								1029285
							],
							[
								1029465,
								1029496
							],
							[
								1029676,
								1029690
							],
							[
								1029883,
								1029905
							],
							[
								1030318,
								1030345
							],
							[
								1030934,
								1030958
							],
							[
								1031559,
								1031576
							],
							[
								1031703,
								1031721
							],
							[
								1033117,
								1033141
							],
							[
								1033293,
								1033309
							],
							[
								1033963,
								1033977
							],
							[
								1035315,
								1035333
							],
							[
								1036389,
								1036410
							],
							[
								1039207,
								1039227
							],
							[
								1039762,
								1039774
							],
							[
								1041272,
								1041293
							],
							[
								1042386,
								1042409
							],
							[
								1042643,
								1042666
							],
							[
								1043037,
								1043060
							],
							[
								1043907,
								1043937
							],
							[
								1044664,
								1044690
							],
							[
								1048897,
								1048914
							],
							[
								1049102,
								1049125
							],
							[
								1050948,
								1050963
							],
							[
								1051227,
								1051242
							],
							[
								1051494,
								1051507
							],
							[
								1051699,
								1051713
							],
							[
								1052831,
								1052848
							],
							[
								1053616,
								1053632
							],
							[
								1053877,
								1053893
							],
							[
								1056361,
								1056381
							],
							[
								1057464,
								1057487
							],
							[
								1058224,
								1058241
							],
							[
								1059154,
								1059174
							],
							[
								1060819,
								1060836
							],
							[
								1061988,
								1062018
							],
							[
								1062374,
								1062389
							],
							[
								1063157,
								1063177
							],
							[
								1063858,
								1063871
							],
							[
								1066909,
								1066920
							],
							[
								1067596,
								1067612
							],
							[
								1067826,
								1067837
							],
							[
								1067934,
								1067955
							],
							[
								1069378,
								1069399
							],
							[
								1069716,
								1069731
							],
							[
								1071426,
								1071460
							],
							[
								1071512,
								1071542
							],
							[
								1071629,
								1071643
							],
							[
								1075721,
								1075736
							],
							[
								1077939,
								1077952
							],
							[
								1078724,
								1078741
							],
							[
								1079802,
								1079818
							],
							[
								1080898,
								1080918
							],
							[
								1081777,
								1081790
							],
							[
								1083236,
								1083253
							],
							[
								1083843,
								1083856
							],
							[
								1085190,
								1085202
							],
							[
								1086596,
								1086609
							],
							[
								1088691,
								1088707
							],
							[
								1090393,
								1090407
							],
							[
								1093508,
								1093527
							],
							[
								1094300,
								1094319
							],
							[
								1096138,
								1096154
							],
							[
								1097280,
								1097289
							],
							[
								1097299,
								1097317
							],
							[
								1097411,
								1097431
							],
							[
								1099115,
								1099128
							],
							[
								1101460,
								1101479
							],
							[
								1101494,
								1101521
							],
							[
								1101732,
								1101754
							],
							[
								1101982,
								1101997
							],
							[
								1102358,
								1102382
							],
							[
								1103220,
								1103242
							],
							[
								1104678,
								1104704
							],
							[
								1107194,
								1107215
							],
							[
								1108779,
								1108794
							],
							[
								1108986,
								1109004
							],
							[
								1109199,
								1109218
							],
							[
								1109440,
								1109463
							],
							[
								1110883,
								1110901
							],
							[
								1111318,
								1111335
							],
							[
								1111465,
								1111477
							],
							[
								1111728,
								1111746
							],
							[
								1112288,
								1112305
							],
							[
								1112882,
								1112905
							],
							[
								1113599,
								1113620
							],
							[
								1114665,
								1114676
							],
							[
								1115264,
								1115277
							],
							[
								1115606,
								1115628
							],
							[
								1116007,
								1116026
							],
							[
								1116467,
								1116486
							],
							[
								1116756,
								1116774
							],
							[
								1117092,
								1117118
							],
							[
								1117948,
								1117977
							],
							[
								1119056,
								1119081
							],
							[
								1119559,
								1119580
							],
							[
								1120455,
								1120473
							],
							[
								1120934,
								1120956
							],
							[
								1121344,
								1121367
							],
							[
								1122180,
								1122193
							],
							[
								1123232,
								1123256
							],
							[
								1124124,
								1124144
							],
							[
								1124727,
								1124743
							],
							[
								1125355,
								1125376
							],
							[
								1125909,
								1125925
							],
							[
								1126360,
								1126370
							],
							[
								1126595,
								1126614
							],
							[
								1126996,
								1127010
							],
							[
								1127423,
								1127443
							],
							[
								1127687,
								1127704
							],
							[
								1129078,
								1129090
							],
							[
								1129142,
								1129160
							],
							[
								1130490,
								1130509
							],
							[
								1131213,
								1131228
							],
							[
								1132710,
								1132737
							],
							[
								1135756,
								1135773
							],
							[
								1138992,
								1139007
							],
							[
								1141159,
								1141178
							],
							[
								1141902,
								1141918
							],
							[
								1142565,
								1142580
							],
							[
								1143253,
								1143266
							],
							[
								1144775,
								1144791
							],
							[
								1145758,
								1145772
							],
							[
								1146315,
								1146332
							],
							[
								1146501,
								1146513
							],
							[
								1146951,
								1146967
							],
							[
								1147531,
								1147554
							],
							[
								1148040,
								1148061
							],
							[
								1149043,
								1149059
							],
							[
								1149662,
								1149679
							],
							[
								1150022,
								1150041
							],
							[
								1151534,
								1151552
							],
							[
								1152874,
								1152897
							],
							[
								1153984,
								1154004
							],
							[
								1159919,
								1159949
							],
							[
								1160290,
								1160297
							],
							[
								1160534,
								1160541
							],
							[
								1160739,
								1160754
							],
							[
								1161885,
								1161897
							],
							[
								1162016,
								1162029
							],
							[
								1162752,
								1162765
							],
							[
								1163271,
								1163285
							],
							[
								1163335,
								1163347
							],
							[
								1163640,
								1163653
							],
							[
								1163956,
								1163970
							],
							[
								1164131,
								1164145
							],
							[
								1164388,
								1164402
							],
							[
								1167594,
								1167609
							],
							[
								1167959,
								1167976
							],
							[
								1170091,
								1170110
							],
							[
								1170403,
								1170420
							],
							[
								1172028,
								1172058
							],
							[
								1172793,
								1172806
							],
							[
								1173173,
								1173185
							],
							[
								1173497,
								1173518
							],
							[
								1175679,
								1175696
							],
							[
								1177574,
								1177594
							],
							[
								1178951,
								1178969
							],
							[
								1179495,
								1179514
							],
							[
								1180594,
								1180612
							],
							[
								1181250,
								1181274
							],
							[
								1181403,
								1181414
							],
							[
								1181583,
								1181597
							],
							[
								1185266,
								1185281
							],
							[
								1187845,
								1187858
							],
							[
								1188852,
								1188866
							],
							[
								1189164,
								1189186
							],
							[
								1191362,
								1191388
							],
							[
								1191403,
								1191438
							],
							[
								1191722,
								1191752
							],
							[
								1192062,
								1192092
							],
							[
								1193502,
								1193527
							],
							[
								1195391,
								1195402
							],
							[
								1195416,
								1195433
							],
							[
								1195582,
								1195599
							],
							[
								1195778,
								1195797
							],
							[
								1196537,
								1196558
							],
							[
								1197076,
								1197100
							],
							[
								1203015,
								1203038
							],
							[
								1204671,
								1204693
							],
							[
								1209940,
								1209969
							],
							[
								1210039,
								1210060
							],
							[
								1210944,
								1210961
							],
							[
								1211171,
								1211187
							],
							[
								1214394,
								1214407
							],
							[
								1214980,
								1214992
							],
							[
								1215140,
								1215165
							],
							[
								1216979,
								1216992
							],
							[
								1217983,
								1218003
							],
							[
								1218021,
								1218042
							],
							[
								1218173,
								1218186
							],
							[
								1219528,
								1219542
							],
							[
								1225915,
								1225931
							],
							[
								1229701,
								1229718
							],
							[
								1230291,
								1230310
							],
							[
								1230485,
								1230501
							],
							[
								1230668,
								1230688
							],
							[
								1231288,
								1231313
							],
							[
								1231810,
								1231824
							],
							[
								1232376,
								1232390
							],
							[
								1232902,
								1232916
							],
							[
								1233569,
								1233594
							],
							[
								1233837,
								1233855
							],
							[
								1235290,
								1235308
							],
							[
								1235516,
								1235529
							],
							[
								1235764,
								1235793
							],
							[
								1235885,
								1235901
							],
							[
								1236507,
								1236530
							],
							[
								1237593,
								1237616
							],
							[
								1238739,
								1238760
							],
							[
								1239380,
								1239406
							],
							[
								1240064,
								1240076
							],
							[
								1241168,
								1241180
							],
							[
								1242639,
								1242651
							],
							[
								1244298,
								1244312
							],
							[
								1245403,
								1245428
							],
							[
								1248370,
								1248398
							],
							[
								1251278,
								1251302
							],
							[
								1252665,
								1252678
							],
							[
								1252839,
								1252870
							],
							[
								1256163,
								1256188
							],
							[
								1257153,
								1257166
							],
							[
								1258095,
								1258111
							],
							[
								1258753,
								1258773
							],
							[
								1259579,
								1259594
							],
							[
								1260022,
								1260049
							],
							[
								1260183,
								1260201
							],
							[
								1261160,
								1261180
							],
							[
								1261871,
								1261892
							],
							[
								1262357,
								1262375
							],
							[
								1262836,
								1262854
							],
							[
								1263215,
								1263232
							],
							[
								1263366,
								1263391
							],
							[
								1264213,
								1264226
							],
							[
								1264500,
								1264516
							],
							[
								1265344,
								1265355
							],
							[
								1265750,
								1265760
							],
							[
								1265834,
								1265852
							],
							[
								1268942,
								1268959
							],
							[
								1269225,
								1269237
							],
							[
								1270030,
								1270045
							],
							[
								1270392,
								1270407
							],
							[
								1271326,
								1271340
							],
							[
								1272242,
								1272257
							],
							[
								1272559,
								1272576
							],
							[
								1273065,
								1273082
							],
							[
								1273280,
								1273294
							],
							[
								1274004,
								1274014
							],
							[
								1274719,
								1274729
							],
							[
								1275134,
								1275144
							],
							[
								1275507,
								1275520
							],
							[
								1275929,
								1275941
							],
							[
								1276351,
								1276366
							],
							[
								1276586,
								1276600
							],
							[
								1277886,
								1277902
							],
							[
								1278541,
								1278552
							],
							[
								1279080,
								1279097
							],
							[
								1279112,
								1279137
							],
							[
								1279573,
								1279593
							],
							[
								1279876,
								1279898
							],
							[
								1280592,
								1280612
							],
							[
								1285613,
								1285634
							],
							[
								1287346,
								1287364
							],
							[
								1287619,
								1287632
							],
							[
								1287726,
								1287755
							],
							[
								1287862,
								1287883
							],
							[
								1288040,
								1288061
							],
							[
								1288075,
								1288104
							],
							[
								1288172,
								1288198
							],
							[
								1288410,
								1288430
							],
							[
								1289414,
								1289447
							],
							[
								1289626,
								1289651
							],
							[
								1291067,
								1291081
							],
							[
								1291216,
								1291247
							],
							[
								1291930,
								1291971
							],
							[
								1292095,
								1292124
							],
							[
								1293121,
								1293158
							],
							[
								1293419,
								1293451
							],
							[
								1293665,
								1293697
							],
							[
								1295193,
								1295213
							],
							[
								1295658,
								1295673
							],
							[
								1296246,
								1296268
							],
							[
								1297534,
								1297553
							],
							[
								1297893,
								1297916
							],
							[
								1298121,
								1298146
							],
							[
								1299026,
								1299049
							],
							[
								1299184,
								1299202
							],
							[
								1301314,
								1301340
							],
							[
								1301925,
								1301955
							],
							[
								1303923,
								1303937
							],
							[
								1308954,
								1308969
							],
							[
								1311169,
								1311189
							],
							[
								1312816,
								1312831
							],
							[
								1313619,
								1313635
							],
							[
								1313854,
								1313884
							],
							[
								1314051,
								1314077
							],
							[
								1314254,
								1314282
							],
							[
								1315197,
								1315215
							],
							[
								1317306,
								1317340
							],
							[
								1317564,
								1317610
							],
							[
								1318126,
								1318153
							],
							[
								1318168,
								1318205
							],
							[
								1318455,
								1318487
							],
							[
								1318764,
								1318794
							],
							[
								1319494,
								1319526
							],
							[
								1324804,
								1324826
							],
							[
								1329141,
								1329155
							],
							[
								1329336,
								1329349
							],
							[
								1329494,
								1329511
							],
							[
								1329674,
								1329684
							],
							[
								1329981,
								1330000
							],
							[
								1331687,
								1331698
							],
							[
								1332043,
								1332057
							],
							[
								1332324,
								1332337
							],
							[
								1332692,
								1332711
							],
							[
								1334389,
								1334405
							],
							[
								1334957,
								1334975
							],
							[
								1336816,
								1336824
							],
							[
								1336945,
								1336954
							],
							[
								1337107,
								1337120
							],
							[
								1337215,
								1337231
							],
							[
								1337593,
								1337612
							],
							[
								1338023,
								1338037
							],
							[
								1338175,
								1338187
							],
							[
								1338305,
								1338319
							],
							[
								1338983,
								1338998
							],
							[
								1340060,
								1340069
							],
							[
								1340296,
								1340311
							],
							[
								1340883,
								1340897
							],
							[
								1341366,
								1341380
							],
							[
								1342518,
								1342533
							],
							[
								1345332,
								1345340
							],
							[
								1345473,
								1345492
							],
							[
								1347573,
								1347584
							],
							[
								1348138,
								1348156
							],
							[
								1348260,
								1348282
							],
							[
								1348458,
								1348475
							],
							[
								1348857,
								1348881
							],
							[
								1349220,
								1349249
							],
							[
								1349566,
								1349589
							],
							[
								1350163,
								1350174
							],
							[
								1350482,
								1350498
							],
							[
								1350707,
								1350720
							],
							[
								1354525,
								1354536
							],
							[
								1354676,
								1354702
							],
							[
								1355481,
								1355506
							],
							[
								1355809,
								1355824
							],
							[
								1356041,
								1356056
							],
							[
								1356335,
								1356350
							],
							[
								1356780,
								1356794
							],
							[
								1360861,
								1360880
							],
							[
								1361310,
								1361329
							],
							[
								1361444,
								1361469
							],
							[
								1362371,
								1362391
							],
							[
								1363285,
								1363313
							],
							[
								1366264,
								1366283
							],
							[
								1366436,
								1366470
							],
							[
								1367665,
								1367689
							],
							[
								1368087,
								1368110
							],
							[
								1368266,
								1368285
							],
							[
								1369385,
								1369409
							],
							[
								1370238,
								1370257
							],
							[
								1372015,
								1372036
							],
							[
								1372280,
								1372298
							],
							[
								1372726,
								1372744
							],
							[
								1373251,
								1373268
							],
							[
								1373402,
								1373415
							],
							[
								1374615,
								1374629
							],
							[
								1375679,
								1375692
							],
							[
								1376288,
								1376305
							],
							[
								1378560,
								1378581
							],
							[
								1379324,
								1379344
							],
							[
								1379770,
								1379790
							],
							[
								1380324,
								1380343
							],
							[
								1380475,
								1380496
							],
							[
								1380764,
								1380783
							],
							[
								1381646,
								1381667
							],
							[
								1381976,
								1382001
							],
							[
								1383083,
								1383106
							],
							[
								1384457,
								1384480
							],
							[
								1387252,
								1387273
							],
							[
								1388486,
								1388508
							],
							[
								1389339,
								1389359
							],
							[
								1389649,
								1389666
							],
							[
								1390344,
								1390359
							],
							[
								1392443,
								1392459
							],
							[
								1396328,
								1396352
							],
							[
								1397388,
								1397410
							],
							[
								1397539,
								1397560
							],
							[
								1397665,
								1397689
							],
							[
								1397812,
								1397832
							],
							[
								1398984,
								1399013
							],
							[
								1399559,
								1399588
							],
							[
								1400851,
								1400875
							],
							[
								1403020,
								1403043
							],
							[
								1404521,
								1404540
							],
							[
								1406749,
								1406774
							],
							[
								1407240,
								1407262
							],
							[
								1407696,
								1407718
							],
							[
								1407949,
								1407970
							],
							[
								1408104,
								1408130
							],
							[
								1408951,
								1408964
							],
							[
								1408978,
								1408999
							],
							[
								1410493,
								1410510
							],
							[
								1412507,
								1412528
							],
							[
								1413232,
								1413259
							],
							[
								1414161,
								1414186
							],
							[
								1415855,
								1415880
							],
							[
								1416758,
								1416776
							],
							[
								1417243,
								1417270
							],
							[
								1419518,
								1419544
							],
							[
								1429839,
								1429867
							],
							[
								1431633,
								1431653
							],
							[
								1431737,
								1431765
							],
							[
								1431972,
								1432000
							],
							[
								1432153,
								1432170
							],
							[
								1432534,
								1432555
							],
							[
								1432766,
								1432793
							],
							[
								1433024,
								1433058
							],
							[
								1433354,
								1433379
							],
							[
								1433970,
								1433992
							],
							[
								1434532,
								1434568
							],
							[
								1434665,
								1434695
							],
							[
								1434936,
								1434956
							],
							[
								1435676,
								1435695
							],
							[
								1436178,
								1436195
							],
							[
								1436522,
								1436543
							],
							[
								1439220,
								1439235
							],
							[
								1439778,
								1439801
							],
							[
								1440155,
								1440177
							],
							[
								1440350,
								1440370
							],
							[
								1440628,
								1440653
							],
							[
								1440848,
								1440873
							],
							[
								1441159,
								1441188
							],
							[
								1441624,
								1441653
							],
							[
								1442277,
								1442299
							],
							[
								1442921,
								1442951
							],
							[
								1443324,
								1443351
							],
							[
								1445524,
								1445542
							],
							[
								1445783,
								1445813
							],
							[
								1446076,
								1446110
							],
							[
								1446965,
								1446986
							],
							[
								1447936,
								1447966
							],
							[
								1448580,
								1448599
							],
							[
								1450949,
								1450966
							],
							[
								1451425,
								1451450
							],
							[
								1452403,
								1452422
							],
							[
								1454377,
								1454396
							],
							[
								1455618,
								1455640
							],
							[
								1461245,
								1461264
							],
							[
								1462706,
								1462728
							],
							[
								1464003,
								1464023
							],
							[
								1465683,
								1465706
							],
							[
								1466930,
								1466944
							],
							[
								1467223,
								1467237
							],
							[
								1467346,
								1467361
							],
							[
								1467472,
								1467487
							],
							[
								1467598,
								1467614
							],
							[
								1467727,
								1467742
							],
							[
								1467899,
								1467915
							],
							[
								1468097,
								1468112
							],
							[
								1468269,
								1468285
							],
							[
								1468453,
								1468470
							],
							[
								1468592,
								1468609
							],
							[
								1468737,
								1468751
							],
							[
								1468849,
								1468864
							],
							[
								1468963,
								1468978
							],
							[
								1469077,
								1469093
							],
							[
								1469193,
								1469208
							],
							[
								1469307,
								1469323
							],
							[
								1469445,
								1469460
							],
							[
								1469556,
								1469572
							],
							[
								1469677,
								1469694
							],
							[
								1469795,
								1469812
							],
							[
								1469906,
								1469921
							],
							[
								1470153,
								1470170
							],
							[
								1471394,
								1471413
							],
							[
								1477873,
								1477904
							],
							[
								1478095,
								1478111
							],
							[
								1478795,
								1478817
							],
							[
								1479768,
								1479798
							],
							[
								1481068,
								1481097
							],
							[
								1482906,
								1482932
							],
							[
								1485054,
								1485078
							],
							[
								1485531,
								1485550
							],
							[
								1485791,
								1485814
							],
							[
								1487273,
								1487293
							],
							[
								1489601,
								1489621
							],
							[
								1494123,
								1494136
							],
							[
								1494152,
								1494170
							],
							[
								1495938,
								1495951
							],
							[
								1497138,
								1497140
							],
							[
								1497554,
								1497556
							],
							[
								1499840,
								1499856
							],
							[
								1501177,
								1501198
							],
							[
								1501583,
								1501598
							],
							[
								1501775,
								1501790
							],
							[
								1503904,
								1503921
							],
							[
								1506215,
								1506237
							],
							[
								1506425,
								1506451
							],
							[
								1510222,
								1510235
							],
							[
								1510439,
								1510467
							],
							[
								1511061,
								1511077
							],
							[
								1511136,
								1511159
							],
							[
								1511360,
								1511387
							],
							[
								1512893,
								1512921
							],
							[
								1517047,
								1517074
							],
							[
								1518715,
								1518744
							],
							[
								1519755,
								1519771
							],
							[
								1521830,
								1521850
							]
						],
						"symlist":
						[
							"typed_array_size_log2",
							"JSErrorEnum",
							"JSShape",
							"JSString",
							"JSAtomStruct",
							"JSGCPhaseEnum",
							"OPCodeEnum",
							"JSNumericOperations",
							"JSRuntime",
							"JSStackFrame",
							"JSClass",
							"JSStackFrame",
							"JSGCObjectTypeEnum",
							"JSGCObjectHeader",
							"JSVarRef",
							"JSFloatEnv",
							"JSBigFloat",
							"JSBigDecimal",
							"JSAutoInitIDEnum",
							"JSContext",
							"JSFloat64Union",
							"JSAtomKindEnum",
							"JSString",
							"JSClosureVar",
							"JSVarScope",
							"JSVarKindEnum",
							"JSVarDef",
							"JSFunctionKindEnum",
							"JSFunctionBytecode",
							"JSBoundFunction",
							"JSIteratorKindEnum",
							"JSForInIterator",
							"JSRegExp",
							"JSProxyData",
							"JSArrayBuffer",
							"JSTypedArray",
							"JSAsyncFunctionState",
							"JSAsyncFunctionData",
							"JSOverloadableOperatorEnum",
							"JSBinaryOperatorDefEntry",
							"JSBinaryOperatorDef",
							"JSOperatorSetData",
							"JSReqModuleEntry",
							"JSExportTypeEnum",
							"JSExportEntry",
							"JSStarExportEntry",
							"JSImportEntry",
							"JSModuleDef",
							"JSJobEntry",
							"JSProperty",
							"JSShapeProperty",
							"JSShape",
							"JSObject",
							"JSMapRecord",
							"JSBoundFunction",
							"JSCFunctionDataRecord",
							"JSCClosureRecord",
							"JSForInIterator",
							"JSArrayBuffer",
							"JSTypedArray",
							"JSFloatEnv",
							"JSOperatorSetData",
							"JSMapState",
							"JSMapIteratorData",
							"JSArrayIteratorData",
							"JSRegExpStringIteratorData",
							"JSGeneratorData",
							"JSProxyData",
							"JSPromiseData",
							"JSPromiseFunctionData",
							"JSAsyncFunctionData",
							"JSAsyncFromSyncIteratorData",
							"JSAsyncGeneratorData",
							"JSFunctionBytecode",
							"JSTypedArray",
							"DEF",
							"DEF",
							"FMT",
							"DEF",
							"OPCodeFormat",
							"OPCodeEnum",
							"FMT",
							"DEF",
							"def",
							"FMT",
							"DEF",
							"def",
							"JS_InitAtoms",
							"__JS_NewAtomInit",
							"JS_FreeAtomStruct",
							"free_function_bytecode",
							"js_call_c_function",
							"js_call_bound_function",
							"JS_CallInternal",
							"JS_CallConstructorInternal",
							"JS_CallFree",
							"JS_InvokeFree",
							"JS_ToArrayLengthFree",
							"JS_EvalObject",
							"JS_ThrowInternalError",
							"JS_DumpAtoms",
							"JS_DumpString",
							"JS_DumpObjectHeader",
							"JS_DumpObject",
							"JS_DumpGCObject",
							"JS_DumpValueShort",
							"JS_DumpValue",
							"JS_PrintValue",
							"JS_DumpShapes",
							"js_function_apply",
							"js_array_finalizer",
							"js_array_mark",
							"js_object_data_finalizer",
							"js_object_data_mark",
							"js_c_function_finalizer",
							"js_c_function_mark",
							"js_bytecode_function_finalizer",
							"js_bytecode_function_mark",
							"js_bound_function_finalizer",
							"js_bound_function_mark",
							"js_for_in_iterator_finalizer",
							"js_for_in_iterator_mark",
							"js_regexp_finalizer",
							"js_array_buffer_finalizer",
							"js_typed_array_finalizer",
							"js_typed_array_mark",
							"js_proxy_finalizer",
							"js_proxy_mark",
							"js_map_finalizer",
							"js_map_mark",
							"js_map_iterator_finalizer",
							"js_map_iterator_mark",
							"js_array_iterator_finalizer",
							"js_array_iterator_mark",
							"js_regexp_string_iterator_finalizer",
							"js_regexp_string_iterator_mark",
							"js_generator_finalizer",
							"js_generator_mark",
							"js_promise_finalizer",
							"js_promise_mark",
							"js_promise_resolve_function_finalizer",
							"js_promise_resolve_function_mark",
							"js_operator_set_finalizer",
							"js_operator_set_mark",
							"JS_ToStringFree",
							"JS_ToBoolFree",
							"JS_ToInt32Free",
							"JS_ToFloat64Free",
							"JS_ToUint8ClampFree",
							"js_compile_regexp",
							"js_regexp_constructor_internal",
							"gc_decref",
							"JS_NewClass1",
							"JSStrictEqModeEnum",
							"js_strict_eq2",
							"js_strict_eq",
							"js_same_value",
							"js_same_value_zero",
							"JS_ToObject",
							"JS_ToObjectFree",
							"add_property",
							"js_float_env_finalizer",
							"JS_NewBigFloat",
							"JS_GetBigFloat",
							"JS_NewBigDecimal",
							"JS_GetBigDecimal",
							"JS_NewBigInt",
							"JS_GetBigInt",
							"JS_CompactBigInt1",
							"JS_CompactBigInt",
							"JS_ToBigInt64Free",
							"JS_ToBigInt",
							"JS_FreeBigInt",
							"JS_ToBigFloat",
							"JS_ToBigDecimalFree",
							"JS_ToBigDecimal",
							"JS_ThrowOutOfMemory",
							"JS_ThrowTypeErrorRevokedProxy",
							"js_proxy_getPrototypeOf",
							"js_proxy_setPrototypeOf",
							"js_proxy_isExtensible",
							"js_proxy_preventExtensions",
							"js_proxy_isArray",
							"JS_CreateProperty",
							"js_string_memcmp",
							"reset_weak_ref",
							"js_array_buffer_constructor3",
							"js_get_array_buffer",
							"js_typed_array_constructor",
							"typed_array_is_detached",
							"typed_array_get_length",
							"JS_ThrowTypeErrorDetachedArrayBuffer",
							"get_var_ref",
							"js_generator_function_call",
							"js_async_function_resolve_finalizer",
							"js_async_function_resolve_mark",
							"JS_EvalInternal",
							"js_free_module_def",
							"js_mark_module_def",
							"js_import_meta",
							"js_dynamic_import",
							"free_var_ref",
							"js_new_promise_capability",
							"perform_promise_then",
							"js_promise_resolve",
							"js_string_compare",
							"JS_ToNumber",
							"JS_SetPropertyValue",
							"JS_NumberIsInteger",
							"JS_NumberIsNegativeOrMinusZero",
							"JS_ToNumberFree",
							"JS_GetOwnPropertyInternal",
							"js_free_desc",
							"async_func_mark",
							"JS_AddIntrinsicBasicObjects",
							"js_free_shape",
							"js_free_shape_null",
							"js_shape_prepare_update",
							"init_shape_hash",
							"js_get_length32",
							"js_get_length64",
							"free_arg_list",
							"build_arg_list",
							"js_get_fast_array",
							"JS_CreateAsyncFromSyncIterator",
							"js_c_function_data_finalizer",
							"js_c_function_data_mark",
							"js_c_function_data_call",
							"js_c_closure_finalizer",
							"js_c_closure_call",
							"js_symbol_to_atom",
							"add_gc_object",
							"remove_gc_object",
							"js_async_function_free0",
							"js_instantiate_prototype",
							"js_module_ns_autoinit",
							"JS_InstantiateFunctionListItem2",
							"JS_SetUncatchableError",
							"js_trigger_gc",
							"js_malloc_usable_size_unknown",
							"js_malloc_rt",
							"js_free_rt",
							"js_realloc_rt",
							"js_malloc_usable_size_rt",
							"js_mallocz_rt",
							"js_bf_realloc",
							"js_malloc",
							"js_mallocz",
							"js_free",
							"js_realloc",
							"js_realloc2",
							"js_malloc_usable_size",
							"js_strndup",
							"js_strdup",
							"js_realloc_array",
							"js_resize_array",
							"js_dbuf_init",
							"is_digit",
							"JSClassShortDef",
							"init_class_range",
							"JS_ThrowUnsupportedOperation",
							"invalid_to_string",
							"invalid_from_string",
							"invalid_unary_arith",
							"invalid_binary_arith",
							"invalid_mul_pow10_to_float64",
							"invalid_mul_pow10",
							"set_dummy_numeric_ops",
							"js_get_stack_pointer",
							"js_check_stack_overflow",
							"js_get_stack_pointer",
							"js_check_stack_overflow",
							"JS_NewRuntime2",
							"JS_GetRuntimeOpaque",
							"JS_SetRuntimeOpaque",
							"js_def_malloc_usable_size",
							"js_def_malloc",
							"js_def_free",
							"js_def_realloc",
							"JS_NewRuntime",
							"JS_SetMemoryLimit",
							"JS_SetGCThreshold",
							"malloc",
							"free",
							"realloc",
							"JS_SetInterruptHandler",
							"JS_SetCanBlock",
							"JS_SetSharedArrayBufferFunctions",
							"JS_EnqueueJob",
							"JS_IsJobPending",
							"JS_ExecutePendingJob",
							"atom_get_free",
							"atom_is_free",
							"atom_set_free",
							"js_alloc_string_rt",
							"js_alloc_string",
							"js_free_string",
							"JS_SetRuntimeInfo",
							"JS_FreeRuntime",
							"JS_NewContextRaw",
							"JS_NewContext",
							"JS_GetContextOpaque",
							"JS_SetContextOpaque",
							"set_value",
							"JS_SetClassProto",
							"JS_GetClassProto",
							"JSFreeModuleEnum",
							"js_free_modules",
							"JS_DupContext",
							"JS_MarkContext",
							"JS_FreeContext",
							"JS_GetRuntime",
							"update_stack_limit",
							"JS_SetMaxStackSize",
							"JS_UpdateStackTop",
							"is_strict_mode",
							"is_math_mode",
							"JS_ATOM_COUNT_RESIZE",
							"__JS_AtomIsConst",
							"__JS_AtomIsTaggedInt",
							"__JS_AtomFromUInt32",
							"__JS_AtomToUInt32",
							"is_num",
							"is_num_string",
							"hash_string8",
							"hash_string16",
							"hash_string",
							"JS_DumpString",
							"JS_DumpAtoms",
							"JS_ResizeAtomHash",
							"JS_InitAtoms",
							"JS_DupAtomRT",
							"JS_DupAtom",
							"JS_AtomGetKind",
							"JS_AtomIsString",
							"js_get_atom_index",
							"__JS_NewAtom",
							"__JS_NewAtomInit",
							"__JS_FindAtom",
							"JS_FreeAtomStruct",
							"__JS_FreeAtom",
							"JS_NewAtomStr",
							"JS_NewAtomLen",
							"JS_NewAtom",
							"JS_NewAtomUInt32",
							"JS_NewAtomInt64",
							"JS_NewSymbol",
							"JS_NewSymbolFromAtom",
							"JS_AtomGetStrRT",
							"JS_AtomGetStr",
							"__JS_AtomToValue",
							"JS_AtomToValue",
							"JS_AtomToString",
							"JS_AtomIsArrayIndex",
							"JS_AtomIsNumericIndex1",
							"JS_AtomIsNumericIndex",
							"JS_FreeAtom",
							"JS_FreeAtomRT",
							"JS_AtomSymbolHasDescription",
							"print_atom",
							"JS_AtomToCString",
							"js_atom_concat_str",
							"js_atom_concat_num",
							"JS_IsEmptyString",
							"JS_NewClassID",
							"JS_IsRegisteredClass",
							"JS_NewClass1",
							"JS_NewClass",
							"js_new_string8",
							"js_new_string16",
							"js_new_string_char",
							"js_sub_string",
							"StringBuffer",
							"string_buffer_init2",
							"string_buffer_init",
							"string_buffer_free",
							"string_buffer_set_error",
							"string_buffer_widen",
							"string_buffer_realloc",
							"string_buffer_putc_slow",
							"string_buffer_putc8",
							"string_buffer_putc16",
							"string_buffer_putc",
							"string_get",
							"string_getc",
							"string_buffer_write8",
							"string_buffer_write16",
							"string_buffer_puts8",
							"string_buffer_concat",
							"string_buffer_concat_value",
							"string_buffer_concat_value_free",
							"string_buffer_fill",
							"string_buffer_end",
							"JS_NewStringLen",
							"JS_ConcatString3",
							"JS_NewString",
							"JS_NewAtomString",
							"JS_ToCStringLen2",
							"JS_FreeCString",
							"memcmp16_8",
							"memcmp16",
							"js_string_memcmp",
							"js_string_compare",
							"copy_str16",
							"JS_ConcatString1",
							"JS_ConcatString",
							"get_shape_size",
							"get_shape_from_alloc",
							"prop_hash_end",
							"get_alloc_from_shape",
							"get_shape_prop",
							"init_shape_hash",
							"shape_hash",
							"get_shape_hash",
							"shape_initial_hash",
							"resize_shape_hash",
							"js_shape_hash_link",
							"js_shape_hash_unlink",
							"js_new_shape2",
							"js_new_shape",
							"js_clone_shape",
							"js_dup_shape",
							"js_free_shape0",
							"js_free_shape",
							"js_free_shape_null",
							"resize_properties",
							"compact_properties",
							"add_shape_property",
							"find_hashed_shape_proto",
							"find_hashed_shape_prop",
							"JS_DumpShape",
							"JS_DumpShapes",
							"JS_NewObjectFromShape",
							"get_proto_obj",
							"JS_NewObjectProtoClass",
							"JS_SetObjectData",
							"JS_NewObjectClass",
							"JS_NewObjectProto",
							"JS_NewArray",
							"JS_NewObject",
							"js_function_set_properties",
							"js_class_has_bytecode",
							"JS_GetFunctionBytecode",
							"js_method_set_home_object",
							"js_get_function_name",
							"js_method_set_properties",
							"JS_NewCFunction3",
							"JS_NewCFunction2",
							"JSCFunctionDataRecord",
							"js_c_function_data_finalizer",
							"js_c_function_data_mark",
							"js_c_function_data_call",
							"JS_NewCFunctionData",
							"js_autoinit_get_realm",
							"js_autoinit_get_id",
							"js_autoinit_free",
							"js_autoinit_mark",
							"JSCClosureRecord",
							"js_c_closure_finalizer",
							"js_c_closure_call",
							"JS_NewCClosure",
							"free_property",
							"find_own_property1",
							"find_own_property",
							"set_cycle_flag",
							"free_var_ref",
							"js_array_finalizer",
							"js_array_mark",
							"js_object_data_finalizer",
							"js_object_data_mark",
							"js_c_function_finalizer",
							"js_c_function_mark",
							"js_bytecode_function_finalizer",
							"js_bytecode_function_mark",
							"js_bound_function_finalizer",
							"js_bound_function_mark",
							"js_for_in_iterator_finalizer",
							"js_for_in_iterator_mark",
							"free_object",
							"free_gc_object",
							"free_zero_refcount",
							"__JS_FreeValueRT",
							"__JS_FreeValue",
							"add_gc_object",
							"remove_gc_object",
							"JS_MarkValue",
							"mark_children",
							"gc_decref_child",
							"gc_decref",
							"gc_scan_incref_child",
							"gc_scan_incref_child2",
							"gc_scan",
							"gc_free_cycles",
							"JS_RunGC",
							"JS_IsLiveObject",
							"JSMemoryUsage_helper",
							"compute_value_size",
							"compute_jsstring_size",
							"compute_bytecode_size",
							"compute_value_size",
							"JS_ComputeMemoryUsage",
							"JS_DumpMemoryUsage",
							"JS_GetGlobalObject",
							"JS_Throw",
							"JS_GetException",
							"dbuf_put_leb128",
							"dbuf_put_sleb128",
							"get_leb128",
							"get_sleb128",
							"find_line_num",
							"get_func_name",
							"build_backtrace",
							"is_backtrace_needed",
							"JS_NewError",
							"JS_ThrowError2",
							"JS_ThrowError",
							"JS_ThrowSyntaxError",
							"JS_ThrowTypeError",
							"JS_ThrowTypeErrorOrFalse",
							"__JS_ThrowTypeErrorAtom",
							"__JS_ThrowSyntaxErrorAtom",
							"JS_ThrowTypeErrorAtom",
							"JS_ThrowSyntaxErrorAtom",
							"JS_ThrowTypeErrorReadOnly",
							"JS_ThrowReferenceError",
							"JS_ThrowRangeError",
							"JS_ThrowInternalError",
							"JS_ThrowOutOfMemory",
							"JS_ThrowStackOverflow",
							"JS_ThrowTypeErrorNotAnObject",
							"JS_ThrowTypeErrorNotASymbol",
							"JS_ThrowReferenceErrorNotDefined",
							"JS_ThrowReferenceErrorUninitialized",
							"JS_ThrowReferenceErrorUninitialized2",
							"JS_ThrowTypeErrorInvalidClass",
							"__js_poll_interrupts",
							"js_poll_interrupts",
							"JS_SetPrototypeInternal",
							"JS_SetPrototype",
							"JS_GetPrototypePrimitive",
							"JS_GetPrototype",
							"JS_GetPrototypeFree",
							"JS_OrdinaryIsInstanceOf",
							"JS_IsInstanceOf",
							"JS_AutoInitProperty",
							"JS_GetPropertyInternal",
							"JS_ThrowTypeErrorPrivateNotFound",
							"JS_DefinePrivateField",
							"JS_GetPrivateField",
							"JS_SetPrivateField",
							"JS_AddBrand",
							"JS_CheckBrand",
							"js_string_obj_get_length",
							"num_keys_cmp",
							"js_free_prop_enum",
							"__exception",
							"JS_GetOwnPropertyNames",
							"JS_GetOwnPropertyInternal",
							"JS_GetOwnProperty",
							"JS_IsExtensible",
							"JS_PreventExtensions",
							"JS_HasProperty",
							"js_symbol_to_atom",
							"JS_ValueToAtom",
							"JS_GetPropertyValue",
							"JS_GetPropertyUint32",
							"JS_TryGetPropertyInt64",
							"JS_GetPropertyInt64",
							"JS_GetPropertyStr",
							"add_property",
							"convert_fast_array_to_array",
							"delete_property",
							"call_setter",
							"set_array_length",
							"expand_fast_array",
							"add_fast_array_element",
							"js_free_desc",
							"JS_SetPropertyGeneric",
							"JS_SetPropertyInternal",
							"JS_SetPropertyValue",
							"JS_SetPropertyUint32",
							"JS_SetPropertyInt64",
							"JS_SetPropertyStr",
							"get_prop_flags",
							"JS_CreateProperty",
							"check_define_prop_flags",
							"js_shape_prepare_update",
							"js_update_property_flags",
							"JS_DefineProperty",
							"JS_DefineAutoInitProperty",
							"JS_DefinePropertyValue",
							"JS_DefinePropertyValueValue",
							"JS_DefinePropertyValueUint32",
							"JS_DefinePropertyValueInt64",
							"JS_DefinePropertyValueStr",
							"JS_DefinePropertyGetSet",
							"JS_CreateDataPropertyUint32",
							"js_object_has_name",
							"JS_DefineObjectName",
							"JS_DefineObjectNameComputed",
							"JS_ThrowSyntaxErrorVarRedeclaration",
							"JS_CheckDefineGlobalVar",
							"JS_DefineGlobalVar",
							"JS_DefineGlobalFunction",
							"JS_GetGlobalVar",
							"JS_GetGlobalVarRef",
							"JS_CheckGlobalVar",
							"JS_SetGlobalVar",
							"JS_DeleteProperty",
							"JS_DeletePropertyInt64",
							"JS_IsFunction",
							"JS_IsCFunction",
							"JS_IsConstructor",
							"JS_SetConstructorBit",
							"JS_IsError",
							"JS_IsUncatchableError",
							"JS_SetUncatchableError",
							"JS_ResetUncatchableError",
							"JS_NewUncatchableError",
							"JS_SetOpaque",
							"JS_GetOpaque",
							"JS_GetOpaque2",
							"JS_ToPrimitiveFree",
							"JS_ToPrimitive",
							"JS_SetIsHTMLDDA",
							"JS_IsHTMLDDA",
							"JS_ToBoolFree",
							"JS_ToBool",
							"skip_spaces",
							"to_digit",
							"js_strtod",
							"js_string_to_bigint",
							"js_string_to_bigfloat",
							"js_string_to_bigdecimal",
							"js_atof2",
							"js_atof",
							"js_atof",
							"JSToNumberHintEnum",
							"JS_ToNumberHintFree",
							"JS_ToNumberFree",
							"JS_ToNumericFree",
							"JS_ToNumeric",
							"__JS_ToFloat64Free",
							"JS_ToFloat64Free",
							"JS_ToFloat64",
							"JS_ToNumber",
							"JSValue",
							"JS_ToInt32SatFree",
							"JS_ToInt32Sat",
							"JS_ToInt32Clamp",
							"JS_ToInt64SatFree",
							"JS_ToInt64Sat",
							"JS_ToInt64Clamp",
							"JS_ToInt64Free",
							"JS_ToInt64",
							"JS_ToInt64Ext",
							"JS_ToInt32Free",
							"JS_ToInt32",
							"JS_ToUint32Free",
							"JS_ToUint8ClampFree",
							"JS_ToArrayLengthFree",
							"is_safe_integer",
							"JS_ToIndex",
							"JS_ToLengthFree",
							"JS_NumberIsInteger",
							"JS_NumberIsNegativeOrMinusZero",
							"js_bigint_to_string1",
							"js_bigint_to_string",
							"js_ftoa",
							"js_bigfloat_to_string",
							"js_bigdecimal_to_string1",
							"js_bigdecimal_to_string",
							"i64toa",
							"js_ecvt1",
							"js_ecvt",
							"js_fcvt1",
							"js_fcvt",
							"js_dtoa1",
							"js_dtoa",
							"JS_ToStringInternal",
							"JS_ToString",
							"JS_ToStringFree",
							"JS_ToLocaleStringFree",
							"JS_ToPropertyKey",
							"JS_ToStringCheckObject",
							"JS_ToQuotedString",
							"JS_DumpObjectHeader",
							"JS_DumpObject",
							"JS_DumpGCObject",
							"JS_DumpValueShort",
							"JS_DumpValue",
							"JS_PrintValue",
							"JS_IsArray",
							"js_pow",
							"JS_NewBigInt64_1",
							"JS_NewBigInt64",
							"JS_NewBigUint64",
							"JS_ToBigFloat",
							"JS_ToBigDecimal",
							"JS_StringToBigInt",
							"JS_StringToBigIntErr",
							"JS_ToBigIntFree",
							"JS_ToBigInt",
							"JSValue",
							"JS_FreeBigInt",
							"JS_ToBigInt64Free",
							"JS_ToBigInt64",
							"js_new_bf",
							"JS_NewBigFloat",
							"JS_NewBigDecimal",
							"JS_NewBigInt",
							"JS_CompactBigInt1",
							"JS_CompactBigInt",
							"get_ovop_from_opcode",
							"find_binary_op",
							"js_call_binary_op_fallback",
							"js_call_binary_op_simple",
							"js_call_unary_op_fallback",
							"throw_bf_exception",
							"js_unary_arith_bigint",
							"js_unary_arith_bigfloat",
							"js_unary_arith_bigdecimal",
							"js_unary_arith_slow",
							"js_post_inc_slow",
							"js_not_slow",
							"js_binary_arith_bigfloat",
							"js_binary_arith_bigint",
							"js_bfdec_pow",
							"js_binary_arith_bigdecimal",
							"js_binary_arith_slow",
							"js_add_slow",
							"js_binary_logic_slow",
							"js_compare_bigfloat",
							"js_compare_bigdecimal",
							"js_relational_slow",
							"tag_is_number",
							"js_eq_slow",
							"js_shr_slow",
							"js_mul_pow10_to_float64",
							"js_mul_pow10",
							"JS_ThrowUnsupportedBigint",
							"JS_NewBigInt64",
							"JS_NewBigUint64",
							"JS_ToBigInt64",
							"js_unary_arith_slow",
							"js_post_inc_slow",
							"js_binary_arith_slow",
							"js_add_slow",
							"js_binary_logic_slow",
							"js_not_slow",
							"js_relational_slow",
							"js_eq_slow",
							"js_shr_slow",
							"js_strict_eq2",
							"js_strict_eq",
							"js_same_value",
							"js_same_value_zero",
							"js_strict_eq_slow",
							"js_operator_in",
							"js_has_unscopable",
							"js_operator_instanceof",
							"js_operator_typeof",
							"js_operator_delete",
							"js_throw_type_error",
							"js_function_proto_caller",
							"js_function_proto_fileName",
							"js_function_proto_lineNumber",
							"js_arguments_define_own_property",
							"js_build_arguments",
							"js_build_mapped_arguments",
							"js_build_rest",
							"build_for_in_iterator",
							"js_for_in_start",
							"js_for_in_next",
							"JS_GetIterator2",
							"JS_GetIterator",
							"JS_IteratorNext2",
							"JS_IteratorNext",
							"JS_IteratorClose",
							"js_for_of_start",
							"js_for_of_next",
							"JS_IteratorGetCompleteValue",
							"js_iterator_get_value_done",
							"js_create_iterator_result",
							"js_array_iterator_next",
							"js_create_array_iterator",
							"js_is_fast_array",
							"js_get_fast_array",
							"js_append_enumerate",
							"JS_CopyDataProperties",
							"JS_GetActiveFunction",
							"get_var_ref",
							"js_closure2",
							"js_instantiate_prototype",
							"js_closure",
							"js_op_define_class",
							"close_var_refs",
							"close_lexical_var",
							"js_call_c_function",
							"js_call_bound_function",
							"OPSpecialObjectEnum",
							"JS_CallInternal",
							"SWITCH",
							"CASE",
							"CASE",
							"DEF",
							"def",
							"def",
							"DEF",
							"def",
							"def",
							"SWITCH",
							"CASE",
							"CASE",
							"OP_CMP",
							"JS_Call",
							"JS_CallFree",
							"JS_GetFunctionRealm",
							"js_create_from_ctor",
							"JS_CallConstructorInternal",
							"JS_CallConstructor2",
							"JS_CallConstructor",
							"JS_Invoke",
							"JS_InvokeFree",
							"async_func_init",
							"async_func_mark",
							"async_func_free",
							"async_func_resume",
							"JSGeneratorStateEnum",
							"JSGeneratorData",
							"free_generator_stack_rt",
							"js_generator_finalizer",
							"free_generator_stack",
							"js_generator_mark",
							"js_generator_next",
							"js_generator_function_call",
							"js_async_function_terminate",
							"js_async_function_free0",
							"js_async_function_free",
							"js_async_function_resolve_finalizer",
							"js_async_function_resolve_mark",
							"js_async_function_resolve_create",
							"js_async_function_resume",
							"js_async_function_resolve_call",
							"js_async_function_call",
							"JSAsyncGeneratorStateEnum",
							"JSAsyncGeneratorRequest",
							"JSAsyncGeneratorData",
							"js_async_generator_free",
							"js_async_generator_finalizer",
							"js_async_generator_mark",
							"js_async_generator_resolve_function",
							"js_async_generator_resolve_function_create",
							"js_async_generator_await",
							"js_async_generator_resolve_or_reject",
							"js_async_generator_resolve",
							"js_async_generator_reject",
							"js_async_generator_complete",
							"js_async_generator_completed_return",
							"js_async_generator_resume_next",
							"js_async_generator_resolve_function",
							"js_async_generator_next",
							"js_async_generator_function_call",
							"BlockEnv",
							"JSGlobalVar",
							"RelocEntry",
							"JumpSlot",
							"LabelSlot",
							"LineNumberSlot",
							"JSParseFunctionEnum",
							"JSParseExportEnum",
							"JSFunctionDef",
							"JSToken",
							"JSParseState",
							"JSOpCode",
							"FMT",
							"DEF",
							"DEF",
							"short_opcode_info",
							"short_opcode_info",
							"next_token",
							"free_token",
							"__attribute",
							"js_parse_error",
							"js_parse_expect",
							"js_parse_expect_semi",
							"js_parse_error_reserved_identifier",
							"js_parse_template_part",
							"js_parse_string",
							"token_is_pseudo_keyword",
							"js_parse_regexp",
							"ident_realloc",
							"parse_ident",
							"next_token",
							"json_parse_ident",
							"json_next_token",
							"simple_next_token",
							"peek_token",
							"JS_DetectModule",
							"get_prev_opcode",
							"js_is_live_code",
							"emit_u8",
							"emit_u16",
							"emit_u32",
							"emit_op",
							"emit_atom",
							"update_label",
							"new_label_fd",
							"new_label",
							"emit_label",
							"emit_goto",
							"cpool_add",
							"emit_push_const",
							"find_arg",
							"find_var",
							"find_var_in_scope",
							"is_child_scope",
							"find_var_in_child_scope",
							"find_global_var",
							"find_lexical_global_var",
							"find_lexical_decl",
							"push_scope",
							"get_first_lexical_var",
							"pop_scope",
							"close_scopes",
							"add_var",
							"add_scope_var",
							"add_func_var",
							"add_arguments_var",
							"add_arguments_arg",
							"add_arg",
							"add_global_var",
							"JSVarDefEnum",
							"define_var",
							"add_private_class_field",
							"js_parse_expr",
							"js_parse_function_decl",
							"js_parse_function_class_fields_init",
							"js_parse_function_decl2",
							"js_parse_assign_expr2",
							"js_parse_assign_expr",
							"js_parse_unary",
							"push_break_entry",
							"pop_break_entry",
							"add_export_entry",
							"seal_template_obj",
							"js_parse_template",
							"token_is_ident",
							"__exception",
							"JSParsePos",
							"js_parse_get_pos",
							"js_parse_seek_token",
							"is_regexp_allowed",
							"js_parse_skip_parens_token",
							"set_object_name",
							"set_object_name_computed",
							"js_parse_object_literal",
							"js_parse_postfix_expr",
							"js_parse_left_hand_side_expr",
							"js_parse_class_default_ctor",
							"find_private_class_field",
							"emit_class_field_init",
							"get_private_setter_name",
							"ClassFieldsDef",
							"emit_class_init_start",
							"add_brand",
							"emit_class_init_end",
							"js_parse_class",
							"js_parse_array_literal",
							"has_with_scope",
							"get_lvalue",
							"PutLValueEnum",
							"put_lvalue",
							"js_parse_expr_paren",
							"js_unsupported_keyword",
							"js_define_var",
							"js_emit_spread_code",
							"js_parse_check_duplicate_parameter",
							"js_parse_destructuring_var",
							"js_parse_destructuring_element",
							"FuncCallType",
							"optional_chain_test",
							"js_parse_postfix_expr",
							"js_parse_delete",
							"js_parse_unary",
							"js_parse_expr_binary",
							"js_parse_logical_and_or",
							"js_parse_coalesce_expr",
							"js_parse_cond_expr",
							"emit_return",
							"js_parse_assign_expr2",
							"js_parse_assign_expr",
							"js_parse_expr2",
							"js_parse_expr",
							"push_break_entry",
							"pop_break_entry",
							"emit_break",
							"emit_return",
							"js_parse_statement_or_decl",
							"js_parse_statement",
							"js_parse_block",
							"js_parse_var",
							"is_label",
							"is_let",
							"js_parse_for_in_of",
							"set_eval_ret_undefined",
							"js_parse_statement_or_decl",
							"js_new_module_def",
							"js_mark_module_def",
							"js_free_module_def",
							"add_req_module_entry",
							"find_export_entry",
							"add_export_entry2",
							"add_export_entry",
							"add_star_export_entry",
							"JS_NewCModule",
							"JS_AddModuleExport",
							"JS_SetModuleExport",
							"JS_SetModuleLoaderFunc",
							"JS_GetModuleLoaderFunc",
							"JS_GetModuleLoaderOpaque",
							"js_default_module_normalize_name",
							"js_find_loaded_module",
							"js_host_resolve_imported_module",
							"js_host_resolve_imported_module_atom",
							"JSResolveEntry",
							"JSResolveState",
							"find_resolve_entry",
							"add_resolve_entry",
							"JSResolveResultEnum",
							"js_resolve_export1",
							"js_resolve_export",
							"js_resolve_export_throw_error",
							"ExportedNameEntryEnum",
							"ExportedNameEntry",
							"GetExportNamesState",
							"find_exported_name",
							"get_exported_names",
							"js_module_ns_has",
							"exported_names_cmp",
							"js_get_module_ns",
							"js_module_ns_autoinit",
							"js_build_module_ns",
							"js_get_module_ns",
							"js_resolve_module",
							"js_create_module_var",
							"js_create_module_bytecode_function",
							"js_create_module_function",
							"js_link_module",
							"JS_GetScriptOrModuleName",
							"JS_GetModuleName",
							"JS_GetImportMeta",
							"js_import_meta",
							"JS_RunModule",
							"js_dynamic_import_job",
							"js_dynamic_import",
							"js_evaluate_module",
							"JSAtom",
							"js_parse_export",
							"add_closure_var",
							"add_import",
							"js_parse_import",
							"js_parse_source_element",
							"js_new_function_def",
							"free_bytecode_atoms",
							"js_free_function_def",
							"skip_lines",
							"print_lines",
							"dump_byte_code",
							"dump_pc2line",
							"js_dump_function_bytecode",
							"add_closure_var",
							"find_closure_var",
							"get_closure_var2",
							"get_closure_var",
							"get_with_scope_opcode",
							"can_opt_put_ref_value",
							"can_opt_put_global_ref_value",
							"optimize_scope_make_ref",
							"optimize_scope_make_global_ref",
							"add_var_this",
							"resolve_pseudo_var",
							"var_object_test",
							"resolve_scope_var",
							"find_private_class_field_all",
							"get_loc_or_ref",
							"resolve_scope_private_field1",
							"resolve_scope_private_field",
							"mark_eval_captured_variables",
							"is_var_in_arg_scope",
							"add_eval_variables",
							"set_closure_from_var",
							"add_closure_variables",
							"CodeContext",
							"M2",
							"M3",
							"M4",
							"code_match",
							"instantiate_hoisted_definitions",
							"skip_dead_code",
							"get_label_pos",
							"resolve_variables",
							"add_pc2line_info",
							"compute_pc2line_info",
							"add_reloc",
							"code_has_label",
							"find_jump_target",
							"push_short_int",
							"put_short_code",
							"resolve_labels",
							"StackSizeState",
							"ss_check",
							"compute_stack_size",
							"add_module_variables",
							"js_create_function",
							"free_function_bytecode",
							"js_parse_directives",
							"js_parse_function_check_names",
							"js_parse_function_class_fields_init",
							"js_parse_function_decl2",
							"js_parse_function_decl",
							"js_parse_program",
							"js_parse_init",
							"JS_EvalFunctionInternal",
							"JS_EvalFunction",
							"skip_shebang",
							"__JS_EvalInternal",
							"JS_EvalInternal",
							"JS_EvalObject",
							"JS_EvalThis",
							"JS_Eval",
							"JS_ResolveModule",
							"JSObjectListEntry",
							"JSObjectList",
							"js_object_list_init",
							"js_object_list_get_hash",
							"js_object_list_resize_hash",
							"js_object_list_add",
							"js_object_list_find",
							"js_object_list_end",
							"BCTagEnum",
							"BCWriterState",
							"bc_put_u8",
							"bc_put_u16",
							"bc_put_u32",
							"bc_put_u64",
							"bc_put_leb128",
							"bc_put_sleb128",
							"bc_set_flags",
							"bc_atom_to_idx",
							"bc_put_atom",
							"bc_byte_swap",
							"JS_WriteFunctionBytecode",
							"JS_WriteString",
							"JS_WriteBigNum",
							"JS_WriteObjectRec",
							"JS_WriteFunctionTag",
							"JS_WriteModule",
							"JS_WriteArray",
							"JS_WriteObjectTag",
							"JS_WriteTypedArray",
							"JS_WriteArrayBuffer",
							"JS_WriteSharedArrayBuffer",
							"JS_WriteObjectRec",
							"JS_WriteObjectAtoms",
							"JS_WriteObject2",
							"JS_WriteObject",
							"BCReaderState",
							"bc_read_trace",
							"bc_read_trace",
							"bc_read_error_end",
							"bc_get_u8",
							"bc_get_u16",
							"bc_get_u32",
							"bc_get_u64",
							"bc_get_leb128",
							"bc_get_sleb128",
							"bc_get_leb128_int",
							"bc_get_leb128_u16",
							"bc_get_buf",
							"bc_idx_to_atom",
							"bc_get_atom",
							"JS_ReadString",
							"bc_get_flags",
							"JS_ReadFunctionBytecode",
							"JS_ReadBigNum",
							"JS_ReadObjectRec",
							"BC_add_object_ref1",
							"BC_add_object_ref",
							"JS_ReadFunctionTag",
							"JS_ReadModule",
							"JS_ReadObjectTag",
							"JS_ReadArray",
							"JS_ReadTypedArray",
							"JS_ReadArrayBuffer",
							"JS_ReadSharedArrayBuffer",
							"JS_ReadDate",
							"JS_ReadObjectValue",
							"JS_ReadObjectRec",
							"JS_ReadObjectAtoms",
							"bc_reader_free",
							"JS_ReadObject",
							"js_string_constructor",
							"js_boolean_constructor",
							"js_number_constructor",
							"check_function",
							"check_exception_free",
							"find_atom",
							"JS_InstantiateFunctionListItem2",
							"JS_InstantiateFunctionListItem",
							"JS_SetPropertyFunctionList",
							"JS_AddModuleExportList",
							"JS_SetModuleExportList",
							"JS_SetConstructor2",
							"JS_SetConstructor",
							"JS_NewGlobalCConstructor2",
							"JS_NewGlobalCConstructor",
							"JS_NewGlobalCConstructorOnly",
							"js_global_eval",
							"js_global_isNaN",
							"js_global_isFinite",
							"JS_ToObject",
							"JS_ToObjectFree",
							"js_obj_to_desc",
							"JS_DefinePropertyDesc",
							"JS_ObjectDefineProperties",
							"js_object_constructor",
							"js_object_create",
							"js_object_getPrototypeOf",
							"js_object_setPrototypeOf",
							"js_object_defineProperty",
							"js_object_defineProperties",
							"js_object___defineGetter__",
							"js_object_getOwnPropertyDescriptor",
							"js_object_getOwnPropertyDescriptors",
							"JS_GetOwnPropertyNames2",
							"js_object_getOwnPropertyNames",
							"js_object_getOwnPropertySymbols",
							"js_object_keys",
							"js_object_isExtensible",
							"js_object_preventExtensions",
							"js_object_hasOwnProperty",
							"js_object_valueOf",
							"js_object_toString",
							"js_object_toLocaleString",
							"js_object_assign",
							"js_object_seal",
							"js_object_isSealed",
							"js_object_fromEntries",
							"js_object___getClass",
							"js_object_is",
							"JS_SpeciesConstructor",
							"js_object_get___proto__",
							"js_object_set___proto__",
							"js_object_isPrototypeOf",
							"js_object_propertyIsEnumerable",
							"js_object___lookupGetter__",
							"js_function_proto",
							"js_function_constructor",
							"js_get_length32",
							"js_get_length64",
							"free_arg_list",
							"build_arg_list",
							"js_function_apply",
							"js_function_call",
							"js_function_bind",
							"js_function_toString",
							"js_function_hasInstance",
							"iterator_to_array",
							"js_error_constructor",
							"js_error_toString",
							"js_aggregate_error_constructor",
							"JS_CopySubArray",
							"js_array_constructor",
							"js_array_from",
							"js_array_of",
							"js_array_isArray",
							"js_get_this",
							"JS_ArraySpeciesCreate",
							"JS_isConcatSpreadable",
							"js_array_concat",
							"js_typed_array_get_length_internal",
							"js_typed_array___speciesCreate",
							"js_array_every",
							"js_array_reduce",
							"js_array_fill",
							"js_array_includes",
							"js_array_indexOf",
							"js_array_lastIndexOf",
							"js_array_find",
							"js_array_toString",
							"js_array_join",
							"js_array_pop",
							"js_array_push",
							"js_array_reverse",
							"js_array_slice",
							"js_array_copyWithin",
							"JS_FlattenIntoArray",
							"js_array_flatten",
							"ValueSlot",
							"array_sort_context",
							"js_array_cmp_generic",
							"js_array_sort",
							"JSArrayIteratorData",
							"js_array_iterator_finalizer",
							"js_array_iterator_mark",
							"js_create_array",
							"js_create_array_iterator",
							"js_array_iterator_next",
							"js_iterator_proto_iterator",
							"js_number_constructor",
							"js_number_isNaN",
							"js_number_isFinite",
							"js_number_isInteger",
							"js_number_isSafeInteger",
							"js_thisNumberValue",
							"js_number_valueOf",
							"js_get_radix",
							"js_number_toString",
							"js_number_toFixed",
							"js_number_toExponential",
							"js_number_toPrecision",
							"js_parseInt",
							"js_parseFloat",
							"js_boolean_constructor",
							"js_thisBooleanValue",
							"js_boolean_toString",
							"js_boolean_valueOf",
							"js_string_get_own_property",
							"js_string_define_own_property",
							"js_string_delete_property",
							"js_string_constructor",
							"js_thisStringValue",
							"js_string_fromCharCode",
							"js_string_fromCodePoint",
							"js_string_raw",
							"js_string_codePointRange",
							"js_string_charCodeAt",
							"js_string_charAt",
							"js_string_codePointAt",
							"js_string_concat",
							"string_cmp",
							"string_indexof_char",
							"string_indexof",
							"string_advance_index",
							"js_string_indexOf",
							"js_is_regexp",
							"js_string_includes",
							"check_regexp_g_flag",
							"js_string_match",
							"js_string___GetSubstitution",
							"js_string_replace",
							"js_string_split",
							"js_string_substring",
							"js_string_substr",
							"js_string_slice",
							"js_string_pad",
							"js_string_repeat",
							"js_string_trim",
							"js_string___quote",
							"string_prevc",
							"test_final_sigma",
							"js_string_localeCompare",
							"js_string_toLowerCase",
							"JS_ToUTF32String",
							"JS_NewUTF32String",
							"js_string_normalize",
							"js_string_toString",
							"js_string_iterator_next",
							"js_string_CreateHTML",
							"JS_AddIntrinsicStringNormalize",
							"js_fmin",
							"js_fmax",
							"js_math_min_max",
							"js_math_sign",
							"js_math_round",
							"js_math_hypot",
							"js_math_fround",
							"js_math_imul",
							"js_math_clz32",
							"xorshift64star",
							"js_random_init",
							"js_math_random",
							"js___date_clock",
							"getTimezoneOffset",
							"js_regexp_finalizer",
							"js_compile_regexp",
							"js_regexp_constructor_internal",
							"js_get_regexp",
							"js_is_regexp",
							"js_regexp_constructor",
							"js_regexp_compile",
							"js_regexp_get_source",
							"js_regexp_get_flag",
							"js_regexp_get_flags",
							"js_regexp_toString",
							"lre_check_stack_overflow",
							"lre_realloc",
							"js_regexp_exec",
							"JS_RegExpDelete",
							"JS_RegExpExec",
							"js_regexp_test",
							"js_regexp_Symbol_match",
							"JSRegExpStringIteratorData",
							"js_regexp_string_iterator_finalizer",
							"js_regexp_string_iterator_mark",
							"js_regexp_string_iterator_next",
							"js_regexp_Symbol_matchAll",
							"ValueBuffer",
							"value_buffer_init",
							"value_buffer_free",
							"value_buffer_append",
							"js_is_standard_regexp",
							"js_regexp_Symbol_replace",
							"js_regexp_Symbol_search",
							"js_regexp_Symbol_split",
							"JS_AddIntrinsicRegExpCompiler",
							"JS_AddIntrinsicRegExp",
							"json_parse_expect",
							"json_parse_value",
							"JS_ParseJSON2",
							"JS_ParseJSON",
							"internalize_json_property",
							"js_json_parse",
							"JSONStringifyContext",
							"JS_ToQuotedStringFree",
							"js_json_check",
							"js_json_to_str",
							"JS_JSONStringify",
							"js_json_stringify",
							"JS_AddIntrinsicJSON",
							"js_reflect_apply",
							"js_reflect_construct",
							"js_reflect_deleteProperty",
							"js_reflect_get",
							"js_reflect_has",
							"js_reflect_set",
							"js_reflect_setPrototypeOf",
							"js_reflect_ownKeys",
							"js_proxy_finalizer",
							"js_proxy_mark",
							"JS_ThrowTypeErrorRevokedProxy",
							"get_proxy_method",
							"js_proxy_getPrototypeOf",
							"js_proxy_setPrototypeOf",
							"js_proxy_isExtensible",
							"js_proxy_preventExtensions",
							"js_proxy_has",
							"js_proxy_get",
							"js_proxy_set",
							"js_create_desc",
							"js_proxy_get_own_property",
							"js_proxy_define_own_property",
							"js_proxy_delete_property",
							"find_prop_key",
							"js_proxy_get_own_property_names",
							"js_proxy_call_constructor",
							"js_proxy_call",
							"js_proxy_isArray",
							"js_proxy_constructor",
							"js_proxy_revoke",
							"js_proxy_revoke_constructor",
							"js_proxy_revocable",
							"JS_AddIntrinsicProxy",
							"js_symbol_constructor",
							"js_thisSymbolValue",
							"js_symbol_toString",
							"js_symbol_valueOf",
							"js_symbol_get_description",
							"js_symbol_for",
							"js_symbol_keyFor",
							"JSMapRecord",
							"JSMapState",
							"js_map_constructor",
							"map_normalize_key",
							"map_hash_key",
							"map_find_record",
							"map_hash_resize",
							"map_add_record",
							"delete_weak_ref",
							"map_delete_record",
							"map_decref_record",
							"reset_weak_ref",
							"js_map_set",
							"js_map_get",
							"js_map_has",
							"js_map_delete",
							"js_map_clear",
							"js_map_get_size",
							"js_map_forEach",
							"js_map_finalizer",
							"js_map_mark",
							"JSMapIteratorData",
							"js_map_iterator_finalizer",
							"js_map_iterator_mark",
							"js_create_map_iterator",
							"js_map_iterator_next",
							"JS_AddIntrinsicMapSet",
							"JSPromiseStateEnum",
							"JSPromiseData",
							"JSPromiseFunctionDataResolved",
							"JSPromiseFunctionData",
							"JSPromiseReactionData",
							"js_create_resolving_functions",
							"promise_reaction_data_free",
							"promise_reaction_job",
							"JS_SetHostPromiseRejectionTracker",
							"fulfill_or_reject_promise",
							"reject_promise",
							"js_promise_resolve_thenable_job",
							"js_promise_resolve_function_free_resolved",
							"js_create_resolving_functions",
							"js_promise_resolve_function_finalizer",
							"js_promise_resolve_function_mark",
							"js_promise_resolve_function_call",
							"js_promise_finalizer",
							"js_promise_mark",
							"js_promise_constructor",
							"js_promise_executor",
							"js_promise_executor_new",
							"js_new_promise_capability",
							"JS_NewPromiseCapability",
							"js_promise_resolve",
							"remainingElementsCount_add",
							"js_promise_all_resolve_element",
							"js_promise_all",
							"js_promise_race",
							"perform_promise_then",
							"js_promise_then",
							"js_promise_catch",
							"js_promise_finally_value_thunk",
							"js_promise_finally_thrower",
							"js_promise_then_finally_func",
							"js_promise_finally",
							"js_async_from_sync_iterator_unwrap",
							"js_async_from_sync_iterator_unwrap_func_create",
							"JSAsyncFromSyncIteratorData",
							"js_async_from_sync_iterator_finalizer",
							"js_async_from_sync_iterator_mark",
							"JS_CreateAsyncFromSyncIterator",
							"js_async_from_sync_iterator_next",
							"JS_AddIntrinsicPromise",
							"string_get_hex",
							"isURIReserved",
							"js_throw_URIError",
							"hex_decode",
							"js_global_decodeURI",
							"isUnescaped",
							"isURIUnescaped",
							"encodeURI_hex",
							"js_global_encodeURI",
							"js_global_escape",
							"js_global_unescape",
							"math_mod",
							"floor_div",
							"js_Date_parse",
							"JS_ThisTimeValue",
							"JS_SetThisTimeValue",
							"days_from_year",
							"days_in_year",
							"year_from_days",
							"get_date_fields",
							"time_clip",
							"set_date_fields",
							"get_date_field",
							"set_date_field",
							"get_date_string",
							"date_now",
							"js_date_constructor",
							"js_Date_UTC",
							"string_skip_spaces",
							"string_skip_non_spaces",
							"string_get_digits",
							"string_get_signed_digits",
							"string_get_fixed_width_digits",
							"string_get_milliseconds",
							"find_abbrev",
							"string_get_month",
							"js_Date_parse",
							"js_Date_now",
							"js_date_Symbol_toPrimitive",
							"js_date_getTimezoneOffset",
							"js_date_getTime",
							"js_date_setTime",
							"js_date_setYear",
							"js_date_toJSON",
							"JS_AddIntrinsicDate",
							"JS_AddIntrinsicEval",
							"js_operator_set_finalizer",
							"js_operator_set_mark",
							"js_operators_create_internal",
							"js_operators_create",
							"js_operators_updateBigIntOperators",
							"js_operators_set_default",
							"js_dummy_operators_ctor",
							"js_global_operators",
							"JS_AddIntrinsicOperators",
							"JS_ToBigIntCtorFree",
							"js_bigint_constructor",
							"js_thisBigIntValue",
							"js_bigint_toString",
							"js_bigint_valueOf",
							"js_bigint_div",
							"js_bigint_sqrt",
							"js_bigint_op1",
							"js_bigint_asUintN",
							"JS_AddIntrinsicBigInt",
							"js_thisBigFloatValue",
							"js_bigfloat_toString",
							"js_bigfloat_valueOf",
							"bigfloat_get_rnd_mode",
							"js_bigfloat_toFixed",
							"js_bigfloat_is_finite",
							"js_bigfloat_toExponential",
							"js_bigfloat_toPrecision",
							"js_bigfloat_constructor",
							"js_bigfloat_get_const",
							"js_bigfloat_parseFloat",
							"js_bigfloat_isFinite",
							"js_bigfloat_isNaN",
							"js_bigfloat_fop",
							"js_bigfloat_fop2",
							"js_float_env_constructor",
							"js_float_env_finalizer",
							"js_float_env_get_prec",
							"js_float_env_get_expBits",
							"js_float_env_setPrec",
							"js_float_env_proto_get_status",
							"js_float_env_proto_set_status",
							"js_float_env_clearStatus",
							"JS_AddIntrinsicBigFloat",
							"JS_ToBigDecimalFree",
							"js_bigdecimal_constructor",
							"js_thisBigDecimalValue",
							"js_bigdecimal_toString",
							"js_bigdecimal_valueOf",
							"js_bigdecimal_get_rnd_mode",
							"BigDecimalEnv",
							"js_bigdecimal_get_env",
							"js_bigdecimal_fop",
							"js_bigdecimal_toFixed",
							"js_bigdecimal_toExponential",
							"js_bigdecimal_toPrecision",
							"JS_AddIntrinsicBigDecimal",
							"JS_EnableBignumExt",
							"JS_AddIntrinsicBasicObjects",
							"JS_AddIntrinsicBaseObjects",
							"js_array_buffer_constructor3",
							"js_array_buffer_free",
							"js_array_buffer_constructor2",
							"js_array_buffer_constructor1",
							"JS_NewArrayBuffer",
							"JS_NewArrayBufferCopy",
							"js_array_buffer_constructor",
							"js_shared_array_buffer_constructor",
							"js_array_buffer_finalizer",
							"js_array_buffer_isView",
							"JS_ThrowTypeErrorDetachedArrayBuffer",
							"js_array_buffer_get_byteLength",
							"JS_DetachArrayBuffer",
							"js_get_array_buffer",
							"JS_GetArrayBuffer",
							"js_array_buffer_slice",
							"get_typed_array",
							"typed_array_is_detached",
							"typed_array_get_length",
							"validate_typed_array",
							"js_typed_array_get_length",
							"js_typed_array_get_buffer",
							"js_typed_array_get_byteLength",
							"js_typed_array_get_byteOffset",
							"JS_GetTypedArrayBuffer",
							"js_typed_array_get_toStringTag",
							"js_typed_array_set_internal",
							"js_typed_array_set",
							"js_create_typed_array_iterator",
							"js_typed_array_get_length_internal",
							"js_typed_array_create",
							"js_typed_array___speciesCreate",
							"js_typed_array_from",
							"js_typed_array_of",
							"js_typed_array_copyWithin",
							"js_typed_array_fill",
							"js_typed_array_find",
							"js_typed_array_indexOf",
							"js_typed_array_join",
							"js_typed_array_reverse",
							"js_typed_array_slice",
							"js_typed_array_subarray",
							"js_cmp_doubles",
							"js_TA_cmp_int8",
							"js_TA_cmp_uint8",
							"js_TA_cmp_int16",
							"js_TA_cmp_uint16",
							"js_TA_cmp_int32",
							"js_TA_cmp_uint32",
							"js_TA_cmp_int64",
							"js_TA_cmp_uint64",
							"js_TA_cmp_float32",
							"js_TA_cmp_float64",
							"js_TA_get_int8",
							"js_TA_get_uint8",
							"js_TA_get_int16",
							"js_TA_get_uint16",
							"js_TA_get_int32",
							"js_TA_get_uint32",
							"js_TA_get_int64",
							"js_TA_get_uint64",
							"js_TA_get_float32",
							"js_TA_get_float64",
							"TA_sort_context",
							"js_TA_cmp_generic",
							"js_typed_array_sort",
							"js_typed_array_base_constructor",
							"typed_array_init",
							"js_array_from_iterator",
							"js_typed_array_constructor_obj",
							"js_typed_array_constructor_ta",
							"js_typed_array_constructor",
							"js_typed_array_finalizer",
							"js_typed_array_mark",
							"js_dataview_constructor",
							"js_dataview_getValue",
							"js_dataview_setValue",
							"AtomicsOpEnum",
							"js_atomics_get_ptr",
							"js_atomics_op",
							"OP",
							"OP",
							"js_atomics_store",
							"js_atomics_isLockFree",
							"JSAtomicsWaiter",
							"js_atomics_wait",
							"js_atomics_notify",
							"JS_AddIntrinsicAtomics",
							"JS_AddIntrinsicTypedArrays",
							"JS_GetClassID",
							"js_debugger_current_location",
							"js_debugger_info",
							"js_debugger_stack_depth",
							"js_debugger_build_backtrace",
							"js_debugger_check_breakpoint",
							"js_debugger_local_variables",
							"js_debugger_closure_variables",
							"js_debugger_eval",
							"js_debugger_evaluate"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADiEgAAICBqc19saWtlbHkKICBqc191bmxpa2VseQogIF9fanNfcHJpbnRmX2xpa2UKICBqc19saWtlbHkKICBqc191bmxpa2VseQogIF9fanNfcHJpbnRmX2xpa2UKSlNSdW50aW1lCkpTQ29udGV4dApKU09iamVjdApKU0NsYXNzCkpTQ2xhc3NJRApKU0F0b20KSlNfUFRSNjRfREVGCkpTX1BUUjY0X0RFRgpKU1JlZkNvdW50SGVhZGVyCkpTVmFsdWUKSlNWYWx1ZUNvbnN0CkpTX1ZBTFVFX0dFVF9UQUcKSlNfVkFMVUVfR0VUX05PUk1fVEFHCkpTX1ZBTFVFX0dFVF9JTlQKSlNfVkFMVUVfR0VUX0JPT0wKSlNfVkFMVUVfR0VUX0ZMT0FUNjQKSlNfVkFMVUVfR0VUX1BUUgpKU19NS1ZBTApKU19NS1BUUgpKU19UQUdfSVNfRkxPQVQ2NAogIF9fSlNfTmV3RmxvYXQ2NApKU19WQUxVRV9JU19OQU4KSlNWYWx1ZQpKU19WQUxVRV9HRVRfVEFHCkpTX1ZBTFVFX0dFVF9JTlQKSlNfVkFMVUVfR0VUX0JPT0wKSlNfVkFMVUVfR0VUX1BUUgpKU19NS1ZBTApKU19NS1BUUgpKU19WQUxVRV9HRVRfRkxPQVQ2NAogIF9fSlNfTmV3RmxvYXQ2NApKU19UQUdfSVNfRkxPQVQ2NApKU19WQUxVRV9HRVRfTk9STV9UQUcKSlNfVkFMVUVfSVNfTkFOCkpTVmFsdWVVbmlvbgpKU1ZhbHVlCkpTX1ZBTFVFX0dFVF9UQUcKSlNfVkFMVUVfR0VUX05PUk1fVEFHCkpTX1ZBTFVFX0dFVF9JTlQKSlNfVkFMVUVfR0VUX0JPT0wKSlNfVkFMVUVfR0VUX0ZMT0FUNjQKSlNfVkFMVUVfR0VUX1BUUgpKU19NS1ZBTApKU19NS1BUUgpKU19UQUdfSVNfRkxPQVQ2NAogIF9fSlNfTmV3RmxvYXQ2NApKU19WQUxVRV9JU19OQU4KSlNfVkFMVUVfSVNfQk9USF9JTlQKSlNfVkFMVUVfSVNfQk9USF9GTE9BVApKU19WQUxVRV9HRVRfT0JKCkpTX1ZBTFVFX0dFVF9TVFJJTkcKSlNfVkFMVUVfSEFTX1JFRl9DT1VOVApKU01hbGxvY1N0YXRlCkpTTWFsbG9jRnVuY3Rpb25zCkpTR0NPYmplY3RIZWFkZXIKSlNfTmV3UnVudGltZQpKU19TZXRSdW50aW1lSW5mbwpKU19TZXRNZW1vcnlMaW1pdApKU19TZXRHQ1RocmVzaG9sZApKU19TZXRNYXhTdGFja1NpemUKSlNfVXBkYXRlU3RhY2tUb3AKSlNfTmV3UnVudGltZTIKSlNfRnJlZVJ1bnRpbWUKSlNfR2V0UnVudGltZU9wYXF1ZQpKU19TZXRSdW50aW1lT3BhcXVlCkpTX01hcmtWYWx1ZQpKU19SdW5HQwpKU19Jc0xpdmVPYmplY3QKSlNfTmV3Q29udGV4dApKU19GcmVlQ29udGV4dApKU19EdXBDb250ZXh0CkpTX0dldENvbnRleHRPcGFxdWUKSlNfU2V0Q29udGV4dE9wYXF1ZQpKU19HZXRSdW50aW1lCkpTX1NldENsYXNzUHJvdG8KSlNfR2V0Q2xhc3NQcm90bwpKU19OZXdDb250ZXh0UmF3CkpTX0FkZEludHJpbnNpY0Jhc2VPYmplY3RzCkpTX0FkZEludHJpbnNpY0RhdGUKSlNfQWRkSW50cmluc2ljRXZhbApKU19BZGRJbnRyaW5zaWNTdHJpbmdOb3JtYWxpemUKSlNfQWRkSW50cmluc2ljUmVnRXhwQ29tcGlsZXIKSlNfQWRkSW50cmluc2ljUmVnRXhwCkpTX0FkZEludHJpbnNpY0pTT04KSlNfQWRkSW50cmluc2ljUHJveHkKSlNfQWRkSW50cmluc2ljTWFwU2V0CkpTX0FkZEludHJpbnNpY1R5cGVkQXJyYXlzCkpTX0FkZEludHJpbnNpY1Byb21pc2UKSlNfQWRkSW50cmluc2ljQmlnSW50CkpTX0FkZEludHJpbnNpY0JpZ0Zsb2F0CkpTX0FkZEludHJpbnNpY0JpZ0RlY2ltYWwKSlNfQWRkSW50cmluc2ljT3BlcmF0b3JzCkpTX0VuYWJsZUJpZ251bUV4dAogIGpzX3N0cmluZ19jb2RlUG9pbnRSYW5nZQogIGpzX21hbGxvY19ydAogIGpzX2ZyZWVfcnQKICBqc19yZWFsbG9jX3J0CiAganNfbWFsbG9jX3VzYWJsZV9zaXplX3J0CiAganNfbWFsbG9jel9ydAogIGpzX21hbGxvYwogIGpzX2ZyZWUKICBqc19yZWFsbG9jCiAganNfbWFsbG9jX3VzYWJsZV9zaXplCiAganNfcmVhbGxvYzIKICBqc19tYWxsb2N6CiAganNfc3RyZHVwCiAganNfc3RybmR1cApKU01lbW9yeVVzYWdlCkpTX0NvbXB1dGVNZW1vcnlVc2FnZQpKU19EdW1wTWVtb3J5VXNhZ2UKSlNfTmV3QXRvbUxlbgpKU19OZXdBdG9tCkpTX05ld0F0b21VSW50MzIKSlNfRHVwQXRvbQpKU19GcmVlQXRvbQpKU19GcmVlQXRvbVJUCkpTX0F0b21Ub1ZhbHVlCkpTX0F0b21Ub1N0cmluZwpKU19BdG9tVG9DU3RyaW5nCkpTX1ZhbHVlVG9BdG9tCkpTUHJvcGVydHlFbnVtCkpTUHJvcGVydHlEZXNjcmlwdG9yCkpTQ2xhc3NFeG90aWNNZXRob2RzCkpTQ2xhc3NEZWYKSlNfTmV3Q2xhc3NJRApKU19HZXRDbGFzc0lECkpTX05ld0NsYXNzCkpTX0lzUmVnaXN0ZXJlZENsYXNzCkpTVmFsdWUKSlNWYWx1ZQpKU1ZhbHVlCkpTVmFsdWUKSlNWYWx1ZQpKU19OZXdCaWdJbnQ2NApKU19OZXdCaWdVaW50NjQKSlNWYWx1ZQpKU19Jc051bWJlcgpKU19Jc0JpZ0ludApKU19Jc0JpZ0Zsb2F0CkpTX0lzQmlnRGVjaW1hbApKU19Jc0Jvb2wKSlNfSXNOdWxsCkpTX0lzVW5kZWZpbmVkCkpTX0lzRXhjZXB0aW9uCkpTX0lzVW5pbml0aWFsaXplZApKU19Jc1N0cmluZwpKU19Jc1N5bWJvbApKU19Jc09iamVjdApKU19UaHJvdwpKU19HZXRFeGNlcHRpb24KSlNfSXNFcnJvcgpKU19SZXNldFVuY2F0Y2hhYmxlRXJyb3IKSlNfTmV3RXJyb3IKSlNfTmV3VW5jYXRjaGFibGVFcnJvcgogIF9fanNfcHJpbnRmX2xpa2UKICBfX2pzX3ByaW50Zl9saWtlCiAgX19qc19wcmludGZfbGlrZQogIF9fanNfcHJpbnRmX2xpa2UKICBfX2pzX3ByaW50Zl9saWtlCkpTX1Rocm93T3V0T2ZNZW1vcnkKICBfX0pTX0ZyZWVWYWx1ZQpKU19GcmVlVmFsdWUKICBfX0pTX0ZyZWVWYWx1ZVJUCkpTX0ZyZWVWYWx1ZVJUCkpTX0R1cFZhbHVlCkpTX0R1cFZhbHVlUlQKSlNfVG9Cb29sCkpTX1RvSW50MzIKSlNfVG9VaW50MzIKSlNfVG9JbnQ2NApKU19Ub0luZGV4CkpTX1RvRmxvYXQ2NApKU19Ub0JpZ0ludDY0CkpTX1RvSW50NjRFeHQKSlNfTmV3U3RyaW5nTGVuCkpTX05ld1N0cmluZwpKU19OZXdBdG9tU3RyaW5nCkpTX1RvU3RyaW5nCkpTX1RvUHJvcGVydHlLZXkKSlNfVG9DU3RyaW5nTGVuMgpKU19Ub0NTdHJpbmdMZW4KSlNfVG9DU3RyaW5nCkpTX0ZyZWVDU3RyaW5nCkpTX05ld09iamVjdFByb3RvQ2xhc3MKSlNfTmV3T2JqZWN0Q2xhc3MKSlNfTmV3T2JqZWN0UHJvdG8KSlNfTmV3T2JqZWN0CkpTX0lzRnVuY3Rpb24KSlNfSXNDb25zdHJ1Y3RvcgpKU19TZXRDb25zdHJ1Y3RvckJpdApKU19OZXdBcnJheQpKU19Jc0FycmF5CkpTX0dldFByb3BlcnR5SW50ZXJuYWwKSlNWYWx1ZQpKU19HZXRQcm9wZXJ0eVN0cgpKU19HZXRQcm9wZXJ0eVVpbnQzMgpKU19TZXRQcm9wZXJ0eUludGVybmFsCkpTX1NldFByb3BlcnR5CkpTX1NldFByb3BlcnR5VWludDMyCkpTX1NldFByb3BlcnR5SW50NjQKSlNfU2V0UHJvcGVydHlTdHIKSlNfSGFzUHJvcGVydHkKSlNfSXNFeHRlbnNpYmxlCkpTX1ByZXZlbnRFeHRlbnNpb25zCkpTX0RlbGV0ZVByb3BlcnR5CkpTX1NldFByb3RvdHlwZQpKU19HZXRQcm90b3R5cGUKSlNfR2V0T3duUHJvcGVydHlOYW1lcwpKU19HZXRPd25Qcm9wZXJ0eQpKU19DYWxsCkpTX0ludm9rZQpKU19DYWxsQ29uc3RydWN0b3IKSlNfQ2FsbENvbnN0cnVjdG9yMgpKU19EZXRlY3RNb2R1bGUKSlNfRXZhbApKU19FdmFsVGhpcwpKU19HZXRHbG9iYWxPYmplY3QKSlNfSXNJbnN0YW5jZU9mCkpTX0RlZmluZVByb3BlcnR5CkpTX0RlZmluZVByb3BlcnR5VmFsdWUKSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVVpbnQzMgpKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyCkpTX0RlZmluZVByb3BlcnR5R2V0U2V0CkpTX1NldE9wYXF1ZQpKU19HZXRPcGFxdWUKSlNfR2V0T3BhcXVlMgpKU19QYXJzZUpTT04KSlNfUGFyc2VKU09OMgpKU19KU09OU3RyaW5naWZ5CkpTX05ld0FycmF5QnVmZmVyCkpTX05ld0FycmF5QnVmZmVyQ29weQpKU19EZXRhY2hBcnJheUJ1ZmZlcgpKU19HZXRBcnJheUJ1ZmZlcgpKU19HZXRUeXBlZEFycmF5QnVmZmVyCkpTU2hhcmVkQXJyYXlCdWZmZXJGdW5jdGlvbnMKSlNfU2V0U2hhcmVkQXJyYXlCdWZmZXJGdW5jdGlvbnMKSlNfTmV3UHJvbWlzZUNhcGFiaWxpdHkKSlNfU2V0SG9zdFByb21pc2VSZWplY3Rpb25UcmFja2VyCkpTX1NldEludGVycnVwdEhhbmRsZXIKSlNfU2V0Q2FuQmxvY2sKSlNfU2V0SXNIVE1MRERBCkpTTW9kdWxlRGVmCkpTX1NldE1vZHVsZUxvYWRlckZ1bmMKSlNfR2V0SW1wb3J0TWV0YQpKU19HZXRNb2R1bGVOYW1lCkpTX0VucXVldWVKb2IKSlNfSXNKb2JQZW5kaW5nCkpTX0V4ZWN1dGVQZW5kaW5nSm9iCkpTX1dyaXRlT2JqZWN0CkpTX1dyaXRlT2JqZWN0MgpKU19SZWFkT2JqZWN0CkpTX0V2YWxGdW5jdGlvbgpKU19SZXNvbHZlTW9kdWxlCkpTX0dldFNjcmlwdE9yTW9kdWxlTmFtZQpKU19SdW5Nb2R1bGUKSlNDRnVuY3Rpb25FbnVtCkpTQ0Z1bmN0aW9uVHlwZQpKU19OZXdDRnVuY3Rpb24yCkpTX05ld0NGdW5jdGlvbkRhdGEKSlNfTmV3Q0Nsb3N1cmUKSlNfTmV3Q0Z1bmN0aW9uCkpTX05ld0NGdW5jdGlvbk1hZ2ljCkpTX1NldENvbnN0cnVjdG9yCkpTQ0Z1bmN0aW9uTGlzdEVudHJ5CkpTX0NGVU5DX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfU1BFQ0lBTF9ERUYKSlNfSVRFUkFUT1JfTkVYVF9ERUYKSlNfQ0dFVFNFVF9ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX1BST1BfSU5UMzJfREVGCkpTX1BST1BfSU5UNjRfREVGCkpTX1BST1BfRE9VQkxFX0RFRgpKU19QUk9QX1VOREVGSU5FRF9ERUYKSlNfT0JKRUNUX0RFRgpKU19BTElBU19ERUYKSlNfQUxJQVNfQkFTRV9ERUYKSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QKSlNfTmV3Q01vZHVsZQpKU19BZGRNb2R1bGVFeHBvcnQKSlNfQWRkTW9kdWxlRXhwb3J0TGlzdApKU19TZXRNb2R1bGVFeHBvcnQKSlNfU2V0TW9kdWxlRXhwb3J0TGlzdAAAAAAAAAAAbYgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "tests/test_lexer.js",
			"redo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAFktAAAAAAAAWS0AAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWy0AAAAAAABbLQAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 14740,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					78,
					1,
					"insert",
					{
						"characters": "\n\nlet"
					},
					"CAAAAIAsAAAAAAAAgSwAAAAAAAAAAAAAgSwAAAAAAACFLAAAAAAAAAAAAACFLAAAAAAAAIYsAAAAAAAAAAAAAIYsAAAAAAAAiiwAAAAAAAAAAAAAgSwAAAAAAACBLAAAAAAAAAQAAAAgICAghiwAAAAAAACHLAAAAAAAAAAAAACHLAAAAAAAAIgsAAAAAAAAAAAAAIgsAAAAAAAAiSwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACALAAAAAAAAIAsAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAIksAAAAAAAAiiwAAAAAAAAAAAAAiiwAAAAAAACLLAAAAAAAAAAAAACLLAAAAAAAAIwsAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJLAAAAAAAAIksAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIwsAAAAAAAAjSwAAAAAAAAAAAAAjSwAAAAAAACOLAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMLAAAAAAAAIwsAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " lexer"
					},
					"BgAAAI4sAAAAAAAAjywAAAAAAAAAAAAAjywAAAAAAACQLAAAAAAAAAAAAACQLAAAAAAAAJEsAAAAAAAAAAAAAJEsAAAAAAAAkiwAAAAAAAAAAAAAkiwAAAAAAACTLAAAAAAAAAAAAACTLAAAAAAAAJQsAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOLAAAAAAAAI4sAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJQsAAAAAAAAliwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACULAAAAAAAAJQsAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "Symbol.iterator"
					},
					"DwAAAJUsAAAAAAAAliwAAAAAAAAAAAAAliwAAAAAAACXLAAAAAAAAAAAAACXLAAAAAAAAJgsAAAAAAAAAAAAAJgsAAAAAAAAmSwAAAAAAAAAAAAAmSwAAAAAAACaLAAAAAAAAAAAAACaLAAAAAAAAJssAAAAAAAAAAAAAJssAAAAAAAAnCwAAAAAAAAAAAAAnCwAAAAAAACdLAAAAAAAAAAAAACdLAAAAAAAAJ4sAAAAAAAAAAAAAJ4sAAAAAAAAnywAAAAAAAAAAAAAnywAAAAAAACgLAAAAAAAAAAAAACgLAAAAAAAAKEsAAAAAAAAAAAAAKEsAAAAAAAAoiwAAAAAAAAAAAAAoiwAAAAAAACjLAAAAAAAAAAAAACjLAAAAAAAAKQsAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVLAAAAAAAAJUsAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKUsAAAAAAAApiwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClLAAAAAAAAKUsAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"left_delete",
					null,
					"AQAAAKUsAAAAAAAApSwAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmLAAAAAAAAKYsAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKUsAAAAAAAApywAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClLAAAAAAAAKUsAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKcsAAAAAAAAqCwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnLAAAAAAAAKcsAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "it"
					},
					"AwAAAPYsAAAAAAAA9ywAAAAAAAAAAAAA9ywAAAAAAAD3LAAAAAAAAAUAAABsZXhlcvcsAAAAAAAA+CwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2LAAAAAAAAPssAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAABYtAAAAAAAAFy0AAAAAAAAAAAAAFy0AAAAAAAAdLQAAAAAAAAAAAAAdLQAAAAAAAB4tAAAAAAAAAAAAAB4tAAAAAAAAHy0AAAAAAAAAAAAAHy0AAAAAAAAgLQAAAAAAAAAAAAAgLQAAAAAAACEtAAAAAAAAAAAAACEtAAAAAAAAIi0AAAAAAAAAAAAAIi0AAAAAAAAjLQAAAAAAAAAAAAAjLQAAAAAAACQtAAAAAAAAAAAAACQtAAAAAAAAJS0AAAAAAAAAAAAAJS0AAAAAAAAmLQAAAAAAAAAAAAAmLQAAAAAAACctAAAAAAAAAAAAACctAAAAAAAAKC0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWLQAAAAAAABYtAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACgtAAAAAAAAKi0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoLQAAAAAAACgtAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACktAAAAAAAAKy0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApLQAAAAAAACktAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BQAAACotAAAAAAAAKy0AAAAAAAAAAAAAKy0AAAAAAAAsLQAAAAAAAAAAAAAsLQAAAAAAAC0tAAAAAAAAAAAAAC0tAAAAAAAALi0AAAAAAAAAAAAALi0AAAAAAAAvLQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqLQAAAAAAACotAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADAtAAAAAAAAMS0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwLQAAAAAAADAtAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAADEtAAAAAAAAMi0AAAAAAAAAAAAAMi0AAAAAAAAzLQAAAAAAAAAAAAAzLQAAAAAAADQtAAAAAAAAAAAAADQtAAAAAAAANS0AAAAAAAAAAAAANS0AAAAAAAA2LQAAAAAAAAAAAAA2LQAAAAAAADctAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxLQAAAAAAADEtAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADgtAAAAAAAAOS0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4LQAAAAAAADgtAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					1,
					"cut",
					null,
					"AQAAABctAAAAAAAAFy0AAAAAAAAjAAAAICAgICAgY29uc29sZS5sb2coJ3ZhbHVlJywgdmFsdWUpOwo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXLQAAAAAAADotAAAAAAAAAAAAAAAAAAA"
				],
				[
					161,
					1,
					"paste",
					null,
					"AQAAABctAAAAAAAAOi0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXLQAAAAAAABctAAAAAAAAAAAAAAAA8L8"
				],
				[
					163,
					1,
					"paste",
					null,
					"AQAAAKksAAAAAAAAzCwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpLAAAAAAAAKksAAAAAAAAAAAAAAAAAAA"
				],
				[
					173,
					1,
					"paste",
					null,
					"AgAAALwsAAAAAAAAviwAAAAAAAAAAAAAviwAAAAAAAC+LAAAAAAAAAUAAAB2YWx1ZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8LAAAAAAAAMEsAAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"paste",
					null,
					"AgAAAMEsAAAAAAAAwywAAAAAAAAAAAAAwywAAAAAAADDLAAAAAAAAAUAAAB2YWx1ZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBLAAAAAAAAMYsAAAAAAAAAAAAAAAA8L8"
				],
				[
					186,
					1,
					"cut",
					null,
					"AQAAAP0sAAAAAAAA/SwAAAAAAAAnAAAAbGV0IHsgZG9uZSwgdmFsdWUgfSA9IGl0Lm5leHQoKTsKICAgICAg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9LAAAAAAAACQtAAAAAAAAAAAAAAAATkA"
				],
				[
					187,
					2,
					"paste",
					null,
					"AgAAAP0sAAAAAAAAJC0AAAAAAAAAAAAAJC0AAAAAAABLLQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9LAAAAAAAAP0sAAAAAAAAAAAAAAAA8L8"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": " nextTok"
					},
					"CQAAAAAtAAAAAAAAAS0AAAAAAAAAAAAAAS0AAAAAAAABLQAAAAAAABAAAAAgeyBkb25lLCB2YWx1ZSB9AS0AAAAAAAACLQAAAAAAAAAAAAACLQAAAAAAAAMtAAAAAAAAAAAAAAMtAAAAAAAABC0AAAAAAAAAAAAABC0AAAAAAAAFLQAAAAAAAAAAAAAFLQAAAAAAAAYtAAAAAAAAAAAAAAYtAAAAAAAABy0AAAAAAAAAAAAABy0AAAAAAAAILQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAALQAAAAAAABAtAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					1,
					"paste",
					null,
					"AgAAADItAAAAAAAAOS0AAAAAAAAAAAAAOS0AAAAAAAA5LQAAAAAAAAkAAABpdC5uZXh0KCk",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyLQAAAAAAADstAAAAAAAAAAAAAAAA8L8"
				],
				[
					209,
					1,
					"cut",
					null,
					"AQAAAFEtAAAAAAAAUS0AAAAAAAAjAAAAICAgICAgY29uc29sZS5sb2coJ3ZhbHVlJywgdmFsdWUpOwo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRLQAAAAAAAHQtAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"paste",
					null,
					"AQAAAFEtAAAAAAAAdC0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRLQAAAAAAAFEtAAAAAAAAAAAAAAAA8L8"
				],
				[
					217,
					1,
					"cut",
					null,
					"AQAAAFEtAAAAAAAAUS0AAAAAAAAjAAAAICAgICAgY29uc29sZS5sb2coJ3ZhbHVlJywgdmFsdWUpOwo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRLQAAAAAAAHQtAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					2,
					"paste",
					null,
					"AgAAAFEtAAAAAAAAdC0AAAAAAAAAAAAAdC0AAAAAAACXLQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRLQAAAAAAAFEtAAAAAAAAAAAAAAAA8L8"
				],
				[
					232,
					1,
					"paste",
					null,
					"AgAAAGQtAAAAAAAAay0AAAAAAAAAAAAAay0AAAAAAABrLQAAAAAAAAUAAAB2YWx1ZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkLQAAAAAAAGktAAAAAAAAAAAAAAAA8L8"
				],
				[
					239,
					1,
					"paste",
					null,
					"AgAAAG4tAAAAAAAAdS0AAAAAAAAAAAAAdS0AAAAAAAB1LQAAAAAAAAUAAAB2YWx1ZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuLQAAAAAAAHMtAAAAAAAAAAAAAAAA8L8"
				],
				[
					257,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAJotAAAAAAAAnC0AAAAAAAAAAAAAUS0AAAAAAABTLQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRLQAAAAAAAJotAAAAAAAAAAAAAAAA8L8"
				],
				[
					286,
					1,
					"cut",
					null,
					"AQAAAJwtAAAAAAAAnC0AAAAAAAACAAAAKi8",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcLQAAAAAAAJ4tAAAAAAAAAAAAAAAA8L8"
				],
				[
					289,
					1,
					"paste",
					null,
					"AQAAAHktAAAAAAAAey0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5LQAAAAAAAHktAAAAAAAAAAAAAAAA8L8"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": "lexer.token"
					},
					"DAAAAOEtAAAAAAAA4i0AAAAAAAAAAAAA4i0AAAAAAADiLQAAAAAAAAUAAAB2YWx1ZeItAAAAAAAA4y0AAAAAAAAAAAAA4y0AAAAAAADkLQAAAAAAAAAAAADkLQAAAAAAAOUtAAAAAAAAAAAAAOUtAAAAAAAA5i0AAAAAAAAAAAAA5i0AAAAAAADnLQAAAAAAAAAAAADnLQAAAAAAAOgtAAAAAAAAAAAAAOgtAAAAAAAA6S0AAAAAAAAAAAAA6S0AAAAAAADqLQAAAAAAAAAAAADqLQAAAAAAAOstAAAAAAAAAAAAAOstAAAAAAAA7C0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhLQAAAAAAAOYtAAAAAAAAAAAAAAAA8L8"
				],
				[
					355,
					1,
					"cut",
					null,
					"AQAAANUtAAAAAAAA1S0AAAAAAAAZAAAAICAgICAgdG9rID0gbGV4ZXIudG9rZW47Cg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVLQAAAAAAAO4tAAAAAAAAAAAAAAAA8L8"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOguAAAAAAAA6S4AAAAAAAAAAAAA6S4AAAAAAADvLgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoLgAAAAAAAOguAAAAAAAAAAAAAAAA8L8"
				],
				[
					364,
					1,
					"paste",
					null,
					"AQAAAO8uAAAAAAAACC8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvLgAAAAAAAO8uAAAAAAAAAAAAAAAA8L8"
				],
				[
					411,
					1,
					"cut",
					null,
					"AQAAABQlAAAAAAAAFCUAAAAAAAAnAAAAICAgIGxvZygnbGV4ZXIuc3RhdGVzJywgbGV4ZXIuc3RhdGVzKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUJQAAAAAAADslAAAAAAAAAAAAAAAA8L8"
				],
				[
					412,
					2,
					"paste",
					null,
					"AgAAABQlAAAAAAAAOyUAAAAAAAAAAAAAOyUAAAAAAABiJQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUJQAAAAAAABQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					421,
					1,
					"insert",
					{
						"characters": "rule"
					},
					"BQAAAEolAAAAAAAASyUAAAAAAAAAAAAASyUAAAAAAABLJQAAAAAAAAYAAABzdGF0ZXNLJQAAAAAAAEwlAAAAAAAAAAAAAEwlAAAAAAAATSUAAAAAAAAAAAAATSUAAAAAAABOJQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKJQAAAAAAAFAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "Names"
					},
					"BQAAAE4lAAAAAAAATyUAAAAAAAAAAAAATyUAAAAAAABQJQAAAAAAAAAAAABQJQAAAAAAAFElAAAAAAAAAAAAAFElAAAAAAAAUiUAAAAAAAAAAAAAUiUAAAAAAABTJQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOJQAAAAAAAE4lAAAAAAAAAAAAAAAA8L8"
				],
				[
					436,
					1,
					"paste",
					null,
					"AgAAAFwlAAAAAAAAZSUAAAAAAAAAAAAAZSUAAAAAAABlJQAAAAAAAAYAAABzdGF0ZXM",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcJQAAAAAAAGIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					447,
					1,
					"cut",
					null,
					"AQAAADslAAAAAAAAOyUAAAAAAAAtAAAAICAgIGxvZygnbGV4ZXIucnVsZU5hbWVzJywgbGV4ZXIucnVsZU5hbWVzKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7JQAAAAAAAGglAAAAAAAAAAAAAAAA8L8"
				],
				[
					450,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAM04AAAAAAAAzjgAAAAAAAAAAAAAzjgAAAAAAADQOAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNOAAAAAAAAM04AAAAAAAAAAAAAAAA8L8"
				],
				[
					451,
					1,
					"paste",
					null,
					"AQAAANA4AAAAAAAA/TgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQOAAAAAAAANA4AAAAAAAAAAAAAAAA8L8"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": "console."
					},
					"CQAAAM44AAAAAAAAzzgAAAAAAAAAAAAAzzgAAAAAAADPOAAAAAAAAAYAAAAgICAgICDPOAAAAAAAANA4AAAAAAAAAAAAANA4AAAAAAAA0TgAAAAAAAAAAAAA0TgAAAAAAADSOAAAAAAAAAAAAADSOAAAAAAAANM4AAAAAAAAAAAAANM4AAAAAAAA1DgAAAAAAAAAAAAA1DgAAAAAAADVOAAAAAAAAAAAAADVOAAAAAAAANY4AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOOAAAAAAAANQ4AAAAAAAAAAAAAAAA8L8"
				],
				[
					464,
					2,
					"right_delete",
					null,
					"AgAAAM44AAAAAAAAzjgAAAAAAAAHAAAAY29uc29sZc44AAAAAAAAzjgAAAAAAAABAAAALg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOOAAAAAAAANU4AAAAAAAAAAAAAAAA8L8"
				],
				[
					466,
					1,
					"cut",
					null,
					"AQAAAM44AAAAAAAAzjgAAAAAAAApAAAAbG9nKCdsZXhlci5ydWxlTmFtZXMnLCBsZXhlci5ydWxlTmFtZXMpOwo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOOAAAAAAAAPc4AAAAAAAAAAAAAAAAAAA"
				],
				[
					468,
					1,
					"paste",
					null,
					"AQAAAHk4AAAAAAAAojgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5OAAAAAAAAHk4AAAAAAAAAAAAAAAAAAA"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAJo4AAAAAAAAmzgAAAAAAAAAAAAAmzgAAAAAAACbOAAAAAAAAAUAAABOYW1lcw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaOAAAAAAAAJ84AAAAAAAAAAAAAAAA8L8"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": "eas"
					},
					"BAAAAIc4AAAAAAAAiDgAAAAAAAAAAAAAiDgAAAAAAACIOAAAAAAAAAYAAABlTmFtZXOIOAAAAAAAAIk4AAAAAAAAAAAAAIk4AAAAAAAAijgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHOAAAAAAAAI04AAAAAAAAAAAAAAAA8L8"
				],
				[
					483,
					2,
					"left_delete",
					null,
					"AgAAAIk4AAAAAAAAiTgAAAAAAAABAAAAc4g4AAAAAAAAiDgAAAAAAAABAAAAYQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKOAAAAAAAAIo4AAAAAAAAAAAAAAAA8L8"
				],
				[
					484,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAIg4AAAAAAAAiTgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIOAAAAAAAAIg4AAAAAAAAAAAAAAAA8L8"
				],
				[
					495,
					1,
					"cut",
					null,
					"AQAAAHk4AAAAAAAAeTgAAAAAAAAhAAAAbG9nKCdsZXhlci5ydWxlcycsIGxleGVyLnJ1bGVzKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5OAAAAAAAAJo4AAAAAAAAAAAAAAAA8L8"
				],
				[
					496,
					2,
					"paste",
					null,
					"AgAAAHk4AAAAAAAAmjgAAAAAAAAAAAAAmjgAAAAAAAC7OAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5OAAAAAAAAHk4AAAAAAAAAAAAAAAA8L8"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "tplems"
					},
					"BwAAAKU4AAAAAAAApjgAAAAAAAAAAAAApjgAAAAAAACmOAAAAAAAAAUAAABydWxlc6Y4AAAAAAAApzgAAAAAAAAAAAAApzgAAAAAAACoOAAAAAAAAAAAAACoOAAAAAAAAKk4AAAAAAAAAAAAAKk4AAAAAAAAqjgAAAAAAAAAAAAAqjgAAAAAAACrOAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClOAAAAAAAAKo4AAAAAAAAAAAAAAAA8L8"
				],
				[
					502,
					6,
					"left_delete",
					null,
					"BgAAAKo4AAAAAAAAqjgAAAAAAAABAAAAc6k4AAAAAAAAqTgAAAAAAAABAAAAbag4AAAAAAAAqDgAAAAAAAABAAAAZac4AAAAAAAApzgAAAAAAAABAAAAbKY4AAAAAAAApjgAAAAAAAABAAAAcKU4AAAAAAAApTgAAAAAAAABAAAAdA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrOAAAAAAAAKs4AAAAAAAAAAAAAAAA8L8"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": "tokens"
					},
					"BgAAAKU4AAAAAAAApjgAAAAAAAAAAAAApjgAAAAAAACnOAAAAAAAAAAAAACnOAAAAAAAAKg4AAAAAAAAAAAAAKg4AAAAAAAAqTgAAAAAAAAAAAAAqTgAAAAAAACqOAAAAAAAAAAAAACqOAAAAAAAAKs4AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClOAAAAAAAAKU4AAAAAAAAAAAAAAAA8L8"
				],
				[
					515,
					1,
					"paste",
					null,
					"AgAAALQ4AAAAAAAAujgAAAAAAAAAAAAAujgAAAAAAAC6OAAAAAAAAAUAAABydWxlcw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0OAAAAAAAALk4AAAAAAAAAAAAAAAA8L8"
				],
				[
					558,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFEtAAAAAAAAUi0AAAAAAAAAAAAAUi0AAAAAAABSLQAAAAAAACsAAAAvKiAgICAgIGNvbnNvbGUubG9nKCduZXh0VG9rJywgbmV4dFRvayk7Ki8K",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRLQAAAAAAAHwtAAAAAAAAAAAAAAAA8L8"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAFctAAAAAAAAWC0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXLQAAAAAAAFctAAAAAAAAAAAAAAAA8L8"
				],
				[
					564,
					1,
					"left_delete",
					null,
					"AQAAAFctAAAAAAAAVy0AAAAAAAABAAAALw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYLQAAAAAAAFgtAAAAAAAAAAAAAAAA8L8"
				],
				[
					565,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAFctAAAAAAAAWC0AAAAAAAAAAAAAWC0AAAAAAABZLQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXLQAAAAAAAFctAAAAAAAAAAAAAAAA8L8"
				],
				[
					566,
					1,
					"right_delete",
					null,
					"AQAAAFktAAAAAAAAWS0AAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZLQAAAAAAAFktAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "quickjs-lexer.c",
			"settings":
			{
				"buffer_size": 41276,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"insert",
					{
						"characters": "Token"
					},
					"BgAAAH6NAAAAAAAAf40AAAAAAAAAAAAAf40AAAAAAAB/jQAAAAAAAAMAAABPYmp/jQAAAAAAAICNAAAAAAAAAAAAAICNAAAAAAAAgY0AAAAAAAAAAAAAgY0AAAAAAACCjQAAAAAAAAAAAACCjQAAAAAAAIONAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+jQAAAAAAAIGNAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRjQAAAAAAAJGNAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"paste",
					null,
					"AgAAAAVqAAAAAAAAFGoAAAAAAAAAAAAAFGoAAAAAAAAUagAAAAAAAAoAAABsZXgtPnN0YXJ0",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFagAAAAAAAA9qAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"BAAAABBqAAAAAAAAEWoAAAAAAAAAAAAAEWoAAAAAAAARagAAAAAAAAQAAABkYXRhEWoAAAAAAAASagAAAAAAAAAAAAASagAAAAAAABNqAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQagAAAAAAABRqAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "byte_length"
					},
					"DAAAABpqAAAAAAAAG2oAAAAAAAAAAAAAG2oAAAAAAAAbagAAAAAAABYAAABpbnB1dC5wb3MgLSBsZXgtPnN0YXJ0G2oAAAAAAAAcagAAAAAAAAAAAAAcagAAAAAAAB1qAAAAAAAAAAAAAB1qAAAAAAAAHmoAAAAAAAAAAAAAHmoAAAAAAAAfagAAAAAAAAAAAAAfagAAAAAAACBqAAAAAAAAAAAAACBqAAAAAAAAIWoAAAAAAAAAAAAAIWoAAAAAAAAiagAAAAAAAAAAAAAiagAAAAAAACNqAAAAAAAAAAAAACNqAAAAAAAAJGoAAAAAAAAAAAAAJGoAAAAAAAAlagAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaagAAAAAAADBqAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "input.pos"
					},
					"CgAAAGAmAAAAAAAAYSYAAAAAAAAAAAAAYSYAAAAAAABhJgAAAAAAAAUAAABzdGFydGEmAAAAAAAAYiYAAAAAAAAAAAAAYiYAAAAAAABjJgAAAAAAAAAAAABjJgAAAAAAAGQmAAAAAAAAAAAAAGQmAAAAAAAAZSYAAAAAAAAAAAAAZSYAAAAAAABmJgAAAAAAAAAAAABmJgAAAAAAAGcmAAAAAAAAAAAAAGcmAAAAAAAAaCYAAAAAAAAAAAAAaCYAAAAAAABpJgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgJgAAAAAAAGUmAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"paste",
					null,
					"AgAAAJYmAAAAAAAApCYAAAAAAAAAAAAApCYAAAAAAACkJgAAAAAAAAoAAABsZXgtPnN0YXJ0",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWJgAAAAAAAKAmAAAAAAAAAAAAAAAA8L8"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "input.pos"
					},
					"CgAAAOA0AAAAAAAA4TQAAAAAAAAAAAAA4TQAAAAAAADhNAAAAAAAAAUAAABzdGFydOE0AAAAAAAA4jQAAAAAAAAAAAAA4jQAAAAAAADjNAAAAAAAAAAAAADjNAAAAAAAAOQ0AAAAAAAAAAAAAOQ0AAAAAAAA5TQAAAAAAAAAAAAA5TQAAAAAAADmNAAAAAAAAAAAAADmNAAAAAAAAOc0AAAAAAAAAAAAAOc0AAAAAAAA6DQAAAAAAAAAAAAA6DQAAAAAAADpNAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgNAAAAAAAAOU0AAAAAAAAAAAAAAAA8L8"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "start"
					},
					"BQAAAPM0AAAAAAAA9DQAAAAAAAAAAAAA9DQAAAAAAAD1NAAAAAAAAAAAAAD1NAAAAAAAAPY0AAAAAAAAAAAAAPY0AAAAAAAA9zQAAAAAAAAAAAAA9zQAAAAAAAD4NAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzNAAAAAAAAPM0AAAAAAAAAAAAAAAA8L8"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAPg0AAAAAAAA+TQAAAAAAAAAAAAA+TQAAAAAAAD6NAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4NAAAAAAAAPg0AAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " lex->bte"
					},
					"CQAAAPo0AAAAAAAA+zQAAAAAAAAAAAAA+zQAAAAAAAD8NAAAAAAAAAAAAAD8NAAAAAAAAP00AAAAAAAAAAAAAP00AAAAAAAA/jQAAAAAAAAAAAAA/jQAAAAAAAD/NAAAAAAAAAAAAAD/NAAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAATUAAAAAAAAAAAAAATUAAAAAAAACNQAAAAAAAAAAAAACNQAAAAAAAAM1AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6NAAAAAAAAPo0AAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					2,
					"left_delete",
					null,
					"AgAAAAI1AAAAAAAAAjUAAAAAAAABAAAAZQE1AAAAAAAAATUAAAAAAAABAAAAdA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADNQAAAAAAAAM1AAAAAAAAAAAAAAAA8L8"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "yte_length"
					},
					"CwAAAAE1AAAAAAAAAjUAAAAAAAAAAAAAAjUAAAAAAAACNQAAAAAAAA4AAABsZXgtPmlucHV0LnBvcwI1AAAAAAAAAzUAAAAAAAAAAAAAAzUAAAAAAAAENQAAAAAAAAAAAAAENQAAAAAAAAU1AAAAAAAAAAAAAAU1AAAAAAAABjUAAAAAAAAAAAAABjUAAAAAAAAHNQAAAAAAAAAAAAAHNQAAAAAAAAg1AAAAAAAAAAAAAAg1AAAAAAAACTUAAAAAAAAAAAAACTUAAAAAAAAKNQAAAAAAAAAAAAAKNQAAAAAAAAs1AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABNQAAAAAAAA81AAAAAAAAAAAAAAAA8L8"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKpFAAAAAAAAq0UAAAAAAAAAAAAAq0UAAAAAAACsRQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqRQAAAAAAAKpFAAAAAAAAAAAAAAAA8L8"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAADFTAAAAAAAAMlMAAAAAAAAAAAAAMlMAAAAAAAAzUwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxUwAAAAAAADFTAAAAAAAAAAAAAAAA8L8"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "oin"
					},
					"BAAAAL9TAAAAAAAAwFMAAAAAAAAAAAAAwFMAAAAAAADAUwAAAAAAAAUAAABzdGFydMBTAAAAAAAAwVMAAAAAAAAAAAAAwVMAAAAAAADCUwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/UwAAAAAAAMRTAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					3,
					"left_delete",
					null,
					"AwAAAMFTAAAAAAAAwVMAAAAAAAABAAAAbsBTAAAAAAAAwFMAAAAAAAABAAAAab9TAAAAAAAAv1MAAAAAAAABAAAAbw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCUwAAAAAAAMJTAAAAAAAAAAAAAAAA8L8"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "inpt"
					},
					"BAAAAL9TAAAAAAAAwFMAAAAAAAAAAAAAwFMAAAAAAADBUwAAAAAAAAAAAADBUwAAAAAAAMJTAAAAAAAAAAAAAMJTAAAAAAAAw1MAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/UwAAAAAAAL9TAAAAAAAAAAAAAAAA8L8"
				],
				[
					217,
					1,
					"left_delete",
					null,
					"AQAAAMJTAAAAAAAAwlMAAAAAAAABAAAAdA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDUwAAAAAAAMNTAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "ut.pos"
					},
					"BgAAAMJTAAAAAAAAw1MAAAAAAAAAAAAAw1MAAAAAAADEUwAAAAAAAAAAAADEUwAAAAAAAMVTAAAAAAAAAAAAAMVTAAAAAAAAxlMAAAAAAAAAAAAAxlMAAAAAAADHUwAAAAAAAAAAAADHUwAAAAAAAMhTAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCUwAAAAAAAMJTAAAAAAAAAAAAAAAA8L8"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": "start"
					},
					"BQAAANZTAAAAAAAA11MAAAAAAAAAAAAA11MAAAAAAADYUwAAAAAAAAAAAADYUwAAAAAAANlTAAAAAAAAAAAAANlTAAAAAAAA2lMAAAAAAAAAAAAA2lMAAAAAAADbUwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWUwAAAAAAANZTAAAAAAAAAAAAAAAA8L8"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAANtTAAAAAAAA3FMAAAAAAAAAAAAA3FMAAAAAAADdUwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbUwAAAAAAANtTAAAAAAAAAAAAAAAA8L8"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": " lex->byte"
					},
					"CgAAAN1TAAAAAAAA3lMAAAAAAAAAAAAA3lMAAAAAAADfUwAAAAAAAAAAAADfUwAAAAAAAOBTAAAAAAAAAAAAAOBTAAAAAAAA4VMAAAAAAAAAAAAA4VMAAAAAAADiUwAAAAAAAAAAAADiUwAAAAAAAONTAAAAAAAAAAAAAONTAAAAAAAA5FMAAAAAAAAAAAAA5FMAAAAAAADlUwAAAAAAAAAAAADlUwAAAAAAAOZTAAAAAAAAAAAAAOZTAAAAAAAA51MAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdUwAAAAAAAN1TAAAAAAAAAAAAAAAA8L8"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "_lengfrth"
					},
					"CQAAAOdTAAAAAAAA6FMAAAAAAAAAAAAA6FMAAAAAAADpUwAAAAAAAAAAAADpUwAAAAAAAOpTAAAAAAAAAAAAAOpTAAAAAAAA61MAAAAAAAAAAAAA61MAAAAAAADsUwAAAAAAAAAAAADsUwAAAAAAAO1TAAAAAAAAAAAAAO1TAAAAAAAA7lMAAAAAAAAAAAAA7lMAAAAAAADvUwAAAAAAAAAAAADvUwAAAAAAAPBTAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnUwAAAAAAAOdTAAAAAAAAAAAAAAAA8L8"
				],
				[
					224,
					4,
					"left_delete",
					null,
					"BAAAAO9TAAAAAAAA71MAAAAAAAABAAAAaO5TAAAAAAAA7lMAAAAAAAABAAAAdO1TAAAAAAAA7VMAAAAAAAABAAAAcuxTAAAAAAAA7FMAAAAAAAABAAAAZg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwUwAAAAAAAPBTAAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAOxTAAAAAAAA7VMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsUwAAAAAAAOxTAAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					1,
					"left_delete",
					null,
					"AQAAAOxTAAAAAAAA7FMAAAAAAAABAAAAZw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtUwAAAAAAAO1TAAAAAAAAAAAAAAAA8L8"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "th"
					},
					"AgAAAOxTAAAAAAAA7VMAAAAAAAAAAAAA7VMAAAAAAADuUwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsUwAAAAAAAOxTAAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					1,
					"left_delete",
					null,
					"AQAAAO5TAAAAAAAA7lMAAAAAAAAOAAAAbGV4LT5pbnB1dC5wb3M",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuUwAAAAAAAPxTAAAAAAAAAAAAAAAA8L8"
				],
				[
					258,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAOZgAAAAAAAA6GAAAAAAAAAAAAAAk2AAAAAAAACVYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTYAAAAAAAAOZgAAAAAAAA////////738"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAGCOAAAAAAAAYY4AAAAAAAAAAAAAYY4AAAAAAABijgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgjgAAAAAAAGCOAAAAAAAAAAAAAAAA8L8"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABReAAAAAAAAFV4AAAAAAAAAAAAAFV4AAAAAAAAWXgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUXgAAAAAAABReAAAAAAAAAAAAAAAA8L8"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": "input.pos"
					},
					"CgAAABV9AAAAAAAAFn0AAAAAAAAAAAAAFn0AAAAAAAAWfQAAAAAAAAUAAABzdGFydBZ9AAAAAAAAF30AAAAAAAAAAAAAF30AAAAAAAAYfQAAAAAAAAAAAAAYfQAAAAAAABl9AAAAAAAAAAAAABl9AAAAAAAAGn0AAAAAAAAAAAAAGn0AAAAAAAAbfQAAAAAAAAAAAAAbfQAAAAAAABx9AAAAAAAAAAAAABx9AAAAAAAAHX0AAAAAAAAAAAAAHX0AAAAAAAAefQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVfQAAAAAAABp9AAAAAAAAAAAAAAAA8L8"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": "input.pos"
					},
					"CQAAALl9AAAAAAAAun0AAAAAAAAAAAAAun0AAAAAAAC7fQAAAAAAAAAAAAC7fQAAAAAAALx9AAAAAAAAAAAAALx9AAAAAAAAvX0AAAAAAAAAAAAAvX0AAAAAAAC+fQAAAAAAAAAAAAC+fQAAAAAAAL99AAAAAAAAAAAAAL99AAAAAAAAwH0AAAAAAAAAAAAAwH0AAAAAAADBfQAAAAAAAAAAAADBfQAAAAAAAMJ9AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5fQAAAAAAALl9AAAAAAAAAAAAAAAA8L8"
				],
				[
					339,
					5,
					"right_delete",
					null,
					"BQAAAMJ9AAAAAAAAwn0AAAAAAAABAAAAc8J9AAAAAAAAwn0AAAAAAAABAAAAdMJ9AAAAAAAAwn0AAAAAAAABAAAAYcJ9AAAAAAAAwn0AAAAAAAABAAAAcsJ9AAAAAAAAwn0AAAAAAAABAAAAdA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCfQAAAAAAAMJ9AAAAAAAAAAAAAAAA8L8"
				],
				[
					352,
					1,
					"left_delete",
					null,
					"AQAAADuIAAAAAAAAO4gAAAAAAABjAAAAICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAic3RhcnQiLCBKU19OZXdVaW50MzIoY3R4LCBsZXgtPnN0YXJ0KSwgSlNfUFJPUF9FTlVNRVJBQkxFKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7iAAAAAAAAJ6IAAAAAAAAAAAAAAAAAAA"
				],
				[
					358,
					1,
					"cut",
					null,
					"AQAAADuIAAAAAAAAO4gAAAAAAABrAAAAICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAiYnl0ZWxlbiIsIEpTX05ld1VpbnQzMihjdHgsIGxleC0+Ynl0ZV9sZW5ndGgpLCBKU19QUk9QX0VOVU1FUkFCTEUpOwo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7iAAAAAAAAKaIAAAAAAAAAAAAAAAAAAA"
				],
				[
					359,
					2,
					"paste",
					null,
					"AgAAADuIAAAAAAAApogAAAAAAAAAAAAApogAAAAAAAARiQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7iAAAAAAAADuIAAAAAAAAAAAAAAAA8L8"
				],
				[
					366,
					1,
					"left_delete",
					null,
					"AQAAAKaIAAAAAAAApogAAAAAAABrAAAAICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAiYnl0ZWxlbiIsIEpTX05ld1VpbnQzMihjdHgsIGxleC0+Ynl0ZV9sZW5ndGgpLCBKU19QUk9QX0VOVU1FUkFCTEUpOwo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmiAAAAAAAABGJAAAAAAAAAAAAAAAA8L8"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": "input.pos"
					},
					"CQAAADh9AAAAAAAAOX0AAAAAAAAAAAAAOX0AAAAAAAA6fQAAAAAAAAAAAAA6fQAAAAAAADt9AAAAAAAAAAAAADt9AAAAAAAAPH0AAAAAAAAAAAAAPH0AAAAAAAA9fQAAAAAAAAAAAAA9fQAAAAAAAD59AAAAAAAAAAAAAD59AAAAAAAAP30AAAAAAAAAAAAAP30AAAAAAABAfQAAAAAAAAAAAABAfQAAAAAAAEF9AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4fQAAAAAAADh9AAAAAAAAAAAAAAAA8L8"
				],
				[
					380,
					5,
					"right_delete",
					null,
					"BQAAAEF9AAAAAAAAQX0AAAAAAAABAAAAc0F9AAAAAAAAQX0AAAAAAAABAAAAdEF9AAAAAAAAQX0AAAAAAAABAAAAYUF9AAAAAAAAQX0AAAAAAAABAAAAckF9AAAAAAAAQX0AAAAAAAABAAAAdA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBfQAAAAAAAEF9AAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdZQAAAAAAAGRlAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/jslexer.js",
			"settings":
			{
				"buffer_size": 16459,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					88,
					1,
					"insert",
					{
						"characters": "ZH"
					},
					"AgAAALU2AAAAAAAAtjYAAAAAAAAAAAAAtjYAAAAAAAC3NgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1NgAAAAAAALU2AAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					2,
					"left_delete",
					null,
					"AgAAALY2AAAAAAAAtjYAAAAAAAABAAAASLU2AAAAAAAAtTYAAAAAAAABAAAAWg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3NgAAAAAAALc2AAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "Head"
					},
					"BAAAALU2AAAAAAAAtjYAAAAAAAAAAAAAtjYAAAAAAAC3NgAAAAAAAAAAAAC3NgAAAAAAALg2AAAAAAAAAAAAALg2AAAAAAAAuTYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1NgAAAAAAALU2AAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "Part"
					},
					"BAAAAGo3AAAAAAAAazcAAAAAAAAAAAAAazcAAAAAAABsNwAAAAAAAAAAAABsNwAAAAAAAG03AAAAAAAAAAAAAG03AAAAAAAAbjcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqNwAAAAAAAGo3AAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAAAY4AAAAAAAABzgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGOAAAAAAAAAY4AAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"left_delete",
					null,
					"AQAAAAY4AAAAAAAABjgAAAAAAAABAAAARQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHOAAAAAAAAAc4AAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "Tail"
					},
					"BAAAAAY4AAAAAAAABzgAAAAAAAAAAAAABzgAAAAAAAAIOAAAAAAAAAAAAAAIOAAAAAAAAAk4AAAAAAAAAAAAAAk4AAAAAAAACjgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGOAAAAAAAAAY4AAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"cut",
					null,
					"AQAAACsBAAAAAAAAKwEAAAAAAABFAAAAICBIZXhEaWdpdDogL1swLTlhLWZBLUZdLywKICBIZXhEaWdpdHM6IC97SGV4RGlnaXR9KF8/e0hleERpZ2l0fSkqLywK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAQAAAAAAAHABAAAAAAAAAAAAAAAAAAA"
				],
				[
					219,
					2,
					"paste",
					null,
					"AgAAACsBAAAAAAAAcAEAAAAAAAAAAAAAcAEAAAAAAAC1AQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAQAAAAAAACsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": "Binary"
					},
					"BwAAAHIBAAAAAAAAcwEAAAAAAAAAAAAAcwEAAAAAAABzAQAAAAAAAAMAAABIZXhzAQAAAAAAAHQBAAAAAAAAAAAAAHQBAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB2AQAAAAAAAAAAAAB2AQAAAAAAAHcBAAAAAAAAAAAAAHcBAAAAAAAAeAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByAQAAAAAAAHUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					227,
					1,
					"cut",
					null,
					"AQAAAHIBAAAAAAAAcgEAAAAAAAAGAAAAQmluYXJ5",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AQAAAAAAAHIBAAAAAAAAAAAAAAAANEA"
				],
				[
					228,
					1,
					"paste",
					null,
					"AQAAAHIBAAAAAAAAeAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByAQAAAAAAAHIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					231,
					3,
					"right_delete",
					null,
					"AwAAAJABAAAAAAAAkAEAAAAAAAABAAAASJABAAAAAAAAkAEAAAAAAAABAAAAZZABAAAAAAAAkAEAAAAAAAABAAAAeA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAQAAAAAAAJABAAAAAAAAAAAAAAAANEA"
				],
				[
					232,
					1,
					"paste",
					null,
					"AQAAAJABAAAAAAAAlgEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAQAAAAAAAJABAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					7,
					"right_delete",
					null,
					"BwAAAIMBAAAAAAAAgwEAAAAAAAABAAAAOYMBAAAAAAAAgwEAAAAAAAABAAAAYYMBAAAAAAAAgwEAAAAAAAABAAAALYMBAAAAAAAAgwEAAAAAAAABAAAAZoMBAAAAAAAAgwEAAAAAAAABAAAAQYMBAAAAAAAAgwEAAAAAAAABAAAALYMBAAAAAAAAgwEAAAAAAAABAAAARg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAQAAAAAAAIMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAIMBAAAAAAAAhAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAQAAAAAAAIMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					240,
					1,
					"left_delete",
					null,
					"AQAAAIIBAAAAAAAAggEAAAAAAAABAAAALQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAQAAAAAAAIMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "Binary"
					},
					"BwAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACaAQAAAAAAAAMAAABIZXiaAQAAAAAAAJsBAAAAAAAAAAAAAJsBAAAAAAAAnAEAAAAAAAAAAAAAnAEAAAAAAACdAQAAAAAAAAAAAACdAQAAAAAAAJ4BAAAAAAAAAAAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZAQAAAAAAAJwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					247,
					3,
					"right_delete",
					null,
					"AwAAAKkBAAAAAAAAqQEAAAAAAAABAAAASKkBAAAAAAAAqQEAAAAAAAABAAAAZakBAAAAAAAAqQEAAAAAAAABAAAAeA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpAQAAAAAAAKkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "Binarfy"
					},
					"BwAAAKkBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACrAQAAAAAAAAAAAACrAQAAAAAAAKwBAAAAAAAAAAAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAACuAQAAAAAAAK8BAAAAAAAAAAAAAK8BAAAAAAAAsAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpAQAAAAAAAKkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					249,
					2,
					"left_delete",
					null,
					"AgAAAK8BAAAAAAAArwEAAAAAAAABAAAAea4BAAAAAAAArgEAAAAAAAABAAAAZg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwAQAAAAAAALABAAAAAAAAAAAAAAAA8L8"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAK4BAAAAAAAArwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAQAAAAAAAK4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					265,
					1,
					"cut",
					null,
					"AQAAAEMuAAAAAAAAQy4AAAAAAAArAAAAICBIZXhJbnRlZ2VyTGl0ZXJhbDogL1swXVt4WF17SGV4RGlnaXRzfS8sCg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDLgAAAAAAAG4uAAAAAAAAAAAAAAAAAAA"
				],
				[
					266,
					2,
					"paste",
					null,
					"AgAAAEMuAAAAAAAAbi4AAAAAAAAAAAAAbi4AAAAAAACZLgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDLgAAAAAAAEMuAAAAAAAAAAAAAAAA8L8"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "Binary"
					},
					"BwAAAHAuAAAAAAAAcS4AAAAAAAAAAAAAcS4AAAAAAABxLgAAAAAAAAMAAABIZXhxLgAAAAAAAHIuAAAAAAAAAAAAAHIuAAAAAAAAcy4AAAAAAAAAAAAAcy4AAAAAAAB0LgAAAAAAAAAAAAB0LgAAAAAAAHUuAAAAAAAAAAAAAHUuAAAAAAAAdi4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwLgAAAAAAAHMuAAAAAAAAAAAAAAAA8L8"
				],
				[
					272,
					1,
					"right_delete",
					null,
					"AQAAAIwuAAAAAAAAjC4AAAAAAAABAAAAWA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMLgAAAAAAAIwuAAAAAAAAAAAAAAAA8L8"
				],
				[
					273,
					1,
					"left_delete",
					null,
					"AQAAAIsuAAAAAAAAiy4AAAAAAAABAAAAeA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMLgAAAAAAAIwuAAAAAAAAAAAAAAAA8L8"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "Bb"
					},
					"AgAAAIsuAAAAAAAAjC4AAAAAAAAAAAAAjC4AAAAAAACNLgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLLgAAAAAAAIsuAAAAAAAAAAAAAAAA8L8"
				],
				[
					275,
					2,
					"left_delete",
					null,
					"AgAAAIwuAAAAAAAAjC4AAAAAAAABAAAAYosuAAAAAAAAiy4AAAAAAAABAAAAQg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNLgAAAAAAAI0uAAAAAAAAAAAAAAAA8L8"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "bB"
					},
					"AgAAAIsuAAAAAAAAjC4AAAAAAAAAAAAAjC4AAAAAAACNLgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLLgAAAAAAAIsuAAAAAAAAAAAAAAAA8L8"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "Binary"
					},
					"BwAAAI8uAAAAAAAAkC4AAAAAAAAAAAAAkC4AAAAAAACQLgAAAAAAAAMAAABIZXiQLgAAAAAAAJEuAAAAAAAAAAAAAJEuAAAAAAAAki4AAAAAAAAAAAAAki4AAAAAAACTLgAAAAAAAAAAAACTLgAAAAAAAJQuAAAAAAAAAAAAAJQuAAAAAAAAlS4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPLgAAAAAAAJIuAAAAAAAAAAAAAAAA8L8"
				],
				[
					314,
					1,
					"cut",
					null,
					"AQAAAA47AAAAAAAADjsAAAAAAAAUAAAAe0hleEludGVnZXJMaXRlcmFsfXw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOOwAAAAAAACI7AAAAAAAAAAAAAAAA8L8"
				],
				[
					315,
					2,
					"paste",
					null,
					"AgAAAA47AAAAAAAAIjsAAAAAAAAAAAAAIjsAAAAAAAA2OwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOOwAAAAAAAA47AAAAAAAAAAAAAAAA8L8"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "Binary"
					},
					"BwAAACM7AAAAAAAAJDsAAAAAAAAAAAAAJDsAAAAAAAAkOwAAAAAAAAMAAABIZXgkOwAAAAAAACU7AAAAAAAAAAAAACU7AAAAAAAAJjsAAAAAAAAAAAAAJjsAAAAAAAAnOwAAAAAAAAAAAAAnOwAAAAAAACg7AAAAAAAAAAAAACg7AAAAAAAAKTsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjOwAAAAAAACY7AAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/fs.js",
			"settings":
			{
				"buffer_size": 14006,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					20,
					1,
					"cut",
					null,
					"AQAAAPceAAAAAAAA9x4AAAAAAAB+AAAACmV4cG9ydCBmdW5jdGlvbiBzdGF0U3luYyhwYXRoLCBjYikgewogIGxldCBbc3QsIGVycl0gPSBvcy5zdGF0KHBhdGgpOwogIHJldHVybiBlcnIgPyBzdHJlcnIoW3N0LCBlcnJdKSA6IG5ldyBmcy5TdGF0cyhzdCk7Cn0K",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3HgAAAAAAAHUfAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"paste",
					null,
					"AQAAAPceAAAAAAAAdR8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3HgAAAAAAAPceAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEwaAAAAAAAATRoAAAAAAAAAAAAATRoAAAAAAABPGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMGgAAAAAAAEwaAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"paste",
					null,
					"AQAAAE8aAAAAAAAAzRoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPGgAAAAAAAE8aAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "st"
					},
					"AwAAACwbAAAAAAAALRsAAAAAAAAAAAAATRoAAAAAAABNGgAAAAAAAAIAAAAgICsbAAAAAAAALBsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsGwAAAAAAACwbAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAACwbAAAAAAAALRsAAAAAAAAAAAAALRsAAAAAAAAuGwAAAAAAAAAAAAAuGwAAAAAAAC8bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsGwAAAAAAACwbAAAAAAAAAAAAAAAA8L8"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " !re"
					},
					"BAAAAC8bAAAAAAAAMBsAAAAAAAAAAAAAMBsAAAAAAAAxGwAAAAAAAAAAAAAxGwAAAAAAADIbAAAAAAAAAAAAADIbAAAAAAAAMxsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvGwAAAAAAAC8bAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					2,
					"left_delete",
					null,
					"AgAAADIbAAAAAAAAMhsAAAAAAAABAAAAZTEbAAAAAAAAMRsAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzGwAAAAAAADMbAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "err"
					},
					"AwAAADEbAAAAAAAAMhsAAAAAAAAAAAAAMhsAAAAAAAAzGwAAAAAAAAAAAAAzGwAAAAAAADQbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxGwAAAAAAADEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"left_delete",
					null,
					"AQAAADQbAAAAAAAANBsAAAAAAAADAAAAcmVz",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0GwAAAAAAADcbAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAACEbAAAAAAAAIxsAAAAAAAAAAAAAzBoAAAAAAADOGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhGwAAAAAAAMwaAAAAAAAAAAAAAAAAAAA"
				],
				[
					126,
					2,
					"left_delete",
					null,
					"AgAAAJQaAAAAAAAAlBoAAAAAAAA3AAAAICByZXR1cm4gZXJyID8gc3RyZXJyKFtzdCwgZXJyXSkgOiBuZXcgZnMuU3RhdHMoc3QpOwp9CpMaAAAAAAAAkxoAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUGgAAAAAAAMsaAAAAAAAAAAAAAAAAAAA"
				],
				[
					137,
					2,
					"right_delete",
					null,
					"AgAAAOoaAAAAAAAA6hoAAAAAAAABAAAACuoaAAAAAAAA6hoAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqGgAAAAAAAOoaAAAAAAAA////////738"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAOoaAAAAAAAA6xoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqGgAAAAAAAOoaAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOwaAAAAAAAA7RoAAAAAAAAAAAAA7RoAAAAAAADvGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsGgAAAAAAAOwaAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					2,
					"right_delete",
					null,
					"AgAAAJYaAAAAAAAAlhoAAAAAAAABAAAAIJYaAAAAAAAAlhoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWGgAAAAAAAJYaAAAAAAAAAAAAAAAAMkA"
				],
				[
					158,
					2,
					"left_delete",
					null,
					"AgAAAE4aAAAAAAAAThoAAAAAAAAlAAAAZXhwb3J0IGZ1bmN0aW9uIHN0YXRTeW5jKHBhdGgsIGNiKSB7Ck0aAAAAAAAATRoAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOGgAAAAAAAHMaAAAAAAAAAAAAAAAA8L8"
				],
				[
					167,
					1,
					"left_delete",
					null,
					"AQAAAG4aAAAAAAAAbhoAAAAAAABXAAAALypsZXQgZmlsZSA9IHN0ZC5vcGVuKHBhdGgsICdyJyk7CiAgbGV0IHJlcyA9IGZpbGUgIT0gbnVsbDsKICBpZihmaWxlKSBmaWxlLmNsb3NlKCk7Ki8K",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuGgAAAAAAAMUaAAAAAAAAAAAAAAAAAAA"
				],
				[
					168,
					2,
					"right_delete",
					null,
					"AgAAAG4aAAAAAAAAbhoAAAAAAAACAAAAICBuGgAAAAAAAG4aAAAAAAAAAgAAACAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuGgAAAAAAAG4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAG4aAAAAAAAAbxoAAAAAAAAAAAAAbxoAAAAAAABwGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuGgAAAAAAAG4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					172,
					6,
					"left_delete",
					null,
					"BgAAAHwaAAAAAAAAfBoAAAAAAAABAAAAIHsaAAAAAAAAexoAAAAAAAABAAAAJnoaAAAAAAAAehoAAAAAAAABAAAAJnkaAAAAAAAAeRoAAAAAAAABAAAAIHgaAAAAAAAAeBoAAAAAAAABAAAAdHcaAAAAAAAAdxoAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9GgAAAAAAAH0aAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "utils.c",
			"settings":
			{
				"buffer_size": 64368,
				"line_ending": "Unix"
			}
		},
		{
			"file": "qjsm",
			"settings":
			{
				"buffer_size": 3501600,
				"encoding": "Hexadecimal",
				"line_ending": "Unix"
			}
		},
		{
			"file": "qjsm.c",
			"settings":
			{
				"buffer_size": 35083,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					37,
					1,
					"cut",
					null,
					"AQAAANl0AAAAAAAA2XQAAAAAAABJAAAAICBKU19TZXRNb2R1bGVMb2FkZXJGdW5jKHJ0LCBqc19tb2R1bGVfbm9ybWFsaXplLCBqc21fbW9kdWxlX2xvYWRlciwgMCk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZdAAAAAAAACJ1AAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"paste",
					null,
					"AQAAANl0AAAAAAAAInUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZdAAAAAAAANl0AAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAIMzAAAAAAAAhDMAAAAAAAAAAAAAhDMAAAAAAACHMwAAAAAAAAAAAACEMwAAAAAAAIQzAAAAAAAAAwAAACAgIIQzAAAAAAAAhjMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDMwAAAAAAAIMzAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"paste",
					null,
					"AQAAAIYzAAAAAAAAtzMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGMwAAAAAAAIYzAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALczAAAAAAAAuDMAAAAAAAAAAAAAuDMAAAAAAAC6MwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3MwAAAAAAALczAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"left_delete",
					null,
					"AQAAAIYzAAAAAAAAhjMAAAAAAAA0AAAAanNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMoanNtX21vZHVsZV9sb2FkZXIpOwogIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGMwAAAAAAALozAAAAAAAAAAAAAAAAMkA"
				],
				[
					98,
					1,
					"paste",
					null,
					"AQAAAIQzAAAAAAAAuzMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEMwAAAAAAAIQzAAAAAAAAAAAAAAAA8L8"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "\n\npür"
					},
					"CwAAAIMzAAAAAAAAhDMAAAAAAAAAAAAAhDMAAAAAAACHMwAAAAAAAAAAAAC/MwAAAAAAAL8zAAAAAAAAAgAAACAghDMAAAAAAACEMwAAAAAAAAMAAAAgICCEMwAAAAAAAIYzAAAAAAAAAAAAAIYzAAAAAAAAhzMAAAAAAAAAAAAAhzMAAAAAAACJMwAAAAAAAAAAAACEMwAAAAAAAIQzAAAAAAAAAgAAACAghzMAAAAAAACIMwAAAAAAAAAAAACIMwAAAAAAAIkzAAAAAAAAAAAAAIkzAAAAAAAAijMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDMwAAAAAAAIMzAAAAAAAAAAAAAAAA8L8"
				],
				[
					195,
					1,
					"left_delete",
					null,
					"AQAAAIkzAAAAAAAAiTMAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKMwAAAAAAAIozAAAAAAAAAAAAAAAA8L8"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAIkzAAAAAAAAijMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJMwAAAAAAAIkzAAAAAAAAAAAAAAAA8L8"
				],
				[
					197,
					1,
					"left_delete",
					null,
					"AQAAAIkzAAAAAAAAiTMAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKMwAAAAAAAIozAAAAAAAAAAAAAAAA8L8"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAIkzAAAAAAAAijMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJMwAAAAAAAIkzAAAAAAAAAAAAAAAA8L8"
				],
				[
					199,
					2,
					"left_delete",
					null,
					"AgAAAIkzAAAAAAAAiTMAAAAAAAABAAAAcogzAAAAAAAAiDMAAAAAAAACAAAAw7w",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKMwAAAAAAAIozAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": "rintf"
					},
					"BQAAAIgzAAAAAAAAiTMAAAAAAAAAAAAAiTMAAAAAAACKMwAAAAAAAAAAAACKMwAAAAAAAIszAAAAAAAAAAAAAIszAAAAAAAAjDMAAAAAAAAAAAAAjDMAAAAAAACNMwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIMwAAAAAAAIgzAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI0zAAAAAAAAjzMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNMwAAAAAAAI0zAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAI4zAAAAAAAAkDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOMwAAAAAAAI4zAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "Set"
					},
					"AwAAAI8zAAAAAAAAkDMAAAAAAAAAAAAAkDMAAAAAAACRMwAAAAAAAAAAAACRMwAAAAAAAJIzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPMwAAAAAAAI8zAAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " module"
					},
					"BwAAAJIzAAAAAAAAkzMAAAAAAAAAAAAAkzMAAAAAAACUMwAAAAAAAAAAAACUMwAAAAAAAJUzAAAAAAAAAAAAAJUzAAAAAAAAljMAAAAAAAAAAAAAljMAAAAAAACXMwAAAAAAAAAAAACXMwAAAAAAAJgzAAAAAAAAAAAAAJgzAAAAAAAAmTMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSMwAAAAAAAJIzAAAAAAAAAAAAAAAA8L8"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " loader"
					},
					"BwAAAJkzAAAAAAAAmjMAAAAAAAAAAAAAmjMAAAAAAACbMwAAAAAAAAAAAACbMwAAAAAAAJwzAAAAAAAAAAAAAJwzAAAAAAAAnTMAAAAAAAAAAAAAnTMAAAAAAACeMwAAAAAAAAAAAACeMwAAAAAAAJ8zAAAAAAAAAAAAAJ8zAAAAAAAAoDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZMwAAAAAAAJkzAAAAAAAAAAAAAAAA8L8"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAKAzAAAAAAAAoTMAAAAAAAAAAAAAoTMAAAAAAACiMwAAAAAAAAAAAACiMwAAAAAAAKMzAAAAAAAAAAAAAKMzAAAAAAAApDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgMwAAAAAAAKAzAAAAAAAAAAAAAAAA8L8"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQzAAAAAAAApTMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkMwAAAAAAAKQzAAAAAAAAAAAAAAAA8L8"
				],
				[
					208,
					4,
					"left_delete",
					null,
					"BAAAAKQzAAAAAAAApDMAAAAAAAABAAAAIKMzAAAAAAAAozMAAAAAAAABAAAAcqIzAAAAAAAAojMAAAAAAAABAAAAb6EzAAAAAAAAoTMAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClMwAAAAAAAKUzAAAAAAAAAAAAAAAA8L8"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "(rt=%p)"
					},
					"BwAAAKEzAAAAAAAAojMAAAAAAAAAAAAAojMAAAAAAACjMwAAAAAAAAAAAACjMwAAAAAAAKQzAAAAAAAAAAAAAKQzAAAAAAAApTMAAAAAAAAAAAAApTMAAAAAAACmMwAAAAAAAAAAAACmMwAAAAAAAKczAAAAAAAAAAAAAKczAAAAAAAAqDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChMwAAAAAAAKEzAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKgzAAAAAAAAqTMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoMwAAAAAAAKgzAAAAAAAAAAAAAAAA8L8"
				],
				[
					211,
					1,
					"left_delete",
					null,
					"AQAAAKgzAAAAAAAAqDMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpMwAAAAAAAKkzAAAAAAAAAAAAAAAA8L8"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAKgzAAAAAAAAqTMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoMwAAAAAAAKgzAAAAAAAAAAAAAAAA8L8"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": " %p\\n"
					},
					"BQAAAKkzAAAAAAAAqjMAAAAAAAAAAAAAqjMAAAAAAACrMwAAAAAAAAAAAACrMwAAAAAAAKwzAAAAAAAAAAAAAKwzAAAAAAAArTMAAAAAAAAAAAAArTMAAAAAAACuMwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpMwAAAAAAAKkzAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAK8zAAAAAAAAsDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvMwAAAAAAAK8zAAAAAAAAAAAAAAAA8L8"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": " rt"
					},
					"AwAAALAzAAAAAAAAsTMAAAAAAAAAAAAAsTMAAAAAAACyMwAAAAAAAAAAAACyMwAAAAAAALMzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwMwAAAAAAALAzAAAAAAAAAAAAAAAA8L8"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALMzAAAAAAAAtDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzMwAAAAAAALMzAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"left_delete",
					null,
					"AQAAALMzAAAAAAAAszMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0MwAAAAAAALQzAAAAAAAAAAAAAAAA8L8"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALMzAAAAAAAAtDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzMwAAAAAAALMzAAAAAAAAAAAAAAAA8L8"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": " jsm_mo"
					},
					"BwAAALQzAAAAAAAAtTMAAAAAAAAAAAAAtTMAAAAAAAC2MwAAAAAAAAAAAAC2MwAAAAAAALczAAAAAAAAAAAAALczAAAAAAAAuDMAAAAAAAAAAAAAuDMAAAAAAAC5MwAAAAAAAAAAAAC5MwAAAAAAALozAAAAAAAAAAAAALozAAAAAAAAuzMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0MwAAAAAAALQzAAAAAAAAAAAAAAAA8L8"
				],
				[
					223,
					1,
					"insert_completion",
					{
						"completion": "jsm_module_loader",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "jsm_module_loader"
					},
					"AgAAALUzAAAAAAAAtTMAAAAAAAAGAAAAanNtX21vtTMAAAAAAADGMwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7MwAAAAAAALszAAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": " ;"
					},
					"AgAAAMczAAAAAAAAyDMAAAAAAAAAAAAAyDMAAAAAAADJMwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHMwAAAAAAAMczAAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					2,
					"left_delete",
					null,
					"AgAAAMgzAAAAAAAAyDMAAAAAAAABAAAAO8czAAAAAAAAxzMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJMwAAAAAAAMkzAAAAAAAAAAAAAAAA8L8"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMczAAAAAAAAyDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHMwAAAAAAAMczAAAAAAAAAAAAAAAA8L8"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKczAAAAAAAAqDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnMwAAAAAAAKczAAAAAAAAAAAAAAAA8L8"
				],
				[
					233,
					1,
					"left_delete",
					null,
					"AQAAAKczAAAAAAAApzMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoMwAAAAAAAKgzAAAAAAAAAAAAAAAA8L8"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKczAAAAAAAAqDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnMwAAAAAAAKczAAAAAAAAAAAAAAAA8L8"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": " thdrea"
					},
					"BwAAAKgzAAAAAAAAqTMAAAAAAAAAAAAAqTMAAAAAAACqMwAAAAAAAAAAAACqMwAAAAAAAKszAAAAAAAAAAAAAKszAAAAAAAArDMAAAAAAAAAAAAArDMAAAAAAACtMwAAAAAAAAAAAACtMwAAAAAAAK4zAAAAAAAAAAAAAK4zAAAAAAAArzMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoMwAAAAAAAKgzAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					4,
					"left_delete",
					null,
					"BAAAAK4zAAAAAAAArjMAAAAAAAABAAAAYa0zAAAAAAAArTMAAAAAAAABAAAAZawzAAAAAAAArDMAAAAAAAABAAAAcqszAAAAAAAAqzMAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvMwAAAAAAAK8zAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "read"
					},
					"BAAAAKszAAAAAAAArDMAAAAAAAAAAAAArDMAAAAAAACtMwAAAAAAAAAAAACtMwAAAAAAAK4zAAAAAAAAAAAAAK4zAAAAAAAArzMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrMwAAAAAAAKszAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK8zAAAAAAAAsDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvMwAAAAAAAK8zAAAAAAAAAAAAAAAA8L8"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAALAzAAAAAAAAsTMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwMwAAAAAAALAzAAAAAAAAAAAAAAAA8L8"
				],
				[
					240,
					1,
					"left_delete",
					null,
					"AQAAALAzAAAAAAAAsDMAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxMwAAAAAAALEzAAAAAAAAAAAAAAAA8L8"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "id=çi"
					},
					"BQAAALAzAAAAAAAAsTMAAAAAAAAAAAAAsTMAAAAAAACyMwAAAAAAAAAAAACyMwAAAAAAALMzAAAAAAAAAAAAALMzAAAAAAAAtDMAAAAAAAAAAAAAtDMAAAAAAAC1MwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwMwAAAAAAALAzAAAAAAAAAAAAAAAA8L8"
				],
				[
					242,
					2,
					"left_delete",
					null,
					"AgAAALQzAAAAAAAAtDMAAAAAAAABAAAAabMzAAAAAAAAszMAAAAAAAACAAAAw6c",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1MwAAAAAAALUzAAAAAAAAAAAAAAAA8L8"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": "%i"
					},
					"AgAAALMzAAAAAAAAtDMAAAAAAAAAAAAAtDMAAAAAAAC1MwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzMwAAAAAAALMzAAAAAAAAAAAAAAAA8L8"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "gettid"
					},
					"BgAAAMIzAAAAAAAAwzMAAAAAAAAAAAAAwzMAAAAAAADEMwAAAAAAAAAAAADEMwAAAAAAAMUzAAAAAAAAAAAAAMUzAAAAAAAAxjMAAAAAAAAAAAAAxjMAAAAAAADHMwAAAAAAAAAAAADHMwAAAAAAAMgzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCMwAAAAAAAMIzAAAAAAAAAAAAAAAA8L8"
				],
				[
					248,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMgzAAAAAAAAyjMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIMwAAAAAAAMgzAAAAAAAAAAAAAAAA8L8"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMozAAAAAAAAyzMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKMwAAAAAAAMozAAAAAAAAAAAAAAAA8L8"
				],
				[
					255,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLMwAAAAAAAMszAAAAAAAAAAAAAAAA8L8"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": "%"
					},
					"AQAAACkeAAAAAAAAKh4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApHgAAAAAAACkeAAAAAAAAAAAAAAAA8L8"
				],
				[
					302,
					1,
					"left_delete",
					null,
					"AQAAACkeAAAAAAAAKR4AAAAAAAABAAAAJQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqHgAAAAAAACoeAAAAAAAAAAAAAAAA8L8"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "[%"
					},
					"AgAAACkeAAAAAAAAKh4AAAAAAAAAAAAAKh4AAAAAAAArHgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApHgAAAAAAACkeAAAAAAAAAAAAAAAA8L8"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": "u]"
					},
					"AgAAACseAAAAAAAALB4AAAAAAAAAAAAALB4AAAAAAAAtHgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArHgAAAAAAACseAAAAAAAAAAAAAAAA8L8"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC0eAAAAAAAALh4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtHgAAAAAAAC0eAAAAAAAAAAAAAAAA8L8"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "gettid"
					},
					"BgAAAFUeAAAAAAAAVh4AAAAAAAAAAAAAVh4AAAAAAABXHgAAAAAAAAAAAABXHgAAAAAAAFgeAAAAAAAAAAAAAFgeAAAAAAAAWR4AAAAAAAAAAAAAWR4AAAAAAABaHgAAAAAAAAAAAABaHgAAAAAAAFseAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVHgAAAAAAAFUeAAAAAAAAAAAAAAAA8L8"
				],
				[
					310,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFseAAAAAAAAXR4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbHgAAAAAAAFseAAAAAAAAAAAAAAAA8L8"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAF0eAAAAAAAAXh4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdHgAAAAAAAF0eAAAAAAAAAAAAAAAA8L8"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": "[%u]"
					},
					"BAAAABwiAAAAAAAAHSIAAAAAAAAAAAAAHSIAAAAAAAAeIgAAAAAAAAAAAAAeIgAAAAAAAB8iAAAAAAAAAAAAAB8iAAAAAAAAICIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcIgAAAAAAABwiAAAAAAAAAAAAAAAA8L8"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAiAAAAAAAAISIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgIgAAAAAAACAiAAAAAAAAAAAAAAAA8L8"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "gettid/()"
					},
					"CQAAAEkiAAAAAAAASiIAAAAAAAAAAAAASiIAAAAAAABLIgAAAAAAAAAAAABLIgAAAAAAAEwiAAAAAAAAAAAAAEwiAAAAAAAATSIAAAAAAAAAAAAATSIAAAAAAABOIgAAAAAAAAAAAABOIgAAAAAAAE8iAAAAAAAAAAAAAE8iAAAAAAAAUCIAAAAAAAAAAAAAUCIAAAAAAABRIgAAAAAAAAAAAABRIgAAAAAAAFIiAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJIgAAAAAAAEkiAAAAAAAAAAAAAAAA8L8"
				],
				[
					322,
					3,
					"left_delete",
					null,
					"AwAAAFEiAAAAAAAAUSIAAAAAAAABAAAAKVAiAAAAAAAAUCIAAAAAAAABAAAAKE8iAAAAAAAATyIAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSIgAAAAAAAFIiAAAAAAAAAAAAAAAA8L8"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": "(),"
					},
					"AwAAAE8iAAAAAAAAUCIAAAAAAAAAAAAAUCIAAAAAAABRIgAAAAAAAAAAAABRIgAAAAAAAFIiAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPIgAAAAAAAE8iAAAAAAAAAAAAAAAA8L8"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": "[%i"
					},
					"AwAAAGEkAAAAAAAAYiQAAAAAAAAAAAAAYiQAAAAAAABjJAAAAAAAAAAAAABjJAAAAAAAAGQkAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhJAAAAAAAAGEkAAAAAAAAAAAAAAAA8L8"
				],
				[
					329,
					1,
					"left_delete",
					null,
					"AQAAAGMkAAAAAAAAYyQAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkJAAAAAAAAGQkAAAAAAAAAAAAAAAA8L8"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": "u]"
					},
					"AgAAAGMkAAAAAAAAZCQAAAAAAAAAAAAAZCQAAAAAAABlJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjJAAAAAAAAGMkAAAAAAAAAAAAAAAA8L8"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGUkAAAAAAAAZiQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlJAAAAAAAAGUkAAAAAAAAAAAAAAAA8L8"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": "gettid"
					},
					"BgAAAI0kAAAAAAAAjiQAAAAAAAAAAAAAjiQAAAAAAACPJAAAAAAAAAAAAACPJAAAAAAAAJAkAAAAAAAAAAAAAJAkAAAAAAAAkSQAAAAAAAAAAAAAkSQAAAAAAACSJAAAAAAAAAAAAACSJAAAAAAAAJMkAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNJAAAAAAAAI0kAAAAAAAAAAAAAAAA8L8"
				],
				[
					342,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJMkAAAAAAAAlSQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTJAAAAAAAAJMkAAAAAAAAAAAAAAAA8L8"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJUkAAAAAAAAliQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVJAAAAAAAAJUkAAAAAAAAAAAAAAAA8L8"
				],
				[
					390,
					1,
					"paste",
					null,
					"AQAAAOIkAAAAAAAA9SQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiJAAAAAAAAOIkAAAAAAAAAAAAAAAA8L8"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": " ||"
					},
					"AwAAAPUkAAAAAAAA9iQAAAAAAAAAAAAA9iQAAAAAAAD3JAAAAAAAAAAAAAD3JAAAAAAAAPgkAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1JAAAAAAAAPUkAAAAAAAAAAAAAAAA8L8"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPgkAAAAAAAA+SQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4JAAAAAAAAPgkAAAAAAAAAAAAAAAA8L8"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": "[%u]"
					},
					"BAAAAF8lAAAAAAAAYCUAAAAAAAAAAAAAYCUAAAAAAABhJQAAAAAAAAAAAABhJQAAAAAAAGIlAAAAAAAAAAAAAGIlAAAAAAAAYyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfJQAAAAAAAF8lAAAAAAAAAAAAAAAA8L8"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGMlAAAAAAAAZCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjJQAAAAAAAGMlAAAAAAAAAAAAAAAA8L8"
				],
				[
					403,
					1,
					"insert",
					{
						"characters": "gettid/()"
					},
					"CQAAAJAlAAAAAAAAkSUAAAAAAAAAAAAAkSUAAAAAAACSJQAAAAAAAAAAAACSJQAAAAAAAJMlAAAAAAAAAAAAAJMlAAAAAAAAlCUAAAAAAAAAAAAAlCUAAAAAAACVJQAAAAAAAAAAAACVJQAAAAAAAJYlAAAAAAAAAAAAAJYlAAAAAAAAlyUAAAAAAAAAAAAAlyUAAAAAAACYJQAAAAAAAAAAAACYJQAAAAAAAJklAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQJQAAAAAAAJAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					404,
					3,
					"left_delete",
					null,
					"AwAAAJglAAAAAAAAmCUAAAAAAAABAAAAKZclAAAAAAAAlyUAAAAAAAABAAAAKJYlAAAAAAAAliUAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZJQAAAAAAAJklAAAAAAAAAAAAAAAA8L8"
				],
				[
					405,
					1,
					"insert",
					{
						"characters": "(),"
					},
					"AwAAAJYlAAAAAAAAlyUAAAAAAAAAAAAAlyUAAAAAAACYJQAAAAAAAAAAAACYJQAAAAAAAJklAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWJQAAAAAAAJYlAAAAAAAAAAAAAAAA8L8"
				],
				[
					406,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJklAAAAAAAAmiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZJQAAAAAAAJklAAAAAAAAAAAAAAAA8L8"
				],
				[
					426,
					1,
					"insert",
					{
						"characters": "[%u]"
					},
					"BAAAAJoZAAAAAAAAmxkAAAAAAAAAAAAAmxkAAAAAAACcGQAAAAAAAAAAAACcGQAAAAAAAJ0ZAAAAAAAAAAAAAJ0ZAAAAAAAAnhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaGQAAAAAAAJoZAAAAAAAAAAAAAAAA8L8"
				],
				[
					427,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ4ZAAAAAAAAnxkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeGQAAAAAAAJ4ZAAAAAAAAAAAAAAAA8L8"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": "gettid"
					},
					"BgAAAMoZAAAAAAAAyxkAAAAAAAAAAAAAyxkAAAAAAADMGQAAAAAAAAAAAADMGQAAAAAAAM0ZAAAAAAAAAAAAAM0ZAAAAAAAAzhkAAAAAAAAAAAAAzhkAAAAAAADPGQAAAAAAAAAAAADPGQAAAAAAANAZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKGQAAAAAAAMoZAAAAAAAAAAAAAAAA8L8"
				],
				[
					433,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANAZAAAAAAAA0hkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQGQAAAAAAANAZAAAAAAAAAAAAAAAA8L8"
				],
				[
					435,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANIZAAAAAAAA0xkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSGQAAAAAAANIZAAAAAAAAAAAAAAAA8L8"
				],
				[
					443,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfJAAAAAAAAG0kAAAAAAAAAAAAAAAA8L8"
				],
				[
					454,
					1,
					"",
					null,
					"BgAAACU0AAAAAAAAMzQAAAAAAAAIAAAAZ2V0dGlkKCmiJQAAAAAAALAlAAAAAAAACAAAAGdldHRpZCgpnyQAAAAAAACtJAAAAAAAAAgAAABnZXR0aWQoKVkiAAAAAAAAZyIAAAAAAAAIAAAAZ2V0dGlkKCllHgAAAAAAAHMeAAAAAAAACAAAAGdldHRpZCgpyxkAAAAAAADZGQAAAAAAAAgAAABnZXR0aWQoKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfJAAAAAAAAKckAAAAAAAAAAAAAAAA8L8"
				],
				[
					459,
					1,
					"",
					null,
					"BQAAAIklAAAAAAAAjSUAAAAAAAAEAAAAWyV1XYQkAAAAAAAAiCQAAAAAAAAEAAAAWyV1XTgiAAAAAAAAPCIAAAAAAAAEAAAAWyV1XT4eAAAAAAAAQh4AAAAAAAAEAAAAWyV1XZoZAAAAAAAAnhkAAAAAAAAEAAAAWyV1XQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJJQAAAAAAAI0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					471,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AwAAACAlAAAAAAAAISUAAAAAAAAAAAAAISUAAAAAAAAhJQAAAAAAAAIAAAB8fCElAAAAAAAAIiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgJQAAAAAAACIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAc0AAAAAAAACDQAAAAAAAAAAAAACDQAAAAAAAAJNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHNAAAAAAAAAc0AAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 18668,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAKE+AAAAAAAAoj4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChPgAAAAAAAKE+AAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAKE+AAAAAAAAoT4AAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiPgAAAAAAAKI+AAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"cut",
					null,
					"AQAAALkAAAAAAAAAuQAAAAAAAAAoAAAAb3B0aW9uKERFQlVHX09VVFBVVCAiRGVidWcgb3V0cHV0IiBPRkYpCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AAAAAAAAAOEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					2,
					"paste",
					null,
					"AgAAALkAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAAAJAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AAAAAAAAALkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "DO_TESTS"
					},
					"CQAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADpAAAAAAAAAAwAAABERUJVR19PVVRQVVTpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA6wAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAO0AAAAAAAAAAAAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADvAAAAAAAAAAAAAADvAAAAAAAAAPAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoAAAAAAAAAPQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "Perform"
					},
					"CAAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAADzAAAAAAAAAAwAAABEZWJ1ZyBvdXRwdXTzAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA9QAAAAAAAAD2AAAAAAAAAAAAAAD2AAAAAAAAAPcAAAAAAAAAAAAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAAAAAAAAAP4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " tests"
					},
					"BgAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA+gAAAAAAAAD7AAAAAAAAAAAAAAD7AAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAD+AAAAAAAAAAAAAAD+AAAAAAAAAP8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5AAAAAAAAAPkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					2,
					"right_delete",
					null,
					"AgAAAAIBAAAAAAAAAgEAAAAAAAABAAAARgIBAAAAAAAAAgEAAAAAAAABAAAARg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACAQAAAAAAAAIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "N"
					},
					"AQAAAAIBAAAAAAAAAwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACAQAAAAAAAAIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"cut",
					null,
					"AQAAAOEAAAAAAAAA4QAAAAAAAAAkAAAAb3B0aW9uKERPX1RFU1RTICJQZXJmb3JtIHRlc3RzIiBPTikK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAQAAAAAAAOEAAAAAAAAAAAAAAAAAAAA"
				],
				[
					86,
					1,
					"paste",
					null,
					"AQAAAOEAAAAAAAAABQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhAAAAAAAAAOEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAJAzAAAAAAAAkjMAAAAAAAAAAAAATjIAAAAAAABRMgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOMgAAAAAAAJAzAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "tests/test_stack.js",
			"settings":
			{
				"buffer_size": 1176,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/test_xml.js",
			"settings":
			{
				"buffer_size": 3108,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs-inspect.c",
			"settings":
			{
				"buffer_size": 39624,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					26,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABSVAAAAAAAAFZUAAAAAAAAAAAAAFZUAAAAAAAAWlQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUlQAAAAAAABSVAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "tests/test_misc.js",
			"settings":
			{
				"buffer_size": 6172,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 29191,
				"line_ending": "Unix"
			}
		},
		{
			"file": "cmake/functions.cmake",
			"settings":
			{
				"buffer_size": 2987,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA/CgAAZnVuY3Rpb24oRFVNUCkKICBmb3JlYWNoKFZBUiAke0FSR059KQogICAgaWYoIiR7U0VQQVJBVE9SfSIgU1RSRVFVQUwgIiIpCiAgICAgIHNldChTRVBBUkFUT1IgIlxuICAgICIpCiAgICBlbmRpZigiJHtTRVBBUkFUT1J9IiBTVFJFUVVBTCAiIikKICAgIHNldCgiJHtWQVJ9IiAkeyR7VkFSfX0pCiAgICBzdHJpbmcoUkVHRVggUkVQTEFDRSAiWyBcdFxuXSsiICJcbiIgQSAiJHske1ZBUn19IikKICAgIHN0cmluZyhSRUdFWCBSRVBMQUNFICJcbiIgIjsiIEEgIiR7QX0iKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIjsiICIke1NFUEFSQVRPUn0iIEEgIiR7QX0iKQogICAgbWVzc2FnZSgiICAke1ZBUn0gPSAke0F9IikKICBlbmRmb3JlYWNoKFZBUiAke0FSR059KQplbmRmdW5jdGlvbihEVU1QKQoKZnVuY3Rpb24oQ0FOT05JQ0FMSVpFIE9VVFBVVF9WQVIgU1RSKQogIHN0cmluZyhSRUdFWCBSRVBMQUNFICJeLVciICJXQVJOXyIgVE1QX1NUUiAiJHtTVFJ9IikKCiAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi0iICJfIiBUTVBfU1RSICIke1RNUF9TVFJ9IikKICBzdHJpbmcoVE9VUFBFUiAiJHtUTVBfU1RSfSIgVE1QX1NUUikKCiAgc2V0KCIke09VVFBVVF9WQVJ9IiAiJHtUTVBfU1RSfSIgUEFSRU5UX1NDT1BFKQplbmRmdW5jdGlvbihDQU5PTklDQUxJWkUgT1VUUFVUX1ZBUiBTVFIpCgpmdW5jdGlvbihCQVNFTkFNRSBPVVRQVVRfVkFSIFNUUikKICBzdHJpbmcoUkVHRVggUkVQTEFDRSAiLiovIiAiIiBUTVBfU1RSICIke1NUUn0iKQogIGlmKEFSR04pCiAgICBzdHJpbmcoUkVHRVggUkVQTEFDRSAiXFwke0FSR059XCQiICIiIFRNUF9TVFIgIiR7VE1QX1NUUn0iKQogIGVuZGlmKEFSR04pCgogIHNldCgiJHtPVVRQVVRfVkFSfSIgIiR7VE1QX1NUUn0iIFBBUkVOVF9TQ09QRSkKZW5kZnVuY3Rpb24oQkFTRU5BTUUgT1VUUFVUX1ZBUiBGSUxFKQoKZnVuY3Rpb24oQUREUFJFRklYIE9VVFBVVF9WQVIgUFJFRklYKQogIHNldChPVVRQVVQgIiIpCiAgZm9yZWFjaChBUkcgJHtBUkdOfSkKICAgIGxpc3QoQVBQRU5EIE9VVFBVVCAiJHtQUkVGSVh9JHtBUkd9IikKICBlbmRmb3JlYWNoKEFSRyAke0FSR059KQogIHNldCgiJHtPVVRQVVRfVkFSfSIgIiR7T1VUUFVUfSIgUEFSRU5UX1NDT1BFKQplbmRmdW5jdGlvbihBRERQUkVGSVggT1VUUFVUX1ZBUiBQUkVGSVgpCgpmdW5jdGlvbihBRERTVUZGSVggT1VUUFVUX1ZBUiBTVUZGSVgpCiAgc2V0KE9VVFBVVCAiIikKICBmb3JlYWNoKEFSRyAke0FSR059KQogICAgbGlzdChBUFBFTkQgT1VUUFVUICIke0FSR30ke1NVRkZJWH0iKQogIGVuZGZvcmVhY2goQVJHICR7QVJHTn0pCiAgc2V0KCIke09VVFBVVF9WQVJ9IiAiJHtPVVRQVVR9IiBQQVJFTlRfU0NPUEUpCmVuZGZ1bmN0aW9uKEFERFNVRkZJWCBPVVRQVVRfVkFSIFNVRkZJWCkKCmZ1bmN0aW9uKFJFTEFUSVZFX1BBVEggT1VUX1ZBUiBSRUxBVElWRV9UTykKICBzZXQoTElTVCAiIikKCiAgZm9yZWFjaChBUkcgJHtBUkdOfSkKICAgIGZpbGUoUkVMQVRJVkVfUEFUSCBBUkcgIiR7UkVMQVRJVkVfVE99IiAiJHtBUkd9IikKICAgIGxpc3QoQVBQRU5EIExJU1QgIiR7QVJHfSIpCiAgZW5kZm9yZWFjaChBUkcgJHtBUkdOfSkKCiAgc2V0KCIke09VVF9WQVJ9IiAiJHtMSVNUfSIgUEFSRU5UX1NDT1BFKQplbmRmdW5jdGlvbihSRUxBVElWRV9QQVRIIFJFTEFUSVZFX1RPIE9VVF9WQVIpCgptYWNybyhBUFBFTkRfUEFSRU5UIFZBUikKICBzZXQoTElTVCAiJHske1ZBUn19IikKICBsaXN0KEFQUEVORCBMSVNUICR7QVJHTn0pCiAgc2V0KCIke1ZBUn0iICIke0xJU1R9IiBQQVJFTlRfU0NPUEUpCmVuZG1hY3JvKEFQUEVORF9QQVJFTlQgVkFSKQoKZnVuY3Rpb24oQ09OVEFJTlMgTElTVCBWQUxVRSBPVVRQVVQpCiAgbGlzdChGSU5EICIke0xJU1R9IiAiJHtWQUxVRX0iIElOREVYKQogIGlmKCR7SU5ERVh9IEdSRUFURVIgLTEpCiAgICBzZXQoUkVTVUxUIFRSVUUpCiAgZWxzZSgke0lOREVYfSBHUkVBVEVSIC0xKQogICAgc2V0KFJFU1VMVCBGQUxTRSkKICBlbmRpZigke0lOREVYfSBHUkVBVEVSIC0xKQogIGlmKE5PVCBSRVNVTFQpCiAgICBmb3JlYWNoKElURU0gJHske0xJU1R9fSkKICAgICAgaWYoIiR7SVRFTX0iIFNUUkVRVUFMICIke1ZBTFVFfSIpCiAgICAgICAgc2V0KFJFU1VMVCBUUlVFKQogICAgICBlbmRpZigiJHtJVEVNfSIgU1RSRVFVQUwgIiR7VkFMVUV9IikKICAgIGVuZGZvcmVhY2goSVRFTSAkeyR7TElTVH19KQogIGVuZGlmKE5PVCBSRVNVTFQpCiAgc2V0KCIke09VVFBVVH0iICIke1JFU1VMVH0iIFBBUkVOVF9TQ09QRSkKZW5kZnVuY3Rpb24oQ09OVEFJTlMgTElTVCBWQUxVRSBPVVRQVVQpCgpmdW5jdGlvbihBRERfVU5JUVVFIExJU1QpCiAgc2V0KFJFU1VMVCAiJHske0xJU1R9fSIpCiAgZm9yZWFjaChJVEVNICR7QVJHTn0pCiAgICBjb250YWlucyhSRVNVTFQgIiR7SVRFTX0iIEZPVU5EKQogICAgaWYoTk9UIEZPVU5EKQogICAgICBsaXN0KEFQUEVORCBSRVNVTFQgIiR7SVRFTX0iKQogICAgZW5kaWYoTk9UIEZPVU5EKQogIGVuZGZvcmVhY2goSVRFTSAke0FSR059KQogIHNldCgiJHtMSVNUfSIgIiR7UkVTVUxUfSIgUEFSRU5UX1NDT1BFKQplbmRmdW5jdGlvbihBRERfVU5JUVVFIExJU1QpCgAAAAAAAAAAqwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.c",
			"settings":
			{
				"buffer_size": 1522614,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/console.js",
			"settings":
			{
				"buffer_size": 3979,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "property-enumeration.c",
			"settings":
			{
				"buffer_size": 6751,
				"line_ending": "Unix"
			}
		},
		{
			"file": "char-utils.h",
			"settings":
			{
				"buffer_size": 8854,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					53,
					1,
					"insert",
					{
						"characters": "\nwhile"
					},
					"BwAAAOkSAAAAAAAA6hIAAAAAAAAAAAAA6hIAAAAAAADsEgAAAAAAAAAAAADsEgAAAAAAAO0SAAAAAAAAAAAAAO0SAAAAAAAA7hIAAAAAAAAAAAAA7hIAAAAAAADvEgAAAAAAAAAAAADvEgAAAAAAAPASAAAAAAAAAAAAAPASAAAAAAAA8RIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpEgAAAAAAAOkSAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPESAAAAAAAA8xIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxEgAAAAAAAPESAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"AwAAAPISAAAAAAAA8xIAAAAAAAAAAAAA8xIAAAAAAAD0EgAAAAAAAAAAAAD0EgAAAAAAAPUSAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyEgAAAAAAAPISAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPUSAAAAAAAA9hIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1EgAAAAAAAPUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAPYSAAAAAAAA9xIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2EgAAAAAAAPYSAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " end"
					},
					"BAAAAPcSAAAAAAAA+BIAAAAAAAAAAAAA+BIAAAAAAAD5EgAAAAAAAAAAAAD5EgAAAAAAAPoSAAAAAAAAAAAAAPoSAAAAAAAA+xIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3EgAAAAAAAPcSAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPwSAAAAAAAA/RIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8EgAAAAAAAPwSAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAP0SAAAAAAAA/xIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9EgAAAAAAAP0SAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"right_delete",
					null,
					"AQAAAP4SAAAAAAAA/hIAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+EgAAAAAAAP4SAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "\npos"
					},
					"BQAAACoTAAAAAAAAKxMAAAAAAAAAAAAAKxMAAAAAAAAtEwAAAAAAAAAAAAAtEwAAAAAAAC4TAAAAAAAAAAAAAC4TAAAAAAAALxMAAAAAAAAAAAAALxMAAAAAAAAwEwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqEwAAAAAAACoTAAAAAAAA////////738"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADATAAAAAAAAMRMAAAAAAAAAAAAAMRMAAAAAAAAyEwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwEwAAAAAAADATAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " next;"
					},
					"BgAAADITAAAAAAAAMxMAAAAAAAAAAAAAMxMAAAAAAAA0EwAAAAAAAAAAAAA0EwAAAAAAADUTAAAAAAAAAAAAADUTAAAAAAAANhMAAAAAAAAAAAAANhMAAAAAAAA3EwAAAAAAAAAAAAA3EwAAAAAAADgTAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyEwAAAAAAADITAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAADgTAAAAAAAAORMAAAAAAAAAAAAAORMAAAAAAAA7EwAAAAAAAAAAAAA7EwAAAAAAADwTAAAAAAAAAAAAADkTAAAAAAAAORMAAAAAAAACAAAAICA5EwAAAAAAADkTAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4EwAAAAAAADgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAEsTAAAAAAAATBMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLEwAAAAAAAEsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"left_delete",
					null,
					"AQAAAEsTAAAAAAAASxMAAAAAAAABAAAAKA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMEwAAAAAAAEwTAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "\nsize_t"
					},
					"CAAAALoSAAAAAAAAuxIAAAAAAAAAAAAAuxIAAAAAAAC9EgAAAAAAAAAAAAC9EgAAAAAAAL4SAAAAAAAAAAAAAL4SAAAAAAAAvxIAAAAAAAAAAAAAvxIAAAAAAADAEgAAAAAAAAAAAADAEgAAAAAAAMESAAAAAAAAAAAAAMESAAAAAAAAwhIAAAAAAAAAAAAAwhIAAAAAAADDEgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6EgAAAAAAALoSAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " i=0;"
					},
					"BQAAAMMSAAAAAAAAxBIAAAAAAAAAAAAAxBIAAAAAAADFEgAAAAAAAAAAAADFEgAAAAAAAMYSAAAAAAAAAAAAAMYSAAAAAAAAxxIAAAAAAAAAAAAAxxIAAAAAAADIEgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDEgAAAAAAAMMSAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "\ni++;"
					},
					"BgAAAEYTAAAAAAAARxMAAAAAAAAAAAAARxMAAAAAAABJEwAAAAAAAAAAAABJEwAAAAAAAEoTAAAAAAAAAAAAAEoTAAAAAAAASxMAAAAAAAAAAAAASxMAAAAAAABMEwAAAAAAAAAAAABMEwAAAAAAAE0TAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGEwAAAAAAAEYTAAAAAAAAAAAAAABAYEA"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAE0TAAAAAAAAThMAAAAAAAAAAAAAThMAAAAAAABQEwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNEwAAAAAAAE0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAFATAAAAAAAAURMAAAAAAAAAAAAAURMAAAAAAABSEwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQEwAAAAAAAFATAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"left_delete",
					null,
					"AQAAAFMTAAAAAAAAUxMAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUEwAAAAAAAFQTAAAAAAAAAAAAAAAAREA"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AgAAAF0TAAAAAAAAXhMAAAAAAAAAAAAAXhMAAAAAAABeEwAAAAAAAAoAAABuZXh0IC0gcG9z",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdEwAAAAAAAGcTAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"left_delete",
					null,
					"AQAAAFITAAAAAAAAUhMAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTEwAAAAAAAFMTAAAAAAAAAAAAAAAAWUA"
				],
				[
					105,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSEwAAAAAAAFITAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/bnflexer.js",
			"settings":
			{
				"buffer_size": 6621,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": ",JS"
					},
					"AwAAALMHAAAAAAAAtAcAAAAAAAAAAAAAtAcAAAAAAAC1BwAAAAAAAAAAAAC1BwAAAAAAALYHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzBwAAAAAAALMHAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAANgHAAAAAAAA2AcAAAAAAAA7AAAAdGhpcy5hZGRSdWxlKCdjZW5kJywgLzxKUz4lfS8sICgpID0+IHRoaXMucG9wU3RhdGUoKSk7CiAgICA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYBwAAAAAAABMIAAAAAAAAAAAAAAAAREA"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMgPAAAAAAAAyQ8AAAAAAAAAAAAAyQ8AAAAAAADKDwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIDwAAAAAAAMgPAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "d_"
					},
					"AgAAABwJAAAAAAAAHQkAAAAAAAAAAAAAHQkAAAAAAAAeCQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcCQAAAAAAABwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					132,
					1,
					"cut",
					null,
					"AQAAABwJAAAAAAAAHAkAAAAAAAACAAAAZF8",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeCQAAAAAAABwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"paste",
					null,
					"AQAAABwJAAAAAAAAHgkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcCQAAAAAAABwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"paste",
					null,
					"AQAAAFgJAAAAAAAAWgkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYCQAAAAAAAFgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"paste",
					null,
					"AQAAANEJAAAAAAAA0wkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRCQAAAAAAANEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"paste",
					null,
					"AQAAABkKAAAAAAAAGwoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZCgAAAAAAABkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					145,
					1,
					"paste",
					null,
					"AQAAAFoKAAAAAAAAXAoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaCgAAAAAAAFoKAAAAAAAAAAAAAAAA8L8"
				],
				[
					148,
					1,
					"paste",
					null,
					"AQAAAI0KAAAAAAAAjwoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNCgAAAAAAAI0KAAAAAAAAAAAAAAAA8L8"
				],
				[
					151,
					1,
					"paste",
					null,
					"AQAAAMIKAAAAAAAAxAoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCCgAAAAAAAMIKAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "'c_'+"
					},
					"BQAAAKcVAAAAAAAAqBUAAAAAAAAAAAAAqBUAAAAAAACpFQAAAAAAAAAAAACpFQAAAAAAAKoVAAAAAAAAAAAAAKoVAAAAAAAAqxUAAAAAAAAAAAAAqxUAAAAAAACsFQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnFQAAAAAAAKcVAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "<INITIAL,"
					},
					"CQAAAEYTAAAAAAAARxMAAAAAAAAAAAAARxMAAAAAAABIEwAAAAAAAAAAAABIEwAAAAAAAEkTAAAAAAAAAAAAAEkTAAAAAAAAShMAAAAAAAAAAAAAShMAAAAAAABLEwAAAAAAAAAAAABLEwAAAAAAAEwTAAAAAAAAAAAAAEwTAAAAAAAATRMAAAAAAAAAAAAATRMAAAAAAABOEwAAAAAAAAAAAABOEwAAAAAAAE8TAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGEwAAAAAAAEYTAAAAAAAAAAAAAAAA8L8"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "C>"
					},
					"AgAAAE8TAAAAAAAAUBMAAAAAAAAAAAAAUBMAAAAAAABREwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPEwAAAAAAAE8TAAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "c_"
					},
					"AgAAAFYWAAAAAAAAVxYAAAAAAAAAAAAAVxYAAAAAAABYFgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWFgAAAAAAAFYWAAAAAAAAAAAAAAAA8L8"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "c_"
					},
					"AgAAAAEWAAAAAAAAAhYAAAAAAAAAAAAAAhYAAAAAAAADFgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABFgAAAAAAAAEWAAAAAAAAAAAAAAAA8L8"
				],
				[
					239,
					2,
					"left_delete",
					null,
					"AgAAAEcTAAAAAAAARxMAAAAAAAAKAAAASU5JVElBTCxDPkYTAAAAAAAARhMAAAAAAAABAAAAPA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHEwAAAAAAAFETAAAAAAAAAAAAAAAA8L8"
				],
				[
					278,
					1,
					"cut",
					null,
					"AQAAAFUFAAAAAAAAVQUAAAAAAAAsAAAAICAgIHRoaXMuZGVmaW5lKCd3b3JkJywgL1tBLVphLXpfXVstXHddKi8pOwo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVBQAAAAAAAIEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					279,
					2,
					"paste",
					null,
					"AgAAAFUFAAAAAAAAgQUAAAAAAAAAAAAAgQUAAAAAAACtBQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVBQAAAAAAAFUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "def"
					},
					"BAAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACTBQAAAAAAAAQAAAB3b3JkkwUAAAAAAACUBQAAAAAAAAAAAACUBQAAAAAAAJUFAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSBQAAAAAAAJYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					285,
					3,
					"left_delete",
					null,
					"AwAAAJQFAAAAAAAAlAUAAAAAAAABAAAAZpMFAAAAAAAAkwUAAAAAAAABAAAAZZIFAAAAAAAAkgUAAAAAAAABAAAAZA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVBQAAAAAAAJUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "keyword"
					},
					"BwAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACUBQAAAAAAAAAAAACUBQAAAAAAAJUFAAAAAAAAAAAAAJUFAAAAAAAAlgUAAAAAAAAAAAAAlgUAAAAAAACXBQAAAAAAAAAAAACXBQAAAAAAAJgFAAAAAAAAAAAAAJgFAAAAAAAAmQUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSBQAAAAAAAJIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					289,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAAJ0FAAAAAAAAnQUAAAAAAAAPAAAAW0EtWmEtel9dWy1cd10qnQUAAAAAAACuBQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdBQAAAAAAAKwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "grammar"
					},
					"CAAAAJ4FAAAAAAAAnwUAAAAAAAAAAAAAnwUAAAAAAACfBQAAAAAAAA8AAABbQS1aYS16X11bLVx3XSqfBQAAAAAAAKAFAAAAAAAAAAAAAKAFAAAAAAAAoQUAAAAAAAAAAAAAoQUAAAAAAACiBQAAAAAAAAAAAACiBQAAAAAAAKMFAAAAAAAAAAAAAKMFAAAAAAAApAUAAAAAAAAAAAAApAUAAAAAAAClBQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeBQAAAAAAAK0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKkFAAAAAAAAqgUAAAAAAAAAAAAAqgUAAAAAAACuBQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpBQAAAAAAAKkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": "addRule"
					},
					"CQAAAIoFAAAAAAAAiwUAAAAAAAAAAAAAiwUAAAAAAACLBQAAAAAAAAYAAABkZWZpbmWlBQAAAAAAAKUFAAAAAAAABAAAACAgICCLBQAAAAAAAIwFAAAAAAAAAAAAAIwFAAAAAAAAjQUAAAAAAAAAAAAAjQUAAAAAAACOBQAAAAAAAAAAAACOBQAAAAAAAI8FAAAAAAAAAAAAAI8FAAAAAAAAkAUAAAAAAAAAAAAAkAUAAAAAAACRBQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKBQAAAAAAAJAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIEFAAAAAAAAggUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBBQAAAAAAAIEFAAAAAAAAAAAAAAAAAAA"
				],
				[
					323,
					1,
					"left_delete",
					null,
					"AQAAAKsFAAAAAAAAqwUAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsBQAAAAAAAKwFAAAAAAAAAAAAAAAAAAA"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": "'js_'0"
					},
					"BgAAAKkYAAAAAAAAqhgAAAAAAAAAAAAAqhgAAAAAAACrGAAAAAAAAAAAAACrGAAAAAAAAKwYAAAAAAAAAAAAAKwYAAAAAAAArRgAAAAAAAAAAAAArRgAAAAAAACuGAAAAAAAAAAAAACuGAAAAAAAAK8YAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpGAAAAAAAAKkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					353,
					1,
					"left_delete",
					null,
					"AQAAAK4YAAAAAAAArhgAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvGAAAAAAAAK8YAAAAAAAAAAAAAAAA8L8"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAK4YAAAAAAAArxgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuGAAAAAAAAK4YAAAAAAAAAAAAAAAA8L8"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAEQAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACEAAAAAAAAAIAAAAvLw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADEAAAAAAAAAEQAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/clexer.js",
			"settings":
			{
				"buffer_size": 2633,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lexer.h",
			"settings":
			{
				"buffer_size": 2880,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAGMCAAAAAAAAZQIAAAAAAAAAAAAAXAIAAAAAAABeAgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcAgAAAAAAAGMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAA/CwAAI2lmbmRlZiBMRVhFUl9ICiNkZWZpbmUgTEVYRVJfSAoKI2luY2x1ZGUgImxvY2F0aW9uLmgiCiNpbmNsdWRlICJ2ZWN0b3IuaCIKI2luY2x1ZGUgImJ1ZmZlci11dGlscy5oIgojaW5jbHVkZSA8c3RyaW5nLmg+CgovKioKICogXGRlZmdyb3VwIGxleGVyIExleGljYWwgc2Nhbm5lciwgcmVnZXggYmFzZWQKICogQHsKICovCnR5cGVkZWYgc3RydWN0IHsKICBjaGFyKiBuYW1lOwogIGNoYXIqIGV4cHI7CiAgdWludDY0X3QgbWFzazsKICB1aW50OF90KiBieXRlY29kZTsKICB2b2lkKiBvcGFxdWU7CiAgY2hhciogZXhwYW5zaW9uOwp9IExleGVyUnVsZTsKCnN0YXRpYyBjb25zdCB1aW50NjRfdCBNQVNLX0FMTCA9IH4odWludDY0X3QpMDsKCmVudW0gbGV4ZXJfbW9kZSB7CiAgTEVYRVJfRklSU1QgPSAwLAogIExFWEVSX0xBU1QgPSAxLAogIExFWEVSX0xPTkdFU1QgPSAyLAp9OwoKZW51bSB7CiAgTEVYRVJfRU9GID0gLTEsCiAgTEVYRVJfRVJST1JfTk9NQVRDSCA9IC0yLAogIExFWEVSX0VSUk9SX0NPTVBJTEUgPSAtMywKICBMRVhFUl9FUlJPUl9FWEVDID0gLTQsCn07Cgp0eXBlZGVmIHN0cnVjdCB7CiAgZW51bSBsZXhlcl9tb2RlIG1vZGU7CiAgc2l6ZV90IC8qc3RhcnQsICovYnl0ZV9sZW5ndGg7CiAgaW50MzJfdCB0b2tlbl9pZCwgc3RhdGU7CiAgTG9jYXRpb24gbG9jOwogIElucHV0QnVmZmVyIGlucHV0OwogIFZlY3RvciBkZWZpbmVzOwogIFZlY3RvciBydWxlczsKICBWZWN0b3Igc3RhdGVzOwogIFZlY3RvciBzdGF0ZV9zdGFjazsKICB1aW50NjRfdCBzZXE7Cn0gTGV4ZXI7CgppbnQgbGV4ZXJfc3RhdGVfZmluZGIoTGV4ZXIqLCBjb25zdCBjaGFyKiwgc2l6ZV90IHNsZW4pOwppbnQgbGV4ZXJfc3RhdGVfbmV3KExleGVyKiwgY29uc3QgY2hhciosIHNpemVfdCBsZW4pOwppbnQgbGV4ZXJfc3RhdGVfcHVzaChMZXhlciosIGNvbnN0IGNoYXIqKTsKaW50IGxleGVyX3N0YXRlX3BvcChMZXhlciopOwppbnQgbGV4ZXJfc3RhdGVfdG9wKExleGVyKiwgaW50KTsKY2hhciogbGV4ZXJfc3RhdGVzX3NraXAoY2hhciopOwp2b2lkIGxleGVyX3N0YXRlc19kdW1wKExleGVyKiwgdWludDY0X3QsIER5bkJ1ZiogZGJ1Zik7CmNoYXIqIGxleGVyX3J1bGVfcmVnZXgoTGV4ZXJSdWxlKik7CkJPT0wgbGV4ZXJfcnVsZV9leHBhbmQoTGV4ZXIqLCBjaGFyKiwgRHluQnVmKiBkYik7CmludCBsZXhlcl9ydWxlX2FkZChMZXhlciosIGNoYXIqLCBjaGFyKiBleHByKTsKTGV4ZXJSdWxlKiBsZXhlcl9ydWxlX2ZpbmQoTGV4ZXIqLCBjb25zdCBjaGFyKik7CnZvaWQgbGV4ZXJfcnVsZV9mcmVlKExleGVyUnVsZSosIEpTQ29udGV4dCopOwp2b2lkIGxleGVyX3J1bGVfZnJlZV9ydChMZXhlclJ1bGUqLCBKU1J1bnRpbWUqKTsKdm9pZCBsZXhlcl9ydWxlX2R1bXAoTGV4ZXIqLCBMZXhlclJ1bGUqLCBEeW5CdWYqIGRidWYpOwp2b2lkIGxleGVyX2luaXQoTGV4ZXIqLCBlbnVtIGxleGVyX21vZGUsIEpTQ29udGV4dCogY3R4KTsKdm9pZCBsZXhlcl9zZXRfaW5wdXQoTGV4ZXIqLCBJbnB1dEJ1ZmZlciwgY2hhciogZmlsZW5hbWUpOwp2b2lkIGxleGVyX2RlZmluZShMZXhlciosIGNoYXIqLCBjaGFyKiBleHByKTsKTGV4ZXJSdWxlKiBsZXhlcl9maW5kX2RlZmluaXRpb24oTGV4ZXIqLCBjb25zdCBjaGFyKiwgc2l6ZV90IG5hbWVsZW4pOwpCT09MIGxleGVyX2NvbXBpbGVfcnVsZXMoTGV4ZXIqLCBKU0NvbnRleHQqKTsKaW50IGxleGVyX3BlZWsoTGV4ZXIqLCB1aW50NjRfdCwgSlNDb250ZXh0KiBjdHgpOwpzaXplX3QgbGV4ZXJfc2tpcChMZXhlciopOwpzaXplX3QgbGV4ZXJfY2hhcmxlbihMZXhlciopOwpjaGFyKiBsZXhlcl9sZXhlbWUoTGV4ZXIqLCBzaXplX3QqKTsKaW50IGxleGVyX25leHQoTGV4ZXIqLCB1aW50NjRfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGxleGVyX3NldF9sb2NhdGlvbihMZXhlciosIGNvbnN0IExvY2F0aW9uKiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGxleGVyX2ZyZWUoTGV4ZXIqLCBKU0NvbnRleHQqKTsKdm9pZCBsZXhlcl9mcmVlX3J0KExleGVyKiwgSlNSdW50aW1lKik7CnZvaWQgbGV4ZXJfZHVtcChMZXhlciosIER5bkJ1ZiopOwoKc3RhdGljIGlubGluZSBMZXhlclJ1bGUqCmxleGVyX3J1bGVfYXQoTGV4ZXIqIGxleCwgaW50IGlkKSB7CiAgcmV0dXJuIHZlY3Rvcl9hdCgmbGV4LT5ydWxlcywgc2l6ZW9mKExleGVyUnVsZSksIGlkKTsKfQoKc3RhdGljIGlubGluZSBpbnQKbGV4ZXJfc3RhdGVfZmluZChMZXhlciogbGV4LCBjb25zdCBjaGFyKiBzdGF0ZSkgewogIHJldHVybiBsZXhlcl9zdGF0ZV9maW5kYihsZXgsIHN0YXRlLCBzdHJsZW4oc3RhdGUpKTsKfQoKc3RhdGljIGlubGluZSBzaXplX3QKbGV4ZXJfc3RhdGVfZGVwdGgoTGV4ZXIqIGxleCkgewogIHJldHVybiB2ZWN0b3Jfc2l6ZSgmbGV4LT5zdGF0ZV9zdGFjaywgc2l6ZW9mKGludDMyX3QpKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsZXhlcl9zdGF0ZV9uYW1lKExleGVyKiBsZXgsIGludCBzdGF0ZSkgewogIGNoYXIqKiBuYW1lX3A7CgogIG5hbWVfcCA9IHZlY3Rvcl9hdCgmbGV4LT5zdGF0ZXMsIHNpemVvZihjaGFyKiksIHN0YXRlKTsKCiAgcmV0dXJuIG5hbWVfcCA/ICpuYW1lX3AgOiAwOwp9CgpzdGF0aWMgaW5saW5lIHNpemVfdApsZXhlcl9udW1fc3RhdGVzKExleGVyKiBsZXgpIHsKICByZXR1cm4gdmVjdG9yX3NpemUoJmxleC0+c3RhdGVzLCBzaXplb2YoY2hhciopKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsZXhlcl9zdGF0ZV90b3BuYW1lKExleGVyKiBsZXgpIHsKICByZXR1cm4gbGV4ZXJfc3RhdGVfbmFtZShsZXgsIGxleGVyX3N0YXRlX3RvcChsZXgsIDApKTsKfQoKLyoqCiAqIEB9CiAqLwojZW5kaWYgLyogZGVmaW5lZChMRVhFUl9IKSAqLwoAAAAAAAAAAEALAAAAAAAAAAAAAAAAAAAAAAAAQAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUAwAAAAAAAGMDAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lexer.c",
			"settings":
			{
				"buffer_size": 10926,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					63,
					1,
					"insert",
					{
						"characters": "\nassert"
					},
					"CAAAALASAAAAAAAAsRIAAAAAAAAAAAAAsRIAAAAAAACzEgAAAAAAAAAAAACzEgAAAAAAALQSAAAAAAAAAAAAALQSAAAAAAAAtRIAAAAAAAAAAAAAtRIAAAAAAAC2EgAAAAAAAAAAAAC2EgAAAAAAALcSAAAAAAAAAAAAALcSAAAAAAAAuBIAAAAAAAAAAAAAuBIAAAAAAAC5EgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwEgAAAAAAALASAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALkSAAAAAAAAuxIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5EgAAAAAAALkSAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BAAAALoSAAAAAAAAuxIAAAAAAAAAAAAAuxIAAAAAAAC8EgAAAAAAAAAAAAC8EgAAAAAAAL0SAAAAAAAAAAAAAL0SAAAAAAAAvhIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6EgAAAAAAALoSAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAL8SAAAAAAAAwBIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/EgAAAAAAAL8SAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\nassert"
					},
					"CQAAAOgSAAAAAAAA6RIAAAAAAAAAAAAA6RIAAAAAAADrEgAAAAAAAAAAAADrEgAAAAAAAO0SAAAAAAAAAAAAAO0SAAAAAAAA7hIAAAAAAAAAAAAA7hIAAAAAAADvEgAAAAAAAAAAAADvEgAAAAAAAPASAAAAAAAAAAAAAPASAAAAAAAA8RIAAAAAAAAAAAAA8RIAAAAAAADyEgAAAAAAAAAAAADyEgAAAAAAAPMSAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoEgAAAAAAAOgSAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPMSAAAAAAAA9RIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzEgAAAAAAAPMSAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "rule->name"
					},
					"CgAAAPQSAAAAAAAA9RIAAAAAAAAAAAAA9RIAAAAAAAD2EgAAAAAAAAAAAAD2EgAAAAAAAPcSAAAAAAAAAAAAAPcSAAAAAAAA+BIAAAAAAAAAAAAA+BIAAAAAAAD5EgAAAAAAAAAAAAD5EgAAAAAAAPoSAAAAAAAAAAAAAPoSAAAAAAAA+xIAAAAAAAAAAAAA+xIAAAAAAAD8EgAAAAAAAAAAAAD8EgAAAAAAAP0SAAAAAAAAAAAAAP0SAAAAAAAA/hIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0EgAAAAAAAPQSAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAP8SAAAAAAAAABMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/EgAAAAAAAP8SAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"left_delete",
					null,
					"AQAAAAQTAAAAAAAABBMAAAAAAAAdAAAAIGlmKG5hbWUgJiYgcnVsZS0+bmFtZSkgewogICA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEEwAAAAAAACETAAAAAAAAAAAAAAAAPkA"
				],
				[
					87,
					4,
					"left_delete",
					null,
					"BAAAAD0TAAAAAAAAPRMAAAAAAABBAAAAIH0gZWxzZSB7CiAgICAgIGlmKG5hbWUgPT0gcnVsZS0+bmFtZSkKICAgICAgICByZXR1cm4gcnVsZTsKICAgIH08EwAAAAAAADwTAAAAAAAAAQAAACA6EwAAAAAAADoTAAAAAAAAAgAAACAgORMAAAAAAAA5EwAAAAAAAAEAAAAK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9EwAAAAAAAH4TAAAAAAAA////////738"
				],
				[
					90,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5EwAAAAAAADkTAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"cut",
					null,
					"AQAAANQPAAAAAAAA1A8AAAAAAAAuAAAAID0gdmVjdG9yX3NpemUoJmxleC0+cnVsZXMsIHNpemVvZihMZXhlclJ1bGUpKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUDwAAAAAAAAIQAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAAESAAAAAAAAAhIAAAAAAAAAAAAAAhIAAAAAAAADEgAAAAAAAAAAAAADEgAAAAAAAAQSAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABEgAAAAAAAAESAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAQSAAAAAAAABRIAAAAAAAAAAAAABRIAAAAAAAAGEgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEEgAAAAAAAAQSAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYSAAAAAAAABxIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGEgAAAAAAAAYSAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"paste",
					null,
					"AQAAAAcSAAAAAAAANRIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHEgAAAAAAAAcSAAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAADUSAAAAAAAANhIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1EgAAAAAAADUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"left_delete",
					null,
					"AQAAADUSAAAAAAAANRIAAAAAAAABAAAATQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2EgAAAAAAADYSAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADUSAAAAAAAANhIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1EgAAAAAAADUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					2,
					"right_delete",
					null,
					"AgAAAAUSAAAAAAAABRIAAAAAAAABAAAAPQUSAAAAAAAABRIAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFEgAAAAAAAAUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "\n$"
					},
					"AwAAANUPAAAAAAAA1g8AAAAAAAAAAAAA1g8AAAAAAADYDwAAAAAAAAAAAADYDwAAAAAAANkPAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVDwAAAAAAANUPAAAAAAAAAAAAAAAA8L8"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANkPAAAAAAAA2g8AAAAAAAAAAAAA2g8AAAAAAADcDwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZDwAAAAAAANkPAAAAAAAAAAAAAAAA8L8"
				],
				[
					132,
					3,
					"left_delete",
					null,
					"AwAAANoPAAAAAAAA2g8AAAAAAAACAAAAICDZDwAAAAAAANkPAAAAAAAAAQAAAArYDwAAAAAAANgPAAAAAAAAAQAAACQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcDwAAAAAAANwPAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANgPAAAAAAAA2Q8AAAAAAAAAAAAA2Q8AAAAAAADbDwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYDwAAAAAAANgPAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAANsPAAAAAAAA3A8AAAAAAAAAAAAA3A8AAAAAAADdDwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbDwAAAAAAANsPAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					2,
					"left_delete",
					null,
					"AgAAANwPAAAAAAAA3A8AAAAAAAABAAAAZtsPAAAAAAAA2w8AAAAAAAABAAAAaQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdDwAAAAAAAN0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "assert"
					},
					"BgAAANsPAAAAAAAA3A8AAAAAAAAAAAAA3A8AAAAAAADdDwAAAAAAAAAAAADdDwAAAAAAAN4PAAAAAAAAAAAAAN4PAAAAAAAA3w8AAAAAAAAAAAAA3w8AAAAAAADgDwAAAAAAAAAAAADgDwAAAAAAAOEPAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbDwAAAAAAANsPAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOEPAAAAAAAA4w8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhDwAAAAAAAOEPAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAOIPAAAAAAAA4w8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiDwAAAAAAAOIPAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "lexer_rule_find"
					},
					"DwAAAOMPAAAAAAAA5A8AAAAAAAAAAAAA5A8AAAAAAADlDwAAAAAAAAAAAADlDwAAAAAAAOYPAAAAAAAAAAAAAOYPAAAAAAAA5w8AAAAAAAAAAAAA5w8AAAAAAADoDwAAAAAAAAAAAADoDwAAAAAAAOkPAAAAAAAAAAAAAOkPAAAAAAAA6g8AAAAAAAAAAAAA6g8AAAAAAADrDwAAAAAAAAAAAADrDwAAAAAAAOwPAAAAAAAAAAAAAOwPAAAAAAAA7Q8AAAAAAAAAAAAA7Q8AAAAAAADuDwAAAAAAAAAAAADuDwAAAAAAAO8PAAAAAAAAAAAAAO8PAAAAAAAA8A8AAAAAAAAAAAAA8A8AAAAAAADxDwAAAAAAAAAAAADxDwAAAAAAAPIPAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjDwAAAAAAAOMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPIPAAAAAAAA9A8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyDwAAAAAAAPIPAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "lex,"
					},
					"BAAAAPMPAAAAAAAA9A8AAAAAAAAAAAAA9A8AAAAAAAD1DwAAAAAAAAAAAAD1DwAAAAAAAPYPAAAAAAAAAAAAAPYPAAAAAAAA9w8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzDwAAAAAAAPMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " name"
					},
					"BQAAAPcPAAAAAAAA+A8AAAAAAAAAAAAA+A8AAAAAAAD5DwAAAAAAAAAAAAD5DwAAAAAAAPoPAAAAAAAAAAAAAPoPAAAAAAAA+w8AAAAAAAAAAAAA+w8AAAAAAAD8DwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3DwAAAAAAAPcPAAAAAAAAAAAAAAAA8L8"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAP4PAAAAAAAA/w8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+DwAAAAAAAP4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					152,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZDwAAAAAAANkPAAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					3,
					"right_delete",
					null,
					"AwAAANkPAAAAAAAA2Q8AAAAAAAAHAAAAYXNzZXJ0KNkPAAAAAAAA2Q8AAAAAAAABAAAAIdkPAAAAAAAA2Q8AAAAAAAABAAAAbA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgDwAAAAAAANkPAAAAAAAAAAAAAAAA8L8"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAANkPAAAAAAAA2g8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZDwAAAAAAANkPAAAAAAAAAAAAAAAA8L8"
				],
				[
					157,
					1,
					"left_delete",
					null,
					"AQAAANkPAAAAAAAA2Q8AAAAAAAABAAAAaQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaDwAAAAAAANoPAAAAAAAAAAAAAAAA8L8"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "if(ol"
					},
					"BQAAANkPAAAAAAAA2g8AAAAAAAAAAAAA2g8AAAAAAADbDwAAAAAAAAAAAADbDwAAAAAAANwPAAAAAAAAAAAAANwPAAAAAAAA3Q8AAAAAAAAAAAAA3Q8AAAAAAADeDwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZDwAAAAAAANkPAAAAAAAAAAAAAAAA8L8"
				],
				[
					159,
					2,
					"left_delete",
					null,
					"AgAAAN0PAAAAAAAA3Q8AAAAAAAABAAAAbNwPAAAAAAAA3A8AAAAAAAABAAAAbw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeDwAAAAAAAN4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAANwPAAAAAAAA3Q8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcDwAAAAAAANwPAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAANwPAAAAAAAA3Q8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcDwAAAAAAANwPAAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"paste",
					null,
					"AQAAAN0PAAAAAAAA5Q8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdDwAAAAAAAN0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAOUPAAAAAAAA5g8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlDwAAAAAAAOUPAAAAAAAAAAAAAAAA8L8"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOYPAAAAAAAA5w8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmDwAAAAAAAOYPAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"left_delete",
					null,
					"AQAAAAIQAAAAAAAAAhAAAAAAAAABAAAAOw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADEAAAAAAAAAMQAAAAAAAA////////738"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAAAIQAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAAEEAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACEAAAAAAAAAIQAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"left_delete",
					null,
					"AQAAAAMQAAAAAAAAAxAAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEEAAAAAAAAAQQAAAAAAAAAAAAAAAA8L8"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMQAAAAAAAABBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAA8L8"
				],
				[
					177,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAQQAAAAAAAABhAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEEAAAAAAAAAQQAAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAAUQAAAAAAAABhAAAAAAAAAAAAAABhAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACxAAAAAAAAAAAAAABhAAAAAAAAAGEAAAAAAAAAIAAAAgIAYQAAAAAAAAChAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFEAAAAAAAAAUQAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CQAAAAoQAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAAPEAAAAAAAAAAAAAAGEAAAAAAAAAYQAAAAAAAABAAAACAgICALEAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAAOEAAAAAAAAAAAAAAOEAAAAAAAAA8QAAAAAAAAAAAAAA8QAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAREAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKEAAAAAAAAAoQAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": " -1;"
					},
					"BAAAABEQAAAAAAAAEhAAAAAAAAAAAAAAEhAAAAAAAAATEAAAAAAAAAAAAAATEAAAAAAAABQQAAAAAAAAAAAAABQQAAAAAAAAFRAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAREAAAAAAAABEQAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "fprintf"
					},
					"BwAAAAYQAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAAChAAAAAAAAAAAAAAChAAAAAAAAALEAAAAAAAAAAAAAALEAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADRAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGEAAAAAAAAAYQAAAAAAAAAAAAAACAYUA"
				],
				[
					183,
					7,
					"left_delete",
					null,
					"BwAAAAwQAAAAAAAADBAAAAAAAAABAAAAZgsQAAAAAAAACxAAAAAAAAABAAAAdAoQAAAAAAAAChAAAAAAAAABAAAAbgkQAAAAAAAACRAAAAAAAAABAAAAaQgQAAAAAAAACBAAAAAAAAABAAAAcgcQAAAAAAAABxAAAAAAAAABAAAAcAYQAAAAAAAABhAAAAAAAAABAAAAZg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANEAAAAAAAAA0QAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAAYQAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAIEAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGEAAAAAAAAAYQAAAAAAAAAAAAAAAA8L8"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAYQAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHEAAAAAAAAAMAAAAgIAo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGEAAAAAAAAAkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHEAAAAAAAAAcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJojAAAAAAAAmyMAAAAAAAAAAAAAmyMAAAAAAACcIwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaIwAAAAAAAJojAAAAAAAAAAAAAAAA8L8"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": "lex->byte_leng"
					},
					"DgAAAA4kAAAAAAAADyQAAAAAAAAAAAAADyQAAAAAAAAQJAAAAAAAAAAAAAAQJAAAAAAAABEkAAAAAAAAAAAAABEkAAAAAAAAEiQAAAAAAAAAAAAAEiQAAAAAAAATJAAAAAAAAAAAAAATJAAAAAAAABQkAAAAAAAAAAAAABQkAAAAAAAAFSQAAAAAAAAAAAAAFSQAAAAAAAAWJAAAAAAAAAAAAAAWJAAAAAAAABckAAAAAAAAAAAAABckAAAAAAAAGCQAAAAAAAAAAAAAGCQAAAAAAAAZJAAAAAAAAAAAAAAZJAAAAAAAABokAAAAAAAAAAAAABokAAAAAAAAGyQAAAAAAAAAAAAAGyQAAAAAAAAcJAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOJAAAAAAAAA4kAAAAAAAAAAAAAAAA8L8"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "th"
					},
					"AgAAABwkAAAAAAAAHSQAAAAAAAAAAAAAHSQAAAAAAAAeJAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcJAAAAAAAABwkAAAAAAAAAAAAAAAA8L8"
				],
				[
					262,
					3,
					"right_delete",
					null,
					"AwAAAB4kAAAAAAAAHiQAAAAAAAABAAAAbB4kAAAAAAAAHiQAAAAAAAABAAAAZR4kAAAAAAAAHiQAAAAAAAABAAAAbg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeJAAAAAAAAB4kAAAAAAAAAAAAAAAA8L8"
				],
				[
					267,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeJAAAAAAAAB4kAAAAAAAAAAAAAAAA8L8"
				],
				[
					275,
					1,
					"paste",
					null,
					"AgAAAOwjAAAAAAAA+yMAAAAAAAAAAAAA+yMAAAAAAAD7IwAAAAAAAAoAAABsZXgtPnN0YXJ0",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsIwAAAAAAAPYjAAAAAAAAAAAAAAAA8L8"
				],
				[
					280,
					1,
					"left_delete",
					null,
					"AQAAAPojAAAAAAAA+iMAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7IwAAAAAAAPsjAAAAAAAAAAAAAAAA8L8"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMIbAAAAAAAAwxsAAAAAAAAAAAAAwxsAAAAAAADEGwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCGwAAAAAAAMIbAAAAAAAAAAAAAAAA8L8"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": "input.püo"
					},
					"CgAAACkiAAAAAAAAKiIAAAAAAAAAAAAAKiIAAAAAAAAqIgAAAAAAAAUAAABzdGFydCoiAAAAAAAAKyIAAAAAAAAAAAAAKyIAAAAAAAAsIgAAAAAAAAAAAAAsIgAAAAAAAC0iAAAAAAAAAAAAAC0iAAAAAAAALiIAAAAAAAAAAAAALiIAAAAAAAAvIgAAAAAAAAAAAAAvIgAAAAAAADAiAAAAAAAAAAAAADAiAAAAAAAAMSIAAAAAAAAAAAAAMSIAAAAAAAAyIgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApIgAAAAAAAC4iAAAAAAAAAAAAAAAA8L8"
				],
				[
					408,
					2,
					"left_delete",
					null,
					"AgAAADEiAAAAAAAAMSIAAAAAAAABAAAAbzAiAAAAAAAAMCIAAAAAAAACAAAAw7w",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyIgAAAAAAADIiAAAAAAAAAAAAAAAA8L8"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "os"
					},
					"AgAAADAiAAAAAAAAMSIAAAAAAAAAAAAAMSIAAAAAAAAyIgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwIgAAAAAAADAiAAAAAAAAAAAAAAAA8L8"
				],
				[
					445,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAACYlAAAAAAAAJyUAAAAAAAAAAAAAJyUAAAAAAAAoJQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmJQAAAAAAACYlAAAAAAAAAAAAAAAANEA"
				],
				[
					480,
					1,
					"right_delete",
					null,
					"AQAAAKgpAAAAAAAAqCkAAAAAAAAMAAAAc3RhcnQ6ICV6dSwg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoKQAAAAAAALQpAAAAAAAAAAAAAAAA8L8"
				],
				[
					483,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAL4pAAAAAAAAvykAAAAAAAAAAAAAvykAAAAAAAC/KQAAAAAAAAwAAAAgbGV4LT5zdGFydCw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+KQAAAAAAAMopAAAAAAAAAAAAAAAA8L8"
				],
				[
					488,
					1,
					"right_delete",
					null,
					"AQAAAL8pAAAAAAAAvykAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/KQAAAAAAAL8pAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAgAAAAAAAKgCAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/doc",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/Testing",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/stack.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/usr/include/zlib.h",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Niji.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_mmap.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/csv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/bnflexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/wasmedge-quickjs/example_js/es6_module_demo/c.",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/.config/sublime-text/Packages/User/Themes/ES6 Next.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_deep.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_path.js",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/socklen_t.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.c.structs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/blah.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/iteration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_watch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_childprocess.js",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Aurora.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qsort_r.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/inet_ntop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_location.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debugger.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tmp.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/check-flags.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/TODO",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/clock_gettime.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/require.c",
		"/home/roman/Dokumente/bookmarks_10_26_21.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tmp.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/base64.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/Doxyfile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"check_functions",
			"\"client ",
			"function_class_id_ceil",
			"DO_TESTS",
			"Set mod",
			"\\[%u\\]",
			"gettid\\(\\)",
			"^\\s*f?printf",
			"_loader",
			"^\\s*f?printf",
			"jsm_module_loader",
			"jsm_default_module_path",
			"MODULE_PATH",
			"jsm_module_find",
			"jsm_module_loader",
			"context_new",
			"jsm_context_new",
			"js_std_",
			"JS_GetOwnPropertyNames",
			"JS_GetOwnPropertyNamesInternal",
			"tab_atom =",
			"ptab =",
			"return ",
			"^JS_GetOwnPropertyNames",
			"JS_GetOwnPropertyNames",
			"charlen",
			"HexInteger",
			"HexInter",
			"PROP_START",
			"LEXEME:",
			"byte_charlen",
			"\"next",
			"rule #",
			"'identifier",
			"'keyword'",
			"grammar",
			"keyword",
			"'ws'",
			"'semi'",
			"'ws'",
			"'identifier'",
			"identifier'",
			"cend",
			"templateLiteral",
			"JSLexer",
			"regexpLiteral",
			"lexer_rule_add",
			"PROP_RULENA",
			"PROP_RULENAMES",
			"tok",
			"PROP_",
			"PROP_TOKEN",
			"lexer_token",
			"js_lexer_lex",
			"PROP_SIZE:",
			"JSLexerRule",
			"BYTE_LENG",
			"PROP_BYTE_LENGTH",
			"unicode_from_utf8",
			"lexer_skip",
			"lexer_next\\(",
			"lexer_next",
			"METHOD_TOKEN_CLASS",
			"printTok",
			"js_lexer_nextfn",
			"YIELD_DONE_VALUE",
			"METHOD_",
			"JS_NewCFunction",
			"stateDepth",
			"bind",
			"magic",
			"js_token_data\\(ctx,",
			"js_lexer_data\\(ctx,",
			"js_token[a-z_]*\\(",
			"js_token",
			"acceptLine",
			"historyAdd",
			"mod",
			"js_module_",
			"LOAD_MODULE:",
			"js_modules_object",
			"js_modules_array",
			"INSPECT_IS_COMPACT",
			"'doc'",
			"'elm'",
			"xpath",
			"'same",
			"'m'",
			"'node'",
			"'Text",
			"\\.text",
			"new Text",
			"\n    ",
			"id",
			"2\\(",
			"class Text",
			"constructor",
			"Factory",
			"Text",
			"new Text",
			"\n});",
			"\n    if(raw.children) {\n      let cl = node.children; /*Factory(raw.children, node)*/\n\n      if(raw.children[0]) {\n        //console.log('cl', cl);\n        //console.log('raw.children[0]', raw.children[0]);\n        let y = cl.path;\n        //console.log('cl.path', cl.path);\n        let elm = cl[0]; /*Factory(raw.children[0], cl, Element)*/\nif(cl.length) {\nif(elm) {\nif(isObject(elm) && 'tagName' in elm)\n      console.log('elm', elm.tagName, elm.path);\n      else\n        console.log('elm',elm);\n       } //console.log('elm.path', elm.path);\n        //console.log('elm.ownerDocument', elm.ownerDocument);\n      }\n    }\n}\n    if(raw.attributes) {\n      //console.log('raw.attributes', raw.attributes);\n      let al = node.attributes; //Factory(raw.attributes, node, NamedNodeMap);\n      //  console.log('al', al);\n      let z = al.path;\n\n      let at = al[Object.keys(raw.attributes)[0]];\n\n      if(at) {\n        let x = at.path;\n        //console.log('at', at,at.path);\n        //console.log('at.ownerElement', at.ownerElement, at.ownerElement.path);\n      }\n    }\n\n    //console.log('node.nextSibling', node.nextSibling, Node.types[node.nodeType], Node.path(node).slice(-2));\n\n    /*else {\n      console.log('node.tagName', node.tagName);\n      console.log('node.parentElement', node.parentElement);\n      console.log('node.parentNode', node.parentNode);\n      const { attributes } = Node.raw(node);\n      if(isObject(attributes)) {\n        console.log('attributes', attributes);\n        if(attributes[Symbol.iterator]) for(let attr in attributes) Recurse([attr, attributes[attr]], fn, [...stack, node]);\n      }\n    }\n*/\n    //    console.log(node.tagName ? `<${node.tagName} ${node.nodeType} ${stack.length}>` : node[Symbol.toStringTag] ?? node);\n  });\n",
			"'elm'",
			"'elm",
			"'elm'",
			"'al'",
			"'cl'",
			"inspect\\(",
			"inspectSy",
			"\n    ",
			"const",
			"        ",
			"NodeList",
			"ustom",
			"inspectSym",
			"^(\\s*)console",
			"Pointer",
			"Pointre",
			"P",
			"Pointer",
			"Path",
			"Pointer",
			"'Attr'",
			"class Attr",
			"new Attr",
			"class Attr",
			"NamedNodeMap",
			"get path"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"[%p]",
			"pthread_self()",
			"js_token_data2(ctx,",
			"js_lexer_data2(ctx,",
			"\\1//console",
			"inspectSymbol",
			"parent",
			"gettersetter",
			"ELEMENT_NODE",
			"parent",
			"attributes",
			"Node.prototype.",
			"\\1static \\2 = \\3;",
			"const raw = Node.raw(this);",
			"\\1.set\\(\\2\\)",
			"\\1.get\\(this\\)",
			"ownerElement.get\\(this\\)",
			"rawNode.get\\(this\\)",
			"inspectSymbol",
			"CSV",
			"\\1//",
			"args->c",
			"args->",
			"\\1//\\2",
			"METHOD_VALUES",
			"pr->",
			"property",
			"size[0]",
			"s->",
			"(sock)->",
			", s,",
			"(sock).",
			", *s,",
			"s->",
			"obj",
			"js_socket_data(",
			"obj",
			"loc",
			"YIELD_",
			"if",
			"\\1//\\2",
			"",
			"\\1//\\2",
			"js_pointer_free_func",
			"BITFIELD_SET",
			"fd",
			"misc.IN_",
			"fd",
			"wd",
			"JSValueConst\\1",
			"s",
			"queue_alloc(",
			"queue_alloc",
			"rpt",
			"js_return_",
			"tmp",
			"repeater_execute",
			"queue_item",
			"linked_item",
			"queue_",
			"rpt",
			"Repeater",
			"resolvable_item",
			"resolvable_",
			"js_resolvable_",
			"repeater_push",
			"COLOR_NONE",
			"COLOR_CYAN",
			"COLOR_RED",
			"COLOR_LIGHTRED",
			"\" BACKGROUND_RED \"",
			"BACKGROUND_BLUE \"",
			"BACKGROUND_GREEN \"",
			"BACKGROUND_YELLOW \"",
			"\" COLOR_NONE \"",
			"js_inspect_print_map",
			"js_inspect_print_set",
			"js_inspect_print_arraybuffer",
			"js_inspect_print_regexp",
			"js_inspect_print_number",
			"js_inspect_print_string",
			"js_inspect_print_atom",
			"js_inspect_print_module",
			"js_inspect_print_value",
			"imp",
			"INC",
			"format",
			"\\1//\\2",
			"ctx",
			"sel",
			"console.log",
			"cmd",
			"js_socket_async_wait",
			"utils_SOURCES",
			"${util_SOURCES}",
			"${vector_SOURCES}",
			"socketpair",
			"",
			"#",
			"",
			"HAVE_MEMMEM",
			"log",
			"class_key",
			"}\\n\\nsize_t",
			"# ",
			"#",
			"HAVE_REALPATH",
			"",
			"HAVE_TERMIOS_H",
			"HAVE_MMAP",
			"HAVE_SYS_MMAN_H",
			"HAVE_SYS_WAIT_H",
			"length",
			"loc->",
			"ret->",
			"arg",
			" ",
			"",
			"\"\\\\t",
			"\"\\t",
			"imp.",
			"ctx,",
			"",
			"JSValueConst)",
			"",
			"jsm_module_loader",
			"js_module_loader_so",
			"js_eval_file"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34925,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/quickjs.c",
							"function_name_status_row": 31,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									7137,
									7158
								],
								[
									7479,
									7490
								],
								[
									7680,
									7687
								],
								[
									7713,
									7721
								],
								[
									7747,
									7759
								],
								[
									7850,
									7863
								],
								[
									7890,
									7900
								],
								[
									8624,
									8643
								],
								[
									8660,
									8669
								],
								[
									9845,
									9857
								],
								[
									10805,
									10812
								],
								[
									11862,
									11874
								],
								[
									12070,
									12088
								],
								[
									12273,
									12289
								],
								[
									13328,
									13336
								],
								[
									13448,
									13458
								],
								[
									13669,
									13679
								],
								[
									13786,
									13798
								],
								[
									13904,
									13920
								],
								[
									14090,
									14099
								],
								[
									15838,
									15852
								],
								[
									16115,
									16129
								],
								[
									16182,
									16190
								],
								[
									17261,
									17273
								],
								[
									17500,
									17510
								],
								[
									18105,
									18118
								],
								[
									19233,
									19241
								],
								[
									19620,
									19638
								],
								[
									21185,
									21203
								],
								[
									21312,
									21327
								],
								[
									21450,
									21468
								],
								[
									21579,
									21594
								],
								[
									21698,
									21706
								],
								[
									21818,
									21829
								],
								[
									22123,
									22136
								],
								[
									22466,
									22478
								],
								[
									22724,
									22744
								],
								[
									23058,
									23077
								],
								[
									23496,
									23522
								],
								[
									23631,
									23655
								],
								[
									23723,
									23742
								],
								[
									24007,
									24024
								],
								[
									24136,
									24152
								],
								[
									24240,
									24256
								],
								[
									24754,
									24767
								],
								[
									24857,
									24874
								],
								[
									25026,
									25039
								],
								[
									25049,
									25060
								],
								[
									26179,
									26189
								],
								[
									26791,
									26801
								],
								[
									27132,
									27147
								],
								[
									27157,
									27164
								],
								[
									27969,
									27977
								],
								[
									29062,
									29073
								],
								[
									29207,
									29222
								],
								[
									29295,
									29316
								],
								[
									29384,
									29400
								],
								[
									29467,
									29482
								],
								[
									29556,
									29569
								],
								[
									29672,
									29684
								],
								[
									29798,
									29808
								],
								[
									29867,
									29884
								],
								[
									29946,
									29956
								],
								[
									30051,
									30068
								],
								[
									30170,
									30189
								],
								[
									30294,
									30320
								],
								[
									30400,
									30415
								],
								[
									30493,
									30504
								],
								[
									30582,
									30595
								],
								[
									30673,
									30694
								],
								[
									30834,
									30853
								],
								[
									30957,
									30984
								],
								[
									31068,
									31088
								],
								[
									31405,
									31423
								],
								[
									31992,
									32004
								],
								[
									33189,
									33192
								],
								[
									33412,
									33415
								],
								[
									33516,
									33519
								],
								[
									33543,
									33546
								],
								[
									33627,
									33639
								],
								[
									33647,
									33657
								],
								[
									33668,
									33671
								],
								[
									33683,
									33686
								],
								[
									33732,
									33735
								],
								[
									34002,
									34005
								],
								[
									34017,
									34020
								],
								[
									34057,
									34060
								],
								[
									34189,
									34201
								],
								[
									34232,
									34248
								],
								[
									34318,
									34335
								],
								[
									34381,
									34403
								],
								[
									34458,
									34476
								],
								[
									34596,
									34618
								],
								[
									34738,
									34753
								],
								[
									34898,
									34924
								],
								[
									35041,
									35052
								],
								[
									35156,
									35169
								],
								[
									35271,
									35291
								],
								[
									35373,
									35386
								],
								[
									35517,
									35538
								],
								[
									35605,
									35617
								],
								[
									35661,
									35674
								],
								[
									35737,
									35756
								],
								[
									35800,
									35813
								],
								[
									35870,
									35885
								],
								[
									35950,
									35967
								],
								[
									36029,
									36041
								],
								[
									36104,
									36117
								],
								[
									36197,
									36210
								],
								[
									36242,
									36259
								],
								[
									36353,
									36371
								],
								[
									36413,
									36426
								],
								[
									36497,
									36521
								],
								[
									36563,
									36582
								],
								[
									36653,
									36676
								],
								[
									36718,
									36736
								],
								[
									36807,
									36837
								],
								[
									36879,
									36904
								],
								[
									36975,
									37002
								],
								[
									37044,
									37066
								],
								[
									37137,
									37165
								],
								[
									37207,
									37230
								],
								[
									37301,
									37320
								],
								[
									37362,
									37387
								],
								[
									37429,
									37453
								],
								[
									37495,
									37514
								],
								[
									37585,
									37603
								],
								[
									37645,
									37658
								],
								[
									37729,
									37745
								],
								[
									37787,
									37798
								],
								[
									37869,
									37894
								],
								[
									37936,
									37956
								],
								[
									38027,
									38054
								],
								[
									38096,
									38118
								],
								[
									38189,
									38224
								],
								[
									38266,
									38296
								],
								[
									38367,
									38389
								],
								[
									38431,
									38448
								],
								[
									38519,
									38539
								],
								[
									38581,
									38596
								],
								[
									38667,
									38704
								],
								[
									38746,
									38778
								],
								[
									38870,
									38895
								],
								[
									38937,
									38957
								],
								[
									39038,
									39053
								],
								[
									39095,
									39108
								],
								[
									39150,
									39164
								],
								[
									39221,
									39237
								],
								[
									39293,
									39312
								],
								[
									39373,
									39390
								],
								[
									39465,
									39495
								],
								[
									39573,
									39582
								],
								[
									39610,
									39622
								],
								[
									39799,
									39817
								],
								[
									39832,
									39845
								],
								[
									39929,
									39941
								],
								[
									39997,
									40010
								],
								[
									40076,
									40094
								],
								[
									40163,
									40174
								],
								[
									40225,
									40240
								],
								[
									40290,
									40302
								],
								[
									40395,
									40417
								],
								[
									40462,
									40476
								],
								[
									40514,
									40528
								],
								[
									40625,
									40641
								],
								[
									40682,
									40698
								],
								[
									40797,
									40809
								],
								[
									40847,
									40859
								],
								[
									40956,
									40973
								],
								[
									41049,
									41065
								],
								[
									41107,
									41124
								],
								[
									41183,
									41194
								],
								[
									41253,
									41266
								],
								[
									41317,
									41330
								],
								[
									41392,
									41411
								],
								[
									41488,
									41503
								],
								[
									41554,
									41573
								],
								[
									41606,
									41635
								],
								[
									41668,
									41691
								],
								[
									41738,
									41761
								],
								[
									41849,
									41870
								],
								[
									41917,
									41943
								],
								[
									41990,
									42006
								],
								[
									42053,
									42070
								],
								[
									42201,
									42217
								],
								[
									42280,
									42294
								],
								[
									42339,
									42367
								],
								[
									42857,
									42876
								],
								[
									42927,
									42953
								],
								[
									43049,
									43072
								],
								[
									43119,
									43141
								],
								[
									43187,
									43223
								],
								[
									43258,
									43269
								],
								[
									43346,
									43372
								],
								[
									43494,
									43529
								],
								[
									43571,
									43601
								],
								[
									43675,
									43690
								],
								[
									43833,
									43851
								],
								[
									43897,
									43915
								],
								[
									43987,
									44001
								],
								[
									44034,
									44051
								],
								[
									44105,
									44117
								],
								[
									44168,
									44193
								],
								[
									44279,
									44299
								],
								[
									44419,
									44437
								],
								[
									44530,
									44547
								],
								[
									44620,
									44631
								],
								[
									44678,
									44697
								],
								[
									44787,
									44805
								],
								[
									44853,
									44883
								],
								[
									44934,
									44949
								],
								[
									44991,
									45016
								],
								[
									45100,
									45112
								],
								[
									45170,
									45185
								],
								[
									45263,
									45290
								],
								[
									45320,
									45333
								],
								[
									45375,
									45393
								],
								[
									45434,
									45457
								],
								[
									45523,
									45538
								],
								[
									45578,
									45593
								],
								[
									45668,
									45683
								],
								[
									45746,
									45759
								],
								[
									45821,
									45835
								],
								[
									45905,
									45922
								],
								[
									46008,
									46038
								],
								[
									46092,
									46120
								],
								[
									46162,
									46185
								],
								[
									46259,
									46282
								],
								[
									46399,
									46421
								],
								[
									46466,
									46483
								],
								[
									46602,
									46619
								],
								[
									46662,
									46675
								],
								[
									46750,
									46766
								],
								[
									46801,
									46824
								],
								[
									46880,
									46904
								],
								[
									46977,
									46998
								],
								[
									47071,
									47102
								],
								[
									47165,
									47187
								],
								[
									47551,
									47564
								],
								[
									48004,
									48033
								],
								[
									48074,
									48086
								],
								[
									48177,
									48187
								],
								[
									48267,
									48280
								],
								[
									48390,
									48414
								],
								[
									48502,
									48515
								],
								[
									48709,
									48722
								],
								[
									48907,
									48916
								],
								[
									49138,
									49148
								],
								[
									49327,
									49334
								],
								[
									49444,
									49454
								],
								[
									49721,
									49732
								],
								[
									50094,
									50115
								],
								[
									50262,
									50272
								],
								[
									50441,
									50450
								],
								[
									50554,
									50570
								],
								[
									51064,
									51079
								],
								[
									51301,
									51313
								],
								[
									51425,
									51433
								],
								[
									51590,
									51605
								],
								[
									57231,
									57247
								],
								[
									57662,
									57690
								],
								[
									57785,
									57802
								],
								[
									57901,
									57920
								],
								[
									58029,
									58048
								],
								[
									58200,
									58220
								],
								[
									58415,
									58443
								],
								[
									58553,
									58570
								],
								[
									58667,
									58688
								],
								[
									59095,
									59115
								],
								[
									59158,
									59181
								],
								[
									59300,
									59320
								],
								[
									59399,
									59422
								],
								[
									59583,
									59597
								],
								[
									61560,
									61579
								],
								[
									61631,
									61650
								],
								[
									61799,
									61824
								],
								[
									62239,
									62252
								],
								[
									62634,
									62645
								],
								[
									62821,
									62835
								],
								[
									63885,
									63898
								],
								[
									63965,
									63982
								],
								[
									64100,
									64117
								],
								[
									64209,
									64215
								],
								[
									64250,
									64254
								],
								[
									64287,
									64294
								],
								[
									64334,
									64356
								],
								[
									64483,
									64497
								],
								[
									64568,
									64600
								],
								[
									64727,
									64740
								],
								[
									65141,
									65156
								],
								[
									65355,
									65375
								],
								[
									65973,
									65986
								],
								[
									66062,
									66074
								],
								[
									66158,
									66171
								],
								[
									66307,
									66325
								],
								[
									66822,
									66837
								],
								[
									67108,
									67122
								],
								[
									67362,
									67379
								],
								[
									67450,
									67464
								],
								[
									72319,
									72335
								],
								[
									73253,
									73266
								],
								[
									73756,
									73775
								],
								[
									73829,
									73848
								],
								[
									74039,
									74048
								],
								[
									74194,
									74210
								],
								[
									74390,
									74406
								],
								[
									74687,
									74703
								],
								[
									74780,
									74795
								],
								[
									75195,
									75208
								],
								[
									75304,
									75318
								],
								[
									76555,
									76569
								],
								[
									78220,
									78233
								],
								[
									78285,
									78303
								],
								[
									78466,
									78484
								],
								[
									78586,
									78603
								],
								[
									78711,
									78725
								],
								[
									78887,
									78899
								],
								[
									79221,
									79241
								],
								[
									79273,
									79289
								],
								[
									79440,
									79460
								],
								[
									79534,
									79553
								],
								[
									79624,
									79641
								],
								[
									79712,
									79718
								],
								[
									79849,
									79862
								],
								[
									80641,
									80653
								],
								[
									80800,
									80813
								],
								[
									80954,
									80965
								],
								[
									81172,
									81185
								],
								[
									81805,
									81817
								],
								[
									82705,
									82722
								],
								[
									83576,
									83588
								],
								[
									84284,
									84296
								],
								[
									84453,
									84463
								],
								[
									84671,
									84685
								],
								[
									85257,
									85272
								],
								[
									85374,
									85391
								],
								[
									85842,
									85854
								],
								[
									89976,
									89992
								],
								[
									90252,
									90265
								],
								[
									90862,
									90879
								],
								[
									91918,
									91931
								],
								[
									92123,
									92136
								],
								[
									92448,
									92461
								],
								[
									92826,
									92836
								],
								[
									92929,
									92945
								],
								[
									93318,
									93333
								],
								[
									93751,
									93763
								],
								[
									94077,
									94097
								],
								[
									94473,
									94488
								],
								[
									95624,
									95637
								],
								[
									95768,
									95784
								],
								[
									96538,
									96552
								],
								[
									96640,
									96655
								],
								[
									96845,
									96864
								],
								[
									97513,
									97535
								],
								[
									99714,
									99735
								],
								[
									99967,
									99978
								],
								[
									100073,
									100086
								],
								[
									100245,
									100272
								],
								[
									100644,
									100654
								],
								[
									101609,
									101625
								],
								[
									101929,
									101947
								],
								[
									102665,
									102683
								],
								[
									102849,
									102865
								],
								[
									103056,
									103069
								],
								[
									103290,
									103310
								],
								[
									103563,
									103575
								],
								[
									105028,
									105039
								],
								[
									105527,
									105541
								],
								[
									105874,
									105889
								],
								[
									106124,
									106142
								],
								[
									106352,
									106365
								],
								[
									107186,
									107198
								],
								[
									107448,
									107467
								],
								[
									107917,
									107935
								],
								[
									108043,
									108061
								],
								[
									108139,
									108162
								],
								[
									108310,
									108329
								],
								[
									108748,
									108769
								],
								[
									109582,
									109605
								],
								[
									110014,
									110033
								],
								[
									110327,
									110347
								],
								[
									110659,
									110677
								],
								[
									110937,
									110947
								],
								[
									111053,
									111064
								],
								[
									111472,
									111492
								],
								[
									111868,
									111889
								],
								[
									112455,
									112474
								],
								[
									112593,
									112613
								],
								[
									112886,
									112912
								],
								[
									113449,
									113480
								],
								[
									113941,
									113959
								],
								[
									114234,
									114251
								],
								[
									115182,
									115197
								],
								[
									116788,
									116804
								],
								[
									117532,
									117544
								],
								[
									117640,
									117656
								],
								[
									118061,
									118077
								],
								[
									120512,
									120526
								],
								[
									120755,
									120765
								],
								[
									120949,
									120957
								],
								[
									121142,
									121158
								],
								[
									121615,
									121632
								],
								[
									121944,
									121954
								],
								[
									122221,
									122237
								],
								[
									123040,
									123055
								],
								[
									124398,
									124412
								],
								[
									124572,
									124592
								],
								[
									124717,
									124730
								],
								[
									124793,
									124813
								],
								[
									124928,
									124942
								],
								[
									124991,
									125006
								],
								[
									125353,
									125363
								],
								[
									125494,
									125508
								],
								[
									125589,
									125607
								],
								[
									125787,
									125804
								],
								[
									126581,
									126599
								],
								[
									126807,
									126827
								],
								[
									127162,
									127175
								],
								[
									128197,
									128209
								],
								[
									128433,
									128447
								],
								[
									129202,
									129214
								],
								[
									129284,
									129298
								],
								[
									129754,
									129767
								],
								[
									129891,
									129909
								],
								[
									130053,
									130070
								],
								[
									132302,
									132320
								],
								[
									134151,
									134169
								],
								[
									135546,
									135569
								],
								[
									136016,
									136038
								],
								[
									136901,
									136913
								],
								[
									137414,
									137427
								],
								[
									138162,
									138183
								],
								[
									140835,
									140848
								],
								[
									141051,
									141073
								],
								[
									142044,
									142060
								],
								[
									142723,
									142740
								],
								[
									142860,
									142877
								],
								[
									142989,
									143000
								],
								[
									143115,
									143127
								],
								[
									143307,
									143333
								],
								[
									143689,
									143710
								],
								[
									144024,
									144046
								],
								[
									144285,
									144310
								],
								[
									144928,
									144948
								],
								[
									145388,
									145412
								],
								[
									146069,
									146085
								],
								[
									147164,
									147180
								],
								[
									147515,
									147536
								],
								[
									147551,
									147579
								],
								[
									147819,
									147842
								],
								[
									148100,
									148123
								],
								[
									148722,
									148741
								],
								[
									149477,
									149498
								],
								[
									149597,
									149615
								],
								[
									149687,
									149703
								],
								[
									149797,
									149813
								],
								[
									150070,
									150086
								],
								[
									150101,
									150123
								],
								[
									150338,
									150355
								],
								[
									150945,
									150959
								],
								[
									151611,
									151624
								],
								[
									152283,
									152301
								],
								[
									152688,
									152705
								],
								[
									153274,
									153288
								],
								[
									153340,
									153352
								],
								[
									153757,
									153775
								],
								[
									153997,
									154010
								],
								[
									154231,
									154255
								],
								[
									154415,
									154434
								],
								[
									154597,
									154620
								],
								[
									154767,
									154785
								],
								[
									154969,
									154999
								],
								[
									155528,
									155553
								],
								[
									156297,
									156324
								],
								[
									156627,
									156649
								],
								[
									156982,
									157010
								],
								[
									157194,
									157217
								],
								[
									157417,
									157428
								],
								[
									158572,
									158586
								],
								[
									158872,
									158890
								],
								[
									159308,
									159324
								],
								[
									160831,
									160845
								],
								[
									160948,
									160961
								],
								[
									161125,
									161141
								],
								[
									161195,
									161207
								],
								[
									161494,
									161507
								],
								[
									164301,
									164316
								],
								[
									164534,
									164543
								],
								[
									165108,
									165128
								],
								[
									165453,
									165474
								],
								[
									165546,
									165553
								],
								[
									166130,
									166144
								],
								[
									167441,
									167449
								],
								[
									167881,
									167896
								],
								[
									168415,
									168435
								],
								[
									168450,
									168468
								],
								[
									168527,
									168548
								],
								[
									168866,
									168887
								],
								[
									170034,
									170052
								],
								[
									170393,
									170414
								],
								[
									181772,
									181790
								],
								[
									187339,
									187357
								],
								[
									187459,
									187467
								],
								[
									187756,
									187771
								],
								[
									187927,
									187942
								],
								[
									188146,
									188162
								],
								[
									188265,
									188275
								],
								[
									188629,
									188640
								],
								[
									188882,
									188895
								],
								[
									190056,
									190069
								],
								[
									190816,
									190831
								],
								[
									193308,
									193327
								],
								[
									193612,
									193623
								],
								[
									193709,
									193723
								],
								[
									194360,
									194373
								],
								[
									194832,
									194851
								],
								[
									195074,
									195091
								],
								[
									195315,
									195339
								],
								[
									195716,
									195739
								],
								[
									195994,
									196019
								],
								[
									196298,
									196319
								],
								[
									196388,
									196411
								],
								[
									196486,
									196511
								],
								[
									196801,
									196823
								],
								[
									197049,
									197067
								],
								[
									197289,
									197310
								],
								[
									197497,
									197516
								],
								[
									197753,
									197774
								],
								[
									197866,
									197894
								],
								[
									197981,
									198008
								],
								[
									198094,
									198126
								],
								[
									198316,
									198351
								],
								[
									198651,
									198687
								],
								[
									199073,
									199102
								],
								[
									199325,
									199345
								],
								[
									199785,
									199803
								],
								[
									199993,
									200016
								],
								[
									201690,
									201705
								],
								[
									201914,
									201938
								],
								[
									202795,
									202810
								],
								[
									203318,
									203337
								],
								[
									203530,
									203553
								],
								[
									205476,
									205491
								],
								[
									206548,
									206567
								],
								[
									207152,
									207174
								],
								[
									211863,
									211895
								],
								[
									212106,
									212127
								],
								[
									212928,
									212946
								],
								[
									213561,
									213579
								],
								[
									214270,
									214281
								],
								[
									215471,
									215484
								],
								[
									216576,
									216600
								],
								[
									216948,
									216960
								],
								[
									217468,
									217485
								],
								[
									217763,
									217774
								],
								[
									223794,
									223816
								],
								[
									224274,
									224299
								],
								[
									226981,
									226998
								],
								[
									227327,
									227342
								],
								[
									227690,
									227710
								],
								[
									228060,
									228074
								],
								[
									229244,
									229261
								],
								[
									229433,
									229447
								],
								[
									230187,
									230206
								],
								[
									232029,
									232049
								],
								[
									232368,
									232390
								],
								[
									233196,
									233215
								],
								[
									233616,
									233633
								],
								[
									233945,
									233957
								],
								[
									235308,
									235335
								],
								[
									236199,
									236214
								],
								[
									238546,
									238557
								],
								[
									239325,
									239341
								],
								[
									241972,
									241989
								],
								[
									242589,
									242611
								],
								[
									243594,
									243606
								],
								[
									243874,
									243895
								],
								[
									247116,
									247138
								],
								[
									254368,
									254387
								],
								[
									258519,
									258539
								],
								[
									258704,
									258723
								],
								[
									259192,
									259209
								],
								[
									259635,
									259649
								],
								[
									259806,
									259823
								],
								[
									263418,
									263441
								],
								[
									264538,
									264561
								],
								[
									265181,
									265205
								],
								[
									265864,
									265881
								],
								[
									275358,
									275383
								],
								[
									276145,
									276167
								],
								[
									276643,
									276670
								],
								[
									277037,
									277065
								],
								[
									277241,
									277268
								],
								[
									277442,
									277467
								],
								[
									277759,
									277782
								],
								[
									278306,
									278333
								],
								[
									278642,
									278660
								],
								[
									279096,
									279115
								],
								[
									279397,
									279424
								],
								[
									280003,
									280038
								],
								[
									280267,
									280290
								],
								[
									281522,
									281540
								],
								[
									282363,
									282386
								],
								[
									282979,
									282994
								],
								[
									283635,
									283653
								],
								[
									284718,
									284735
								],
								[
									285259,
									285274
								],
								[
									286376,
									286393
								],
								[
									286892,
									286914
								],
								[
									287332,
									287345
								],
								[
									287703,
									287717
								],
								[
									288046,
									288062
								],
								[
									288242,
									288262
								],
								[
									288481,
									288491
								],
								[
									288735,
									288756
								],
								[
									288975,
									288997
								],
								[
									289226,
									289250
								],
								[
									289346,
									289368
								],
								[
									289493,
									289505
								],
								[
									289720,
									289732
								],
								[
									289957,
									289970
								],
								[
									290310,
									290328
								],
								[
									292302,
									292316
								],
								[
									292434,
									292449
								],
								[
									292633,
									292645
								],
								[
									292827,
									292840
								],
								[
									294130,
									294139
								],
								[
									294242,
									294253
								],
								[
									294669,
									294677
								],
								[
									294905,
									294914
								],
								[
									296606,
									296625
								],
								[
									297107,
									297128
								],
								[
									297749,
									297772
								],
								[
									298316,
									298324
								],
								[
									298438,
									298445
								],
								[
									303990,
									303997
								],
								[
									304210,
									304228
								],
								[
									304246,
									304265
								],
								[
									306339,
									306354
								],
								[
									306461,
									306477
								],
								[
									306585,
									306597
								],
								[
									306715,
									306733
								],
								[
									307534,
									307550
								],
								[
									307880,
									307892
								],
								[
									308022,
									308033
								],
								[
									308215,
									308222
								],
								[
									309609,
									309626
								],
								[
									310593,
									310606
								],
								[
									310723,
									310738
								],
								[
									311088,
									311105
								],
								[
									312081,
									312094
								],
								[
									312215,
									312230
								],
								[
									312666,
									312680
								],
								[
									313997,
									314007
								],
								[
									314125,
									314138
								],
								[
									314362,
									314376
								],
								[
									315719,
									315729
								],
								[
									315861,
									315876
								],
								[
									315989,
									316008
								],
								[
									317155,
									317175
								],
								[
									319085,
									319100
								],
								[
									319198,
									319208
								],
								[
									319591,
									319606
								],
								[
									319812,
									319830
								],
								[
									320033,
									320063
								],
								[
									320908,
									320928
								],
								[
									321461,
									321480
								],
								[
									321580,
									321587
								],
								[
									323115,
									323136
								],
								[
									323261,
									323285
								],
								[
									323737,
									323760
								],
								[
									323942,
									323948
								],
								[
									324385,
									324393
								],
								[
									325100,
									325107
								],
								[
									327150,
									327158
								],
								[
									327474,
									327481
								],
								[
									329207,
									329215
								],
								[
									331369,
									331376
								],
								[
									331559,
									331578
								],
								[
									333236,
									333247
								],
								[
									333349,
									333364
								],
								[
									333500,
									333521
								],
								[
									333713,
									333729
								],
								[
									333830,
									333852
								],
								[
									334101,
									334118
								],
								[
									335446,
									335465
								],
								[
									335665,
									335678
								],
								[
									338695,
									338710
								],
								[
									339397,
									339414
								],
								[
									341877,
									341889
								],
								[
									341991,
									342004
								],
								[
									342194,
									342204
								],
								[
									342526,
									342532
								],
								[
									342738,
									342754
								],
								[
									343022,
									343036
								],
								[
									343238,
									343253
								],
								[
									343796,
									343809
								],
								[
									344653,
									344668
								],
								[
									345069,
									345086
								],
								[
									345762,
									345782
								],
								[
									346092,
									346107
								],
								[
									347621,
									347632
								],
								[
									347764,
									347771
								],
								[
									348429,
									348442
								],
								[
									348733,
									348750
								],
								[
									348989,
									349002
								],
								[
									349138,
									349147
								],
								[
									349333,
									349347
								],
								[
									349569,
									349585
								],
								[
									349814,
									349826
								],
								[
									350046,
									350063
								],
								[
									350837,
									350853
								],
								[
									351224,
									351244
								],
								[
									352108,
									352122
								],
								[
									352522,
									352548
								],
								[
									355971,
									355995
								],
								[
									357390,
									357415
								],
								[
									358518,
									358536
								],
								[
									358895,
									358916
								],
								[
									359983,
									360006
								],
								[
									360981,
									361006
								],
								[
									361948,
									361967
								],
								[
									363963,
									363979
								],
								[
									364347,
									364358
								],
								[
									365099,
									365123
								],
								[
									366523,
									366545
								],
								[
									370445,
									370457
								],
								[
									370993,
									371019
								],
								[
									372279,
									372299
								],
								[
									376400,
									376411
								],
								[
									379533,
									379553
								],
								[
									381611,
									381630
								],
								[
									382566,
									382587
								],
								[
									383729,
									383747
								],
								[
									387857,
									387870
								],
								[
									388069,
									388079
								],
								[
									392628,
									392639
								],
								[
									393550,
									393573
								],
								[
									394016,
									394028
								],
								[
									394768,
									394793
								],
								[
									394883,
									394897
								],
								[
									394979,
									394994
								],
								[
									395073,
									395086
								],
								[
									395234,
									395253
								],
								[
									395732,
									395748
								],
								[
									396090,
									396110
								],
								[
									396800,
									396811
								],
								[
									398031,
									398051
								],
								[
									398751,
									398762
								],
								[
									398976,
									398994
								],
								[
									400586,
									400596
								],
								[
									402825,
									402836
								],
								[
									403345,
									403358
								],
								[
									407021,
									407033
								],
								[
									407146,
									407159
								],
								[
									407322,
									407340
								],
								[
									407517,
									407534
								],
								[
									407714,
									407728
								],
								[
									408263,
									408280
								],
								[
									408648,
									408670
								],
								[
									408960,
									408978
								],
								[
									410033,
									410051
								],
								[
									410494,
									410513
								],
								[
									410827,
									410851
								],
								[
									411149,
									411175
								],
								[
									411400,
									411428
								],
								[
									411645,
									411677
								],
								[
									412390,
									412408
								],
								[
									413729,
									413754
								],
								[
									415366,
									415379
								],
								[
									415791,
									415812
								],
								[
									419131,
									419146
								],
								[
									419345,
									419359
								],
								[
									420516,
									420531
								],
								[
									420862,
									420876
								],
								[
									421972,
									421988
								],
								[
									423017,
									423032
								],
								[
									423784,
									423800
								],
								[
									424681,
									424696
								],
								[
									425282,
									425296
								],
								[
									425966,
									425993
								],
								[
									426421,
									426447
								],
								[
									426843,
									426868
								],
								[
									427322,
									427344
								],
								[
									427455,
									427479
								],
								[
									427574,
									427590
								],
								[
									427938,
									427955
								],
								[
									428359,
									428378
								],
								[
									430751,
									430772
								],
								[
									432840,
									432860
								],
								[
									432948,
									432959
								],
								[
									433760,
									433771
								],
								[
									434837,
									434861
								],
								[
									435655,
									435665
								],
								[
									437444,
									437462
								],
								[
									440418,
									440432
								],
								[
									441045,
									441062
								],
								[
									441782,
									441800
								],
								[
									445447,
									445469
								],
								[
									446654,
									446673
								],
								[
									446838,
									446853
								],
								[
									447416,
									447422
								],
								[
									447481,
									447485
								],
								[
									447625,
									447629
								],
								[
									447779,
									447782
								],
								[
									447853,
									447856
								],
								[
									447899,
									447902
								],
								[
									448094,
									448097
								],
								[
									448177,
									448180
								],
								[
									448223,
									448226
								],
								[
									448358,
									448364
								],
								[
									448445,
									448449
								],
								[
									448576,
									448580
								],
								[
									506121,
									506127
								],
								[
									515581,
									515588
								],
								[
									515812,
									515823
								],
								[
									516225,
									516244
								],
								[
									517268,
									517287
								],
								[
									517994,
									518020
								],
								[
									519434,
									519453
								],
								[
									519671,
									519689
								],
								[
									519880,
									519889
								],
								[
									520173,
									520186
								],
								[
									520464,
									520479
								],
								[
									521518,
									521533
								],
								[
									522071,
									522086
								],
								[
									522556,
									522573
								],
								[
									523180,
									523200
								],
								[
									523303,
									523318
								],
								[
									523333,
									523356
								],
								[
									523550,
									523572
								],
								[
									523754,
									523774
								],
								[
									523867,
									523884
								],
								[
									524260,
									524277
								],
								[
									526843,
									526869
								],
								[
									527739,
									527766
								],
								[
									527915,
									527938
								],
								[
									528176,
									528198
								],
								[
									528330,
									528365
								],
								[
									528552,
									528582
								],
								[
									528793,
									528825
								],
								[
									529328,
									529352
								],
								[
									531121,
									531151
								],
								[
									531795,
									531817
								],
								[
									532976,
									533001
								],
								[
									533226,
									533249
								],
								[
									533495,
									533515
								],
								[
									533530,
									533553
								],
								[
									534153,
									534181
								],
								[
									534351,
									534374
								],
								[
									535085,
									535120
								],
								[
									535239,
									535281
								],
								[
									535848,
									535872
								],
								[
									536708,
									536744
								],
								[
									537275,
									537301
								],
								[
									537612,
									537637
								],
								[
									537782,
									537809
								],
								[
									538023,
									538058
								],
								[
									538820,
									538850
								],
								[
									542417,
									542452
								],
								[
									543569,
									543592
								],
								[
									544915,
									544947
								],
								[
									548107,
									548115
								],
								[
									548549,
									548560
								],
								[
									548713,
									548723
								],
								[
									548800,
									548808
								],
								[
									549067,
									549076
								],
								[
									549144,
									549158
								],
								[
									549441,
									549460
								],
								[
									549574,
									549591
								],
								[
									554171,
									554184
								],
								[
									554667,
									554674
								],
								[
									555207,
									555219
								],
								[
									555475,
									555483
								],
								[
									555574,
									555577
								],
								[
									555610,
									555613
								],
								[
									555696,
									555699
								],
								[
									556082,
									556099
								],
								[
									556199,
									556216
								],
								[
									556268,
									556278
								],
								[
									556310,
									556320
								],
								[
									556978,
									556989
								],
								[
									558491,
									558505
								],
								[
									558954,
									558969
								],
								[
									559170,
									559190
								],
								[
									559462,
									559496
								],
								[
									559705,
									559727
								],
								[
									561075,
									561090
								],
								[
									564757,
									564780
								],
								[
									564940,
									564955
								],
								[
									567292,
									567305
								],
								[
									567918,
									567929
								],
								[
									569028,
									569038
								],
								[
									582750,
									582766
								],
								[
									583499,
									583514
								],
								[
									588508,
									588525
								],
								[
									590448,
									590458
								],
								[
									590814,
									590829
								],
								[
									591143,
									591158
								],
								[
									591306,
									591321
								],
								[
									591709,
									591716
								],
								[
									591807,
									591815
								],
								[
									591910,
									591918
								],
								[
									592013,
									592020
								],
								[
									592502,
									592511
								],
								[
									592599,
									592611
								],
								[
									592845,
									592857
								],
								[
									593273,
									593282
								],
								[
									593389,
									593399
								],
								[
									593696,
									593705
								],
								[
									594030,
									594039
								],
								[
									594326,
									594341
								],
								[
									595032,
									595040
								],
								[
									595243,
									595251
								],
								[
									595536,
									595553
								],
								[
									596003,
									596017
								],
								[
									596293,
									596316
								],
								[
									596647,
									596662
								],
								[
									596883,
									596906
								],
								[
									597068,
									597085
								],
								[
									597568,
									597578
								],
								[
									598725,
									598746
								],
								[
									598963,
									598972
								],
								[
									599306,
									599318
								],
								[
									599563,
									599570
								],
								[
									600116,
									600129
								],
								[
									600502,
									600514
								],
								[
									600835,
									600852
								],
								[
									601196,
									601213
								],
								[
									601889,
									601896
								],
								[
									602484,
									602498
								],
								[
									603193,
									603205
								],
								[
									603219,
									603229
								],
								[
									607491,
									607514
								],
								[
									607828,
									607841
								],
								[
									607883,
									607905
								],
								[
									608291,
									608326
								],
								[
									608368,
									608391
								],
								[
									608936,
									608957
								],
								[
									609016,
									609036
								],
								[
									609078,
									609092
								],
								[
									609140,
									609156
								],
								[
									609271,
									609286
								],
								[
									609329,
									609345
								],
								[
									609521,
									609538
								],
								[
									609891,
									609908
								],
								[
									613420,
									613434
								],
								[
									613667,
									613678
								],
								[
									617303,
									617313
								],
								[
									617327,
									617343
								],
								[
									617545,
									617564
								],
								[
									617832,
									617849
								],
								[
									618475,
									618501
								],
								[
									621323,
									621338
								],
								[
									622232,
									622256
								],
								[
									622921,
									622944
								],
								[
									626595,
									626616
								],
								[
									626676,
									626704
								],
								[
									626846,
									626873
								],
								[
									627776,
									627800
								],
								[
									628305,
									628326
								],
								[
									628913,
									628936
								],
								[
									629141,
									629155
								],
								[
									629181,
									629202
								],
								[
									629973,
									629982
								],
								[
									630407,
									630426
								],
								[
									630791,
									630805
								],
								[
									644692,
									644714
								],
								[
									648015,
									648029
								],
								[
									648494,
									648504
								],
								[
									652387,
									652400
								],
								[
									652546,
									652556
								],
								[
									655299,
									655318
								],
								[
									655492,
									655514
								],
								[
									655710,
									655723
								],
								[
									656664,
									656683
								],
								[
									657514,
									657548
								],
								[
									657999,
									658025
								],
								[
									658730,
									658760
								],
								[
									673047,
									673059
								],
								[
									673074,
									673093
								],
								[
									673678,
									673699
								],
								[
									693426,
									693441
								],
								[
									695175,
									695189
								],
								[
									699286,
									699306
								],
								[
									701884,
									701907
								],
								[
									702872,
									702894
								],
								[
									703572,
									703590
								],
								[
									704129,
									704140
								],
								[
									704238,
									704259
								],
								[
									711320,
									711340
								],
								[
									711479,
									711493
								],
								[
									712084,
									712097
								],
								[
									712176,
									712192
								],
								[
									712578,
									712593
								],
								[
									712707,
									712717
								],
								[
									714085,
									714096
								],
								[
									717339,
									717365
								],
								[
									717423,
									717441
								],
								[
									717530,
									717544
								],
								[
									717932,
									717944
								],
								[
									720844,
									720852
								],
								[
									721072,
									721078
								],
								[
									722413,
									722431
								],
								[
									729007,
									729029
								],
								[
									729220,
									729246
								],
								[
									750035,
									750052
								],
								[
									750452,
									750470
								],
								[
									750967,
									750985
								],
								[
									751984,
									752004
								],
								[
									752731,
									752748
								],
								[
									753014,
									753031
								],
								[
									753920,
									753936
								],
								[
									754135,
									754156
								],
								[
									754642,
									754655
								],
								[
									754911,
									754929
								],
								[
									755267,
									755285
								],
								[
									755683,
									755705
								],
								[
									756032,
									756054
								],
								[
									756114,
									756138
								],
								[
									756248,
									756280
								],
								[
									757509,
									757530
								],
								[
									757895,
									757926
								],
								[
									758983,
									759019
								],
								[
									759563,
									759577
								],
								[
									759664,
									759678
								],
								[
									759692,
									759710
								],
								[
									759934,
									759951
								],
								[
									760455,
									760474
								],
								[
									760504,
									760522
								],
								[
									762742,
									762759
								],
								[
									763168,
									763197
								],
								[
									764469,
									764490
								],
								[
									764770,
									764787
								],
								[
									764988,
									765007
								],
								[
									765021,
									765039
								],
								[
									765245,
									765263
								],
								[
									766879,
									766895
								],
								[
									767135,
									767153
								],
								[
									767785,
									767801
								],
								[
									767851,
									767872
								],
								[
									768011,
									768029
								],
								[
									770883,
									770899
								],
								[
									771215,
									771232
								],
								[
									772021,
									772041
								],
								[
									772535,
									772569
								],
								[
									773903,
									773928
								],
								[
									774894,
									774908
								],
								[
									779695,
									779719
								],
								[
									780479,
									780495
								],
								[
									780583,
									780599
								],
								[
									780932,
									780946
								],
								[
									781474,
									781486
								],
								[
									782030,
									782051
								],
								[
									783318,
									783335
								],
								[
									784285,
									784303
								],
								[
									785603,
									785609
								],
								[
									786205,
									786220
								],
								[
									791415,
									791430
								],
								[
									791808,
									791818
								],
								[
									792855,
									792870
								],
								[
									796138,
									796161
								],
								[
									796976,
									796995
								],
								[
									798519,
									798538
								],
								[
									799171,
									799191
								],
								[
									800645,
									800655
								],
								[
									800776,
									800787
								],
								[
									801123,
									801137
								],
								[
									808334,
									808346
								],
								[
									809274,
									809299
								],
								[
									812457,
									812472
								],
								[
									813416,
									813432
								],
								[
									813817,
									813833
								],
								[
									814683,
									814698
								],
								[
									815099,
									815120
								],
								[
									815270,
									815291
								],
								[
									815517,
									815545
								],
								[
									815770,
									815793
								],
								[
									817121,
									817151
								],
								[
									818964,
									818976
								],
								[
									819364,
									819382
								],
								[
									820576,
									820591
								],
								[
									821009,
									821026
								],
								[
									835492,
									835520
								],
								[
									835784,
									835798
								],
								[
									836045,
									836073
								],
								[
									837592,
									837619
								],
								[
									840486,
									840514
								],
								[
									840801,
									840820
								],
								[
									841117,
									841135
								],
								[
									845833,
									845853
								],
								[
									846252,
									846273
								],
								[
									848831,
									848842
								],
								[
									848853,
									848855
								],
								[
									848897,
									848899
								],
								[
									848962,
									848964
								],
								[
									849053,
									849063
								],
								[
									851530,
									851561
								],
								[
									855593,
									855607
								],
								[
									856992,
									857005
								],
								[
									857508,
									857525
								],
								[
									868332,
									868348
								],
								[
									868791,
									868811
								],
								[
									869855,
									869864
								],
								[
									870124,
									870138
								],
								[
									870730,
									870746
								],
								[
									871739,
									871753
								],
								[
									872187,
									872201
								],
								[
									873524,
									873538
								],
								[
									905177,
									905191
								],
								[
									905262,
									905270
								],
								[
									906362,
									906380
								],
								[
									910314,
									910334
								],
								[
									911457,
									911475
								],
								[
									919233,
									919255
								],
								[
									920443,
									920462
								],
								[
									922557,
									922586
								],
								[
									924280,
									924315
								],
								[
									925058,
									925081
								],
								[
									942874,
									942896
								],
								[
									943301,
									943317
								],
								[
									944128,
									944141
								],
								[
									944467,
									944490
								],
								[
									945417,
									945432
								],
								[
									945560,
									945572
								],
								[
									946136,
									946153
								],
								[
									949454,
									949469
								],
								[
									949902,
									949915
								],
								[
									950317,
									950328
								],
								[
									950700,
									950707
								],
								[
									950892,
									950908
								],
								[
									951348,
									951365
								],
								[
									951553,
									951565
								],
								[
									951580,
									951599
								],
								[
									951666,
									951689
								],
								[
									951789,
									951815
								],
								[
									952516,
									952534
								],
								[
									953277,
									953296
								],
								[
									953703,
									953721
								],
								[
									954391,
									954400
								],
								[
									955106,
									955119
								],
								[
									955573,
									955582
								],
								[
									955655,
									955665
								],
								[
									955796,
									955806
								],
								[
									955922,
									955932
								],
								[
									956066,
									956079
								],
								[
									956159,
									956173
								],
								[
									956253,
									956265
								],
								[
									956384,
									956398
								],
								[
									957427,
									957438
								],
								[
									957697,
									957709
								],
								[
									959225,
									959249
								],
								[
									960163,
									960177
								],
								[
									960462,
									960476
								],
								[
									963294,
									963311
								],
								[
									963361,
									963380
								],
								[
									966110,
									966124
								],
								[
									967464,
									967477
								],
								[
									968472,
									968489
								],
								[
									969408,
									969426
								],
								[
									969808,
									969827
								],
								[
									970195,
									970220
								],
								[
									970802,
									970819
								],
								[
									974173,
									974192
								],
								[
									975149,
									975164
								],
								[
									976451,
									976465
								],
								[
									977045,
									977058
								],
								[
									977135,
									977148
								],
								[
									977826,
									977839
								],
								[
									977864,
									977881
								],
								[
									978043,
									978052
								],
								[
									978249,
									978259
								],
								[
									978493,
									978503
								],
								[
									978722,
									978732
								],
								[
									978951,
									978964
								],
								[
									979158,
									979172
								],
								[
									979421,
									979438
								],
								[
									979528,
									979545
								],
								[
									979704,
									979714
								],
								[
									979966,
									979980
								],
								[
									980515,
									980526
								],
								[
									980768,
									980781
								],
								[
									981482,
									981494
								],
								[
									981677,
									981700
								],
								[
									983183,
									983196
								],
								[
									985967,
									985983
								],
								[
									986015,
									986033
								],
								[
									986296,
									986313
								],
								[
									986425,
									986443
								],
								[
									992440,
									992453
								],
								[
									995562,
									995578
								],
								[
									996368,
									996380
								],
								[
									997374,
									997391
								],
								[
									998702,
									998720
								],
								[
									999234,
									999258
								],
								[
									999879,
									999890
								],
								[
									1000470,
									1000488
								],
								[
									1000900,
									1000916
								],
								[
									1003647,
									1003665
								],
								[
									1004673,
									1004687
								],
								[
									1004913,
									1004926
								],
								[
									1005800,
									1005821
								],
								[
									1005907,
									1005929
								],
								[
									1006015,
									1006036
								],
								[
									1006119,
									1006133
								],
								[
									1006293,
									1006313
								],
								[
									1006418,
									1006427
								],
								[
									1006988,
									1007019
								],
								[
									1007592,
									1007622
								],
								[
									1010708,
									1010734
								],
								[
									1011034,
									1011056
								],
								[
									1011259,
									1011281
								],
								[
									1012274,
									1012292
								],
								[
									1012655,
									1012672
								],
								[
									1012837,
									1012862
								],
								[
									1013160,
									1013184
								],
								[
									1013480,
									1013508
								],
								[
									1013791,
									1013805
								],
								[
									1013977,
									1013992
								],
								[
									1014245,
									1014263
								],
								[
									1014521,
									1014532
								],
								[
									1015873,
									1015888
								],
								[
									1016013,
									1016027
								],
								[
									1018337,
									1018358
								],
								[
									1018686,
									1018711
								],
								[
									1019653,
									1019674
								],
								[
									1020200,
									1020216
								],
								[
									1020745,
									1020769
								],
								[
									1021227,
									1021251
								],
								[
									1021546,
									1021570
								],
								[
									1022264,
									1022290
								],
								[
									1022613,
									1022639
								],
								[
									1023676,
									1023710
								],
								[
									1025784,
									1025819
								],
								[
									1027110,
									1027133
								],
								[
									1029256,
									1029285
								],
								[
									1029465,
									1029496
								],
								[
									1029676,
									1029690
								],
								[
									1029883,
									1029905
								],
								[
									1030318,
									1030345
								],
								[
									1030934,
									1030958
								],
								[
									1031559,
									1031576
								],
								[
									1031703,
									1031721
								],
								[
									1033117,
									1033141
								],
								[
									1033293,
									1033309
								],
								[
									1033963,
									1033977
								],
								[
									1035315,
									1035333
								],
								[
									1036389,
									1036410
								],
								[
									1039207,
									1039227
								],
								[
									1039762,
									1039774
								],
								[
									1041272,
									1041293
								],
								[
									1042386,
									1042409
								],
								[
									1042643,
									1042666
								],
								[
									1043037,
									1043060
								],
								[
									1043907,
									1043937
								],
								[
									1044664,
									1044690
								],
								[
									1048897,
									1048914
								],
								[
									1049102,
									1049125
								],
								[
									1050948,
									1050963
								],
								[
									1051227,
									1051242
								],
								[
									1051494,
									1051507
								],
								[
									1051699,
									1051713
								],
								[
									1052831,
									1052848
								],
								[
									1053616,
									1053632
								],
								[
									1053877,
									1053893
								],
								[
									1056361,
									1056381
								],
								[
									1057464,
									1057487
								],
								[
									1058224,
									1058241
								],
								[
									1059154,
									1059174
								],
								[
									1060819,
									1060836
								],
								[
									1061988,
									1062018
								],
								[
									1062374,
									1062389
								],
								[
									1063157,
									1063177
								],
								[
									1063858,
									1063871
								],
								[
									1066909,
									1066920
								],
								[
									1067596,
									1067612
								],
								[
									1067826,
									1067837
								],
								[
									1067934,
									1067955
								],
								[
									1069378,
									1069399
								],
								[
									1069716,
									1069731
								],
								[
									1071426,
									1071460
								],
								[
									1071512,
									1071542
								],
								[
									1071629,
									1071643
								],
								[
									1075721,
									1075736
								],
								[
									1077939,
									1077952
								],
								[
									1078724,
									1078741
								],
								[
									1079802,
									1079818
								],
								[
									1080898,
									1080918
								],
								[
									1081777,
									1081790
								],
								[
									1083236,
									1083253
								],
								[
									1083843,
									1083856
								],
								[
									1085190,
									1085202
								],
								[
									1086596,
									1086609
								],
								[
									1088691,
									1088707
								],
								[
									1090393,
									1090407
								],
								[
									1093508,
									1093527
								],
								[
									1094300,
									1094319
								],
								[
									1096138,
									1096154
								],
								[
									1097280,
									1097289
								],
								[
									1097299,
									1097317
								],
								[
									1097411,
									1097431
								],
								[
									1099115,
									1099128
								],
								[
									1101460,
									1101479
								],
								[
									1101494,
									1101521
								],
								[
									1101732,
									1101754
								],
								[
									1101982,
									1101997
								],
								[
									1102358,
									1102382
								],
								[
									1103220,
									1103242
								],
								[
									1104678,
									1104704
								],
								[
									1107194,
									1107215
								],
								[
									1108779,
									1108794
								],
								[
									1108986,
									1109004
								],
								[
									1109199,
									1109218
								],
								[
									1109440,
									1109463
								],
								[
									1110883,
									1110901
								],
								[
									1111318,
									1111335
								],
								[
									1111465,
									1111477
								],
								[
									1111728,
									1111746
								],
								[
									1112288,
									1112305
								],
								[
									1112882,
									1112905
								],
								[
									1113599,
									1113620
								],
								[
									1114665,
									1114676
								],
								[
									1115264,
									1115277
								],
								[
									1115606,
									1115628
								],
								[
									1116007,
									1116026
								],
								[
									1116467,
									1116486
								],
								[
									1116756,
									1116774
								],
								[
									1117092,
									1117118
								],
								[
									1117948,
									1117977
								],
								[
									1119056,
									1119081
								],
								[
									1119559,
									1119580
								],
								[
									1120455,
									1120473
								],
								[
									1120934,
									1120956
								],
								[
									1121344,
									1121367
								],
								[
									1122180,
									1122193
								],
								[
									1123232,
									1123256
								],
								[
									1124124,
									1124144
								],
								[
									1124727,
									1124743
								],
								[
									1125355,
									1125376
								],
								[
									1125909,
									1125925
								],
								[
									1126360,
									1126370
								],
								[
									1126595,
									1126614
								],
								[
									1126996,
									1127010
								],
								[
									1127423,
									1127443
								],
								[
									1127687,
									1127704
								],
								[
									1129078,
									1129090
								],
								[
									1129142,
									1129160
								],
								[
									1130490,
									1130509
								],
								[
									1131213,
									1131228
								],
								[
									1132710,
									1132737
								],
								[
									1135756,
									1135773
								],
								[
									1138992,
									1139007
								],
								[
									1141159,
									1141178
								],
								[
									1141902,
									1141918
								],
								[
									1142565,
									1142580
								],
								[
									1143253,
									1143266
								],
								[
									1144775,
									1144791
								],
								[
									1145758,
									1145772
								],
								[
									1146315,
									1146332
								],
								[
									1146501,
									1146513
								],
								[
									1146951,
									1146967
								],
								[
									1147531,
									1147554
								],
								[
									1148040,
									1148061
								],
								[
									1149043,
									1149059
								],
								[
									1149662,
									1149679
								],
								[
									1150022,
									1150041
								],
								[
									1151534,
									1151552
								],
								[
									1152874,
									1152897
								],
								[
									1153984,
									1154004
								],
								[
									1159919,
									1159949
								],
								[
									1160290,
									1160297
								],
								[
									1160534,
									1160541
								],
								[
									1160739,
									1160754
								],
								[
									1161885,
									1161897
								],
								[
									1162016,
									1162029
								],
								[
									1162752,
									1162765
								],
								[
									1163271,
									1163285
								],
								[
									1163335,
									1163347
								],
								[
									1163640,
									1163653
								],
								[
									1163956,
									1163970
								],
								[
									1164131,
									1164145
								],
								[
									1164388,
									1164402
								],
								[
									1167594,
									1167609
								],
								[
									1167959,
									1167976
								],
								[
									1170091,
									1170110
								],
								[
									1170403,
									1170420
								],
								[
									1172028,
									1172058
								],
								[
									1172793,
									1172806
								],
								[
									1173173,
									1173185
								],
								[
									1173497,
									1173518
								],
								[
									1175679,
									1175696
								],
								[
									1177574,
									1177594
								],
								[
									1178951,
									1178969
								],
								[
									1179495,
									1179514
								],
								[
									1180594,
									1180612
								],
								[
									1181250,
									1181274
								],
								[
									1181403,
									1181414
								],
								[
									1181583,
									1181597
								],
								[
									1185266,
									1185281
								],
								[
									1187845,
									1187858
								],
								[
									1188852,
									1188866
								],
								[
									1189164,
									1189186
								],
								[
									1191362,
									1191388
								],
								[
									1191403,
									1191438
								],
								[
									1191722,
									1191752
								],
								[
									1192062,
									1192092
								],
								[
									1193502,
									1193527
								],
								[
									1195391,
									1195402
								],
								[
									1195416,
									1195433
								],
								[
									1195582,
									1195599
								],
								[
									1195778,
									1195797
								],
								[
									1196537,
									1196558
								],
								[
									1197076,
									1197100
								],
								[
									1203015,
									1203038
								],
								[
									1204671,
									1204693
								],
								[
									1209940,
									1209969
								],
								[
									1210039,
									1210060
								],
								[
									1210944,
									1210961
								],
								[
									1211171,
									1211187
								],
								[
									1214394,
									1214407
								],
								[
									1214980,
									1214992
								],
								[
									1215140,
									1215165
								],
								[
									1216979,
									1216992
								],
								[
									1217983,
									1218003
								],
								[
									1218021,
									1218042
								],
								[
									1218173,
									1218186
								],
								[
									1219528,
									1219542
								],
								[
									1225915,
									1225931
								],
								[
									1229701,
									1229718
								],
								[
									1230291,
									1230310
								],
								[
									1230485,
									1230501
								],
								[
									1230668,
									1230688
								],
								[
									1231288,
									1231313
								],
								[
									1231810,
									1231824
								],
								[
									1232376,
									1232390
								],
								[
									1232902,
									1232916
								],
								[
									1233569,
									1233594
								],
								[
									1233837,
									1233855
								],
								[
									1235290,
									1235308
								],
								[
									1235516,
									1235529
								],
								[
									1235764,
									1235793
								],
								[
									1235885,
									1235901
								],
								[
									1236507,
									1236530
								],
								[
									1237593,
									1237616
								],
								[
									1238739,
									1238760
								],
								[
									1239380,
									1239406
								],
								[
									1240064,
									1240076
								],
								[
									1241168,
									1241180
								],
								[
									1242639,
									1242651
								],
								[
									1244298,
									1244312
								],
								[
									1245403,
									1245428
								],
								[
									1248370,
									1248398
								],
								[
									1251278,
									1251302
								],
								[
									1252665,
									1252678
								],
								[
									1252839,
									1252870
								],
								[
									1256163,
									1256188
								],
								[
									1257153,
									1257166
								],
								[
									1258095,
									1258111
								],
								[
									1258753,
									1258773
								],
								[
									1259579,
									1259594
								],
								[
									1260022,
									1260049
								],
								[
									1260183,
									1260201
								],
								[
									1261160,
									1261180
								],
								[
									1261871,
									1261892
								],
								[
									1262357,
									1262375
								],
								[
									1262836,
									1262854
								],
								[
									1263215,
									1263232
								],
								[
									1263366,
									1263391
								],
								[
									1264213,
									1264226
								],
								[
									1264500,
									1264516
								],
								[
									1265344,
									1265355
								],
								[
									1265750,
									1265760
								],
								[
									1265834,
									1265852
								],
								[
									1268942,
									1268959
								],
								[
									1269225,
									1269237
								],
								[
									1270030,
									1270045
								],
								[
									1270392,
									1270407
								],
								[
									1271326,
									1271340
								],
								[
									1272242,
									1272257
								],
								[
									1272559,
									1272576
								],
								[
									1273065,
									1273082
								],
								[
									1273280,
									1273294
								],
								[
									1274004,
									1274014
								],
								[
									1274719,
									1274729
								],
								[
									1275134,
									1275144
								],
								[
									1275507,
									1275520
								],
								[
									1275929,
									1275941
								],
								[
									1276351,
									1276366
								],
								[
									1276586,
									1276600
								],
								[
									1277886,
									1277902
								],
								[
									1278541,
									1278552
								],
								[
									1279080,
									1279097
								],
								[
									1279112,
									1279137
								],
								[
									1279573,
									1279593
								],
								[
									1279876,
									1279898
								],
								[
									1280592,
									1280612
								],
								[
									1285613,
									1285634
								],
								[
									1287346,
									1287364
								],
								[
									1287619,
									1287632
								],
								[
									1287726,
									1287755
								],
								[
									1287862,
									1287883
								],
								[
									1288040,
									1288061
								],
								[
									1288075,
									1288104
								],
								[
									1288172,
									1288198
								],
								[
									1288410,
									1288430
								],
								[
									1289414,
									1289447
								],
								[
									1289626,
									1289651
								],
								[
									1291067,
									1291081
								],
								[
									1291216,
									1291247
								],
								[
									1291930,
									1291971
								],
								[
									1292095,
									1292124
								],
								[
									1293121,
									1293158
								],
								[
									1293419,
									1293451
								],
								[
									1293665,
									1293697
								],
								[
									1295193,
									1295213
								],
								[
									1295658,
									1295673
								],
								[
									1296246,
									1296268
								],
								[
									1297534,
									1297553
								],
								[
									1297893,
									1297916
								],
								[
									1298121,
									1298146
								],
								[
									1299026,
									1299049
								],
								[
									1299184,
									1299202
								],
								[
									1301314,
									1301340
								],
								[
									1301925,
									1301955
								],
								[
									1303923,
									1303937
								],
								[
									1308954,
									1308969
								],
								[
									1311169,
									1311189
								],
								[
									1312816,
									1312831
								],
								[
									1313619,
									1313635
								],
								[
									1313854,
									1313884
								],
								[
									1314051,
									1314077
								],
								[
									1314254,
									1314282
								],
								[
									1315197,
									1315215
								],
								[
									1317306,
									1317340
								],
								[
									1317564,
									1317610
								],
								[
									1318126,
									1318153
								],
								[
									1318168,
									1318205
								],
								[
									1318455,
									1318487
								],
								[
									1318764,
									1318794
								],
								[
									1319494,
									1319526
								],
								[
									1324804,
									1324826
								],
								[
									1329141,
									1329155
								],
								[
									1329336,
									1329349
								],
								[
									1329494,
									1329511
								],
								[
									1329674,
									1329684
								],
								[
									1329981,
									1330000
								],
								[
									1331687,
									1331698
								],
								[
									1332043,
									1332057
								],
								[
									1332324,
									1332337
								],
								[
									1332692,
									1332711
								],
								[
									1334389,
									1334405
								],
								[
									1334957,
									1334975
								],
								[
									1336816,
									1336824
								],
								[
									1336945,
									1336954
								],
								[
									1337107,
									1337120
								],
								[
									1337215,
									1337231
								],
								[
									1337593,
									1337612
								],
								[
									1338023,
									1338037
								],
								[
									1338175,
									1338187
								],
								[
									1338305,
									1338319
								],
								[
									1338983,
									1338998
								],
								[
									1340060,
									1340069
								],
								[
									1340296,
									1340311
								],
								[
									1340883,
									1340897
								],
								[
									1341366,
									1341380
								],
								[
									1342518,
									1342533
								],
								[
									1345332,
									1345340
								],
								[
									1345473,
									1345492
								],
								[
									1347573,
									1347584
								],
								[
									1348138,
									1348156
								],
								[
									1348260,
									1348282
								],
								[
									1348458,
									1348475
								],
								[
									1348857,
									1348881
								],
								[
									1349220,
									1349249
								],
								[
									1349566,
									1349589
								],
								[
									1350163,
									1350174
								],
								[
									1350482,
									1350498
								],
								[
									1350707,
									1350720
								],
								[
									1354525,
									1354536
								],
								[
									1354676,
									1354702
								],
								[
									1355481,
									1355506
								],
								[
									1355809,
									1355824
								],
								[
									1356041,
									1356056
								],
								[
									1356335,
									1356350
								],
								[
									1356780,
									1356794
								],
								[
									1360861,
									1360880
								],
								[
									1361310,
									1361329
								],
								[
									1361444,
									1361469
								],
								[
									1362371,
									1362391
								],
								[
									1363285,
									1363313
								],
								[
									1366264,
									1366283
								],
								[
									1366436,
									1366470
								],
								[
									1367665,
									1367689
								],
								[
									1368087,
									1368110
								],
								[
									1368266,
									1368285
								],
								[
									1369385,
									1369409
								],
								[
									1370238,
									1370257
								],
								[
									1372015,
									1372036
								],
								[
									1372280,
									1372298
								],
								[
									1372726,
									1372744
								],
								[
									1373251,
									1373268
								],
								[
									1373402,
									1373415
								],
								[
									1374615,
									1374629
								],
								[
									1375679,
									1375692
								],
								[
									1376288,
									1376305
								],
								[
									1378560,
									1378581
								],
								[
									1379324,
									1379344
								],
								[
									1379770,
									1379790
								],
								[
									1380324,
									1380343
								],
								[
									1380475,
									1380496
								],
								[
									1380764,
									1380783
								],
								[
									1381646,
									1381667
								],
								[
									1381976,
									1382001
								],
								[
									1383083,
									1383106
								],
								[
									1384457,
									1384480
								],
								[
									1387252,
									1387273
								],
								[
									1388486,
									1388508
								],
								[
									1389339,
									1389359
								],
								[
									1389649,
									1389666
								],
								[
									1390344,
									1390359
								],
								[
									1392443,
									1392459
								],
								[
									1396328,
									1396352
								],
								[
									1397388,
									1397410
								],
								[
									1397539,
									1397560
								],
								[
									1397665,
									1397689
								],
								[
									1397812,
									1397832
								],
								[
									1398984,
									1399013
								],
								[
									1399559,
									1399588
								],
								[
									1400851,
									1400875
								],
								[
									1403020,
									1403043
								],
								[
									1404521,
									1404540
								],
								[
									1406749,
									1406774
								],
								[
									1407240,
									1407262
								],
								[
									1407696,
									1407718
								],
								[
									1407949,
									1407970
								],
								[
									1408104,
									1408130
								],
								[
									1408951,
									1408964
								],
								[
									1408978,
									1408999
								],
								[
									1410493,
									1410510
								],
								[
									1412507,
									1412528
								],
								[
									1413232,
									1413259
								],
								[
									1414161,
									1414186
								],
								[
									1415855,
									1415880
								],
								[
									1416758,
									1416776
								],
								[
									1417243,
									1417270
								],
								[
									1419518,
									1419544
								],
								[
									1429839,
									1429867
								],
								[
									1431633,
									1431653
								],
								[
									1431737,
									1431765
								],
								[
									1431972,
									1432000
								],
								[
									1432153,
									1432170
								],
								[
									1432534,
									1432555
								],
								[
									1432766,
									1432793
								],
								[
									1433024,
									1433058
								],
								[
									1433354,
									1433379
								],
								[
									1433970,
									1433992
								],
								[
									1434532,
									1434568
								],
								[
									1434665,
									1434695
								],
								[
									1434936,
									1434956
								],
								[
									1435676,
									1435695
								],
								[
									1436178,
									1436195
								],
								[
									1436522,
									1436543
								],
								[
									1439220,
									1439235
								],
								[
									1439778,
									1439801
								],
								[
									1440155,
									1440177
								],
								[
									1440350,
									1440370
								],
								[
									1440628,
									1440653
								],
								[
									1440848,
									1440873
								],
								[
									1441159,
									1441188
								],
								[
									1441624,
									1441653
								],
								[
									1442277,
									1442299
								],
								[
									1442921,
									1442951
								],
								[
									1443324,
									1443351
								],
								[
									1445524,
									1445542
								],
								[
									1445783,
									1445813
								],
								[
									1446076,
									1446110
								],
								[
									1446965,
									1446986
								],
								[
									1447936,
									1447966
								],
								[
									1448580,
									1448599
								],
								[
									1450949,
									1450966
								],
								[
									1451425,
									1451450
								],
								[
									1452403,
									1452422
								],
								[
									1454377,
									1454396
								],
								[
									1455618,
									1455640
								],
								[
									1461245,
									1461264
								],
								[
									1462706,
									1462728
								],
								[
									1464003,
									1464023
								],
								[
									1465683,
									1465706
								],
								[
									1466930,
									1466944
								],
								[
									1467223,
									1467237
								],
								[
									1467346,
									1467361
								],
								[
									1467472,
									1467487
								],
								[
									1467598,
									1467614
								],
								[
									1467727,
									1467742
								],
								[
									1467899,
									1467915
								],
								[
									1468097,
									1468112
								],
								[
									1468269,
									1468285
								],
								[
									1468453,
									1468470
								],
								[
									1468592,
									1468609
								],
								[
									1468737,
									1468751
								],
								[
									1468849,
									1468864
								],
								[
									1468963,
									1468978
								],
								[
									1469077,
									1469093
								],
								[
									1469193,
									1469208
								],
								[
									1469307,
									1469323
								],
								[
									1469445,
									1469460
								],
								[
									1469556,
									1469572
								],
								[
									1469677,
									1469694
								],
								[
									1469795,
									1469812
								],
								[
									1469906,
									1469921
								],
								[
									1470153,
									1470170
								],
								[
									1471394,
									1471413
								],
								[
									1477873,
									1477904
								],
								[
									1478095,
									1478111
								],
								[
									1478795,
									1478817
								],
								[
									1479768,
									1479798
								],
								[
									1481068,
									1481097
								],
								[
									1482906,
									1482932
								],
								[
									1485054,
									1485078
								],
								[
									1485531,
									1485550
								],
								[
									1485791,
									1485814
								],
								[
									1487273,
									1487293
								],
								[
									1489601,
									1489621
								],
								[
									1494123,
									1494136
								],
								[
									1494152,
									1494170
								],
								[
									1495938,
									1495951
								],
								[
									1497138,
									1497140
								],
								[
									1497554,
									1497556
								],
								[
									1499840,
									1499856
								],
								[
									1501177,
									1501198
								],
								[
									1501583,
									1501598
								],
								[
									1501775,
									1501790
								],
								[
									1503904,
									1503921
								],
								[
									1506215,
									1506237
								],
								[
									1506425,
									1506451
								],
								[
									1510222,
									1510235
								],
								[
									1510439,
									1510467
								],
								[
									1511061,
									1511077
								],
								[
									1511136,
									1511159
								],
								[
									1511360,
									1511387
								],
								[
									1512893,
									1512921
								],
								[
									1517047,
									1517074
								],
								[
									1518715,
									1518744
								],
								[
									1519755,
									1519771
								],
								[
									1521830,
									1521850
								]
							],
							"symlist":
							[
								"  typed_array_size_log2",
								"JSErrorEnum",
								"JSShape",
								"JSString",
								"JSAtomStruct",
								"JSGCPhaseEnum",
								"OPCodeEnum",
								"JSNumericOperations",
								"JSRuntime",
								"JSStackFrame",
								"JSClass",
								"JSStackFrame",
								"JSGCObjectTypeEnum",
								"JSGCObjectHeader",
								"JSVarRef",
								"JSFloatEnv",
								"JSBigFloat",
								"JSBigDecimal",
								"JSAutoInitIDEnum",
								"JSContext",
								"JSFloat64Union",
								"JSAtomKindEnum",
								"JSString",
								"JSClosureVar",
								"JSVarScope",
								"JSVarKindEnum",
								"JSVarDef",
								"JSFunctionKindEnum",
								"JSFunctionBytecode",
								"JSBoundFunction",
								"JSIteratorKindEnum",
								"JSForInIterator",
								"JSRegExp",
								"JSProxyData",
								"JSArrayBuffer",
								"JSTypedArray",
								"JSAsyncFunctionState",
								"JSAsyncFunctionData",
								"JSOverloadableOperatorEnum",
								"JSBinaryOperatorDefEntry",
								"JSBinaryOperatorDef",
								"JSOperatorSetData",
								"JSReqModuleEntry",
								"JSExportTypeEnum",
								"JSExportEntry",
								"JSStarExportEntry",
								"JSImportEntry",
								"JSModuleDef",
								"JSJobEntry",
								"JSProperty",
								"JSShapeProperty",
								"JSShape",
								"JSObject",
								"JSMapRecord",
								"JSBoundFunction",
								"JSCFunctionDataRecord",
								"JSCClosureRecord",
								"JSForInIterator",
								"JSArrayBuffer",
								"JSTypedArray",
								"JSFloatEnv",
								"JSOperatorSetData",
								"JSMapState",
								"JSMapIteratorData",
								"JSArrayIteratorData",
								"JSRegExpStringIteratorData",
								"JSGeneratorData",
								"JSProxyData",
								"JSPromiseData",
								"JSPromiseFunctionData",
								"JSAsyncFunctionData",
								"JSAsyncFromSyncIteratorData",
								"JSAsyncGeneratorData",
								"JSFunctionBytecode",
								"JSTypedArray",
								"DEF",
								"DEF",
								"FMT",
								"DEF",
								"OPCodeFormat",
								"OPCodeEnum",
								"FMT",
								"DEF",
								"  def",
								"FMT",
								"DEF",
								"  def",
								"JS_InitAtoms",
								"  __JS_NewAtomInit",
								"JS_FreeAtomStruct",
								"  free_function_bytecode",
								"  js_call_c_function",
								"  js_call_bound_function",
								"JS_CallInternal",
								"JS_CallConstructorInternal",
								"JS_CallFree",
								"JS_InvokeFree",
								"JS_ToArrayLengthFree",
								"JS_EvalObject",
								"JS_ThrowInternalError",
								"JS_DumpAtoms",
								"JS_DumpString",
								"JS_DumpObjectHeader",
								"JS_DumpObject",
								"JS_DumpGCObject",
								"JS_DumpValueShort",
								"JS_DumpValue",
								"JS_PrintValue",
								"JS_DumpShapes",
								"  js_function_apply",
								"  js_array_finalizer",
								"  js_array_mark",
								"  js_object_data_finalizer",
								"  js_object_data_mark",
								"  js_c_function_finalizer",
								"  js_c_function_mark",
								"  js_bytecode_function_finalizer",
								"  js_bytecode_function_mark",
								"  js_bound_function_finalizer",
								"  js_bound_function_mark",
								"  js_for_in_iterator_finalizer",
								"  js_for_in_iterator_mark",
								"  js_regexp_finalizer",
								"  js_array_buffer_finalizer",
								"  js_typed_array_finalizer",
								"  js_typed_array_mark",
								"  js_proxy_finalizer",
								"  js_proxy_mark",
								"  js_map_finalizer",
								"  js_map_mark",
								"  js_map_iterator_finalizer",
								"  js_map_iterator_mark",
								"  js_array_iterator_finalizer",
								"  js_array_iterator_mark",
								"  js_regexp_string_iterator_finalizer",
								"  js_regexp_string_iterator_mark",
								"  js_generator_finalizer",
								"  js_generator_mark",
								"  js_promise_finalizer",
								"  js_promise_mark",
								"  js_promise_resolve_function_finalizer",
								"  js_promise_resolve_function_mark",
								"  js_operator_set_finalizer",
								"  js_operator_set_mark",
								"JS_ToStringFree",
								"JS_ToBoolFree",
								"JS_ToInt32Free",
								"JS_ToFloat64Free",
								"JS_ToUint8ClampFree",
								"  js_compile_regexp",
								"  js_regexp_constructor_internal",
								"  gc_decref",
								"JS_NewClass1",
								"JSStrictEqModeEnum",
								"  js_strict_eq2",
								"  js_strict_eq",
								"  js_same_value",
								"  js_same_value_zero",
								"JS_ToObject",
								"JS_ToObjectFree",
								"  add_property",
								"  js_float_env_finalizer",
								"JS_NewBigFloat",
								"JS_GetBigFloat",
								"JS_NewBigDecimal",
								"JS_GetBigDecimal",
								"JS_NewBigInt",
								"JS_GetBigInt",
								"JS_CompactBigInt1",
								"JS_CompactBigInt",
								"JS_ToBigInt64Free",
								"JS_ToBigInt",
								"JS_FreeBigInt",
								"JS_ToBigFloat",
								"JS_ToBigDecimalFree",
								"JS_ToBigDecimal",
								"JS_ThrowOutOfMemory",
								"JS_ThrowTypeErrorRevokedProxy",
								"  js_proxy_getPrototypeOf",
								"  js_proxy_setPrototypeOf",
								"  js_proxy_isExtensible",
								"  js_proxy_preventExtensions",
								"  js_proxy_isArray",
								"JS_CreateProperty",
								"  js_string_memcmp",
								"  reset_weak_ref",
								"  js_array_buffer_constructor3",
								"  js_get_array_buffer",
								"  js_typed_array_constructor",
								"  typed_array_is_detached",
								"  typed_array_get_length",
								"JS_ThrowTypeErrorDetachedArrayBuffer",
								"  get_var_ref",
								"  js_generator_function_call",
								"  js_async_function_resolve_finalizer",
								"  js_async_function_resolve_mark",
								"JS_EvalInternal",
								"  js_free_module_def",
								"  js_mark_module_def",
								"  js_import_meta",
								"  js_dynamic_import",
								"  free_var_ref",
								"  js_new_promise_capability",
								"  perform_promise_then",
								"  js_promise_resolve",
								"  js_string_compare",
								"JS_ToNumber",
								"JS_SetPropertyValue",
								"JS_NumberIsInteger",
								"JS_NumberIsNegativeOrMinusZero",
								"JS_ToNumberFree",
								"JS_GetOwnPropertyInternal",
								"  js_free_desc",
								"  async_func_mark",
								"JS_AddIntrinsicBasicObjects",
								"  js_free_shape",
								"  js_free_shape_null",
								"  js_shape_prepare_update",
								"  init_shape_hash",
								"  js_get_length32",
								"  js_get_length64",
								"  free_arg_list",
								"  build_arg_list",
								"  js_get_fast_array",
								"JS_CreateAsyncFromSyncIterator",
								"  js_c_function_data_finalizer",
								"  js_c_function_data_mark",
								"  js_c_function_data_call",
								"  js_c_closure_finalizer",
								"  js_c_closure_call",
								"  js_symbol_to_atom",
								"  add_gc_object",
								"  remove_gc_object",
								"  js_async_function_free0",
								"  js_instantiate_prototype",
								"  js_module_ns_autoinit",
								"JS_InstantiateFunctionListItem2",
								"JS_SetUncatchableError",
								"  js_trigger_gc",
								"  js_malloc_usable_size_unknown",
								"  js_malloc_rt",
								"  js_free_rt",
								"  js_realloc_rt",
								"  js_malloc_usable_size_rt",
								"  js_mallocz_rt",
								"  js_bf_realloc",
								"  js_malloc",
								"  js_mallocz",
								"  js_free",
								"  js_realloc",
								"  js_realloc2",
								"  js_malloc_usable_size",
								"  js_strndup",
								"  js_strdup",
								"  js_realloc_array",
								"  js_resize_array",
								"  js_dbuf_init",
								"  is_digit",
								"JSClassShortDef",
								"  init_class_range",
								"JS_ThrowUnsupportedOperation",
								"  invalid_to_string",
								"  invalid_from_string",
								"  invalid_unary_arith",
								"  invalid_binary_arith",
								"  invalid_mul_pow10_to_float64",
								"  invalid_mul_pow10",
								"  set_dummy_numeric_ops",
								"  js_get_stack_pointer",
								"  js_check_stack_overflow",
								"  js_get_stack_pointer",
								"  js_check_stack_overflow",
								"JS_NewRuntime2",
								"JS_GetRuntimeOpaque",
								"JS_SetRuntimeOpaque",
								"  js_def_malloc_usable_size",
								"  js_def_malloc",
								"  js_def_free",
								"  js_def_realloc",
								"JS_NewRuntime",
								"JS_SetMemoryLimit",
								"JS_SetGCThreshold",
								"  malloc",
								"  free",
								"  realloc",
								"JS_SetInterruptHandler",
								"JS_SetCanBlock",
								"JS_SetSharedArrayBufferFunctions",
								"JS_EnqueueJob",
								"JS_IsJobPending",
								"JS_ExecutePendingJob",
								"  atom_get_free",
								"  atom_is_free",
								"  atom_set_free",
								"  js_alloc_string_rt",
								"  js_alloc_string",
								"  js_free_string",
								"JS_SetRuntimeInfo",
								"JS_FreeRuntime",
								"JS_NewContextRaw",
								"JS_NewContext",
								"JS_GetContextOpaque",
								"JS_SetContextOpaque",
								"  set_value",
								"JS_SetClassProto",
								"JS_GetClassProto",
								"JSFreeModuleEnum",
								"  js_free_modules",
								"JS_DupContext",
								"JS_MarkContext",
								"JS_FreeContext",
								"JS_GetRuntime",
								"  update_stack_limit",
								"JS_SetMaxStackSize",
								"JS_UpdateStackTop",
								"  is_strict_mode",
								"  is_math_mode",
								"JS_ATOM_COUNT_RESIZE",
								"  __JS_AtomIsConst",
								"  __JS_AtomIsTaggedInt",
								"  __JS_AtomFromUInt32",
								"  __JS_AtomToUInt32",
								"  is_num",
								"  is_num_string",
								"  hash_string8",
								"  hash_string16",
								"  hash_string",
								"JS_DumpString",
								"JS_DumpAtoms",
								"JS_ResizeAtomHash",
								"JS_InitAtoms",
								"JS_DupAtomRT",
								"JS_DupAtom",
								"JS_AtomGetKind",
								"JS_AtomIsString",
								"  js_get_atom_index",
								"  __JS_NewAtom",
								"  __JS_NewAtomInit",
								"  __JS_FindAtom",
								"JS_FreeAtomStruct",
								"  __JS_FreeAtom",
								"JS_NewAtomStr",
								"JS_NewAtomLen",
								"JS_NewAtom",
								"JS_NewAtomUInt32",
								"JS_NewAtomInt64",
								"JS_NewSymbol",
								"JS_NewSymbolFromAtom",
								"JS_AtomGetStrRT",
								"JS_AtomGetStr",
								"  __JS_AtomToValue",
								"JS_AtomToValue",
								"JS_AtomToString",
								"JS_AtomIsArrayIndex",
								"JS_AtomIsNumericIndex1",
								"JS_AtomIsNumericIndex",
								"JS_FreeAtom",
								"JS_FreeAtomRT",
								"JS_AtomSymbolHasDescription",
								"  print_atom",
								"JS_AtomToCString",
								"  js_atom_concat_str",
								"  js_atom_concat_num",
								"JS_IsEmptyString",
								"JS_NewClassID",
								"JS_IsRegisteredClass",
								"JS_NewClass1",
								"JS_NewClass",
								"  js_new_string8",
								"  js_new_string16",
								"  js_new_string_char",
								"  js_sub_string",
								"StringBuffer",
								"  string_buffer_init2",
								"  string_buffer_init",
								"  string_buffer_free",
								"  string_buffer_set_error",
								"  string_buffer_widen",
								"  string_buffer_realloc",
								"  string_buffer_putc_slow",
								"  string_buffer_putc8",
								"  string_buffer_putc16",
								"  string_buffer_putc",
								"  string_get",
								"  string_getc",
								"  string_buffer_write8",
								"  string_buffer_write16",
								"  string_buffer_puts8",
								"  string_buffer_concat",
								"  string_buffer_concat_value",
								"  string_buffer_concat_value_free",
								"  string_buffer_fill",
								"  string_buffer_end",
								"JS_NewStringLen",
								"JS_ConcatString3",
								"JS_NewString",
								"JS_NewAtomString",
								"JS_ToCStringLen2",
								"JS_FreeCString",
								"  memcmp16_8",
								"  memcmp16",
								"  js_string_memcmp",
								"  js_string_compare",
								"  copy_str16",
								"JS_ConcatString1",
								"JS_ConcatString",
								"  get_shape_size",
								"  get_shape_from_alloc",
								"  prop_hash_end",
								"  get_alloc_from_shape",
								"  get_shape_prop",
								"  init_shape_hash",
								"  shape_hash",
								"  get_shape_hash",
								"  shape_initial_hash",
								"  resize_shape_hash",
								"  js_shape_hash_link",
								"  js_shape_hash_unlink",
								"  js_new_shape2",
								"  js_new_shape",
								"  js_clone_shape",
								"  js_dup_shape",
								"  js_free_shape0",
								"  js_free_shape",
								"  js_free_shape_null",
								"  resize_properties",
								"  compact_properties",
								"  add_shape_property",
								"  find_hashed_shape_proto",
								"  find_hashed_shape_prop",
								"JS_DumpShape",
								"JS_DumpShapes",
								"JS_NewObjectFromShape",
								"  get_proto_obj",
								"JS_NewObjectProtoClass",
								"JS_SetObjectData",
								"JS_NewObjectClass",
								"JS_NewObjectProto",
								"JS_NewArray",
								"JS_NewObject",
								"  js_function_set_properties",
								"  js_class_has_bytecode",
								"JS_GetFunctionBytecode",
								"  js_method_set_home_object",
								"  js_get_function_name",
								"  js_method_set_properties",
								"JS_NewCFunction3",
								"JS_NewCFunction2",
								"JSCFunctionDataRecord",
								"  js_c_function_data_finalizer",
								"  js_c_function_data_mark",
								"  js_c_function_data_call",
								"JS_NewCFunctionData",
								"  js_autoinit_get_realm",
								"  js_autoinit_get_id",
								"  js_autoinit_free",
								"  js_autoinit_mark",
								"JSCClosureRecord",
								"  js_c_closure_finalizer",
								"  js_c_closure_call",
								"JS_NewCClosure",
								"  free_property",
								"  find_own_property1",
								"  find_own_property",
								"  set_cycle_flag",
								"  free_var_ref",
								"  js_array_finalizer",
								"  js_array_mark",
								"  js_object_data_finalizer",
								"  js_object_data_mark",
								"  js_c_function_finalizer",
								"  js_c_function_mark",
								"  js_bytecode_function_finalizer",
								"  js_bytecode_function_mark",
								"  js_bound_function_finalizer",
								"  js_bound_function_mark",
								"  js_for_in_iterator_finalizer",
								"  js_for_in_iterator_mark",
								"  free_object",
								"  free_gc_object",
								"  free_zero_refcount",
								"  __JS_FreeValueRT",
								"  __JS_FreeValue",
								"  add_gc_object",
								"  remove_gc_object",
								"JS_MarkValue",
								"  mark_children",
								"  gc_decref_child",
								"  gc_decref",
								"  gc_scan_incref_child",
								"  gc_scan_incref_child2",
								"  gc_scan",
								"  gc_free_cycles",
								"JS_RunGC",
								"JS_IsLiveObject",
								"JSMemoryUsage_helper",
								"  compute_value_size",
								"  compute_jsstring_size",
								"  compute_bytecode_size",
								"  compute_value_size",
								"JS_ComputeMemoryUsage",
								"JS_DumpMemoryUsage",
								"JS_GetGlobalObject",
								"JS_Throw",
								"JS_GetException",
								"  dbuf_put_leb128",
								"  dbuf_put_sleb128",
								"  get_leb128",
								"  get_sleb128",
								"  find_line_num",
								"  get_func_name",
								"  build_backtrace",
								"  is_backtrace_needed",
								"JS_NewError",
								"JS_ThrowError2",
								"JS_ThrowError",
								"JS_ThrowSyntaxError",
								"JS_ThrowTypeError",
								"JS_ThrowTypeErrorOrFalse",
								"  __JS_ThrowTypeErrorAtom",
								"  __JS_ThrowSyntaxErrorAtom",
								"JS_ThrowTypeErrorAtom",
								"JS_ThrowSyntaxErrorAtom",
								"JS_ThrowTypeErrorReadOnly",
								"JS_ThrowReferenceError",
								"JS_ThrowRangeError",
								"JS_ThrowInternalError",
								"JS_ThrowOutOfMemory",
								"JS_ThrowStackOverflow",
								"JS_ThrowTypeErrorNotAnObject",
								"JS_ThrowTypeErrorNotASymbol",
								"JS_ThrowReferenceErrorNotDefined",
								"JS_ThrowReferenceErrorUninitialized",
								"JS_ThrowReferenceErrorUninitialized2",
								"JS_ThrowTypeErrorInvalidClass",
								"  __js_poll_interrupts",
								"  js_poll_interrupts",
								"JS_SetPrototypeInternal",
								"JS_SetPrototype",
								"JS_GetPrototypePrimitive",
								"JS_GetPrototype",
								"JS_GetPrototypeFree",
								"JS_OrdinaryIsInstanceOf",
								"JS_IsInstanceOf",
								"JS_AutoInitProperty",
								"JS_GetPropertyInternal",
								"JS_ThrowTypeErrorPrivateNotFound",
								"JS_DefinePrivateField",
								"JS_GetPrivateField",
								"JS_SetPrivateField",
								"JS_AddBrand",
								"JS_CheckBrand",
								"  js_string_obj_get_length",
								"  num_keys_cmp",
								"  js_free_prop_enum",
								"  __exception",
								"JS_GetOwnPropertyNames",
								"JS_GetOwnPropertyInternal",
								"JS_GetOwnProperty",
								"JS_IsExtensible",
								"JS_PreventExtensions",
								"JS_HasProperty",
								"  js_symbol_to_atom",
								"JS_ValueToAtom",
								"JS_GetPropertyValue",
								"JS_GetPropertyUint32",
								"JS_TryGetPropertyInt64",
								"JS_GetPropertyInt64",
								"JS_GetPropertyStr",
								"  add_property",
								"  convert_fast_array_to_array",
								"  delete_property",
								"  call_setter",
								"  set_array_length",
								"  expand_fast_array",
								"  add_fast_array_element",
								"  js_free_desc",
								"JS_SetPropertyGeneric",
								"JS_SetPropertyInternal",
								"JS_SetPropertyValue",
								"JS_SetPropertyUint32",
								"JS_SetPropertyInt64",
								"JS_SetPropertyStr",
								"  get_prop_flags",
								"JS_CreateProperty",
								"  check_define_prop_flags",
								"  js_shape_prepare_update",
								"  js_update_property_flags",
								"JS_DefineProperty",
								"JS_DefineAutoInitProperty",
								"JS_DefinePropertyValue",
								"JS_DefinePropertyValueValue",
								"JS_DefinePropertyValueUint32",
								"JS_DefinePropertyValueInt64",
								"JS_DefinePropertyValueStr",
								"JS_DefinePropertyGetSet",
								"JS_CreateDataPropertyUint32",
								"  js_object_has_name",
								"JS_DefineObjectName",
								"JS_DefineObjectNameComputed",
								"JS_ThrowSyntaxErrorVarRedeclaration",
								"JS_CheckDefineGlobalVar",
								"JS_DefineGlobalVar",
								"JS_DefineGlobalFunction",
								"JS_GetGlobalVar",
								"JS_GetGlobalVarRef",
								"JS_CheckGlobalVar",
								"JS_SetGlobalVar",
								"JS_DeleteProperty",
								"JS_DeletePropertyInt64",
								"JS_IsFunction",
								"JS_IsCFunction",
								"JS_IsConstructor",
								"JS_SetConstructorBit",
								"JS_IsError",
								"JS_IsUncatchableError",
								"JS_SetUncatchableError",
								"JS_ResetUncatchableError",
								"JS_NewUncatchableError",
								"JS_SetOpaque",
								"JS_GetOpaque",
								"JS_GetOpaque2",
								"JS_ToPrimitiveFree",
								"JS_ToPrimitive",
								"JS_SetIsHTMLDDA",
								"JS_IsHTMLDDA",
								"JS_ToBoolFree",
								"JS_ToBool",
								"  skip_spaces",
								"  to_digit",
								"  js_strtod",
								"  js_string_to_bigint",
								"  js_string_to_bigfloat",
								"  js_string_to_bigdecimal",
								"  js_atof2",
								"  js_atof",
								"  js_atof",
								"JSToNumberHintEnum",
								"JS_ToNumberHintFree",
								"JS_ToNumberFree",
								"JS_ToNumericFree",
								"JS_ToNumeric",
								"  __JS_ToFloat64Free",
								"JS_ToFloat64Free",
								"JS_ToFloat64",
								"JS_ToNumber",
								"JSValue",
								"JS_ToInt32SatFree",
								"JS_ToInt32Sat",
								"JS_ToInt32Clamp",
								"JS_ToInt64SatFree",
								"JS_ToInt64Sat",
								"JS_ToInt64Clamp",
								"JS_ToInt64Free",
								"JS_ToInt64",
								"JS_ToInt64Ext",
								"JS_ToInt32Free",
								"JS_ToInt32",
								"JS_ToUint32Free",
								"JS_ToUint8ClampFree",
								"JS_ToArrayLengthFree",
								"  is_safe_integer",
								"JS_ToIndex",
								"JS_ToLengthFree",
								"JS_NumberIsInteger",
								"JS_NumberIsNegativeOrMinusZero",
								"  js_bigint_to_string1",
								"  js_bigint_to_string",
								"  js_ftoa",
								"  js_bigfloat_to_string",
								"  js_bigdecimal_to_string1",
								"  js_bigdecimal_to_string",
								"  i64toa",
								"  js_ecvt1",
								"  js_ecvt",
								"  js_fcvt1",
								"  js_fcvt",
								"  js_dtoa1",
								"  js_dtoa",
								"JS_ToStringInternal",
								"JS_ToString",
								"JS_ToStringFree",
								"JS_ToLocaleStringFree",
								"JS_ToPropertyKey",
								"JS_ToStringCheckObject",
								"JS_ToQuotedString",
								"JS_DumpObjectHeader",
								"JS_DumpObject",
								"JS_DumpGCObject",
								"JS_DumpValueShort",
								"JS_DumpValue",
								"JS_PrintValue",
								"JS_IsArray",
								"  js_pow",
								"JS_NewBigInt64_1",
								"JS_NewBigInt64",
								"JS_NewBigUint64",
								"JS_ToBigFloat",
								"JS_ToBigDecimal",
								"JS_StringToBigInt",
								"JS_StringToBigIntErr",
								"JS_ToBigIntFree",
								"JS_ToBigInt",
								"JSValue",
								"JS_FreeBigInt",
								"JS_ToBigInt64Free",
								"JS_ToBigInt64",
								"  js_new_bf",
								"JS_NewBigFloat",
								"JS_NewBigDecimal",
								"JS_NewBigInt",
								"JS_CompactBigInt1",
								"JS_CompactBigInt",
								"  get_ovop_from_opcode",
								"  find_binary_op",
								"  js_call_binary_op_fallback",
								"  js_call_binary_op_simple",
								"  js_call_unary_op_fallback",
								"  throw_bf_exception",
								"  js_unary_arith_bigint",
								"  js_unary_arith_bigfloat",
								"  js_unary_arith_bigdecimal",
								"  js_unary_arith_slow",
								"  js_post_inc_slow",
								"  js_not_slow",
								"  js_binary_arith_bigfloat",
								"  js_binary_arith_bigint",
								"  js_bfdec_pow",
								"  js_binary_arith_bigdecimal",
								"  js_binary_arith_slow",
								"  js_add_slow",
								"  js_binary_logic_slow",
								"  js_compare_bigfloat",
								"  js_compare_bigdecimal",
								"  js_relational_slow",
								"  tag_is_number",
								"  js_eq_slow",
								"  js_shr_slow",
								"  js_mul_pow10_to_float64",
								"  js_mul_pow10",
								"JS_ThrowUnsupportedBigint",
								"JS_NewBigInt64",
								"JS_NewBigUint64",
								"JS_ToBigInt64",
								"  js_unary_arith_slow",
								"  js_post_inc_slow",
								"  js_binary_arith_slow",
								"  js_add_slow",
								"  js_binary_logic_slow",
								"  js_not_slow",
								"  js_relational_slow",
								"  js_eq_slow",
								"  js_shr_slow",
								"  js_strict_eq2",
								"  js_strict_eq",
								"  js_same_value",
								"  js_same_value_zero",
								"  js_strict_eq_slow",
								"  js_operator_in",
								"  js_has_unscopable",
								"  js_operator_instanceof",
								"  js_operator_typeof",
								"  js_operator_delete",
								"  js_throw_type_error",
								"  js_function_proto_caller",
								"  js_function_proto_fileName",
								"  js_function_proto_lineNumber",
								"  js_arguments_define_own_property",
								"  js_build_arguments",
								"  js_build_mapped_arguments",
								"  js_build_rest",
								"  build_for_in_iterator",
								"  js_for_in_start",
								"  js_for_in_next",
								"JS_GetIterator2",
								"JS_GetIterator",
								"JS_IteratorNext2",
								"JS_IteratorNext",
								"JS_IteratorClose",
								"  js_for_of_start",
								"  js_for_of_next",
								"JS_IteratorGetCompleteValue",
								"  js_iterator_get_value_done",
								"  js_create_iterator_result",
								"  js_array_iterator_next",
								"  js_create_array_iterator",
								"  js_is_fast_array",
								"  js_get_fast_array",
								"  js_append_enumerate",
								"JS_CopyDataProperties",
								"JS_GetActiveFunction",
								"  get_var_ref",
								"  js_closure2",
								"  js_instantiate_prototype",
								"  js_closure",
								"  js_op_define_class",
								"  close_var_refs",
								"  close_lexical_var",
								"  js_call_c_function",
								"  js_call_bound_function",
								"OPSpecialObjectEnum",
								"JS_CallInternal",
								"SWITCH",
								"CASE",
								"CASE",
								"DEF",
								"  def",
								"  def",
								"DEF",
								"  def",
								"  def",
								"SWITCH",
								"CASE",
								"CASE",
								"OP_CMP",
								"JS_Call",
								"JS_CallFree",
								"JS_GetFunctionRealm",
								"  js_create_from_ctor",
								"JS_CallConstructorInternal",
								"JS_CallConstructor2",
								"JS_CallConstructor",
								"JS_Invoke",
								"JS_InvokeFree",
								"  async_func_init",
								"  async_func_mark",
								"  async_func_free",
								"  async_func_resume",
								"JSGeneratorStateEnum",
								"JSGeneratorData",
								"  free_generator_stack_rt",
								"  js_generator_finalizer",
								"  free_generator_stack",
								"  js_generator_mark",
								"  js_generator_next",
								"  js_generator_function_call",
								"  js_async_function_terminate",
								"  js_async_function_free0",
								"  js_async_function_free",
								"  js_async_function_resolve_finalizer",
								"  js_async_function_resolve_mark",
								"  js_async_function_resolve_create",
								"  js_async_function_resume",
								"  js_async_function_resolve_call",
								"  js_async_function_call",
								"JSAsyncGeneratorStateEnum",
								"JSAsyncGeneratorRequest",
								"JSAsyncGeneratorData",
								"  js_async_generator_free",
								"  js_async_generator_finalizer",
								"  js_async_generator_mark",
								"  js_async_generator_resolve_function",
								"  js_async_generator_resolve_function_create",
								"  js_async_generator_await",
								"  js_async_generator_resolve_or_reject",
								"  js_async_generator_resolve",
								"  js_async_generator_reject",
								"  js_async_generator_complete",
								"  js_async_generator_completed_return",
								"  js_async_generator_resume_next",
								"  js_async_generator_resolve_function",
								"  js_async_generator_next",
								"  js_async_generator_function_call",
								"BlockEnv",
								"JSGlobalVar",
								"RelocEntry",
								"JumpSlot",
								"LabelSlot",
								"LineNumberSlot",
								"JSParseFunctionEnum",
								"JSParseExportEnum",
								"JSFunctionDef",
								"JSToken",
								"JSParseState",
								"JSOpCode",
								"FMT",
								"DEF",
								"DEF",
								"  short_opcode_info",
								"  short_opcode_info",
								"  next_token",
								"  free_token",
								"  __attribute",
								"  js_parse_error",
								"  js_parse_expect",
								"  js_parse_expect_semi",
								"  js_parse_error_reserved_identifier",
								"  js_parse_template_part",
								"  js_parse_string",
								"  token_is_pseudo_keyword",
								"  js_parse_regexp",
								"  ident_realloc",
								"  parse_ident",
								"  next_token",
								"  json_parse_ident",
								"  json_next_token",
								"  simple_next_token",
								"  peek_token",
								"JS_DetectModule",
								"  get_prev_opcode",
								"  js_is_live_code",
								"  emit_u8",
								"  emit_u16",
								"  emit_u32",
								"  emit_op",
								"  emit_atom",
								"  update_label",
								"  new_label_fd",
								"  new_label",
								"  emit_label",
								"  emit_goto",
								"  cpool_add",
								"  emit_push_const",
								"  find_arg",
								"  find_var",
								"  find_var_in_scope",
								"  is_child_scope",
								"  find_var_in_child_scope",
								"  find_global_var",
								"  find_lexical_global_var",
								"  find_lexical_decl",
								"  push_scope",
								"  get_first_lexical_var",
								"  pop_scope",
								"  close_scopes",
								"  add_var",
								"  add_scope_var",
								"  add_func_var",
								"  add_arguments_var",
								"  add_arguments_arg",
								"  add_arg",
								"  add_global_var",
								"JSVarDefEnum",
								"  define_var",
								"  add_private_class_field",
								"  js_parse_expr",
								"  js_parse_function_decl",
								"  js_parse_function_class_fields_init",
								"  js_parse_function_decl2",
								"  js_parse_assign_expr2",
								"  js_parse_assign_expr",
								"  js_parse_unary",
								"  push_break_entry",
								"  pop_break_entry",
								"  add_export_entry",
								"  seal_template_obj",
								"  js_parse_template",
								"  token_is_ident",
								"  __exception",
								"JSParsePos",
								"  js_parse_get_pos",
								"  js_parse_seek_token",
								"  is_regexp_allowed",
								"  js_parse_skip_parens_token",
								"  set_object_name",
								"  set_object_name_computed",
								"  js_parse_object_literal",
								"  js_parse_postfix_expr",
								"  js_parse_left_hand_side_expr",
								"  js_parse_class_default_ctor",
								"  find_private_class_field",
								"  emit_class_field_init",
								"  get_private_setter_name",
								"ClassFieldsDef",
								"  emit_class_init_start",
								"  add_brand",
								"  emit_class_init_end",
								"  js_parse_class",
								"  js_parse_array_literal",
								"  has_with_scope",
								"  get_lvalue",
								"PutLValueEnum",
								"  put_lvalue",
								"  js_parse_expr_paren",
								"  js_unsupported_keyword",
								"  js_define_var",
								"  js_emit_spread_code",
								"  js_parse_check_duplicate_parameter",
								"  js_parse_destructuring_var",
								"  js_parse_destructuring_element",
								"FuncCallType",
								"  optional_chain_test",
								"  js_parse_postfix_expr",
								"  js_parse_delete",
								"  js_parse_unary",
								"  js_parse_expr_binary",
								"  js_parse_logical_and_or",
								"  js_parse_coalesce_expr",
								"  js_parse_cond_expr",
								"  emit_return",
								"  js_parse_assign_expr2",
								"  js_parse_assign_expr",
								"  js_parse_expr2",
								"  js_parse_expr",
								"  push_break_entry",
								"  pop_break_entry",
								"  emit_break",
								"  emit_return",
								"  js_parse_statement_or_decl",
								"  js_parse_statement",
								"  js_parse_block",
								"  js_parse_var",
								"  is_label",
								"  is_let",
								"  js_parse_for_in_of",
								"  set_eval_ret_undefined",
								"  js_parse_statement_or_decl",
								"  js_new_module_def",
								"  js_mark_module_def",
								"  js_free_module_def",
								"  add_req_module_entry",
								"  find_export_entry",
								"  add_export_entry2",
								"  add_export_entry",
								"  add_star_export_entry",
								"JS_NewCModule",
								"JS_AddModuleExport",
								"JS_SetModuleExport",
								"JS_SetModuleLoaderFunc",
								"JS_GetModuleLoaderFunc",
								"JS_GetModuleLoaderOpaque",
								"  js_default_module_normalize_name",
								"  js_find_loaded_module",
								"  js_host_resolve_imported_module",
								"  js_host_resolve_imported_module_atom",
								"JSResolveEntry",
								"JSResolveState",
								"  find_resolve_entry",
								"  add_resolve_entry",
								"JSResolveResultEnum",
								"  js_resolve_export1",
								"  js_resolve_export",
								"  js_resolve_export_throw_error",
								"ExportedNameEntryEnum",
								"ExportedNameEntry",
								"GetExportNamesState",
								"  find_exported_name",
								"  get_exported_names",
								"  js_module_ns_has",
								"  exported_names_cmp",
								"  js_get_module_ns",
								"  js_module_ns_autoinit",
								"  js_build_module_ns",
								"  js_get_module_ns",
								"  js_resolve_module",
								"  js_create_module_var",
								"  js_create_module_bytecode_function",
								"  js_create_module_function",
								"  js_link_module",
								"JS_GetScriptOrModuleName",
								"JS_GetModuleName",
								"JS_GetImportMeta",
								"  js_import_meta",
								"JS_RunModule",
								"  js_dynamic_import_job",
								"  js_dynamic_import",
								"  js_evaluate_module",
								"JSAtom",
								"  js_parse_export",
								"  add_closure_var",
								"  add_import",
								"  js_parse_import",
								"  js_parse_source_element",
								"  js_new_function_def",
								"  free_bytecode_atoms",
								"  js_free_function_def",
								"  skip_lines",
								"  print_lines",
								"  dump_byte_code",
								"  dump_pc2line",
								"  js_dump_function_bytecode",
								"  add_closure_var",
								"  find_closure_var",
								"  get_closure_var2",
								"  get_closure_var",
								"  get_with_scope_opcode",
								"  can_opt_put_ref_value",
								"  can_opt_put_global_ref_value",
								"  optimize_scope_make_ref",
								"  optimize_scope_make_global_ref",
								"  add_var_this",
								"  resolve_pseudo_var",
								"  var_object_test",
								"  resolve_scope_var",
								"  find_private_class_field_all",
								"  get_loc_or_ref",
								"  resolve_scope_private_field1",
								"  resolve_scope_private_field",
								"  mark_eval_captured_variables",
								"  is_var_in_arg_scope",
								"  add_eval_variables",
								"  set_closure_from_var",
								"  add_closure_variables",
								"CodeContext",
								"M2",
								"M3",
								"M4",
								"  code_match",
								"  instantiate_hoisted_definitions",
								"  skip_dead_code",
								"  get_label_pos",
								"  resolve_variables",
								"  add_pc2line_info",
								"  compute_pc2line_info",
								"  add_reloc",
								"  code_has_label",
								"  find_jump_target",
								"  push_short_int",
								"  put_short_code",
								"  resolve_labels",
								"StackSizeState",
								"  ss_check",
								"  compute_stack_size",
								"  add_module_variables",
								"  js_create_function",
								"  free_function_bytecode",
								"  js_parse_directives",
								"  js_parse_function_check_names",
								"  js_parse_function_class_fields_init",
								"  js_parse_function_decl2",
								"  js_parse_function_decl",
								"  js_parse_program",
								"  js_parse_init",
								"JS_EvalFunctionInternal",
								"JS_EvalFunction",
								"  skip_shebang",
								"  __JS_EvalInternal",
								"JS_EvalInternal",
								"JS_EvalObject",
								"JS_EvalThis",
								"JS_Eval",
								"JS_ResolveModule",
								"JSObjectListEntry",
								"JSObjectList",
								"  js_object_list_init",
								"  js_object_list_get_hash",
								"  js_object_list_resize_hash",
								"  js_object_list_add",
								"  js_object_list_find",
								"  js_object_list_end",
								"BCTagEnum",
								"BCWriterState",
								"  bc_put_u8",
								"  bc_put_u16",
								"  bc_put_u32",
								"  bc_put_u64",
								"  bc_put_leb128",
								"  bc_put_sleb128",
								"  bc_set_flags",
								"  bc_atom_to_idx",
								"  bc_put_atom",
								"  bc_byte_swap",
								"JS_WriteFunctionBytecode",
								"JS_WriteString",
								"JS_WriteBigNum",
								"JS_WriteObjectRec",
								"JS_WriteFunctionTag",
								"JS_WriteModule",
								"JS_WriteArray",
								"JS_WriteObjectTag",
								"JS_WriteTypedArray",
								"JS_WriteArrayBuffer",
								"JS_WriteSharedArrayBuffer",
								"JS_WriteObjectRec",
								"JS_WriteObjectAtoms",
								"JS_WriteObject2",
								"JS_WriteObject",
								"BCReaderState",
								"  bc_read_trace",
								"  bc_read_trace",
								"  bc_read_error_end",
								"  bc_get_u8",
								"  bc_get_u16",
								"  bc_get_u32",
								"  bc_get_u64",
								"  bc_get_leb128",
								"  bc_get_sleb128",
								"  bc_get_leb128_int",
								"  bc_get_leb128_u16",
								"  bc_get_buf",
								"  bc_idx_to_atom",
								"  bc_get_atom",
								"JS_ReadString",
								"  bc_get_flags",
								"JS_ReadFunctionBytecode",
								"JS_ReadBigNum",
								"JS_ReadObjectRec",
								"BC_add_object_ref1",
								"BC_add_object_ref",
								"JS_ReadFunctionTag",
								"JS_ReadModule",
								"JS_ReadObjectTag",
								"JS_ReadArray",
								"JS_ReadTypedArray",
								"JS_ReadArrayBuffer",
								"JS_ReadSharedArrayBuffer",
								"JS_ReadDate",
								"JS_ReadObjectValue",
								"JS_ReadObjectRec",
								"JS_ReadObjectAtoms",
								"  bc_reader_free",
								"JS_ReadObject",
								"  js_string_constructor",
								"  js_boolean_constructor",
								"  js_number_constructor",
								"  check_function",
								"  check_exception_free",
								"  find_atom",
								"JS_InstantiateFunctionListItem2",
								"JS_InstantiateFunctionListItem",
								"JS_SetPropertyFunctionList",
								"JS_AddModuleExportList",
								"JS_SetModuleExportList",
								"JS_SetConstructor2",
								"JS_SetConstructor",
								"JS_NewGlobalCConstructor2",
								"JS_NewGlobalCConstructor",
								"JS_NewGlobalCConstructorOnly",
								"  js_global_eval",
								"  js_global_isNaN",
								"  js_global_isFinite",
								"JS_ToObject",
								"JS_ToObjectFree",
								"  js_obj_to_desc",
								"JS_DefinePropertyDesc",
								"JS_ObjectDefineProperties",
								"  js_object_constructor",
								"  js_object_create",
								"  js_object_getPrototypeOf",
								"  js_object_setPrototypeOf",
								"  js_object_defineProperty",
								"  js_object_defineProperties",
								"  js_object___defineGetter__",
								"  js_object_getOwnPropertyDescriptor",
								"  js_object_getOwnPropertyDescriptors",
								"JS_GetOwnPropertyNames2",
								"  js_object_getOwnPropertyNames",
								"  js_object_getOwnPropertySymbols",
								"  js_object_keys",
								"  js_object_isExtensible",
								"  js_object_preventExtensions",
								"  js_object_hasOwnProperty",
								"  js_object_valueOf",
								"  js_object_toString",
								"  js_object_toLocaleString",
								"  js_object_assign",
								"  js_object_seal",
								"  js_object_isSealed",
								"  js_object_fromEntries",
								"  js_object___getClass",
								"  js_object_is",
								"JS_SpeciesConstructor",
								"  js_object_get___proto__",
								"  js_object_set___proto__",
								"  js_object_isPrototypeOf",
								"  js_object_propertyIsEnumerable",
								"  js_object___lookupGetter__",
								"  js_function_proto",
								"  js_function_constructor",
								"  js_get_length32",
								"  js_get_length64",
								"  free_arg_list",
								"  build_arg_list",
								"  js_function_apply",
								"  js_function_call",
								"  js_function_bind",
								"  js_function_toString",
								"  js_function_hasInstance",
								"  iterator_to_array",
								"  js_error_constructor",
								"  js_error_toString",
								"  js_aggregate_error_constructor",
								"JS_CopySubArray",
								"  js_array_constructor",
								"  js_array_from",
								"  js_array_of",
								"  js_array_isArray",
								"  js_get_this",
								"JS_ArraySpeciesCreate",
								"JS_isConcatSpreadable",
								"  js_array_concat",
								"  js_typed_array_get_length_internal",
								"  js_typed_array___speciesCreate",
								"  js_array_every",
								"  js_array_reduce",
								"  js_array_fill",
								"  js_array_includes",
								"  js_array_indexOf",
								"  js_array_lastIndexOf",
								"  js_array_find",
								"  js_array_toString",
								"  js_array_join",
								"  js_array_pop",
								"  js_array_push",
								"  js_array_reverse",
								"  js_array_slice",
								"  js_array_copyWithin",
								"JS_FlattenIntoArray",
								"  js_array_flatten",
								"ValueSlot",
								"  array_sort_context",
								"  js_array_cmp_generic",
								"  js_array_sort",
								"JSArrayIteratorData",
								"  js_array_iterator_finalizer",
								"  js_array_iterator_mark",
								"  js_create_array",
								"  js_create_array_iterator",
								"  js_array_iterator_next",
								"  js_iterator_proto_iterator",
								"  js_number_constructor",
								"  js_number_isNaN",
								"  js_number_isFinite",
								"  js_number_isInteger",
								"  js_number_isSafeInteger",
								"  js_thisNumberValue",
								"  js_number_valueOf",
								"  js_get_radix",
								"  js_number_toString",
								"  js_number_toFixed",
								"  js_number_toExponential",
								"  js_number_toPrecision",
								"  js_parseInt",
								"  js_parseFloat",
								"  js_boolean_constructor",
								"  js_thisBooleanValue",
								"  js_boolean_toString",
								"  js_boolean_valueOf",
								"  js_string_get_own_property",
								"  js_string_define_own_property",
								"  js_string_delete_property",
								"  js_string_constructor",
								"  js_thisStringValue",
								"  js_string_fromCharCode",
								"  js_string_fromCodePoint",
								"  js_string_raw",
								"  js_string_codePointRange",
								"  js_string_charCodeAt",
								"  js_string_charAt",
								"  js_string_codePointAt",
								"  js_string_concat",
								"  string_cmp",
								"  string_indexof_char",
								"  string_indexof",
								"  string_advance_index",
								"  js_string_indexOf",
								"  js_is_regexp",
								"  js_string_includes",
								"  check_regexp_g_flag",
								"  js_string_match",
								"  js_string___GetSubstitution",
								"  js_string_replace",
								"  js_string_split",
								"  js_string_substring",
								"  js_string_substr",
								"  js_string_slice",
								"  js_string_pad",
								"  js_string_repeat",
								"  js_string_trim",
								"  js_string___quote",
								"  string_prevc",
								"  test_final_sigma",
								"  js_string_localeCompare",
								"  js_string_toLowerCase",
								"JS_ToUTF32String",
								"JS_NewUTF32String",
								"  js_string_normalize",
								"  js_string_toString",
								"  js_string_iterator_next",
								"  js_string_CreateHTML",
								"JS_AddIntrinsicStringNormalize",
								"  js_fmin",
								"  js_fmax",
								"  js_math_min_max",
								"  js_math_sign",
								"  js_math_round",
								"  js_math_hypot",
								"  js_math_fround",
								"  js_math_imul",
								"  js_math_clz32",
								"  xorshift64star",
								"  js_random_init",
								"  js_math_random",
								"  js___date_clock",
								"  getTimezoneOffset",
								"  js_regexp_finalizer",
								"  js_compile_regexp",
								"  js_regexp_constructor_internal",
								"  js_get_regexp",
								"  js_is_regexp",
								"  js_regexp_constructor",
								"  js_regexp_compile",
								"  js_regexp_get_source",
								"  js_regexp_get_flag",
								"  js_regexp_get_flags",
								"  js_regexp_toString",
								"  lre_check_stack_overflow",
								"  lre_realloc",
								"  js_regexp_exec",
								"JS_RegExpDelete",
								"JS_RegExpExec",
								"  js_regexp_test",
								"  js_regexp_Symbol_match",
								"JSRegExpStringIteratorData",
								"  js_regexp_string_iterator_finalizer",
								"  js_regexp_string_iterator_mark",
								"  js_regexp_string_iterator_next",
								"  js_regexp_Symbol_matchAll",
								"ValueBuffer",
								"  value_buffer_init",
								"  value_buffer_free",
								"  value_buffer_append",
								"  js_is_standard_regexp",
								"  js_regexp_Symbol_replace",
								"  js_regexp_Symbol_search",
								"  js_regexp_Symbol_split",
								"JS_AddIntrinsicRegExpCompiler",
								"JS_AddIntrinsicRegExp",
								"  json_parse_expect",
								"  json_parse_value",
								"JS_ParseJSON2",
								"JS_ParseJSON",
								"  internalize_json_property",
								"  js_json_parse",
								"JSONStringifyContext",
								"JS_ToQuotedStringFree",
								"  js_json_check",
								"  js_json_to_str",
								"JS_JSONStringify",
								"  js_json_stringify",
								"JS_AddIntrinsicJSON",
								"  js_reflect_apply",
								"  js_reflect_construct",
								"  js_reflect_deleteProperty",
								"  js_reflect_get",
								"  js_reflect_has",
								"  js_reflect_set",
								"  js_reflect_setPrototypeOf",
								"  js_reflect_ownKeys",
								"  js_proxy_finalizer",
								"  js_proxy_mark",
								"JS_ThrowTypeErrorRevokedProxy",
								"  get_proxy_method",
								"  js_proxy_getPrototypeOf",
								"  js_proxy_setPrototypeOf",
								"  js_proxy_isExtensible",
								"  js_proxy_preventExtensions",
								"  js_proxy_has",
								"  js_proxy_get",
								"  js_proxy_set",
								"  js_create_desc",
								"  js_proxy_get_own_property",
								"  js_proxy_define_own_property",
								"  js_proxy_delete_property",
								"  find_prop_key",
								"  js_proxy_get_own_property_names",
								"  js_proxy_call_constructor",
								"  js_proxy_call",
								"  js_proxy_isArray",
								"  js_proxy_constructor",
								"  js_proxy_revoke",
								"  js_proxy_revoke_constructor",
								"  js_proxy_revocable",
								"JS_AddIntrinsicProxy",
								"  js_symbol_constructor",
								"  js_thisSymbolValue",
								"  js_symbol_toString",
								"  js_symbol_valueOf",
								"  js_symbol_get_description",
								"  js_symbol_for",
								"  js_symbol_keyFor",
								"JSMapRecord",
								"JSMapState",
								"  js_map_constructor",
								"  map_normalize_key",
								"  map_hash_key",
								"  map_find_record",
								"  map_hash_resize",
								"  map_add_record",
								"  delete_weak_ref",
								"  map_delete_record",
								"  map_decref_record",
								"  reset_weak_ref",
								"  js_map_set",
								"  js_map_get",
								"  js_map_has",
								"  js_map_delete",
								"  js_map_clear",
								"  js_map_get_size",
								"  js_map_forEach",
								"  js_map_finalizer",
								"  js_map_mark",
								"JSMapIteratorData",
								"  js_map_iterator_finalizer",
								"  js_map_iterator_mark",
								"  js_create_map_iterator",
								"  js_map_iterator_next",
								"JS_AddIntrinsicMapSet",
								"JSPromiseStateEnum",
								"JSPromiseData",
								"JSPromiseFunctionDataResolved",
								"JSPromiseFunctionData",
								"JSPromiseReactionData",
								"  js_create_resolving_functions",
								"  promise_reaction_data_free",
								"  promise_reaction_job",
								"JS_SetHostPromiseRejectionTracker",
								"  fulfill_or_reject_promise",
								"  reject_promise",
								"  js_promise_resolve_thenable_job",
								"  js_promise_resolve_function_free_resolved",
								"  js_create_resolving_functions",
								"  js_promise_resolve_function_finalizer",
								"  js_promise_resolve_function_mark",
								"  js_promise_resolve_function_call",
								"  js_promise_finalizer",
								"  js_promise_mark",
								"  js_promise_constructor",
								"  js_promise_executor",
								"  js_promise_executor_new",
								"  js_new_promise_capability",
								"JS_NewPromiseCapability",
								"  js_promise_resolve",
								"  remainingElementsCount_add",
								"  js_promise_all_resolve_element",
								"  js_promise_all",
								"  js_promise_race",
								"  perform_promise_then",
								"  js_promise_then",
								"  js_promise_catch",
								"  js_promise_finally_value_thunk",
								"  js_promise_finally_thrower",
								"  js_promise_then_finally_func",
								"  js_promise_finally",
								"  js_async_from_sync_iterator_unwrap",
								"  js_async_from_sync_iterator_unwrap_func_create",
								"JSAsyncFromSyncIteratorData",
								"  js_async_from_sync_iterator_finalizer",
								"  js_async_from_sync_iterator_mark",
								"JS_CreateAsyncFromSyncIterator",
								"  js_async_from_sync_iterator_next",
								"JS_AddIntrinsicPromise",
								"  string_get_hex",
								"  isURIReserved",
								"  js_throw_URIError",
								"  hex_decode",
								"  js_global_decodeURI",
								"  isUnescaped",
								"  isURIUnescaped",
								"  encodeURI_hex",
								"  js_global_encodeURI",
								"  js_global_escape",
								"  js_global_unescape",
								"  math_mod",
								"  floor_div",
								"  js_Date_parse",
								"JS_ThisTimeValue",
								"JS_SetThisTimeValue",
								"  days_from_year",
								"  days_in_year",
								"  year_from_days",
								"  get_date_fields",
								"  time_clip",
								"  set_date_fields",
								"  get_date_field",
								"  set_date_field",
								"  get_date_string",
								"  date_now",
								"  js_date_constructor",
								"  js_Date_UTC",
								"  string_skip_spaces",
								"  string_skip_non_spaces",
								"  string_get_digits",
								"  string_get_signed_digits",
								"  string_get_fixed_width_digits",
								"  string_get_milliseconds",
								"  find_abbrev",
								"  string_get_month",
								"  js_Date_parse",
								"  js_Date_now",
								"  js_date_Symbol_toPrimitive",
								"  js_date_getTimezoneOffset",
								"  js_date_getTime",
								"  js_date_setTime",
								"  js_date_setYear",
								"  js_date_toJSON",
								"JS_AddIntrinsicDate",
								"JS_AddIntrinsicEval",
								"  js_operator_set_finalizer",
								"  js_operator_set_mark",
								"  js_operators_create_internal",
								"  js_operators_create",
								"  js_operators_updateBigIntOperators",
								"  js_operators_set_default",
								"  js_dummy_operators_ctor",
								"  js_global_operators",
								"JS_AddIntrinsicOperators",
								"JS_ToBigIntCtorFree",
								"  js_bigint_constructor",
								"  js_thisBigIntValue",
								"  js_bigint_toString",
								"  js_bigint_valueOf",
								"  js_bigint_div",
								"  js_bigint_sqrt",
								"  js_bigint_op1",
								"  js_bigint_asUintN",
								"JS_AddIntrinsicBigInt",
								"  js_thisBigFloatValue",
								"  js_bigfloat_toString",
								"  js_bigfloat_valueOf",
								"  bigfloat_get_rnd_mode",
								"  js_bigfloat_toFixed",
								"  js_bigfloat_is_finite",
								"  js_bigfloat_toExponential",
								"  js_bigfloat_toPrecision",
								"  js_bigfloat_constructor",
								"  js_bigfloat_get_const",
								"  js_bigfloat_parseFloat",
								"  js_bigfloat_isFinite",
								"  js_bigfloat_isNaN",
								"  js_bigfloat_fop",
								"  js_bigfloat_fop2",
								"  js_float_env_constructor",
								"  js_float_env_finalizer",
								"  js_float_env_get_prec",
								"  js_float_env_get_expBits",
								"  js_float_env_setPrec",
								"  js_float_env_proto_get_status",
								"  js_float_env_proto_set_status",
								"  js_float_env_clearStatus",
								"JS_AddIntrinsicBigFloat",
								"JS_ToBigDecimalFree",
								"  js_bigdecimal_constructor",
								"  js_thisBigDecimalValue",
								"  js_bigdecimal_toString",
								"  js_bigdecimal_valueOf",
								"  js_bigdecimal_get_rnd_mode",
								"BigDecimalEnv",
								"  js_bigdecimal_get_env",
								"  js_bigdecimal_fop",
								"  js_bigdecimal_toFixed",
								"  js_bigdecimal_toExponential",
								"  js_bigdecimal_toPrecision",
								"JS_AddIntrinsicBigDecimal",
								"JS_EnableBignumExt",
								"JS_AddIntrinsicBasicObjects",
								"JS_AddIntrinsicBaseObjects",
								"  js_array_buffer_constructor3",
								"  js_array_buffer_free",
								"  js_array_buffer_constructor2",
								"  js_array_buffer_constructor1",
								"JS_NewArrayBuffer",
								"JS_NewArrayBufferCopy",
								"  js_array_buffer_constructor",
								"  js_shared_array_buffer_constructor",
								"  js_array_buffer_finalizer",
								"  js_array_buffer_isView",
								"JS_ThrowTypeErrorDetachedArrayBuffer",
								"  js_array_buffer_get_byteLength",
								"JS_DetachArrayBuffer",
								"  js_get_array_buffer",
								"JS_GetArrayBuffer",
								"  js_array_buffer_slice",
								"  get_typed_array",
								"  typed_array_is_detached",
								"  typed_array_get_length",
								"  validate_typed_array",
								"  js_typed_array_get_length",
								"  js_typed_array_get_buffer",
								"  js_typed_array_get_byteLength",
								"  js_typed_array_get_byteOffset",
								"JS_GetTypedArrayBuffer",
								"  js_typed_array_get_toStringTag",
								"  js_typed_array_set_internal",
								"  js_typed_array_set",
								"  js_create_typed_array_iterator",
								"  js_typed_array_get_length_internal",
								"  js_typed_array_create",
								"  js_typed_array___speciesCreate",
								"  js_typed_array_from",
								"  js_typed_array_of",
								"  js_typed_array_copyWithin",
								"  js_typed_array_fill",
								"  js_typed_array_find",
								"  js_typed_array_indexOf",
								"  js_typed_array_join",
								"  js_typed_array_reverse",
								"  js_typed_array_slice",
								"  js_typed_array_subarray",
								"  js_cmp_doubles",
								"  js_TA_cmp_int8",
								"  js_TA_cmp_uint8",
								"  js_TA_cmp_int16",
								"  js_TA_cmp_uint16",
								"  js_TA_cmp_int32",
								"  js_TA_cmp_uint32",
								"  js_TA_cmp_int64",
								"  js_TA_cmp_uint64",
								"  js_TA_cmp_float32",
								"  js_TA_cmp_float64",
								"  js_TA_get_int8",
								"  js_TA_get_uint8",
								"  js_TA_get_int16",
								"  js_TA_get_uint16",
								"  js_TA_get_int32",
								"  js_TA_get_uint32",
								"  js_TA_get_int64",
								"  js_TA_get_uint64",
								"  js_TA_get_float32",
								"  js_TA_get_float64",
								"TA_sort_context",
								"  js_TA_cmp_generic",
								"  js_typed_array_sort",
								"  js_typed_array_base_constructor",
								"  typed_array_init",
								"  js_array_from_iterator",
								"  js_typed_array_constructor_obj",
								"  js_typed_array_constructor_ta",
								"  js_typed_array_constructor",
								"  js_typed_array_finalizer",
								"  js_typed_array_mark",
								"  js_dataview_constructor",
								"  js_dataview_getValue",
								"  js_dataview_setValue",
								"AtomicsOpEnum",
								"  js_atomics_get_ptr",
								"  js_atomics_op",
								"OP",
								"OP",
								"  js_atomics_store",
								"  js_atomics_isLockFree",
								"JSAtomicsWaiter",
								"  js_atomics_wait",
								"  js_atomics_notify",
								"JS_AddIntrinsicAtomics",
								"JS_AddIntrinsicTypedArrays",
								"JS_GetClassID",
								"  js_debugger_current_location",
								"  js_debugger_info",
								"  js_debugger_stack_depth",
								"  js_debugger_build_backtrace",
								"  js_debugger_check_breakpoint",
								"  js_debugger_local_variables",
								"  js_debugger_closure_variables",
								"  js_debugger_eval",
								"  js_debugger_evaluate"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643084837.87,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "tests/test_lexer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14740,
						"regions":
						{
						},
						"selection":
						[
							[
								11609,
								11609
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 367,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642953682.55,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6586.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "quickjs-lexer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41276,
						"regions":
						{
						},
						"selection":
						[
							[
								25949,
								25956
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 968,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642742099.18,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 18946.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/jslexer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16459,
						"regions":
						{
						},
						"selection":
						[
							[
								16211,
								16211
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 116,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643084802.88,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1500.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/fs.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14006,
						"regions":
						{
						},
						"selection":
						[
							[
								6698,
								6782
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 309,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643089830.59,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4836.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64368,
						"regions":
						{
						},
						"selection":
						[
							[
								16089,
								16111
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 625,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643067229.59,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10274.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "qjsm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3501600,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/Binary/Binary.sublime-syntax",
							"tabs_extra_last_activated": 1643067233.25,
							"tabs_extra_last_activated_sheet_index": 4
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "qjsm.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35083,
						"regions":
						{
						},
						"selection":
						[
							[
								13321,
								13321
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 496,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643083366.25,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8015.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18668,
						"regions":
						{
						},
						"selection":
						[
							[
								12881,
								13203
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 374,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643092322.64,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5975.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "tests/test_stack.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1176,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643153592.27,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "tests/test_xml.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3108,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643153596.78,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "quickjs-inspect.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39624,
						"regions":
						{
						},
						"selection":
						[
							[
								530,
								554
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 27,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643167652.87,
							"tabs_extra_last_activated_sheet_index": 10,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 570.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "tests/test_misc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6172,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643083454.68,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2201.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29191,
						"regions":
						{
						},
						"selection":
						[
							[
								10235,
								10236
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 285,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643170516.98,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4360.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "cmake/functions.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2987,
						"regions":
						{
						},
						"selection":
						[
							[
								1841,
								2987
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 63,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643171711.46,
							"tabs_extra_last_activated_sheet_index": 13,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1522614,
						"regions":
						{
						},
						"selection":
						[
							[
								223794,
								223794
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 7402,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643194369.25,
							"tabs_extra_last_activated_sheet_index": 14,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 147626.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "lib/console.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3979,
						"regions":
						{
						},
						"selection":
						[
							[
								253,
								267
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 8,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643171713.67,
							"tabs_extra_last_activated_sheet_index": 17,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "property-enumeration.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6751,
						"regions":
						{
						},
						"selection":
						[
							[
								792,
								809
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 31,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642903234.56,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "char-utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8854,
						"regions":
						{
						},
						"selection":
						[
							[
								4323,
								4323
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 116,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642738485.75,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2226.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "lib/bnflexer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6621,
						"regions":
						{
						},
						"selection":
						[
							[
								4098,
								4098
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 102,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642738190.68,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1626.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "lib/clexer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2633,
						"regions":
						{
						},
						"selection":
						[
							[
								2170,
								2173
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 92,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642738191.79,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1079.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "lexer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2880,
						"regions":
						{
						},
						"selection":
						[
							[
								852,
								867
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 50,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642742072.24,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 779.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "lexer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10926,
						"regions":
						{
						},
						"selection":
						[
							[
								674,
								680
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 35,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642742071.32,
							"tabs_extra_last_activated_sheet_index": 8,
							"tabs_extra_moving":
							[
								2,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 106.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test",
				"tests/test_stack.js"
			],
			[
				"jsutils",
				"CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d"
			],
			[
				"jslexe",
				"lib/jslexer.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"xpath.j",
				"lib/xpath.js"
			],
			[
				"predicate.h",
				"predicate.h"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"list.h",
				"~/Projects/plot-cv/quickjs/list.h"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"queue",
				"queue.c"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"path.c",
				"path.c"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"test_wa",
				"tests/test_watch.js"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"tree-wa",
				"quickjs-tree-walker.c"
			],
			[
				"quick",
				"quickjs-xml.c"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"predi",
				"predicate.c"
			],
			[
				"cmakelis",
				"CMakeLists.txt"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"char-u",
				"char-utils.h"
			],
			[
				"",
				"tests/test_xml.js"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"doxy",
				"Doxyfile"
			],
			[
				"Doxyfile",
				"Doxyfile"
			],
			[
				"interna",
				"quickjs-internal.h"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"console.js",
				"lib/console.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"child",
				"child-process.c"
			],
			[
				"qsort_r",
				"qsort_r.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"quicksj-misc",
				"quickjs-misc.c"
			],
			[
				"process.js",
				"lib/process.js"
			],
			[
				"quickjs-mm",
				"quickjs-mmap.c"
			],
			[
				"quickjs-m",
				"quickjs-misc.c"
			],
			[
				"redicate.c",
				"predicate.c"
			],
			[
				"sockets.h",
				"quickjs-sockets.h"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"char-",
				"char-utils.h"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"conso",
				"lib/console.js"
			],
			[
				"clang-f",
				".clang-format"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"test_mi",
				"tests/test_misc.js"
			],
			[
				"ockets.",
				"quickjs-sockets.h"
			],
			[
				"quickjs-ar",
				"quickjs-archive.c"
			],
			[
				"fd_set",
				"lib/fd_set.js"
			],
			[
				"buffer-ut",
				"buffer-utils.c"
			],
			[
				"misc.",
				"quickjs-misc.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"socklen_t.js",
				"lib/socklen_t.js"
			],
			[
				"str.h",
				"quickjs-stringdecoder.h"
			],
			[
				"quickjs-libc",
				"~/Sources/plot-cv/quickjs/quickjs-libc.h"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.c"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"test_loca",
				"tests/test_location.js"
			],
			[
				".clang-fo",
				".clang-format"
			],
			[
				"buff",
				"buffer-utils.c"
			],
			[
				"buffer-util",
				"buffer-utils.c"
			],
			[
				"buffer-utils.c",
				"buffer-utils.c"
			],
			[
				"quickjs-so",
				"quickjs-sockets.c"
			],
			[
				"quickjs-insp",
				"quickjs-inspect.c"
			],
			[
				"test_soc",
				"tests/test_sockets.js"
			],
			[
				"test_qjsm",
				"tests/test_qjsm.js"
			],
			[
				"buffer-tu",
				"buffer-utils.c"
			],
			[
				"repl.",
				"lib/repl.js"
			],
			[
				"quickjs-blo",
				"quickjs-blob.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"test_mis",
				"tests/test_misc.js"
			],
			[
				"test_blob",
				"tests/test_blob.js"
			],
			[
				"test_string",
				"tests/test_stringdecoder.js"
			],
			[
				"test_str",
				"tests/test_stringdecoder.js"
			],
			[
				"quickjs-blb",
				"quickjs-blob.h"
			],
			[
				"ringbuffer.h",
				"ringbuffer.h"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 282.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
