{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"JS_Throw",
				"JS_ThrowTypeError"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"get",
				"getOwnPropertyNames"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyFunctionList"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"JS_New",
				"JS_NewCFunctionData"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_SetP",
				"JS_SetPropertyStr"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_",
				"js_sockaddr_class_id"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"JS_Thr",
				"JS_ThrowInternalError"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					2253,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								61,
								77
							],
							[
								254,
								271
							],
							[
								303,
								326
							],
							[
								400,
								417
							],
							[
								455,
								472
							],
							[
								586,
								603
							],
							[
								655,
								687
							],
							[
								792,
								809
							],
							[
								896,
								920
							],
							[
								955,
								979
							],
							[
								1016,
								1040
							],
							[
								1078,
								1102
							],
							[
								1141,
								1165
							],
							[
								1339,
								1363
							],
							[
								1404,
								1428
							],
							[
								1475,
								1478
							],
							[
								1482,
								1506
							],
							[
								1569,
								1573
							],
							[
								1577,
								1601
							],
							[
								1996,
								2016
							],
							[
								2776,
								2793
							],
							[
								2838,
								2847
							],
							[
								5769,
								5793
							],
							[
								5823,
								5847
							],
							[
								5918,
								5934
							],
							[
								5967,
								5980
							],
							[
								6024,
								6044
							],
							[
								6120,
								6142
							],
							[
								6180,
								6196
							],
							[
								6285,
								6309
							],
							[
								6421,
								6441
							],
							[
								6463,
								6482
							],
							[
								6593,
								6608
							],
							[
								6784,
								6799
							],
							[
								6810,
								6825
							],
							[
								6896,
								6911
							],
							[
								6914,
								6929
							],
							[
								7014,
								7029
							],
							[
								7032,
								7047
							],
							[
								7133,
								7144
							],
							[
								7240,
								7249
							],
							[
								7260,
								7274
							],
							[
								7277,
								7285
							],
							[
								7289,
								7298
							],
							[
								7313,
								7333
							],
							[
								7369,
								7383
							],
							[
								7404,
								7424
							],
							[
								7431,
								7449
							],
							[
								7481,
								7494
							],
							[
								7513,
								7531
							],
							[
								7567,
								7584
							],
							[
								7611,
								7624
							],
							[
								7657,
								7670
							],
							[
								7673,
								7686
							],
							[
								7755,
								7768
							],
							[
								7771,
								7784
							],
							[
								7823,
								7836
							],
							[
								7839,
								7852
							],
							[
								7869,
								7885
							],
							[
								7948,
								7961
							],
							[
								7986,
								8006
							],
							[
								8014,
								8034
							],
							[
								8086,
								8107
							],
							[
								8214,
								8227
							],
							[
								8231,
								8245
							],
							[
								8252,
								8264
							],
							[
								8271,
								8285
							],
							[
								8370,
								8383
							],
							[
								8387,
								8404
							],
							[
								8442,
								8456
							],
							[
								8488,
								8503
							],
							[
								8506,
								8520
							],
							[
								8536,
								8549
							],
							[
								8641,
								8660
							],
							[
								8663,
								8677
							],
							[
								8751,
								8764
							],
							[
								8771,
								8782
							],
							[
								8785,
								8799
							],
							[
								8849,
								8862
							],
							[
								8882,
								8898
							],
							[
								8902,
								8917
							],
							[
								8924,
								8936
							],
							[
								8953,
								8966
							],
							[
								8970,
								8990
							],
							[
								9018,
								9030
							],
							[
								9033,
								9045
							],
							[
								9086,
								9103
							],
							[
								9130,
								9144
							],
							[
								9148,
								9161
							],
							[
								9168,
								9183
							],
							[
								9206,
								9219
							],
							[
								9223,
								9243
							],
							[
								9250,
								9263
							],
							[
								9304,
								9317
							],
							[
								9321,
								9335
							],
							[
								9376,
								9391
							],
							[
								9410,
								9422
							],
							[
								9425,
								9438
							],
							[
								9442,
								9462
							],
							[
								9469,
								9485
							],
							[
								9488,
								9501
							],
							[
								9505,
								9525
							],
							[
								9532,
								9547
							],
							[
								9566,
								9579
							],
							[
								9583,
								9603
							],
							[
								9635,
								9650
							],
							[
								9653,
								9668
							],
							[
								9738,
								9753
							],
							[
								9756,
								9771
							],
							[
								9837,
								9854
							],
							[
								9877,
								9892
							],
							[
								9895,
								9910
							],
							[
								9959,
								9971
							],
							[
								9974,
								9988
							],
							[
								9992,
								10005
							],
							[
								10012,
								10033
							],
							[
								10136,
								10156
							],
							[
								10160,
								10173
							],
							[
								10177,
								10191
							],
							[
								10199,
								10211
							],
							[
								10270,
								10282
							],
							[
								10303,
								10319
							],
							[
								10323,
								10337
							],
							[
								10345,
								10357
							],
							[
								10377,
								10397
							],
							[
								10400,
								10413
							],
							[
								10417,
								10437
							],
							[
								10551,
								10574
							],
							[
								10581,
								10596
							],
							[
								10599,
								10612
							],
							[
								10619,
								10636
							],
							[
								10639,
								10659
							],
							[
								10667,
								10685
							],
							[
								10688,
								10702
							],
							[
								10706,
								10726
							],
							[
								10770,
								10785
							],
							[
								10788,
								10803
							],
							[
								10881,
								10896
							],
							[
								10899,
								10914
							],
							[
								10930,
								10942
							],
							[
								10945,
								10957
							],
							[
								11134,
								11154
							],
							[
								11556,
								11575
							],
							[
								11603,
								11622
							],
							[
								11626,
								11645
							],
							[
								11704,
								11723
							],
							[
								11834,
								11853
							],
							[
								11883,
								11902
							],
							[
								11906,
								11925
							],
							[
								11986,
								12005
							],
							[
								12125,
								12144
							],
							[
								12176,
								12195
							],
							[
								12199,
								12218
							],
							[
								12281,
								12300
							],
							[
								12443,
								12467
							],
							[
								12472,
								12477
							],
							[
								12529,
								12534
							],
							[
								12558,
								12562
							],
							[
								12604,
								12608
							],
							[
								12633,
								12637
							],
							[
								12687,
								12711
							],
							[
								12715,
								12739
							],
							[
								12765,
								12768
							],
							[
								12783,
								12787
							],
							[
								12811,
								12835
							],
							[
								12871,
								12875
							],
							[
								12930,
								12954
							],
							[
								12958,
								12982
							],
							[
								12987,
								12991
							],
							[
								13029,
								13033
							],
							[
								13041,
								13045
							],
							[
								13051,
								13075
							],
							[
								13079,
								13083
							],
							[
								13113,
								13137
							],
							[
								13157,
								13161
							],
							[
								13185,
								13190
							],
							[
								13620,
								13635
							],
							[
								13675,
								13689
							],
							[
								13739,
								13750
							],
							[
								13754,
								13778
							],
							[
								13818,
								13835
							],
							[
								13869,
								13896
							],
							[
								13909,
								13936
							],
							[
								13971,
								13988
							],
							[
								14051,
								14066
							],
							[
								14085,
								14094
							],
							[
								14143,
								14152
							],
							[
								14183,
								14194
							],
							[
								14318,
								14329
							],
							[
								14333,
								14360
							],
							[
								14363,
								14374
							],
							[
								14377,
								14404
							],
							[
								14431,
								14446
							],
							[
								14469,
								14480
							],
							[
								14528,
								14547
							],
							[
								14550,
								14554
							],
							[
								14574,
								14591
							],
							[
								14614,
								14628
							],
							[
								14657,
								14661
							],
							[
								14668,
								14683
							],
							[
								14703,
								14713
							],
							[
								14852,
								14865
							],
							[
								14873,
								14877
							],
							[
								14881,
								14905
							],
							[
								15061,
								15074
							],
							[
								15113,
								15137
							],
							[
								15143,
								15154
							],
							[
								15181,
								15192
							],
							[
								15218,
								15227
							],
							[
								15240,
								15244
							],
							[
								15258,
								15269
							],
							[
								15304,
								15328
							],
							[
								15358,
								15371
							],
							[
								15394,
								15418
							],
							[
								15521,
								15526
							],
							[
								15543,
								15564
							],
							[
								15626,
								15637
							],
							[
								15812,
								15823
							],
							[
								15894,
								15904
							],
							[
								15934,
								15945
							],
							[
								15961,
								15985
							],
							[
								16008,
								16028
							],
							[
								16031,
								16055
							],
							[
								16074,
								16094
							],
							[
								16120,
								16140
							],
							[
								16213,
								16232
							],
							[
								16236,
								16256
							],
							[
								16315,
								16334
							],
							[
								16352,
								16376
							],
							[
								16425,
								16436
							],
							[
								16460,
								16464
							],
							[
								16483,
								16494
							],
							[
								16521,
								16545
							],
							[
								16573,
								16582
							],
							[
								16606,
								16630
							],
							[
								16708,
								16732
							],
							[
								16776,
								16788
							],
							[
								16806,
								16817
							],
							[
								16832,
								16843
							],
							[
								16861,
								16872
							],
							[
								16890,
								16901
							],
							[
								16918,
								16929
							],
							[
								16947,
								16958
							],
							[
								16971,
								16982
							],
							[
								17003,
								17014
							],
							[
								17032,
								17043
							],
							[
								17057,
								17068
							],
							[
								17083,
								17101
							],
							[
								17117,
								17141
							],
							[
								17197,
								17209
							],
							[
								17220,
								17232
							],
							[
								17236,
								17260
							],
							[
								17294,
								17318
							],
							[
								17352,
								17370
							],
							[
								17416,
								17440
							],
							[
								17509,
								17521
							],
							[
								17597,
								17615
							],
							[
								17691,
								17707
							],
							[
								17932,
								17943
							],
							[
								17950,
								17972
							],
							[
								17976,
								17998
							],
							[
								18004,
								18015
							],
							[
								18076,
								18087
							],
							[
								18093,
								18104
							],
							[
								18153,
								18175
							],
							[
								18229,
								18248
							],
							[
								18287,
								18302
							],
							[
								18306,
								18316
							],
							[
								18320,
								18330
							],
							[
								18334,
								18338
							],
							[
								18342,
								18347
							],
							[
								18385,
								18394
							],
							[
								18475,
								18490
							],
							[
								18520,
								18542
							],
							[
								18568,
								18587
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"USE_SPAWN",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"stringdecoder_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"archive_SOURCES",
							"utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJS",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"NAME",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QJSM_LIBDIR",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"QJSM_MODULE",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"QUICKJS_MODULES",
							"QJSM_LIBDIR",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"QJSM",
							"TEST_SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY",
							"QJSM_LDADD",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_MODULE_PATH"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					2254,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
						"symkeys":
						[
							[
								9,
								22
							],
							[
								90,
								101
							],
							[
								134,
								153
							],
							[
								248,
								259
							],
							[
								263,
								290
							],
							[
								387,
								398
							],
							[
								411,
								432
							],
							[
								516,
								530
							],
							[
								558,
								564
							],
							[
								616,
								620
							],
							[
								633,
								639
							],
							[
								651,
								662
							],
							[
								666,
								682
							],
							[
								700,
								711
							],
							[
								715,
								726
							],
							[
								768,
								779
							],
							[
								803,
								814
							],
							[
								817,
								821
							],
							[
								845,
								856
							],
							[
								860,
								871
							],
							[
								875,
								879
							],
							[
								934,
								938
							],
							[
								950,
								966
							],
							[
								970,
								986
							],
							[
								1372,
								1376
							],
							[
								1399,
								1410
							],
							[
								1428,
								1432
							],
							[
								1447,
								1458
							],
							[
								1467,
								1491
							],
							[
								1495,
								1501
							],
							[
								1518,
								1527
							],
							[
								1554,
								1578
							],
							[
								1605,
								1616
							],
							[
								1625,
								1631
							],
							[
								1668,
								1692
							],
							[
								1696,
								1702
							],
							[
								1784,
								1795
							],
							[
								1897,
								1902
							],
							[
								1946,
								1951
							],
							[
								1975,
								1980
							],
							[
								2031,
								2037
							],
							[
								2048,
								2059
							],
							[
								2066,
								2070
							],
							[
								2093,
								2100
							],
							[
								2103,
								2107
							],
							[
								2113,
								2118
							],
							[
								2119,
								2127
							],
							[
								2138,
								2142
							],
							[
								2145,
								2149
							],
							[
								2155,
								2160
							],
							[
								2161,
								2166
							],
							[
								2190,
								2197
							],
							[
								2208,
								2212
							],
							[
								2220,
								2225
							],
							[
								2226,
								2234
							],
							[
								2282,
								2299
							],
							[
								2333,
								2353
							],
							[
								2392,
								2409
							],
							[
								2457,
								2474
							],
							[
								2508,
								2514
							],
							[
								2545,
								2562
							],
							[
								2596,
								2602
							],
							[
								2631,
								2648
							],
							[
								2761,
								2772
							],
							[
								2783,
								2790
							],
							[
								2829,
								2840
							],
							[
								2868,
								2887
							],
							[
								2900,
								2906
							],
							[
								2924,
								2929
							],
							[
								2966,
								2986
							],
							[
								3031,
								3042
							],
							[
								3091,
								3096
							],
							[
								3153,
								3175
							],
							[
								3210,
								3221
							],
							[
								3233,
								3257
							],
							[
								3289,
								3300
							],
							[
								3311,
								3326
							],
							[
								3406,
								3417
							],
							[
								3434,
								3454
							],
							[
								3614,
								3625
							],
							[
								3637,
								3646
							],
							[
								3651,
								3656
							],
							[
								3657,
								3667
							],
							[
								3718,
								3729
							],
							[
								3741,
								3750
							],
							[
								3812,
								3823
							],
							[
								3827,
								3831
							],
							[
								3898,
								3909
							],
							[
								3927,
								3934
							],
							[
								3944,
								3958
							],
							[
								3962,
								3980
							],
							[
								4016,
								4027
							],
							[
								4044,
								4062
							],
							[
								4066,
								4080
							],
							[
								4136,
								4153
							],
							[
								4187,
								4201
							],
							[
								4217,
								4231
							],
							[
								4281,
								4298
							],
							[
								4358,
								4372
							],
							[
								4376,
								4403
							],
							[
								4468,
								4482
							],
							[
								4486,
								4513
							],
							[
								4572,
								4583
							],
							[
								4618,
								4623
							],
							[
								4636,
								4650
							],
							[
								4663,
								4677
							],
							[
								4734,
								4745
							],
							[
								4781,
								4786
							],
							[
								4848,
								4870
							],
							[
								4902,
								4913
							],
							[
								4932,
								4956
							],
							[
								4986,
								4997
							],
							[
								5015,
								5030
							],
							[
								5078,
								5101
							],
							[
								5303,
								5335
							]
						],
						"symlist":
						[
							"config_module",
							"TARGET_NAME",
							"QUICKJS_LIBRARY_DIR",
							"TARGET_NAME",
							"QUICKJS_MODULE_DEPENDENCIES",
							"TARGET_NAME",
							"QUICKJS_MODULE_CFLAGS",
							"compile_module",
							"SOURCE",
							"BASE",
							"SOURCE",
							"MODULES_DIR",
							"CMAKE_BINARY_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"OUTPUT_FILE",
							"ARGN",
							"OUTPUT_FILE",
							"MODULES_DIR",
							"BASE",
							"BASE",
							"COMPILED_MODULES",
							"COMPILED_MODULES",
							"BASE",
							"OUTPUT_FILE",
							"QJSC",
							"OUTPUT_FILE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"SOURCE",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"OUTPUT_FILE",
							"SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"SOURCE",
							"make_module",
							"FNAME",
							"FNAME",
							"FNAME",
							"UUNAME",
							"TARGET_NAME",
							"NAME",
							"SOURCES",
							"ARGN",
							"VNAME",
							"_SOURCES",
							"DEPS",
							"ARGN",
							"VNAME",
							"_DEPS",
							"SOURCES",
							"NAME",
							"VNAME",
							"_SOURCES",
							"CMAKE_SYSTEM_NAME",
							"BUILD_SHARED_MODULES",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"PREFIX",
							"CMAKE_SYSTEM_NAME",
							"PREFIX",
							"CMAKE_SYSTEM_NAME",
							"TARGET_NAME",
							"SOURCES",
							"TARGET_NAME",
							"MBEDTLS_LIBRARY_DIR",
							"PREFIX",
							"VNAME",
							"MODULE_COMPILE_FLAGS",
							"TARGET_NAME",
							"UNAME",
							"QUICKJS_INSTALL_PREFIX",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"TARGET_NAME",
							"QUICKJS_C_MODULE_DIR",
							"TARGET_NAME",
							"LIBRARIES",
							"VNAME",
							"_LIBRARIES",
							"TARGET_NAME",
							"LIBRARIES",
							"TARGET_NAME",
							"DEPS",
							"TARGET_NAME",
							"SOURCES",
							"MODULES_STATIC",
							"QJS_MODULES_STATIC",
							"TARGET_NAME",
							"QJS_MODULES_STATIC",
							"MODULES_STATIC",
							"CMAKE_SYSTEM_NAME",
							"LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"LIBRARY_PREFIX",
							"CMAKE_STATIC_LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"CMAKE_STATIC_LIBRARY_SUFFIX",
							"TARGET_NAME",
							"VNAME",
							"LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"TARGET_NAME",
							"UNAME",
							"QUICKJS_INSTALL_PREFIX",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"CMAKE_EXECUTABLE_SUFFIX",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhEgAAQ01BS0VfQ19TVEFOREFSRApDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApCVUlMRF9TSEFSRURfTElCUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUUpTCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRSlNDCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9SRVFVSVJFRF9RVUlFVApIQVZFX1BPU0lYX1NQQVdOUApVU0VfU1BBV04KQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX1NZU1JPT1QKQ01BS0VfVE9PTENIQUlOX0ZJTEUKQ01BS0VfVkVSQk9TRV9NQUtFRklMRQpDTUFLRV9CVUlMRF9UWVBFCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSUwpRVUlDS0pTX0xJQlJBUllfRElSClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpMSUJfTU9EVUxFUwpRVUlDS0pTX0gKQ09NTU9OX0hFQURFUlMKQ1VUSUxTX0gKUVVJQ0tKU19ICiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgY2hhcl91dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGNoYXJfdXRpbHNfU09VUkNFUwogIHByZWRpY2F0ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBzeXNjYWxsZXJyb3JfU09VUkNFUwogIGNoaWxkX3Byb2Nlc3NfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGRlZXBfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHByZWRpY2F0ZV9TT1VSQ0VTCiAgZGVlcF9MSUJSQVJJRVMKICBpbnNwZWN0X1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB0cmVlX3dhbGtlcl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgeG1sX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgaW5zcGVjdF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBwb2ludGVyX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBsZXhlcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgbGV4ZXJfTElCUkFSSUVTCiAgbW1hcF9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgcmVwZWF0ZXJfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfTElCUkFSSUVTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgYmxvYl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgc3RyaW5nZGVjb2Rlcl9TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBtaXNjX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBncGlvX1NPVVJDRVMKICBzeXNjYWxsZXJyb3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwpMaWJBcmNoaXZlX0lOQ0xVREVfRElSUwogIGFyY2hpdmVfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBhcmNoaXZlX0xJQlJBUklFUwpMaWJBcmNoaXZlX0xJQlJBUklFUwpRSlNNX0VYVFJBX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwogIG1tYXBfU09VUkNFUwogIG1tYXBfU09VUkNFUwpDTUFLRV9SRVFVSVJFRF9RVUlFVApDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVFMKVEVTVFMKVEVTVApCQVNFCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRSlMKVEVTVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQkFTRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKU0MKTkFNRQpCQVNFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpURVNUCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpURVNUClRFU1RTClFVSUNLSlNfTU9EVUxFUwpTSEFSRURfVEFSR0VUUwpRSlNNX0xJQkRJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfSU1QT1JUX0xJQlJBUllfUFJFRklYCkNNQUtFX0lNUE9SVF9MSUJSQVJZX1NVRkZJWApDTUFLRV9TWVNURU1fTkFNRQpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRSlNNX0xJQkRJUgpDTUFLRV9JTVBPUlRfTElCUkFSWV9QUkVGSVgKUUpTTV9NT0RVTEUKQ01BS0VfSU1QT1JUX0xJQlJBUllfU1VGRklYClFVSUNLSlNfTU9EVUxFUwpRSlNNX0xJQkRJUgogIHByZWRpY2F0ZV9MSUJSQVJJRVMKTElCTQogIHNvY2tldHNfTElCUkFSSUVTCiAgZGVlcF9MSUJSQVJJRVMKTElCTQogIGxleGVyX0xJQlJBUklFUwogIGxleGVyX0RFUFMKVEVTVFNfU09VUkNFUwpRSlNNCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpURVNUU19TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpURVNUX1NPVVJDRQpURVNUX1NPVVJDRQpURVNUX05BTUUKUUpTTQpURVNUX1NPVVJDRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKTElCSlMKUVVJQ0tKU19KU19NT0RVTEVfRElSCkxJQl9NT0RVTEVTCkxJQl9NT0RVTEVTCkxJQl9NT0RVTEUKTElCX01PRFVMRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfU09VUkNFU19ST09UCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSClFVSUNLSlNfU09VUkNFU19ST09UClFVSUNLSlNfSU5DTFVERV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRVNfRElSClFKU0MKTU9EVUxFU19ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU0NfREVQUwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpRSlNNX0VYVFJBX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpRSlNNX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpUUkFOU1BPUlRfUExBVEZPUk0KQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpRSlNfTU9EVUxFU19TVEFUSUMKQ09NUElMRURfTU9EVUxFUwpRSlNNX0xJQkRJUgpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTCkNNQUtFX0VYRV9MSU5LRVJfRkxBR1MKUUpTTV9MSUJESVIKTElOS19FWFBPUlQKUUpTTV9MSUJESVIKUVVJQ0tKU19JTlNUQUxMX1BSRUZJWApRVUlDS0pTX0xJQlJBUllfRElSClFVSUNLSlNfTElCUkFSWQpRSlNNX0xEQURECkxJQlBUSFJFQUQKTElCTQpMSUJETApMSUJXUzJfMzIKUVVJQ0tKU19WRVJTSU9OClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKUVVJQ0tKU19NT0RVTEVfUEFUSAAAAAAAAAAA1AUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					2255,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
						"symkeys":
						[
							[
								9,
								22
							],
							[
								90,
								101
							],
							[
								134,
								153
							],
							[
								248,
								259
							],
							[
								263,
								290
							],
							[
								387,
								398
							],
							[
								411,
								432
							],
							[
								516,
								530
							],
							[
								558,
								564
							],
							[
								616,
								620
							],
							[
								633,
								639
							],
							[
								651,
								662
							],
							[
								666,
								682
							],
							[
								700,
								711
							],
							[
								715,
								726
							],
							[
								768,
								779
							],
							[
								803,
								814
							],
							[
								817,
								821
							],
							[
								845,
								856
							],
							[
								860,
								871
							],
							[
								875,
								879
							],
							[
								934,
								938
							],
							[
								950,
								966
							],
							[
								970,
								986
							],
							[
								1372,
								1376
							],
							[
								1399,
								1410
							],
							[
								1428,
								1432
							],
							[
								1447,
								1458
							],
							[
								1467,
								1491
							],
							[
								1495,
								1501
							],
							[
								1518,
								1527
							],
							[
								1554,
								1578
							],
							[
								1605,
								1616
							],
							[
								1625,
								1631
							],
							[
								1668,
								1692
							],
							[
								1696,
								1702
							],
							[
								1784,
								1795
							],
							[
								1897,
								1902
							],
							[
								1946,
								1951
							],
							[
								1975,
								1980
							],
							[
								2031,
								2037
							],
							[
								2048,
								2059
							],
							[
								2066,
								2070
							],
							[
								2093,
								2100
							],
							[
								2103,
								2107
							],
							[
								2113,
								2118
							],
							[
								2119,
								2127
							],
							[
								2138,
								2142
							],
							[
								2145,
								2149
							],
							[
								2155,
								2160
							],
							[
								2161,
								2166
							],
							[
								2190,
								2197
							],
							[
								2208,
								2212
							],
							[
								2220,
								2225
							],
							[
								2226,
								2234
							],
							[
								2282,
								2299
							],
							[
								2333,
								2353
							],
							[
								2392,
								2409
							],
							[
								2457,
								2474
							],
							[
								2508,
								2514
							],
							[
								2545,
								2562
							],
							[
								2596,
								2602
							],
							[
								2631,
								2648
							],
							[
								2761,
								2772
							],
							[
								2783,
								2790
							],
							[
								2829,
								2840
							],
							[
								2868,
								2887
							],
							[
								2900,
								2906
							],
							[
								2924,
								2929
							],
							[
								2966,
								2986
							],
							[
								3031,
								3042
							],
							[
								3091,
								3096
							],
							[
								3153,
								3175
							],
							[
								3210,
								3221
							],
							[
								3233,
								3257
							],
							[
								3289,
								3300
							],
							[
								3311,
								3326
							],
							[
								3406,
								3417
							],
							[
								3434,
								3454
							],
							[
								3614,
								3625
							],
							[
								3637,
								3646
							],
							[
								3651,
								3656
							],
							[
								3657,
								3667
							],
							[
								3718,
								3729
							],
							[
								3741,
								3750
							],
							[
								3812,
								3823
							],
							[
								3827,
								3831
							],
							[
								3898,
								3909
							],
							[
								3927,
								3934
							],
							[
								3944,
								3958
							],
							[
								3962,
								3980
							],
							[
								4016,
								4027
							],
							[
								4044,
								4062
							],
							[
								4066,
								4080
							],
							[
								4124,
								4135
							],
							[
								4170,
								4175
							],
							[
								4188,
								4202
							],
							[
								4215,
								4229
							],
							[
								4286,
								4297
							],
							[
								4333,
								4338
							],
							[
								4400,
								4422
							],
							[
								4454,
								4465
							],
							[
								4484,
								4508
							],
							[
								4538,
								4549
							],
							[
								4567,
								4582
							],
							[
								4630,
								4653
							],
							[
								4855,
								4887
							],
							[
								4955,
								4972
							],
							[
								5006,
								5020
							],
							[
								5036,
								5050
							],
							[
								5100,
								5117
							],
							[
								5177,
								5191
							],
							[
								5195,
								5222
							],
							[
								5287,
								5301
							],
							[
								5305,
								5332
							]
						],
						"symlist":
						[
							"config_module",
							"TARGET_NAME",
							"QUICKJS_LIBRARY_DIR",
							"TARGET_NAME",
							"QUICKJS_MODULE_DEPENDENCIES",
							"TARGET_NAME",
							"QUICKJS_MODULE_CFLAGS",
							"compile_module",
							"SOURCE",
							"BASE",
							"SOURCE",
							"MODULES_DIR",
							"CMAKE_BINARY_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"OUTPUT_FILE",
							"ARGN",
							"OUTPUT_FILE",
							"MODULES_DIR",
							"BASE",
							"BASE",
							"COMPILED_MODULES",
							"COMPILED_MODULES",
							"BASE",
							"OUTPUT_FILE",
							"QJSC",
							"OUTPUT_FILE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"SOURCE",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"OUTPUT_FILE",
							"SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"SOURCE",
							"make_module",
							"FNAME",
							"FNAME",
							"FNAME",
							"UUNAME",
							"TARGET_NAME",
							"NAME",
							"SOURCES",
							"ARGN",
							"VNAME",
							"_SOURCES",
							"DEPS",
							"ARGN",
							"VNAME",
							"_DEPS",
							"SOURCES",
							"NAME",
							"VNAME",
							"_SOURCES",
							"CMAKE_SYSTEM_NAME",
							"BUILD_SHARED_MODULES",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"PREFIX",
							"CMAKE_SYSTEM_NAME",
							"PREFIX",
							"CMAKE_SYSTEM_NAME",
							"TARGET_NAME",
							"SOURCES",
							"TARGET_NAME",
							"MBEDTLS_LIBRARY_DIR",
							"PREFIX",
							"VNAME",
							"MODULE_COMPILE_FLAGS",
							"TARGET_NAME",
							"UNAME",
							"QUICKJS_INSTALL_PREFIX",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"TARGET_NAME",
							"QUICKJS_C_MODULE_DIR",
							"TARGET_NAME",
							"LIBRARIES",
							"VNAME",
							"_LIBRARIES",
							"TARGET_NAME",
							"LIBRARIES",
							"TARGET_NAME",
							"DEPS",
							"TARGET_NAME",
							"SOURCES",
							"MODULES_STATIC",
							"QJS_MODULES_STATIC",
							"TARGET_NAME",
							"QJS_MODULES_STATIC",
							"MODULES_STATIC",
							"TARGET_NAME",
							"VNAME",
							"LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"TARGET_NAME",
							"UNAME",
							"QUICKJS_INSTALL_PREFIX",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"CMAKE_EXECUTABLE_SUFFIX",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"LIBRARY_PREFIX",
							"CMAKE_STATIC_LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"CMAKE_STATIC_LIBRARY_SUFFIX"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAADUBQAAICBjb25maWdfbW9kdWxlClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWV9ESVIKVEFSR0VUX05BTUUKUVVJQ0tKU19NT0RVTEVfREVQRU5ERU5DSUVTClRBUkdFVF9OQU1FClFVSUNLSlNfTU9EVUxFX0NGTEFHUwogIGNvbXBpbGVfbW9kdWxlClNPVVJDRQpCQVNFClNPVVJDRQpNT0RVTEVTX0RJUgpDTUFLRV9CSU5BUllfRElSCk1PRFVMRVNfRElSCk1PRFVMRVNfRElSCk1PRFVMRVNfRElSCk9VVFBVVF9GSUxFCkFSR04KT1VUUFVUX0ZJTEUKTU9EVUxFU19ESVIKQkFTRQpCQVNFCkNPTVBJTEVEX01PRFVMRVMKQ09NUElMRURfTU9EVUxFUwpCQVNFCk9VVFBVVF9GSUxFClFKU0MKT1VUUFVUX0ZJTEUKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClNPVVJDRQpRSlNDX0RFUFMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCk9VVFBVVF9GSUxFClNPVVJDRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKU09VUkNFCiAgbWFrZV9tb2R1bGUKRk5BTUUKRk5BTUUKRk5BTUUKVVVOQU1FClRBUkdFVF9OQU1FCk5BTUUKU09VUkNFUwpBUkdOClZOQU1FCiAgX1NPVVJDRVMKREVQUwpBUkdOClZOQU1FCiAgX0RFUFMKU09VUkNFUwpOQU1FClZOQU1FCiAgX1NPVVJDRVMKQ01BS0VfU1lTVEVNX05BTUUKQlVJTERfU0hBUkVEX01PRFVMRVMKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfU1lTVEVNX05BTUUKUFJFRklYCkNNQUtFX1NZU1RFTV9OQU1FClBSRUZJWApDTUFLRV9TWVNURU1fTkFNRQpUQVJHRVRfTkFNRQpTT1VSQ0VTClRBUkdFVF9OQU1FCk1CRURUTFNfTElCUkFSWV9ESVIKUFJFRklYClZOQU1FCk1PRFVMRV9DT01QSUxFX0ZMQUdTClRBUkdFVF9OQU1FClVOQU1FClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKVEFSR0VUX05BTUUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWQpUQVJHRVRfTkFNRQpRVUlDS0pTX0NfTU9EVUxFX0RJUgpUQVJHRVRfTkFNRQpMSUJSQVJJRVMKVk5BTUUKICBfTElCUkFSSUVTClRBUkdFVF9OQU1FCkxJQlJBUklFUwpUQVJHRVRfTkFNRQpERVBTClRBUkdFVF9OQU1FClNPVVJDRVMKTU9EVUxFU19TVEFUSUMKUUpTX01PRFVMRVNfU1RBVElDClRBUkdFVF9OQU1FClFKU19NT0RVTEVTX1NUQVRJQwpNT0RVTEVTX1NUQVRJQwpDTUFLRV9TWVNURU1fTkFNRQpMSUJSQVJZX1BSRUZJWApMSUJSQVJZX1NVRkZJWApDTUFLRV9TWVNURU1fTkFNRQpMSUJSQVJZX1BSRUZJWApDTUFLRV9TVEFUSUNfTElCUkFSWV9QUkVGSVgKTElCUkFSWV9TVUZGSVgKQ01BS0VfU1RBVElDX0xJQlJBUllfU1VGRklYClRBUkdFVF9OQU1FClZOQU1FCkxJQlJBUllfUFJFRklYCkxJQlJBUllfU1VGRklYClRBUkdFVF9OQU1FClVOQU1FClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKVEFSR0VUX05BTUUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWQpDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwAAAAAAAAAA1AUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANQFAAAgIGNvbmZpZ19tb2R1bGUKVEFSR0VUX05BTUUKUVVJQ0tKU19MSUJSQVJZX0RJUgpUQVJHRVRfTkFNRQpRVUlDS0pTX01PRFVMRV9ERVBFTkRFTkNJRVMKVEFSR0VUX05BTUUKUVVJQ0tKU19NT0RVTEVfQ0ZMQUdTCiAgY29tcGlsZV9tb2R1bGUKU09VUkNFCkJBU0UKU09VUkNFCk1PRFVMRVNfRElSCkNNQUtFX0JJTkFSWV9ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKT1VUUFVUX0ZJTEUKQVJHTgpPVVRQVVRfRklMRQpNT0RVTEVTX0RJUgpCQVNFCkJBU0UKQ09NUElMRURfTU9EVUxFUwpDT01QSUxFRF9NT0RVTEVTCkJBU0UKT1VUUFVUX0ZJTEUKUUpTQwpPVVRQVVRfRklMRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKU09VUkNFClFKU0NfREVQUwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKT1VUUFVUX0ZJTEUKU09VUkNFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpTT1VSQ0UKICBtYWtlX21vZHVsZQpGTkFNRQpGTkFNRQpGTkFNRQpVVU5BTUUKVEFSR0VUX05BTUUKTkFNRQpTT1VSQ0VTCkFSR04KVk5BTUUKICBfU09VUkNFUwpERVBTCkFSR04KVk5BTUUKICBfREVQUwpTT1VSQ0VTCk5BTUUKVk5BTUUKICBfU09VUkNFUwpDTUFLRV9TWVNURU1fTkFNRQpCVUlMRF9TSEFSRURfTU9EVUxFUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9TWVNURU1fTkFNRQpQUkVGSVgKQ01BS0VfU1lTVEVNX05BTUUKUFJFRklYCkNNQUtFX1NZU1RFTV9OQU1FClRBUkdFVF9OQU1FClNPVVJDRVMKVEFSR0VUX05BTUUKTUJFRFRMU19MSUJSQVJZX0RJUgpQUkVGSVgKVk5BTUUKTU9EVUxFX0NPTVBJTEVfRkxBR1MKVEFSR0VUX05BTUUKVU5BTUUKUVVJQ0tKU19JTlNUQUxMX1BSRUZJWApUQVJHRVRfTkFNRQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEFSR0VUX05BTUUKUVVJQ0tKU19MSUJSQVJZClRBUkdFVF9OQU1FClFVSUNLSlNfQ19NT0RVTEVfRElSClRBUkdFVF9OQU1FCkxJQlJBUklFUwpWTkFNRQogIF9MSUJSQVJJRVMKVEFSR0VUX05BTUUKTElCUkFSSUVTClRBUkdFVF9OQU1FCkRFUFMKVEFSR0VUX05BTUUKU09VUkNFUwpNT0RVTEVTX1NUQVRJQwpRSlNfTU9EVUxFU19TVEFUSUMKVEFSR0VUX05BTUUKUUpTX01PRFVMRVNfU1RBVElDCk1PRFVMRVNfU1RBVElDClRBUkdFVF9OQU1FClZOQU1FCkxJQlJBUllfUFJFRklYCkxJQlJBUllfU1VGRklYClRBUkdFVF9OQU1FClVOQU1FClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKVEFSR0VUX05BTUUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWQpDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9TWVNURU1fTkFNRQpMSUJSQVJZX1BSRUZJWApMSUJSQVJZX1NVRkZJWApDTUFLRV9TWVNURU1fTkFNRQpMSUJSQVJZX1BSRUZJWApDTUFLRV9TVEFUSUNfTElCUkFSWV9QUkVGSVgKTElCUkFSWV9TVUZGSVgKQ01BS0VfU1RBVElDX0xJQlJBUllfU1VGRklYAAAAAAAAAADUBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1AUAACAgY29uZmlnX21vZHVsZQpUQVJHRVRfTkFNRQpRVUlDS0pTX0xJQlJBUllfRElSClRBUkdFVF9OQU1FClFVSUNLSlNfTU9EVUxFX0RFUEVOREVOQ0lFUwpUQVJHRVRfTkFNRQpRVUlDS0pTX01PRFVMRV9DRkxBR1MKICBjb21waWxlX21vZHVsZQpTT1VSQ0UKQkFTRQpTT1VSQ0UKTU9EVUxFU19ESVIKQ01BS0VfQklOQVJZX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpPVVRQVVRfRklMRQpBUkdOCk9VVFBVVF9GSUxFCk1PRFVMRVNfRElSCkJBU0UKQkFTRQpDT01QSUxFRF9NT0RVTEVTCkNPTVBJTEVEX01PRFVMRVMKQkFTRQpPVVRQVVRfRklMRQpRSlNDCk9VVFBVVF9GSUxFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpTT1VSQ0UKUUpTQ19ERVBTCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpPVVRQVVRfRklMRQpTT1VSQ0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClNPVVJDRQogIG1ha2VfbW9kdWxlCkZOQU1FCkZOQU1FCkZOQU1FClVVTkFNRQpUQVJHRVRfTkFNRQpOQU1FClNPVVJDRVMKQVJHTgpWTkFNRQogIF9TT1VSQ0VTCkRFUFMKQVJHTgpWTkFNRQogIF9ERVBTClNPVVJDRVMKTkFNRQpWTkFNRQogIF9TT1VSQ0VTCkNNQUtFX1NZU1RFTV9OQU1FCkJVSUxEX1NIQVJFRF9NT0RVTEVTCkNNQUtFX1NZU1RFTV9OQU1FCkNNQUtFX1NZU1RFTV9OQU1FClBSRUZJWApDTUFLRV9TWVNURU1fTkFNRQpQUkVGSVgKQ01BS0VfU1lTVEVNX05BTUUKVEFSR0VUX05BTUUKU09VUkNFUwpUQVJHRVRfTkFNRQpNQkVEVExTX0xJQlJBUllfRElSClBSRUZJWApWTkFNRQpNT0RVTEVfQ09NUElMRV9GTEFHUwpUQVJHRVRfTkFNRQpVTkFNRQpRVUlDS0pTX0lOU1RBTExfUFJFRklYClRBUkdFVF9OQU1FCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpUQVJHRVRfTkFNRQpRVUlDS0pTX0xJQlJBUlkKVEFSR0VUX05BTUUKUVVJQ0tKU19DX01PRFVMRV9ESVIKVEFSR0VUX05BTUUKTElCUkFSSUVTClZOQU1FCiAgX0xJQlJBUklFUwpUQVJHRVRfTkFNRQpMSUJSQVJJRVMKVEFSR0VUX05BTUUKREVQUwpUQVJHRVRfTkFNRQpTT1VSQ0VTCk1PRFVMRVNfU1RBVElDClFKU19NT0RVTEVTX1NUQVRJQwpUQVJHRVRfTkFNRQpRSlNfTU9EVUxFU19TVEFUSUMKTU9EVUxFU19TVEFUSUMKVEFSR0VUX05BTUUKVk5BTUUKTElCUkFSWV9QUkVGSVgKTElCUkFSWV9TVUZGSVgKVEFSR0VUX05BTUUKVU5BTUUKUVVJQ0tKU19JTlNUQUxMX1BSRUZJWApUQVJHRVRfTkFNRQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEFSR0VUX05BTUUKUVVJQ0tKU19MSUJSQVJZCkNNQUtFX0VYRUNVVEFCTEVfU1VGRklYCkNNQUtFX1dJTkRPV1NfRVhQT1JUX0FMTF9TWU1CT0xTCkNNQUtFX1NZU1RFTV9OQU1FCkxJQlJBUllfUFJFRklYCkxJQlJBUllfU1VGRklYCkNNQUtFX1NZU1RFTV9OQU1FCkxJQlJBUllfUFJFRklYCkNNQUtFX1NUQVRJQ19MSUJSQVJZX1BSRUZJWApMSUJSQVJZX1NVRkZJWApDTUFLRV9TVEFUSUNfTElCUkFSWV9TVUZGSVgAAAAAAAAAANQFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					2256,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
						"symkeys":
						[
							[
								9,
								22
							],
							[
								90,
								101
							],
							[
								134,
								153
							],
							[
								248,
								259
							],
							[
								263,
								290
							],
							[
								387,
								398
							],
							[
								411,
								432
							],
							[
								516,
								530
							],
							[
								558,
								564
							],
							[
								616,
								620
							],
							[
								633,
								639
							],
							[
								651,
								662
							],
							[
								666,
								682
							],
							[
								700,
								711
							],
							[
								715,
								726
							],
							[
								768,
								779
							],
							[
								803,
								814
							],
							[
								817,
								821
							],
							[
								845,
								856
							],
							[
								860,
								871
							],
							[
								875,
								879
							],
							[
								934,
								938
							],
							[
								950,
								966
							],
							[
								970,
								986
							],
							[
								1372,
								1376
							],
							[
								1399,
								1410
							],
							[
								1428,
								1432
							],
							[
								1447,
								1458
							],
							[
								1467,
								1491
							],
							[
								1495,
								1501
							],
							[
								1518,
								1527
							],
							[
								1554,
								1578
							],
							[
								1605,
								1616
							],
							[
								1625,
								1631
							],
							[
								1668,
								1692
							],
							[
								1696,
								1702
							],
							[
								1784,
								1795
							],
							[
								1897,
								1902
							],
							[
								1946,
								1951
							],
							[
								1975,
								1980
							],
							[
								2031,
								2037
							],
							[
								2048,
								2059
							],
							[
								2066,
								2070
							],
							[
								2093,
								2100
							],
							[
								2103,
								2107
							],
							[
								2113,
								2118
							],
							[
								2119,
								2127
							],
							[
								2138,
								2142
							],
							[
								2145,
								2149
							],
							[
								2155,
								2160
							],
							[
								2161,
								2166
							],
							[
								2190,
								2197
							],
							[
								2208,
								2212
							],
							[
								2220,
								2225
							],
							[
								2226,
								2234
							],
							[
								2282,
								2299
							],
							[
								2333,
								2353
							],
							[
								2392,
								2409
							],
							[
								2457,
								2474
							],
							[
								2508,
								2514
							],
							[
								2545,
								2562
							],
							[
								2596,
								2602
							],
							[
								2631,
								2648
							],
							[
								2761,
								2772
							],
							[
								2783,
								2790
							],
							[
								2829,
								2840
							],
							[
								2868,
								2887
							],
							[
								2900,
								2906
							],
							[
								2924,
								2929
							],
							[
								2966,
								2986
							],
							[
								3031,
								3042
							],
							[
								3091,
								3096
							],
							[
								3153,
								3175
							],
							[
								3210,
								3221
							],
							[
								3233,
								3257
							],
							[
								3289,
								3300
							],
							[
								3311,
								3326
							],
							[
								3406,
								3417
							],
							[
								3434,
								3454
							],
							[
								3614,
								3625
							],
							[
								3637,
								3646
							],
							[
								3651,
								3656
							],
							[
								3657,
								3667
							],
							[
								3718,
								3729
							],
							[
								3741,
								3750
							],
							[
								3812,
								3823
							],
							[
								3827,
								3831
							],
							[
								3898,
								3909
							],
							[
								3927,
								3934
							],
							[
								3944,
								3958
							],
							[
								3962,
								3980
							],
							[
								4016,
								4027
							],
							[
								4044,
								4062
							],
							[
								4066,
								4080
							],
							[
								4124,
								4135
							],
							[
								4170,
								4175
							],
							[
								4188,
								4202
							],
							[
								4215,
								4229
							],
							[
								4286,
								4297
							],
							[
								4333,
								4338
							],
							[
								4400,
								4422
							],
							[
								4454,
								4465
							],
							[
								4484,
								4508
							],
							[
								4538,
								4549
							],
							[
								4567,
								4582
							],
							[
								4630,
								4653
							],
							[
								4855,
								4887
							],
							[
								4955,
								4972
							],
							[
								5006,
								5020
							],
							[
								5036,
								5050
							],
							[
								5100,
								5117
							],
							[
								5177,
								5191
							],
							[
								5195,
								5222
							],
							[
								5287,
								5301
							],
							[
								5305,
								5332
							]
						],
						"symlist":
						[
							"config_module",
							"TARGET_NAME",
							"QUICKJS_LIBRARY_DIR",
							"TARGET_NAME",
							"QUICKJS_MODULE_DEPENDENCIES",
							"TARGET_NAME",
							"QUICKJS_MODULE_CFLAGS",
							"compile_module",
							"SOURCE",
							"BASE",
							"SOURCE",
							"MODULES_DIR",
							"CMAKE_BINARY_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"OUTPUT_FILE",
							"ARGN",
							"OUTPUT_FILE",
							"MODULES_DIR",
							"BASE",
							"BASE",
							"COMPILED_MODULES",
							"COMPILED_MODULES",
							"BASE",
							"OUTPUT_FILE",
							"QJSC",
							"OUTPUT_FILE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"SOURCE",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"OUTPUT_FILE",
							"SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"SOURCE",
							"make_module",
							"FNAME",
							"FNAME",
							"FNAME",
							"UUNAME",
							"TARGET_NAME",
							"NAME",
							"SOURCES",
							"ARGN",
							"VNAME",
							"_SOURCES",
							"DEPS",
							"ARGN",
							"VNAME",
							"_DEPS",
							"SOURCES",
							"NAME",
							"VNAME",
							"_SOURCES",
							"CMAKE_SYSTEM_NAME",
							"BUILD_SHARED_MODULES",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"PREFIX",
							"CMAKE_SYSTEM_NAME",
							"PREFIX",
							"CMAKE_SYSTEM_NAME",
							"TARGET_NAME",
							"SOURCES",
							"TARGET_NAME",
							"MBEDTLS_LIBRARY_DIR",
							"PREFIX",
							"VNAME",
							"MODULE_COMPILE_FLAGS",
							"TARGET_NAME",
							"UNAME",
							"QUICKJS_INSTALL_PREFIX",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"TARGET_NAME",
							"QUICKJS_C_MODULE_DIR",
							"TARGET_NAME",
							"LIBRARIES",
							"VNAME",
							"_LIBRARIES",
							"TARGET_NAME",
							"LIBRARIES",
							"TARGET_NAME",
							"DEPS",
							"TARGET_NAME",
							"SOURCES",
							"MODULES_STATIC",
							"QJS_MODULES_STATIC",
							"TARGET_NAME",
							"QJS_MODULES_STATIC",
							"MODULES_STATIC",
							"TARGET_NAME",
							"VNAME",
							"LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"TARGET_NAME",
							"UNAME",
							"QUICKJS_INSTALL_PREFIX",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"CMAKE_EXECUTABLE_SUFFIX",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"LIBRARY_PREFIX",
							"CMAKE_STATIC_LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"CMAKE_STATIC_LIBRARY_SUFFIX"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADUBQAAICBjb25maWdfbW9kdWxlClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWV9ESVIKVEFSR0VUX05BTUUKUVVJQ0tKU19NT0RVTEVfREVQRU5ERU5DSUVTClRBUkdFVF9OQU1FClFVSUNLSlNfTU9EVUxFX0NGTEFHUwogIGNvbXBpbGVfbW9kdWxlClNPVVJDRQpCQVNFClNPVVJDRQpNT0RVTEVTX0RJUgpDTUFLRV9CSU5BUllfRElSCk1PRFVMRVNfRElSCk1PRFVMRVNfRElSCk1PRFVMRVNfRElSCk9VVFBVVF9GSUxFCkFSR04KT1VUUFVUX0ZJTEUKTU9EVUxFU19ESVIKQkFTRQpCQVNFCkNPTVBJTEVEX01PRFVMRVMKQ09NUElMRURfTU9EVUxFUwpCQVNFCk9VVFBVVF9GSUxFClFKU0MKT1VUUFVUX0ZJTEUKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClNPVVJDRQpRSlNDX0RFUFMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCk9VVFBVVF9GSUxFClNPVVJDRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKU09VUkNFCiAgbWFrZV9tb2R1bGUKRk5BTUUKRk5BTUUKRk5BTUUKVVVOQU1FClRBUkdFVF9OQU1FCk5BTUUKU09VUkNFUwpBUkdOClZOQU1FCiAgX1NPVVJDRVMKREVQUwpBUkdOClZOQU1FCiAgX0RFUFMKU09VUkNFUwpOQU1FClZOQU1FCiAgX1NPVVJDRVMKQ01BS0VfU1lTVEVNX05BTUUKQlVJTERfU0hBUkVEX01PRFVMRVMKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfU1lTVEVNX05BTUUKUFJFRklYCkNNQUtFX1NZU1RFTV9OQU1FClBSRUZJWApDTUFLRV9TWVNURU1fTkFNRQpUQVJHRVRfTkFNRQpTT1VSQ0VTClRBUkdFVF9OQU1FCk1CRURUTFNfTElCUkFSWV9ESVIKUFJFRklYClZOQU1FCk1PRFVMRV9DT01QSUxFX0ZMQUdTClRBUkdFVF9OQU1FClVOQU1FClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKVEFSR0VUX05BTUUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWQpUQVJHRVRfTkFNRQpRVUlDS0pTX0NfTU9EVUxFX0RJUgpUQVJHRVRfTkFNRQpMSUJSQVJJRVMKVk5BTUUKICBfTElCUkFSSUVTClRBUkdFVF9OQU1FCkxJQlJBUklFUwpUQVJHRVRfTkFNRQpERVBTClRBUkdFVF9OQU1FClNPVVJDRVMKTU9EVUxFU19TVEFUSUMKUUpTX01PRFVMRVNfU1RBVElDClRBUkdFVF9OQU1FClFKU19NT0RVTEVTX1NUQVRJQwpNT0RVTEVTX1NUQVRJQwpUQVJHRVRfTkFNRQpWTkFNRQpMSUJSQVJZX1BSRUZJWApMSUJSQVJZX1NVRkZJWApUQVJHRVRfTkFNRQpVTkFNRQpRVUlDS0pTX0lOU1RBTExfUFJFRklYClRBUkdFVF9OQU1FCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpUQVJHRVRfTkFNRQpRVUlDS0pTX0xJQlJBUlkKQ01BS0VfRVhFQ1VUQUJMRV9TVUZGSVgKQ01BS0VfV0lORE9XU19FWFBPUlRfQUxMX1NZTUJPTFMKQ01BS0VfU1lTVEVNX05BTUUKTElCUkFSWV9QUkVGSVgKTElCUkFSWV9TVUZGSVgKQ01BS0VfU1lTVEVNX05BTUUKTElCUkFSWV9QUkVGSVgKQ01BS0VfU1RBVElDX0xJQlJBUllfUFJFRklYCkxJQlJBUllfU1VGRklYCkNNQUtFX1NUQVRJQ19MSUJSQVJZX1NVRkZJWAAAAAAAAAAA1AUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					2257,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								61,
								77
							],
							[
								254,
								271
							],
							[
								303,
								326
							],
							[
								400,
								417
							],
							[
								455,
								472
							],
							[
								586,
								603
							],
							[
								655,
								687
							],
							[
								792,
								809
							],
							[
								896,
								920
							],
							[
								955,
								979
							],
							[
								1016,
								1040
							],
							[
								1078,
								1102
							],
							[
								1141,
								1165
							],
							[
								1339,
								1363
							],
							[
								1404,
								1428
							],
							[
								1475,
								1478
							],
							[
								1482,
								1506
							],
							[
								1569,
								1573
							],
							[
								1577,
								1601
							],
							[
								1996,
								2016
							],
							[
								2776,
								2793
							],
							[
								2838,
								2847
							],
							[
								5769,
								5793
							],
							[
								5823,
								5847
							],
							[
								5918,
								5934
							],
							[
								5967,
								5980
							],
							[
								6024,
								6044
							],
							[
								6120,
								6142
							],
							[
								6180,
								6196
							],
							[
								6285,
								6309
							],
							[
								6421,
								6441
							],
							[
								6463,
								6482
							],
							[
								6593,
								6608
							],
							[
								6784,
								6799
							],
							[
								6810,
								6825
							],
							[
								6896,
								6911
							],
							[
								6914,
								6929
							],
							[
								7014,
								7029
							],
							[
								7032,
								7047
							],
							[
								7133,
								7144
							],
							[
								7240,
								7249
							],
							[
								7260,
								7274
							],
							[
								7277,
								7285
							],
							[
								7289,
								7298
							],
							[
								7313,
								7333
							],
							[
								7369,
								7383
							],
							[
								7404,
								7424
							],
							[
								7431,
								7449
							],
							[
								7481,
								7494
							],
							[
								7513,
								7531
							],
							[
								7567,
								7584
							],
							[
								7611,
								7624
							],
							[
								7657,
								7670
							],
							[
								7673,
								7686
							],
							[
								7755,
								7768
							],
							[
								7771,
								7784
							],
							[
								7823,
								7836
							],
							[
								7839,
								7852
							],
							[
								7869,
								7885
							],
							[
								7948,
								7961
							],
							[
								7986,
								8006
							],
							[
								8014,
								8034
							],
							[
								8086,
								8107
							],
							[
								8214,
								8227
							],
							[
								8231,
								8245
							],
							[
								8252,
								8264
							],
							[
								8271,
								8285
							],
							[
								8370,
								8383
							],
							[
								8387,
								8404
							],
							[
								8442,
								8456
							],
							[
								8488,
								8503
							],
							[
								8506,
								8520
							],
							[
								8536,
								8549
							],
							[
								8641,
								8660
							],
							[
								8663,
								8677
							],
							[
								8751,
								8764
							],
							[
								8771,
								8782
							],
							[
								8785,
								8799
							],
							[
								8849,
								8862
							],
							[
								8882,
								8898
							],
							[
								8902,
								8917
							],
							[
								8924,
								8936
							],
							[
								8953,
								8966
							],
							[
								8970,
								8990
							],
							[
								9018,
								9030
							],
							[
								9033,
								9045
							],
							[
								9086,
								9103
							],
							[
								9130,
								9144
							],
							[
								9148,
								9161
							],
							[
								9168,
								9183
							],
							[
								9206,
								9219
							],
							[
								9223,
								9243
							],
							[
								9250,
								9263
							],
							[
								9304,
								9317
							],
							[
								9321,
								9335
							],
							[
								9376,
								9391
							],
							[
								9410,
								9422
							],
							[
								9425,
								9438
							],
							[
								9442,
								9462
							],
							[
								9469,
								9485
							],
							[
								9488,
								9501
							],
							[
								9505,
								9525
							],
							[
								9532,
								9547
							],
							[
								9566,
								9579
							],
							[
								9583,
								9603
							],
							[
								9635,
								9650
							],
							[
								9653,
								9668
							],
							[
								9738,
								9753
							],
							[
								9756,
								9771
							],
							[
								9837,
								9854
							],
							[
								9877,
								9892
							],
							[
								9895,
								9910
							],
							[
								9959,
								9971
							],
							[
								9974,
								9988
							],
							[
								9992,
								10005
							],
							[
								10012,
								10033
							],
							[
								10136,
								10156
							],
							[
								10160,
								10173
							],
							[
								10177,
								10191
							],
							[
								10199,
								10211
							],
							[
								10270,
								10282
							],
							[
								10303,
								10319
							],
							[
								10323,
								10337
							],
							[
								10345,
								10357
							],
							[
								10377,
								10397
							],
							[
								10400,
								10413
							],
							[
								10417,
								10437
							],
							[
								10551,
								10574
							],
							[
								10581,
								10596
							],
							[
								10599,
								10612
							],
							[
								10619,
								10636
							],
							[
								10639,
								10659
							],
							[
								10667,
								10685
							],
							[
								10688,
								10702
							],
							[
								10706,
								10726
							],
							[
								10770,
								10785
							],
							[
								10788,
								10803
							],
							[
								10881,
								10896
							],
							[
								10899,
								10914
							],
							[
								10930,
								10942
							],
							[
								10945,
								10957
							],
							[
								11134,
								11154
							],
							[
								11556,
								11575
							],
							[
								11603,
								11622
							],
							[
								11626,
								11645
							],
							[
								11704,
								11723
							],
							[
								11834,
								11853
							],
							[
								11883,
								11902
							],
							[
								11906,
								11925
							],
							[
								11986,
								12005
							],
							[
								12125,
								12144
							],
							[
								12176,
								12195
							],
							[
								12199,
								12218
							],
							[
								12281,
								12300
							],
							[
								12443,
								12467
							],
							[
								12472,
								12477
							],
							[
								12529,
								12534
							],
							[
								12558,
								12562
							],
							[
								12604,
								12608
							],
							[
								12633,
								12637
							],
							[
								12687,
								12711
							],
							[
								12715,
								12739
							],
							[
								12765,
								12768
							],
							[
								12783,
								12787
							],
							[
								12811,
								12835
							],
							[
								12871,
								12875
							],
							[
								12930,
								12954
							],
							[
								12958,
								12982
							],
							[
								12987,
								12991
							],
							[
								13029,
								13033
							],
							[
								13041,
								13045
							],
							[
								13051,
								13075
							],
							[
								13079,
								13083
							],
							[
								13113,
								13137
							],
							[
								13157,
								13161
							],
							[
								13185,
								13190
							],
							[
								13620,
								13635
							],
							[
								13675,
								13689
							],
							[
								13739,
								13750
							],
							[
								13754,
								13778
							],
							[
								13818,
								13835
							],
							[
								13869,
								13896
							],
							[
								13909,
								13936
							],
							[
								13971,
								13988
							],
							[
								14051,
								14066
							],
							[
								14085,
								14094
							],
							[
								14143,
								14152
							],
							[
								14183,
								14194
							],
							[
								14318,
								14329
							],
							[
								14333,
								14360
							],
							[
								14363,
								14374
							],
							[
								14377,
								14404
							],
							[
								14431,
								14446
							],
							[
								14469,
								14480
							],
							[
								14528,
								14547
							],
							[
								14550,
								14554
							],
							[
								14574,
								14591
							],
							[
								14614,
								14628
							],
							[
								14657,
								14661
							],
							[
								14668,
								14683
							],
							[
								14703,
								14713
							],
							[
								14852,
								14865
							],
							[
								14873,
								14877
							],
							[
								14881,
								14905
							],
							[
								15061,
								15074
							],
							[
								15113,
								15137
							],
							[
								15143,
								15154
							],
							[
								15181,
								15192
							],
							[
								15218,
								15227
							],
							[
								15240,
								15244
							],
							[
								15258,
								15269
							],
							[
								15304,
								15328
							],
							[
								15358,
								15371
							],
							[
								15394,
								15418
							],
							[
								15521,
								15526
							],
							[
								15543,
								15564
							],
							[
								15626,
								15637
							],
							[
								15812,
								15823
							],
							[
								15894,
								15904
							],
							[
								15934,
								15945
							],
							[
								15961,
								15985
							],
							[
								16008,
								16028
							],
							[
								16031,
								16055
							],
							[
								16074,
								16094
							],
							[
								16120,
								16140
							],
							[
								16213,
								16232
							],
							[
								16236,
								16256
							],
							[
								16315,
								16334
							],
							[
								16352,
								16376
							],
							[
								16425,
								16436
							],
							[
								16460,
								16464
							],
							[
								16483,
								16494
							],
							[
								16521,
								16545
							],
							[
								16573,
								16582
							],
							[
								16606,
								16630
							],
							[
								16708,
								16732
							],
							[
								16776,
								16788
							],
							[
								16806,
								16817
							],
							[
								16832,
								16843
							],
							[
								16861,
								16872
							],
							[
								16890,
								16901
							],
							[
								16918,
								16929
							],
							[
								16947,
								16958
							],
							[
								16971,
								16982
							],
							[
								17003,
								17014
							],
							[
								17032,
								17043
							],
							[
								17057,
								17068
							],
							[
								17083,
								17101
							],
							[
								17117,
								17141
							],
							[
								17197,
								17209
							],
							[
								17220,
								17232
							],
							[
								17236,
								17260
							],
							[
								17294,
								17318
							],
							[
								17352,
								17370
							],
							[
								17416,
								17440
							],
							[
								17509,
								17521
							],
							[
								17597,
								17615
							],
							[
								17691,
								17707
							],
							[
								17932,
								17943
							],
							[
								17950,
								17972
							],
							[
								17976,
								17998
							],
							[
								18004,
								18015
							],
							[
								18076,
								18087
							],
							[
								18093,
								18104
							],
							[
								18153,
								18175
							],
							[
								18229,
								18248
							],
							[
								18287,
								18302
							],
							[
								18306,
								18316
							],
							[
								18320,
								18330
							],
							[
								18334,
								18338
							],
							[
								18342,
								18347
							],
							[
								18385,
								18394
							],
							[
								18475,
								18490
							],
							[
								18520,
								18542
							],
							[
								18568,
								18587
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"USE_SPAWN",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"stringdecoder_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"archive_SOURCES",
							"utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJS",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"NAME",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QJSM_LIBDIR",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"QJSM_MODULE",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"QUICKJS_MODULES",
							"QJSM_LIBDIR",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"QJSM",
							"TEST_SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY",
							"QJSM_LDADD",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_MODULE_PATH"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADUBQAAICBjb25maWdfbW9kdWxlClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWV9ESVIKVEFSR0VUX05BTUUKUVVJQ0tKU19NT0RVTEVfREVQRU5ERU5DSUVTClRBUkdFVF9OQU1FClFVSUNLSlNfTU9EVUxFX0NGTEFHUwogIGNvbXBpbGVfbW9kdWxlClNPVVJDRQpCQVNFClNPVVJDRQpNT0RVTEVTX0RJUgpDTUFLRV9CSU5BUllfRElSCk1PRFVMRVNfRElSCk1PRFVMRVNfRElSCk1PRFVMRVNfRElSCk9VVFBVVF9GSUxFCkFSR04KT1VUUFVUX0ZJTEUKTU9EVUxFU19ESVIKQkFTRQpCQVNFCkNPTVBJTEVEX01PRFVMRVMKQ09NUElMRURfTU9EVUxFUwpCQVNFCk9VVFBVVF9GSUxFClFKU0MKT1VUUFVUX0ZJTEUKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClNPVVJDRQpRSlNDX0RFUFMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCk9VVFBVVF9GSUxFClNPVVJDRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKU09VUkNFCiAgbWFrZV9tb2R1bGUKRk5BTUUKRk5BTUUKRk5BTUUKVVVOQU1FClRBUkdFVF9OQU1FCk5BTUUKU09VUkNFUwpBUkdOClZOQU1FCiAgX1NPVVJDRVMKREVQUwpBUkdOClZOQU1FCiAgX0RFUFMKU09VUkNFUwpOQU1FClZOQU1FCiAgX1NPVVJDRVMKQ01BS0VfU1lTVEVNX05BTUUKQlVJTERfU0hBUkVEX01PRFVMRVMKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfU1lTVEVNX05BTUUKUFJFRklYCkNNQUtFX1NZU1RFTV9OQU1FClBSRUZJWApDTUFLRV9TWVNURU1fTkFNRQpUQVJHRVRfTkFNRQpTT1VSQ0VTClRBUkdFVF9OQU1FCk1CRURUTFNfTElCUkFSWV9ESVIKUFJFRklYClZOQU1FCk1PRFVMRV9DT01QSUxFX0ZMQUdTClRBUkdFVF9OQU1FClVOQU1FClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKVEFSR0VUX05BTUUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWQpUQVJHRVRfTkFNRQpRVUlDS0pTX0NfTU9EVUxFX0RJUgpUQVJHRVRfTkFNRQpMSUJSQVJJRVMKVk5BTUUKICBfTElCUkFSSUVTClRBUkdFVF9OQU1FCkxJQlJBUklFUwpUQVJHRVRfTkFNRQpERVBTClRBUkdFVF9OQU1FClNPVVJDRVMKTU9EVUxFU19TVEFUSUMKUUpTX01PRFVMRVNfU1RBVElDClRBUkdFVF9OQU1FClFKU19NT0RVTEVTX1NUQVRJQwpNT0RVTEVTX1NUQVRJQwpUQVJHRVRfTkFNRQpWTkFNRQpMSUJSQVJZX1BSRUZJWApMSUJSQVJZX1NVRkZJWApUQVJHRVRfTkFNRQpVTkFNRQpRVUlDS0pTX0lOU1RBTExfUFJFRklYClRBUkdFVF9OQU1FCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpUQVJHRVRfTkFNRQpRVUlDS0pTX0xJQlJBUlkKQ01BS0VfRVhFQ1VUQUJMRV9TVUZGSVgKQ01BS0VfV0lORE9XU19FWFBPUlRfQUxMX1NZTUJPTFMKQ01BS0VfU1lTVEVNX05BTUUKTElCUkFSWV9QUkVGSVgKTElCUkFSWV9TVUZGSVgKQ01BS0VfU1lTVEVNX05BTUUKTElCUkFSWV9QUkVGSVgKQ01BS0VfU1RBVElDX0xJQlJBUllfUFJFRklYCkxJQlJBUllfU1VGRklYCkNNQUtFX1NUQVRJQ19MSUJSQVJZX1NVRkZJWAAAAAAAAAAAYRIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					2258,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								61,
								77
							],
							[
								254,
								271
							],
							[
								303,
								326
							],
							[
								400,
								417
							],
							[
								455,
								472
							],
							[
								586,
								603
							],
							[
								655,
								687
							],
							[
								792,
								809
							],
							[
								896,
								920
							],
							[
								955,
								979
							],
							[
								1016,
								1040
							],
							[
								1078,
								1102
							],
							[
								1141,
								1165
							],
							[
								1339,
								1363
							],
							[
								1404,
								1428
							],
							[
								1475,
								1478
							],
							[
								1482,
								1506
							],
							[
								1569,
								1573
							],
							[
								1577,
								1601
							],
							[
								1996,
								2016
							],
							[
								2776,
								2793
							],
							[
								2838,
								2847
							],
							[
								5769,
								5793
							],
							[
								5823,
								5847
							],
							[
								5918,
								5934
							],
							[
								5967,
								5980
							],
							[
								6024,
								6044
							],
							[
								6120,
								6142
							],
							[
								6180,
								6196
							],
							[
								6285,
								6309
							],
							[
								6421,
								6441
							],
							[
								6463,
								6482
							],
							[
								6593,
								6608
							],
							[
								6784,
								6799
							],
							[
								6810,
								6825
							],
							[
								6896,
								6911
							],
							[
								6914,
								6929
							],
							[
								7014,
								7029
							],
							[
								7032,
								7047
							],
							[
								7133,
								7144
							],
							[
								7240,
								7249
							],
							[
								7260,
								7274
							],
							[
								7277,
								7285
							],
							[
								7289,
								7298
							],
							[
								7313,
								7333
							],
							[
								7369,
								7383
							],
							[
								7404,
								7424
							],
							[
								7431,
								7449
							],
							[
								7481,
								7494
							],
							[
								7513,
								7531
							],
							[
								7567,
								7584
							],
							[
								7611,
								7624
							],
							[
								7657,
								7670
							],
							[
								7673,
								7686
							],
							[
								7755,
								7768
							],
							[
								7771,
								7784
							],
							[
								7823,
								7836
							],
							[
								7839,
								7852
							],
							[
								7869,
								7885
							],
							[
								7948,
								7961
							],
							[
								7986,
								8006
							],
							[
								8014,
								8034
							],
							[
								8086,
								8107
							],
							[
								8214,
								8227
							],
							[
								8231,
								8245
							],
							[
								8252,
								8264
							],
							[
								8271,
								8285
							],
							[
								8370,
								8383
							],
							[
								8387,
								8404
							],
							[
								8442,
								8456
							],
							[
								8488,
								8503
							],
							[
								8506,
								8520
							],
							[
								8536,
								8549
							],
							[
								8641,
								8660
							],
							[
								8663,
								8677
							],
							[
								8751,
								8764
							],
							[
								8771,
								8782
							],
							[
								8785,
								8799
							],
							[
								8849,
								8862
							],
							[
								8882,
								8898
							],
							[
								8902,
								8917
							],
							[
								8924,
								8936
							],
							[
								8953,
								8966
							],
							[
								8970,
								8990
							],
							[
								9018,
								9030
							],
							[
								9033,
								9045
							],
							[
								9086,
								9103
							],
							[
								9130,
								9144
							],
							[
								9148,
								9161
							],
							[
								9168,
								9183
							],
							[
								9206,
								9219
							],
							[
								9223,
								9243
							],
							[
								9250,
								9263
							],
							[
								9304,
								9317
							],
							[
								9321,
								9335
							],
							[
								9376,
								9391
							],
							[
								9410,
								9422
							],
							[
								9425,
								9438
							],
							[
								9442,
								9462
							],
							[
								9469,
								9485
							],
							[
								9488,
								9501
							],
							[
								9505,
								9525
							],
							[
								9532,
								9547
							],
							[
								9566,
								9579
							],
							[
								9583,
								9603
							],
							[
								9635,
								9650
							],
							[
								9653,
								9668
							],
							[
								9738,
								9753
							],
							[
								9756,
								9771
							],
							[
								9837,
								9854
							],
							[
								9877,
								9892
							],
							[
								9895,
								9910
							],
							[
								9959,
								9971
							],
							[
								9974,
								9988
							],
							[
								9992,
								10005
							],
							[
								10012,
								10033
							],
							[
								10136,
								10156
							],
							[
								10160,
								10173
							],
							[
								10177,
								10191
							],
							[
								10199,
								10211
							],
							[
								10270,
								10282
							],
							[
								10303,
								10319
							],
							[
								10323,
								10337
							],
							[
								10345,
								10357
							],
							[
								10377,
								10397
							],
							[
								10400,
								10413
							],
							[
								10417,
								10437
							],
							[
								10551,
								10574
							],
							[
								10581,
								10596
							],
							[
								10599,
								10612
							],
							[
								10619,
								10636
							],
							[
								10639,
								10659
							],
							[
								10667,
								10685
							],
							[
								10688,
								10702
							],
							[
								10706,
								10726
							],
							[
								10770,
								10785
							],
							[
								10788,
								10803
							],
							[
								10881,
								10896
							],
							[
								10899,
								10914
							],
							[
								10930,
								10942
							],
							[
								10945,
								10957
							],
							[
								11134,
								11154
							],
							[
								11556,
								11575
							],
							[
								11603,
								11622
							],
							[
								11626,
								11645
							],
							[
								11704,
								11723
							],
							[
								11834,
								11853
							],
							[
								11883,
								11902
							],
							[
								11906,
								11925
							],
							[
								11986,
								12005
							],
							[
								12125,
								12144
							],
							[
								12176,
								12195
							],
							[
								12199,
								12218
							],
							[
								12281,
								12300
							],
							[
								12443,
								12467
							],
							[
								12472,
								12477
							],
							[
								12529,
								12534
							],
							[
								12558,
								12562
							],
							[
								12604,
								12608
							],
							[
								12633,
								12637
							],
							[
								12687,
								12711
							],
							[
								12715,
								12739
							],
							[
								12765,
								12768
							],
							[
								12783,
								12787
							],
							[
								12811,
								12835
							],
							[
								12871,
								12875
							],
							[
								12930,
								12954
							],
							[
								12958,
								12982
							],
							[
								12987,
								12991
							],
							[
								13029,
								13033
							],
							[
								13041,
								13045
							],
							[
								13051,
								13075
							],
							[
								13079,
								13083
							],
							[
								13113,
								13137
							],
							[
								13157,
								13161
							],
							[
								13185,
								13190
							],
							[
								13620,
								13635
							],
							[
								13675,
								13689
							],
							[
								13739,
								13750
							],
							[
								13754,
								13778
							],
							[
								13818,
								13835
							],
							[
								13869,
								13896
							],
							[
								13909,
								13936
							],
							[
								13971,
								13988
							],
							[
								14051,
								14066
							],
							[
								14085,
								14094
							],
							[
								14143,
								14152
							],
							[
								14183,
								14194
							],
							[
								14318,
								14329
							],
							[
								14333,
								14347
							],
							[
								14350,
								14361
							],
							[
								14364,
								14378
							],
							[
								14405,
								14420
							],
							[
								14443,
								14454
							],
							[
								14502,
								14521
							],
							[
								14524,
								14528
							],
							[
								14548,
								14565
							],
							[
								14588,
								14602
							],
							[
								14631,
								14635
							],
							[
								14642,
								14657
							],
							[
								14677,
								14687
							],
							[
								14826,
								14839
							],
							[
								14847,
								14851
							],
							[
								14855,
								14879
							],
							[
								15035,
								15048
							],
							[
								15087,
								15111
							],
							[
								15117,
								15128
							],
							[
								15155,
								15166
							],
							[
								15192,
								15201
							],
							[
								15214,
								15218
							],
							[
								15232,
								15243
							],
							[
								15278,
								15302
							],
							[
								15332,
								15345
							],
							[
								15368,
								15392
							],
							[
								15495,
								15500
							],
							[
								15517,
								15538
							],
							[
								15600,
								15611
							],
							[
								15786,
								15797
							],
							[
								15868,
								15878
							],
							[
								15908,
								15919
							],
							[
								15935,
								15959
							],
							[
								15982,
								16002
							],
							[
								16005,
								16029
							],
							[
								16048,
								16068
							],
							[
								16094,
								16114
							],
							[
								16187,
								16206
							],
							[
								16210,
								16230
							],
							[
								16289,
								16308
							],
							[
								16326,
								16350
							],
							[
								16399,
								16410
							],
							[
								16434,
								16438
							],
							[
								16457,
								16468
							],
							[
								16495,
								16519
							],
							[
								16547,
								16556
							],
							[
								16580,
								16604
							],
							[
								16682,
								16706
							],
							[
								16750,
								16762
							],
							[
								16780,
								16791
							],
							[
								16806,
								16817
							],
							[
								16835,
								16846
							],
							[
								16864,
								16875
							],
							[
								16892,
								16903
							],
							[
								16921,
								16932
							],
							[
								16945,
								16956
							],
							[
								16977,
								16988
							],
							[
								17006,
								17017
							],
							[
								17031,
								17042
							],
							[
								17057,
								17075
							],
							[
								17091,
								17115
							],
							[
								17171,
								17183
							],
							[
								17194,
								17206
							],
							[
								17210,
								17234
							],
							[
								17268,
								17292
							],
							[
								17326,
								17344
							],
							[
								17390,
								17414
							],
							[
								17483,
								17495
							],
							[
								17571,
								17589
							],
							[
								17665,
								17681
							],
							[
								17906,
								17917
							],
							[
								17924,
								17946
							],
							[
								17950,
								17972
							],
							[
								17978,
								17989
							],
							[
								18050,
								18061
							],
							[
								18067,
								18078
							],
							[
								18127,
								18149
							],
							[
								18203,
								18222
							],
							[
								18261,
								18276
							],
							[
								18280,
								18290
							],
							[
								18294,
								18304
							],
							[
								18308,
								18312
							],
							[
								18316,
								18321
							],
							[
								18359,
								18368
							],
							[
								18449,
								18464
							],
							[
								18494,
								18516
							],
							[
								18542,
								18561
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"USE_SPAWN",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"stringdecoder_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"archive_SOURCES",
							"utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJS",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"NAME",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QJSM_LIBDIR",
							"LIBRARY_PREFIX",
							"QJSM_MODULE",
							"LIBRARY_SUFFIX",
							"QUICKJS_MODULES",
							"QJSM_LIBDIR",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"QJSM",
							"TEST_SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY",
							"QJSM_LDADD",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_MODULE_PATH"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					2259,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
						"symkeys":
						[
							[
								9,
								22
							],
							[
								90,
								101
							],
							[
								134,
								153
							],
							[
								248,
								259
							],
							[
								263,
								290
							],
							[
								387,
								398
							],
							[
								411,
								432
							],
							[
								516,
								530
							],
							[
								558,
								564
							],
							[
								616,
								620
							],
							[
								633,
								639
							],
							[
								651,
								662
							],
							[
								666,
								682
							],
							[
								700,
								711
							],
							[
								715,
								726
							],
							[
								768,
								779
							],
							[
								803,
								814
							],
							[
								817,
								821
							],
							[
								845,
								856
							],
							[
								860,
								871
							],
							[
								875,
								879
							],
							[
								934,
								938
							],
							[
								950,
								966
							],
							[
								970,
								986
							],
							[
								1372,
								1376
							],
							[
								1399,
								1410
							],
							[
								1428,
								1432
							],
							[
								1447,
								1458
							],
							[
								1467,
								1491
							],
							[
								1495,
								1501
							],
							[
								1518,
								1527
							],
							[
								1554,
								1578
							],
							[
								1605,
								1616
							],
							[
								1625,
								1631
							],
							[
								1668,
								1692
							],
							[
								1696,
								1702
							],
							[
								1784,
								1795
							],
							[
								1897,
								1902
							],
							[
								1946,
								1951
							],
							[
								1975,
								1980
							],
							[
								2031,
								2037
							],
							[
								2048,
								2059
							],
							[
								2066,
								2070
							],
							[
								2093,
								2100
							],
							[
								2103,
								2107
							],
							[
								2113,
								2118
							],
							[
								2119,
								2127
							],
							[
								2138,
								2142
							],
							[
								2145,
								2149
							],
							[
								2155,
								2160
							],
							[
								2161,
								2166
							],
							[
								2190,
								2197
							],
							[
								2208,
								2212
							],
							[
								2220,
								2225
							],
							[
								2226,
								2234
							],
							[
								2282,
								2299
							],
							[
								2333,
								2353
							],
							[
								2392,
								2409
							],
							[
								2457,
								2474
							],
							[
								2508,
								2514
							],
							[
								2545,
								2562
							],
							[
								2596,
								2602
							],
							[
								2631,
								2648
							],
							[
								2761,
								2772
							],
							[
								2783,
								2790
							],
							[
								2829,
								2840
							],
							[
								2868,
								2887
							],
							[
								2900,
								2906
							],
							[
								2924,
								2929
							],
							[
								2966,
								2986
							],
							[
								3031,
								3042
							],
							[
								3091,
								3096
							],
							[
								3153,
								3175
							],
							[
								3210,
								3221
							],
							[
								3233,
								3257
							],
							[
								3289,
								3300
							],
							[
								3311,
								3326
							],
							[
								3406,
								3417
							],
							[
								3434,
								3454
							],
							[
								3614,
								3625
							],
							[
								3637,
								3646
							],
							[
								3651,
								3656
							],
							[
								3657,
								3667
							],
							[
								3718,
								3729
							],
							[
								3741,
								3750
							],
							[
								3812,
								3823
							],
							[
								3827,
								3831
							],
							[
								3898,
								3909
							],
							[
								3927,
								3934
							],
							[
								3944,
								3958
							],
							[
								3962,
								3980
							],
							[
								4016,
								4027
							],
							[
								4044,
								4062
							],
							[
								4066,
								4080
							],
							[
								4124,
								4135
							],
							[
								4170,
								4175
							],
							[
								4188,
								4202
							],
							[
								4215,
								4229
							],
							[
								4286,
								4297
							],
							[
								4333,
								4338
							],
							[
								4400,
								4422
							],
							[
								4454,
								4465
							],
							[
								4484,
								4508
							],
							[
								4538,
								4549
							],
							[
								4567,
								4582
							],
							[
								4630,
								4653
							],
							[
								4855,
								4887
							],
							[
								4955,
								4972
							],
							[
								5006,
								5020
							],
							[
								5036,
								5050
							],
							[
								5100,
								5117
							],
							[
								5177,
								5191
							],
							[
								5195,
								5222
							],
							[
								5287,
								5301
							],
							[
								5305,
								5332
							]
						],
						"symlist":
						[
							"config_module",
							"TARGET_NAME",
							"QUICKJS_LIBRARY_DIR",
							"TARGET_NAME",
							"QUICKJS_MODULE_DEPENDENCIES",
							"TARGET_NAME",
							"QUICKJS_MODULE_CFLAGS",
							"compile_module",
							"SOURCE",
							"BASE",
							"SOURCE",
							"MODULES_DIR",
							"CMAKE_BINARY_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"OUTPUT_FILE",
							"ARGN",
							"OUTPUT_FILE",
							"MODULES_DIR",
							"BASE",
							"BASE",
							"COMPILED_MODULES",
							"COMPILED_MODULES",
							"BASE",
							"OUTPUT_FILE",
							"QJSC",
							"OUTPUT_FILE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"SOURCE",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"OUTPUT_FILE",
							"SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"SOURCE",
							"make_module",
							"FNAME",
							"FNAME",
							"FNAME",
							"UUNAME",
							"TARGET_NAME",
							"NAME",
							"SOURCES",
							"ARGN",
							"VNAME",
							"_SOURCES",
							"DEPS",
							"ARGN",
							"VNAME",
							"_DEPS",
							"SOURCES",
							"NAME",
							"VNAME",
							"_SOURCES",
							"CMAKE_SYSTEM_NAME",
							"BUILD_SHARED_MODULES",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"PREFIX",
							"CMAKE_SYSTEM_NAME",
							"PREFIX",
							"CMAKE_SYSTEM_NAME",
							"TARGET_NAME",
							"SOURCES",
							"TARGET_NAME",
							"MBEDTLS_LIBRARY_DIR",
							"PREFIX",
							"VNAME",
							"MODULE_COMPILE_FLAGS",
							"TARGET_NAME",
							"UNAME",
							"QUICKJS_INSTALL_PREFIX",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"TARGET_NAME",
							"QUICKJS_C_MODULE_DIR",
							"TARGET_NAME",
							"LIBRARIES",
							"VNAME",
							"_LIBRARIES",
							"TARGET_NAME",
							"LIBRARIES",
							"TARGET_NAME",
							"DEPS",
							"TARGET_NAME",
							"SOURCES",
							"MODULES_STATIC",
							"QJS_MODULES_STATIC",
							"TARGET_NAME",
							"QJS_MODULES_STATIC",
							"MODULES_STATIC",
							"TARGET_NAME",
							"VNAME",
							"LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"TARGET_NAME",
							"UNAME",
							"QUICKJS_INSTALL_PREFIX",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"CMAKE_EXECUTABLE_SUFFIX",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"LIBRARY_PREFIX",
							"CMAKE_STATIC_LIBRARY_PREFIX",
							"LIBRARY_SUFFIX",
							"CMAKE_STATIC_LIBRARY_SUFFIX"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABHEgAAQ01BS0VfQ19TVEFOREFSRApDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApCVUlMRF9TSEFSRURfTElCUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUUpTCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRSlNDCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9SRVFVSVJFRF9RVUlFVApIQVZFX1BPU0lYX1NQQVdOUApVU0VfU1BBV04KQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX1NZU1JPT1QKQ01BS0VfVE9PTENIQUlOX0ZJTEUKQ01BS0VfVkVSQk9TRV9NQUtFRklMRQpDTUFLRV9CVUlMRF9UWVBFCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSUwpRVUlDS0pTX0xJQlJBUllfRElSClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpMSUJfTU9EVUxFUwpRVUlDS0pTX0gKQ09NTU9OX0hFQURFUlMKQ1VUSUxTX0gKUVVJQ0tKU19ICiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgY2hhcl91dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGNoYXJfdXRpbHNfU09VUkNFUwogIHByZWRpY2F0ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBzeXNjYWxsZXJyb3JfU09VUkNFUwogIGNoaWxkX3Byb2Nlc3NfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGRlZXBfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHByZWRpY2F0ZV9TT1VSQ0VTCiAgZGVlcF9MSUJSQVJJRVMKICBpbnNwZWN0X1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB0cmVlX3dhbGtlcl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgeG1sX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgaW5zcGVjdF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBwb2ludGVyX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBsZXhlcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgbGV4ZXJfTElCUkFSSUVTCiAgbW1hcF9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgcmVwZWF0ZXJfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfTElCUkFSSUVTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgYmxvYl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgc3RyaW5nZGVjb2Rlcl9TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBtaXNjX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBncGlvX1NPVVJDRVMKICBzeXNjYWxsZXJyb3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwpMaWJBcmNoaXZlX0lOQ0xVREVfRElSUwogIGFyY2hpdmVfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBhcmNoaXZlX0xJQlJBUklFUwpMaWJBcmNoaXZlX0xJQlJBUklFUwpRSlNNX0VYVFJBX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwogIG1tYXBfU09VUkNFUwogIG1tYXBfU09VUkNFUwpDTUFLRV9SRVFVSVJFRF9RVUlFVApDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVFMKVEVTVFMKVEVTVApCQVNFCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRSlMKVEVTVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQkFTRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKU0MKTkFNRQpCQVNFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpURVNUCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpURVNUClRFU1RTClFVSUNLSlNfTU9EVUxFUwpTSEFSRURfVEFSR0VUUwpRSlNNX0xJQkRJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfSU1QT1JUX0xJQlJBUllfUFJFRklYCkNNQUtFX0lNUE9SVF9MSUJSQVJZX1NVRkZJWApDTUFLRV9TWVNURU1fTkFNRQpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRSlNNX0xJQkRJUgpMSUJSQVJZX1BSRUZJWApRSlNNX01PRFVMRQpMSUJSQVJZX1NVRkZJWApRVUlDS0pTX01PRFVMRVMKUUpTTV9MSUJESVIKICBwcmVkaWNhdGVfTElCUkFSSUVTCkxJQk0KICBzb2NrZXRzX0xJQlJBUklFUwogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9MSUJSQVJJRVMKICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FClFKU00KVEVTVF9TT1VSQ0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkxJQkpTClFVSUNLSlNfSlNfTU9EVUxFX0RJUgpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFCkxJQl9NT0RVTEVTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19JTkNMVURFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVTX0RJUgpRSlNDCk1PRFVMRVNfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNDX0RFUFMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKUUpTTV9FWFRSQV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTTV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVFJBTlNQT1JUX1BMQVRGT1JNCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTX01PRFVMRVNfU1RBVElDCkNPTVBJTEVEX01PRFVMRVMKUUpTTV9MSUJESVIKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTClFKU01fTElCRElSCkxJTktfRVhQT1JUClFKU01fTElCRElSClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKUVVJQ0tKU19MSUJSQVJZX0RJUgpRVUlDS0pTX0xJQlJBUlkKUUpTTV9MREFERApMSUJQVEhSRUFECkxJQk0KTElCREwKTElCV1MyXzMyClFVSUNLSlNfVkVSU0lPTgpRVUlDS0pTX0lOU1RBTExfUFJFRklYClFVSUNLSlNfTU9EVUxFX1BBVEgAAAAAAAAAANQFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					2260,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								61,
								77
							],
							[
								254,
								271
							],
							[
								303,
								326
							],
							[
								400,
								417
							],
							[
								455,
								472
							],
							[
								586,
								603
							],
							[
								655,
								687
							],
							[
								792,
								809
							],
							[
								896,
								920
							],
							[
								955,
								979
							],
							[
								1016,
								1040
							],
							[
								1078,
								1102
							],
							[
								1141,
								1165
							],
							[
								1339,
								1363
							],
							[
								1404,
								1428
							],
							[
								1475,
								1478
							],
							[
								1482,
								1506
							],
							[
								1569,
								1573
							],
							[
								1577,
								1601
							],
							[
								1996,
								2016
							],
							[
								2776,
								2793
							],
							[
								2838,
								2847
							],
							[
								5769,
								5793
							],
							[
								5823,
								5847
							],
							[
								5918,
								5934
							],
							[
								5967,
								5980
							],
							[
								6024,
								6044
							],
							[
								6120,
								6142
							],
							[
								6180,
								6196
							],
							[
								6285,
								6309
							],
							[
								6421,
								6441
							],
							[
								6463,
								6482
							],
							[
								6593,
								6608
							],
							[
								6784,
								6799
							],
							[
								6810,
								6825
							],
							[
								6896,
								6911
							],
							[
								6914,
								6929
							],
							[
								7014,
								7029
							],
							[
								7032,
								7047
							],
							[
								7133,
								7144
							],
							[
								7240,
								7249
							],
							[
								7260,
								7274
							],
							[
								7277,
								7285
							],
							[
								7289,
								7298
							],
							[
								7313,
								7333
							],
							[
								7369,
								7383
							],
							[
								7404,
								7424
							],
							[
								7431,
								7449
							],
							[
								7481,
								7494
							],
							[
								7513,
								7531
							],
							[
								7567,
								7584
							],
							[
								7611,
								7624
							],
							[
								7657,
								7670
							],
							[
								7673,
								7686
							],
							[
								7755,
								7768
							],
							[
								7771,
								7784
							],
							[
								7823,
								7836
							],
							[
								7839,
								7852
							],
							[
								7869,
								7885
							],
							[
								7948,
								7961
							],
							[
								7986,
								8006
							],
							[
								8014,
								8034
							],
							[
								8086,
								8107
							],
							[
								8214,
								8227
							],
							[
								8231,
								8245
							],
							[
								8252,
								8264
							],
							[
								8271,
								8285
							],
							[
								8370,
								8383
							],
							[
								8387,
								8404
							],
							[
								8442,
								8456
							],
							[
								8488,
								8503
							],
							[
								8506,
								8520
							],
							[
								8536,
								8549
							],
							[
								8641,
								8660
							],
							[
								8663,
								8677
							],
							[
								8751,
								8764
							],
							[
								8771,
								8782
							],
							[
								8785,
								8799
							],
							[
								8849,
								8862
							],
							[
								8882,
								8898
							],
							[
								8902,
								8917
							],
							[
								8924,
								8936
							],
							[
								8953,
								8966
							],
							[
								8970,
								8990
							],
							[
								9018,
								9030
							],
							[
								9033,
								9045
							],
							[
								9086,
								9103
							],
							[
								9130,
								9144
							],
							[
								9148,
								9161
							],
							[
								9168,
								9183
							],
							[
								9206,
								9219
							],
							[
								9223,
								9243
							],
							[
								9250,
								9263
							],
							[
								9304,
								9317
							],
							[
								9321,
								9335
							],
							[
								9376,
								9391
							],
							[
								9410,
								9422
							],
							[
								9425,
								9438
							],
							[
								9442,
								9462
							],
							[
								9469,
								9485
							],
							[
								9488,
								9501
							],
							[
								9505,
								9525
							],
							[
								9532,
								9547
							],
							[
								9566,
								9579
							],
							[
								9583,
								9603
							],
							[
								9635,
								9650
							],
							[
								9653,
								9668
							],
							[
								9738,
								9753
							],
							[
								9756,
								9771
							],
							[
								9837,
								9854
							],
							[
								9877,
								9892
							],
							[
								9895,
								9910
							],
							[
								9959,
								9971
							],
							[
								9974,
								9988
							],
							[
								9992,
								10005
							],
							[
								10012,
								10033
							],
							[
								10136,
								10156
							],
							[
								10160,
								10173
							],
							[
								10177,
								10191
							],
							[
								10199,
								10211
							],
							[
								10270,
								10282
							],
							[
								10303,
								10319
							],
							[
								10323,
								10337
							],
							[
								10345,
								10357
							],
							[
								10377,
								10397
							],
							[
								10400,
								10413
							],
							[
								10417,
								10437
							],
							[
								10551,
								10574
							],
							[
								10581,
								10596
							],
							[
								10599,
								10612
							],
							[
								10619,
								10636
							],
							[
								10639,
								10659
							],
							[
								10667,
								10685
							],
							[
								10688,
								10702
							],
							[
								10706,
								10726
							],
							[
								10770,
								10785
							],
							[
								10788,
								10803
							],
							[
								10881,
								10896
							],
							[
								10899,
								10914
							],
							[
								10930,
								10942
							],
							[
								10945,
								10957
							],
							[
								11134,
								11154
							],
							[
								11556,
								11575
							],
							[
								11603,
								11622
							],
							[
								11626,
								11645
							],
							[
								11704,
								11723
							],
							[
								11834,
								11853
							],
							[
								11883,
								11902
							],
							[
								11906,
								11925
							],
							[
								11986,
								12005
							],
							[
								12125,
								12144
							],
							[
								12176,
								12195
							],
							[
								12199,
								12218
							],
							[
								12281,
								12300
							],
							[
								12443,
								12467
							],
							[
								12472,
								12477
							],
							[
								12529,
								12534
							],
							[
								12558,
								12562
							],
							[
								12604,
								12608
							],
							[
								12633,
								12637
							],
							[
								12687,
								12711
							],
							[
								12715,
								12739
							],
							[
								12765,
								12768
							],
							[
								12783,
								12787
							],
							[
								12811,
								12835
							],
							[
								12871,
								12875
							],
							[
								12930,
								12954
							],
							[
								12958,
								12982
							],
							[
								12987,
								12991
							],
							[
								13029,
								13033
							],
							[
								13041,
								13045
							],
							[
								13051,
								13075
							],
							[
								13079,
								13083
							],
							[
								13113,
								13137
							],
							[
								13157,
								13161
							],
							[
								13185,
								13190
							],
							[
								13620,
								13635
							],
							[
								13675,
								13689
							],
							[
								13739,
								13750
							],
							[
								13754,
								13778
							],
							[
								13818,
								13835
							],
							[
								13869,
								13896
							],
							[
								13909,
								13936
							],
							[
								13971,
								13988
							],
							[
								14051,
								14066
							],
							[
								14085,
								14094
							],
							[
								14143,
								14152
							],
							[
								14183,
								14194
							],
							[
								14318,
								14329
							],
							[
								14333,
								14347
							],
							[
								14350,
								14361
							],
							[
								14364,
								14378
							],
							[
								14405,
								14420
							],
							[
								14443,
								14454
							],
							[
								14502,
								14521
							],
							[
								14524,
								14528
							],
							[
								14548,
								14565
							],
							[
								14588,
								14602
							],
							[
								14631,
								14635
							],
							[
								14642,
								14657
							],
							[
								14677,
								14687
							],
							[
								14826,
								14839
							],
							[
								14847,
								14851
							],
							[
								14855,
								14879
							],
							[
								15035,
								15048
							],
							[
								15087,
								15111
							],
							[
								15117,
								15128
							],
							[
								15155,
								15166
							],
							[
								15192,
								15201
							],
							[
								15214,
								15218
							],
							[
								15232,
								15243
							],
							[
								15278,
								15302
							],
							[
								15332,
								15345
							],
							[
								15368,
								15392
							],
							[
								15495,
								15500
							],
							[
								15517,
								15538
							],
							[
								15600,
								15611
							],
							[
								15786,
								15797
							],
							[
								15868,
								15878
							],
							[
								15908,
								15919
							],
							[
								15935,
								15959
							],
							[
								15982,
								16002
							],
							[
								16005,
								16029
							],
							[
								16048,
								16068
							],
							[
								16094,
								16114
							],
							[
								16187,
								16206
							],
							[
								16210,
								16230
							],
							[
								16289,
								16308
							],
							[
								16326,
								16350
							],
							[
								16399,
								16410
							],
							[
								16434,
								16438
							],
							[
								16457,
								16468
							],
							[
								16495,
								16519
							],
							[
								16547,
								16556
							],
							[
								16580,
								16604
							],
							[
								16682,
								16706
							],
							[
								16750,
								16762
							],
							[
								16780,
								16791
							],
							[
								16806,
								16817
							],
							[
								16835,
								16846
							],
							[
								16864,
								16875
							],
							[
								16892,
								16903
							],
							[
								16921,
								16932
							],
							[
								16945,
								16956
							],
							[
								16977,
								16988
							],
							[
								17006,
								17017
							],
							[
								17031,
								17042
							],
							[
								17057,
								17075
							],
							[
								17091,
								17115
							],
							[
								17171,
								17183
							],
							[
								17194,
								17206
							],
							[
								17210,
								17234
							],
							[
								17268,
								17292
							],
							[
								17326,
								17344
							],
							[
								17390,
								17414
							],
							[
								17483,
								17495
							],
							[
								17571,
								17589
							],
							[
								17665,
								17681
							],
							[
								17906,
								17917
							],
							[
								17924,
								17946
							],
							[
								17950,
								17972
							],
							[
								17978,
								17989
							],
							[
								18050,
								18061
							],
							[
								18067,
								18078
							],
							[
								18127,
								18149
							],
							[
								18203,
								18222
							],
							[
								18261,
								18276
							],
							[
								18280,
								18290
							],
							[
								18294,
								18304
							],
							[
								18308,
								18312
							],
							[
								18316,
								18321
							],
							[
								18359,
								18368
							],
							[
								18449,
								18464
							],
							[
								18494,
								18516
							],
							[
								18542,
								18561
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"USE_SPAWN",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"stringdecoder_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"archive_SOURCES",
							"utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJS",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"NAME",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QJSM_LIBDIR",
							"LIBRARY_PREFIX",
							"QJSM_MODULE",
							"LIBRARY_SUFFIX",
							"QUICKJS_MODULES",
							"QJSM_LIBDIR",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"QJSM",
							"TEST_SOURCE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY",
							"QJSM_LDADD",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_MODULE_PATH"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADUBQAAICBjb25maWdfbW9kdWxlClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWV9ESVIKVEFSR0VUX05BTUUKUVVJQ0tKU19NT0RVTEVfREVQRU5ERU5DSUVTClRBUkdFVF9OQU1FClFVSUNLSlNfTU9EVUxFX0NGTEFHUwogIGNvbXBpbGVfbW9kdWxlClNPVVJDRQpCQVNFClNPVVJDRQpNT0RVTEVTX0RJUgpDTUFLRV9CSU5BUllfRElSCk1PRFVMRVNfRElSCk1PRFVMRVNfRElSCk1PRFVMRVNfRElSCk9VVFBVVF9GSUxFCkFSR04KT1VUUFVUX0ZJTEUKTU9EVUxFU19ESVIKQkFTRQpCQVNFCkNPTVBJTEVEX01PRFVMRVMKQ09NUElMRURfTU9EVUxFUwpCQVNFCk9VVFBVVF9GSUxFClFKU0MKT1VUUFVUX0ZJTEUKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClNPVVJDRQpRSlNDX0RFUFMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCk9VVFBVVF9GSUxFClNPVVJDRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKU09VUkNFCiAgbWFrZV9tb2R1bGUKRk5BTUUKRk5BTUUKRk5BTUUKVVVOQU1FClRBUkdFVF9OQU1FCk5BTUUKU09VUkNFUwpBUkdOClZOQU1FCiAgX1NPVVJDRVMKREVQUwpBUkdOClZOQU1FCiAgX0RFUFMKU09VUkNFUwpOQU1FClZOQU1FCiAgX1NPVVJDRVMKQ01BS0VfU1lTVEVNX05BTUUKQlVJTERfU0hBUkVEX01PRFVMRVMKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfU1lTVEVNX05BTUUKUFJFRklYCkNNQUtFX1NZU1RFTV9OQU1FClBSRUZJWApDTUFLRV9TWVNURU1fTkFNRQpUQVJHRVRfTkFNRQpTT1VSQ0VTClRBUkdFVF9OQU1FCk1CRURUTFNfTElCUkFSWV9ESVIKUFJFRklYClZOQU1FCk1PRFVMRV9DT01QSUxFX0ZMQUdTClRBUkdFVF9OQU1FClVOQU1FClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKVEFSR0VUX05BTUUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWQpUQVJHRVRfTkFNRQpRVUlDS0pTX0NfTU9EVUxFX0RJUgpUQVJHRVRfTkFNRQpMSUJSQVJJRVMKVk5BTUUKICBfTElCUkFSSUVTClRBUkdFVF9OQU1FCkxJQlJBUklFUwpUQVJHRVRfTkFNRQpERVBTClRBUkdFVF9OQU1FClNPVVJDRVMKTU9EVUxFU19TVEFUSUMKUUpTX01PRFVMRVNfU1RBVElDClRBUkdFVF9OQU1FClFKU19NT0RVTEVTX1NUQVRJQwpNT0RVTEVTX1NUQVRJQwpUQVJHRVRfTkFNRQpWTkFNRQpMSUJSQVJZX1BSRUZJWApMSUJSQVJZX1NVRkZJWApUQVJHRVRfTkFNRQpVTkFNRQpRVUlDS0pTX0lOU1RBTExfUFJFRklYClRBUkdFVF9OQU1FCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpUQVJHRVRfTkFNRQpRVUlDS0pTX0xJQlJBUlkKQ01BS0VfRVhFQ1VUQUJMRV9TVUZGSVgKQ01BS0VfV0lORE9XU19FWFBPUlRfQUxMX1NZTUJPTFMKQ01BS0VfU1lTVEVNX05BTUUKTElCUkFSWV9QUkVGSVgKTElCUkFSWV9TVUZGSVgKQ01BS0VfU1lTVEVNX05BTUUKTElCUkFSWV9QUkVGSVgKQ01BS0VfU1RBVElDX0xJQlJBUllfUFJFRklYCkxJQlJBUllfU1VGRklYCkNNQUtFX1NUQVRJQ19MSUJSQVJZX1NVRkZJWAAAAAAAAAAARxIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					2261,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/wasmedge-quickjs/example_js/es6_module_demo/c.",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABHEgAAQ01BS0VfQ19TVEFOREFSRApDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApCVUlMRF9TSEFSRURfTElCUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUUpTCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRSlNDCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9SRVFVSVJFRF9RVUlFVApIQVZFX1BPU0lYX1NQQVdOUApVU0VfU1BBV04KQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX1NZU1JPT1QKQ01BS0VfVE9PTENIQUlOX0ZJTEUKQ01BS0VfVkVSQk9TRV9NQUtFRklMRQpDTUFLRV9CVUlMRF9UWVBFCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSUwpRVUlDS0pTX0xJQlJBUllfRElSClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpMSUJfTU9EVUxFUwpRVUlDS0pTX0gKQ09NTU9OX0hFQURFUlMKQ1VUSUxTX0gKUVVJQ0tKU19ICiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgY2hhcl91dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGNoYXJfdXRpbHNfU09VUkNFUwogIHByZWRpY2F0ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBzeXNjYWxsZXJyb3JfU09VUkNFUwogIGNoaWxkX3Byb2Nlc3NfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGRlZXBfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHByZWRpY2F0ZV9TT1VSQ0VTCiAgZGVlcF9MSUJSQVJJRVMKICBpbnNwZWN0X1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB0cmVlX3dhbGtlcl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgeG1sX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgaW5zcGVjdF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBwb2ludGVyX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBsZXhlcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgbGV4ZXJfTElCUkFSSUVTCiAgbW1hcF9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgcmVwZWF0ZXJfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfTElCUkFSSUVTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgYmxvYl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgc3RyaW5nZGVjb2Rlcl9TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBtaXNjX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBncGlvX1NPVVJDRVMKICBzeXNjYWxsZXJyb3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwpMaWJBcmNoaXZlX0lOQ0xVREVfRElSUwogIGFyY2hpdmVfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBhcmNoaXZlX0xJQlJBUklFUwpMaWJBcmNoaXZlX0xJQlJBUklFUwpRSlNNX0VYVFJBX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwogIG1tYXBfU09VUkNFUwogIG1tYXBfU09VUkNFUwpDTUFLRV9SRVFVSVJFRF9RVUlFVApDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVFMKVEVTVFMKVEVTVApCQVNFCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRSlMKVEVTVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQkFTRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKU0MKTkFNRQpCQVNFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpURVNUCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpURVNUClRFU1RTClFVSUNLSlNfTU9EVUxFUwpTSEFSRURfVEFSR0VUUwpRSlNNX0xJQkRJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfSU1QT1JUX0xJQlJBUllfUFJFRklYCkNNQUtFX0lNUE9SVF9MSUJSQVJZX1NVRkZJWApDTUFLRV9TWVNURU1fTkFNRQpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRSlNNX0xJQkRJUgpMSUJSQVJZX1BSRUZJWApRSlNNX01PRFVMRQpMSUJSQVJZX1NVRkZJWApRVUlDS0pTX01PRFVMRVMKUUpTTV9MSUJESVIKICBwcmVkaWNhdGVfTElCUkFSSUVTCkxJQk0KICBzb2NrZXRzX0xJQlJBUklFUwogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9MSUJSQVJJRVMKICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FClFKU00KVEVTVF9TT1VSQ0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkxJQkpTClFVSUNLSlNfSlNfTU9EVUxFX0RJUgpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFCkxJQl9NT0RVTEVTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19JTkNMVURFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVTX0RJUgpRSlNDCk1PRFVMRVNfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNDX0RFUFMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKUUpTTV9FWFRSQV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTTV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVFJBTlNQT1JUX1BMQVRGT1JNCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTX01PRFVMRVNfU1RBVElDCkNPTVBJTEVEX01PRFVMRVMKUUpTTV9MSUJESVIKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTClFKU01fTElCRElSCkxJTktfRVhQT1JUClFKU01fTElCRElSClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKUVVJQ0tKU19MSUJSQVJZX0RJUgpRVUlDS0pTX0xJQlJBUlkKUUpTTV9MREFERApMSUJQVEhSRUFECkxJQk0KTElCREwKTElCV1MyXzMyClFVSUNLSlNfVkVSU0lPTgpRVUlDS0pTX0lOU1RBTExfUFJFRklYClFVSUNLSlNfTU9EVUxFX1BBVEgAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/xpath.js",
			"settings":
			{
				"buffer_size": 5235,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5223,
					3,
					"left_delete",
					null,
					"AwAAAPMRAAAAAAAA8xEAAAAAAAABAAAAdPIRAAAAAAAA8hEAAAAAAAABAAAAZfERAAAAAAAA8REAAAAAAAABAAAARw",
					"AQAAAAAAAAABAAAA9BEAAAAAAAD0EQAAAAAAAAAAAAAAAPC/"
				],
				[
					5226,
					1,
					"insert",
					{
						"characters": "GetKey(p)"
					},
					"CQAAAPERAAAAAAAA8hEAAAAAAAAAAAAA8hEAAAAAAADzEQAAAAAAAAAAAADzEQAAAAAAAPQRAAAAAAAAAAAAAPQRAAAAAAAA9REAAAAAAAAAAAAA9REAAAAAAAD2EQAAAAAAAAAAAAD2EQAAAAAAAPcRAAAAAAAAAAAAAPcRAAAAAAAA+BEAAAAAAAAAAAAA+BEAAAAAAAD5EQAAAAAAAAAAAAD5EQAAAAAAAPoRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8REAAAAAAADxEQAAAAAAAAAAAAAAAPC/"
				],
				[
					5227,
					1,
					"insert",
					{
						"characters": "  ??"
					},
					"BAAAAPoRAAAAAAAA+xEAAAAAAAAAAAAA+xEAAAAAAAD8EQAAAAAAAAAAAAD8EQAAAAAAAP0RAAAAAAAAAAAAAP0RAAAAAAAA/hEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hEAAAAAAAD6EQAAAAAAAAAAAAAAAPC/"
				],
				[
					5228,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP4RAAAAAAAA/xEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hEAAAAAAAD+EQAAAAAAAAAAAAAAAPC/"
				],
				[
					5234,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAAgSAAAAAAAAChIAAAAAAAAAAAAA/xEAAAAAAAABEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xEAAAAAAAAIEgAAAAAAAAAAAAAAAPC/"
				],
				[
					5239,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACIEgAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBsZXQgbSA9IC9eW0EtWmEtel1bLVx3XSovLmV4ZWMoYXJnKTsKICAgICAgLy9jb25zb2xlLmxvZygnbScsIG0pOwogICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgYXJnID0gUHJlZGljYXRlLnByb3BlcnR5KCd0YWdOYW1lJywgLypzID0+IHMgPT0gbVswXSA/PyovIFByZWRpY2F0ZS5zdHJpbmcobVswXSkpOwogICAgICB9CgogICAgICB0aGlzLnB1c2goYXJnKTsKICAgIH0KICB9CgogIFtTeW1ib2wuaW5zcGVjdF0oZGVwdGgsIG9wdHMgPSB7fSkgewogICAgbGV0IG9iaiA9IFsuLi50aGlzXS5tYXAoR2V0S2V5KTsKICAgIC8vY29uc29sZS5sb2coJ29iaicsIG9iaik7CiAgICByZXR1cm4gKAogICAgICBgXHgxYlsxOzMxbSR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lID8/IHV0aWwuZ2V0Q2xhc3NOYW1lKHRoaXMpfVx4MWJbMG0gYCArCiAgICAgIGluc3BlY3Qob2JqID8/IHsgX19wcm90b19fOiB7IFtTeW1ib2wudG9TdHJpbmdUYWddOiAnWFBhdGgnIH0sIC4uLm9iaiB9LCB7IC4uLm9wdHMsIGN1c3RvbUluc3BlY3Q6IHRydWUgfSkKICAgICk7CiAgfQoKICBzdGF0aWMgZnJvbSA9IGJ1aWxkWFBhdGg7Cn0KClhQYXRoLnByb3RvdHlwZVtTeW1ib2wudG9TdHJpbmdUYWddID0gJ1hQYXRoJzsKCmV4cG9ydCBjb25zdCBJbW11dGFibGVYUGF0aCA9IFhQYXRoOwpleHBvcnQgY29uc3QgTXV0YWJsZVhQYXRoID0gWFBhdGg7CgpleHBvcnQgZnVuY3Rpb24gcGFyc2VYUGF0aChzdHIpIHt9CgpleHBvcnQgZnVuY3Rpb24gYnVpbGRYUGF0aChwdHIsIHJvb3QpIHsKICBsZXQgbm9kZSA9IHJvb3QsCiAgICBwYXJlbnQsCiAgICBwcmV2S2V5LAogICAgaSA9IDAsCiAgICBwYXJ0cyA9IFtdLAogICAgc2libGluZ3MsCiAgICBzaWJsaW5nU2FtZSwKICAgIGtleXMsCiAgICBwcmV2S2V5cywKICAgIHR5cGUsCiAgICBzYW1lLAogICAgaGllciA9IFtdOwogIGZvcihsZXQga2V5IG9mIHB0cikgewogICAgLy8gaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSBrZXkgPSBHZXRLZXkoa2V5KTsKICAgIGlmKHR5cGVvZiBrZXkgPT0gJ2Z1bmN0aW9uJykgewogICAgICBpZihpc09iamVjdChub2RlKSAmJiAnbGVuZ3RoJyBpbiBub2RlKSB7CiAgICAgICAgbGV0IGEgPSBbLi4ubm9kZV0sCiAgICAgICAgICBmbiA9IGtleTsKICAgICAgICAvL2NvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgYSwgbm9kZSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgICAgIGtleSA9IGEuZmluZEluZGV4KGZuKTsKICAgICAgfQogICAgfQoKICAgIC8vY29uc29sZS5sb2coJ2tleScsIGtleSwga2V5ICsgJycpOwogICAgdHlwZSA9IGtleSA9PSAnY2hpbGRyZW4nID8gJ29iamVjdCcgOiBOb2RlVHlwZShub2RlKTsKCiAgICBpZih0eXBlICE9ICdhcnJheScpIHsKICAgICAgc2libGluZ1NhbWUgPSBbXTsKICAgIH0gZWxzZSB7CiAgICAgIHNpYmxpbmdzID0gWy4uLm5vZGVdOwogICAgICBzaWJsaW5nU2FtZSA9IHNpYmxpbmdzLnJlZHVjZSgoYWNjLCBuLCBpKSA9PiB7CiAgICAgICAgaWYoaXNPYmplY3QobikgJiBpc09iamVjdChub2RlW2tleV0pKQogICAgICAgICAgaWYobi50YWdOYW1lID09IG5vZGVba2V5XS50YWdOYW1lKSAvKmlmIChpICE9IGtleSkqLyBhY2MucHVzaChbaSwgbi50YWdOYW1lXSk7CiAgICAgICAgcmV0dXJuIGFjYzsKICAgICAgfSwgW10pOwogICAgfQogICAga2V5cyA9IGlzT2JqZWN0KG5vZGUpID8gT2JqZWN0LmtleXMobm9kZSkgOiBbXTsKCiAgICAvLyAgIGNvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgdHlwZSwga2V5cywga2V5LCBpLCBub2RlIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CiAgICBpZihrZXkgPT0gJ2NoaWxkcmVuJykgewogICAgICBwYXJ0cy5wdXNoKGtleSk7CiAgICB9IGVsc2UgewogICAgICBzYW1lID0gc2libGluZ1NhbWUubGVuZ3RoIHx8IHVuZGVmaW5lZDsKCiAgICAgIC8vY29uc29sZS5sb2coJycsIGluc3BlY3QoeyB0eXBlLCBrZXksIGkgfSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAyIH0pKTsKCiAgICAgIGxldCBwYXJ0ID0gQWRkS2V5KG5vZGVba2V5XSwga2V5LCBpLCBzYW1lKTsKCiAgICAgIGlmKHR5cGVvZiBwYXJ0ID09ICdzdHJpbmcnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uaW5kZXhPZihwYXJ0KSA9PSAtMSkgewogICAgICAgIGxldCBwciA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIFByZWRpY2F0ZS5zdHJpbmcocGFydCkpOwogICAgICAgIHByLnRhZyA9IHBhcnQ7CiAgICAgICAgcGFydCA9IHByOwogICAgICB9CiAgICAgIHBhcnRzLnB1c2gocGFydCk7CiAgICB9CgogICAgaWYoIWlzT2JqZWN0KG5vZGUpKQogICAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgICAgYEVycm9yIGluZGV4aW5nIDwke3R5cGVvZiBub2RlfT4gd2l0aCA8JHtrZXl9PiBbJHtoaWVyLmpvaW4oJywgJyl9XTogJHtwYXJ0cy5tYXAoR2V0S2V5KS5qb2luKCcgLT4gJyl9YAogICAgICApOwoKICAgIHBhcmVudCA9IG5vZGU7CiAgICBub2RlID0gbm9kZVtrZXldOwogICAgaGllci5wdXNoKGtleSk7CiAgICBwcmV2S2V5ID0ga2V5OwogICAgcHJldktleXMgPSBrZXlzOwogICAgaSsrOwogIH0KCiAgZnVuY3Rpb24gQWRkS2V5KG5vZGUsIGssIGksIHNhbWUpIHsKICAgIGxldCBzID0gJyc7CiAgICAvL2NvbnNvbGUubG9nKCdBZGRLZXknLCBpbnNwZWN0KG5vZGUsIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMSB9KSk7CiAgICBpZihpc09iamVjdChub2RlKSAmJiAndGFnTmFtZScgaW4gbm9kZSkgcyA9IG5vZGUudGFnTmFtZTsKCiAgICBpZih0eXBlb2YgayA9PSAnbnVtYmVyJykgewogICAgICBpZihzYW1lID4gMSkKICAgICAgICAvKmlmKG5vZGU/LmF0dHJpYnV0ZXM/Lm5hbWUpIHMgKz0gYFtAbmFtZT0iJHtub2RlLmF0dHJpYnR1ZXMubmFtZX0iXWA7CiAgICAgICAgICBlbHNlKi8KICAgICAgICBzICs9IGBbJHtrfV1gOwogICAgfSBlbHNlIGlmKHR5cGVvZiBrID09ICdzdHJpbmcnKSB7CiAgICB9CiAgICBpZihzID09PSAnJykgcyA9IHsgY2hpbGRyZW46ICcvJyB9W2tdID8/IGsgPz8gJy8nOwogICAgcmV0dXJuIHM7CiAgfQoKICBmdW5jdGlvbiBHZXRLZXkocCkgewogICAgbGV0IGs7CiAgICBpZigoaXNPYmplY3QocCkgfHwgaXNGdW5jdGlvbihwKSkgJiYgcCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkgewogICAgICBpZihwLmlkID09IFByZWRpY2F0ZS5QUk9QRVJUWSkgewogICAgICAgIGNvbnN0IHN0ciA9IHAudmFsdWVzKClbMV07CiAgICAgICAgayA9IHN0ci52YWx1ZXMoKVswXTsKICAgICAgfQogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdvYmplY3QnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uc29tZShwcm9wID0+IHByb3AgaW4gcCkpIHsKICAgICAgayA9IHAudGFnTmFtZTsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnZnVuY3Rpb24nIC8qICYmICEocCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkqLykgewogICAgICBpZigvdGFnTmFtZVxzKj09Ly50ZXN0KHAgKyAnJykpIGsgPSAocCArICcnKS5yZXBsYWNlKC8uKicoLiopJyQvLCAnJDEnKTsKICAgICAgZWxzZSBrID0gcDsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnbnVtYmVyJyB8fCB0eXBlb2YgcCA9PSAnc3RyaW5nJykgewogICAgICBrID0gcDsKICAgIH0gZWxzZSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcGFydCAoJHt1dGlsLmdldFR5cGVTdHIocCl9ICR7dHlwZW9mIHB9KTogJHtpbnNwZWN0KHAsIHsgY29sb3JzOiB0cnVlIH0pfWApOwogICAgcmV0dXJuIGs7CiAgfQogIGZ1bmN0aW9uIE5vZGVUeXBlKG5vZGUpIHsKICAgIHJldHVybiBpc09iamVjdChub2RlKQogICAgICA/ICdsZW5ndGgnIGluIG5vZGUgJiYgdHlwZW9mIG5vZGUubGVuZ3RoID09ICdudW1iZXInCiAgICAgICAgPyAnYXJyYXknCiAgICAgICAgOiB1dGlsLmdldENsYXNzTmFtZShub2RlKS50b0xvd2VyQ2FzZSgpCiAgICAgIDogdHlwZW9mIG5vZGU7CiAgfQogIGNvbnNvbGUubG9nKAogICAgJ2J1aWxkWFBhdGgnLAogICAgcGFydHMubWFwKHAgPT4gR2V0S2V5KHApICA/PyAvKnAudGFnID8/ICovKHAudG9TdHJpbmcgPz8gcC50b1NvdXJjZSkuY2FsbChwKSkKICApOwogIHJldHVybiBuZXcgWFBhdGgocGFydHMpOwp9CgpleHRlbmRBcnJheShYUGF0aC5wcm90b3R5cGUpOwoKZXhwb3J0IGRlZmF1bHQgWFBhdGg7CgAAAAAAAAAAiBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARIAAAAAAAAKEgAAAAAAAAAAAAAAAPC/"
				],
				[
					5246,
					1,
					"left_delete",
					null,
					"AQAAAP0RAAAAAAAA/REAAAAAAAAOAAAAIC8qcC50YWcgPz8gKi8",
					"AQAAAAAAAAABAAAA/REAAAAAAAALEgAAAAAAAAAAAAAAAPC/"
				],
				[
					5249,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAACESAAAAAAAAIxIAAAAAAAAAAAAA5xEAAAAAAADpEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xEAAAAAAAAhEgAAAAAAAP///////+9/"
				],
				[
					5252,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB+EgAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBsZXQgbSA9IC9eW0EtWmEtel1bLVx3XSovLmV4ZWMoYXJnKTsKICAgICAgLy9jb25zb2xlLmxvZygnbScsIG0pOwogICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgYXJnID0gUHJlZGljYXRlLnByb3BlcnR5KCd0YWdOYW1lJywgLypzID0+IHMgPT0gbVswXSA/PyovIFByZWRpY2F0ZS5zdHJpbmcobVswXSkpOwogICAgICB9CgogICAgICB0aGlzLnB1c2goYXJnKTsKICAgIH0KICB9CgogIFtTeW1ib2wuaW5zcGVjdF0oZGVwdGgsIG9wdHMgPSB7fSkgewogICAgbGV0IG9iaiA9IFsuLi50aGlzXS5tYXAoR2V0S2V5KTsKICAgIC8vY29uc29sZS5sb2coJ29iaicsIG9iaik7CiAgICByZXR1cm4gKAogICAgICBgXHgxYlsxOzMxbSR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lID8/IHV0aWwuZ2V0Q2xhc3NOYW1lKHRoaXMpfVx4MWJbMG0gYCArCiAgICAgIGluc3BlY3Qob2JqID8/IHsgX19wcm90b19fOiB7IFtTeW1ib2wudG9TdHJpbmdUYWddOiAnWFBhdGgnIH0sIC4uLm9iaiB9LCB7IC4uLm9wdHMsIGN1c3RvbUluc3BlY3Q6IHRydWUgfSkKICAgICk7CiAgfQoKICBzdGF0aWMgZnJvbSA9IGJ1aWxkWFBhdGg7Cn0KClhQYXRoLnByb3RvdHlwZVtTeW1ib2wudG9TdHJpbmdUYWddID0gJ1hQYXRoJzsKCmV4cG9ydCBjb25zdCBJbW11dGFibGVYUGF0aCA9IFhQYXRoOwpleHBvcnQgY29uc3QgTXV0YWJsZVhQYXRoID0gWFBhdGg7CgpleHBvcnQgZnVuY3Rpb24gcGFyc2VYUGF0aChzdHIpIHt9CgpleHBvcnQgZnVuY3Rpb24gYnVpbGRYUGF0aChwdHIsIHJvb3QpIHsKICBsZXQgbm9kZSA9IHJvb3QsCiAgICBwYXJlbnQsCiAgICBwcmV2S2V5LAogICAgaSA9IDAsCiAgICBwYXJ0cyA9IFtdLAogICAgc2libGluZ3MsCiAgICBzaWJsaW5nU2FtZSwKICAgIGtleXMsCiAgICBwcmV2S2V5cywKICAgIHR5cGUsCiAgICBzYW1lLAogICAgaGllciA9IFtdOwogIGZvcihsZXQga2V5IG9mIHB0cikgewogICAgLy8gaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSBrZXkgPSBHZXRLZXkoa2V5KTsKICAgIGlmKHR5cGVvZiBrZXkgPT0gJ2Z1bmN0aW9uJykgewogICAgICBpZihpc09iamVjdChub2RlKSAmJiAnbGVuZ3RoJyBpbiBub2RlKSB7CiAgICAgICAgbGV0IGEgPSBbLi4ubm9kZV0sCiAgICAgICAgICBmbiA9IGtleTsKICAgICAgICAvL2NvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgYSwgbm9kZSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgICAgIGtleSA9IGEuZmluZEluZGV4KGZuKTsKICAgICAgfQogICAgfQoKICAgIC8vY29uc29sZS5sb2coJ2tleScsIGtleSwga2V5ICsgJycpOwogICAgdHlwZSA9IGtleSA9PSAnY2hpbGRyZW4nID8gJ29iamVjdCcgOiBOb2RlVHlwZShub2RlKTsKCiAgICBpZih0eXBlICE9ICdhcnJheScpIHsKICAgICAgc2libGluZ1NhbWUgPSBbXTsKICAgIH0gZWxzZSB7CiAgICAgIHNpYmxpbmdzID0gWy4uLm5vZGVdOwogICAgICBzaWJsaW5nU2FtZSA9IHNpYmxpbmdzLnJlZHVjZSgoYWNjLCBuLCBpKSA9PiB7CiAgICAgICAgaWYoaXNPYmplY3QobikgJiBpc09iamVjdChub2RlW2tleV0pKQogICAgICAgICAgaWYobi50YWdOYW1lID09IG5vZGVba2V5XS50YWdOYW1lKSAvKmlmIChpICE9IGtleSkqLyBhY2MucHVzaChbaSwgbi50YWdOYW1lXSk7CiAgICAgICAgcmV0dXJuIGFjYzsKICAgICAgfSwgW10pOwogICAgfQogICAga2V5cyA9IGlzT2JqZWN0KG5vZGUpID8gT2JqZWN0LmtleXMobm9kZSkgOiBbXTsKCiAgICAvLyAgIGNvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgdHlwZSwga2V5cywga2V5LCBpLCBub2RlIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CiAgICBpZihrZXkgPT0gJ2NoaWxkcmVuJykgewogICAgICBwYXJ0cy5wdXNoKGtleSk7CiAgICB9IGVsc2UgewogICAgICBzYW1lID0gc2libGluZ1NhbWUubGVuZ3RoIHx8IHVuZGVmaW5lZDsKCiAgICAgIC8vY29uc29sZS5sb2coJycsIGluc3BlY3QoeyB0eXBlLCBrZXksIGkgfSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAyIH0pKTsKCiAgICAgIGxldCBwYXJ0ID0gQWRkS2V5KG5vZGVba2V5XSwga2V5LCBpLCBzYW1lKTsKCiAgICAgIGlmKHR5cGVvZiBwYXJ0ID09ICdzdHJpbmcnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uaW5kZXhPZihwYXJ0KSA9PSAtMSkgewogICAgICAgIGxldCBwciA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIFByZWRpY2F0ZS5zdHJpbmcocGFydCkpOwogICAgICAgIHByLnRhZyA9IHBhcnQ7CiAgICAgICAgcGFydCA9IHByOwogICAgICB9CiAgICAgIHBhcnRzLnB1c2gocGFydCk7CiAgICB9CgogICAgaWYoIWlzT2JqZWN0KG5vZGUpKQogICAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgICAgYEVycm9yIGluZGV4aW5nIDwke3R5cGVvZiBub2RlfT4gd2l0aCA8JHtrZXl9PiBbJHtoaWVyLmpvaW4oJywgJyl9XTogJHtwYXJ0cy5tYXAoR2V0S2V5KS5qb2luKCcgLT4gJyl9YAogICAgICApOwoKICAgIHBhcmVudCA9IG5vZGU7CiAgICBub2RlID0gbm9kZVtrZXldOwogICAgaGllci5wdXNoKGtleSk7CiAgICBwcmV2S2V5ID0ga2V5OwogICAgcHJldktleXMgPSBrZXlzOwogICAgaSsrOwogIH0KCiAgZnVuY3Rpb24gQWRkS2V5KG5vZGUsIGssIGksIHNhbWUpIHsKICAgIGxldCBzID0gJyc7CiAgICAvL2NvbnNvbGUubG9nKCdBZGRLZXknLCBpbnNwZWN0KG5vZGUsIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMSB9KSk7CiAgICBpZihpc09iamVjdChub2RlKSAmJiAndGFnTmFtZScgaW4gbm9kZSkgcyA9IG5vZGUudGFnTmFtZTsKCiAgICBpZih0eXBlb2YgayA9PSAnbnVtYmVyJykgewogICAgICBpZihzYW1lID4gMSkKICAgICAgICAvKmlmKG5vZGU/LmF0dHJpYnV0ZXM/Lm5hbWUpIHMgKz0gYFtAbmFtZT0iJHtub2RlLmF0dHJpYnR1ZXMubmFtZX0iXWA7CiAgICAgICAgICBlbHNlKi8KICAgICAgICBzICs9IGBbJHtrfV1gOwogICAgfSBlbHNlIGlmKHR5cGVvZiBrID09ICdzdHJpbmcnKSB7CiAgICB9CiAgICBpZihzID09PSAnJykgcyA9IHsgY2hpbGRyZW46ICcvJyB9W2tdID8/IGsgPz8gJy8nOwogICAgcmV0dXJuIHM7CiAgfQoKICBmdW5jdGlvbiBHZXRLZXkocCkgewogICAgbGV0IGs7CiAgICBpZigoaXNPYmplY3QocCkgfHwgaXNGdW5jdGlvbihwKSkgJiYgcCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkgewogICAgICBpZihwLmlkID09IFByZWRpY2F0ZS5QUk9QRVJUWSkgewogICAgICAgIGNvbnN0IHN0ciA9IHAudmFsdWVzKClbMV07CiAgICAgICAgayA9IHN0ci52YWx1ZXMoKVswXTsKICAgICAgfQogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdvYmplY3QnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uc29tZShwcm9wID0+IHByb3AgaW4gcCkpIHsKICAgICAgayA9IHAudGFnTmFtZTsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnZnVuY3Rpb24nIC8qICYmICEocCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkqLykgewogICAgICBpZigvdGFnTmFtZVxzKj09Ly50ZXN0KHAgKyAnJykpIGsgPSAocCArICcnKS5yZXBsYWNlKC8uKicoLiopJyQvLCAnJDEnKTsKICAgICAgZWxzZSBrID0gcDsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnbnVtYmVyJyB8fCB0eXBlb2YgcCA9PSAnc3RyaW5nJykgewogICAgICBrID0gcDsKICAgIH0gZWxzZSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcGFydCAoJHt1dGlsLmdldFR5cGVTdHIocCl9ICR7dHlwZW9mIHB9KTogJHtpbnNwZWN0KHAsIHsgY29sb3JzOiB0cnVlIH0pfWApOwogICAgcmV0dXJuIGs7CiAgfQogIGZ1bmN0aW9uIE5vZGVUeXBlKG5vZGUpIHsKICAgIHJldHVybiBpc09iamVjdChub2RlKQogICAgICA/ICdsZW5ndGgnIGluIG5vZGUgJiYgdHlwZW9mIG5vZGUubGVuZ3RoID09ICdudW1iZXInCiAgICAgICAgPyAnYXJyYXknCiAgICAgICAgOiB1dGlsLmdldENsYXNzTmFtZShub2RlKS50b0xvd2VyQ2FzZSgpCiAgICAgIDogdHlwZW9mIG5vZGU7CiAgfQogIGNvbnNvbGUubG9nKAogICAgJ2J1aWxkWFBhdGgnLAogICAgcGFydHMvKi5tYXAocCA9PiBHZXRLZXkocCkgPz8gKHAudG9TdHJpbmcgPz8gcC50b1NvdXJjZSkuY2FsbChwKSkqLwogICk7CiAgcmV0dXJuIG5ldyBYUGF0aChwYXJ0cyk7Cn0KCmV4dGVuZEFycmF5KFhQYXRoLnByb3RvdHlwZSk7CgpleHBvcnQgZGVmYXVsdCBYUGF0aDsKAAAAAAAAAABzEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6REAAAAAAAAjEgAAAAAAAAAAAAAAAPC/"
				],
				[
					5264,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BQAAAPkBAAAAAAAA+gEAAAAAAAAAAAAA+gEAAAAAAAD+AQAAAAAAAAAAAAD+AQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAQIAAAAAAAAAAAAAAQIAAAAAAAACAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QEAAAAAAAD5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					5265,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAICAAAAAAAABAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgIAAAAAAAACAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5266,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"AwAAAAMCAAAAAAAABAIAAAAAAAAAAAAABAIAAAAAAAAFAgAAAAAAAAAAAAAFAgAAAAAAAAYCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwIAAAAAAAADAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5267,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAAAYCAAAAAAAABwIAAAAAAAAAAAAABwIAAAAAAAAIAgAAAAAAAAAAAAAIAgAAAAAAAAkCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgIAAAAAAAAGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5268,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAkCAAAAAAAACgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQIAAAAAAAAJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5269,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAAoCAAAAAAAADAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgIAAAAAAAAKAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5270,
					1,
					"insert",
					{
						"characters": "children"
					},
					"CAAAAAsCAAAAAAAADAIAAAAAAAAAAAAADAIAAAAAAAANAgAAAAAAAAAAAAANAgAAAAAAAA4CAAAAAAAAAAAAAA4CAAAAAAAADwIAAAAAAAAAAAAADwIAAAAAAAAQAgAAAAAAAAAAAAAQAgAAAAAAABECAAAAAAAAAAAAABECAAAAAAAAEgIAAAAAAAAAAAAAEgIAAAAAAAATAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwIAAAAAAAALAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5272,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAABQCAAAAAAAAFQIAAAAAAAAAAAAAFQIAAAAAAAAWAgAAAAAAAAAAAAAWAgAAAAAAABcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAIAAAAAAAAUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5273,
					1,
					"insert",
					{
						"characters": " arg"
					},
					"BAAAABcCAAAAAAAAGAIAAAAAAAAAAAAAGAIAAAAAAAAZAgAAAAAAAAAAAAAZAgAAAAAAABoCAAAAAAAAAAAAABoCAAAAAAAAGwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwIAAAAAAAAXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5274,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAABsCAAAAAAAAHAIAAAAAAAAAAAAAHAIAAAAAAAAdAgAAAAAAAAAAAAAdAgAAAAAAAB4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwIAAAAAAAAbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5275,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB4CAAAAAAAAHwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgIAAAAAAAAeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5276,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAB8CAAAAAAAAIQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwIAAAAAAAAfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5277,
					1,
					"insert",
					{
						"characters": "attributes"
					},
					"CgAAACACAAAAAAAAIQIAAAAAAAAAAAAAIQIAAAAAAAAiAgAAAAAAAAAAAAAiAgAAAAAAACMCAAAAAAAAAAAAACMCAAAAAAAAJAIAAAAAAAAAAAAAJAIAAAAAAAAlAgAAAAAAAAAAAAAlAgAAAAAAACYCAAAAAAAAAAAAACYCAAAAAAAAJwIAAAAAAAAAAAAAJwIAAAAAAAAoAgAAAAAAAAAAAAAoAgAAAAAAACkCAAAAAAAAAAAAACkCAAAAAAAAKgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAIAAAAAAAAgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5279,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACwCAAAAAAAALQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAIAAAAAAAAsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5280,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAC0CAAAAAAAALwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQIAAAAAAAAtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5281,
					1,
					"right_delete",
					null,
					"AQAAAC4CAAAAAAAALgIAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAALgIAAAAAAAAuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5283,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAPMCAAAAAAAA9AIAAAAAAAAAAAAA9AIAAAAAAAD6AgAAAAAAAAAAAAD6AgAAAAAAAPsCAAAAAAAAAAAAAPQCAAAAAAAA9AIAAAAAAAAGAAAAICAgICAg9AIAAAAAAAD4AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wIAAAAAAADzAgAAAAAAAAAAAAAAQIBA"
				],
				[
					5292,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADQCAAAAAAAANQIAAAAAAAAAAAAANQIAAAAAAAA6AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAIAAAAAAAA0AgAAAAAAAAAAAAAAAElA"
				],
				[
					5294,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAADQCAAAAAAAANQIAAAAAAAAAAAAANQIAAAAAAAA2AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAIAAAAAAAA0AgAAAAAAAAAAAAAAAElA"
				],
				[
					5295,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADYCAAAAAAAAOAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgIAAAAAAAA2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5296,
					1,
					"insert",
					{
						"characters": "typeof"
					},
					"BgAAADcCAAAAAAAAOAIAAAAAAAAAAAAAOAIAAAAAAAA5AgAAAAAAAAAAAAA5AgAAAAAAADoCAAAAAAAAAAAAADoCAAAAAAAAOwIAAAAAAAAAAAAAOwIAAAAAAAA8AgAAAAAAAAAAAAA8AgAAAAAAAD0CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwIAAAAAAAA3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5297,
					1,
					"insert",
					{
						"characters": " arg"
					},
					"BAAAAD0CAAAAAAAAPgIAAAAAAAAAAAAAPgIAAAAAAAA/AgAAAAAAAAAAAAA/AgAAAAAAAEACAAAAAAAAAAAAAEACAAAAAAAAQQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQIAAAAAAAA9AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5298,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAEECAAAAAAAAQgIAAAAAAAAAAAAAQgIAAAAAAABDAgAAAAAAAAAAAABDAgAAAAAAAEQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQIAAAAAAABBAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5299,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEQCAAAAAAAARQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAIAAAAAAABEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5300,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAEUCAAAAAAAARwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQIAAAAAAABFAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5301,
					1,
					"insert",
					{
						"characters": "string"
					},
					"BgAAAEYCAAAAAAAARwIAAAAAAAAAAAAARwIAAAAAAABIAgAAAAAAAAAAAABIAgAAAAAAAEkCAAAAAAAAAAAAAEkCAAAAAAAASgIAAAAAAAAAAAAASgIAAAAAAABLAgAAAAAAAAAAAABLAgAAAAAAAEwCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgIAAAAAAABGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5303,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE4CAAAAAAAATwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgIAAAAAAABOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5304,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAE8CAAAAAAAAUQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwIAAAAAAABPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5305,
					1,
					"right_delete",
					null,
					"AQAAAFACAAAAAAAAUAIAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAUAIAAAAAAABQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5308,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAABUDAAAAAAAAFgMAAAAAAAAAAAAAFgMAAAAAAAAcAwAAAAAAAAAAAAAcAwAAAAAAAB0DAAAAAAAAAAAAABYDAAAAAAAAFgMAAAAAAAAGAAAAICAgICAgFgMAAAAAAAAaAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQMAAAAAAAAVAwAAAAAAAAAAAAAAoHRA"
				],
				[
					5313,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADWEgAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBpZihhcmcgIT0gJ2NoaWxkcmVuJyAmJiBhcmcgIT0gJ2F0dHJpYnV0ZXMnKSB7CiAgICAgaWYodHlwZW9mIGFyZyA9PSAnc3RyaW5nJykgewogICAgICBsZXQgbSA9IC9eW0EtWmEtel1bLVx3XSovLmV4ZWMoYXJnKTsKICAgICAgLy9jb25zb2xlLmxvZygnbScsIG0pOwogICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgYXJnID0gUHJlZGljYXRlLnByb3BlcnR5KCd0YWdOYW1lJywgLypzID0+IHMgPT0gbVswXSA/PyovIFByZWRpY2F0ZS5zdHJpbmcobVswXSkpOwogICAgICB9CiAgICB9CiAgICB9CgogICAgICB0aGlzLnB1c2goYXJnKTsKICAgIH0KICB9CgogIFtTeW1ib2wuaW5zcGVjdF0oZGVwdGgsIG9wdHMgPSB7fSkgewogICAgbGV0IG9iaiA9IFsuLi50aGlzXS5tYXAoR2V0S2V5KTsKICAgIC8vY29uc29sZS5sb2coJ29iaicsIG9iaik7CiAgICByZXR1cm4gKAogICAgICBgXHgxYlsxOzMxbSR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lID8/IHV0aWwuZ2V0Q2xhc3NOYW1lKHRoaXMpfVx4MWJbMG0gYCArCiAgICAgIGluc3BlY3Qob2JqID8/IHsgX19wcm90b19fOiB7IFtTeW1ib2wudG9TdHJpbmdUYWddOiAnWFBhdGgnIH0sIC4uLm9iaiB9LCB7IC4uLm9wdHMsIGN1c3RvbUluc3BlY3Q6IHRydWUgfSkKICAgICk7CiAgfQoKICBzdGF0aWMgZnJvbSA9IGJ1aWxkWFBhdGg7Cn0KClhQYXRoLnByb3RvdHlwZVtTeW1ib2wudG9TdHJpbmdUYWddID0gJ1hQYXRoJzsKCmV4cG9ydCBjb25zdCBJbW11dGFibGVYUGF0aCA9IFhQYXRoOwpleHBvcnQgY29uc3QgTXV0YWJsZVhQYXRoID0gWFBhdGg7CgpleHBvcnQgZnVuY3Rpb24gcGFyc2VYUGF0aChzdHIpIHt9CgpleHBvcnQgZnVuY3Rpb24gYnVpbGRYUGF0aChwdHIsIHJvb3QpIHsKICBsZXQgbm9kZSA9IHJvb3QsCiAgICBwYXJlbnQsCiAgICBwcmV2S2V5LAogICAgaSA9IDAsCiAgICBwYXJ0cyA9IFtdLAogICAgc2libGluZ3MsCiAgICBzaWJsaW5nU2FtZSwKICAgIGtleXMsCiAgICBwcmV2S2V5cywKICAgIHR5cGUsCiAgICBzYW1lLAogICAgaGllciA9IFtdOwogIGZvcihsZXQga2V5IG9mIHB0cikgewogICAgLy8gaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSBrZXkgPSBHZXRLZXkoa2V5KTsKICAgIGlmKHR5cGVvZiBrZXkgPT0gJ2Z1bmN0aW9uJykgewogICAgICBpZihpc09iamVjdChub2RlKSAmJiAnbGVuZ3RoJyBpbiBub2RlKSB7CiAgICAgICAgbGV0IGEgPSBbLi4ubm9kZV0sCiAgICAgICAgICBmbiA9IGtleTsKICAgICAgICAvL2NvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgYSwgbm9kZSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgICAgIGtleSA9IGEuZmluZEluZGV4KGZuKTsKICAgICAgfQogICAgfQoKICAgIC8vY29uc29sZS5sb2coJ2tleScsIGtleSwga2V5ICsgJycpOwogICAgdHlwZSA9IGtleSA9PSAnY2hpbGRyZW4nID8gJ29iamVjdCcgOiBOb2RlVHlwZShub2RlKTsKCiAgICBpZih0eXBlICE9ICdhcnJheScpIHsKICAgICAgc2libGluZ1NhbWUgPSBbXTsKICAgIH0gZWxzZSB7CiAgICAgIHNpYmxpbmdzID0gWy4uLm5vZGVdOwogICAgICBzaWJsaW5nU2FtZSA9IHNpYmxpbmdzLnJlZHVjZSgoYWNjLCBuLCBpKSA9PiB7CiAgICAgICAgaWYoaXNPYmplY3QobikgJiBpc09iamVjdChub2RlW2tleV0pKQogICAgICAgICAgaWYobi50YWdOYW1lID09IG5vZGVba2V5XS50YWdOYW1lKSAvKmlmIChpICE9IGtleSkqLyBhY2MucHVzaChbaSwgbi50YWdOYW1lXSk7CiAgICAgICAgcmV0dXJuIGFjYzsKICAgICAgfSwgW10pOwogICAgfQogICAga2V5cyA9IGlzT2JqZWN0KG5vZGUpID8gT2JqZWN0LmtleXMobm9kZSkgOiBbXTsKCiAgICAvLyAgIGNvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgdHlwZSwga2V5cywga2V5LCBpLCBub2RlIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CiAgICBpZihrZXkgPT0gJ2NoaWxkcmVuJykgewogICAgICBwYXJ0cy5wdXNoKGtleSk7CiAgICB9IGVsc2UgewogICAgICBzYW1lID0gc2libGluZ1NhbWUubGVuZ3RoIHx8IHVuZGVmaW5lZDsKCiAgICAgIC8vY29uc29sZS5sb2coJycsIGluc3BlY3QoeyB0eXBlLCBrZXksIGkgfSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAyIH0pKTsKCiAgICAgIGxldCBwYXJ0ID0gQWRkS2V5KG5vZGVba2V5XSwga2V5LCBpLCBzYW1lKTsKCiAgICAgIGlmKHR5cGVvZiBwYXJ0ID09ICdzdHJpbmcnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uaW5kZXhPZihwYXJ0KSA9PSAtMSkgewogICAgICAgIGxldCBwciA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIFByZWRpY2F0ZS5zdHJpbmcocGFydCkpOwogICAgICAgIHByLnRhZyA9IHBhcnQ7CiAgICAgICAgcGFydCA9IHByOwogICAgICB9CiAgICAgIHBhcnRzLnB1c2gocGFydCk7CiAgICB9CgogICAgaWYoIWlzT2JqZWN0KG5vZGUpKQogICAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgICAgYEVycm9yIGluZGV4aW5nIDwke3R5cGVvZiBub2RlfT4gd2l0aCA8JHtrZXl9PiBbJHtoaWVyLmpvaW4oJywgJyl9XTogJHtwYXJ0cy5tYXAoR2V0S2V5KS5qb2luKCcgLT4gJyl9YAogICAgICApOwoKICAgIHBhcmVudCA9IG5vZGU7CiAgICBub2RlID0gbm9kZVtrZXldOwogICAgaGllci5wdXNoKGtleSk7CiAgICBwcmV2S2V5ID0ga2V5OwogICAgcHJldktleXMgPSBrZXlzOwogICAgaSsrOwogIH0KCiAgZnVuY3Rpb24gQWRkS2V5KG5vZGUsIGssIGksIHNhbWUpIHsKICAgIGxldCBzID0gJyc7CiAgICAvL2NvbnNvbGUubG9nKCdBZGRLZXknLCBpbnNwZWN0KG5vZGUsIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMSB9KSk7CiAgICBpZihpc09iamVjdChub2RlKSAmJiAndGFnTmFtZScgaW4gbm9kZSkgcyA9IG5vZGUudGFnTmFtZTsKCiAgICBpZih0eXBlb2YgayA9PSAnbnVtYmVyJykgewogICAgICBpZihzYW1lID4gMSkKICAgICAgICAvKmlmKG5vZGU/LmF0dHJpYnV0ZXM/Lm5hbWUpIHMgKz0gYFtAbmFtZT0iJHtub2RlLmF0dHJpYnR1ZXMubmFtZX0iXWA7CiAgICAgICAgICBlbHNlKi8KICAgICAgICBzICs9IGBbJHtrfV1gOwogICAgfSBlbHNlIGlmKHR5cGVvZiBrID09ICdzdHJpbmcnKSB7CiAgICB9CiAgICBpZihzID09PSAnJykgcyA9IHsgY2hpbGRyZW46ICcvJyB9W2tdID8/IGsgPz8gJy8nOwogICAgcmV0dXJuIHM7CiAgfQoKICBmdW5jdGlvbiBHZXRLZXkocCkgewogICAgbGV0IGs7CiAgICBpZigoaXNPYmplY3QocCkgfHwgaXNGdW5jdGlvbihwKSkgJiYgcCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkgewogICAgICBpZihwLmlkID09IFByZWRpY2F0ZS5QUk9QRVJUWSkgewogICAgICAgIGNvbnN0IHN0ciA9IHAudmFsdWVzKClbMV07CiAgICAgICAgayA9IHN0ci52YWx1ZXMoKVswXTsKICAgICAgfQogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdvYmplY3QnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uc29tZShwcm9wID0+IHByb3AgaW4gcCkpIHsKICAgICAgayA9IHAudGFnTmFtZTsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnZnVuY3Rpb24nIC8qICYmICEocCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkqLykgewogICAgICBpZigvdGFnTmFtZVxzKj09Ly50ZXN0KHAgKyAnJykpIGsgPSAocCArICcnKS5yZXBsYWNlKC8uKicoLiopJyQvLCAnJDEnKTsKICAgICAgZWxzZSBrID0gcDsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnbnVtYmVyJyB8fCB0eXBlb2YgcCA9PSAnc3RyaW5nJykgewogICAgICBrID0gcDsKICAgIH0gZWxzZSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcGFydCAoJHt1dGlsLmdldFR5cGVTdHIocCl9ICR7dHlwZW9mIHB9KTogJHtpbnNwZWN0KHAsIHsgY29sb3JzOiB0cnVlIH0pfWApOwogICAgcmV0dXJuIGs7CiAgfQogIGZ1bmN0aW9uIE5vZGVUeXBlKG5vZGUpIHsKICAgIHJldHVybiBpc09iamVjdChub2RlKQogICAgICA/ICdsZW5ndGgnIGluIG5vZGUgJiYgdHlwZW9mIG5vZGUubGVuZ3RoID09ICdudW1iZXInCiAgICAgICAgPyAnYXJyYXknCiAgICAgICAgOiB1dGlsLmdldENsYXNzTmFtZShub2RlKS50b0xvd2VyQ2FzZSgpCiAgICAgIDogdHlwZW9mIG5vZGU7CiAgfQogIGNvbnNvbGUubG9nKCdidWlsZFhQYXRoJywgcGFydHMgLyoubWFwKHAgPT4gR2V0S2V5KHApID8/IChwLnRvU3RyaW5nID8/IHAudG9Tb3VyY2UpLmNhbGwocCkpKi8pOwogIHJldHVybiBuZXcgWFBhdGgocGFydHMpOwp9CgpleHRlbmRBcnJheShYUGF0aC5wcm90b3R5cGUpOwoKZXhwb3J0IGRlZmF1bHQgWFBhdGg7CgAAAAAAAAAA8xIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwMAAAAAAAAbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5320,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAAFsDAAAAAAAAXAMAAAAAAAAAAAAAXAMAAAAAAABgAwAAAAAAAAAAAABgAwAAAAAAAGEDAAAAAAAAAAAAAGEDAAAAAAAAYgMAAAAAAAAAAAAAYgMAAAAAAABjAwAAAAAAAAAAAABjAwAAAAAAAGQDAAAAAAAAAAAAAGQDAAAAAAAAZQMAAAAAAAAAAAAAZQMAAAAAAABmAwAAAAAAAAAAAABmAwAAAAAAAGcDAAAAAAAAAAAAAGcDAAAAAAAAaAMAAAAAAAAAAAAAaAMAAAAAAABpAwAAAAAAAAAAAABpAwAAAAAAAGoDAAAAAAAAAAAAAGoDAAAAAAAAawMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwMAAAAAAABbAwAAAAAAAP///////+9/"
				],
				[
					5321,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGsDAAAAAAAAbQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawMAAAAAAABrAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5322,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAGwDAAAAAAAAbgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAMAAAAAAABsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5323,
					1,
					"insert",
					{
						"characters": "XPath.constructor,"
					},
					"EgAAAG0DAAAAAAAAbgMAAAAAAAAAAAAAbgMAAAAAAABvAwAAAAAAAAAAAABvAwAAAAAAAHADAAAAAAAAAAAAAHADAAAAAAAAcQMAAAAAAAAAAAAAcQMAAAAAAAByAwAAAAAAAAAAAAByAwAAAAAAAHMDAAAAAAAAAAAAAHMDAAAAAAAAdAMAAAAAAAAAAAAAdAMAAAAAAAB1AwAAAAAAAAAAAAB1AwAAAAAAAHYDAAAAAAAAAAAAAHYDAAAAAAAAdwMAAAAAAAAAAAAAdwMAAAAAAAB4AwAAAAAAAAAAAAB4AwAAAAAAAHkDAAAAAAAAAAAAAHkDAAAAAAAAegMAAAAAAAAAAAAAegMAAAAAAAB7AwAAAAAAAAAAAAB7AwAAAAAAAHwDAAAAAAAAAAAAAHwDAAAAAAAAfQMAAAAAAAAAAAAAfQMAAAAAAAB+AwAAAAAAAAAAAAB+AwAAAAAAAH8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQMAAAAAAABtAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5324,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAH8DAAAAAAAAgAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwMAAAAAAAB/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					5325,
					2,
					"left_delete",
					null,
					"AgAAAH8DAAAAAAAAfwMAAAAAAAABAAAAdH4DAAAAAAAAfgMAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAgAMAAAAAAACAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5327,
					1,
					"insert",
					{
						"characters": ",this"
					},
					"BQAAAH8DAAAAAAAAgAMAAAAAAAAAAAAAgAMAAAAAAACBAwAAAAAAAAAAAACBAwAAAAAAAIIDAAAAAAAAAAAAAIIDAAAAAAAAgwMAAAAAAAAAAAAAgwMAAAAAAACEAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwMAAAAAAAB/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					5329,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIUDAAAAAAAAhgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQMAAAAAAACFAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5334,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeEwAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBpZihhcmcgIT0gJ2NoaWxkcmVuJyAmJiBhcmcgIT0gJ2F0dHJpYnV0ZXMnKSB7CiAgICAgICAgaWYodHlwZW9mIGFyZyA9PSAnc3RyaW5nJykgewogICAgICAgICAgbGV0IG0gPSAvXltBLVphLXpdWy1cd10qLy5leGVjKGFyZyk7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdtJywgbSk7CiAgICAgICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgICAgIGFyZyA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIC8qcyA9PiBzID09IG1bMF0gPz8qLyBQcmVkaWNhdGUuc3RyaW5nKG1bMF0pKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMucHVzaChhcmcpOwogICAgfQogICAgY29uc29sZS5sb2coJ1hQYXRoLmNvbnN0cnVjdG9yJyx0aGlzKTsKICB9CgogIFtTeW1ib2wuaW5zcGVjdF0oZGVwdGgsIG9wdHMgPSB7fSkgewogICAgbGV0IG9iaiA9IFsuLi50aGlzXS5tYXAoR2V0S2V5KTsKICAgIC8vY29uc29sZS5sb2coJ29iaicsIG9iaik7CiAgICByZXR1cm4gKAogICAgICBgXHgxYlsxOzMxbSR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lID8/IHV0aWwuZ2V0Q2xhc3NOYW1lKHRoaXMpfVx4MWJbMG0gYCArCiAgICAgIGluc3BlY3Qob2JqID8/IHsgX19wcm90b19fOiB7IFtTeW1ib2wudG9TdHJpbmdUYWddOiAnWFBhdGgnIH0sIC4uLm9iaiB9LCB7IC4uLm9wdHMsIGN1c3RvbUluc3BlY3Q6IHRydWUgfSkKICAgICk7CiAgfQoKICBzdGF0aWMgZnJvbSA9IGJ1aWxkWFBhdGg7Cn0KClhQYXRoLnByb3RvdHlwZVtTeW1ib2wudG9TdHJpbmdUYWddID0gJ1hQYXRoJzsKCmV4cG9ydCBjb25zdCBJbW11dGFibGVYUGF0aCA9IFhQYXRoOwpleHBvcnQgY29uc3QgTXV0YWJsZVhQYXRoID0gWFBhdGg7CgpleHBvcnQgZnVuY3Rpb24gcGFyc2VYUGF0aChzdHIpIHt9CgpleHBvcnQgZnVuY3Rpb24gYnVpbGRYUGF0aChwdHIsIHJvb3QpIHsKICBsZXQgbm9kZSA9IHJvb3QsCiAgICBwYXJlbnQsCiAgICBwcmV2S2V5LAogICAgaSA9IDAsCiAgICBwYXJ0cyA9IFtdLAogICAgc2libGluZ3MsCiAgICBzaWJsaW5nU2FtZSwKICAgIGtleXMsCiAgICBwcmV2S2V5cywKICAgIHR5cGUsCiAgICBzYW1lLAogICAgaGllciA9IFtdOwogIGZvcihsZXQga2V5IG9mIHB0cikgewogICAgLy8gaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSBrZXkgPSBHZXRLZXkoa2V5KTsKICAgIGlmKHR5cGVvZiBrZXkgPT0gJ2Z1bmN0aW9uJykgewogICAgICBpZihpc09iamVjdChub2RlKSAmJiAnbGVuZ3RoJyBpbiBub2RlKSB7CiAgICAgICAgbGV0IGEgPSBbLi4ubm9kZV0sCiAgICAgICAgICBmbiA9IGtleTsKICAgICAgICAvL2NvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgYSwgbm9kZSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgICAgIGtleSA9IGEuZmluZEluZGV4KGZuKTsKICAgICAgfQogICAgfQoKICAgIC8vY29uc29sZS5sb2coJ2tleScsIGtleSwga2V5ICsgJycpOwogICAgdHlwZSA9IGtleSA9PSAnY2hpbGRyZW4nID8gJ29iamVjdCcgOiBOb2RlVHlwZShub2RlKTsKCiAgICBpZih0eXBlICE9ICdhcnJheScpIHsKICAgICAgc2libGluZ1NhbWUgPSBbXTsKICAgIH0gZWxzZSB7CiAgICAgIHNpYmxpbmdzID0gWy4uLm5vZGVdOwogICAgICBzaWJsaW5nU2FtZSA9IHNpYmxpbmdzLnJlZHVjZSgoYWNjLCBuLCBpKSA9PiB7CiAgICAgICAgaWYoaXNPYmplY3QobikgJiBpc09iamVjdChub2RlW2tleV0pKQogICAgICAgICAgaWYobi50YWdOYW1lID09IG5vZGVba2V5XS50YWdOYW1lKSAvKmlmIChpICE9IGtleSkqLyBhY2MucHVzaChbaSwgbi50YWdOYW1lXSk7CiAgICAgICAgcmV0dXJuIGFjYzsKICAgICAgfSwgW10pOwogICAgfQogICAga2V5cyA9IGlzT2JqZWN0KG5vZGUpID8gT2JqZWN0LmtleXMobm9kZSkgOiBbXTsKCiAgICAvLyAgIGNvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgdHlwZSwga2V5cywga2V5LCBpLCBub2RlIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CiAgICBpZihrZXkgPT0gJ2NoaWxkcmVuJykgewogICAgICBwYXJ0cy5wdXNoKGtleSk7CiAgICB9IGVsc2UgewogICAgICBzYW1lID0gc2libGluZ1NhbWUubGVuZ3RoIHx8IHVuZGVmaW5lZDsKCiAgICAgIC8vY29uc29sZS5sb2coJycsIGluc3BlY3QoeyB0eXBlLCBrZXksIGkgfSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAyIH0pKTsKCiAgICAgIGxldCBwYXJ0ID0gQWRkS2V5KG5vZGVba2V5XSwga2V5LCBpLCBzYW1lKTsKCiAgICAgIGlmKHR5cGVvZiBwYXJ0ID09ICdzdHJpbmcnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uaW5kZXhPZihwYXJ0KSA9PSAtMSkgewogICAgICAgIGxldCBwciA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIFByZWRpY2F0ZS5zdHJpbmcocGFydCkpOwogICAgICAgIHByLnRhZyA9IHBhcnQ7CiAgICAgICAgcGFydCA9IHByOwogICAgICB9CiAgICAgIHBhcnRzLnB1c2gocGFydCk7CiAgICB9CgogICAgaWYoIWlzT2JqZWN0KG5vZGUpKQogICAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgICAgYEVycm9yIGluZGV4aW5nIDwke3R5cGVvZiBub2RlfT4gd2l0aCA8JHtrZXl9PiBbJHtoaWVyLmpvaW4oJywgJyl9XTogJHtwYXJ0cy5tYXAoR2V0S2V5KS5qb2luKCcgLT4gJyl9YAogICAgICApOwoKICAgIHBhcmVudCA9IG5vZGU7CiAgICBub2RlID0gbm9kZVtrZXldOwogICAgaGllci5wdXNoKGtleSk7CiAgICBwcmV2S2V5ID0ga2V5OwogICAgcHJldktleXMgPSBrZXlzOwogICAgaSsrOwogIH0KCiAgZnVuY3Rpb24gQWRkS2V5KG5vZGUsIGssIGksIHNhbWUpIHsKICAgIGxldCBzID0gJyc7CiAgICAvL2NvbnNvbGUubG9nKCdBZGRLZXknLCBpbnNwZWN0KG5vZGUsIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMSB9KSk7CiAgICBpZihpc09iamVjdChub2RlKSAmJiAndGFnTmFtZScgaW4gbm9kZSkgcyA9IG5vZGUudGFnTmFtZTsKCiAgICBpZih0eXBlb2YgayA9PSAnbnVtYmVyJykgewogICAgICBpZihzYW1lID4gMSkKICAgICAgICAvKmlmKG5vZGU/LmF0dHJpYnV0ZXM/Lm5hbWUpIHMgKz0gYFtAbmFtZT0iJHtub2RlLmF0dHJpYnR1ZXMubmFtZX0iXWA7CiAgICAgICAgICBlbHNlKi8KICAgICAgICBzICs9IGBbJHtrfV1gOwogICAgfSBlbHNlIGlmKHR5cGVvZiBrID09ICdzdHJpbmcnKSB7CiAgICB9CiAgICBpZihzID09PSAnJykgcyA9IHsgY2hpbGRyZW46ICcvJyB9W2tdID8/IGsgPz8gJy8nOwogICAgcmV0dXJuIHM7CiAgfQoKICBmdW5jdGlvbiBHZXRLZXkocCkgewogICAgbGV0IGs7CiAgICBpZigoaXNPYmplY3QocCkgfHwgaXNGdW5jdGlvbihwKSkgJiYgcCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkgewogICAgICBpZihwLmlkID09IFByZWRpY2F0ZS5QUk9QRVJUWSkgewogICAgICAgIGNvbnN0IHN0ciA9IHAudmFsdWVzKClbMV07CiAgICAgICAgayA9IHN0ci52YWx1ZXMoKVswXTsKICAgICAgfQogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdvYmplY3QnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uc29tZShwcm9wID0+IHByb3AgaW4gcCkpIHsKICAgICAgayA9IHAudGFnTmFtZTsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnZnVuY3Rpb24nIC8qICYmICEocCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkqLykgewogICAgICBpZigvdGFnTmFtZVxzKj09Ly50ZXN0KHAgKyAnJykpIGsgPSAocCArICcnKS5yZXBsYWNlKC8uKicoLiopJyQvLCAnJDEnKTsKICAgICAgZWxzZSBrID0gcDsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnbnVtYmVyJyB8fCB0eXBlb2YgcCA9PSAnc3RyaW5nJykgewogICAgICBrID0gcDsKICAgIH0gZWxzZSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcGFydCAoJHt1dGlsLmdldFR5cGVTdHIocCl9ICR7dHlwZW9mIHB9KTogJHtpbnNwZWN0KHAsIHsgY29sb3JzOiB0cnVlIH0pfWApOwogICAgcmV0dXJuIGs7CiAgfQogIGZ1bmN0aW9uIE5vZGVUeXBlKG5vZGUpIHsKICAgIHJldHVybiBpc09iamVjdChub2RlKQogICAgICA/ICdsZW5ndGgnIGluIG5vZGUgJiYgdHlwZW9mIG5vZGUubGVuZ3RoID09ICdudW1iZXInCiAgICAgICAgPyAnYXJyYXknCiAgICAgICAgOiB1dGlsLmdldENsYXNzTmFtZShub2RlKS50b0xvd2VyQ2FzZSgpCiAgICAgIDogdHlwZW9mIG5vZGU7CiAgfQogIGNvbnNvbGUubG9nKCdidWlsZFhQYXRoJywgcGFydHMgLyoubWFwKHAgPT4gR2V0S2V5KHApID8/IChwLnRvU3RyaW5nID8/IHAudG9Tb3VyY2UpLmNhbGwocCkpKi8pOwogIHJldHVybiBuZXcgWFBhdGgocGFydHMpOwp9CgpleHRlbmRBcnJheShYUGF0aC5wcm90b3R5cGUpOwoKZXhwb3J0IGRlZmF1bHQgWFBhdGg7CgAAAAAAAAAAHxMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgMAAAAAAACGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5342,
					1,
					"cut",
					null,
					"AQAAAP8BAAAAAAAA/wEAAAAAAAA1AAAAIGlmKGFyZyAhPSAnY2hpbGRyZW4nICYmIGFyZyAhPSAnYXR0cmlidXRlcycpIHsKICAgICA",
					"AQAAAAAAAAABAAAA/wEAAAAAAAA0AgAAAAAAAAAAAAAAAElA"
				],
				[
					5344,
					1,
					"paste",
					null,
					"AQAAACQCAAAAAAAAWQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAIAAAAAAAAkAgAAAAAAAAAAAAAAAElA"
				],
				[
					5357,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACYGAAAAAAAAJwYAAAAAAAAAAAAAJwYAAAAAAAAnBgAAAAAAAA4AAAAgICAgcHJldktleXMsCg",
					"AQAAAAAAAAABAAAAJgYAAAAAAAA0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					5372,
					1,
					"left_delete",
					null,
					"AQAAAMIMAAAAAAAAwgwAAAAAAAAVAAAAICAgIHByZXZLZXlzID0ga2V5czsK",
					"AQAAAAAAAAABAAAAwgwAAAAAAADXDAAAAAAAAAAAAAAAAPC/"
				],
				[
					5420,
					1,
					"insert",
					{
						"characters": "oa"
					},
					"AwAAAM4GAAAAAAAAzwYAAAAAAAAAAAAAzwYAAAAAAADPBgAAAAAAAAQAAABub2RlzwYAAAAAAADQBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgYAAAAAAADSBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5421,
					2,
					"left_delete",
					null,
					"AgAAAM8GAAAAAAAAzwYAAAAAAAABAAAAYc4GAAAAAAAAzgYAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAA0AYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5422,
					1,
					"insert",
					{
						"characters": "parent"
					},
					"BgAAAM4GAAAAAAAAzwYAAAAAAAAAAAAAzwYAAAAAAADQBgAAAAAAAAAAAADQBgAAAAAAANEGAAAAAAAAAAAAANEGAAAAAAAA0gYAAAAAAAAAAAAA0gYAAAAAAADTBgAAAAAAAAAAAADTBgAAAAAAANQGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgYAAAAAAADOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5424,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOQGAAAAAAAA5QYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AYAAAAAAADkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5425,
					5,
					"right_delete",
					null,
					"BQAAAOUGAAAAAAAA5QYAAAAAAAABAAAAIOUGAAAAAAAA5QYAAAAAAAABAAAAbuUGAAAAAAAA5QYAAAAAAAABAAAAb+UGAAAAAAAA5QYAAAAAAAABAAAAZOUGAAAAAAAA5QYAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA5QYAAAAAAADlBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5426,
					1,
					"insert",
					{
						"characters": "parent"
					},
					"BgAAAOUGAAAAAAAA5gYAAAAAAAAAAAAA5gYAAAAAAADnBgAAAAAAAAAAAADnBgAAAAAAAOgGAAAAAAAAAAAAAOgGAAAAAAAA6QYAAAAAAAAAAAAA6QYAAAAAAADqBgAAAAAAAAAAAADqBgAAAAAAAOsGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QYAAAAAAADlBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5430,
					4,
					"left_delete",
					null,
					"BAAAAAYHAAAAAAAABgcAAAAAAAABAAAAZQUHAAAAAAAABQcAAAAAAAABAAAAZAQHAAAAAAAABAcAAAAAAAABAAAAbwMHAAAAAAAAAwcAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAABwcAAAAAAAAHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5431,
					1,
					"insert",
					{
						"characters": "parent"
					},
					"BgAAAAMHAAAAAAAABAcAAAAAAAAAAAAABAcAAAAAAAAFBwAAAAAAAAAAAAAFBwAAAAAAAAYHAAAAAAAAAAAAAAYHAAAAAAAABwcAAAAAAAAAAAAABwcAAAAAAAAIBwAAAAAAAAAAAAAIBwAAAAAAAAkHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwcAAAAAAAADBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5440,
					1,
					"left_delete",
					null,
					"AQAAAIEHAAAAAAAAgQcAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAggcAAAAAAACCBwAAAAAAAAAAAAAAwGJA"
				],
				[
					5441,
					1,
					"insert",
					{
						"characters": "pa"
					},
					"AgAAAIEHAAAAAAAAggcAAAAAAAAAAAAAggcAAAAAAACDBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQcAAAAAAACBBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5442,
					2,
					"left_delete",
					null,
					"AgAAAIIHAAAAAAAAggcAAAAAAAABAAAAYYEHAAAAAAAAgQcAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAgwcAAAAAAACDBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5443,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAIEHAAAAAAAAggcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQcAAAAAAACBBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5448,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAADEwAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICAgIGlmKHR5cGVvZiBhcmcgPT0gJ3N0cmluZycpIHsKICAgICAgaWYoYXJnICE9ICdjaGlsZHJlbicgJiYgYXJnICE9ICdhdHRyaWJ1dGVzJykgewogICAgICAgICAgbGV0IG0gPSAvXltBLVphLXpdWy1cd10qLy5leGVjKGFyZyk7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdtJywgbSk7CiAgICAgICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgICAgIGFyZyA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIC8qcyA9PiBzID09IG1bMF0gPz8qLyBQcmVkaWNhdGUuc3RyaW5nKG1bMF0pKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMucHVzaChhcmcpOwogICAgfQogICAgY29uc29sZS5sb2coJ1hQYXRoLmNvbnN0cnVjdG9yJywgdGhpcyk7CiAgfQoKICBbU3ltYm9sLmluc3BlY3RdKGRlcHRoLCBvcHRzID0ge30pIHsKICAgIGxldCBvYmogPSBbLi4udGhpc10ubWFwKEdldEtleSk7CiAgICAvL2NvbnNvbGUubG9nKCdvYmonLCBvYmopOwogICAgcmV0dXJuICgKICAgICAgYFx4MWJbMTszMW0ke3RoaXMuY29uc3RydWN0b3IubmFtZSA/PyB1dGlsLmdldENsYXNzTmFtZSh0aGlzKX1ceDFiWzBtIGAgKwogICAgICBpbnNwZWN0KG9iaiA/PyB7IF9fcHJvdG9fXzogeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1hQYXRoJyB9LCAuLi5vYmogfSwgeyAuLi5vcHRzLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0pCiAgICApOwogIH0KCiAgc3RhdGljIGZyb20gPSBidWlsZFhQYXRoOwp9CgpYUGF0aC5wcm90b3R5cGVbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdYUGF0aCc7CgpleHBvcnQgY29uc3QgSW1tdXRhYmxlWFBhdGggPSBYUGF0aDsKZXhwb3J0IGNvbnN0IE11dGFibGVYUGF0aCA9IFhQYXRoOwoKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlWFBhdGgoc3RyKSB7fQoKZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkWFBhdGgocHRyLCByb290KSB7CiAgbGV0IG5vZGUgPSByb290LAogICAgcGFyZW50LAogICAgcHJldktleSwKICAgIGkgPSAwLAogICAgcGFydHMgPSBbXSwKICAgIHNpYmxpbmdzLAogICAgc2libGluZ1NhbWUsCiAgICBrZXlzLAogICAgIHR5cGUsCiAgICBzYW1lLAogICAgaGllciA9IFtdOwogIGZvcihsZXQga2V5IG9mIHB0cikgewogICAgLy8gaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSBrZXkgPSBHZXRLZXkoa2V5KTsKICAgIGlmKHR5cGVvZiBrZXkgPT0gJ2Z1bmN0aW9uJykgewogICAgICBpZihpc09iamVjdChwYXJlbnQpICYmICdsZW5ndGgnIGluIHBhcmVudCkgewogICAgICAgIGxldCBhID0gWy4uLnBhcmVudF0sCiAgICAgICAgICBmbiA9IGtleTsKICAgICAgICAvL2NvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgYSwgbm9kZSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgICAgIGtleSA9IGEuZmluZEluZGV4KGZuKTsKICAgICAgfQogICAgfQoKICAgIC8vY29uc29sZS5sb2coJ2tleScsIGtleSwga2V5ICsgJycpOwogICAgdHlwZSA9IGtleSA9PSAnY2hpbGRyZW4nID8gJ29iamVjdCcgOiBOb2RlVHlwZShub2RlKTsKCiAgICBpZih0eXBlICE9ICdhcnJheScpIHsKICAgICAgc2libGluZ1NhbWUgPSBbXTsKICAgIH0gZWxzZSB7CiAgICAgIHNpYmxpbmdzID0gWy4uLm5vZGVdOwogICAgICBzaWJsaW5nU2FtZSA9IHNpYmxpbmdzLnJlZHVjZSgoYWNjLCBuLCBpKSA9PiB7CiAgICAgICAgaWYoaXNPYmplY3QobikgJiBpc09iamVjdChub2RlW2tleV0pKQogICAgICAgICAgaWYobi50YWdOYW1lID09IG5vZGVba2V5XS50YWdOYW1lKSAvKmlmIChpICE9IGtleSkqLyBhY2MucHVzaChbaSwgbi50YWdOYW1lXSk7CiAgICAgICAgcmV0dXJuIGFjYzsKICAgICAgfSwgW10pOwogICAgfQogICAga2V5cyA9IGlzT2JqZWN0KG5vZGUpID8gT2JqZWN0LmtleXMobm9kZSkgOiBbXTsKCiAgICAvLyAgIGNvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgdHlwZSwga2V5cywga2V5LCBpLCBub2RlIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CiAgICBpZihrZXkgPT0gJ2NoaWxkcmVuJykgewogICAgICBwYXJ0cy5wdXNoKGtleSk7CiAgICB9IGVsc2UgewogICAgICBzYW1lID0gc2libGluZ1NhbWUubGVuZ3RoIHx8IHVuZGVmaW5lZDsKCiAgICAgIC8vY29uc29sZS5sb2coJycsIGluc3BlY3QoeyB0eXBlLCBrZXksIGkgfSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAyIH0pKTsKCiAgICAgIGxldCBwYXJ0ID0gQWRkS2V5KG5vZGVba2V5XSwga2V5LCBpLCBzYW1lKTsKCiAgICAgIGlmKHR5cGVvZiBwYXJ0ID09ICdzdHJpbmcnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uaW5kZXhPZihwYXJ0KSA9PSAtMSkgewogICAgICAgIGxldCBwciA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIFByZWRpY2F0ZS5zdHJpbmcocGFydCkpOwogICAgICAgIHByLnRhZyA9IHBhcnQ7CiAgICAgICAgcGFydCA9IHByOwogICAgICB9CiAgICAgIHBhcnRzLnB1c2gocGFydCk7CiAgICB9CgogICAgaWYoIWlzT2JqZWN0KG5vZGUpKQogICAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgICAgYEVycm9yIGluZGV4aW5nIDwke3R5cGVvZiBub2RlfT4gd2l0aCA8JHtrZXl9PiBbJHtoaWVyLmpvaW4oJywgJyl9XTogJHtwYXJ0cy5tYXAoR2V0S2V5KS5qb2luKCcgLT4gJyl9YAogICAgICApOwoKICAgIHBhcmVudCA9IG5vZGU7CiAgICBub2RlID0gbm9kZVtrZXldOwogICAgaGllci5wdXNoKGtleSk7CiAgICBwcmV2S2V5ID0ga2V5OwogICAgaSsrOwogIH0KCiAgZnVuY3Rpb24gQWRkS2V5KG5vZGUsIGssIGksIHNhbWUpIHsKICAgIGxldCBzID0gJyc7CiAgICAvL2NvbnNvbGUubG9nKCdBZGRLZXknLCBpbnNwZWN0KG5vZGUsIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMSB9KSk7CiAgICBpZihpc09iamVjdChub2RlKSAmJiAndGFnTmFtZScgaW4gbm9kZSkgcyA9IG5vZGUudGFnTmFtZTsKCiAgICBpZih0eXBlb2YgayA9PSAnbnVtYmVyJykgewogICAgICBpZihzYW1lID4gMSkKICAgICAgICAvKmlmKG5vZGU/LmF0dHJpYnV0ZXM/Lm5hbWUpIHMgKz0gYFtAbmFtZT0iJHtub2RlLmF0dHJpYnR1ZXMubmFtZX0iXWA7CiAgICAgICAgICBlbHNlKi8KICAgICAgICBzICs9IGBbJHtrfV1gOwogICAgfSBlbHNlIGlmKHR5cGVvZiBrID09ICdzdHJpbmcnKSB7CiAgICB9CiAgICBpZihzID09PSAnJykgcyA9IHsgY2hpbGRyZW46ICcvJyB9W2tdID8/IGsgPz8gJy8nOwogICAgcmV0dXJuIHM7CiAgfQoKICBmdW5jdGlvbiBHZXRLZXkocCkgewogICAgbGV0IGs7CiAgICBpZigoaXNPYmplY3QocCkgfHwgaXNGdW5jdGlvbihwKSkgJiYgcCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkgewogICAgICBpZihwLmlkID09IFByZWRpY2F0ZS5QUk9QRVJUWSkgewogICAgICAgIGNvbnN0IHN0ciA9IHAudmFsdWVzKClbMV07CiAgICAgICAgayA9IHN0ci52YWx1ZXMoKVswXTsKICAgICAgfQogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdvYmplY3QnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uc29tZShwcm9wID0+IHByb3AgaW4gcCkpIHsKICAgICAgayA9IHAudGFnTmFtZTsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnZnVuY3Rpb24nIC8qICYmICEocCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkqLykgewogICAgICBpZigvdGFnTmFtZVxzKj09Ly50ZXN0KHAgKyAnJykpIGsgPSAocCArICcnKS5yZXBsYWNlKC8uKicoLiopJyQvLCAnJDEnKTsKICAgICAgZWxzZSBrID0gcDsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnbnVtYmVyJyB8fCB0eXBlb2YgcCA9PSAnc3RyaW5nJykgewogICAgICBrID0gcDsKICAgIH0gZWxzZSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcGFydCAoJHt1dGlsLmdldFR5cGVTdHIocCl9ICR7dHlwZW9mIHB9KTogJHtpbnNwZWN0KHAsIHsgY29sb3JzOiB0cnVlIH0pfWApOwogICAgcmV0dXJuIGs7CiAgfQogIGZ1bmN0aW9uIE5vZGVUeXBlKG5vZGUpIHsKICAgIHJldHVybiBpc09iamVjdChub2RlKQogICAgICA/ICdsZW5ndGgnIGluIG5vZGUgJiYgdHlwZW9mIG5vZGUubGVuZ3RoID09ICdudW1iZXInCiAgICAgICAgPyAnYXJyYXknCiAgICAgICAgOiB1dGlsLmdldENsYXNzTmFtZShub2RlKS50b0xvd2VyQ2FzZSgpCiAgICAgIDogdHlwZW9mIG5vZGU7CiAgfQogIGNvbnNvbGUubG9nKCdidWlsZFhQYXRoJywgcGFydHMgLyoubWFwKHAgPT4gR2V0S2V5KHApID8/IChwLnRvU3RyaW5nID8/IHAudG9Tb3VyY2UpLmNhbGwocCkpKi8pOwogIHJldHVybiBuZXcgWFBhdGgocGFydHMpOwp9CgpleHRlbmRBcnJheShYUGF0aC5wcm90b3R5cGUpOwoKZXhwb3J0IGRlZmF1bHQgWFBhdGg7CgAAAAAAAAAAAhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggcAAAAAAACCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5451,
					2,
					"right_delete",
					null,
					"AgAAACcHAAAAAAAAJwcAAAAAAAABAAAALycHAAAAAAAAJwcAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAJwcAAAAAAAAnBwAAAAAAAAAAAAAAAFRA"
				],
				[
					5455,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAL8GAAAAAAAAwAYAAAAAAAAAAAAAwAYAAAAAAADEBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwYAAAAAAAC/BgAAAAAAAAAAAAAAAERA"
				],
				[
					5466,
					1,
					"paste",
					null,
					"AQAAAL8GAAAAAAAA6AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwYAAAAAAAC/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					5469,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALwGAAAAAAAAvQYAAAAAAAAAAAAAvQYAAAAAAAC9BgAAAAAAAAkAAAAgICAgICAgLy8",
					"AQAAAAAAAAABAAAAxQYAAAAAAAC8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					5474,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAMoGAAAAAAAAywYAAAAAAAAAAAAAywYAAAAAAADLBgAAAAAAAAMAAABrZXk",
					"AQAAAAAAAAABAAAAygYAAAAAAADNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5477,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAM4GAAAAAAAAzgYAAAAAAAANAAAAa2V5LCBrZXkgKyAnJ84GAAAAAAAA3QYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgYAAAAAAADbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5478,
					1,
					"insert",
					{
						"characters": "parent,node"
					},
					"DAAAAM8GAAAAAAAA0AYAAAAAAAAAAAAA0AYAAAAAAADQBgAAAAAAAA0AAABrZXksIGtleSArICcn0AYAAAAAAADRBgAAAAAAAAAAAADRBgAAAAAAANIGAAAAAAAAAAAAANIGAAAAAAAA0wYAAAAAAAAAAAAA0wYAAAAAAADUBgAAAAAAAAAAAADUBgAAAAAAANUGAAAAAAAAAAAAANUGAAAAAAAA1gYAAAAAAAAAAAAA1gYAAAAAAADXBgAAAAAAAAAAAADXBgAAAAAAANgGAAAAAAAAAAAAANgGAAAAAAAA2QYAAAAAAAAAAAAA2QYAAAAAAADaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwYAAAAAAADcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5483,
					1,
					"insert",
					{
						"characters": "inspect"
					},
					"BwAAAM4GAAAAAAAAzwYAAAAAAAAAAAAAzwYAAAAAAADQBgAAAAAAAAAAAADQBgAAAAAAANEGAAAAAAAAAAAAANEGAAAAAAAA0gYAAAAAAAAAAAAA0gYAAAAAAADTBgAAAAAAAAAAAADTBgAAAAAAANQGAAAAAAAAAAAAANQGAAAAAAAA1QYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgYAAAAAAADOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5484,
					7,
					"left_delete",
					null,
					"BwAAANQGAAAAAAAA1AYAAAAAAAABAAAAdNMGAAAAAAAA0wYAAAAAAAABAAAAY9IGAAAAAAAA0gYAAAAAAAABAAAAZdEGAAAAAAAA0QYAAAAAAAABAAAAcNAGAAAAAAAA0AYAAAAAAAABAAAAc88GAAAAAAAAzwYAAAAAAAABAAAAbs4GAAAAAAAAzgYAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA1QYAAAAAAADVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5485,
					1,
					"insert",
					{
						"characters": "console.l"
					},
					"CQAAAM4GAAAAAAAAzwYAAAAAAAAAAAAAzwYAAAAAAADQBgAAAAAAAAAAAADQBgAAAAAAANEGAAAAAAAAAAAAANEGAAAAAAAA0gYAAAAAAAAAAAAA0gYAAAAAAADTBgAAAAAAAAAAAADTBgAAAAAAANQGAAAAAAAAAAAAANQGAAAAAAAA1QYAAAAAAAAAAAAA1QYAAAAAAADWBgAAAAAAAAAAAADWBgAAAAAAANcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgYAAAAAAADOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5486,
					1,
					"left_delete",
					null,
					"AQAAANYGAAAAAAAA1gYAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA1wYAAAAAAADXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5487,
					1,
					"insert",
					{
						"characters": "config({depth:2"
					},
					"DwAAANYGAAAAAAAA1wYAAAAAAAAAAAAA1wYAAAAAAADYBgAAAAAAAAAAAADYBgAAAAAAANkGAAAAAAAAAAAAANkGAAAAAAAA2gYAAAAAAAAAAAAA2gYAAAAAAADbBgAAAAAAAAAAAADbBgAAAAAAANwGAAAAAAAAAAAAANwGAAAAAAAA3QYAAAAAAAAAAAAA3QYAAAAAAADeBgAAAAAAAAAAAADeBgAAAAAAAN8GAAAAAAAAAAAAAN8GAAAAAAAA4AYAAAAAAAAAAAAA4AYAAAAAAADhBgAAAAAAAAAAAADhBgAAAAAAAOIGAAAAAAAAAAAAAOIGAAAAAAAA4wYAAAAAAAAAAAAA4wYAAAAAAADkBgAAAAAAAAAAAADkBgAAAAAAAOUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gYAAAAAAADWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5488,
					1,
					"insert",
					{
						"characters": "}),"
					},
					"AwAAAOUGAAAAAAAA5gYAAAAAAAAAAAAA5gYAAAAAAADnBgAAAAAAAAAAAADnBgAAAAAAAOgGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QYAAAAAAADlBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5489,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOgGAAAAAAAA6QYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AYAAAAAAADoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5493,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAALoGAAAAAAAAuwYAAAAAAAAAAAAAuwYAAAAAAAC/BgAAAAAAAAAAAAC/BgAAAAAAAMEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugYAAAAAAAC6BgAAAAAAAAAAAAAAwHxA"
				],
				[
					5497,
					1,
					"insert",
					{
						"characters": "key,."
					},
					"BgAAAPEGAAAAAAAA8gYAAAAAAAAAAAAAuwYAAAAAAAC7BgAAAAAAAAYAAAAgICAgICDsBgAAAAAAAO0GAAAAAAAAAAAAAO0GAAAAAAAA7gYAAAAAAAAAAAAA7gYAAAAAAADvBgAAAAAAAAAAAADvBgAAAAAAAPAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QYAAAAAAADxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5498,
					1,
					"left_delete",
					null,
					"AQAAAO8GAAAAAAAA7wYAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA8AYAAAAAAADwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5502,
					1,
					"insert",
					{
						"characters": ":key+''"
					},
					"BwAAAO4GAAAAAAAA7wYAAAAAAAAAAAAA7wYAAAAAAADwBgAAAAAAAAAAAADwBgAAAAAAAPEGAAAAAAAAAAAAAPEGAAAAAAAA8gYAAAAAAAAAAAAA8gYAAAAAAADzBgAAAAAAAAAAAADzBgAAAAAAAPQGAAAAAAAAAAAAAPQGAAAAAAAA9QYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gYAAAAAAADuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5509,
					1,
					"insert",
					{
						"characters": "node"
					},
					"BQAAABgHAAAAAAAAGQcAAAAAAAAAAAAAGQcAAAAAAAAZBwAAAAAAAAYAAABwYXJlbnQZBwAAAAAAABoHAAAAAAAAAAAAABoHAAAAAAAAGwcAAAAAAAAAAAAAGwcAAAAAAAAcBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAcAAAAAAAAeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5514,
					1,
					"insert",
					{
						"characters": "node"
					},
					"BQAAAC0HAAAAAAAALgcAAAAAAAAAAAAALgcAAAAAAAAuBwAAAAAAAAYAAABwYXJlbnQuBwAAAAAAAC8HAAAAAAAAAAAAAC8HAAAAAAAAMAcAAAAAAAAAAAAAMAcAAAAAAAAxBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQcAAAAAAAAzBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5517,
					1,
					"insert",
					{
						"characters": "Array.from(node)"
					},
					"EAAAAEUHAAAAAAAARgcAAAAAAAAAAAAARgcAAAAAAABHBwAAAAAAAAAAAABHBwAAAAAAAEgHAAAAAAAAAAAAAEgHAAAAAAAASQcAAAAAAAAAAAAASQcAAAAAAABKBwAAAAAAAAAAAABKBwAAAAAAAEsHAAAAAAAAAAAAAEsHAAAAAAAATAcAAAAAAAAAAAAATAcAAAAAAABNBwAAAAAAAAAAAABNBwAAAAAAAE4HAAAAAAAAAAAAAE4HAAAAAAAATwcAAAAAAAAAAAAATwcAAAAAAABQBwAAAAAAAAAAAABQBwAAAAAAAFEHAAAAAAAAAAAAAFEHAAAAAAAAUgcAAAAAAAAAAAAAUgcAAAAAAABTBwAAAAAAAAAAAABTBwAAAAAAAFQHAAAAAAAAAAAAAFQHAAAAAAAAVQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQcAAAAAAABFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5520,
					1,
					"left_delete",
					null,
					"AQAAAFUHAAAAAAAAVQcAAAAAAAALAAAAWy4uLnBhcmVudF0",
					"AQAAAAAAAAABAAAAVQcAAAAAAABgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5521,
					1,
					"right_delete",
					null,
					"AQAAAFUHAAAAAAAAVQcAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAVQcAAAAAAABVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5522,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFUHAAAAAAAAVgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQcAAAAAAABVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5529,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABMEwAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBpZih0eXBlb2YgYXJnID09ICdzdHJpbmcnKSB7CiAgICAgICAgaWYoYXJnICE9ICdjaGlsZHJlbicgJiYgYXJnICE9ICdhdHRyaWJ1dGVzJykgewogICAgICAgICAgbGV0IG0gPSAvXltBLVphLXpdWy1cd10qLy5leGVjKGFyZyk7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdtJywgbSk7CiAgICAgICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgICAgIGFyZyA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIC8qcyA9PiBzID09IG1bMF0gPz8qLyBQcmVkaWNhdGUuc3RyaW5nKG1bMF0pKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMucHVzaChhcmcpOwogICAgfQogICAgY29uc29sZS5sb2coJ1hQYXRoLmNvbnN0cnVjdG9yJywgdGhpcyk7CiAgfQoKICBbU3ltYm9sLmluc3BlY3RdKGRlcHRoLCBvcHRzID0ge30pIHsKICAgIGxldCBvYmogPSBbLi4udGhpc10ubWFwKEdldEtleSk7CiAgICAvL2NvbnNvbGUubG9nKCdvYmonLCBvYmopOwogICAgcmV0dXJuICgKICAgICAgYFx4MWJbMTszMW0ke3RoaXMuY29uc3RydWN0b3IubmFtZSA/PyB1dGlsLmdldENsYXNzTmFtZSh0aGlzKX1ceDFiWzBtIGAgKwogICAgICBpbnNwZWN0KG9iaiA/PyB7IF9fcHJvdG9fXzogeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1hQYXRoJyB9LCAuLi5vYmogfSwgeyAuLi5vcHRzLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0pCiAgICApOwogIH0KCiAgc3RhdGljIGZyb20gPSBidWlsZFhQYXRoOwp9CgpYUGF0aC5wcm90b3R5cGVbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdYUGF0aCc7CgpleHBvcnQgY29uc3QgSW1tdXRhYmxlWFBhdGggPSBYUGF0aDsKZXhwb3J0IGNvbnN0IE11dGFibGVYUGF0aCA9IFhQYXRoOwoKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlWFBhdGgoc3RyKSB7fQoKZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkWFBhdGgocHRyLCByb290KSB7CiAgbGV0IG5vZGUgPSByb290LAogICAgcGFyZW50LAogICAgcHJldktleSwKICAgIGkgPSAwLAogICAgcGFydHMgPSBbXSwKICAgIHNpYmxpbmdzLAogICAgc2libGluZ1NhbWUsCiAgICBrZXlzLAogICAgdHlwZSwKICAgIHNhbWUsCiAgICBoaWVyID0gW107CiAgZm9yKGxldCBrZXkgb2YgcHRyKSB7CiAgICAvLyBpZih0eXBlb2Yga2V5ID09ICdmdW5jdGlvbicpIGtleSA9IEdldEtleShrZXkpOwogICAgaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSB7CgogIGNvbnNvbGUubG9nKCcgJywgY29uc29sZS5jb25maWcoe2RlcHRoOjJ9KSwge2tleTprZXkrJycscGFyZW50LG5vZGV9KTsKCiAgICAgIGlmKGlzT2JqZWN0KG5vZGUpICYmICdsZW5ndGgnIGluIG5vZGUpIHsKICAgICAgICBsZXQgYSA9IEFycmF5LmZyb20obm9kZSksCiAgICAgICAgICBmbiA9IGtleTsKICAgICAgICBjb25zb2xlLmxvZygnJywgaW5zcGVjdCh7IGEsIG5vZGUgfSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAyIH0pKTsKICAgICAgICBrZXkgPSBhLmZpbmRJbmRleChmbik7CiAgICAgIH0KICAgIH0KCiAgICAvL2NvbnNvbGUubG9nKCdrZXknLCBrZXksIGtleSArICcnKTsKICAgIHR5cGUgPSBrZXkgPT0gJ2NoaWxkcmVuJyA/ICdvYmplY3QnIDogTm9kZVR5cGUobm9kZSk7CgogICAgaWYodHlwZSAhPSAnYXJyYXknKSB7CiAgICAgIHNpYmxpbmdTYW1lID0gW107CiAgICB9IGVsc2UgewogICAgICBzaWJsaW5ncyA9IFsuLi5ub2RlXTsKICAgICAgc2libGluZ1NhbWUgPSBzaWJsaW5ncy5yZWR1Y2UoKGFjYywgbiwgaSkgPT4gewogICAgICAgIGlmKGlzT2JqZWN0KG4pICYgaXNPYmplY3Qobm9kZVtrZXldKSkKICAgICAgICAgIGlmKG4udGFnTmFtZSA9PSBub2RlW2tleV0udGFnTmFtZSkgLyppZiAoaSAhPSBrZXkpKi8gYWNjLnB1c2goW2ksIG4udGFnTmFtZV0pOwogICAgICAgIHJldHVybiBhY2M7CiAgICAgIH0sIFtdKTsKICAgIH0KICAgIGtleXMgPSBpc09iamVjdChub2RlKSA/IE9iamVjdC5rZXlzKG5vZGUpIDogW107CgogICAgLy8gICBjb25zb2xlLmxvZygnJywgaW5zcGVjdCh7IHR5cGUsIGtleXMsIGtleSwgaSwgbm9kZSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgaWYoa2V5ID09ICdjaGlsZHJlbicpIHsKICAgICAgcGFydHMucHVzaChrZXkpOwogICAgfSBlbHNlIHsKICAgICAgc2FtZSA9IHNpYmxpbmdTYW1lLmxlbmd0aCB8fCB1bmRlZmluZWQ7CgogICAgICAvL2NvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgdHlwZSwga2V5LCBpIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CgogICAgICBsZXQgcGFydCA9IEFkZEtleShub2RlW2tleV0sIGtleSwgaSwgc2FtZSk7CgogICAgICBpZih0eXBlb2YgcGFydCA9PSAnc3RyaW5nJyAmJiBbJ3RhZ05hbWUnLCAnY2hpbGRyZW4nLCAnYXR0cmlidXRlcyddLmluZGV4T2YocGFydCkgPT0gLTEpIHsKICAgICAgICBsZXQgcHIgPSBQcmVkaWNhdGUucHJvcGVydHkoJ3RhZ05hbWUnLCBQcmVkaWNhdGUuc3RyaW5nKHBhcnQpKTsKICAgICAgICBwci50YWcgPSBwYXJ0OwogICAgICAgIHBhcnQgPSBwcjsKICAgICAgfQogICAgICBwYXJ0cy5wdXNoKHBhcnQpOwogICAgfQoKICAgIGlmKCFpc09iamVjdChub2RlKSkKICAgICAgdGhyb3cgbmV3IEVycm9yKAogICAgICAgIGBFcnJvciBpbmRleGluZyA8JHt0eXBlb2Ygbm9kZX0+IHdpdGggPCR7a2V5fT4gWyR7aGllci5qb2luKCcsICcpfV06ICR7cGFydHMubWFwKEdldEtleSkuam9pbignIC0+ICcpfWAKICAgICAgKTsKCiAgICBwYXJlbnQgPSBub2RlOwogICAgbm9kZSA9IG5vZGVba2V5XTsKICAgIGhpZXIucHVzaChrZXkpOwogICAgcHJldktleSA9IGtleTsKICAgIGkrKzsKICB9CgogIGZ1bmN0aW9uIEFkZEtleShub2RlLCBrLCBpLCBzYW1lKSB7CiAgICBsZXQgcyA9ICcnOwogICAgLy9jb25zb2xlLmxvZygnQWRkS2V5JywgaW5zcGVjdChub2RlLCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDEgfSkpOwogICAgaWYoaXNPYmplY3Qobm9kZSkgJiYgJ3RhZ05hbWUnIGluIG5vZGUpIHMgPSBub2RlLnRhZ05hbWU7CgogICAgaWYodHlwZW9mIGsgPT0gJ251bWJlcicpIHsKICAgICAgaWYoc2FtZSA+IDEpCiAgICAgICAgLyppZihub2RlPy5hdHRyaWJ1dGVzPy5uYW1lKSBzICs9IGBbQG5hbWU9IiR7bm9kZS5hdHRyaWJ0dWVzLm5hbWV9Il1gOwogICAgICAgICAgZWxzZSovCiAgICAgICAgcyArPSBgWyR7a31dYDsKICAgIH0gZWxzZSBpZih0eXBlb2YgayA9PSAnc3RyaW5nJykgewogICAgfQogICAgaWYocyA9PT0gJycpIHMgPSB7IGNoaWxkcmVuOiAnLycgfVtrXSA/PyBrID8/ICcvJzsKICAgIHJldHVybiBzOwogIH0KCiAgZnVuY3Rpb24gR2V0S2V5KHApIHsKICAgIGxldCBrOwogICAgaWYoKGlzT2JqZWN0KHApIHx8IGlzRnVuY3Rpb24ocCkpICYmIHAgaW5zdGFuY2VvZiBQcmVkaWNhdGUpIHsKICAgICAgaWYocC5pZCA9PSBQcmVkaWNhdGUuUFJPUEVSVFkpIHsKICAgICAgICBjb25zdCBzdHIgPSBwLnZhbHVlcygpWzFdOwogICAgICAgIGsgPSBzdHIudmFsdWVzKClbMF07CiAgICAgIH0KICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnb2JqZWN0JyAmJiBbJ3RhZ05hbWUnLCAnY2hpbGRyZW4nLCAnYXR0cmlidXRlcyddLnNvbWUocHJvcCA9PiBwcm9wIGluIHApKSB7CiAgICAgIGsgPSBwLnRhZ05hbWU7CiAgICB9IGVsc2UgaWYodHlwZW9mIHAgPT0gJ2Z1bmN0aW9uJyAvKiAmJiAhKHAgaW5zdGFuY2VvZiBQcmVkaWNhdGUpKi8pIHsKICAgICAgaWYoL3RhZ05hbWVccyo9PS8udGVzdChwICsgJycpKSBrID0gKHAgKyAnJykucmVwbGFjZSgvLionKC4qKSckLywgJyQxJyk7CiAgICAgIGVsc2UgayA9IHA7CiAgICB9IGVsc2UgaWYodHlwZW9mIHAgPT0gJ251bWJlcicgfHwgdHlwZW9mIHAgPT0gJ3N0cmluZycpIHsKICAgICAgayA9IHA7CiAgICB9IGVsc2UgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHBhcnQgKCR7dXRpbC5nZXRUeXBlU3RyKHApfSAke3R5cGVvZiBwfSk6ICR7aW5zcGVjdChwLCB7IGNvbG9yczogdHJ1ZSB9KX1gKTsKICAgIHJldHVybiBrOwogIH0KICBmdW5jdGlvbiBOb2RlVHlwZShub2RlKSB7CiAgICByZXR1cm4gaXNPYmplY3Qobm9kZSkKICAgICAgPyAnbGVuZ3RoJyBpbiBub2RlICYmIHR5cGVvZiBub2RlLmxlbmd0aCA9PSAnbnVtYmVyJwogICAgICAgID8gJ2FycmF5JwogICAgICAgIDogdXRpbC5nZXRDbGFzc05hbWUobm9kZSkudG9Mb3dlckNhc2UoKQogICAgICA6IHR5cGVvZiBub2RlOwogIH0KICBjb25zb2xlLmxvZygnYnVpbGRYUGF0aCcsIHBhcnRzIC8qLm1hcChwID0+IEdldEtleShwKSA/PyAocC50b1N0cmluZyA/PyBwLnRvU291cmNlKS5jYWxsKHApKSovKTsKICByZXR1cm4gbmV3IFhQYXRoKHBhcnRzKTsKfQoKZXh0ZW5kQXJyYXkoWFBhdGgucHJvdG90eXBlKTsKCmV4cG9ydCBkZWZhdWx0IFhQYXRoOwoAAAAAAAAAAFkTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgcAAAAAAABWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5535,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPoHAAAAAAAA+wcAAAAAAAAAAAAA+wcAAAAAAAD7BwAAAAAAAAMAAAAgLy8",
					"AQAAAAAAAAABAAAA/QcAAAAAAAD6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					5538,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMAGAAAAAAAAwQYAAAAAAAAAAAAAwQYAAAAAAADCBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAYAAAAAAADABgAAAAAAAAAAAAAAAPC/"
				],
				[
					5548,
					1,
					"cut",
					null,
					"AQAAAPkHAAAAAAAA+QcAAAAAAAAnAAAAICAgIGNvbnNvbGUubG9nKCdrZXknLCBrZXksIGtleSArICcnKTsK",
					"AQAAAAAAAAABAAAA+QcAAAAAAAAgCAAAAAAAAAAAAAAAAAAA"
				],
				[
					5550,
					1,
					"paste",
					null,
					"AQAAAOoHAAAAAAAAEQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gcAAAAAAADqBwAAAAAAAAAAAAAAAAAA"
				],
				[
					5553,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZEwAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBpZih0eXBlb2YgYXJnID09ICdzdHJpbmcnKSB7CiAgICAgICAgaWYoYXJnICE9ICdjaGlsZHJlbicgJiYgYXJnICE9ICdhdHRyaWJ1dGVzJykgewogICAgICAgICAgbGV0IG0gPSAvXltBLVphLXpdWy1cd10qLy5leGVjKGFyZyk7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdtJywgbSk7CiAgICAgICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgICAgIGFyZyA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIC8qcyA9PiBzID09IG1bMF0gPz8qLyBQcmVkaWNhdGUuc3RyaW5nKG1bMF0pKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMucHVzaChhcmcpOwogICAgfQogICAgY29uc29sZS5sb2coJ1hQYXRoLmNvbnN0cnVjdG9yJywgdGhpcyk7CiAgfQoKICBbU3ltYm9sLmluc3BlY3RdKGRlcHRoLCBvcHRzID0ge30pIHsKICAgIGxldCBvYmogPSBbLi4udGhpc10ubWFwKEdldEtleSk7CiAgICAvL2NvbnNvbGUubG9nKCdvYmonLCBvYmopOwogICAgcmV0dXJuICgKICAgICAgYFx4MWJbMTszMW0ke3RoaXMuY29uc3RydWN0b3IubmFtZSA/PyB1dGlsLmdldENsYXNzTmFtZSh0aGlzKX1ceDFiWzBtIGAgKwogICAgICBpbnNwZWN0KG9iaiA/PyB7IF9fcHJvdG9fXzogeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1hQYXRoJyB9LCAuLi5vYmogfSwgeyAuLi5vcHRzLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0pCiAgICApOwogIH0KCiAgc3RhdGljIGZyb20gPSBidWlsZFhQYXRoOwp9CgpYUGF0aC5wcm90b3R5cGVbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdYUGF0aCc7CgpleHBvcnQgY29uc3QgSW1tdXRhYmxlWFBhdGggPSBYUGF0aDsKZXhwb3J0IGNvbnN0IE11dGFibGVYUGF0aCA9IFhQYXRoOwoKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlWFBhdGgoc3RyKSB7fQoKZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkWFBhdGgocHRyLCByb290KSB7CiAgbGV0IG5vZGUgPSByb290LAogICAgcGFyZW50LAogICAgcHJldktleSwKICAgIGkgPSAwLAogICAgcGFydHMgPSBbXSwKICAgIHNpYmxpbmdzLAogICAgc2libGluZ1NhbWUsCiAgICBrZXlzLAogICAgdHlwZSwKICAgIHNhbWUsCiAgICBoaWVyID0gW107CiAgZm9yKGxldCBrZXkgb2YgcHRyKSB7CiAgICAvLyBpZih0eXBlb2Yga2V5ID09ICdmdW5jdGlvbicpIGtleSA9IEdldEtleShrZXkpOwogICAgaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSB7CiAgICAgLy8gY29uc29sZS5sb2coJyAnLCBjb25zb2xlLmNvbmZpZyh7IGRlcHRoOiAyIH0pLCB7IGtleToga2V5ICsgJycsIHBhcmVudCwgbm9kZSB9KTsKCiAgICAgIGlmKGlzT2JqZWN0KG5vZGUpICYmICdsZW5ndGgnIGluIG5vZGUpIHsKICAgICAgICBsZXQgYSA9IEFycmF5LmZyb20obm9kZSksCiAgICAgICAgICBmbiA9IGtleTsKICAgICAgICBjb25zb2xlLmxvZygnJywgaW5zcGVjdCh7IGEsIG5vZGUgfSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAyIH0pKTsKICAgICAgICBrZXkgPSBhLmZpbmRJbmRleChmbik7CiAgICBjb25zb2xlLmxvZygna2V5Jywga2V5LCBrZXkgKyAnJyk7CiAgICAgIH0KICAgIH0KCiAgICB0eXBlID0ga2V5ID09ICdjaGlsZHJlbicgPyAnb2JqZWN0JyA6IE5vZGVUeXBlKG5vZGUpOwoKICAgIGlmKHR5cGUgIT0gJ2FycmF5JykgewogICAgICBzaWJsaW5nU2FtZSA9IFtdOwogICAgfSBlbHNlIHsKICAgICAgc2libGluZ3MgPSBbLi4ubm9kZV07CiAgICAgIHNpYmxpbmdTYW1lID0gc2libGluZ3MucmVkdWNlKChhY2MsIG4sIGkpID0+IHsKICAgICAgICBpZihpc09iamVjdChuKSAmIGlzT2JqZWN0KG5vZGVba2V5XSkpCiAgICAgICAgICBpZihuLnRhZ05hbWUgPT0gbm9kZVtrZXldLnRhZ05hbWUpIC8qaWYgKGkgIT0ga2V5KSovIGFjYy5wdXNoKFtpLCBuLnRhZ05hbWVdKTsKICAgICAgICByZXR1cm4gYWNjOwogICAgICB9LCBbXSk7CiAgICB9CiAgICBrZXlzID0gaXNPYmplY3Qobm9kZSkgPyBPYmplY3Qua2V5cyhub2RlKSA6IFtdOwoKICAgIC8vICAgY29uc29sZS5sb2coJycsIGluc3BlY3QoeyB0eXBlLCBrZXlzLCBrZXksIGksIG5vZGUgfSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAyIH0pKTsKICAgIGlmKGtleSA9PSAnY2hpbGRyZW4nKSB7CiAgICAgIHBhcnRzLnB1c2goa2V5KTsKICAgIH0gZWxzZSB7CiAgICAgIHNhbWUgPSBzaWJsaW5nU2FtZS5sZW5ndGggfHwgdW5kZWZpbmVkOwoKICAgICAgLy9jb25zb2xlLmxvZygnJywgaW5zcGVjdCh7IHR5cGUsIGtleSwgaSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwoKICAgICAgbGV0IHBhcnQgPSBBZGRLZXkobm9kZVtrZXldLCBrZXksIGksIHNhbWUpOwoKICAgICAgaWYodHlwZW9mIHBhcnQgPT0gJ3N0cmluZycgJiYgWyd0YWdOYW1lJywgJ2NoaWxkcmVuJywgJ2F0dHJpYnV0ZXMnXS5pbmRleE9mKHBhcnQpID09IC0xKSB7CiAgICAgICAgbGV0IHByID0gUHJlZGljYXRlLnByb3BlcnR5KCd0YWdOYW1lJywgUHJlZGljYXRlLnN0cmluZyhwYXJ0KSk7CiAgICAgICAgcHIudGFnID0gcGFydDsKICAgICAgICBwYXJ0ID0gcHI7CiAgICAgIH0KICAgICAgcGFydHMucHVzaChwYXJ0KTsKICAgIH0KCiAgICBpZighaXNPYmplY3Qobm9kZSkpCiAgICAgIHRocm93IG5ldyBFcnJvcigKICAgICAgICBgRXJyb3IgaW5kZXhpbmcgPCR7dHlwZW9mIG5vZGV9PiB3aXRoIDwke2tleX0+IFske2hpZXIuam9pbignLCAnKX1dOiAke3BhcnRzLm1hcChHZXRLZXkpLmpvaW4oJyAtPiAnKX1gCiAgICAgICk7CgogICAgcGFyZW50ID0gbm9kZTsKICAgIG5vZGUgPSBub2RlW2tleV07CiAgICBoaWVyLnB1c2goa2V5KTsKICAgIHByZXZLZXkgPSBrZXk7CiAgICBpKys7CiAgfQoKICBmdW5jdGlvbiBBZGRLZXkobm9kZSwgaywgaSwgc2FtZSkgewogICAgbGV0IHMgPSAnJzsKICAgIC8vY29uc29sZS5sb2coJ0FkZEtleScsIGluc3BlY3Qobm9kZSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAxIH0pKTsKICAgIGlmKGlzT2JqZWN0KG5vZGUpICYmICd0YWdOYW1lJyBpbiBub2RlKSBzID0gbm9kZS50YWdOYW1lOwoKICAgIGlmKHR5cGVvZiBrID09ICdudW1iZXInKSB7CiAgICAgIGlmKHNhbWUgPiAxKQogICAgICAgIC8qaWYobm9kZT8uYXR0cmlidXRlcz8ubmFtZSkgcyArPSBgW0BuYW1lPSIke25vZGUuYXR0cmlidHVlcy5uYW1lfSJdYDsKICAgICAgICAgIGVsc2UqLwogICAgICAgIHMgKz0gYFske2t9XWA7CiAgICB9IGVsc2UgaWYodHlwZW9mIGsgPT0gJ3N0cmluZycpIHsKICAgIH0KICAgIGlmKHMgPT09ICcnKSBzID0geyBjaGlsZHJlbjogJy8nIH1ba10gPz8gayA/PyAnLyc7CiAgICByZXR1cm4gczsKICB9CgogIGZ1bmN0aW9uIEdldEtleShwKSB7CiAgICBsZXQgazsKICAgIGlmKChpc09iamVjdChwKSB8fCBpc0Z1bmN0aW9uKHApKSAmJiBwIGluc3RhbmNlb2YgUHJlZGljYXRlKSB7CiAgICAgIGlmKHAuaWQgPT0gUHJlZGljYXRlLlBST1BFUlRZKSB7CiAgICAgICAgY29uc3Qgc3RyID0gcC52YWx1ZXMoKVsxXTsKICAgICAgICBrID0gc3RyLnZhbHVlcygpWzBdOwogICAgICB9CiAgICB9IGVsc2UgaWYodHlwZW9mIHAgPT0gJ29iamVjdCcgJiYgWyd0YWdOYW1lJywgJ2NoaWxkcmVuJywgJ2F0dHJpYnV0ZXMnXS5zb21lKHByb3AgPT4gcHJvcCBpbiBwKSkgewogICAgICBrID0gcC50YWdOYW1lOwogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdmdW5jdGlvbicgLyogJiYgIShwIGluc3RhbmNlb2YgUHJlZGljYXRlKSovKSB7CiAgICAgIGlmKC90YWdOYW1lXHMqPT0vLnRlc3QocCArICcnKSkgayA9IChwICsgJycpLnJlcGxhY2UoLy4qJyguKiknJC8sICckMScpOwogICAgICBlbHNlIGsgPSBwOwogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdudW1iZXInIHx8IHR5cGVvZiBwID09ICdzdHJpbmcnKSB7CiAgICAgIGsgPSBwOwogICAgfSBlbHNlIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBwYXJ0ICgke3V0aWwuZ2V0VHlwZVN0cihwKX0gJHt0eXBlb2YgcH0pOiAke2luc3BlY3QocCwgeyBjb2xvcnM6IHRydWUgfSl9YCk7CiAgICByZXR1cm4gazsKICB9CiAgZnVuY3Rpb24gTm9kZVR5cGUobm9kZSkgewogICAgcmV0dXJuIGlzT2JqZWN0KG5vZGUpCiAgICAgID8gJ2xlbmd0aCcgaW4gbm9kZSAmJiB0eXBlb2Ygbm9kZS5sZW5ndGggPT0gJ251bWJlcicKICAgICAgICA/ICdhcnJheScKICAgICAgICA6IHV0aWwuZ2V0Q2xhc3NOYW1lKG5vZGUpLnRvTG93ZXJDYXNlKCkKICAgICAgOiB0eXBlb2Ygbm9kZTsKICB9CiAgY29uc29sZS5sb2coJ2J1aWxkWFBhdGgnLCBwYXJ0cyAvKi5tYXAocCA9PiBHZXRLZXkocCkgPz8gKHAudG9TdHJpbmcgPz8gcC50b1NvdXJjZSkuY2FsbChwKSkqLyk7CiAgcmV0dXJuIG5ldyBYUGF0aChwYXJ0cyk7Cn0KCmV4dGVuZEFycmF5KFhQYXRoLnByb3RvdHlwZSk7CgpleHBvcnQgZGVmYXVsdCBYUGF0aDsKAAAAAAAAAABeEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQgAAAAAAAARCAAAAAAAAAAAAAAAAPC/"
				],
				[
					5567,
					1,
					"left_delete",
					null,
					"AQAAAKQHAAAAAAAApAcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAApQcAAAAAAAClBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5568,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKQHAAAAAAAApQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAcAAAAAAACkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5569,
					1,
					"insert",
					{
						"characters": " fn:"
					},
					"BAAAAKUHAAAAAAAApgcAAAAAAAAAAAAApgcAAAAAAACnBwAAAAAAAAAAAACnBwAAAAAAAKgHAAAAAAAAAAAAAKgHAAAAAAAAqQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQcAAAAAAAClBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5570,
					1,
					"insert",
					{
						"characters": " k"
					},
					"AgAAAKkHAAAAAAAAqgcAAAAAAAAAAAAAqgcAAAAAAACrBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQcAAAAAAACpBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5571,
					1,
					"left_delete",
					null,
					"AQAAAKoHAAAAAAAAqgcAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAqwcAAAAAAACrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5572,
					1,
					"insert",
					{
						"characters": "fn+"
					},
					"AwAAAKoHAAAAAAAAqwcAAAAAAAAAAAAAqwcAAAAAAACsBwAAAAAAAAAAAACsBwAAAAAAAK0HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgcAAAAAAACqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5573,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAK0HAAAAAAAArwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQcAAAAAAACtBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5578,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABoEwAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBpZih0eXBlb2YgYXJnID09ICdzdHJpbmcnKSB7CiAgICAgICAgaWYoYXJnICE9ICdjaGlsZHJlbicgJiYgYXJnICE9ICdhdHRyaWJ1dGVzJykgewogICAgICAgICAgbGV0IG0gPSAvXltBLVphLXpdWy1cd10qLy5leGVjKGFyZyk7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdtJywgbSk7CiAgICAgICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgICAgIGFyZyA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIC8qcyA9PiBzID09IG1bMF0gPz8qLyBQcmVkaWNhdGUuc3RyaW5nKG1bMF0pKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMucHVzaChhcmcpOwogICAgfQogICAgY29uc29sZS5sb2coJ1hQYXRoLmNvbnN0cnVjdG9yJywgdGhpcyk7CiAgfQoKICBbU3ltYm9sLmluc3BlY3RdKGRlcHRoLCBvcHRzID0ge30pIHsKICAgIGxldCBvYmogPSBbLi4udGhpc10ubWFwKEdldEtleSk7CiAgICAvL2NvbnNvbGUubG9nKCdvYmonLCBvYmopOwogICAgcmV0dXJuICgKICAgICAgYFx4MWJbMTszMW0ke3RoaXMuY29uc3RydWN0b3IubmFtZSA/PyB1dGlsLmdldENsYXNzTmFtZSh0aGlzKX1ceDFiWzBtIGAgKwogICAgICBpbnNwZWN0KG9iaiA/PyB7IF9fcHJvdG9fXzogeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1hQYXRoJyB9LCAuLi5vYmogfSwgeyAuLi5vcHRzLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0pCiAgICApOwogIH0KCiAgc3RhdGljIGZyb20gPSBidWlsZFhQYXRoOwp9CgpYUGF0aC5wcm90b3R5cGVbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdYUGF0aCc7CgpleHBvcnQgY29uc3QgSW1tdXRhYmxlWFBhdGggPSBYUGF0aDsKZXhwb3J0IGNvbnN0IE11dGFibGVYUGF0aCA9IFhQYXRoOwoKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlWFBhdGgoc3RyKSB7fQoKZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkWFBhdGgocHRyLCByb290KSB7CiAgbGV0IG5vZGUgPSByb290LAogICAgcGFyZW50LAogICAgcHJldktleSwKICAgIGkgPSAwLAogICAgcGFydHMgPSBbXSwKICAgIHNpYmxpbmdzLAogICAgc2libGluZ1NhbWUsCiAgICBrZXlzLAogICAgdHlwZSwKICAgIHNhbWUsCiAgICBoaWVyID0gW107CiAgZm9yKGxldCBrZXkgb2YgcHRyKSB7CiAgICAvLyBpZih0eXBlb2Yga2V5ID09ICdmdW5jdGlvbicpIGtleSA9IEdldEtleShrZXkpOwogICAgaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKCcgJywgY29uc29sZS5jb25maWcoeyBkZXB0aDogMiB9KSwgeyBrZXk6IGtleSArICcnLCBwYXJlbnQsIG5vZGUgfSk7CgogICAgICBpZihpc09iamVjdChub2RlKSAmJiAnbGVuZ3RoJyBpbiBub2RlKSB7CiAgICAgICAgbGV0IGEgPSBBcnJheS5mcm9tKG5vZGUpLAogICAgICAgICAgZm4gPSBrZXk7CiAgICAgICAgY29uc29sZS5sb2coJycsIGluc3BlY3QoeyBhLCBub2RlLCBmbjogZm4rJyd9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgICAgIGtleSA9IGEuZmluZEluZGV4KGZuKTsKICAgICAgICBjb25zb2xlLmxvZygna2V5Jywga2V5LCBrZXkgKyAnJyk7CiAgICAgIH0KICAgIH0KCiAgICB0eXBlID0ga2V5ID09ICdjaGlsZHJlbicgPyAnb2JqZWN0JyA6IE5vZGVUeXBlKG5vZGUpOwoKICAgIGlmKHR5cGUgIT0gJ2FycmF5JykgewogICAgICBzaWJsaW5nU2FtZSA9IFtdOwogICAgfSBlbHNlIHsKICAgICAgc2libGluZ3MgPSBbLi4ubm9kZV07CiAgICAgIHNpYmxpbmdTYW1lID0gc2libGluZ3MucmVkdWNlKChhY2MsIG4sIGkpID0+IHsKICAgICAgICBpZihpc09iamVjdChuKSAmIGlzT2JqZWN0KG5vZGVba2V5XSkpCiAgICAgICAgICBpZihuLnRhZ05hbWUgPT0gbm9kZVtrZXldLnRhZ05hbWUpIC8qaWYgKGkgIT0ga2V5KSovIGFjYy5wdXNoKFtpLCBuLnRhZ05hbWVdKTsKICAgICAgICByZXR1cm4gYWNjOwogICAgICB9LCBbXSk7CiAgICB9CiAgICBrZXlzID0gaXNPYmplY3Qobm9kZSkgPyBPYmplY3Qua2V5cyhub2RlKSA6IFtdOwoKICAgIC8vICAgY29uc29sZS5sb2coJycsIGluc3BlY3QoeyB0eXBlLCBrZXlzLCBrZXksIGksIG5vZGUgfSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAyIH0pKTsKICAgIGlmKGtleSA9PSAnY2hpbGRyZW4nKSB7CiAgICAgIHBhcnRzLnB1c2goa2V5KTsKICAgIH0gZWxzZSB7CiAgICAgIHNhbWUgPSBzaWJsaW5nU2FtZS5sZW5ndGggfHwgdW5kZWZpbmVkOwoKICAgICAgLy9jb25zb2xlLmxvZygnJywgaW5zcGVjdCh7IHR5cGUsIGtleSwgaSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwoKICAgICAgbGV0IHBhcnQgPSBBZGRLZXkobm9kZVtrZXldLCBrZXksIGksIHNhbWUpOwoKICAgICAgaWYodHlwZW9mIHBhcnQgPT0gJ3N0cmluZycgJiYgWyd0YWdOYW1lJywgJ2NoaWxkcmVuJywgJ2F0dHJpYnV0ZXMnXS5pbmRleE9mKHBhcnQpID09IC0xKSB7CiAgICAgICAgbGV0IHByID0gUHJlZGljYXRlLnByb3BlcnR5KCd0YWdOYW1lJywgUHJlZGljYXRlLnN0cmluZyhwYXJ0KSk7CiAgICAgICAgcHIudGFnID0gcGFydDsKICAgICAgICBwYXJ0ID0gcHI7CiAgICAgIH0KICAgICAgcGFydHMucHVzaChwYXJ0KTsKICAgIH0KCiAgICBpZighaXNPYmplY3Qobm9kZSkpCiAgICAgIHRocm93IG5ldyBFcnJvcigKICAgICAgICBgRXJyb3IgaW5kZXhpbmcgPCR7dHlwZW9mIG5vZGV9PiB3aXRoIDwke2tleX0+IFske2hpZXIuam9pbignLCAnKX1dOiAke3BhcnRzLm1hcChHZXRLZXkpLmpvaW4oJyAtPiAnKX1gCiAgICAgICk7CgogICAgcGFyZW50ID0gbm9kZTsKICAgIG5vZGUgPSBub2RlW2tleV07CiAgICBoaWVyLnB1c2goa2V5KTsKICAgIHByZXZLZXkgPSBrZXk7CiAgICBpKys7CiAgfQoKICBmdW5jdGlvbiBBZGRLZXkobm9kZSwgaywgaSwgc2FtZSkgewogICAgbGV0IHMgPSAnJzsKICAgIC8vY29uc29sZS5sb2coJ0FkZEtleScsIGluc3BlY3Qobm9kZSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAxIH0pKTsKICAgIGlmKGlzT2JqZWN0KG5vZGUpICYmICd0YWdOYW1lJyBpbiBub2RlKSBzID0gbm9kZS50YWdOYW1lOwoKICAgIGlmKHR5cGVvZiBrID09ICdudW1iZXInKSB7CiAgICAgIGlmKHNhbWUgPiAxKQogICAgICAgIC8qaWYobm9kZT8uYXR0cmlidXRlcz8ubmFtZSkgcyArPSBgW0BuYW1lPSIke25vZGUuYXR0cmlidHVlcy5uYW1lfSJdYDsKICAgICAgICAgIGVsc2UqLwogICAgICAgIHMgKz0gYFske2t9XWA7CiAgICB9IGVsc2UgaWYodHlwZW9mIGsgPT0gJ3N0cmluZycpIHsKICAgIH0KICAgIGlmKHMgPT09ICcnKSBzID0geyBjaGlsZHJlbjogJy8nIH1ba10gPz8gayA/PyAnLyc7CiAgICByZXR1cm4gczsKICB9CgogIGZ1bmN0aW9uIEdldEtleShwKSB7CiAgICBsZXQgazsKICAgIGlmKChpc09iamVjdChwKSB8fCBpc0Z1bmN0aW9uKHApKSAmJiBwIGluc3RhbmNlb2YgUHJlZGljYXRlKSB7CiAgICAgIGlmKHAuaWQgPT0gUHJlZGljYXRlLlBST1BFUlRZKSB7CiAgICAgICAgY29uc3Qgc3RyID0gcC52YWx1ZXMoKVsxXTsKICAgICAgICBrID0gc3RyLnZhbHVlcygpWzBdOwogICAgICB9CiAgICB9IGVsc2UgaWYodHlwZW9mIHAgPT0gJ29iamVjdCcgJiYgWyd0YWdOYW1lJywgJ2NoaWxkcmVuJywgJ2F0dHJpYnV0ZXMnXS5zb21lKHByb3AgPT4gcHJvcCBpbiBwKSkgewogICAgICBrID0gcC50YWdOYW1lOwogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdmdW5jdGlvbicgLyogJiYgIShwIGluc3RhbmNlb2YgUHJlZGljYXRlKSovKSB7CiAgICAgIGlmKC90YWdOYW1lXHMqPT0vLnRlc3QocCArICcnKSkgayA9IChwICsgJycpLnJlcGxhY2UoLy4qJyguKiknJC8sICckMScpOwogICAgICBlbHNlIGsgPSBwOwogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdudW1iZXInIHx8IHR5cGVvZiBwID09ICdzdHJpbmcnKSB7CiAgICAgIGsgPSBwOwogICAgfSBlbHNlIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBwYXJ0ICgke3V0aWwuZ2V0VHlwZVN0cihwKX0gJHt0eXBlb2YgcH0pOiAke2luc3BlY3QocCwgeyBjb2xvcnM6IHRydWUgfSl9YCk7CiAgICByZXR1cm4gazsKICB9CiAgZnVuY3Rpb24gTm9kZVR5cGUobm9kZSkgewogICAgcmV0dXJuIGlzT2JqZWN0KG5vZGUpCiAgICAgID8gJ2xlbmd0aCcgaW4gbm9kZSAmJiB0eXBlb2Ygbm9kZS5sZW5ndGggPT0gJ251bWJlcicKICAgICAgICA/ICdhcnJheScKICAgICAgICA6IHV0aWwuZ2V0Q2xhc3NOYW1lKG5vZGUpLnRvTG93ZXJDYXNlKCkKICAgICAgOiB0eXBlb2Ygbm9kZTsKICB9CiAgY29uc29sZS5sb2coJ2J1aWxkWFBhdGgnLCBwYXJ0cyAvKi5tYXAocCA9PiBHZXRLZXkocCkgPz8gKHAudG9TdHJpbmcgPz8gcC50b1NvdXJjZSkuY2FsbChwKSkqLyk7CiAgcmV0dXJuIG5ldyBYUGF0aChwYXJ0cyk7Cn0KCmV4dGVuZEFycmF5KFhQYXRoLnByb3RvdHlwZSk7CgpleHBvcnQgZGVmYXVsdCBYUGF0aDsKAAAAAAAAAABrEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAABoEwAAAAAAAAAAAAAAAPC/"
				],
				[
					5585,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJ0HAAAAAAAAngcAAAAAAAAAAAAAngcAAAAAAACeBwAAAAAAAAgAAABhLCBub2RlLA",
					"AQAAAAAAAAABAAAAnQcAAAAAAAClBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5588,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABkEwAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBpZih0eXBlb2YgYXJnID09ICdzdHJpbmcnKSB7CiAgICAgICAgaWYoYXJnICE9ICdjaGlsZHJlbicgJiYgYXJnICE9ICdhdHRyaWJ1dGVzJykgewogICAgICAgICAgbGV0IG0gPSAvXltBLVphLXpdWy1cd10qLy5leGVjKGFyZyk7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdtJywgbSk7CiAgICAgICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgICAgIGFyZyA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIC8qcyA9PiBzID09IG1bMF0gPz8qLyBQcmVkaWNhdGUuc3RyaW5nKG1bMF0pKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMucHVzaChhcmcpOwogICAgfQogICAgY29uc29sZS5sb2coJ1hQYXRoLmNvbnN0cnVjdG9yJywgdGhpcyk7CiAgfQoKICBbU3ltYm9sLmluc3BlY3RdKGRlcHRoLCBvcHRzID0ge30pIHsKICAgIGxldCBvYmogPSBbLi4udGhpc10ubWFwKEdldEtleSk7CiAgICAvL2NvbnNvbGUubG9nKCdvYmonLCBvYmopOwogICAgcmV0dXJuICgKICAgICAgYFx4MWJbMTszMW0ke3RoaXMuY29uc3RydWN0b3IubmFtZSA/PyB1dGlsLmdldENsYXNzTmFtZSh0aGlzKX1ceDFiWzBtIGAgKwogICAgICBpbnNwZWN0KG9iaiA/PyB7IF9fcHJvdG9fXzogeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1hQYXRoJyB9LCAuLi5vYmogfSwgeyAuLi5vcHRzLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0pCiAgICApOwogIH0KCiAgc3RhdGljIGZyb20gPSBidWlsZFhQYXRoOwp9CgpYUGF0aC5wcm90b3R5cGVbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdYUGF0aCc7CgpleHBvcnQgY29uc3QgSW1tdXRhYmxlWFBhdGggPSBYUGF0aDsKZXhwb3J0IGNvbnN0IE11dGFibGVYUGF0aCA9IFhQYXRoOwoKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlWFBhdGgoc3RyKSB7fQoKZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkWFBhdGgocHRyLCByb290KSB7CiAgbGV0IG5vZGUgPSByb290LAogICAgcGFyZW50LAogICAgcHJldktleSwKICAgIGkgPSAwLAogICAgcGFydHMgPSBbXSwKICAgIHNpYmxpbmdzLAogICAgc2libGluZ1NhbWUsCiAgICBrZXlzLAogICAgdHlwZSwKICAgIHNhbWUsCiAgICBoaWVyID0gW107CiAgZm9yKGxldCBrZXkgb2YgcHRyKSB7CiAgICAvLyBpZih0eXBlb2Yga2V5ID09ICdmdW5jdGlvbicpIGtleSA9IEdldEtleShrZXkpOwogICAgaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKCcgJywgY29uc29sZS5jb25maWcoeyBkZXB0aDogMiB9KSwgeyBrZXk6IGtleSArICcnLCBwYXJlbnQsIG5vZGUgfSk7CgogICAgICBpZihpc09iamVjdChub2RlKSAmJiAnbGVuZ3RoJyBpbiBub2RlKSB7CiAgICAgICAgbGV0IGEgPSBBcnJheS5mcm9tKG5vZGUpLAogICAgICAgICAgZm4gPSBrZXk7CiAgICAgICAgY29uc29sZS5sb2coJycsIGluc3BlY3QoeyAgIGZuOiBmbiArICcnIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CiAgICAgICAga2V5ID0gYS5maW5kSW5kZXgoZm4pOwogICAgICAgIGNvbnNvbGUubG9nKCdrZXknLCBrZXksIGtleSArICcnKTsKICAgICAgfQogICAgfQoKICAgIHR5cGUgPSBrZXkgPT0gJ2NoaWxkcmVuJyA/ICdvYmplY3QnIDogTm9kZVR5cGUobm9kZSk7CgogICAgaWYodHlwZSAhPSAnYXJyYXknKSB7CiAgICAgIHNpYmxpbmdTYW1lID0gW107CiAgICB9IGVsc2UgewogICAgICBzaWJsaW5ncyA9IFsuLi5ub2RlXTsKICAgICAgc2libGluZ1NhbWUgPSBzaWJsaW5ncy5yZWR1Y2UoKGFjYywgbiwgaSkgPT4gewogICAgICAgIGlmKGlzT2JqZWN0KG4pICYgaXNPYmplY3Qobm9kZVtrZXldKSkKICAgICAgICAgIGlmKG4udGFnTmFtZSA9PSBub2RlW2tleV0udGFnTmFtZSkgLyppZiAoaSAhPSBrZXkpKi8gYWNjLnB1c2goW2ksIG4udGFnTmFtZV0pOwogICAgICAgIHJldHVybiBhY2M7CiAgICAgIH0sIFtdKTsKICAgIH0KICAgIGtleXMgPSBpc09iamVjdChub2RlKSA/IE9iamVjdC5rZXlzKG5vZGUpIDogW107CgogICAgLy8gICBjb25zb2xlLmxvZygnJywgaW5zcGVjdCh7IHR5cGUsIGtleXMsIGtleSwgaSwgbm9kZSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgaWYoa2V5ID09ICdjaGlsZHJlbicpIHsKICAgICAgcGFydHMucHVzaChrZXkpOwogICAgfSBlbHNlIHsKICAgICAgc2FtZSA9IHNpYmxpbmdTYW1lLmxlbmd0aCB8fCB1bmRlZmluZWQ7CgogICAgICAvL2NvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgdHlwZSwga2V5LCBpIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CgogICAgICBsZXQgcGFydCA9IEFkZEtleShub2RlW2tleV0sIGtleSwgaSwgc2FtZSk7CgogICAgICBpZih0eXBlb2YgcGFydCA9PSAnc3RyaW5nJyAmJiBbJ3RhZ05hbWUnLCAnY2hpbGRyZW4nLCAnYXR0cmlidXRlcyddLmluZGV4T2YocGFydCkgPT0gLTEpIHsKICAgICAgICBsZXQgcHIgPSBQcmVkaWNhdGUucHJvcGVydHkoJ3RhZ05hbWUnLCBQcmVkaWNhdGUuc3RyaW5nKHBhcnQpKTsKICAgICAgICBwci50YWcgPSBwYXJ0OwogICAgICAgIHBhcnQgPSBwcjsKICAgICAgfQogICAgICBwYXJ0cy5wdXNoKHBhcnQpOwogICAgfQoKICAgIGlmKCFpc09iamVjdChub2RlKSkKICAgICAgdGhyb3cgbmV3IEVycm9yKAogICAgICAgIGBFcnJvciBpbmRleGluZyA8JHt0eXBlb2Ygbm9kZX0+IHdpdGggPCR7a2V5fT4gWyR7aGllci5qb2luKCcsICcpfV06ICR7cGFydHMubWFwKEdldEtleSkuam9pbignIC0+ICcpfWAKICAgICAgKTsKCiAgICBwYXJlbnQgPSBub2RlOwogICAgbm9kZSA9IG5vZGVba2V5XTsKICAgIGhpZXIucHVzaChrZXkpOwogICAgcHJldktleSA9IGtleTsKICAgIGkrKzsKICB9CgogIGZ1bmN0aW9uIEFkZEtleShub2RlLCBrLCBpLCBzYW1lKSB7CiAgICBsZXQgcyA9ICcnOwogICAgLy9jb25zb2xlLmxvZygnQWRkS2V5JywgaW5zcGVjdChub2RlLCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDEgfSkpOwogICAgaWYoaXNPYmplY3Qobm9kZSkgJiYgJ3RhZ05hbWUnIGluIG5vZGUpIHMgPSBub2RlLnRhZ05hbWU7CgogICAgaWYodHlwZW9mIGsgPT0gJ251bWJlcicpIHsKICAgICAgaWYoc2FtZSA+IDEpCiAgICAgICAgLyppZihub2RlPy5hdHRyaWJ1dGVzPy5uYW1lKSBzICs9IGBbQG5hbWU9IiR7bm9kZS5hdHRyaWJ0dWVzLm5hbWV9Il1gOwogICAgICAgICAgZWxzZSovCiAgICAgICAgcyArPSBgWyR7a31dYDsKICAgIH0gZWxzZSBpZih0eXBlb2YgayA9PSAnc3RyaW5nJykgewogICAgfQogICAgaWYocyA9PT0gJycpIHMgPSB7IGNoaWxkcmVuOiAnLycgfVtrXSA/PyBrID8/ICcvJzsKICAgIHJldHVybiBzOwogIH0KCiAgZnVuY3Rpb24gR2V0S2V5KHApIHsKICAgIGxldCBrOwogICAgaWYoKGlzT2JqZWN0KHApIHx8IGlzRnVuY3Rpb24ocCkpICYmIHAgaW5zdGFuY2VvZiBQcmVkaWNhdGUpIHsKICAgICAgaWYocC5pZCA9PSBQcmVkaWNhdGUuUFJPUEVSVFkpIHsKICAgICAgICBjb25zdCBzdHIgPSBwLnZhbHVlcygpWzFdOwogICAgICAgIGsgPSBzdHIudmFsdWVzKClbMF07CiAgICAgIH0KICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnb2JqZWN0JyAmJiBbJ3RhZ05hbWUnLCAnY2hpbGRyZW4nLCAnYXR0cmlidXRlcyddLnNvbWUocHJvcCA9PiBwcm9wIGluIHApKSB7CiAgICAgIGsgPSBwLnRhZ05hbWU7CiAgICB9IGVsc2UgaWYodHlwZW9mIHAgPT0gJ2Z1bmN0aW9uJyAvKiAmJiAhKHAgaW5zdGFuY2VvZiBQcmVkaWNhdGUpKi8pIHsKICAgICAgaWYoL3RhZ05hbWVccyo9PS8udGVzdChwICsgJycpKSBrID0gKHAgKyAnJykucmVwbGFjZSgvLionKC4qKSckLywgJyQxJyk7CiAgICAgIGVsc2UgayA9IHA7CiAgICB9IGVsc2UgaWYodHlwZW9mIHAgPT0gJ251bWJlcicgfHwgdHlwZW9mIHAgPT0gJ3N0cmluZycpIHsKICAgICAgayA9IHA7CiAgICB9IGVsc2UgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHBhcnQgKCR7dXRpbC5nZXRUeXBlU3RyKHApfSAke3R5cGVvZiBwfSk6ICR7aW5zcGVjdChwLCB7IGNvbG9yczogdHJ1ZSB9KX1gKTsKICAgIHJldHVybiBrOwogIH0KICBmdW5jdGlvbiBOb2RlVHlwZShub2RlKSB7CiAgICByZXR1cm4gaXNPYmplY3Qobm9kZSkKICAgICAgPyAnbGVuZ3RoJyBpbiBub2RlICYmIHR5cGVvZiBub2RlLmxlbmd0aCA9PSAnbnVtYmVyJwogICAgICAgID8gJ2FycmF5JwogICAgICAgIDogdXRpbC5nZXRDbGFzc05hbWUobm9kZSkudG9Mb3dlckNhc2UoKQogICAgICA6IHR5cGVvZiBub2RlOwogIH0KICBjb25zb2xlLmxvZygnYnVpbGRYUGF0aCcsIHBhcnRzIC8qLm1hcChwID0+IEdldEtleShwKSA/PyAocC50b1N0cmluZyA/PyBwLnRvU291cmNlKS5jYWxsKHApKSovKTsKICByZXR1cm4gbmV3IFhQYXRoKHBhcnRzKTsKfQoKZXh0ZW5kQXJyYXkoWFBhdGgucHJvdG90eXBlKTsKCmV4cG9ydCBkZWZhdWx0IFhQYXRoOwoAAAAAAAAAAGITAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngcAAAAAAACeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5593,
					1,
					"insert",
					{
						"characters": "///"
					},
					"AwAAAIIHAAAAAAAAgwcAAAAAAAAAAAAAgwcAAAAAAACEBwAAAAAAAAAAAACEBwAAAAAAAIUHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggcAAAAAAACCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					5597,
					1,
					"cut",
					null,
					"AQAAAPoHAAAAAAAA+gcAAAAAAAAiAAAAY29uc29sZS5sb2coJ2tleScsIGtleSwga2V5ICsgJycpOw",
					"AQAAAAAAAAABAAAA+gcAAAAAAAAcCAAAAAAAAP///////+9/"
				],
				[
					5600,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAkIAAAAAAAACggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQgAAAAAAAAJCAAAAAAAAAAAAAAAAFRA"
				],
				[
					5601,
					1,
					"paste",
					null,
					"AQAAAAoIAAAAAAAALAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACggAAAAAAAAKCAAAAAAAAAAAAAAAAPC/"
				],
				[
					5616,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAACgIAAAAAAAAKAgAAAAAAAABAAAAJygIAAAAAAAAKAgAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAKQgAAAAAAAApCAAAAAAAAAAAAAAAAPC/"
				],
				[
					5617,
					12,
					"left_delete",
					null,
					"DAAAACcIAAAAAAAAJwgAAAAAAAABAAAAICYIAAAAAAAAJggAAAAAAAABAAAAKyUIAAAAAAAAJQgAAAAAAAABAAAAICQIAAAAAAAAJAgAAAAAAAABAAAAeSMIAAAAAAAAIwgAAAAAAAABAAAAZSIIAAAAAAAAIggAAAAAAAABAAAAayEIAAAAAAAAIQgAAAAAAAABAAAAICAIAAAAAAAAIAgAAAAAAAABAAAALB8IAAAAAAAAHwgAAAAAAAABAAAAeR4IAAAAAAAAHggAAAAAAAABAAAAZR0IAAAAAAAAHQgAAAAAAAABAAAAaxwIAAAAAAAAHAgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAKAgAAAAAAAAoCAAAAAAAAAAAAAAAAPC/"
				],
				[
					5618,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABwIAAAAAAAAHggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAgAAAAAAAAcCAAAAAAAAAAAAAAAAPC/"
				],
				[
					5619,
					1,
					"insert",
					{
						"characters": "key,ry"
					},
					"BgAAAB0IAAAAAAAAHggAAAAAAAAAAAAAHggAAAAAAAAfCAAAAAAAAAAAAAAfCAAAAAAAACAIAAAAAAAAAAAAACAIAAAAAAAAIQgAAAAAAAAAAAAAIQgAAAAAAAAiCAAAAAAAAAAAAAAiCAAAAAAAACMIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQgAAAAAAAAdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					5620,
					2,
					"left_delete",
					null,
					"AgAAACIIAAAAAAAAIggAAAAAAAABAAAAeSEIAAAAAAAAIQgAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAIwgAAAAAAAAjCAAAAAAAAAAAAAAAAPC/"
				],
				[
					5621,
					1,
					"insert",
					{
						"characters": "type,"
					},
					"BQAAACEIAAAAAAAAIggAAAAAAAAAAAAAIggAAAAAAAAjCAAAAAAAAAAAAAAjCAAAAAAAACQIAAAAAAAAAAAAACQIAAAAAAAAJQgAAAAAAAAAAAAAJQgAAAAAAAAmCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQgAAAAAAAAhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					5622,
					1,
					"left_delete",
					null,
					"AQAAACUIAAAAAAAAJQgAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAJggAAAAAAAAmCAAAAAAAAAAAAAAAAPC/"
				],
				[
					5627,
					1,
					"cut",
					null,
					"AQAAAAoIAAAAAAAACggAAAAAAAAfAAAAY29uc29sZS5sb2coJ2tleScse2tleSx0eXBlfSk7Cg",
					"AQAAAAAAAAABAAAACggAAAAAAAApCAAAAAAAAAAAAAAAAAAA"
				],
				[
					5629,
					1,
					"paste",
					null,
					"AQAAAEQIAAAAAAAAYwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAgAAAAAAABECAAAAAAAAAAAAAAAAAAA"
				],
				[
					5634,
					1,
					"cut",
					null,
					"AQAAAEQIAAAAAAAARAgAAAAAAAAfAAAAY29uc29sZS5sb2coJ2tleScse2tleSx0eXBlfSk7Cg",
					"AQAAAAAAAAABAAAAYwgAAAAAAABECAAAAAAAAAAAAAAAAPC/"
				],
				[
					5635,
					1,
					"paste",
					null,
					"AQAAAEQIAAAAAAAAYwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAgAAAAAAABECAAAAAAAAAAAAAAAAPC/"
				],
				[
					5639,
					1,
					"insert",
					{
						"characters": "(("
					},
					"AgAAAEQIAAAAAAAARQgAAAAAAAAAAAAARQgAAAAAAABGCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAgAAAAAAABECAAAAAAAAAAAAAAAAAAA"
				],
				[
					5640,
					2,
					"left_delete",
					null,
					"AgAAAEUIAAAAAAAARQgAAAAAAAABAAAAKEQIAAAAAAAARAgAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAARggAAAAAAABGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					5641,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAEQIAAAAAAAARQgAAAAAAAAAAAAARQgAAAAAAABGCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAgAAAAAAABECAAAAAAAAAAAAAAAAPC/"
				],
				[
					5669,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAABAMAAAAAAAAEgwAAAAAAAAAAAAAOwsAAAAAAAA9CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAwAAAAAAAA7CwAAAAAAAAAAAAAAAPC/"
				],
				[
					5674,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABoEwAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBpZih0eXBlb2YgYXJnID09ICdzdHJpbmcnKSB7CiAgICAgICAgaWYoYXJnICE9ICdjaGlsZHJlbicgJiYgYXJnICE9ICdhdHRyaWJ1dGVzJykgewogICAgICAgICAgbGV0IG0gPSAvXltBLVphLXpdWy1cd10qLy5leGVjKGFyZyk7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdtJywgbSk7CiAgICAgICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgICAgIGFyZyA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIC8qcyA9PiBzID09IG1bMF0gPz8qLyBQcmVkaWNhdGUuc3RyaW5nKG1bMF0pKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMucHVzaChhcmcpOwogICAgfQogICAgY29uc29sZS5sb2coJ1hQYXRoLmNvbnN0cnVjdG9yJywgdGhpcyk7CiAgfQoKICBbU3ltYm9sLmluc3BlY3RdKGRlcHRoLCBvcHRzID0ge30pIHsKICAgIGxldCBvYmogPSBbLi4udGhpc10ubWFwKEdldEtleSk7CiAgICAvL2NvbnNvbGUubG9nKCdvYmonLCBvYmopOwogICAgcmV0dXJuICgKICAgICAgYFx4MWJbMTszMW0ke3RoaXMuY29uc3RydWN0b3IubmFtZSA/PyB1dGlsLmdldENsYXNzTmFtZSh0aGlzKX1ceDFiWzBtIGAgKwogICAgICBpbnNwZWN0KG9iaiA/PyB7IF9fcHJvdG9fXzogeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1hQYXRoJyB9LCAuLi5vYmogfSwgeyAuLi5vcHRzLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0pCiAgICApOwogIH0KCiAgc3RhdGljIGZyb20gPSBidWlsZFhQYXRoOwp9CgpYUGF0aC5wcm90b3R5cGVbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdYUGF0aCc7CgpleHBvcnQgY29uc3QgSW1tdXRhYmxlWFBhdGggPSBYUGF0aDsKZXhwb3J0IGNvbnN0IE11dGFibGVYUGF0aCA9IFhQYXRoOwoKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlWFBhdGgoc3RyKSB7fQoKZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkWFBhdGgocHRyLCByb290KSB7CiAgbGV0IG5vZGUgPSByb290LAogICAgcGFyZW50LAogICAgcHJldktleSwKICAgIGkgPSAwLAogICAgcGFydHMgPSBbXSwKICAgIHNpYmxpbmdzLAogICAgc2libGluZ1NhbWUsCiAgICBrZXlzLAogICAgdHlwZSwKICAgIHNhbWUsCiAgICBoaWVyID0gW107CiAgZm9yKGxldCBrZXkgb2YgcHRyKSB7CiAgICAvLyBpZih0eXBlb2Yga2V5ID09ICdmdW5jdGlvbicpIGtleSA9IEdldEtleShrZXkpOwogICAgaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKCcgJywgY29uc29sZS5jb25maWcoeyBkZXB0aDogMiB9KSwgeyBrZXk6IGtleSArICcnLCBwYXJlbnQsIG5vZGUgfSk7CgogICAgICBpZihpc09iamVjdChub2RlKSAmJiAnbGVuZ3RoJyBpbiBub2RlKSB7CiAgICAgICAgbGV0IGEgPSBBcnJheS5mcm9tKG5vZGUpLAogICAgICAgICAgZm4gPSBrZXk7CiAgICAgICAvLy8gY29uc29sZS5sb2coJycsIGluc3BlY3QoeyBmbjogZm4gKyAnJyB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgICAgIGtleSA9IGEuZmluZEluZGV4KGZuKTsKICAgICAgICAKICAgICAgfQogICAgfQoKICAgIHR5cGUgPSBrZXkgPT0gJ2NoaWxkcmVuJyA/ICdvYmplY3QnIDogTm9kZVR5cGUobm9kZSk7Ci8vY29uc29sZS5sb2coJ2tleScse2tleSx0eXBlfSk7CgogICAgaWYodHlwZSAhPSAnYXJyYXknKSB7CiAgICAgIHNpYmxpbmdTYW1lID0gW107CiAgICB9IGVsc2UgewogICAgICBzaWJsaW5ncyA9IFsuLi5ub2RlXTsKICAgICAgc2libGluZ1NhbWUgPSBzaWJsaW5ncy5yZWR1Y2UoKGFjYywgbiwgaSkgPT4gewogICAgICAgIGlmKGlzT2JqZWN0KG4pICYgaXNPYmplY3Qobm9kZVtrZXldKSkKICAgICAgICAgIGlmKG4udGFnTmFtZSA9PSBub2RlW2tleV0udGFnTmFtZSkgLyppZiAoaSAhPSBrZXkpKi8gYWNjLnB1c2goW2ksIG4udGFnTmFtZV0pOwogICAgICAgIHJldHVybiBhY2M7CiAgICAgIH0sIFtdKTsKICAgIH0KICAgIGtleXMgPSBpc09iamVjdChub2RlKSA/IE9iamVjdC5rZXlzKG5vZGUpIDogW107CgogICAgLy8gICBjb25zb2xlLmxvZygnJywgaW5zcGVjdCh7IHR5cGUsIGtleXMsIGtleSwgaSwgbm9kZSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgaWYoa2V5ID09ICdjaGlsZHJlbicpIHsKICAgICAgcGFydHMucHVzaChrZXkpOwogICAgfSBlbHNlIHsKICAgICAgc2FtZSA9IHNpYmxpbmdTYW1lLmxlbmd0aCB8fCB1bmRlZmluZWQ7CgogICAgICAvL2NvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgdHlwZSwga2V5LCBpIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CgogICAgICBsZXQgcGFydCA9IEFkZEtleShub2RlW2tleV0sIGtleSwgaSwgc2FtZSk7CgogICAgIC8qIGlmKHR5cGVvZiBwYXJ0ID09ICdzdHJpbmcnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uaW5kZXhPZihwYXJ0KSA9PSAtMSkgewogICAgICAgIGxldCBwciA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIFByZWRpY2F0ZS5zdHJpbmcocGFydCkpOwogICAgICAgIHByLnRhZyA9IHBhcnQ7CiAgICAgICAgcGFydCA9IHByOwogICAgICB9Ki8KICAgICAgcGFydHMucHVzaChwYXJ0KTsKICAgIH0KCiAgICBpZighaXNPYmplY3Qobm9kZSkpCiAgICAgIHRocm93IG5ldyBFcnJvcigKICAgICAgICBgRXJyb3IgaW5kZXhpbmcgPCR7dHlwZW9mIG5vZGV9PiB3aXRoIDwke2tleX0+IFske2hpZXIuam9pbignLCAnKX1dOiAke3BhcnRzLm1hcChHZXRLZXkpLmpvaW4oJyAtPiAnKX1gCiAgICAgICk7CgogICAgcGFyZW50ID0gbm9kZTsKICAgIG5vZGUgPSBub2RlW2tleV07CiAgICBoaWVyLnB1c2goa2V5KTsKICAgIHByZXZLZXkgPSBrZXk7CiAgICBpKys7CiAgfQoKICBmdW5jdGlvbiBBZGRLZXkobm9kZSwgaywgaSwgc2FtZSkgewogICAgbGV0IHMgPSAnJzsKICAgIC8vY29uc29sZS5sb2coJ0FkZEtleScsIGluc3BlY3Qobm9kZSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAxIH0pKTsKICAgIGlmKGlzT2JqZWN0KG5vZGUpICYmICd0YWdOYW1lJyBpbiBub2RlKSBzID0gbm9kZS50YWdOYW1lOwoKICAgIGlmKHR5cGVvZiBrID09ICdudW1iZXInKSB7CiAgICAgIGlmKHNhbWUgPiAxKQogICAgICAgIC8qaWYobm9kZT8uYXR0cmlidXRlcz8ubmFtZSkgcyArPSBgW0BuYW1lPSIke25vZGUuYXR0cmlidHVlcy5uYW1lfSJdYDsKICAgICAgICAgIGVsc2UqLwogICAgICAgIHMgKz0gYFske2t9XWA7CiAgICB9IGVsc2UgaWYodHlwZW9mIGsgPT0gJ3N0cmluZycpIHsKICAgIH0KICAgIGlmKHMgPT09ICcnKSBzID0geyBjaGlsZHJlbjogJy8nIH1ba10gPz8gayA/PyAnLyc7CiAgICByZXR1cm4gczsKICB9CgogIGZ1bmN0aW9uIEdldEtleShwKSB7CiAgICBsZXQgazsKICAgIGlmKChpc09iamVjdChwKSB8fCBpc0Z1bmN0aW9uKHApKSAmJiBwIGluc3RhbmNlb2YgUHJlZGljYXRlKSB7CiAgICAgIGlmKHAuaWQgPT0gUHJlZGljYXRlLlBST1BFUlRZKSB7CiAgICAgICAgY29uc3Qgc3RyID0gcC52YWx1ZXMoKVsxXTsKICAgICAgICBrID0gc3RyLnZhbHVlcygpWzBdOwogICAgICB9CiAgICB9IGVsc2UgaWYodHlwZW9mIHAgPT0gJ29iamVjdCcgJiYgWyd0YWdOYW1lJywgJ2NoaWxkcmVuJywgJ2F0dHJpYnV0ZXMnXS5zb21lKHByb3AgPT4gcHJvcCBpbiBwKSkgewogICAgICBrID0gcC50YWdOYW1lOwogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdmdW5jdGlvbicgLyogJiYgIShwIGluc3RhbmNlb2YgUHJlZGljYXRlKSovKSB7CiAgICAgIGlmKC90YWdOYW1lXHMqPT0vLnRlc3QocCArICcnKSkgayA9IChwICsgJycpLnJlcGxhY2UoLy4qJyguKiknJC8sICckMScpOwogICAgICBlbHNlIGsgPSBwOwogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdudW1iZXInIHx8IHR5cGVvZiBwID09ICdzdHJpbmcnKSB7CiAgICAgIGsgPSBwOwogICAgfSBlbHNlIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBwYXJ0ICgke3V0aWwuZ2V0VHlwZVN0cihwKX0gJHt0eXBlb2YgcH0pOiAke2luc3BlY3QocCwgeyBjb2xvcnM6IHRydWUgfSl9YCk7CiAgICByZXR1cm4gazsKICB9CiAgZnVuY3Rpb24gTm9kZVR5cGUobm9kZSkgewogICAgcmV0dXJuIGlzT2JqZWN0KG5vZGUpCiAgICAgID8gJ2xlbmd0aCcgaW4gbm9kZSAmJiB0eXBlb2Ygbm9kZS5sZW5ndGggPT0gJ251bWJlcicKICAgICAgICA/ICdhcnJheScKICAgICAgICA6IHV0aWwuZ2V0Q2xhc3NOYW1lKG5vZGUpLnRvTG93ZXJDYXNlKCkKICAgICAgOiB0eXBlb2Ygbm9kZTsKICB9CiAgY29uc29sZS5sb2coJ2J1aWxkWFBhdGgnLCBwYXJ0cyAvKi5tYXAocCA9PiBHZXRLZXkocCkgPz8gKHAudG9TdHJpbmcgPz8gcC50b1NvdXJjZSkuY2FsbChwKSkqLyk7CiAgcmV0dXJuIG5ldyBYUGF0aChwYXJ0cyk7Cn0KCmV4dGVuZEFycmF5KFhQYXRoLnByb3RvdHlwZSk7CgpleHBvcnQgZGVmYXVsdCBYUGF0aDsKAAAAAAAAAABlEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgwAAAAAAAA9CwAAAAAAAAAAAAAAAPC/"
				],
				[
					5698,
					1,
					"insert",
					{
						"characters": "($"
					},
					"AgAAAHYCAAAAAAAAdwIAAAAAAAAAAAAAdwIAAAAAAAB4AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgIAAAAAAAB2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5699,
					1,
					"left_delete",
					null,
					"AQAAAHcCAAAAAAAAdwIAAAAAAAABAAAAJA",
					"AQAAAAAAAAABAAAAeAIAAAAAAAB4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5700,
					1,
					"insert",
					{
						"characters": "\\["
					},
					"AgAAAHcCAAAAAAAAeAIAAAAAAAAAAAAAeAIAAAAAAAB5AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwIAAAAAAAB3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5701,
					1,
					"insert",
					{
						"characters": "[0-9]"
					},
					"BQAAAHkCAAAAAAAAegIAAAAAAAAAAAAAegIAAAAAAAB7AgAAAAAAAAAAAAB7AgAAAAAAAHwCAAAAAAAAAAAAAHwCAAAAAAAAfQIAAAAAAAAAAAAAfQIAAAAAAAB+AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQIAAAAAAAB5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5702,
					1,
					"insert",
					{
						"characters": "+\\]"
					},
					"AwAAAH4CAAAAAAAAfwIAAAAAAAAAAAAAfwIAAAAAAACAAgAAAAAAAAAAAACAAgAAAAAAAIECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgIAAAAAAAB+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5703,
					1,
					"insert",
					{
						"characters": "|)$"
					},
					"AwAAAIECAAAAAAAAggIAAAAAAAAAAAAAggIAAAAAAACDAgAAAAAAAAAAAACDAgAAAAAAAIQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQIAAAAAAACBAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5716,
					2,
					"right_delete",
					null,
					"AgAAAJsCAAAAAAAAmwIAAAAAAAABAAAAL5sCAAAAAAAAmwIAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAmwIAAAAAAACbAgAAAAAAAAAAAAAAAFlA"
				],
				[
					5725,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAGgCAAAAAAAAaQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAIAAAAAAABoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5727,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAHcCAAAAAAAAeAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwIAAAAAAAB3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5736,
					1,
					"insert",
					{
						"characters": "[-.-"
					},
					"BAAAAGYCAAAAAAAAZwIAAAAAAAAAAAAAZwIAAAAAAABoAgAAAAAAAAAAAABoAgAAAAAAAGkCAAAAAAAAAAAAAGkCAAAAAAAAagIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgIAAAAAAABmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5737,
					3,
					"left_delete",
					null,
					"AwAAAGkCAAAAAAAAaQIAAAAAAAABAAAALWgCAAAAAAAAaAIAAAAAAAABAAAALmcCAAAAAAAAZwIAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAagIAAAAAAABqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5738,
					1,
					"insert",
					{
						"characters": "-.-"
					},
					"AwAAAGcCAAAAAAAAaAIAAAAAAAAAAAAAaAIAAAAAAABpAgAAAAAAAAAAAABpAgAAAAAAAGoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwIAAAAAAABnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5739,
					4,
					"left_delete",
					null,
					"BAAAAGkCAAAAAAAAaQIAAAAAAAABAAAALWgCAAAAAAAAaAIAAAAAAAABAAAALmcCAAAAAAAAZwIAAAAAAAABAAAALWYCAAAAAAAAZgIAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAagIAAAAAAABqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5743,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJICAAAAAAAAkwIAAAAAAAAAAAAAkwIAAAAAAACdAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgIAAAAAAACSAgAAAAAAAP///////+9/"
				],
				[
					5744,
					1,
					"left_delete",
					null,
					"AQAAAJsCAAAAAAAAmwIAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAnQIAAAAAAACdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5745,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAJsCAAAAAAAAnAIAAAAAAAAAAAAAnAIAAAAAAACdAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwIAAAAAAACbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5746,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ0CAAAAAAAAnwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQIAAAAAAACdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5747,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAJ4CAAAAAAAAnwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngIAAAAAAACeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5748,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ8CAAAAAAAAoAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwIAAAAAAACfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5749,
					1,
					"left_delete",
					null,
					"AQAAAJ8CAAAAAAAAnwIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAoAIAAAAAAACgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5751,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKACAAAAAAAAoQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAIAAAAAAACgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5752,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKECAAAAAAAAowIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQIAAAAAAAChAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5753,
					1,
					"right_delete",
					null,
					"AQAAAKICAAAAAAAAogIAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAogIAAAAAAACiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5755,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAFQDAAAAAAAAVQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAMAAAAAAABUAwAAAAAAAAAAAAAAwGJA"
				],
				[
					5758,
					1,
					"insert",
					{
						"characters": "\nm="
					},
					"BQAAAKICAAAAAAAAowIAAAAAAAAAAAAAowIAAAAAAACrAgAAAAAAAAAAAACrAgAAAAAAAK0CAAAAAAAAAAAAAK0CAAAAAAAArgIAAAAAAAAAAAAArgIAAAAAAACvAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogIAAAAAAACiAgAAAAAAAP///////+9/"
				],
				[
					5759,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAK8CAAAAAAAAsQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwIAAAAAAACvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5760,
					1,
					"insert",
					{
						"characters": "...m"
					},
					"BAAAALACAAAAAAAAsQIAAAAAAAAAAAAAsQIAAAAAAACyAgAAAAAAAAAAAACyAgAAAAAAALMCAAAAAAAAAAAAALMCAAAAAAAAtAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAIAAAAAAACwAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5762,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALUCAAAAAAAAtgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQIAAAAAAAC1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5767,
					1,
					"insert",
					{
						"characters": "-sl"
					},
					"AwAAALUCAAAAAAAAtgIAAAAAAAAAAAAAtgIAAAAAAAC3AgAAAAAAAAAAAAC3AgAAAAAAALgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQIAAAAAAAC1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5768,
					3,
					"left_delete",
					null,
					"AwAAALcCAAAAAAAAtwIAAAAAAAABAAAAbLYCAAAAAAAAtgIAAAAAAAABAAAAc7UCAAAAAAAAtQIAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAuAIAAAAAAAC4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5769,
					1,
					"insert",
					{
						"characters": ".slice"
					},
					"BgAAALUCAAAAAAAAtgIAAAAAAAAAAAAAtgIAAAAAAAC3AgAAAAAAAAAAAAC3AgAAAAAAALgCAAAAAAAAAAAAALgCAAAAAAAAuQIAAAAAAAAAAAAAuQIAAAAAAAC6AgAAAAAAAAAAAAC6AgAAAAAAALsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQIAAAAAAAC1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5770,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALsCAAAAAAAAvQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwIAAAAAAAC7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5771,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAALwCAAAAAAAAvQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAIAAAAAAAC8AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5777,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAL4CAAAAAAAAvwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgIAAAAAAAC+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5778,
					1,
					"left_delete",
					null,
					"AQAAAL4CAAAAAAAAvgIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAvwIAAAAAAAC/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5781,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChEwAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBpZih0eXBlb2YgYXJnID09ICdzdHJpbmcnKSB7CiAgICAgICAgaWYoYXJnICE9ICdjaGlsZHJlbicgJiYgYXJnICE9ICdhdHRyaWJ1dGVzJykgewogICAgICAgICAgbGV0IG0gPSAvXihbQS1aYS16XVstXHddKikoXFtbMC05XStcXXwpJC8uZXhlYyhhcmcpOwogICAgICAgIGlmKG0pIHsKICAgICAgICAgIG09Wy4uLm1dLnNsaWNlKDEpOwogICAgICAgICAgY29uc29sZS5sb2coJ20nLCBtKTsKICAgICAgICAgIGlmKG0ubGVuZ3RoID49IDEpIHsKICAgICAgICAgICAgYXJnID0gUHJlZGljYXRlLnByb3BlcnR5KCd0YWdOYW1lJywgLypzID0+IHMgPT0gbVswXSA/PyovIFByZWRpY2F0ZS5zdHJpbmcobVswXSkpOwogICAgICAgICAgfQogICAgICAgIH19CiAgICAgIH0KCiAgICAgIHRoaXMucHVzaChhcmcpOwogICAgfQogICAgY29uc29sZS5sb2coJ1hQYXRoLmNvbnN0cnVjdG9yJywgdGhpcyk7CiAgfQoKICBbU3ltYm9sLmluc3BlY3RdKGRlcHRoLCBvcHRzID0ge30pIHsKICAgIGxldCBvYmogPSBbLi4udGhpc10ubWFwKEdldEtleSk7CiAgICAvL2NvbnNvbGUubG9nKCdvYmonLCBvYmopOwogICAgcmV0dXJuICgKICAgICAgYFx4MWJbMTszMW0ke3RoaXMuY29uc3RydWN0b3IubmFtZSA/PyB1dGlsLmdldENsYXNzTmFtZSh0aGlzKX1ceDFiWzBtIGAgKwogICAgICBpbnNwZWN0KG9iaiA/PyB7IF9fcHJvdG9fXzogeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1hQYXRoJyB9LCAuLi5vYmogfSwgeyAuLi5vcHRzLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0pCiAgICApOwogIH0KCiAgc3RhdGljIGZyb20gPSBidWlsZFhQYXRoOwp9CgpYUGF0aC5wcm90b3R5cGVbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdYUGF0aCc7CgpleHBvcnQgY29uc3QgSW1tdXRhYmxlWFBhdGggPSBYUGF0aDsKZXhwb3J0IGNvbnN0IE11dGFibGVYUGF0aCA9IFhQYXRoOwoKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlWFBhdGgoc3RyKSB7fQoKZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkWFBhdGgocHRyLCByb290KSB7CiAgbGV0IG5vZGUgPSByb290LAogICAgcGFyZW50LAogICAgcHJldktleSwKICAgIGkgPSAwLAogICAgcGFydHMgPSBbXSwKICAgIHNpYmxpbmdzLAogICAgc2libGluZ1NhbWUsCiAgICBrZXlzLAogICAgdHlwZSwKICAgIHNhbWUsCiAgICBoaWVyID0gW107CiAgZm9yKGxldCBrZXkgb2YgcHRyKSB7CiAgICAvLyBpZih0eXBlb2Yga2V5ID09ICdmdW5jdGlvbicpIGtleSA9IEdldEtleShrZXkpOwogICAgaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKCcgJywgY29uc29sZS5jb25maWcoeyBkZXB0aDogMiB9KSwgeyBrZXk6IGtleSArICcnLCBwYXJlbnQsIG5vZGUgfSk7CgogICAgICBpZihpc09iamVjdChub2RlKSAmJiAnbGVuZ3RoJyBpbiBub2RlKSB7CiAgICAgICAgbGV0IGEgPSBBcnJheS5mcm9tKG5vZGUpLAogICAgICAgICAgZm4gPSBrZXk7CiAgICAgICAgLy8vIGNvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgZm46IGZuICsgJycgfSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAyIH0pKTsKICAgICAgICBrZXkgPSBhLmZpbmRJbmRleChmbik7CiAgICAgIH0KICAgIH0KCiAgICB0eXBlID0ga2V5ID09ICdjaGlsZHJlbicgPyAnb2JqZWN0JyA6IE5vZGVUeXBlKG5vZGUpOwogICAgLy9jb25zb2xlLmxvZygna2V5Jyx7a2V5LHR5cGV9KTsKCiAgICBpZih0eXBlICE9ICdhcnJheScpIHsKICAgICAgc2libGluZ1NhbWUgPSBbXTsKICAgIH0gZWxzZSB7CiAgICAgIHNpYmxpbmdzID0gWy4uLm5vZGVdOwogICAgICBzaWJsaW5nU2FtZSA9IHNpYmxpbmdzLnJlZHVjZSgoYWNjLCBuLCBpKSA9PiB7CiAgICAgICAgaWYoaXNPYmplY3QobikgJiBpc09iamVjdChub2RlW2tleV0pKQogICAgICAgICAgaWYobi50YWdOYW1lID09IG5vZGVba2V5XS50YWdOYW1lKSAvKmlmIChpICE9IGtleSkqLyBhY2MucHVzaChbaSwgbi50YWdOYW1lXSk7CiAgICAgICAgcmV0dXJuIGFjYzsKICAgICAgfSwgW10pOwogICAgfQogICAga2V5cyA9IGlzT2JqZWN0KG5vZGUpID8gT2JqZWN0LmtleXMobm9kZSkgOiBbXTsKCiAgICAvLyAgIGNvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgdHlwZSwga2V5cywga2V5LCBpLCBub2RlIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CiAgICBpZihrZXkgPT0gJ2NoaWxkcmVuJykgewogICAgICBwYXJ0cy5wdXNoKGtleSk7CiAgICB9IGVsc2UgewogICAgICBzYW1lID0gc2libGluZ1NhbWUubGVuZ3RoIHx8IHVuZGVmaW5lZDsKCiAgICAgIC8vY29uc29sZS5sb2coJycsIGluc3BlY3QoeyB0eXBlLCBrZXksIGkgfSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAyIH0pKTsKCiAgICAgIGxldCBwYXJ0ID0gQWRkS2V5KG5vZGVba2V5XSwga2V5LCBpLCBzYW1lKTsKCiAgICAgIC8qIGlmKHR5cGVvZiBwYXJ0ID09ICdzdHJpbmcnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uaW5kZXhPZihwYXJ0KSA9PSAtMSkgewogICAgICAgIGxldCBwciA9IFByZWRpY2F0ZS5wcm9wZXJ0eSgndGFnTmFtZScsIFByZWRpY2F0ZS5zdHJpbmcocGFydCkpOwogICAgICAgIHByLnRhZyA9IHBhcnQ7CiAgICAgICAgcGFydCA9IHByOwogICAgICB9Ki8KICAgICAgcGFydHMucHVzaChwYXJ0KTsKICAgIH0KCiAgICBpZighaXNPYmplY3Qobm9kZSkpCiAgICAgIHRocm93IG5ldyBFcnJvcigKICAgICAgICBgRXJyb3IgaW5kZXhpbmcgPCR7dHlwZW9mIG5vZGV9PiB3aXRoIDwke2tleX0+IFske2hpZXIuam9pbignLCAnKX1dOiAke3BhcnRzLm1hcChHZXRLZXkpLmpvaW4oJyAtPiAnKX1gCiAgICAgICk7CgogICAgcGFyZW50ID0gbm9kZTsKICAgIG5vZGUgPSBub2RlW2tleV07CiAgICBoaWVyLnB1c2goa2V5KTsKICAgIHByZXZLZXkgPSBrZXk7CiAgICBpKys7CiAgfQoKICBmdW5jdGlvbiBBZGRLZXkobm9kZSwgaywgaSwgc2FtZSkgewogICAgbGV0IHMgPSAnJzsKICAgIC8vY29uc29sZS5sb2coJ0FkZEtleScsIGluc3BlY3Qobm9kZSwgeyAuLi5jb25zb2xlLm9wdGlvbnMsIGRlcHRoOiAxIH0pKTsKICAgIGlmKGlzT2JqZWN0KG5vZGUpICYmICd0YWdOYW1lJyBpbiBub2RlKSBzID0gbm9kZS50YWdOYW1lOwoKICAgIGlmKHR5cGVvZiBrID09ICdudW1iZXInKSB7CiAgICAgIGlmKHNhbWUgPiAxKQogICAgICAgIC8qaWYobm9kZT8uYXR0cmlidXRlcz8ubmFtZSkgcyArPSBgW0BuYW1lPSIke25vZGUuYXR0cmlidHVlcy5uYW1lfSJdYDsKICAgICAgICAgIGVsc2UqLwogICAgICAgIHMgKz0gYFske2t9XWA7CiAgICB9IGVsc2UgaWYodHlwZW9mIGsgPT0gJ3N0cmluZycpIHsKICAgIH0KICAgIGlmKHMgPT09ICcnKSBzID0geyBjaGlsZHJlbjogJy8nIH1ba10gPz8gayA/PyAnLyc7CiAgICByZXR1cm4gczsKICB9CgogIGZ1bmN0aW9uIEdldEtleShwKSB7CiAgICBsZXQgazsKICAgIGlmKChpc09iamVjdChwKSB8fCBpc0Z1bmN0aW9uKHApKSAmJiBwIGluc3RhbmNlb2YgUHJlZGljYXRlKSB7CiAgICAgIGlmKHAuaWQgPT0gUHJlZGljYXRlLlBST1BFUlRZKSB7CiAgICAgICAgY29uc3Qgc3RyID0gcC52YWx1ZXMoKVsxXTsKICAgICAgICBrID0gc3RyLnZhbHVlcygpWzBdOwogICAgICB9CiAgICB9IGVsc2UgaWYodHlwZW9mIHAgPT0gJ29iamVjdCcgJiYgWyd0YWdOYW1lJywgJ2NoaWxkcmVuJywgJ2F0dHJpYnV0ZXMnXS5zb21lKHByb3AgPT4gcHJvcCBpbiBwKSkgewogICAgICBrID0gcC50YWdOYW1lOwogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdmdW5jdGlvbicgLyogJiYgIShwIGluc3RhbmNlb2YgUHJlZGljYXRlKSovKSB7CiAgICAgIGlmKC90YWdOYW1lXHMqPT0vLnRlc3QocCArICcnKSkgayA9IChwICsgJycpLnJlcGxhY2UoLy4qJyguKiknJC8sICckMScpOwogICAgICBlbHNlIGsgPSBwOwogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdudW1iZXInIHx8IHR5cGVvZiBwID09ICdzdHJpbmcnKSB7CiAgICAgIGsgPSBwOwogICAgfSBlbHNlIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBwYXJ0ICgke3V0aWwuZ2V0VHlwZVN0cihwKX0gJHt0eXBlb2YgcH0pOiAke2luc3BlY3QocCwgeyBjb2xvcnM6IHRydWUgfSl9YCk7CiAgICByZXR1cm4gazsKICB9CiAgZnVuY3Rpb24gTm9kZVR5cGUobm9kZSkgewogICAgcmV0dXJuIGlzT2JqZWN0KG5vZGUpCiAgICAgID8gJ2xlbmd0aCcgaW4gbm9kZSAmJiB0eXBlb2Ygbm9kZS5sZW5ndGggPT0gJ251bWJlcicKICAgICAgICA/ICdhcnJheScKICAgICAgICA6IHV0aWwuZ2V0Q2xhc3NOYW1lKG5vZGUpLnRvTG93ZXJDYXNlKCkKICAgICAgOiB0eXBlb2Ygbm9kZTsKICB9CiAgY29uc29sZS5sb2coJ2J1aWxkWFBhdGgnLCBwYXJ0cyAvKi5tYXAocCA9PiBHZXRLZXkocCkgPz8gKHAudG9TdHJpbmcgPz8gcC50b1NvdXJjZSkuY2FsbChwKSkqLyk7CiAgcmV0dXJuIG5ldyBYUGF0aChwYXJ0cyk7Cn0KCmV4dGVuZEFycmF5KFhQYXRoLnByb3RvdHlwZSk7CgpleHBvcnQgZGVmYXVsdCBYUGF0aDsKAAAAAAAAAAC6EwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgIAAAAAAAC+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					5784,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMMCAAAAAAAAxAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwIAAAAAAADDAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5785,
					1,
					"left_delete",
					null,
					"AQAAAMMCAAAAAAAAwwIAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAxAIAAAAAAADEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5788,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMMCAAAAAAAAxAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwIAAAAAAADDAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5789,
					1,
					"insert",
					{
						"characters": " m"
					},
					"AgAAAMQCAAAAAAAAxQIAAAAAAAAAAAAAxQIAAAAAAADGAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAIAAAAAAADEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5790,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMYCAAAAAAAAyAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgIAAAAAAADGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5791,
					1,
					"insert",
					{
						"characters": "√æ"
					},
					"AQAAAMcCAAAAAAAAyAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwIAAAAAAADHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5792,
					1,
					"left_delete",
					null,
					"AQAAAMcCAAAAAAAAxwIAAAAAAAACAAAAw74",
					"AQAAAAAAAAABAAAAyAIAAAAAAADIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5793,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAMcCAAAAAAAAyAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwIAAAAAAADHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5795,
					1,
					"insert",
					{
						"characters": " ==="
					},
					"BAAAAMkCAAAAAAAAygIAAAAAAAAAAAAAygIAAAAAAADLAgAAAAAAAAAAAADLAgAAAAAAAMwCAAAAAAAAAAAAAMwCAAAAAAAAzQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQIAAAAAAADJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5796,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM0CAAAAAAAAzgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQIAAAAAAADNAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5797,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAM4CAAAAAAAA0AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgIAAAAAAADOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5799,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAANACAAAAAAAA0QIAAAAAAAAAAAAA0QIAAAAAAADSAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AIAAAAAAADQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5800,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANICAAAAAAAA0wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gIAAAAAAADSAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5801,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAANMCAAAAAAAA1AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wIAAAAAAADTAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5802,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAANQCAAAAAAAA1QIAAAAAAAAAAAAA1QIAAAAAAADWAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AIAAAAAAADUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5803,
					1,
					"insert",
					{
						"characters": " 34"
					},
					"AwAAANYCAAAAAAAA1wIAAAAAAAAAAAAA1wIAAAAAAADYAgAAAAAAAAAAAADYAgAAAAAAANkCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gIAAAAAAADWAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5804,
					1,
					"left_delete",
					null,
					"AQAAANgCAAAAAAAA2AIAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5833,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAIoDAAAAAAAAiwMAAAAAAAAAAAAAiwMAAAAAAACXAwAAAAAAAAAAAACXAwAAAAAAAJgDAAAAAAAAAAAAAJgDAAAAAAAApAMAAAAAAAAAAAAAiwMAAAAAAACLAwAAAAAAAAwAAAAgICAgICAgICAgICCYAwAAAAAAAJkDAAAAAAAAAAAAAJkDAAAAAAAAmgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigMAAAAAAACKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5834,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJoDAAAAAAAAnAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgMAAAAAAACaAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5835,
					1,
					"insert",
					{
						"characters": "m.length"
					},
					"CAAAAJsDAAAAAAAAnAMAAAAAAAAAAAAAnAMAAAAAAACdAwAAAAAAAAAAAACdAwAAAAAAAJ4DAAAAAAAAAAAAAJ4DAAAAAAAAnwMAAAAAAAAAAAAAnwMAAAAAAACgAwAAAAAAAAAAAACgAwAAAAAAAKEDAAAAAAAAAAAAAKEDAAAAAAAAogMAAAAAAAAAAAAAogMAAAAAAACjAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwMAAAAAAACbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5836,
					1,
					"insert",
					{
						"characters": " >="
					},
					"AwAAAKMDAAAAAAAApAMAAAAAAAAAAAAApAMAAAAAAAClAwAAAAAAAAAAAAClAwAAAAAAAKYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowMAAAAAAACjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5837,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAKYDAAAAAAAApwMAAAAAAAAAAAAApwMAAAAAAACoAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgMAAAAAAACmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5839,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkDAAAAAAAAqgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQMAAAAAAACpAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5840,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKoDAAAAAAAArAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgMAAAAAAACqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5841,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAKsDAAAAAAAArAMAAAAAAAAAAAAArAMAAAAAAAC4AwAAAAAAAAAAAAC4AwAAAAAAALkDAAAAAAAAAAAAALkDAAAAAAAAxQMAAAAAAAAAAAAArAMAAAAAAACsAwAAAAAAAAwAAAAgICAgICAgICAgICCsAwAAAAAAALoDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwMAAAAAAACrAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5844,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"AwAAALoDAAAAAAAAuwMAAAAAAAAAAAAAuwMAAAAAAAC8AwAAAAAAAAAAAAC8AwAAAAAAAL0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugMAAAAAAAC6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					5845,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAL0DAAAAAAAAvgMAAAAAAAAAAAAAvgMAAAAAAAC/AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQMAAAAAAAC9AwAAAAAAAAAAAAAAAPC/"
				],
				[
					5846,
					1,
					"insert",
					{
						"characters": " Predicate.and"
					},
					"DgAAAL8DAAAAAAAAwAMAAAAAAAAAAAAAwAMAAAAAAADBAwAAAAAAAAAAAADBAwAAAAAAAMIDAAAAAAAAAAAAAMIDAAAAAAAAwwMAAAAAAAAAAAAAwwMAAAAAAADEAwAAAAAAAAAAAADEAwAAAAAAAMUDAAAAAAAAAAAAAMUDAAAAAAAAxgMAAAAAAAAAAAAAxgMAAAAAAADHAwAAAAAAAAAAAADHAwAAAAAAAMgDAAAAAAAAAAAAAMgDAAAAAAAAyQMAAAAAAAAAAAAAyQMAAAAAAADKAwAAAAAAAAAAAADKAwAAAAAAAMsDAAAAAAAAAAAAAMsDAAAAAAAAzAMAAAAAAAAAAAAAzAMAAAAAAADNAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwMAAAAAAAC/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					5847,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM0DAAAAAAAAzwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQMAAAAAAADNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5848,
					1,
					"insert",
					{
						"characters": "arg,"
					},
					"BAAAAM4DAAAAAAAAzwMAAAAAAAAAAAAAzwMAAAAAAADQAwAAAAAAAAAAAADQAwAAAAAAANEDAAAAAAAAAAAAANEDAAAAAAAA0gMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgMAAAAAAADOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5849,
					1,
					"insert",
					{
						"characters": " Predicate."
					},
					"CwAAANIDAAAAAAAA0wMAAAAAAAAAAAAA0wMAAAAAAADUAwAAAAAAAAAAAADUAwAAAAAAANUDAAAAAAAAAAAAANUDAAAAAAAA1gMAAAAAAAAAAAAA1gMAAAAAAADXAwAAAAAAAAAAAADXAwAAAAAAANgDAAAAAAAAAAAAANgDAAAAAAAA2QMAAAAAAAAAAAAA2QMAAAAAAADaAwAAAAAAAAAAAADaAwAAAAAAANsDAAAAAAAAAAAAANsDAAAAAAAA3AMAAAAAAAAAAAAA3AMAAAAAAADdAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gMAAAAAAADSAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5850,
					1,
					"insert",
					{
						"characters": "shift"
					},
					"BQAAAN0DAAAAAAAA3gMAAAAAAAAAAAAA3gMAAAAAAADfAwAAAAAAAAAAAADfAwAAAAAAAOADAAAAAAAAAAAAAOADAAAAAAAA4QMAAAAAAAAAAAAA4QMAAAAAAADiAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QMAAAAAAADdAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5851,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOIDAAAAAAAA5AMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gMAAAAAAADiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5852,
					1,
					"insert",
					{
						"characters": "0,"
					},
					"AgAAAOMDAAAAAAAA5AMAAAAAAAAAAAAA5AMAAAAAAADlAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wMAAAAAAADjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5853,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOUDAAAAAAAA5gMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QMAAAAAAADlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5854,
					1,
					"insert",
					{
						"characters": "Predicate"
					},
					"CQAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA5wMAAAAAAADoAwAAAAAAAAAAAADoAwAAAAAAAOkDAAAAAAAAAAAAAOkDAAAAAAAA6gMAAAAAAAAAAAAA6gMAAAAAAADrAwAAAAAAAAAAAADrAwAAAAAAAOwDAAAAAAAAAAAAAOwDAAAAAAAA7QMAAAAAAAAAAAAA7QMAAAAAAADuAwAAAAAAAAAAAADuAwAAAAAAAO8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gMAAAAAAADmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5855,
					1,
					"insert",
					{
						"characters": ".equal"
					},
					"BgAAAO8DAAAAAAAA8AMAAAAAAAAAAAAA8AMAAAAAAADxAwAAAAAAAAAAAADxAwAAAAAAAPIDAAAAAAAAAAAAAPIDAAAAAAAA8wMAAAAAAAAAAAAA8wMAAAAAAAD0AwAAAAAAAAAAAAD0AwAAAAAAAPUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wMAAAAAAADvAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5862,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BgAAAKsDAAAAAAAArAMAAAAAAAAAAAAArAMAAAAAAAC4AwAAAAAAAAAAAAC4AwAAAAAAALoDAAAAAAAAAAAAALoDAAAAAAAAuwMAAAAAAAAAAAAAuwMAAAAAAAC8AwAAAAAAAAAAAAC8AwAAAAAAAL0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwMAAAAAAACrAwAAAAAAAAAAAAAAYHhA"
				],
				[
					5863,
					1,
					"insert",
					{
						"characters": " num=m."
					},
					"BwAAAL0DAAAAAAAAvgMAAAAAAAAAAAAAvgMAAAAAAAC/AwAAAAAAAAAAAAC/AwAAAAAAAMADAAAAAAAAAAAAAMADAAAAAAAAwQMAAAAAAAAAAAAAwQMAAAAAAADCAwAAAAAAAAAAAADCAwAAAAAAAMMDAAAAAAAAAAAAAMMDAAAAAAAAxAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQMAAAAAAAC9AwAAAAAAAAAAAAAAAPC/"
				],
				[
					5864,
					1,
					"left_delete",
					null,
					"AQAAAMMDAAAAAAAAwwMAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAxAMAAAAAAADEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5865,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMMDAAAAAAAAxQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwMAAAAAAADDAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5866,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAMQDAAAAAAAAxQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAMAAAAAAADEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5868,
					1,
					"insert",
					{
						"characters": ".slice"
					},
					"BgAAAMYDAAAAAAAAxwMAAAAAAAAAAAAAxwMAAAAAAADIAwAAAAAAAAAAAADIAwAAAAAAAMkDAAAAAAAAAAAAAMkDAAAAAAAAygMAAAAAAAAAAAAAygMAAAAAAADLAwAAAAAAAAAAAADLAwAAAAAAAMwDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgMAAAAAAADGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5869,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMwDAAAAAAAAzgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAMAAAAAAADMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5870,
					1,
					"insert",
					{
						"characters": "1,-2"
					},
					"BAAAAM0DAAAAAAAAzgMAAAAAAAAAAAAAzgMAAAAAAADPAwAAAAAAAAAAAADPAwAAAAAAANADAAAAAAAAAAAAANADAAAAAAAA0QMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQMAAAAAAADNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5872,
					2,
					"left_delete",
					null,
					"AgAAANEDAAAAAAAA0QMAAAAAAAABAAAAKdADAAAAAAAA0AMAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA0gMAAAAAAADSAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5873,
					1,
					"insert",
					{
						"characters": "1);"
					},
					"AwAAANADAAAAAAAA0QMAAAAAAAAAAAAA0QMAAAAAAADSAwAAAAAAAAAAAADSAwAAAAAAANMDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AMAAAAAAADQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5878,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAMIDAAAAAAAAwwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgMAAAAAAADCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5882,
					1,
					"insert",
					{
						"characters": "nu"
					},
					"AgAAAB8EAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAhBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwQAAAAAAAAfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5883,
					4,
					"left_delete",
					null,
					"BAAAACAEAAAAAAAAIAQAAAAAAAABAAAAdR8EAAAAAAAAHwQAAAAAAAABAAAAbh4EAAAAAAAAHgQAAAAAAAABAAAAKR0EAAAAAAAAHQQAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAIQQAAAAAAAAhBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5884,
					17,
					"left_delete",
					null,
					"EQAAABwEAAAAAAAAHAQAAAAAAAABAAAAYRsEAAAAAAAAGwQAAAAAAAABAAAAdRoEAAAAAAAAGgQAAAAAAAABAAAAcRkEAAAAAAAAGQQAAAAAAAABAAAAZRgEAAAAAAAAGAQAAAAAAAABAAAALhcEAAAAAAAAFwQAAAAAAAABAAAAZRYEAAAAAAAAFgQAAAAAAAABAAAAdBUEAAAAAAAAFQQAAAAAAAABAAAAYRQEAAAAAAAAFAQAAAAAAAABAAAAYxMEAAAAAAAAEwQAAAAAAAABAAAAaRIEAAAAAAAAEgQAAAAAAAABAAAAZBEEAAAAAAAAEQQAAAAAAAABAAAAZRAEAAAAAAAAEAQAAAAAAAABAAAAcg8EAAAAAAAADwQAAAAAAAABAAAAUA4EAAAAAAAADgQAAAAAAAABAAAAIA0EAAAAAAAADQQAAAAAAAABAAAALAwEAAAAAAAADAQAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAHQQAAAAAAAAdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5885,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAsEAAAAAAAACwQAAAAAAAABAAAAKAsEAAAAAAAACwQAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAADAQAAAAAAAAMBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5886,
					5,
					"left_delete",
					null,
					"BQAAAAoEAAAAAAAACgQAAAAAAAABAAAAdAkEAAAAAAAACQQAAAAAAAABAAAAZggEAAAAAAAACAQAAAAAAAABAAAAaQcEAAAAAAAABwQAAAAAAAABAAAAaAYEAAAAAAAABgQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAACwQAAAAAAAALBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5887,
					1,
					"insert",
					{
						"characters": "q"
					},
					"AQAAAAYEAAAAAAAABwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgQAAAAAAAAGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5888,
					1,
					"left_delete",
					null,
					"AQAAAAYEAAAAAAAABgQAAAAAAAABAAAAcQ",
					"AQAAAAAAAAABAAAABwQAAAAAAAAHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5889,
					1,
					"insert",
					{
						"characters": "equal"
					},
					"BQAAAAYEAAAAAAAABwQAAAAAAAAAAAAABwQAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAkEAAAAAAAAAAAAAAkEAAAAAAAACgQAAAAAAAAAAAAACgQAAAAAAAALBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgQAAAAAAAAGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5890,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAsEAAAAAAAADQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwQAAAAAAAALBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5891,
					1,
					"insert",
					{
						"characters": "num"
					},
					"AwAAAAwEAAAAAAAADQQAAAAAAAAAAAAADQQAAAAAAAAOBAAAAAAAAAAAAAAOBAAAAAAAAA8EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAQAAAAAAAAMBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5893,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAABAEAAAAAAAAEQQAAAAAAAAAAAAAEQQAAAAAAAASBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5911,
					1,
					"insert",
					{
						"characters": "\ncibn"
					},
					"BgAAABIEAAAAAAAAEwQAAAAAAAAAAAAAEwQAAAAAAAAhBAAAAAAAAAAAAAAhBAAAAAAAACIEAAAAAAAAAAAAACIEAAAAAAAAIwQAAAAAAAAAAAAAIwQAAAAAAAAkBAAAAAAAAAAAAAAkBAAAAAAAACUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgQAAAAAAAASBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5912,
					3,
					"left_delete",
					null,
					"AwAAACQEAAAAAAAAJAQAAAAAAAABAAAAbiMEAAAAAAAAIwQAAAAAAAABAAAAYiIEAAAAAAAAIgQAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAJQQAAAAAAAAlBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5913,
					1,
					"insert",
					{
						"characters": "onsole.log"
					},
					"CgAAACIEAAAAAAAAIwQAAAAAAAAAAAAAIwQAAAAAAAAkBAAAAAAAAAAAAAAkBAAAAAAAACUEAAAAAAAAAAAAACUEAAAAAAAAJgQAAAAAAAAAAAAAJgQAAAAAAAAnBAAAAAAAAAAAAAAnBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAAKQQAAAAAAAAAAAAAKQQAAAAAAAAqBAAAAAAAAAAAAAAqBAAAAAAAACsEAAAAAAAAAAAAACsEAAAAAAAALAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgQAAAAAAAAiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5914,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACwEAAAAAAAALgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAQAAAAAAAAsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5915,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAC0EAAAAAAAALwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQQAAAAAAAAtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5916,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"AwAAAC4EAAAAAAAALwQAAAAAAAAAAAAALwQAAAAAAAAwBAAAAAAAAAAAAAAwBAAAAAAAADEEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgQAAAAAAAAuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5918,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADIEAAAAAAAAMwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgQAAAAAAAAyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5919,
					1,
					"insert",
					{
						"characters": " arg"
					},
					"BAAAADMEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA1BAAAAAAAAAAAAAA1BAAAAAAAADYEAAAAAAAAAAAAADYEAAAAAAAANwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwQAAAAAAAAzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5921,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADgEAAAAAAAAOQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					5924,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACMFAAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBpZih0eXBlb2YgYXJnID09ICdzdHJpbmcnKSB7CiAgICAgICAgaWYoYXJnICE9ICdjaGlsZHJlbicgJiYgYXJnICE9ICdhdHRyaWJ1dGVzJykgewogICAgICAgICAgbGV0IG0gPSAvXihbQS1aYS16XVstXHddKikoXFtbMC05XStcXXwpJC8uZXhlYyhhcmcpOwogICAgICAgICAgaWYobSkgewogICAgICAgICAgICBtID0gWy4uLm1dLnNsaWNlKDEsIG1bMl0gPT09ICcnID8gMiA6IDMpOwogICAgICAgICAgICBjb25zb2xlLmxvZygnbScsIG0pOwogICAgICAgICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgICAgICAgYXJnID0gUHJlZGljYXRlLnByb3BlcnR5KCd0YWdOYW1lJywgLypzID0+IHMgPT0gbVswXSA/PyovIFByZWRpY2F0ZS5zdHJpbmcobVswXSkpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZihtLmxlbmd0aCA+PSAyKSB7CiAgICAgICAgICAgICAgbGV0IG51bT0rbVsxXS5zbGljZSgxLC0xKTsKICAgICAgICAgICAgICBhcmcgPSBQcmVkaWNhdGUuYW5kKGFyZywgUHJlZGljYXRlLmVxdWFsKG51bSkpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhcmcnLCBhcmcpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLnB1c2goYXJnKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdYUGF0aC5jb25zdHJ1Y3RvcicsIHRoaXMpOwogIH0KCiAgW1N5bWJvbC5pbnNwZWN0XShkZXB0aCwgb3B0cyA9IHt9KSB7CiAgICBsZXQgb2JqID0gWy4uLnRoaXNdLm1hcChHZXRLZXkpOwogICAgLy9jb25zb2xlLmxvZygnb2JqJywgb2JqKTsKICAgIHJldHVybiAoCiAgICAgIGBceDFiWzE7MzFtJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWUgPz8gdXRpbC5nZXRDbGFzc05hbWUodGhpcyl9XHgxYlswbSBgICsKICAgICAgaW5zcGVjdChvYmogPz8geyBfX3Byb3RvX186IHsgW1N5bWJvbC50b1N0cmluZ1RhZ106ICdYUGF0aCcgfSwgLi4ub2JqIH0sIHsgLi4ub3B0cywgY3VzdG9tSW5zcGVjdDogdHJ1ZSB9KQogICAgKTsKICB9CgogIHN0YXRpYyBmcm9tID0gYnVpbGRYUGF0aDsKfQoKWFBhdGgucHJvdG90eXBlW1N5bWJvbC50b1N0cmluZ1RhZ10gPSAnWFBhdGgnOwoKZXhwb3J0IGNvbnN0IEltbXV0YWJsZVhQYXRoID0gWFBhdGg7CmV4cG9ydCBjb25zdCBNdXRhYmxlWFBhdGggPSBYUGF0aDsKCmV4cG9ydCBmdW5jdGlvbiBwYXJzZVhQYXRoKHN0cikge30KCmV4cG9ydCBmdW5jdGlvbiBidWlsZFhQYXRoKHB0ciwgcm9vdCkgewogIGxldCBub2RlID0gcm9vdCwKICAgIHBhcmVudCwKICAgIHByZXZLZXksCiAgICBpID0gMCwKICAgIHBhcnRzID0gW10sCiAgICBzaWJsaW5ncywKICAgIHNpYmxpbmdTYW1lLAogICAga2V5cywKICAgIHR5cGUsCiAgICBzYW1lLAogICAgaGllciA9IFtdOwogIGZvcihsZXQga2V5IG9mIHB0cikgewogICAgLy8gaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSBrZXkgPSBHZXRLZXkoa2V5KTsKICAgIGlmKHR5cGVvZiBrZXkgPT0gJ2Z1bmN0aW9uJykgewogICAgICAvLyBjb25zb2xlLmxvZygnICcsIGNvbnNvbGUuY29uZmlnKHsgZGVwdGg6IDIgfSksIHsga2V5OiBrZXkgKyAnJywgcGFyZW50LCBub2RlIH0pOwoKICAgICAgaWYoaXNPYmplY3Qobm9kZSkgJiYgJ2xlbmd0aCcgaW4gbm9kZSkgewogICAgICAgIGxldCBhID0gQXJyYXkuZnJvbShub2RlKSwKICAgICAgICAgIGZuID0ga2V5OwogICAgICAgIC8vLyBjb25zb2xlLmxvZygnJywgaW5zcGVjdCh7IGZuOiBmbiArICcnIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CiAgICAgICAga2V5ID0gYS5maW5kSW5kZXgoZm4pOwogICAgICB9CiAgICB9CgogICAgdHlwZSA9IGtleSA9PSAnY2hpbGRyZW4nID8gJ29iamVjdCcgOiBOb2RlVHlwZShub2RlKTsKICAgIC8vY29uc29sZS5sb2coJ2tleScse2tleSx0eXBlfSk7CgogICAgaWYodHlwZSAhPSAnYXJyYXknKSB7CiAgICAgIHNpYmxpbmdTYW1lID0gW107CiAgICB9IGVsc2UgewogICAgICBzaWJsaW5ncyA9IFsuLi5ub2RlXTsKICAgICAgc2libGluZ1NhbWUgPSBzaWJsaW5ncy5yZWR1Y2UoKGFjYywgbiwgaSkgPT4gewogICAgICAgIGlmKGlzT2JqZWN0KG4pICYgaXNPYmplY3Qobm9kZVtrZXldKSkKICAgICAgICAgIGlmKG4udGFnTmFtZSA9PSBub2RlW2tleV0udGFnTmFtZSkgLyppZiAoaSAhPSBrZXkpKi8gYWNjLnB1c2goW2ksIG4udGFnTmFtZV0pOwogICAgICAgIHJldHVybiBhY2M7CiAgICAgIH0sIFtdKTsKICAgIH0KICAgIGtleXMgPSBpc09iamVjdChub2RlKSA/IE9iamVjdC5rZXlzKG5vZGUpIDogW107CgogICAgLy8gICBjb25zb2xlLmxvZygnJywgaW5zcGVjdCh7IHR5cGUsIGtleXMsIGtleSwgaSwgbm9kZSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgaWYoa2V5ID09ICdjaGlsZHJlbicpIHsKICAgICAgcGFydHMucHVzaChrZXkpOwogICAgfSBlbHNlIHsKICAgICAgc2FtZSA9IHNpYmxpbmdTYW1lLmxlbmd0aCB8fCB1bmRlZmluZWQ7CgogICAgICAvL2NvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgdHlwZSwga2V5LCBpIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CgogICAgICBsZXQgcGFydCA9IEFkZEtleShub2RlW2tleV0sIGtleSwgaSwgc2FtZSk7CgogICAgICAvKiBpZih0eXBlb2YgcGFydCA9PSAnc3RyaW5nJyAmJiBbJ3RhZ05hbWUnLCAnY2hpbGRyZW4nLCAnYXR0cmlidXRlcyddLmluZGV4T2YocGFydCkgPT0gLTEpIHsKICAgICAgICBsZXQgcHIgPSBQcmVkaWNhdGUucHJvcGVydHkoJ3RhZ05hbWUnLCBQcmVkaWNhdGUuc3RyaW5nKHBhcnQpKTsKICAgICAgICBwci50YWcgPSBwYXJ0OwogICAgICAgIHBhcnQgPSBwcjsKICAgICAgfSovCiAgICAgIHBhcnRzLnB1c2gocGFydCk7CiAgICB9CgogICAgaWYoIWlzT2JqZWN0KG5vZGUpKQogICAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgICAgYEVycm9yIGluZGV4aW5nIDwke3R5cGVvZiBub2RlfT4gd2l0aCA8JHtrZXl9PiBbJHtoaWVyLmpvaW4oJywgJyl9XTogJHtwYXJ0cy5tYXAoR2V0S2V5KS5qb2luKCcgLT4gJyl9YAogICAgICApOwoKICAgIHBhcmVudCA9IG5vZGU7CiAgICBub2RlID0gbm9kZVtrZXldOwogICAgaGllci5wdXNoKGtleSk7CiAgICBwcmV2S2V5ID0ga2V5OwogICAgaSsrOwogIH0KCiAgZnVuY3Rpb24gQWRkS2V5KG5vZGUsIGssIGksIHNhbWUpIHsKICAgIGxldCBzID0gJyc7CiAgICAvL2NvbnNvbGUubG9nKCdBZGRLZXknLCBpbnNwZWN0KG5vZGUsIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMSB9KSk7CiAgICBpZihpc09iamVjdChub2RlKSAmJiAndGFnTmFtZScgaW4gbm9kZSkgcyA9IG5vZGUudGFnTmFtZTsKCiAgICBpZih0eXBlb2YgayA9PSAnbnVtYmVyJykgewogICAgICBpZihzYW1lID4gMSkKICAgICAgICAvKmlmKG5vZGU/LmF0dHJpYnV0ZXM/Lm5hbWUpIHMgKz0gYFtAbmFtZT0iJHtub2RlLmF0dHJpYnR1ZXMubmFtZX0iXWA7CiAgICAgICAgICBlbHNlKi8KICAgICAgICBzICs9IGBbJHtrfV1gOwogICAgfSBlbHNlIGlmKHR5cGVvZiBrID09ICdzdHJpbmcnKSB7CiAgICB9CiAgICBpZihzID09PSAnJykgcyA9IHsgY2hpbGRyZW46ICcvJyB9W2tdID8/IGsgPz8gJy8nOwogICAgcmV0dXJuIHM7CiAgfQoKICBmdW5jdGlvbiBHZXRLZXkocCkgewogICAgbGV0IGs7CiAgICBpZigoaXNPYmplY3QocCkgfHwgaXNGdW5jdGlvbihwKSkgJiYgcCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkgewogICAgICBpZihwLmlkID09IFByZWRpY2F0ZS5QUk9QRVJUWSkgewogICAgICAgIGNvbnN0IHN0ciA9IHAudmFsdWVzKClbMV07CiAgICAgICAgayA9IHN0ci52YWx1ZXMoKVswXTsKICAgICAgfQogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdvYmplY3QnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uc29tZShwcm9wID0+IHByb3AgaW4gcCkpIHsKICAgICAgayA9IHAudGFnTmFtZTsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnZnVuY3Rpb24nIC8qICYmICEocCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkqLykgewogICAgICBpZigvdGFnTmFtZVxzKj09Ly50ZXN0KHAgKyAnJykpIGsgPSAocCArICcnKS5yZXBsYWNlKC8uKicoLiopJyQvLCAnJDEnKTsKICAgICAgZWxzZSBrID0gcDsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnbnVtYmVyJyB8fCB0eXBlb2YgcCA9PSAnc3RyaW5nJykgewogICAgICBrID0gcDsKICAgIH0gZWxzZSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcGFydCAoJHt1dGlsLmdldFR5cGVTdHIocCl9ICR7dHlwZW9mIHB9KTogJHtpbnNwZWN0KHAsIHsgY29sb3JzOiB0cnVlIH0pfWApOwogICAgcmV0dXJuIGs7CiAgfQogIGZ1bmN0aW9uIE5vZGVUeXBlKG5vZGUpIHsKICAgIHJldHVybiBpc09iamVjdChub2RlKQogICAgICA/ICdsZW5ndGgnIGluIG5vZGUgJiYgdHlwZW9mIG5vZGUubGVuZ3RoID09ICdudW1iZXInCiAgICAgICAgPyAnYXJyYXknCiAgICAgICAgOiB1dGlsLmdldENsYXNzTmFtZShub2RlKS50b0xvd2VyQ2FzZSgpCiAgICAgIDogdHlwZW9mIG5vZGU7CiAgfQogIGNvbnNvbGUubG9nKCdidWlsZFhQYXRoJywgcGFydHMgLyoubWFwKHAgPT4gR2V0S2V5KHApID8/IChwLnRvU3RyaW5nID8/IHAudG9Tb3VyY2UpLmNhbGwocCkpKi8pOwogIHJldHVybiBuZXcgWFBhdGgocGFydHMpOwp9CgpleHRlbmRBcnJheShYUGF0aC5wcm90b3R5cGUpOwoKZXhwb3J0IGRlZmF1bHQgWFBhdGg7CgAAAAAAAAAAjxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQQAAAAAAAA5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					5929,
					1,
					"insert",
					{
						"characters": ".map"
					},
					"BAAAAK8EAAAAAAAAsAQAAAAAAAAAAAAAsAQAAAAAAACxBAAAAAAAAAAAAACxBAAAAAAAALIEAAAAAAAAAAAAALIEAAAAAAAAswQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwQAAAAAAACvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5930,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALMEAAAAAAAAtQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswQAAAAAAACzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5931,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAALQEAAAAAAAAtQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAQAAAAAAAC0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					5932,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAALUEAAAAAAAAtgQAAAAAAAAAAAAAtgQAAAAAAAC3BAAAAAAAAAAAAAC3BAAAAAAAALgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQQAAAAAAAC1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					5933,
					1,
					"insert",
					{
						"characters": " p+"
					},
					"AwAAALgEAAAAAAAAuQQAAAAAAAAAAAAAuQQAAAAAAAC6BAAAAAAAAAAAAAC6BAAAAAAAALsEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAQAAAAAAAC4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					5934,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAALsEAAAAAAAAvQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwQAAAAAAAC7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					5943,
					8,
					"left_delete",
					null,
					"CAAAALwEAAAAAAAAvAQAAAAAAAABAAAAJ7sEAAAAAAAAuwQAAAAAAAABAAAAJ7oEAAAAAAAAugQAAAAAAAABAAAAK7kEAAAAAAAAuQQAAAAAAAABAAAAcLgEAAAAAAAAuAQAAAAAAAABAAAAILcEAAAAAAAAtwQAAAAAAAABAAAAPrYEAAAAAAAAtgQAAAAAAAABAAAAPbUEAAAAAAAAtQQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAvQQAAAAAAAC9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					5944,
					1,
					"left_delete",
					null,
					"AQAAALQEAAAAAAAAtAQAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAtQQAAAAAAAC1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					5945,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAALMEAAAAAAAAswQAAAAAAAABAAAAKLMEAAAAAAAAswQAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAtAQAAAAAAAC0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					5946,
					4,
					"left_delete",
					null,
					"BAAAALIEAAAAAAAAsgQAAAAAAAABAAAAcLEEAAAAAAAAsQQAAAAAAAABAAAAYbAEAAAAAAAAsAQAAAAAAAABAAAAba8EAAAAAAAArwQAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAswQAAAAAAACzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5973,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAAAcTAAAAAAAACBMAAAAAAAAAAAAACBMAAAAAAAAJEwAAAAAAAAAAAAAJEwAAAAAAAAoTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxMAAAAAAAAHEwAAAAAAAAAAAAAAAPC/"
				],
				[
					5974,
					1,
					"insert",
					{
						"characters": " p"
					},
					"AgAAAAoTAAAAAAAACxMAAAAAAAAAAAAACxMAAAAAAAAMEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChMAAAAAAAAKEwAAAAAAAAAAAAAAAPC/"
				],
				[
					5983,
					1,
					"cut",
					null,
					"AQAAAEMQAAAAAAAAQxAAAAAAAADOAgAACiAgZnVuY3Rpb24gR2V0S2V5KHApIHsKICAgIGxldCBrOwogICAgaWYoKGlzT2JqZWN0KHApIHx8IGlzRnVuY3Rpb24ocCkpICYmIHAgaW5zdGFuY2VvZiBQcmVkaWNhdGUpIHsKICAgICAgaWYocC5pZCA9PSBQcmVkaWNhdGUuUFJPUEVSVFkpIHsKICAgICAgICBjb25zdCBzdHIgPSBwLnZhbHVlcygpWzFdOwogICAgICAgIGsgPSBzdHIudmFsdWVzKClbMF07CiAgICAgIH0KICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnb2JqZWN0JyAmJiBbJ3RhZ05hbWUnLCAnY2hpbGRyZW4nLCAnYXR0cmlidXRlcyddLnNvbWUocHJvcCA9PiBwcm9wIGluIHApKSB7CiAgICAgIGsgPSBwLnRhZ05hbWU7CiAgICB9IGVsc2UgaWYodHlwZW9mIHAgPT0gJ2Z1bmN0aW9uJyAvKiAmJiAhKHAgaW5zdGFuY2VvZiBQcmVkaWNhdGUpKi8pIHsKICAgICAgaWYoL3RhZ05hbWVccyo9PS8udGVzdChwICsgJycpKSBrID0gKHAgKyAnJykucmVwbGFjZSgvLionKC4qKSckLywgJyQxJyk7CiAgICAgIGVsc2UgayA9IHA7CiAgICB9IGVsc2UgaWYodHlwZW9mIHAgPT0gJ251bWJlcicgfHwgdHlwZW9mIHAgPT0gJ3N0cmluZycpIHsKICAgICAgayA9IHA7CiAgICB9IGVsc2UgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHBhcnQgKCR7dXRpbC5nZXRUeXBlU3RyKHApfSAke3R5cGVvZiBwfSk6ICR7aW5zcGVjdChwLCB7IGNvbG9yczogdHJ1ZSB9KX1gKTsKICAgIHJldHVybiBrID8/IHA7CiAgfQ",
					"AQAAAAAAAAABAAAAQxAAAAAAAAAREwAAAAAAAAAAAAAAAPC/"
				],
				[
					5988,
					1,
					"paste",
					null,
					"AQAAAJARAAAAAAAAXhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBEAAAAAAACQEQAAAAAAAAAAAAAAAPC/"
				],
				[
					5991,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAF4UAAAAAAAAXxQAAAAAAAAAAAAAXxQAAAAAAABhFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhQAAAAAAABeFAAAAAAAAAAAAAAAAPC/"
				],
				[
					5996,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXFAAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQgeyBpc09iamVjdCwgaXNGdW5jdGlvbiwgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgY2xhc3MgWFBhdGggZXh0ZW5kcyBBcnJheSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoKTsKCiAgICBpZihhcmdzLmxlbmd0aCA9PSAxKSB7CiAgICAgIGlmKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSBhcmdzID0gYXJnc1swXS5zcGxpdCgvXC8vZyk7CiAgICAgIGVsc2UgaWYoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgYXJncyA9IGFyZ3NbMF07CiAgICB9CgogICAgaWYoYXJncy5sZW5ndGggPiAxICYmIGFyZ3NbMF0gPT09ICcnKSBhcmdzLnNoaWZ0KCk7CgogICAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgICBpZih0eXBlb2YgYXJnID09ICdzdHJpbmcnKSB7CiAgICAgICAgaWYoYXJnICE9ICdjaGlsZHJlbicgJiYgYXJnICE9ICdhdHRyaWJ1dGVzJykgewogICAgICAgICAgbGV0IG0gPSAvXihbQS1aYS16XVstXHddKikoXFtbMC05XStcXXwpJC8uZXhlYyhhcmcpOwogICAgICAgICAgaWYobSkgewogICAgICAgICAgICBtID0gWy4uLm1dLnNsaWNlKDEsIG1bMl0gPT09ICcnID8gMiA6IDMpOwogICAgICAgICAgICBjb25zb2xlLmxvZygnbScsIG0pOwogICAgICAgICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgICAgICAgYXJnID0gUHJlZGljYXRlLnByb3BlcnR5KCd0YWdOYW1lJywgLypzID0+IHMgPT0gbVswXSA/PyovIFByZWRpY2F0ZS5zdHJpbmcobVswXSkpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZihtLmxlbmd0aCA+PSAyKSB7CiAgICAgICAgICAgICAgbGV0IG51bSA9ICttWzFdLnNsaWNlKDEsIC0xKTsKICAgICAgICAgICAgICBhcmcgPSBQcmVkaWNhdGUuYW5kKGFyZywgUHJlZGljYXRlLmVxdWFsKG51bSkpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhcmcnLCBhcmcpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLnB1c2goYXJnKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdYUGF0aC5jb25zdHJ1Y3RvcicsIHRoaXMpOwogIH0KCiAgW1N5bWJvbC5pbnNwZWN0XShkZXB0aCwgb3B0cyA9IHt9KSB7CiAgICBsZXQgb2JqID0gWy4uLnRoaXNdLm1hcChHZXRLZXkpOwogICAgLy9jb25zb2xlLmxvZygnb2JqJywgb2JqKTsKICAgIHJldHVybiAoCiAgICAgIGBceDFiWzE7MzFtJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWUgPz8gdXRpbC5nZXRDbGFzc05hbWUodGhpcyl9XHgxYlswbSBgICsKICAgICAgaW5zcGVjdChvYmogPz8geyBfX3Byb3RvX186IHsgW1N5bWJvbC50b1N0cmluZ1RhZ106ICdYUGF0aCcgfSwgLi4ub2JqIH0sIHsgLi4ub3B0cywgY3VzdG9tSW5zcGVjdDogdHJ1ZSB9KQogICAgKTsKICB9CgogIHN0YXRpYyBmcm9tID0gYnVpbGRYUGF0aDsKfQoKWFBhdGgucHJvdG90eXBlW1N5bWJvbC50b1N0cmluZ1RhZ10gPSAnWFBhdGgnOwoKZXhwb3J0IGNvbnN0IEltbXV0YWJsZVhQYXRoID0gWFBhdGg7CmV4cG9ydCBjb25zdCBNdXRhYmxlWFBhdGggPSBYUGF0aDsKCmV4cG9ydCBmdW5jdGlvbiBwYXJzZVhQYXRoKHN0cikge30KCmV4cG9ydCBmdW5jdGlvbiBidWlsZFhQYXRoKHB0ciwgcm9vdCkgewogIGxldCBub2RlID0gcm9vdCwKICAgIHBhcmVudCwKICAgIHByZXZLZXksCiAgICBpID0gMCwKICAgIHBhcnRzID0gW10sCiAgICBzaWJsaW5ncywKICAgIHNpYmxpbmdTYW1lLAogICAga2V5cywKICAgIHR5cGUsCiAgICBzYW1lLAogICAgaGllciA9IFtdOwogIGZvcihsZXQga2V5IG9mIHB0cikgewogICAgLy8gaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSBrZXkgPSBHZXRLZXkoa2V5KTsKICAgIGlmKHR5cGVvZiBrZXkgPT0gJ2Z1bmN0aW9uJykgewogICAgICAvLyBjb25zb2xlLmxvZygnICcsIGNvbnNvbGUuY29uZmlnKHsgZGVwdGg6IDIgfSksIHsga2V5OiBrZXkgKyAnJywgcGFyZW50LCBub2RlIH0pOwoKICAgICAgaWYoaXNPYmplY3Qobm9kZSkgJiYgJ2xlbmd0aCcgaW4gbm9kZSkgewogICAgICAgIGxldCBhID0gQXJyYXkuZnJvbShub2RlKSwKICAgICAgICAgIGZuID0ga2V5OwogICAgICAgIC8vLyBjb25zb2xlLmxvZygnJywgaW5zcGVjdCh7IGZuOiBmbiArICcnIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CiAgICAgICAga2V5ID0gYS5maW5kSW5kZXgoZm4pOwogICAgICB9CiAgICB9CgogICAgdHlwZSA9IGtleSA9PSAnY2hpbGRyZW4nID8gJ29iamVjdCcgOiBOb2RlVHlwZShub2RlKTsKICAgIC8vY29uc29sZS5sb2coJ2tleScse2tleSx0eXBlfSk7CgogICAgaWYodHlwZSAhPSAnYXJyYXknKSB7CiAgICAgIHNpYmxpbmdTYW1lID0gW107CiAgICB9IGVsc2UgewogICAgICBzaWJsaW5ncyA9IFsuLi5ub2RlXTsKICAgICAgc2libGluZ1NhbWUgPSBzaWJsaW5ncy5yZWR1Y2UoKGFjYywgbiwgaSkgPT4gewogICAgICAgIGlmKGlzT2JqZWN0KG4pICYgaXNPYmplY3Qobm9kZVtrZXldKSkKICAgICAgICAgIGlmKG4udGFnTmFtZSA9PSBub2RlW2tleV0udGFnTmFtZSkgLyppZiAoaSAhPSBrZXkpKi8gYWNjLnB1c2goW2ksIG4udGFnTmFtZV0pOwogICAgICAgIHJldHVybiBhY2M7CiAgICAgIH0sIFtdKTsKICAgIH0KICAgIGtleXMgPSBpc09iamVjdChub2RlKSA/IE9iamVjdC5rZXlzKG5vZGUpIDogW107CgogICAgLy8gICBjb25zb2xlLmxvZygnJywgaW5zcGVjdCh7IHR5cGUsIGtleXMsIGtleSwgaSwgbm9kZSB9LCB7IC4uLmNvbnNvbGUub3B0aW9ucywgZGVwdGg6IDIgfSkpOwogICAgaWYoa2V5ID09ICdjaGlsZHJlbicpIHsKICAgICAgcGFydHMucHVzaChrZXkpOwogICAgfSBlbHNlIHsKICAgICAgc2FtZSA9IHNpYmxpbmdTYW1lLmxlbmd0aCB8fCB1bmRlZmluZWQ7CgogICAgICAvL2NvbnNvbGUubG9nKCcnLCBpbnNwZWN0KHsgdHlwZSwga2V5LCBpIH0sIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMiB9KSk7CgogICAgICBsZXQgcGFydCA9IEFkZEtleShub2RlW2tleV0sIGtleSwgaSwgc2FtZSk7CgogICAgICAvKiBpZih0eXBlb2YgcGFydCA9PSAnc3RyaW5nJyAmJiBbJ3RhZ05hbWUnLCAnY2hpbGRyZW4nLCAnYXR0cmlidXRlcyddLmluZGV4T2YocGFydCkgPT0gLTEpIHsKICAgICAgICBsZXQgcHIgPSBQcmVkaWNhdGUucHJvcGVydHkoJ3RhZ05hbWUnLCBQcmVkaWNhdGUuc3RyaW5nKHBhcnQpKTsKICAgICAgICBwci50YWcgPSBwYXJ0OwogICAgICAgIHBhcnQgPSBwcjsKICAgICAgfSovCiAgICAgIHBhcnRzLnB1c2gocGFydCk7CiAgICB9CgogICAgaWYoIWlzT2JqZWN0KG5vZGUpKQogICAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgICAgYEVycm9yIGluZGV4aW5nIDwke3R5cGVvZiBub2RlfT4gd2l0aCA8JHtrZXl9PiBbJHtoaWVyLmpvaW4oJywgJyl9XTogJHtwYXJ0cy5tYXAoR2V0S2V5KS5qb2luKCcgLT4gJyl9YAogICAgICApOwoKICAgIHBhcmVudCA9IG5vZGU7CiAgICBub2RlID0gbm9kZVtrZXldOwogICAgaGllci5wdXNoKGtleSk7CiAgICBwcmV2S2V5ID0ga2V5OwogICAgaSsrOwogIH0KCiAgZnVuY3Rpb24gQWRkS2V5KG5vZGUsIGssIGksIHNhbWUpIHsKICAgIGxldCBzID0gJyc7CiAgICAvL2NvbnNvbGUubG9nKCdBZGRLZXknLCBpbnNwZWN0KG5vZGUsIHsgLi4uY29uc29sZS5vcHRpb25zLCBkZXB0aDogMSB9KSk7CiAgICBpZihpc09iamVjdChub2RlKSAmJiAndGFnTmFtZScgaW4gbm9kZSkgcyA9IG5vZGUudGFnTmFtZTsKCiAgICBpZih0eXBlb2YgayA9PSAnbnVtYmVyJykgewogICAgICBpZihzYW1lID4gMSkKICAgICAgICAvKmlmKG5vZGU/LmF0dHJpYnV0ZXM/Lm5hbWUpIHMgKz0gYFtAbmFtZT0iJHtub2RlLmF0dHJpYnR1ZXMubmFtZX0iXWA7CiAgICAgICAgICBlbHNlKi8KICAgICAgICBzICs9IGBbJHtrfV1gOwogICAgfSBlbHNlIGlmKHR5cGVvZiBrID09ICdzdHJpbmcnKSB7CiAgICB9CiAgICBpZihzID09PSAnJykgcyA9IHsgY2hpbGRyZW46ICcvJyB9W2tdID8/IGsgPz8gJy8nOwogICAgcmV0dXJuIHM7CiAgfQoKICBmdW5jdGlvbiBOb2RlVHlwZShub2RlKSB7CiAgICByZXR1cm4gaXNPYmplY3Qobm9kZSkKICAgICAgPyAnbGVuZ3RoJyBpbiBub2RlICYmIHR5cGVvZiBub2RlLmxlbmd0aCA9PSAnbnVtYmVyJwogICAgICAgID8gJ2FycmF5JwogICAgICAgIDogdXRpbC5nZXRDbGFzc05hbWUobm9kZSkudG9Mb3dlckNhc2UoKQogICAgICA6IHR5cGVvZiBub2RlOwogIH0KICBjb25zb2xlLmxvZygnYnVpbGRYUGF0aCcsIHBhcnRzIC8qLm1hcChwID0+IEdldEtleShwKSA/PyAocC50b1N0cmluZyA/PyBwLnRvU291cmNlKS5jYWxsKHApKSovKTsKICByZXR1cm4gbmV3IFhQYXRoKHBhcnRzKTsKfQoKICBmdW5jdGlvbiBHZXRLZXkocCkgewogICAgbGV0IGs7CiAgICBpZigoaXNPYmplY3QocCkgfHwgaXNGdW5jdGlvbihwKSkgJiYgcCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkgewogICAgICBpZihwLmlkID09IFByZWRpY2F0ZS5QUk9QRVJUWSkgewogICAgICAgIGNvbnN0IHN0ciA9IHAudmFsdWVzKClbMV07CiAgICAgICAgayA9IHN0ci52YWx1ZXMoKVswXTsKICAgICAgfQogICAgfSBlbHNlIGlmKHR5cGVvZiBwID09ICdvYmplY3QnICYmIFsndGFnTmFtZScsICdjaGlsZHJlbicsICdhdHRyaWJ1dGVzJ10uc29tZShwcm9wID0+IHByb3AgaW4gcCkpIHsKICAgICAgayA9IHAudGFnTmFtZTsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnZnVuY3Rpb24nIC8qICYmICEocCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkqLykgewogICAgICBpZigvdGFnTmFtZVxzKj09Ly50ZXN0KHAgKyAnJykpIGsgPSAocCArICcnKS5yZXBsYWNlKC8uKicoLiopJyQvLCAnJDEnKTsKICAgICAgZWxzZSBrID0gcDsKICAgIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnbnVtYmVyJyB8fCB0eXBlb2YgcCA9PSAnc3RyaW5nJykgewogICAgICBrID0gcDsKICAgIH0gZWxzZSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcGFydCAoJHt1dGlsLmdldFR5cGVTdHIocCl9ICR7dHlwZW9mIHB9KTogJHtpbnNwZWN0KHAsIHsgY29sb3JzOiB0cnVlIH0pfWApOwogICAgcmV0dXJuIGsgPz8gcDsKICB9CiAgCmV4dGVuZEFycmF5KFhQYXRoLnByb3RvdHlwZSk7CgpleHBvcnQgZGVmYXVsdCBYUGF0aDsKAAAAAAAAAABzFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYRQAAAAAAABhFAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "predicate.c",
			"settings":
			{
				"buffer_size": 34190,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1224,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAP0wAAAAAAAA/TAAAAAAAAAAAAAAAAPC/"
				],
				[
					1225,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAP0wAAAAAAAA/TAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "qjsm.c",
			"settings":
			{
				"buffer_size": 34647,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAEMJAAAAAAAARAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwkAAAAAAABDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAAEMJAAAAAAAAQwkAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAARAkAAAAAAABECQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAEMJAAAAAAAARAkAAAAAAAAAAAAARAkAAAAAAABFCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwkAAAAAAABDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJYIAAAAAAAAlwgAAAAAAAAAAAAAlwgAAAAAAACYCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlggAAAAAAACWCAAAAAAAAAAAAAAAAAAA"
				],
				[
					29,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAABBQAAAAAAAAEFAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"",
					null,
					"AQAAAJYIAAAAAAAAmAgAAAAAAAAEAAAALy8vLw",
					"AQAAAAAAAAABAAAAlggAAAAAAACaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"",
					null,
					"AQAAAEUJAAAAAAAARwkAAAAAAAAEAAAALy8vLw",
					"AQAAAAAAAAABAAAARQkAAAAAAABJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABThwAAI2luY2x1ZGUgPHN0ZGxpYi5oPgojaW5jbHVkZSA8c3RkaW8uaD4KI2luY2x1ZGUgPHN0ZGFyZy5oPgojaW5jbHVkZSA8aW50dHlwZXMuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8YXNzZXJ0Lmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KI2luY2x1ZGUgPGVycm5vLmg+CiNpbmNsdWRlIDxmY250bC5oPgojaW5jbHVkZSA8dGltZS5oPgojaW5jbHVkZSA8c2lnbmFsLmg+Ci8qI2luY2x1ZGUgPHN5cy9wb2xsLmg+Ki8KI2lmIGRlZmluZWQoX19BUFBMRV9fKQojaW5jbHVkZSA8bWFsbG9jL21hbGxvYy5oPgojZWxpZiBkZWZpbmVkKF9fbGludXhfXykKI2luY2x1ZGUgPG1hbGxvYy5oPgojZW5kaWYKI2lmICFkZWZpbmVkKF9fd2FzaV9fKSAmJiAhZGVmaW5lZChfV0lOMzIpCiNpbmNsdWRlIDxkbGZjbi5oPgojZW5kaWYKCiNpZiAxIC8vIGRlZiBIQVZFX1FVSUNLSlNfQ09ORklHX0gKI2luY2x1ZGUgPHF1aWNranMtY29uZmlnLmg+CiNlbmRpZgoKI2lmZGVmIFVTRV9XT1JLRVIKI2luY2x1ZGUgPHB0aHJlYWQuaD4KI2luY2x1ZGUgPHN0ZGF0b21pYy5oPgoKc3RhdGljIGludAphdG9taWNfYWRkX2ludChpbnQqIHB0ciwgaW50IHYpIHsKICByZXR1cm4gYXRvbWljX2ZldGNoX2FkZCgoX0F0b21pYyh1aW50MzJfdCkqKXB0ciwgdikgKyB2Owp9CiNlbmRpZgoKI2luY2x1ZGUgPGxpc3QuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAicGF0aC5oIgojaW5jbHVkZSAidXRpbHMuaCIKI2luY2x1ZGUgInZlY3Rvci5oIgojaW5jbHVkZSA8cXVpY2tqcy1saWJjLmg+CiNpbmNsdWRlICJxdWlja2pzLWludGVybmFsLmgiCiNpbmNsdWRlICJidWZmZXItdXRpbHMuaCIKCnR5cGVkZWYgSlNNb2R1bGVEZWYqIE1vZHVsZUltcG9ydEZ1bmN0aW9uKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKik7CgovKnR5cGVkZWYgc3RydWN0IHBvbGxoYW5kbGVyIHsKICBzdHJ1Y3QgcG9sbGZkIHBmOwogIHZvaWQgKCpoYW5kbGVyKSh2b2lkKiBvcGFxdWUsIHN0cnVjdCBwb2xsZmQqKTsKICB2b2lkKiBvcGFxdWU7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwp9IHBvbGxoYW5kbGVyX3Q7Cgp0aHJlYWRfbG9jYWwgdWludDY0X3QganNtX3BlbmRpbmdfc2lnbmFscyA9IDA7CnN0cnVjdCBsaXN0X2hlYWQgcG9sbGhhbmRsZXJzOyovCgp2b2lkIGpzX3N0ZF9zZXRfbW9kdWxlX2xvYWRlcl9mdW5jKEpTTW9kdWxlTG9hZGVyRnVuYyogZnVuYyk7CgojaWYgIURPTlRfSEFWRV9NQUxMT0NfVVNBQkxFX1NJWkUgJiYgIWRlZmluZWQoQU5EUk9JRCkKI2lmIEhBVkVfTUFMTE9DX1VTQUJMRV9TSVpFCiNpZm5kZWYgSEFWRV9NQUxMT0NfVVNBQkxFX1NJWkVfREVGSU5JVElPTgpleHRlcm4gc2l6ZV90IG1hbGxvY191c2FibGVfc2l6ZSgpOwojZW5kaWYKI2VuZGlmCiNlbmRpZgoKI2RlZmluZSB0cmltX2RvdHNsYXNoKHN0cikgKCFzdHJuY21wKChzdHIpLCAiLi8iLCAyKSA/IChzdHIpICsgMiA6IChzdHIpKQoKc3RydWN0IGpzbV9tb2R1bGVfcmVjb3JkIHsKICBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZTsKICBKU01vZHVsZURlZiogKCptb2R1bGVfZnVuYykoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwogIHVpbnQ4X3QqIGJ5dGVfY29kZTsKICB1aW50MzJfdCBieXRlX2NvZGVfbGVuOwogIEpTTW9kdWxlRGVmKiBkZWY7Cn07CgojZGVmaW5lIGpzbV9tb2R1bGVfZXh0ZXJuX2NvbXBpbGVkKG5hbWUpIFwKICBleHRlcm4gY29uc3QgdWludDhfdCBxanNjXyMjbmFtZVtdOyBcCiAgZXh0ZXJuIGNvbnN0IHVpbnQzMl90IHFqc2NfIyNuYW1lIyNfc2l6ZTsKCiNkZWZpbmUganNtX21vZHVsZV9leHRlcm5fbmF0aXZlKG5hbWUpIGV4dGVybiBKU01vZHVsZURlZioganNfaW5pdF9tb2R1bGVfIyNuYW1lKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKQoKI2RlZmluZSBqc21fbW9kdWxlX3JlY29yZF9jb21waWxlZChuYW1lKSBcCiAgKHN0cnVjdCBqc21fbW9kdWxlX3JlY29yZCkgeyAjbmFtZSwgMCwgcWpzY18jI25hbWUsIHFqc2NfIyNuYW1lIyNfc2l6ZSwgMCB9CgojZGVmaW5lIGpzbV9tb2R1bGVfcmVjb3JkX25hdGl2ZShuYW1lKSBcCiAgKHN0cnVjdCBqc21fbW9kdWxlX3JlY29yZCkgeyAjbmFtZSwganNfaW5pdF9tb2R1bGVfIyNuYW1lLCAwLCAwLCAwIH0KCmpzbV9tb2R1bGVfZXh0ZXJuX25hdGl2ZShzdGQpOwpqc21fbW9kdWxlX2V4dGVybl9uYXRpdmUob3MpOwovL2pzbV9tb2R1bGVfZXh0ZXJuX25hdGl2ZShjaGlsZF9wcm9jZXNzKTsKanNtX21vZHVsZV9leHRlcm5fbmF0aXZlKGRlZXApOwpqc21fbW9kdWxlX2V4dGVybl9uYXRpdmUoaW5zcGVjdCk7CmpzbV9tb2R1bGVfZXh0ZXJuX25hdGl2ZShsZXhlcik7CmpzbV9tb2R1bGVfZXh0ZXJuX25hdGl2ZShtaXNjKTsKLy9qc21fbW9kdWxlX2V4dGVybl9uYXRpdmUobW1hcCk7CmpzbV9tb2R1bGVfZXh0ZXJuX25hdGl2ZShwYXRoKTsKanNtX21vZHVsZV9leHRlcm5fbmF0aXZlKHBvaW50ZXIpOwpqc21fbW9kdWxlX2V4dGVybl9uYXRpdmUocHJlZGljYXRlKTsKanNtX21vZHVsZV9leHRlcm5fbmF0aXZlKHJlcGVhdGVyKTsKanNtX21vZHVsZV9leHRlcm5fbmF0aXZlKHRyZWVfd2Fsa2VyKTsKanNtX21vZHVsZV9leHRlcm5fbmF0aXZlKHhtbCk7Cgpqc21fbW9kdWxlX2V4dGVybl9jb21waWxlZChjb25zb2xlKTsKanNtX21vZHVsZV9leHRlcm5fY29tcGlsZWQoZXZlbnRzKTsKanNtX21vZHVsZV9leHRlcm5fY29tcGlsZWQoZnMpOwpqc21fbW9kdWxlX2V4dGVybl9jb21waWxlZChwZXJmX2hvb2tzKTsKanNtX21vZHVsZV9leHRlcm5fY29tcGlsZWQocHJvY2Vzcyk7CmpzbV9tb2R1bGVfZXh0ZXJuX2NvbXBpbGVkKHJlcGwpOwpqc21fbW9kdWxlX2V4dGVybl9jb21waWxlZChyZXF1aXJlKTsKanNtX21vZHVsZV9leHRlcm5fY29tcGlsZWQodHR5KTsKanNtX21vZHVsZV9leHRlcm5fY29tcGlsZWQodXRpbCk7CgpzdGF0aWMgdGhyZWFkX2xvY2FsIFZlY3RvciBqc21fc2NyaXB0czsKc3RhdGljIHRocmVhZF9sb2NhbCBWZWN0b3IganNtX21vZHVsZXM7CnN0YXRpYyB0aHJlYWRfbG9jYWwgQk9PTCBqc21fbW9kdWxlc19pbml0aWFsaXplZDsKCiNpZmRlZiBDT05GSUdfQklHTlVNCmpzbV9tb2R1bGVfZXh0ZXJuX2NvbXBpbGVkKHFqc2NhbGMpOwpzdGF0aWMgaW50IGJpZ251bV9leHQgPSAxOwojZW5kaWYKCnZvaWQganNfc3RkX3NldF93b3JrZXJfbmV3X2NvbnRleHRfZnVuYyhKU0NvbnRleHQqICgqZnVuYykoSlNSdW50aW1lKiBydCkpOwoKc3RhdGljIHZvaWQKanNtX2R1bXBfZXJyb3IoSlNDb250ZXh0KiBjdHgpIHsKICAvKkpTUnVudGltZSogcnQgPSBKU19HZXRSdW50aW1lKGN0eCk7CiAgSlNWYWx1ZSBlcnJvciA9IHJ0LT5jdXJyZW50X2V4Y2VwdGlvbjsqLwogIC8qcHJpbnRmKCJxanNtOiBjdXJyZW50X2V4Y2VwdGlvbiAweCUwOHhcbiIsIG9mZnNldG9mKEpTUnVudGltZSwgY3VycmVudF9leGNlcHRpb24pKTsKICBwcmludGYoInFqc206IHNpemVvZihzdHJ1Y3QgbGlzdF9oZWFkKSAweCUwOHhcbiIsIHNpemVvZihzdHJ1Y3QgbGlzdF9oZWFkKSk7Ki8KCiAganNfZXJyb3JfcHJpbnQoY3R4LCBKU19HZXRFeGNlcHRpb24oY3R4KSk7Cn0KCnN0YXRpYyBpbnQgZGVidWdfbW9kdWxlX2xvYWRlciA9IDA7CnN0YXRpYyBWZWN0b3IgbW9kdWxlX2RlYnVnID0gVkVDVE9SX0lOSVQoKTsKc3RhdGljIHRocmVhZF9sb2NhbCBWZWN0b3IgbW9kdWxlX2xpc3QgPSBWRUNUT1JfSU5JVCgpOwovLyBzdGF0aWMgVmVjdG9yIGJ1aWx0aW5zID0gVkVDVE9SX0lOSVQoKTsKCnN0YXRpYyBjb25zdCBjaGFyIGpzbV9kZWZhdWx0X21vZHVsZV9wYXRoW10gPSAiLiIKI2lmZGVmIFFVSUNLSlNfTU9EVUxFX1BBVEgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICI6IiBRVUlDS0pTX01PRFVMRV9QQVRICiNlbGlmIGRlZmluZWQoQ09ORklHX1BSRUZJWCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICI6IiBDT05GSUdfUFJFRklYICIvbGliL3F1aWNranMiCiNlbmRpZgogICAgOwoKSlNWYWx1ZSBwYWNrYWdlX2pzb247CgpzdGF0aWMgSlNWYWx1ZQpqc21fZXZhbF9idWYoSlNDb250ZXh0KiBjdHgsIGNvbnN0IHZvaWQqIGJ1ZiwgaW50IGJ1Zl9sZW4sIGNvbnN0IGNoYXIqIGZpbGVuYW1lLCBpbnQgZXZhbF9mbGFncykgewogIEpTVmFsdWUgdmFsOwoKICBpZigoZXZhbF9mbGFncyAmIEpTX0VWQUxfVFlQRV9NQVNLKSA9PSBKU19FVkFMX1RZUEVfTU9EVUxFKSB7CiAgICAvKiBmb3IgdGhlIG1vZHVsZXMsIHdlIGNvbXBpbGUgdGhlbiBydW4gdG8gYmUgYWJsZSB0byBzZXQgaW1wb3J0Lm1ldGEgKi8KICAgIHZhbCA9IEpTX0V2YWwoY3R4LCBidWYsIGJ1Zl9sZW4sIGZpbGVuYW1lLCBldmFsX2ZsYWdzIHwgSlNfRVZBTF9GTEFHX0NPTVBJTEVfT05MWSk7CiAgICBpZighSlNfSXNFeGNlcHRpb24odmFsKSkgewogICAgICBqc19tb2R1bGVfc2V0X2ltcG9ydF9tZXRhKGN0eCwgdmFsLCBUUlVFLCBUUlVFKTsKICAgICAgSlNfRXZhbEZ1bmN0aW9uKGN0eCwgdmFsKTsKICAgIH0KICB9IGVsc2UgewogICAgdmFsID0gSlNfRXZhbChjdHgsIGJ1ZiwgYnVmX2xlbiwgZmlsZW5hbWUsIGV2YWxfZmxhZ3MpOwogIH0KICBpZihKU19Jc0V4Y2VwdGlvbih2YWwpKQogICAganNfZXJyb3JfcHJpbnQoY3R4LCBKU19HZXRSdW50aW1lKGN0eCktPmN1cnJlbnRfZXhjZXB0aW9uKTsKCiAganNtX2R1bXBfZXJyb3IoY3R4KTsKICByZXR1cm4gdmFsOwp9Cgp2b2lkCmpzbV9pbml0X21vZHVsZXMoSlNDb250ZXh0KiBjdHgpIHsKICBqc19kYnVmX2luaXQoY3R4LCAmanNtX21vZHVsZXMpOwoKI2RlZmluZSBqc21fYnVpbHRpbl9uYXRpdmUobmFtZSkgdmVjdG9yX3B1c2goJmpzbV9tb2R1bGVzLCBqc21fbW9kdWxlX3JlY29yZF9uYXRpdmUobmFtZSkpOwoKICBqc21fYnVpbHRpbl9uYXRpdmUoc3RkKTsKICBqc21fYnVpbHRpbl9uYXRpdmUob3MpOwogIC8vanNtX2J1aWx0aW5fbmF0aXZlKGNoaWxkX3Byb2Nlc3MpOwogIGpzbV9idWlsdGluX25hdGl2ZShkZWVwKTsKICBqc21fYnVpbHRpbl9uYXRpdmUoaW5zcGVjdCk7CiAganNtX2J1aWx0aW5fbmF0aXZlKGxleGVyKTsKICBqc21fYnVpbHRpbl9uYXRpdmUobWlzYyk7CiAgLy9qc21fYnVpbHRpbl9uYXRpdmUobW1hcCk7CiAganNtX2J1aWx0aW5fbmF0aXZlKHBhdGgpOwogIGpzbV9idWlsdGluX25hdGl2ZShwb2ludGVyKTsKICBqc21fYnVpbHRpbl9uYXRpdmUocHJlZGljYXRlKTsKICBqc21fYnVpbHRpbl9uYXRpdmUocmVwZWF0ZXIpOwogIGpzbV9idWlsdGluX25hdGl2ZSh0cmVlX3dhbGtlcik7CiAganNtX2J1aWx0aW5fbmF0aXZlKHhtbCk7CgogIC8vIHByaW50ZigibmF0aXZlIGJ1aWx0aW5zOiAiKTsgZHVtcF92ZWN0b3IoJmJ1aWx0aW5zLCAwKTsKCiNkZWZpbmUganNtX2J1aWx0aW5fY29tcGlsZWQobmFtZSkgdmVjdG9yX3B1c2goJmpzbV9tb2R1bGVzLCBqc21fbW9kdWxlX3JlY29yZF9jb21waWxlZChuYW1lKSk7CgogIGpzbV9idWlsdGluX2NvbXBpbGVkKGNvbnNvbGUpOwogIGpzbV9idWlsdGluX2NvbXBpbGVkKGV2ZW50cyk7CiAganNtX2J1aWx0aW5fY29tcGlsZWQoZnMpOwogIGpzbV9idWlsdGluX2NvbXBpbGVkKHBlcmZfaG9va3MpOwogIGpzbV9idWlsdGluX2NvbXBpbGVkKHByb2Nlc3MpOwogIGpzbV9idWlsdGluX2NvbXBpbGVkKHJlcGwpOwogIGpzbV9idWlsdGluX2NvbXBpbGVkKHJlcXVpcmUpOwogIGpzbV9idWlsdGluX2NvbXBpbGVkKHR0eSk7CiAganNtX2J1aWx0aW5fY29tcGlsZWQodXRpbCk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzbV9sb2FkX3BhY2thZ2UoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIGZpbGUpIHsKICBpZihKU19Jc1VuZGVmaW5lZChwYWNrYWdlX2pzb24pKSB7CiAgICB1aW50OF90KiBidWY7CiAgICBzaXplX3QgbGVuOwogICAgaWYoZmlsZSA9PSAwKQogICAgICBmaWxlID0gInBhY2thZ2UuanNvbiI7CiAgICBpZighKGJ1ZiA9IGpzX2xvYWRfZmlsZShjdHgsICZsZW4sIGZpbGUpKSkKICAgICAgcGFja2FnZV9qc29uID0gSlNfTlVMTDsKICAgIGVsc2UKICAgICAgcGFja2FnZV9qc29uID0gSlNfUGFyc2VKU09OKGN0eCwgYnVmLCBsZW4sIGZpbGUpOwogIH0KICByZXR1cm4gSlNfRHVwVmFsdWUoY3R4LCBwYWNrYWdlX2pzb24pOwp9CgpzdGF0aWMgc3RydWN0IGpzbV9tb2R1bGVfcmVjb3JkKgpqc21fbW9kdWxlX2ZpbmQoY29uc3QgY2hhciogbmFtZSkgewogIHN0cnVjdCBqc21fbW9kdWxlX3JlY29yZCogcmVjOwogIHZlY3Rvcl9mb3JlYWNoX3QoJmpzbV9tb2R1bGVzLCByZWMpIHsKICAgIGlmKCFzdHJjbXAocmVjLT5tb2R1bGVfbmFtZSwgbmFtZSkpCiAgICAgIHJldHVybiByZWM7CiAgfQogIHJldHVybiAwOwp9CgpzdGF0aWMgSlNNb2R1bGVEZWYqCmpzbV9tb2R1bGVfaW5pdChKU0NvbnRleHQqIGN0eCwgc3RydWN0IGpzbV9tb2R1bGVfcmVjb3JkKiByZWMpIHsKICBKU01vZHVsZURlZiogbTsKICBpZihyZWMtPmRlZiA9PSAwKSB7CiAgICBpZihkZWJ1Z19tb2R1bGVfbG9hZGVyKQogICAgICBwcmludGYoIlx4MWJbNDg7NTsyMTRtKDMpXHgxYlswbSAlLTMwcyBpbnRlcm5hbFxuIiwgcmVjLT5tb2R1bGVfbmFtZSk7CiAgICBpZihyZWMtPm1vZHVsZV9mdW5jKSB7CiAgICAgIG0gPSByZWMtPm1vZHVsZV9mdW5jKGN0eCwgcmVjLT5tb2R1bGVfbmFtZSk7CgogICAgICAvLyBtLT5pbml0X2Z1bmMoY3R4LCBtKTsKCiAgICB9IGVsc2UgewogICAgICBKU1ZhbHVlIG9iaiA9IGpzX2V2YWxfYmluYXJ5KGN0eCwgcmVjLT5ieXRlX2NvZGUsIHJlYy0+Ynl0ZV9jb2RlX2xlbiwgMCk7CiAgICAgIG0gPSBKU19WQUxVRV9HRVRfUFRSKG9iaik7CiAgICB9CiAgICByZWMtPmRlZiA9IG07CiAgfQogIHJldHVybiByZWMtPmRlZjsKfQoKSlNNb2R1bGVEZWYqCmpzbV9tb2R1bGVfbG9hZChKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbmFtZSkgewogIEpTUnVudGltZSogcnQgPSBKU19HZXRSdW50aW1lKGN0eCk7CiAgSlNNb2R1bGVEZWYqIG07CgogIG0gPSBydC0+bW9kdWxlX2xvYWRlcl9mdW5jKGN0eCwgbmFtZSwgMCk7CiAgLy8gcHJpbnRmKCJqc21fbW9kdWxlX2xvYWQoJXAsICVzKSA9ICVwXG4iLCBjdHgsIG5hbWUsIG0pOwogIGlmKG0pIHsKICAgIEpTVmFsdWUgZXhwID0gbW9kdWxlX2V4cG9ydHMoY3R4LCBtKTsKICAgIEpTVmFsdWUgZ2xiID0gSlNfR2V0R2xvYmFsT2JqZWN0KGN0eCk7CiAgICBpZighanNfaGFzX3Byb3BlcnR5c3RyKGN0eCwgZ2xiLCBuYW1lKSkKICAgICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBnbGIsIG5hbWUsIGV4cCk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBnbGIpOwogIH0KCiAgcmV0dXJuIG07Cn0KCkpTTW9kdWxlRGVmKgpqc21fbW9kdWxlX2xvYWRlcihKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbmFtZSwgdm9pZCogb3BhcXVlKSB7CiAgY2hhciAqbW9kdWxlLCAqZmlsZSA9IDA7CiAgSlNNb2R1bGVEZWYqIG0gPSAwOwoKICBpZighanNtX21vZHVsZXNfaW5pdGlhbGl6ZWQpIHsKICAgIGpzbV9pbml0X21vZHVsZXMoY3R4KTsKICAgIGpzbV9tb2R1bGVzX2luaXRpYWxpemVkID0gVFJVRTsKICB9CgogIG1vZHVsZSA9IGpzX3N0cmR1cChjdHgsIHRyaW1fZG90c2xhc2gobmFtZSkpOwogIGZvcig7OykgewogICAgaWYoZGVidWdfbW9kdWxlX2xvYWRlciA+IDEpIHsKICAgICAgaWYoZmlsZSkKICAgICAgICBwcmludGYoIlx4MWJbNDg7NTsyMTRtKDEpXHgxYlswbSAlLTMwcyAnJXMnXG4iLCBuYW1lLCBmaWxlKTsKICAgICAgLyogIGVsc2UgIHByaW50ZigianNtX21vZHVsZV9sb2FkZXJbJXhdIFx4MWJbNDg7NTsxMjRtKDEpXHgxYlswbSAlLTIwcyAtPgogICAgICAgKiAlc1xuIiwgcHRocmVhZF9zZWxmKCksIHRyaW1fZG90c2xhc2gobmFtZSksIHRyaW1fZG90c2xhc2gobW9kdWxlKSk7Ki8KICAgIH0KICAgIGlmKCFzdHJjaHIobW9kdWxlLCAnLycpKSB7CiAgICAgIHN0cnVjdCBqc21fbW9kdWxlX3JlY29yZCogcmVjOwoKICAgICAgaWYoKHJlYyA9IGpzbV9tb2R1bGVfZmluZChtb2R1bGUpKSkgewogICAgICAgIG0gPSBqc21fbW9kdWxlX2luaXQoY3R4LCByZWMpOwogICAgICAgIGdvdG8gZW5kOwogICAgICB9CiAgICB9CgogICAgaWYoIWhhc19zdWZmaXgobmFtZSwgIi5zbyIpICYmICFmaWxlKSB7CiAgICAgIEpTVmFsdWUgcGFja2FnZSA9IGpzbV9sb2FkX3BhY2thZ2UoY3R4LCAwKTsKICAgICAgaWYoIUpTX0lzTnVsbChwYWNrYWdlKSkgewogICAgICAgIEpTVmFsdWUgYWxpYXNlcyA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgcGFja2FnZSwgIl9tb2R1bGVBbGlhc2VzIik7CiAgICAgICAgSlNWYWx1ZSB0YXJnZXQgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaWYoIUpTX0lzVW5kZWZpbmVkKGFsaWFzZXMpKSB7CiAgICAgICAgICB0YXJnZXQgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGFsaWFzZXMsIG1vZHVsZSk7CiAgICAgICAgfQogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGFsaWFzZXMpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHBhY2thZ2UpOwogICAgICAgIGlmKCFKU19Jc1VuZGVmaW5lZCh0YXJnZXQpKSB7CiAgICAgICAgICBjb25zdCBjaGFyKiBzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCB0YXJnZXQpOwogICAgICAgICAgaWYoc3RyKSB7CiAgICAgICAgICAgIGlmKGRlYnVnX21vZHVsZV9sb2FkZXIpCiAgICAgICAgICAgICAgcHJpbnRmKCJceDFiWzQ4OzU7MjhtKDIpXHgxYlswbSAlLTMwcyA9PiAlc1xuIiwgbW9kdWxlLCBzdHIpOwoKICAgICAgICAgICAganNfZnJlZShjdHgsIG1vZHVsZSk7CgogICAgICAgICAgICBtb2R1bGUgPSBqc19zdHJkdXAoY3R4LCBzdHIpOwogICAgICAgICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogICAgaWYoIWZpbGUpIHsKICAgICAgaWYoc3RyY2hyKCIuLyIsIG1vZHVsZVswXSkpCiAgICAgICAgZmlsZSA9IGpzX3N0cmR1cChjdHgsIG1vZHVsZSk7CiAgICAgIGVsc2UgaWYoIShmaWxlID0ganNfbW9kdWxlX3NlYXJjaChjdHgsIGpzbV9kZWZhdWx0X21vZHVsZV9wYXRoLCBtb2R1bGUpKSkKICAgICAgICBicmVhazsKICAgICAgY29udGludWU7CiAgICB9CiAgICBicmVhazsKICB9CiAgaWYoZmlsZSkgewogICAgaWYoZGVidWdfbW9kdWxlX2xvYWRlcikKICAgICAgaWYoc3RyY21wKHRyaW1fZG90c2xhc2gobW9kdWxlKSwgdHJpbV9kb3RzbGFzaChmaWxlKSkpCiAgICAgICAgcHJpbnRmKCJceDFiWzQ4OzU7MjFtKDMpXHgxYlswbSAlLTMwcyAtPiAlc1xuIiwgbW9kdWxlLCBmaWxlKTsKCiAgICBtID0ganNfbW9kdWxlX2xvYWRlcihjdHgsIGZpbGUsIG9wYXF1ZSk7CiAgfQplbmQ6CiAgaWYodmVjdG9yX2ZpbmRzKCZtb2R1bGVfZGVidWcsICJpbXBvcnQiKSAhPSAtMSkgewogICAgZnByaW50ZihzdGRlcnIsICghZmlsZSB8fCBzdHJjbXAobW9kdWxlLCBmaWxlKSkgPyAiISEhIElNUE9SVCAlcyAtPiAlc1xuIiA6ICIhISEgSU1QT1JUICVzXG4iLCBtb2R1bGUsIGZpbGUpOwogIH0KICBpZighbSkKICAgIHByaW50ZigianNtX21vZHVsZV9sb2FkZXIoXCIlc1wiKSA9ICVwXG4iLCBuYW1lLCBtKTsKICBpZihtb2R1bGUpCiAgICBqc19mcmVlKGN0eCwgbW9kdWxlKTsKICBpZihmaWxlKQogICAganNfZnJlZShjdHgsIGZpbGUpOwogIHJldHVybiBtOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc21fZXZhbF9maWxlKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBmaWxlLCBCT09MIG1vZHVsZSkgewogIHVpbnQ4X3QqIGJ1ZjsKICBzaXplX3QgbGVuOwogIGludCBmbGFnczsKCiAgYnVmID0ganNfbG9hZF9maWxlKGN0eCwgJmxlbiwgZmlsZSk7CiAgaWYoIWJ1ZikgewogICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJGYWlsZWQgbG9hZGluZyAnJXMnOiAlcyIsIGZpbGUsIHN0cmVycm9yKGVycm5vKSk7CiAgfQoKICBpZihtb2R1bGUgPCAwKQogICAgbW9kdWxlID0gKGhhc19zdWZmaXgoZmlsZSwgIi5tanMiKSB8fCBKU19EZXRlY3RNb2R1bGUoKGNvbnN0IGNoYXIqKWJ1ZiwgbGVuKSk7CiAgZmxhZ3MgPSBtb2R1bGUgPyBKU19FVkFMX1RZUEVfTU9EVUxFIDogSlNfRVZBTF9UWVBFX0dMT0JBTDsKICByZXR1cm4ganNtX2V2YWxfYnVmKGN0eCwgYnVmLCBsZW4sIGZpbGUsIGZsYWdzKTsKfQoKZW51bSB7CiAgU0NSSVBUX0xJU1QsCiAgU0NSSVBUX0ZJTEUsCiAgU0NSSVBUX0ZJTEVOQU1FLAogIFNDUklQVF9ESVJOQU1FLAp9OwoKc3RhdGljIGNoYXIqCmpzbV9zY3JpcHRfZmlsZSgpIHsKICBjaGFyKiByZXQgPSAwOwogIGlmKCF2ZWN0b3JfZW1wdHkoJmpzbV9zY3JpcHRzKSkgewogICAgY2hhcioqIHB0ciA9IHZlY3Rvcl9iYWNrKCZqc21fc2NyaXB0cywgc2l6ZW9mKGNoYXIqKSk7CiAgICByZXQgPSAqcHRyOwogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc21fc2NyaXB0X2dldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFNDUklQVF9MSVNUOiB7CiAgICAgIGNoYXIqKiBwdHI7CiAgICAgIHNpemVfdCBpID0gMDsKICAgICAgcmV0ID0gSlNfTmV3QXJyYXkoY3R4KTsKICAgICAgdmVjdG9yX2ZvcmVhY2hfdCgmanNtX3NjcmlwdHMsIHB0cikgewogICAgICAgIEpTVmFsdWUgc3RyID0gSlNfTmV3U3RyaW5nKGN0eCwgKnB0cik7CiAgICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIGkrKywgc3RyKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgU0NSSVBUX0ZJTEU6CiAgICBjYXNlIFNDUklQVF9GSUxFTkFNRTogewogICAgICBjaGFyKiBzdHI7CiAgICAgIGlmKChzdHIgPSBqc21fc2NyaXB0X2ZpbGUoKSkpCiAgICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgc3RyKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFNDUklQVF9ESVJOQU1FOiB7CiAgICAgIGNoYXIqIGZpbGU7CiAgICAgIGlmKChmaWxlID0ganNtX3NjcmlwdF9maWxlKCkpKSB7CiAgICAgICAgY2hhciogZGlyOwogICAgICAgIGlmKChkaXIgPSBwYXRoX2Rpcm5hbWUoZmlsZSkpKSB7CiAgICAgICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBkaXIpOwogICAgICAgICAgZnJlZShkaXIpOwogICAgICAgIH0KICAgICAgfQogICAgICBicmVhazsKICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIHZvaWQKanNtX3NjcmlwdF9wdXNoKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBmaWxlKSB7CiAgdmVjdG9yX3B1dHB0cigmanNtX3NjcmlwdHMsIGpzX3N0cmR1cChjdHgsIGZpbGUpKTsKfQoKc3RhdGljIHZvaWQKanNtX3NjcmlwdF9wb3AoSlNDb250ZXh0KiBjdHgpIHsKICBjaGFyKiogcHRyOwoKICBwdHIgPSB2ZWN0b3JfYmFjaygmanNtX3NjcmlwdHMsIHNpemVvZihjaGFyKikpOwogIGpzX2ZyZWUoY3R4LCAqcHRyKTsKICB2ZWN0b3JfcG9wKCZqc21fc2NyaXB0cywgc2l6ZW9mKGNoYXIqKSk7Cn0KCnN0YXRpYyBpbnQKanNtX3NjcmlwdF9sb2FkKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBmaWxlLCBCT09MIG1vZHVsZSkgewogIEpTVmFsdWUgdmFsOwogIGludDMyX3QgcmV0ID0gMDsKICBKU1ZhbHVlIGdsb2JhbF9vYmogPSBKU19HZXRHbG9iYWxPYmplY3QoY3R4KTsKCiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBnbG9iYWxfb2JqLCAibW9kdWxlIiwgSlNfTmV3T2JqZWN0KGN0eCkpOwogIGpzbV9zY3JpcHRfcHVzaChjdHgsIGZpbGUpOwoKICB2YWwgPSBqc21fZXZhbF9maWxlKGN0eCwgZmlsZSwgbW9kdWxlKTsKICBqc21fc2NyaXB0X3BvcChjdHgpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHZhbCkpIHsKICAgIGZwcmludGYoc3RkZXJyLCAiRmFpbGVkIGxvYWRpbmcgJyVzJzogJXNcbiIsIGZpbGUsIHN0cmVycm9yKGVycm5vKSk7CiAgICBqc192YWx1ZV9md3JpdGUoY3R4LCB2YWwsIHN0ZGVycik7CiAgICByZXQgPSAtMTsKICB9IGVsc2UgaWYoSlNfSXNNb2R1bGUodmFsKSkgewogICAgbW9kdWxlX2V4cG9ydHNfZ2V0KGN0eCwgSlNfVkFMVUVfR0VUX1BUUih2YWwpLCBUUlVFLCBnbG9iYWxfb2JqKTsKICB9IGVsc2UgewogICAgSlNfVG9JbnQzMihjdHgsICZyZXQsIHZhbCk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWwpOwogIH0KICBKU19GcmVlVmFsdWUoY3R4LCBnbG9iYWxfb2JqKTsKICByZXR1cm4gcmV0Owp9CgovKiBhbHNvIHVzZWQgdG8gaW5pdGlhbGl6ZSB0aGUgd29ya2VyIGNvbnRleHQgKi8Kc3RhdGljIEpTQ29udGV4dCoKanNtX2NvbnRleHRfbmV3KEpTUnVudGltZSogcnQpIHsKICBKU0NvbnRleHQqIGN0eDsKICBjdHggPSBKU19OZXdDb250ZXh0KHJ0KTsKICBpZighY3R4KQogICAgcmV0dXJuIDA7CiNpZmRlZiBDT05GSUdfQklHTlVNCiAgaWYoYmlnbnVtX2V4dCkgewogICAgSlNfQWRkSW50cmluc2ljQmlnRmxvYXQoY3R4KTsKICAgIEpTX0FkZEludHJpbnNpY0JpZ0RlY2ltYWwoY3R4KTsKICAgIEpTX0FkZEludHJpbnNpY09wZXJhdG9ycyhjdHgpOwogICAgSlNfRW5hYmxlQmlnbnVtRXh0KGN0eCwgVFJVRSk7CiAgfQojZW5kaWYKCiNkZWZpbmUganNtX21vZHVsZV9uYXRpdmUobmFtZSkganNfaW5pdF9tb2R1bGVfIyNuYW1lKGN0eCwgI25hbWUpOwoKICAvKiBqc21fbW9kdWxlX25hdGl2ZShzdGQpOwogICBqc21fbW9kdWxlX25hdGl2ZShvcyk7CiAjaWZuZGVmIF9fd2FzaV9fCiAgIC8vanNtX21vZHVsZV9uYXRpdmUoY2hpbGRfcHJvY2Vzcyk7CiAjZW5kaWYKICAganNtX21vZHVsZV9uYXRpdmUoZGVlcCk7CiAgIGpzbV9tb2R1bGVfbmF0aXZlKGluc3BlY3QpOwogICBqc21fbW9kdWxlX25hdGl2ZShsZXhlcik7CiAgIGpzbV9tb2R1bGVfbmF0aXZlKG1pc2MpOwogI2lmbmRlZiBfX3dhc2lfXwogICAvL2pzbV9tb2R1bGVfbmF0aXZlKG1tYXApOwogI2VuZGlmCiAgIGpzbV9tb2R1bGVfbmF0aXZlKHBhdGgpOwogICBqc21fbW9kdWxlX25hdGl2ZShwb2ludGVyKTsKICAganNtX21vZHVsZV9uYXRpdmUocHJlZGljYXRlKTsKICAganNtX21vZHVsZV9uYXRpdmUocmVwZWF0ZXIpOwogICBqc21fbW9kdWxlX25hdGl2ZSh0cmVlX3dhbGtlcik7CiAgIGpzbV9tb2R1bGVfbmF0aXZlKHhtbCk7Ki8KICByZXR1cm4gY3R4Owp9CgojaWYgZGVmaW5lZChfX0FQUExFX18pCiNkZWZpbmUgTUFMTE9DX09WRVJIRUFEIDAKI2Vsc2UKI2RlZmluZSBNQUxMT0NfT1ZFUkhFQUQgOAojZW5kaWYKCnN0cnVjdCB0cmFjZV9tYWxsb2NfZGF0YSB7CiAgdWludDhfdCogYmFzZTsKfTsKCnN0YXRpYyB2b2lkCmR1bXBfdmVjdG9yKGNvbnN0IFZlY3RvciogdmVjLCBzaXplX3Qgc3RhcnQpIHsKICBzaXplX3QgaSwgbGVuID0gdmVjdG9yX3NpemUodmVjLCBzaXplb2YoY2hhciopKTsKICBmb3IoaSA9IHN0YXJ0OyBpIDwgbGVuOyBpKyspIHsKICAgIGNvbnN0IGNoYXIqIHN0ciA9ICooY2hhcioqKXZlY3Rvcl9hdCh2ZWMsIHNpemVvZihjaGFyKiksIGkpOwogICAgZnB1dHMoaSA+IHN0YXJ0ID8gIicsXG4gICciIDogIltcbiAgJyIsIHN0ZG91dCk7CiAgICBmcHV0cyhzdHIsIHN0ZG91dCk7CiAgICBpZihpICsgMSA9PSBsZW4pCiAgICAgIHB1dHMoIidcbl0iKTsKICB9Cn0KCnN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBsb25nCmpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldCh1aW50OF90KiBwdHIsIHN0cnVjdCB0cmFjZV9tYWxsb2NfZGF0YSogZHApIHsKICByZXR1cm4gcHRyIC0gZHAtPmJhc2U7Cn0KCi8qIGRlZmF1bHQgbWVtb3J5IGFsbG9jYXRpb24gZnVuY3Rpb25zIHdpdGggbWVtb3J5IGxpbWl0YXRpb24gKi8Kc3RhdGljIGlubGluZSBzaXplX3QKanNtX3RyYWNlX21hbGxvY191c2FibGVfc2l6ZSh2b2lkKiBwdHIpIHsKI2lmIGRlZmluZWQoX19BUFBMRV9fKQogIHJldHVybiBtYWxsb2Nfc2l6ZShwdHIpOwojZWxpZiBkZWZpbmVkKF9XSU4zMikKICByZXR1cm4gX21zaXplKHB0cik7CiNlbGlmIGRlZmluZWQoRU1TQ1JJUFRFTikgfHwgZGVmaW5lZChfX2RpZXRsaWJjX18pIHx8IGRlZmluZWQoX19NU1lTX18pIHx8IGRlZmluZWQoQU5EUk9JRCkgfHwgZGVmaW5lZChET05UX0hBVkVfTUFMTE9DX1VTQUJMRV9TSVpFKQogIHJldHVybiAwOwojZWxpZiBkZWZpbmVkKF9fbGludXhfXykgfHwgZGVmaW5lZChIQVZFX01BTExPQ19VU0FCTEVfU0laRSkKICByZXR1cm4gbWFsbG9jX3VzYWJsZV9zaXplKHB0cik7CiNlbHNlCiN3YXJuaW5nIGNoYW5nZSB0aGlzIHRvIGByZXR1cm4gMDtgIGlmIGNvbXBpbGF0aW9uIGZhaWxzCiAgLyogY2hhbmdlIHRoaXMgdG8gYHJldHVybiAwO2AgaWYgY29tcGlsYXRpb24gZmFpbHMgKi8KICByZXR1cm4gbWFsbG9jX3VzYWJsZV9zaXplKHB0cik7CiNlbmRpZgp9CgpzdGF0aWMgdm9pZAojaWZkZWYgX1dJTjMyCiAgICAvKiBtaW5ndyBwcmludGYgaXMgdXNlZCAqLwogICAgX19hdHRyaWJ1dGVfXygoZm9ybWF0KGdudV9wcmludGYsIDIsIDMpKSkKI2Vsc2UKICAgIF9fYXR0cmlidXRlX18oKGZvcm1hdChwcmludGYsIDIsIDMpKSkKI2VuZGlmCiAgICBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZihKU01hbGxvY1N0YXRlKiBzLCBjb25zdCBjaGFyKiBmbXQsIC4uLikgewogIHZhX2xpc3QgYXA7CiAgaW50IGM7CgogIHZhX3N0YXJ0KGFwLCBmbXQpOwogIHdoaWxlKChjID0gKmZtdCsrKSAhPSAnXDAnKSB7CiAgICBpZihjID09ICclJykgewogICAgICAvKiBvbmx5IGhhbmRsZSAlcCBhbmQgJXpkICovCiAgICAgIGlmKCpmbXQgPT0gJ3AnKSB7CiAgICAgICAgdWludDhfdCogcHRyID0gdmFfYXJnKGFwLCB2b2lkKik7CiAgICAgICAgaWYocHRyID09IDApIHsKICAgICAgICAgIHByaW50ZigiMCIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwcmludGYoIkglKzA2bGxkLiV6ZCIsIGpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldChwdHIsIHMtPm9wYXF1ZSksIGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUocHRyKSk7CiAgICAgICAgfQogICAgICAgIGZtdCsrOwogICAgICAgIGNvbnRpbnVlOwogICAgICB9CiAgICAgIGlmKGZtdFswXSA9PSAneicgJiYgZm10WzFdID09ICdkJykgewogICAgICAgIHNpemVfdCBzeiA9IHZhX2FyZyhhcCwgc2l6ZV90KTsKICAgICAgICBwcmludGYoIiV6ZCIsIHN6KTsKICAgICAgICBmbXQgKz0gMjsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgfQogICAgcHV0YyhjLCBzdGRvdXQpOwogIH0KICB2YV9lbmQoYXApOwp9CgpzdGF0aWMgdm9pZApqc21fdHJhY2VfbWFsbG9jX2luaXQoc3RydWN0IHRyYWNlX21hbGxvY19kYXRhKiBzKSB7CiAgZnJlZShzLT5iYXNlID0gbWFsbG9jKDgpKTsKfQoKc3RhdGljIHZvaWQqCmpzbV90cmFjZV9tYWxsb2MoSlNNYWxsb2NTdGF0ZSogcywgc2l6ZV90IHNpemUpIHsKICB2b2lkKiBwdHI7CgogIC8qIERvIG5vdCBhbGxvY2F0ZSB6ZXJvIGJ5dGVzOiBiZWhhdmlvciBpcyBwbGF0Zm9ybSBkZXBlbmRlbnQgKi8KICBhc3NlcnQoc2l6ZSAhPSAwKTsKCiAgaWYodW5saWtlbHkocy0+bWFsbG9jX3NpemUgKyBzaXplID4gcy0+bWFsbG9jX2xpbWl0KSkKICAgIHJldHVybiAwOwogIHB0ciA9IG1hbGxvYyhzaXplKTsKICBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZihzLCAiQSAlemQgLT4gJXBcbiIsIHNpemUsIHB0cik7CiAgaWYocHRyKSB7CiAgICBzLT5tYWxsb2NfY291bnQrKzsKICAgIHMtPm1hbGxvY19zaXplICs9IGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUocHRyKSArIE1BTExPQ19PVkVSSEVBRDsKICB9CiAgcmV0dXJuIHB0cjsKfQoKc3RhdGljIHZvaWQKanNtX3RyYWNlX2ZyZWUoSlNNYWxsb2NTdGF0ZSogcywgdm9pZCogcHRyKSB7CiAgaWYoIXB0cikKICAgIHJldHVybjsKCiAganNtX3RyYWNlX21hbGxvY19wcmludGYocywgIkYgJXBcbiIsIHB0cik7CiAgcy0+bWFsbG9jX2NvdW50LS07CiAgcy0+bWFsbG9jX3NpemUgLT0ganNtX3RyYWNlX21hbGxvY191c2FibGVfc2l6ZShwdHIpICsgTUFMTE9DX09WRVJIRUFEOwogIGZyZWUocHRyKTsKfQoKc3RhdGljIHZvaWQqCmpzbV90cmFjZV9yZWFsbG9jKEpTTWFsbG9jU3RhdGUqIHMsIHZvaWQqIHB0ciwgc2l6ZV90IHNpemUpIHsKICBzaXplX3Qgb2xkX3NpemU7CgogIGlmKCFwdHIpIHsKICAgIGlmKHNpemUgPT0gMCkKICAgICAgcmV0dXJuIDA7CiAgICByZXR1cm4ganNtX3RyYWNlX21hbGxvYyhzLCBzaXplKTsKICB9CiAgb2xkX3NpemUgPSBqc21fdHJhY2VfbWFsbG9jX3VzYWJsZV9zaXplKHB0cik7CiAgaWYoc2l6ZSA9PSAwKSB7CiAgICBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZihzLCAiUiAlemQgJXBcbiIsIHNpemUsIHB0cik7CiAgICBzLT5tYWxsb2NfY291bnQtLTsKICAgIHMtPm1hbGxvY19zaXplIC09IG9sZF9zaXplICsgTUFMTE9DX09WRVJIRUFEOwogICAgZnJlZShwdHIpOwogICAgcmV0dXJuIDA7CiAgfQogIGlmKHMtPm1hbGxvY19zaXplICsgc2l6ZSAtIG9sZF9zaXplID4gcy0+bWFsbG9jX2xpbWl0KQogICAgcmV0dXJuIDA7CgogIGpzbV90cmFjZV9tYWxsb2NfcHJpbnRmKHMsICJSICV6ZCAlcCIsIHNpemUsIHB0cik7CgogIHB0ciA9IHJlYWxsb2MocHRyLCBzaXplKTsKICBqc21fdHJhY2VfbWFsbG9jX3ByaW50ZihzLCAiIC0+ICVwXG4iLCBwdHIpOwogIGlmKHB0cikgewogICAgcy0+bWFsbG9jX3NpemUgKz0ganNtX3RyYWNlX21hbGxvY191c2FibGVfc2l6ZShwdHIpIC0gb2xkX3NpemU7CiAgfQogIHJldHVybiBwdHI7Cn0KCnN0YXRpYyBjb25zdCBKU01hbGxvY0Z1bmN0aW9ucyB0cmFjZV9tZiA9IHsKICAgIGpzbV90cmFjZV9tYWxsb2MsCiAgICBqc21fdHJhY2VfZnJlZSwKICAgIGpzbV90cmFjZV9yZWFsbG9jLAojaWYgZGVmaW5lZChfX0FQUExFX18pCiAgICBtYWxsb2Nfc2l6ZSwKI2VsaWYgZGVmaW5lZChfV0lOMzIpCiAgICAoc2l6ZV90KCopKGNvbnN0IHZvaWQqKSlfbXNpemUsCiNlbGlmIGRlZmluZWQoRU1TQ1JJUFRFTikgfHwgZGVmaW5lZChfX2RpZXRsaWJjX18pIHx8IGRlZmluZWQoX19NU1lTX18pIHx8IGRlZmluZWQoQU5EUk9JRCkgfHwgXAogICAgZGVmaW5lZChET05UX0hBVkVfTUFMTE9DX1VTQUJMRV9TSVpFX0RFRklOSVRJT04pCiAgICAwLAojZWxpZiBkZWZpbmVkKF9fbGludXhfXykgfHwgZGVmaW5lZChIQVZFX01BTExPQ19VU0FCTEVfU0laRSkKICAgIChzaXplX3QoKikoY29uc3Qgdm9pZCopKW1hbGxvY191c2FibGVfc2l6ZSwKI2Vsc2UKI3dhcm5pbmcgY2hhbmdlIHRoaXMgdG8gYDAsYCBpZiBjb21waWxhdGlvbiBmYWlscwogICAgLyogY2hhbmdlIHRoaXMgdG8gYDAsYCBpZiBjb21waWxhdGlvbiBmYWlscyAqLwogICAgbWFsbG9jX3VzYWJsZV9zaXplLAojZW5kaWYKfTsKCiNkZWZpbmUgUFJPR19OQU1FICJxanNtIgoKdm9pZApqc21faGVscCh2b2lkKSB7CiAgcHJpbnRmKCJRdWlja0pTIHZlcnNpb24gIiBDT05GSUdfVkVSU0lPTiAiXG4iCiAgICAgICAgICJ1c2FnZTogIiBQUk9HX05BTUUgIiBbb3B0aW9uc10gW2ZpbGUgW2FyZ3NdXVxuIgogICAgICAgICAiLWggIC0taGVscCAgICAgICAgIGxpc3Qgb3B0aW9uc1xuIgogICAgICAgICAiLWUgIC0tZXZhbCBFWFBSICAgIGV2YWx1YXRlIEVYUFJcbiIKICAgICAgICAgIi1pICAtLWludGVyYWN0aXZlICBnbyB0byBpbnRlcmFjdGl2ZSBtb2RlXG4iCiAgICAgICAgICItbSAgLS1tb2R1bGUgTkFNRSAgbG9hZCBhbiBFUzYgbW9kdWxlXG4iCiAgICAgICAgICItSSAgLS1pbmNsdWRlIGZpbGUgaW5jbHVkZSBhbiBhZGRpdGlvbmFsIGZpbGVcbiIKICAgICAgICAgIiAgICAtLXN0ZCAgICAgICAgICBtYWtlICdzdGQnIGFuZCAnb3MnIGF2YWlsYWJsZSB0byB0aGUgbG9hZGVkIHNjcmlwdFxuIgojaWZkZWYgQ09ORklHX0JJR05VTQogICAgICAgICAiICAgIC0tbm8tYmlnbnVtICAgIGRpc2FibGUgdGhlIGJpZ251bSBleHRlbnNpb25zIChCaWdGbG9hdCwgIgogICAgICAgICAiQmlnRGVjaW1hbClcbiIKICAgICAgICAgIiAgICAtLXFqc2NhbGMgICAgICBsb2FkIHRoZSBRSlNDYWxjIHJ1bnRpbWUgKGRlZmF1bHQgaWYgaW52b2tlZCBhcyAiCiAgICAgICAgICJxanNjYWxjKVxuIgojZW5kaWYKICAgICAgICAgIi1UICAtLXRyYWNlICAgICAgICB0cmFjZSBtZW1vcnkgYWxsb2NhdGlvblxuIgogICAgICAgICAiLWQgIC0tZHVtcCAgICAgICAgIGR1bXAgdGhlIG1lbW9yeSB1c2FnZSBzdGF0c1xuIgogICAgICAgICAiICAgIC0tbWVtb3J5LWxpbWl0IG4gICAgICAgbGltaXQgdGhlIG1lbW9yeSB1c2FnZSB0byAnbicgYnl0ZXNcbiIKICAgICAgICAgIiAgICAtLXN0YWNrLXNpemUgbiAgICAgICAgIGxpbWl0IHRoZSBzdGFjayBzaXplIHRvICduJyBieXRlc1xuIgogICAgICAgICAiICAgIC0tdW5oYW5kbGVkLXJlamVjdGlvbiAgZHVtcCB1bmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb25zXG4iCiAgICAgICAgICItcSAgLS1xdWl0ICAgICAgICAganVzdCBpbnN0YW50aWF0ZSB0aGUgaW50ZXJwcmV0ZXIgYW5kIHF1aXRcbiIpOwogIGV4aXQoMSk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzbV9ldmFsX3NjcmlwdChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgY29uc3QgY2hhciogc3RyOwogIHNpemVfdCBsZW47CiAgSlNWYWx1ZSByZXQ7CiAgaW50MzJfdCBtb2R1bGU7CiAgc3RyID0gSlNfVG9DU3RyaW5nTGVuKGN0eCwgJmxlbiwgYXJndlswXSk7CiAgaWYoYXJnYyA+IDEpCiAgICBKU19Ub0ludDMyKGN0eCwgJm1vZHVsZSwgYXJndlsxXSk7CiAgZWxzZQogICAgbW9kdWxlID0gc3RyX2VuZHMoc3RyLCAiLm1qcyIpOwogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSAwOiB7CiAgICAgIHJldCA9IGpzbV9ldmFsX2ZpbGUoY3R4LCBzdHIsIG1vZHVsZSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAxOiB7CiAgICAgIHJldCA9IGpzbV9ldmFsX2J1ZihjdHgsIHN0ciwgbGVuLCAwLCBtb2R1bGUpOwogICAgICBicmVhazsKICAgIH0KICB9CiAgaWYoSlNfSXNFeGNlcHRpb24ocmV0KSkgewogICAgaWYoSlNfSXNOdWxsKEpTX0dldFJ1bnRpbWUoY3R4KS0+Y3VycmVudF9leGNlcHRpb24pKSB7CiAgICAgIHJldCA9IEpTX0dldEV4Y2VwdGlvbihjdHgpOwogICAgICAvLyByZXQgPSBKU19VTkRFRklORUQ7CiAgICB9CiAgfQogIGlmKEpTX1ZBTFVFX0dFVF9UQUcocmV0KSA9PSBKU19UQUdfTU9EVUxFKSB7CiAgICBKU01vZHVsZURlZiogbSA9IEpTX1ZBTFVFX0dFVF9QVFIocmV0KTsKICAgIEpTVmFsdWUgb2JqID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgIm5hbWUiLCBtb2R1bGVfbmFtZShjdHgsIG0pKTsKICAgIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAiZXhwb3J0cyIsIG1vZHVsZV9leHBvcnRzKGN0eCwgbSkpOwogICAgcmV0ID0gb2JqOwogIH0KICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CiAgcmV0dXJuIHJldDsKfQoKZW51bSB7CiAgRklORF9NT0RVTEUsCiAgTE9BRF9NT0RVTEUsCiAgUkVTT0xWRV9NT0RVTEUsCiAgR0VUX01PRFVMRV9OQU1FLAogIEdFVF9NT0RVTEVfT0JKRUNULAogIEdFVF9NT0RVTEVfRVhQT1JUUywKICBHRVRfTU9EVUxFX05BTUVTUEFDRSwKICBHRVRfTU9EVUxFX0ZVTkNUSU9OLAogIEdFVF9NT0RVTEVfRVhDRVBUSU9OLAogIEdFVF9NT0RVTEVfTUVUQV9PQkosCn07CgpzdGF0aWMgSlNWYWx1ZQpqc21fbW9kdWxlX2Z1bmMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTVmFsdWUgdmFsID0gSlNfRVhDRVBUSU9OOwogIEpTTW9kdWxlRGVmKiBtID0gMDsKICBjb25zdCBjaGFyKiBuYW1lID0gMDsKCiAgaWYobWFnaWMgPj0gR0VUX01PRFVMRV9OQU1FKSB7CiAgICBpZighKG0gPSBqc19tb2R1bGVfZGVmKGN0eCwgYXJndlswXSkpKQogICAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIiVzOiBhcmd1bWVudCAxIGV4cGVjdGluZyBtb2R1bGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKChjb25zdCBjaGFyKiBjb25zdFtdKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZ2V0TW9kdWxlTmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImdldE1vZHVsZU9iamVjdCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImdldE1vZHVsZUV4cG9ydHMiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJnZXRNb2R1bGVOYW1lc3BhY2UiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJnZXRNb2R1bGVGdW5jdGlvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImdldE1vZHVsZUV4Y2VwdGlvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImdldE1vZHVsZU1ldGFPYmplY3QiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlbbWFnaWMgLSAzXSk7CiAgfSBlbHNlIHsKICAgIG5hbWUgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzBdKTsKICB9CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBGSU5EX01PRFVMRTogewogICAgICBpZigobSA9IGpzX21vZHVsZV9maW5kKGN0eCwgbmFtZSkpKQogICAgICAgIHZhbCA9IEpTX0R1cFZhbHVlKGN0eCwgSlNfTUtQVFIoSlNfVEFHX01PRFVMRSwgbSkpOwogICAgICBlbHNlCiAgICAgICAgdmFsID0gSlNfTlVMTDsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExPQURfTU9EVUxFOiB7CiAgICAgIEpTUnVudGltZSogcnQgPSBKU19HZXRSdW50aW1lKGN0eCk7CgogICAgICBJbXBvcnREaXJlY3RpdmUgaW1wOwogICAgICBtZW1zZXQoJmltcCwgMCwgc2l6ZW9mKGltcCkpOwogICAgICBpbnQgciwgbiA9IGNvdW50b2YoaW1wLmFyZ3MpOwogICAgICByID0ganNfc3Rydl9jb3B5cyhjdHgsIGFyZ2MsIGFyZ3YsIG4sIGltcC5hcmdzKTsKICAgICAgLy8gcHJpbnRmKCJMT0FEX01PRFVMRSByPSVpIGFyZ2M9JWlcbiIsIHIsIGFyZ2MpOwoKICAgICAgbSA9IHJ0LT5tb2R1bGVfbG9hZGVyX2Z1bmMoY3R4LCBpbXAuYXJnc1swXSwgMCk7CgogICAgICAvLyAgdmFsID0ganNfaW1wb3J0X2V2YWwoY3R4LCBpbXApOwoKICAgICAgLyogICBpZihKU19Jc01vZHVsZSh2YWwpKQogICAgICAgICAgIG0gPSBKU19WQUxVRV9HRVRfUFRSKHZhbCk7CiAgICAgICAgIGVsc2UqLwogICAgICAvLyBtID0ganNfbW9kdWxlX2ZpbmQoY3R4LCBpbXAucGF0aCk7CgogICAgICBpZihtKQogICAgICAgIHZhbCA9IEpTX01LUFRSKEpTX1RBR19NT0RVTEUsIG0pOwogICAgICAvLyB2YWwgPSBtb2R1bGVfb2JqZWN0KGN0eCwgbSk7CgogICAgICBqc19zdHJ2X2ZyZWVfbihjdHgsIG4sIGltcC5hcmdzKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFU09MVkVfTU9EVUxFOiB7CiAgICAgIHZhbCA9IEpTX05ld0ludDMyKGN0eCwgSlNfUmVzb2x2ZU1vZHVsZShjdHgsIEpTX01LUFRSKEpTX1RBR19NT0RVTEUsIG0pKSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHRVRfTU9EVUxFX05BTUU6IHsKICAgICAgdmFsID0gbW9kdWxlX25hbWUoY3R4LCBtKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdFVF9NT0RVTEVfT0JKRUNUOiB7CiAgICAgIHZhbCA9IG1vZHVsZV9vYmplY3QoY3R4LCBtKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdFVF9NT0RVTEVfRVhQT1JUUzogewogICAgICB2YWwgPSBtb2R1bGVfZXhwb3J0cyhjdHgsIG0pOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR0VUX01PRFVMRV9OQU1FU1BBQ0U6IHsKICAgICAgdmFsID0gSlNfRHVwVmFsdWUoY3R4LCBtLT5tb2R1bGVfbnMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR0VUX01PRFVMRV9GVU5DVElPTjogewoKICAgICAgdmFsID0gbW9kdWxlX2Z1bmMoY3R4LCBtKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdFVF9NT0RVTEVfRVhDRVBUSU9OOiB7CiAgICAgIGlmKG0tPmV2YWxfaGFzX2V4Y2VwdGlvbikKICAgICAgICB2YWwgPSBKU19EdXBWYWx1ZShjdHgsIG0tPmV2YWxfZXhjZXB0aW9uKTsKICAgICAgZWxzZQogICAgICAgIHZhbCA9IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHRVRfTU9EVUxFX01FVEFfT0JKOiB7CiAgICAgIHZhbCA9IEpTX0R1cFZhbHVlKGN0eCwgbS0+bWV0YV9vYmopOwogICAgICBicmVhazsKICAgIH0KICB9CiAgaWYobmFtZSkKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbmFtZSk7CgogIHJldHVybiB2YWw7Cn0KCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc21fZ2xvYmFsX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImV2YWxGaWxlIiwgMSwganNtX2V2YWxfc2NyaXB0LCAwKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZXZhbFNjcmlwdCIsIDEsIGpzbV9ldmFsX3NjcmlwdCwgMSksCiAgICBKU19DR0VUU0VUX0RFRigibW9kdWxlTGlzdCIsIGpzX21vZHVsZXNfYXJyYXksIDApLAogICAgSlNfQ0dFVFNFVF9ERUYoIm1vZHVsZU9iamVjdCIsIGpzX21vZHVsZXNfb2JqZWN0LCAwKSwKICAgIEpTX0NHRVRTRVRfREVGKCJtb2R1bGVNYXAiLCBqc19tb2R1bGVzX21hcCwgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigic2NyaXB0TGlzdCIsIGpzbV9zY3JpcHRfZ2V0LCAwLCBTQ1JJUFRfTElTVCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigic2NyaXB0RmlsZSIsIGpzbV9zY3JpcHRfZ2V0LCAwLCBTQ1JJUFRfRklMRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiX19maWxlbmFtZSIsIGpzbV9zY3JpcHRfZ2V0LCAwLCBTQ1JJUFRfRklMRU5BTUUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoIl9fZGlybmFtZSIsIGpzbV9zY3JpcHRfZ2V0LCAwLCBTQ1JJUFRfRElSTkFNRSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImZpbmRNb2R1bGUiLCAxLCBqc21fbW9kdWxlX2Z1bmMsIEZJTkRfTU9EVUxFKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigibG9hZE1vZHVsZSIsIDEsIGpzbV9tb2R1bGVfZnVuYywgTE9BRF9NT0RVTEUpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyZXNvbHZlTW9kdWxlIiwgMSwganNtX21vZHVsZV9mdW5jLCBSRVNPTFZFX01PRFVMRSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldE1vZHVsZU5hbWUiLCAxLCBqc21fbW9kdWxlX2Z1bmMsIEdFVF9NT0RVTEVfTkFNRSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldE1vZHVsZU9iamVjdCIsIDEsIGpzbV9tb2R1bGVfZnVuYywgR0VUX01PRFVMRV9PQkpFQ1QpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRNb2R1bGVFeHBvcnRzIiwgMSwganNtX21vZHVsZV9mdW5jLCBHRVRfTU9EVUxFX0VYUE9SVFMpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRNb2R1bGVOYW1lc3BhY2UiLCAxLCBqc21fbW9kdWxlX2Z1bmMsIEdFVF9NT0RVTEVfTkFNRVNQQUNFKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0TW9kdWxlRnVuY3Rpb24iLCAxLCBqc21fbW9kdWxlX2Z1bmMsIEdFVF9NT0RVTEVfRlVOQ1RJT04pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRNb2R1bGVFeGNlcHRpb24iLCAxLCBqc21fbW9kdWxlX2Z1bmMsIEdFVF9NT0RVTEVfRVhDRVBUSU9OKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0TW9kdWxlTWV0YU9iamVjdCIsIDEsIGpzbV9tb2R1bGVfZnVuYywgR0VUX01PRFVMRV9NRVRBX09CSiksCn07Cgp2b2lkCmpzbV9pbXBvcnRfcGFyc2UoSW1wb3J0RGlyZWN0aXZlKiBpbXAsIGNvbnN0IGNoYXIqIHNwZWMpIHsKICBCT09MIG5zOwogIHNpemVfdCBsZW4sIGVxcG9zLCBkb3Rwb3M7CiAgbWVtc2V0KGltcCwgMCwgc2l6ZW9mKEltcG9ydERpcmVjdGl2ZSkpOwoKICBsZW4gPSBzdHJsZW4oc3BlYyk7CiAgZXFwb3MgPSBzdHJfY2hyKHNwZWMsICc9Jyk7CgogIGlmKGVxcG9zIDwgbGVuKSB7CiAgICBpbXAtPnZhciA9IHN0cl9uZHVwKHNwZWMsIGVxcG9zKTsKICAgIHNwZWMgKz0gZXFwb3MgKyAxOwogICAgbGVuIC09IGVxcG9zICsgMTsKICB9CiAgZG90cG9zID0gc3RyX3JjaHIoc3BlYywgJy4nKTsKICBucyA9IGRvdHBvcyArIDEgPCBsZW4gJiYgc3BlY1tkb3Rwb3MgKyAxXSA9PSAnKic7CiAgaW1wLT5wYXRoID0gc3RyX25kdXAoc3BlYywgZG90cG9zKTsKICBpbXAtPm5zID0gYmFzZW5hbWUoaW1wLT5wYXRoKTsKCiAgaWYoZG90cG9zIDwgbGVuICYmICFucykgewogICAgaW1wLT5zcGVjID0gc3RyZHVwKCZzcGVjW2RvdHBvcyArIDFdKTsKICAgIGltcC0+cHJvcCA9IHN0cmR1cCgmc3BlY1tkb3Rwb3MgKyAxXSk7CiAgICBpbXAtPm5zID0gMDsKICB9IGVsc2UgewogICAgaW1wLT5zcGVjID0gZG90cG9zIDwgbGVuID8gKG5zID8gIioiIDogMCkgOiAiZGVmYXVsdCI7CiAgfQp9CgppbnQKbWFpbihpbnQgYXJnYywgY2hhcioqIGFyZ3YpIHsKICBKU1J1bnRpbWUqIHJ0OwogIEpTQ29udGV4dCogY3R4OwogIHN0cnVjdCB0cmFjZV9tYWxsb2NfZGF0YSB0cmFjZV9kYXRhID0gezB9OwogIGludCBvcHRpbmQ7CiAgY2hhciogZXhwciA9IDA7CiAgaW50IGludGVyYWN0aXZlID0gMDsKICBpbnQgZHVtcF9tZW1vcnkgPSAwOwogIGludCB0cmFjZV9tZW1vcnkgPSAwOwogIGludCBlbXB0eV9ydW4gPSAwOwogIGludCBtb2R1bGUgPSAxOwogIGludCBsb2FkX3N0ZCA9IDE7CiAgaW50IGR1bXBfdW5oYW5kbGVkX3Byb21pc2VfcmVqZWN0aW9uID0gMDsKICBzaXplX3QgbWVtb3J5X2xpbWl0ID0gMDsKICBjaGFyKiBpbmNsdWRlX2xpc3RbMzJdOwogIGludCBpLCBpbmNsdWRlX2NvdW50ID0gMDsKI2lmZGVmIENPTkZJR19CSUdOVU0KICBpbnQgbG9hZF9qc2NhbGM7CiNlbmRpZgogIHNpemVfdCBzdGFja19zaXplID0gMDsKICBjb25zdCBjaGFyKiBleGVuYW1lOwoKICBwYWNrYWdlX2pzb24gPSBKU19VTkRFRklORUQ7CgogIC8qaW5pdF9saXN0X2hlYWQoJnBvbGxoYW5kbGVycyk7Ki8KCiAgewogICAgY29uc3QgY2hhciogcDsKICAgIGV4ZW5hbWUgPSBhcmd2WzBdOwogICAgcCA9IHN0cnJjaHIoZXhlbmFtZSwgJy8nKTsKICAgIGlmKHApCiAgICAgIGV4ZW5hbWUgPSBwICsgMTsKICAgIC8qIGxvYWQganNjYWxjIHJ1bnRpbWUgaWYgaW52b2tlZCBhcyAncWpzY2FsYycgKi8KICAgIGxvYWRfanNjYWxjID0gIXN0cmNtcChleGVuYW1lLCAicWpzY2FsYyIpOwogIH0KCiAgLyogY2Fubm90IHVzZSBnZXRvcHQgYmVjYXVzZSB3ZSB3YW50IHRvIHBhc3MgdGhlIGNvbW1hbmQgbGluZSB0bwogICAgIHRoZSBzY3JpcHQgKi8KICBvcHRpbmQgPSAxOwogIHdoaWxlKG9wdGluZCA8IGFyZ2MgJiYgKmFyZ3Zbb3B0aW5kXSA9PSAnLScpIHsKICAgIGNoYXIqIGFyZyA9IGFyZ3Zbb3B0aW5kXSArIDE7CiAgICBjb25zdCBjaGFyKiBsb25nb3B0ID0gIiI7CiAgICBjb25zdCBjaGFyKiBvcHRhcmc7CgogICAgLyogYSBzaW5nbGUgLSBpcyBub3QgYW4gb3B0aW9uLCBpdCBhbHNvIHN0b3BzIGFyZ3VtZW50IHNjYW5uaW5nICovCiAgICBpZighKmFyZykKICAgICAgYnJlYWs7CgogICAgaWYoYXJnWzFdKSB7CiAgICAgIG9wdGFyZyA9ICZhcmdbMV07CiAgICB9IGVsc2UgewogICAgICBvcHRhcmcgPSBhcmd2Wysrb3B0aW5kXTsKICAgIH0KCiAgICBpZigqYXJnID09ICctJykgewogICAgICBsb25nb3B0ID0gYXJnICsgMTsKICAgICAgYXJnICs9IHN0cmxlbihhcmcpOwogICAgICAvKiAtLSBzdG9wcyBhcmd1bWVudCBzY2FubmluZyAqLwogICAgICBpZighKmxvbmdvcHQpCiAgICAgICAgYnJlYWs7CiAgICB9CiAgICBmb3IoOyAqYXJnIHx8ICpsb25nb3B0OyBsb25nb3B0ID0gIiIpIHsKICAgICAgY2hhciBvcHQgPSAqYXJnOwogICAgICBpZihvcHQpCiAgICAgICAgYXJnKys7CiAgICAgIGlmKG9wdCA9PSAnaCcgfHwgb3B0ID09ICc/JyB8fCAhc3RyY21wKGxvbmdvcHQsICJoZWxwIikpIHsKICAgICAgICBqc21faGVscCgpOwogICAgICAgIGNvbnRpbnVlOwogICAgICB9CiAgICAgIGlmKG9wdCA9PSAnZScgfHwgIXN0cmNtcChsb25nb3B0LCAiZXZhbCIpKSB7CiAgICAgICAgaWYoKmFyZykgewogICAgICAgICAgZXhwciA9IGFyZzsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICBpZihvcHRpbmQgPCBhcmdjKSB7CiAgICAgICAgICBleHByID0gYXJndltvcHRpbmQrK107CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgZnByaW50ZihzdGRlcnIsICIlczogbWlzc2luZyBleHByZXNzaW9uIGZvciAtZVxuIiwgZXhlbmFtZSk7CiAgICAgICAgZXhpdCgyKTsKICAgICAgfQogICAgICBpZihvcHQgPT0gJ0knIHx8ICFzdHJjbXAobG9uZ29wdCwgImluY2x1ZGUiKSkgewogICAgICAgIGlmKG9wdGluZCA+PSBhcmdjKSB7CiAgICAgICAgICBmcHJpbnRmKHN0ZGVyciwgImV4cGVjdGluZyBmaWxlbmFtZSIpOwogICAgICAgICAgZXhpdCgxKTsKICAgICAgICB9CiAgICAgICAgaWYoaW5jbHVkZV9jb3VudCA+PSBjb3VudG9mKGluY2x1ZGVfbGlzdCkpIHsKICAgICAgICAgIGZwcmludGYoc3RkZXJyLCAidG9vIG1hbnkgaW5jbHVkZWQgZmlsZXMiKTsKICAgICAgICAgIGV4aXQoMSk7CiAgICAgICAgfQogICAgICAgIGluY2x1ZGVfbGlzdFtpbmNsdWRlX2NvdW50KytdID0gb3B0YXJnOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGlmKG9wdCA9PSAnaScgfHwgIXN0cmNtcChsb25nb3B0LCAiaW50ZXJhY3RpdmUiKSkgewogICAgICAgIGludGVyYWN0aXZlKys7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgaWYob3B0ID09ICdtJyB8fCAhc3RyY21wKGxvbmdvcHQsICJtb2R1bGUiKSkgewogICAgICAgIGNvbnN0IGNoYXIqIG1vZHVsZXMgPSBhcmd2W29wdGluZF07CiAgICAgICAgc2l6ZV90IGksIGxlbjsKCiAgICAgICAgZm9yKGkgPSAwOyBtb2R1bGVzW2ldOyBpICs9IGxlbikgewogICAgICAgICAgbGVuID0gc3RyX2NocigmbW9kdWxlc1tpXSwgJywnKTsKICAgICAgICAgIHZlY3Rvcl9wdXRwdHIoJm1vZHVsZV9saXN0LCBzdHJfbmR1cCgmbW9kdWxlc1tpXSwgbGVuKSk7CgogICAgICAgICAgaWYobW9kdWxlc1tpICsgbGVuXSA9PSAnLCcpCiAgICAgICAgICAgIGxlbisrOwogICAgICAgIH0KCiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgaWYob3B0ID09ICdkJyB8fCAhc3RyY21wKGxvbmdvcHQsICJkdW1wIikpIHsKICAgICAgICBkdW1wX21lbW9yeSsrOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGlmKG9wdCA9PSAnVCcgfHwgIXN0cmNtcChsb25nb3B0LCAidHJhY2UiKSkgewogICAgICAgIHRyYWNlX21lbW9yeSsrOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGlmKCFzdHJjbXAobG9uZ29wdCwgInN0ZCIpKSB7CiAgICAgICAgbG9hZF9zdGQgPSAxOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGlmKCFzdHJjbXAobG9uZ29wdCwgInVuaGFuZGxlZC1yZWplY3Rpb24iKSkgewogICAgICAgIGR1bXBfdW5oYW5kbGVkX3Byb21pc2VfcmVqZWN0aW9uID0gMTsKICAgICAgICBicmVhazsKICAgICAgfQojaWZkZWYgQ09ORklHX0JJR05VTQogICAgICBpZighc3RyY21wKGxvbmdvcHQsICJuby1iaWdudW0iKSkgewogICAgICAgIGJpZ251bV9leHQgPSAwOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGlmKCFzdHJjbXAobG9uZ29wdCwgImJpZ251bSIpKSB7CiAgICAgICAgYmlnbnVtX2V4dCA9IDE7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgaWYoIXN0cmNtcChsb25nb3B0LCAicWpzY2FsYyIpKSB7CiAgICAgICAgbG9hZF9qc2NhbGMgPSAxOwogICAgICAgIGJyZWFrOwogICAgICB9CiNlbmRpZgogICAgICBpZihvcHQgPT0gJ3EnIHx8ICFzdHJjbXAobG9uZ29wdCwgInF1aXQiKSkgewogICAgICAgIGVtcHR5X3J1bisrOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGlmKCFzdHJjbXAobG9uZ29wdCwgIm1lbW9yeS1saW1pdCIpKSB7CiAgICAgICAgaWYob3B0aW5kID49IGFyZ2MpIHsKICAgICAgICAgIGZwcmludGYoc3RkZXJyLCAiZXhwZWN0aW5nIG1lbW9yeSBsaW1pdCIpOwogICAgICAgICAgZXhpdCgxKTsKICAgICAgICB9CiAgICAgICAgbWVtb3J5X2xpbWl0ID0gKHNpemVfdClzdHJ0b2QoYXJndltvcHRpbmQrK10sIDApOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGlmKCFzdHJjbXAobG9uZ29wdCwgInN0YWNrLXNpemUiKSkgewogICAgICAgIGlmKG9wdGluZCA+PSBhcmdjKSB7CiAgICAgICAgICBmcHJpbnRmKHN0ZGVyciwgImV4cGVjdGluZyBzdGFjayBzaXplIik7CiAgICAgICAgICBleGl0KDEpOwogICAgICAgIH0KICAgICAgICBzdGFja19zaXplID0gKHNpemVfdClzdHJ0b2QoYXJndltvcHRpbmQrK10sIDApOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGlmKG9wdCkgewogICAgICAgIGZwcmludGYoc3RkZXJyLCAiJXM6IHVua25vd24gb3B0aW9uICctJWMnXG4iLCBleGVuYW1lLCBvcHQpOwogICAgICB9IGVsc2UgewogICAgICAgIGZwcmludGYoc3RkZXJyLCAiJXM6IHVua25vd24gb3B0aW9uICctLSVzJ1xuIiwgZXhlbmFtZSwgbG9uZ29wdCk7CiAgICAgIH0KICAgICAganNtX2hlbHAoKTsKICAgIH0KICAgIG9wdGluZCsrOwogIH0KCiAgewogICAgY29uc3QgY2hhciogbW9kdWxlczsKCiAgICBpZigobW9kdWxlcyA9IGdldGVudigiREVCVUciKSkpIHsKICAgICAgc2l6ZV90IGksIGxlbjsKICAgICAgZm9yKGkgPSAwOyBtb2R1bGVzW2ldOyBpICs9IGxlbikgewogICAgICAgIGxlbiA9IHN0cl9jaHIoJm1vZHVsZXNbaV0sICcsJyk7CiAgICAgICAgdmVjdG9yX3B1dHB0cigmbW9kdWxlX2RlYnVnLCBzdHJfbmR1cCgmbW9kdWxlc1tpXSwgbGVuKSk7CgogICAgICAgIGlmKG1vZHVsZXNbaSArIGxlbl0gPT0gJywnKQogICAgICAgICAgbGVuKys7CiAgICAgIH0KCiAgICAgIGRlYnVnX21vZHVsZV9sb2FkZXIgPSB2ZWN0b3JfY291bnRzKCZtb2R1bGVfZGVidWcsICJtb2R1bGVzIik7CiAgICB9CiAgfQoKICBpZihsb2FkX2pzY2FsYykKICAgIGJpZ251bV9leHQgPSAxOwoKICBpZih0cmFjZV9tZW1vcnkpIHsKICAgIGpzbV90cmFjZV9tYWxsb2NfaW5pdCgmdHJhY2VfZGF0YSk7CiAgICBydCA9IEpTX05ld1J1bnRpbWUyKCZ0cmFjZV9tZiwgJnRyYWNlX2RhdGEpOwogIH0gZWxzZSB7CiAgICBydCA9IEpTX05ld1J1bnRpbWUoKTsKICB9CiAgaWYoIXJ0KSB7CiAgICBmcHJpbnRmKHN0ZGVyciwgIiVzOiBjYW5ub3QgYWxsb2NhdGUgSlMgcnVudGltZVxuIiwgZXhlbmFtZSk7CiAgICBleGl0KDIpOwogIH0KCiAgSlNfU2V0TW9kdWxlTG9hZGVyRnVuYyhydCwgMCwganNtX21vZHVsZV9sb2FkZXIsIDApOwoKICBpZihtZW1vcnlfbGltaXQgIT0gMCkKICAgIEpTX1NldE1lbW9yeUxpbWl0KHJ0LCBtZW1vcnlfbGltaXQpOwogIC8vIGlmIChzdGFja19zaXplICE9IDApCiAgSlNfU2V0TWF4U3RhY2tTaXplKHJ0LCBzdGFja19zaXplICE9IDAgPyBzdGFja19zaXplIDogMjU2ICogMTA0ODU3Nik7CgogIGpzX3N0ZF9zZXRfd29ya2VyX25ld19jb250ZXh0X2Z1bmMoanNtX2NvbnRleHRfbmV3KTsKCiAganNfc3RkX2luaXRfaGFuZGxlcnMocnQpOwogIGN0eCA9IGpzbV9jb250ZXh0X25ldyhydCk7CiAgaWYoIWN0eCkgewogICAgZnByaW50ZihzdGRlcnIsICIlczogY2Fubm90IGFsbG9jYXRlIEpTIGNvbnRleHRcbiIsIGV4ZW5hbWUpOwogICAgZXhpdCgyKTsKICB9CgogIGpzX2RidWZfaW5pdChjdHgsICZqc21fc2NyaXB0cyk7CgogIC8qIGxvYWRlciBmb3IgRVM2IG1vZHVsZXMgKi8KICBKU19TZXRNb2R1bGVMb2FkZXJGdW5jKHJ0LCBqc19tb2R1bGVfbm9ybWFsaXplLCBqc21fbW9kdWxlX2xvYWRlciwgMCk7CiAgLy8ganNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMoanNtX21vZHVsZV9sb2FkZXIpOwoKICBpZihkdW1wX3VuaGFuZGxlZF9wcm9taXNlX3JlamVjdGlvbikgewogICAgSlNfU2V0SG9zdFByb21pc2VSZWplY3Rpb25UcmFja2VyKHJ0LCBqc19zdGRfcHJvbWlzZV9yZWplY3Rpb25fdHJhY2tlciwgMCk7CiAgfQoKICBpZighZW1wdHlfcnVuKSB7CiNpZmRlZiBDT05GSUdfQklHTlVNCiAgICBpZihsb2FkX2pzY2FsYykgewogICAgICBqc19ldmFsX2JpbmFyeShjdHgsIHFqc2NfcWpzY2FsYywgcWpzY19xanNjYWxjX3NpemUsIDApOwogICAgfQojZW5kaWYKICAgIGpzX3N0ZF9hZGRfaGVscGVycyhjdHgsIGFyZ2MgLSBvcHRpbmQsIGFyZ3YgKyBvcHRpbmQpOwoKICAgIHsKICAgICAgY29uc3QgY2hhciogc3RyID0gImltcG9ydCBwcm9jZXNzIGZyb20gJ3Byb2Nlc3MnO1xuZ2xvYmFsVGhpcy5wcm9jZXNzID0gcHJvY2VzcztcbiI7CiAgICAgIGpzX2V2YWxfc3RyKGN0eCwgc3RyLCAwLCBKU19FVkFMX1RZUEVfTU9EVUxFKTsKICAgIH0KCiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIEpTX0dldEdsb2JhbE9iamVjdChjdHgpLCBqc21fZ2xvYmFsX2Z1bmNzLCBjb3VudG9mKGpzbV9nbG9iYWxfZnVuY3MpKTsKICAgIGlmKGxvYWRfc3RkKSB7CiAgICAgIGNvbnN0IGNoYXIqIHN0ciA9ICJpbXBvcnQgKiBhcyBzdGQgZnJvbSAnc3RkJztcbmltcG9ydCAqIGFzIG9zIGZyb20gIgogICAgICAgICAgICAgICAgICAgICAgICAiJ29zJztcbmdsb2JhbFRoaXMuc3RkID0gIgogICAgICAgICAgICAgICAgICAgICAgICAic3RkO1xuZ2xvYmFsVGhpcy5vcyAiCiAgICAgICAgICAgICAgICAgICAgICAgICI9IG9zO1xuZ2xvYmFsVGhpcy5zZXRUaW1lb3V0ID0gIgogICAgICAgICAgICAgICAgICAgICAgICAib3Muc2V0VGltZW91dDtcbmdsb2JhbFRoaXMuY2xlYXJUaW1lb3V0ID0gIgogICAgICAgICAgICAgICAgICAgICAgICAib3MuY2xlYXJUaW1lb3V0O1xuIjsKICAgICAganNfZXZhbF9zdHIoY3R4LCBzdHIsIDAsIEpTX0VWQUxfVFlQRV9NT0RVTEUpOwogICAgfQoKICAgIC8vIGpzbV9saXN0X21vZHVsZXMoY3R4KTsKCiAgICB7CiAgICAgIGNoYXIqKiBwdHI7CiAgICAgIEpTTW9kdWxlRGVmKiBtOwogICAgICB2ZWN0b3JfZm9yZWFjaF90KCZtb2R1bGVfbGlzdCwgcHRyKSB7CgogICAgICAgIGNoYXIqIG5hbWUgPSAqcHRyOwogICAgICAgIC8vIE1vZHVsZUltcG9ydEZ1bmN0aW9uKiBpbXAgPSBqc19tb2R1bGVfaW1wb3J0X25hbWVzcGFjZTsKICAgICAgICAvKgogICAgICAgICAgICAgICAgSlNWYWx1ZSByZXQ7CiAgICAgICAgICAgICAgICBJbXBvcnREaXJlY3RpdmUgZGlyZWN0aXZlOwogICAgICAgICAgICAgICAganNtX2ltcG9ydF9wYXJzZSgmZGlyZWN0aXZlLCBuYW1lKTsKCiAgICAgICAgICAgICAgICByZXQgPSBqc19pbXBvcnRfZXZhbChjdHgsIGRpcmVjdGl2ZSk7CiAgICAgICAgICAgICAgICBpZihkaXJlY3RpdmUucGF0aCkKICAgICAgICAgICAgICAgICAgZnJlZShkaXJlY3RpdmUucGF0aCk7CgogICAgICAgICAgICAgICAgaWYoSlNfSXNFeGNlcHRpb24ocmV0KSkgewogICAgICAgICovCiAgICAgICAgaWYoIShtID0ganNtX21vZHVsZV9sb2FkKGN0eCwgbmFtZSkpKSB7CgogICAgICAgICAgLyogaWYoKG0gPSBqc21fbW9kdWxlX2xvYWRlcihjdHgsICpuYW1lLCAwKSkpIHsKICAgICAgICAgICAgICAgICAgICBKU1ZhbHVlIGV4cG9ydHMgPSBtb2R1bGVfZXhwb3J0cyhjdHgsIG0pOwogICAgICAgICAgICAgICAgICAgIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgSlNfR2V0R2xvYmFsT2JqZWN0KGN0eCksICpuYW1lLCBleHBvcnRzKTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsqLwogICAgICAgICAgZnByaW50ZihzdGRlcnIsICJlcnJvciBsb2FkaW5nIG1vZHVsZSAnJXMnXG4iLCBuYW1lKTsKICAgICAgICAgIGpzbV9kdW1wX2Vycm9yKGN0eCk7CiAgICAgICAgICBleGl0KDEpOwogICAgICAgIH0KICAgICAgICBmcmVlKCpwdHIpOwogICAgICB9CiAgICAgIHZlY3Rvcl9mcmVlKCZtb2R1bGVfbGlzdCk7CiAgICB9CgogICAgZm9yKGkgPSAwOyBpIDwgaW5jbHVkZV9jb3VudDsgaSsrKSB7CiAgICAgIGlmKGpzbV9zY3JpcHRfbG9hZChjdHgsIGluY2x1ZGVfbGlzdFtpXSwgbW9kdWxlKSA9PSAtMSkKICAgICAgICBnb3RvIGZhaWw7CiAgICB9CgogICAgaWYoZXhwcikgewogICAgICBpZihqc19ldmFsX3N0cihjdHgsIGV4cHIsICI8Y21kbGluZT4iLCAwKSA9PSAtMSkKICAgICAgICBnb3RvIGZhaWw7CiAgICB9IGVsc2UgaWYob3B0aW5kID49IGFyZ2MpIHsKICAgICAgLyogaW50ZXJhY3RpdmUgbW9kZSAqLwogICAgICBpbnRlcmFjdGl2ZSA9IDE7CiAgICB9IGVsc2UgewogICAgICBjb25zdCBjaGFyKiBmaWxlbmFtZTsKICAgICAgZmlsZW5hbWUgPSBhcmd2W29wdGluZF07CiAgICAgIGlmKGpzbV9zY3JpcHRfbG9hZChjdHgsIGZpbGVuYW1lLCBtb2R1bGUpID09IC0xKSB7CiAgICAgICAganNfdmFsdWVfZndyaXRlKGN0eCwgSlNfR2V0RXhjZXB0aW9uKGN0eCksIHN0ZGVycik7CiAgICAgICAgZ290byBmYWlsOwogICAgICB9CiAgICB9CiAgICBpZihpbnRlcmFjdGl2ZSkgewogICAgICBjaGFyIHN0cls1MTJdOwogICAgICBjb25zdCBjaGFyKiBob21lID0gZ2V0ZW52KCJIT01FIik7CgogICAgICBzbnByaW50ZihzdHIsCiAgICAgICAgICAgICAgIHNpemVvZihzdHIpLAogICAgICAgICAgICAgICAiaW1wb3J0IHsgb3V0IH0gZnJvbSAnc3RkJztcbiIKICAgICAgICAgICAgICAgImltcG9ydCBSRVBMIGZyb20gJ3JlcGwnO1xuIgogICAgICAgICAgICAgICAiaW1wb3J0IGZzIGZyb20gJ2ZzJztcbiIKICAgICAgICAgICAgICAgImltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJztcbiIKICAgICAgICAgICAgICAgImNvbnN0IGhpc3RvcnkgPSAnJXMvLiVzX2hpc3RvcnknO1xuIgogICAgICAgICAgICAgICAiZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUob3V0LCB7IGluc3BlY3RPcHRpb25zOiB7IGN1c3RvbUluc3BlY3Q6IHRydWUgfSB9KTtcbiIKICAgICAgICAgICAgICAgImdsb2JhbFRoaXMucmVwbCA9IG5ldyBSRVBMKCdxanNtJyk7XG4iCiAgICAgICAgICAgICAgICJyZXBsLmZzID0gZnM7XG4iCiAgICAgICAgICAgICAgICJyZXBsLnNob3cgPSBjb25zb2xlLmxvZztcbiIKICAgICAgICAgICAgICAgInJlcGwuaGlzdG9yeUxvYWQoaGlzdG9yeSk7XG4iCiAgICAgICAgICAgICAgICJyZXBsLmFkZENsZWFudXBIYW5kbGVyKCgpID0+IHJlcGwuaGlzdG9yeVNhdmUoaGlzdG9yeSkpO1xuIgogICAgICAgICAgICAgICAicmVwbC5ydW5TeW5jKCk7XG4iLAogICAgICAgICAgICAgICBob21lLAogICAgICAgICAgICAgICBleGVuYW1lKTsKICAgICAgLy8gcHJpbnRmKCJzdHI6ICVzXG4iLCBzdHIpOwogICAgICBqc19ldmFsX2JpbmFyeShjdHgsIHFqc2NfcmVwbCwgcWpzY19yZXBsX3NpemUsIDApOwogICAgICBqc19ldmFsX3N0cihjdHgsIHN0ciwgMCwgSlNfRVZBTF9UWVBFX01PRFVMRSk7CiAgICB9CgogICAganNfc3RkX2xvb3AoY3R4KTsKICB9CgogIGlmKCFKU19Jc051bGwoY3R4LT5ydC0+Y3VycmVudF9leGNlcHRpb24pKQogICAganNtX2R1bXBfZXJyb3IoY3R4KTsKCiAgaWYoZHVtcF9tZW1vcnkpIHsKICAgIEpTTWVtb3J5VXNhZ2Ugc3RhdHM7CiAgICBKU19Db21wdXRlTWVtb3J5VXNhZ2UocnQsICZzdGF0cyk7CiAgICBKU19EdW1wTWVtb3J5VXNhZ2Uoc3Rkb3V0LCAmc3RhdHMsIHJ0KTsKICB9CiAganNfc3RkX2ZyZWVfaGFuZGxlcnMocnQpOwogIEpTX0ZyZWVDb250ZXh0KGN0eCk7CiAgSlNfRnJlZVJ1bnRpbWUocnQpOwoKICBpZihlbXB0eV9ydW4gJiYgZHVtcF9tZW1vcnkpIHsKICAgIGNsb2NrX3QgdFs1XTsKICAgIGRvdWJsZSBiZXN0WzVdOwogICAgaW50IGksIGo7CiAgICBmb3IoaSA9IDA7IGkgPCAxMDA7IGkrKykgewogICAgICB0WzBdID0gY2xvY2soKTsKICAgICAgcnQgPSBKU19OZXdSdW50aW1lKCk7CiAgICAgIHRbMV0gPSBjbG9jaygpOwogICAgICBjdHggPSBKU19OZXdDb250ZXh0KHJ0KTsKICAgICAgdFsyXSA9IGNsb2NrKCk7CiAgICAgIEpTX0ZyZWVDb250ZXh0KGN0eCk7CiAgICAgIHRbM10gPSBjbG9jaygpOwogICAgICBKU19GcmVlUnVudGltZShydCk7CiAgICAgIHRbNF0gPSBjbG9jaygpOwogICAgICBmb3IoaiA9IDQ7IGogPiAwOyBqLS0pIHsKICAgICAgICBkb3VibGUgbXMgPSAxMDAwLjAgKiAodFtqXSAtIHRbaiAtIDFdKSAvIENMT0NLU19QRVJfU0VDOwogICAgICAgIGlmKGkgPT0gMCB8fCBiZXN0W2pdID4gbXMpCiAgICAgICAgICBiZXN0W2pdID0gbXM7CiAgICAgIH0KICAgIH0KICAgIHByaW50ZigiXG5JbnN0YW50aWF0aW9uIHRpbWVzIChtcyk6ICUuM2YgPSAlLjNmKyUuM2YrJS4zZislLjNmXG4iLAogICAgICAgICAgIGJlc3RbMV0gKyBiZXN0WzJdICsgYmVzdFszXSArIGJlc3RbNF0sCiAgICAgICAgICAgYmVzdFsxXSwKICAgICAgICAgICBiZXN0WzJdLAogICAgICAgICAgIGJlc3RbM10sCiAgICAgICAgICAgYmVzdFs0XSk7CiAgfQogIHJldHVybiAwOwpmYWlsOgogIGpzX3N0ZF9mcmVlX2hhbmRsZXJzKHJ0KTsKICBKU19GcmVlQ29udGV4dChjdHgpOwogIEpTX0ZyZWVSdW50aW1lKHJ0KTsKICByZXR1cm4gMTsKfQoAAAAAAAAAAFeHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAkAAAAAAABECQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 18629,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAAJw1AAAAAAAAnDUAAAAAAAACAAAALmE",
					"AQAAAAAAAAABAAAAnDUAAAAAAACeNQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAMg1AAAAAAAAyTUAAAAAAAAAAAAAyTUAAAAAAADJNQAAAAAAAAIAAAAjIw",
					"AQAAAAAAAAABAAAAyjUAAAAAAADINQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMc1AAAAAAAAyDUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxzUAAAAAAADHNQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJ41AAAAAAAAnzUAAAAAAAAAAAAAnzUAAAAAAAChNQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnjUAAAAAAACeNQAAAAAAAP///////+9/"
				],
				[
					30,
					1,
					"paste",
					null,
					"AQAAAKE1AAAAAAAA+TUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoTUAAAAAAAChNQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJ81AAAAAAAAoDUAAAAAAAAAAAAAoDUAAAAAAACgNQAAAAAAAFkAAAAgIGFkZF9saWJyYXJ5KDxuYW1lPiA8U0hBUkVEfFNUQVRJQ3xNT0RVTEV8T0JKRUNUfFVOS05PV04+IElNUE9SVEVECiAgICAgICAgICAgIFtHTE9CQUxdKQ",
					"AQAAAAAAAAABAAAAnzUAAAAAAAD4NQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAHzUAAAAAAAAqNQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"paste",
					null,
					"AQAAAPcAAAAAAAAAJgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"paste",
					null,
					"AQAAAKEBAAAAAAAA0QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQEAAAAAAAChAQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"paste",
					null,
					"AQAAACQCAAAAAAAAVAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAIAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"cut",
					null,
					"AQAAADU2AAAAAAAANTYAAAAAAAArAAAAICBsaXN0KEFQUEVORCBRSlNNX0xEQUREICIke1FKU01fTU9EVUxFfSIpCg",
					"AQAAAAAAAAABAAAANTYAAAAAAABgNgAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					2,
					"paste",
					null,
					"AgAAADU2AAAAAAAAYDYAAAAAAAAAAAAAYDYAAAAAAACLNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANTYAAAAAAAA1NgAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "LISB"
					},
					"BQAAAEg2AAAAAAAASTYAAAAAAAAAAAAASTYAAAAAAABJNgAAAAAAAAYAAABMREFERCBJNgAAAAAAAEo2AAAAAAAAAAAAAEo2AAAAAAAASzYAAAAAAAAAAAAASzYAAAAAAABMNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASDYAAAAAAABONgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					2,
					"left_delete",
					null,
					"AgAAAEs2AAAAAAAASzYAAAAAAAABAAAAQko2AAAAAAAASjYAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAATDYAAAAAAABMNgAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "BS"
					},
					"AgAAAEo2AAAAAAAASzYAAAAAAAAAAAAASzYAAAAAAABMNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASjYAAAAAAABKNgAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEw2AAAAAAAATTYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATDYAAAAAAABMNgAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "${"
					},
					"AgAAAHk2AAAAAAAAejYAAAAAAAAAAAAAejYAAAAAAAB7NgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeTYAAAAAAAB5NgAAAAAAAAAAAAAAQHBA"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHs2AAAAAAAAfDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAezYAAAAAAAB7NgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "CMAKE_"
					},
					"BgAAAHs2AAAAAAAAfDYAAAAAAAAAAAAAfDYAAAAAAAB9NgAAAAAAAAAAAAB9NgAAAAAAAH42AAAAAAAAAAAAAH42AAAAAAAAfzYAAAAAAAAAAAAAfzYAAAAAAACANgAAAAAAAAAAAACANgAAAAAAAIE2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAezYAAAAAAAB7NgAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					6,
					"left_delete",
					null,
					"BgAAAIA2AAAAAAAAgDYAAAAAAAABAAAAX382AAAAAAAAfzYAAAAAAAABAAAARX42AAAAAAAAfjYAAAAAAAABAAAAS302AAAAAAAAfTYAAAAAAAABAAAAQXw2AAAAAAAAfDYAAAAAAAABAAAATXs2AAAAAAAAezYAAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAAgTYAAAAAAACBNgAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "QJSM_LIBDIR}/"
					},
					"DQAAAHs2AAAAAAAAfDYAAAAAAAAAAAAAfDYAAAAAAAB9NgAAAAAAAAAAAAB9NgAAAAAAAH42AAAAAAAAAAAAAH42AAAAAAAAfzYAAAAAAAAAAAAAfzYAAAAAAACANgAAAAAAAAAAAACANgAAAAAAAIE2AAAAAAAAAAAAAIE2AAAAAAAAgjYAAAAAAAAAAAAAgjYAAAAAAACDNgAAAAAAAAAAAACDNgAAAAAAAIQ2AAAAAAAAAAAAAIQ2AAAAAAAAhTYAAAAAAAAAAAAAhTYAAAAAAACGNgAAAAAAAAAAAACGNgAAAAAAAIc2AAAAAAAAAAAAAIc2AAAAAAAAiDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAezYAAAAAAAB7NgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "lib"
					},
					"AwAAAIg2AAAAAAAAiTYAAAAAAAAAAAAAiTYAAAAAAACKNgAAAAAAAAAAAACKNgAAAAAAAIs2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiDYAAAAAAACINgAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"right_delete",
					null,
					"AQAAAIs2AAAAAAAAizYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAizYAAAAAAACLNgAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": ".a"
					},
					"AgAAAJk2AAAAAAAAmjYAAAAAAAAAAAAAmjYAAAAAAACbNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmTYAAAAAAACZNgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"left_delete",
					null,
					"AQAAAJo2AAAAAAAAmjYAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAmzYAAAAAAACbNgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "${"
					},
					"AgAAAJo2AAAAAAAAmzYAAAAAAAAAAAAAmzYAAAAAAACcNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmjYAAAAAAACaNgAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"paste",
					null,
					"AQAAAJw2AAAAAAAAtzYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnDYAAAAAAACcNgAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAALc2AAAAAAAAuDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtzYAAAAAAAC3NgAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"left_delete",
					null,
					"AQAAAJk2AAAAAAAAmTYAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAmjYAAAAAAACaNgAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					2,
					"paste",
					null,
					"AwAAAF42AAAAAAAAuTYAAAAAAAAAAAAAuTYAAAAAAAC5NgAAAAAAAFsAAAAKICBsaXN0KEFQUEVORCBRSlNNX0xEQUREICIke1FKU01fTElCRElSfS9saWIke1FKU01fTU9EVUxFfSR7Q01BS0VfU1RBVElDX0xJQlJBUllfU1VGRklYfSIpuTYAAAAAAAAUNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXjYAAAAAAAC5NgAAAAAAAP///////+9/"
				],
				[
					181,
					1,
					"right_delete",
					null,
					"AQAAABQ3AAAAAAAAFDcAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAFDcAAAAAAAAUNwAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"paste",
					null,
					"AgAAAPY2AAAAAAAAETcAAAAAAAAAAAAAETcAAAAAAAARNwAAAAAAABsAAABDTUFLRV9TVEFUSUNfTElCUkFSWV9TVUZGSVg",
					"AQAAAAAAAAABAAAA9jYAAAAAAAARNwAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"right_delete",
					null,
					"AQAAAOM2AAAAAAAA4zYAAAAAAAADAAAAbGli",
					"AQAAAAAAAAABAAAA4zYAAAAAAADmNgAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAGE2AAAAAAAAYjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYTYAAAAAAABhNgAAAAAAAAAAAAAAADRA"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "${"
					},
					"AgAAAOQ2AAAAAAAA5TYAAAAAAAAAAAAA5TYAAAAAAADmNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5DYAAAAAAADkNgAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"paste",
					null,
					"AQAAAOY2AAAAAAAAATcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5jYAAAAAAADmNgAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAAE3AAAAAAAAAjcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAATcAAAAAAAABNwAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BAAAALY1AAAAAAAAtzUAAAAAAAAAAAAAtzUAAAAAAAC4NQAAAAAAAAAAAAC4NQAAAAAAALk1AAAAAAAAAAAAALk1AAAAAAAAujUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtjUAAAAAAAC2NQAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALo1AAAAAAAAvDUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAujUAAAAAAAC6NQAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAALo1AAAAAAAAujUAAAAAAAABAAAAKLo1AAAAAAAAujUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAuzUAAAAAAAC7NQAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"paste",
					null,
					"AgAAALg1AAAAAAAA/zUAAAAAAAAAAAAA/zUAAAAAAAD/NQAAAAAAAAMAAABpZgo",
					"AQAAAAAAAAABAAAAuDUAAAAAAAC7NQAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAALs1AAAAAAAAvDUAAAAAAAAAAAAAvDUAAAAAAAC9NQAAAAAAAAAAAAC9NQAAAAAAAL41AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuzUAAAAAAAC7NQAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL41AAAAAAAAvzUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvjUAAAAAAAC+NQAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					2,
					"right_delete",
					null,
					"AgAAAMQ1AAAAAAAAxDUAAAAAAAABAAAAT8Q1AAAAAAAAxDUAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAxDUAAAAAAADENQAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": "AND"
					},
					"AwAAAMQ1AAAAAAAAxTUAAAAAAAAAAAAAxTUAAAAAAADGNQAAAAAAAAAAAADGNQAAAAAAAMc1AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxDUAAAAAAADENQAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAMM1AAAAAAAAxDUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwzUAAAAAAADDNQAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAAMQ1AAAAAAAAxTUAAAAAAAAAAAAAxTUAAAAAAADGNQAAAAAAAAAAAADGNQAAAAAAAMc1AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxDUAAAAAAADENQAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMc1AAAAAAAAyTUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxzUAAAAAAADHNQAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					6,
					"right_delete",
					null,
					"BgAAAMg1AAAAAAAAyDUAAAAAAAABAAAAKcg1AAAAAAAAyDUAAAAAAAABAAAAIMg1AAAAAAAAyDUAAAAAAAABAAAAQcg1AAAAAAAAyDUAAAAAAAABAAAATsg1AAAAAAAAyDUAAAAAAAABAAAARMg1AAAAAAAAyDUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAyDUAAAAAAADINQAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAM2AAAAAAAABDYAAAAAAAAAAAAABDYAAAAAAAAGNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAzYAAAAAAAADNgAAAAAAAP///////+9/"
				],
				[
					273,
					1,
					"cut",
					null,
					"AQAAALg1AAAAAAAAuDUAAAAAAABOAAAAaWYoTk9UIFdBU0kpCmlmKEVNU0NSSVBURU4gT1IgIiR7Q01BS0VfU1lTVEVNX05BTUV9IiBTVFJFUVVBTCAiRW1zY3JpcHRlbiIpCiAg",
					"AQAAAAAAAAABAAAABjYAAAAAAAC4NQAAAAAAAAAAAAAAAAAA"
				],
				[
					274,
					2,
					"paste",
					null,
					"AgAAALg1AAAAAAAABjYAAAAAAAAAAAAABjYAAAAAAABUNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuDUAAAAAAAC4NQAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"cut",
					null,
					"AQAAAAY2AAAAAAAABjYAAAAAAAAMAAAAaWYoTk9UIFdBU0kp",
					"AQAAAAAAAAABAAAABjYAAAAAAAASNgAAAAAAAP///////+9/"
				],
				[
					281,
					1,
					"paste",
					null,
					"AQAAAEg2AAAAAAAAVDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASDYAAAAAAABINgAAAAAAAAAAAAAAADRA"
				],
				[
					283,
					2,
					"left_delete",
					null,
					"AgAAAEY2AAAAAAAARjYAAAAAAAACAAAAICBFNgAAAAAAAEU2AAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAASDYAAAAAAABINgAAAAAAAAAAAAAAADRA"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAEU2AAAAAAAARjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARTYAAAAAAABFNgAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					2,
					"left_delete",
					null,
					"AgAAAEU2AAAAAAAARTYAAAAAAAABAAAAZUQ2AAAAAAAARDYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAARjYAAAAAAABGNgAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEQ2AAAAAAAARTYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARDYAAAAAAABENgAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": "\nend"
					},
					"BwAAAEU2AAAAAAAARjYAAAAAAAAAAAAARjYAAAAAAABINgAAAAAAAAAAAABINgAAAAAAAEk2AAAAAAAAAAAAAEk2AAAAAAAASjYAAAAAAAAAAAAASjYAAAAAAABLNgAAAAAAAAAAAABGNgAAAAAAAEY2AAAAAAAAAgAAACAgRjYAAAAAAABGNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARTYAAAAAAABFNgAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "ed"
					},
					"AgAAAAc2AAAAAAAACDYAAAAAAAAAAAAACDYAAAAAAAAJNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABzYAAAAAAAAHNgAAAAAAAAAAAAAAAAAA"
				],
				[
					291,
					1,
					"left_delete",
					null,
					"AQAAAAg2AAAAAAAACDYAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAACTYAAAAAAAAJNgAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "nd"
					},
					"AgAAAAg2AAAAAAAACTYAAAAAAAAAAAAACTYAAAAAAAAKNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACDYAAAAAAAAINgAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"indent",
					null,
					"AwAAAMU1AAAAAAAAxzUAAAAAAAAAAAAABjYAAAAAAAAINgAAAAAAAAAAAAALNgAAAAAAAA02AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxTUAAAAAAABJNgAAAAAAAAAAAAAAAAAA"
				],
				[
					299,
					2,
					"left_delete",
					null,
					"AgAAAAY2AAAAAAAABjYAAAAAAAACAAAAICAFNgAAAAAAAAU2AAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAACDYAAAAAAAAINgAAAAAAAAAAAAAAADRA"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAU2AAAAAAAABjYAAAAAAAAAAAAABjYAAAAAAAAINgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABTYAAAAAAAAFNgAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": "  set"
					},
					"BQAAAAg2AAAAAAAACTYAAAAAAAAAAAAACTYAAAAAAAAKNgAAAAAAAAAAAAAKNgAAAAAAAAs2AAAAAAAAAAAAAAs2AAAAAAAADDYAAAAAAAAAAAAADDYAAAAAAAANNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACDYAAAAAAAAINgAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA02AAAAAAAADzYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADTYAAAAAAAANNgAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "CMAKE_IMPORT_LIBRARY_"
					},
					"FQAAAA42AAAAAAAADzYAAAAAAAAAAAAADzYAAAAAAAAQNgAAAAAAAAAAAAAQNgAAAAAAABE2AAAAAAAAAAAAABE2AAAAAAAAEjYAAAAAAAAAAAAAEjYAAAAAAAATNgAAAAAAAAAAAAATNgAAAAAAABQ2AAAAAAAAAAAAABQ2AAAAAAAAFTYAAAAAAAAAAAAAFTYAAAAAAAAWNgAAAAAAAAAAAAAWNgAAAAAAABc2AAAAAAAAAAAAABc2AAAAAAAAGDYAAAAAAAAAAAAAGDYAAAAAAAAZNgAAAAAAAAAAAAAZNgAAAAAAABo2AAAAAAAAAAAAABo2AAAAAAAAGzYAAAAAAAAAAAAAGzYAAAAAAAAcNgAAAAAAAAAAAAAcNgAAAAAAAB02AAAAAAAAAAAAAB02AAAAAAAAHjYAAAAAAAAAAAAAHjYAAAAAAAAfNgAAAAAAAAAAAAAfNgAAAAAAACA2AAAAAAAAAAAAACA2AAAAAAAAITYAAAAAAAAAAAAAITYAAAAAAAAiNgAAAAAAAAAAAAAiNgAAAAAAACM2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADjYAAAAAAAAONgAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": "PREFIX="
					},
					"BwAAACM2AAAAAAAAJDYAAAAAAAAAAAAAJDYAAAAAAAAlNgAAAAAAAAAAAAAlNgAAAAAAACY2AAAAAAAAAAAAACY2AAAAAAAAJzYAAAAAAAAAAAAAJzYAAAAAAAAoNgAAAAAAAAAAAAAoNgAAAAAAACk2AAAAAAAAAAAAACk2AAAAAAAAKjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIzYAAAAAAAAjNgAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"left_delete",
					null,
					"AQAAACk2AAAAAAAAKTYAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAKjYAAAAAAAAqNgAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACk2AAAAAAAAKjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKTYAAAAAAAApNgAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAACo2AAAAAAAALDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKjYAAAAAAAAqNgAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"cut",
					null,
					"AQAAAAo2AAAAAAAACjYAAAAAAAAjAAAAc2V0KENNQUtFX0lNUE9SVF9MSUJSQVJZX1BSRUZJWCAiIik",
					"AQAAAAAAAAABAAAALTYAAAAAAAAKNgAAAAAAAAAAAAAAAERA"
				],
				[
					311,
					1,
					"paste",
					null,
					"AQAAAAo2AAAAAAAALTYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACjYAAAAAAAAKNgAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC02AAAAAAAALjYAAAAAAAAAAAAALjYAAAAAAAAyNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALTYAAAAAAAAtNgAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					1,
					"paste",
					null,
					"AQAAADI2AAAAAAAAVTYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMjYAAAAAAAAyNgAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "_SUFFIX"
					},
					"CAAAAEo2AAAAAAAASzYAAAAAAAAAAAAASzYAAAAAAABLNgAAAAAAAAcAAABfUFJFRklYSzYAAAAAAABMNgAAAAAAAAAAAABMNgAAAAAAAE02AAAAAAAAAAAAAE02AAAAAAAATjYAAAAAAAAAAAAATjYAAAAAAABPNgAAAAAAAAAAAABPNgAAAAAAAFA2AAAAAAAAAAAAAFA2AAAAAAAAUTYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASjYAAAAAAABRNgAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "bncv"
					},
					"BAAAAFM2AAAAAAAAVDYAAAAAAAAAAAAAVDYAAAAAAABVNgAAAAAAAAAAAABVNgAAAAAAAFY2AAAAAAAAAAAAAFY2AAAAAAAAVzYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUzYAAAAAAABTNgAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					3,
					"left_delete",
					null,
					"AwAAAFY2AAAAAAAAVjYAAAAAAAABAAAAdlU2AAAAAAAAVTYAAAAAAAABAAAAY1Q2AAAAAAAAVDYAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAVzYAAAAAAABXNgAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAFQ2AAAAAAAAVTYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVDYAAAAAAABUNgAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAFM2AAAAAAAAVDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUzYAAAAAAABTNgAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": "\n$"
					},
					"BQAAAM03AAAAAAAAzjcAAAAAAAAAAAAAzjcAAAAAAADQNwAAAAAAAAAAAADONwAAAAAAAM43AAAAAAAAAgAAACAgzjcAAAAAAADSNwAAAAAAAAAAAADSNwAAAAAAANM3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzTcAAAAAAADNNwAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					4,
					"left_delete",
					null,
					"BAAAANI3AAAAAAAA0jcAAAAAAAABAAAAJNA3AAAAAAAA0DcAAAAAAAACAAAAICDONwAAAAAAAM43AAAAAAAAAgAAACAgzTcAAAAAAADNNwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA0zcAAAAAAADTNwAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": "${CMAKE_CUR"
					},
					"CwAAAM03AAAAAAAAzjcAAAAAAAAAAAAAzjcAAAAAAADPNwAAAAAAAAAAAADPNwAAAAAAANA3AAAAAAAAAAAAANA3AAAAAAAA0TcAAAAAAAAAAAAA0TcAAAAAAADSNwAAAAAAAAAAAADSNwAAAAAAANM3AAAAAAAAAAAAANM3AAAAAAAA1DcAAAAAAAAAAAAA1DcAAAAAAADVNwAAAAAAAAAAAADVNwAAAAAAANY3AAAAAAAAAAAAANY3AAAAAAAA1zcAAAAAAAAAAAAA1zcAAAAAAADYNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzTcAAAAAAADNNwAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"insert_completion",
					{
						"completion": "CMAKE_CURRENT_BINARY_DIR",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "CMAKE_CURRENT_BINARY_DIR"
					},
					"AgAAAM83AAAAAAAAzzcAAAAAAAAJAAAAQ01BS0VfQ1VSzzcAAAAAAADnNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2DcAAAAAAADYNwAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": "}/"
					},
					"AgAAAOc3AAAAAAAA6DcAAAAAAAAAAAAA6DcAAAAAAADpNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5zcAAAAAAADnNwAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"cut",
					null,
					"AQAAAM03AAAAAAAAzTcAAAAAAAAcAAAAJHtDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVJ9Lw",
					"AQAAAAAAAAABAAAAzTcAAAAAAADpNwAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFI4AAAAAAAAUzgAAAAAAAAAAAAAUzgAAAAAAABUOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUjgAAAAAAABSOAAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": "link_directorie"
					},
					"DwAAAFM4AAAAAAAAVDgAAAAAAAAAAAAAVDgAAAAAAABVOAAAAAAAAAAAAABVOAAAAAAAAFY4AAAAAAAAAAAAAFY4AAAAAAAAVzgAAAAAAAAAAAAAVzgAAAAAAABYOAAAAAAAAAAAAABYOAAAAAAAAFk4AAAAAAAAAAAAAFk4AAAAAAAAWjgAAAAAAAAAAAAAWjgAAAAAAABbOAAAAAAAAAAAAABbOAAAAAAAAFw4AAAAAAAAAAAAAFw4AAAAAAAAXTgAAAAAAAAAAAAAXTgAAAAAAABeOAAAAAAAAAAAAABeOAAAAAAAAF84AAAAAAAAAAAAAF84AAAAAAAAYDgAAAAAAAAAAAAAYDgAAAAAAABhOAAAAAAAAAAAAABhOAAAAAAAAGI4AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUzgAAAAAAABTOAAAAAAAAAAAAAAAAAAA"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAGI4AAAAAAAAYzgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYjgAAAAAAABiOAAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGM4AAAAAAAAZTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYzgAAAAAAABjOAAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAAGQ4AAAAAAAAZTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZDgAAAAAAABkOAAAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGU4AAAAAAAAZzgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZTgAAAAAAABlOAAAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					1,
					"insert",
					{
						"characters": "QJSM_LIBDIR"
					},
					"CwAAAGY4AAAAAAAAZzgAAAAAAAAAAAAAZzgAAAAAAABoOAAAAAAAAAAAAABoOAAAAAAAAGk4AAAAAAAAAAAAAGk4AAAAAAAAajgAAAAAAAAAAAAAajgAAAAAAABrOAAAAAAAAAAAAABrOAAAAAAAAGw4AAAAAAAAAAAAAGw4AAAAAAAAbTgAAAAAAAAAAAAAbTgAAAAAAABuOAAAAAAAAAAAAABuOAAAAAAAAG84AAAAAAAAAAAAAG84AAAAAAAAcDgAAAAAAAAAAAAAcDgAAAAAAABxOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZjgAAAAAAABmOAAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"cut",
					null,
					"AQAAAFABAAAAAAAAUAEAAAAAAAA6AAAAICBvcHRpb24oQlVJTERfU0hBUkVEX01PRFVMRVMgIkJ1aWxkIHNoYXJlZCBtb2R1bGVzIiBPRkYpCg",
					"AQAAAAAAAAABAAAAUAEAAAAAAACKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					2,
					"paste",
					null,
					"AgAAAFABAAAAAAAAigEAAAAAAAAAAAAAigEAAAAAAADEAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAEAAAAAAABQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": "set"
					},
					"BAAAAIwBAAAAAAAAjQEAAAAAAAAAAAAAjQEAAAAAAACNAQAAAAAAAAYAAABvcHRpb26NAQAAAAAAAI4BAAAAAAAAAAAAAI4BAAAAAAAAjwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAEAAAAAAACSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					462,
					1,
					"insert",
					{
						"characters": "LIB"
					},
					"BAAAAJ0BAAAAAAAAngEAAAAAAAAAAAAAngEAAAAAAACeAQAAAAAAAAcAAABNT0RVTEVTngEAAAAAAACfAQAAAAAAAAAAAACfAQAAAAAAAKABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQEAAAAAAACkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					463,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AQAAAKABAAAAAAAAoQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAEAAAAAAACgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					1,
					"insert",
					{
						"characters": "FALSE"
					},
					"BgAAAKIBAAAAAAAAowEAAAAAAAAAAAAAowEAAAAAAACjAQAAAAAAABoAAAAiQnVpbGQgc2hhcmVkIG1vZHVsZXMiIE9GRqMBAAAAAAAApAEAAAAAAAAAAAAApAEAAAAAAAClAQAAAAAAAAAAAAClAQAAAAAAAKYBAAAAAAAAAAAAAKYBAAAAAAAApwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "LIBRARY_P"
					},
					"CgAAAP03AAAAAAAA/jcAAAAAAAAAAAAA/jcAAAAAAAD+NwAAAAAAABsAAABDTUFLRV9JTVBPUlRfTElCUkFSWV9QUkVGSVj+NwAAAAAAAP83AAAAAAAAAAAAAP83AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAI4AAAAAAAAAAAAAAI4AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAAEOAAAAAAAAAAAAAAEOAAAAAAAAAU4AAAAAAAAAAAAAAU4AAAAAAAABjgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/TcAAAAAAAAYOAAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					1,
					"insert_completion",
					{
						"completion": "LIBRARY_PREFIX",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "LIBRARY_PREFIX"
					},
					"AgAAAP03AAAAAAAA/TcAAAAAAAAJAAAATElCUkFSWV9Q/TcAAAAAAAALOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABjgAAAAAAAAGOAAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					6,
					"left_delete",
					null,
					"BgAAACI4AAAAAAAAIjgAAAAAAAABAAAASSE4AAAAAAAAITgAAAAAAAABAAAAXyA4AAAAAAAAIDgAAAAAAAABAAAARR84AAAAAAAAHzgAAAAAAAABAAAASx44AAAAAAAAHjgAAAAAAAABAAAAQR04AAAAAAAAHTgAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAIjgAAAAAAAAjOAAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					7,
					"right_delete",
					null,
					"BwAAAB04AAAAAAAAHTgAAAAAAAABAAAATR04AAAAAAAAHTgAAAAAAAABAAAAUB04AAAAAAAAHTgAAAAAAAABAAAATx04AAAAAAAAHTgAAAAAAAABAAAAUh04AAAAAAAAHTgAAAAAAAABAAAAVB04AAAAAAAAHTgAAAAAAAABAAAAXx04AAAAAAAAHTgAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAHTgAAAAAAAAdOAAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"left_delete",
					null,
					"AQAAABw4AAAAAAAAHDgAAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAAHTgAAAAAAAAdOAAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"insert",
					{
						"characters": "L"
					},
					"AQAAABw4AAAAAAAAHTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHDgAAAAAAAAcOAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "",
			"file": "/home/roman/Projects/wasmedge-quickjs/example_js/es6_module_demo/c.",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"unsaved": true
			}
		},
		{
			"file": "cmake/QuickJSModule.cmake",
			"settings":
			{
				"buffer_size": 5364,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAEIJAAAAAAAAQwkAAAAAAAAAAAAAQwkAAAAAAABECQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgkAAAAAAABCCQAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEQJAAAAAAAARgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAkAAAAAAABECQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "WASI"
					},
					"BAAAAEUJAAAAAAAARgkAAAAAAAAAAAAARgkAAAAAAABHCQAAAAAAAAAAAABHCQAAAAAAAEgJAAAAAAAAAAAAAEgJAAAAAAAASQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQkAAAAAAABFCQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " OR"
					},
					"AwAAAEkJAAAAAAAASgkAAAAAAAAAAAAASgkAAAAAAABLCQAAAAAAAAAAAABLCQAAAAAAAEwJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQkAAAAAAABJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " WASM"
					},
					"BQAAAEwJAAAAAAAATQkAAAAAAAAAAAAATQkAAAAAAABOCQAAAAAAAAAAAABOCQAAAAAAAE8JAAAAAAAAAAAAAE8JAAAAAAAAUAkAAAAAAAAAAAAAUAkAAAAAAABRCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAkAAAAAAABMCQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\nset"
					},
					"BQAAAFIJAAAAAAAAUwkAAAAAAAAAAAAAUwkAAAAAAABVCQAAAAAAAAAAAABVCQAAAAAAAFYJAAAAAAAAAAAAAFYJAAAAAAAAVwkAAAAAAAAAAAAAVwkAAAAAAABYCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgkAAAAAAABSCQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFgJAAAAAAAAWgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAkAAAAAAABYCQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "PREFIX"
					},
					"BgAAAFkJAAAAAAAAWgkAAAAAAAAAAAAAWgkAAAAAAABbCQAAAAAAAAAAAABbCQAAAAAAAFwJAAAAAAAAAAAAAFwJAAAAAAAAXQkAAAAAAAAAAAAAXQkAAAAAAABeCQAAAAAAAAAAAABeCQAAAAAAAF8JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQkAAAAAAABZCQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF8JAAAAAAAAYAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwkAAAAAAABfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAGAJAAAAAAAAYgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAkAAAAAAABgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "lib"
					},
					"AwAAAGEJAAAAAAAAYgkAAAAAAAAAAAAAYgkAAAAAAABjCQAAAAAAAAAAAABjCQAAAAAAAGQJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQkAAAAAAABhCQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGYJAAAAAAAAZwkAAAAAAAAAAAAAZwkAAAAAAABpCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgkAAAAAAABmCQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"BAAAAEUJAAAAAAAARgkAAAAAAAAAAAAAaAkAAAAAAABoCQAAAAAAAAIAAAAgIEYJAAAAAAAARwkAAAAAAAAAAAAARwkAAAAAAABICQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQkAAAAAAABFCQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEgJAAAAAAAASQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAkAAAAAAABICQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAAE8JAAAAAAAATwkAAAAAAAABAAAAUk4JAAAAAAAATgkAAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAAUAkAAAAAAABQCQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "AND"
					},
					"AwAAAE4JAAAAAAAATwkAAAAAAAAAAAAATwkAAAAAAABQCQAAAAAAAAAAAABQCQAAAAAAAFEJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgkAAAAAAABOCQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " NOT"
					},
					"BAAAAFEJAAAAAAAAUgkAAAAAAAAAAAAAUgkAAAAAAABTCQAAAAAAAAAAAABTCQAAAAAAAFQJAAAAAAAAAAAAAFQJAAAAAAAAVQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQkAAAAAAABRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					3,
					"left_delete",
					null,
					"AwAAAGwJAAAAAAAAbAkAAAAAAAABAAAAYmsJAAAAAAAAawkAAAAAAAABAAAAaWoJAAAAAAAAagkAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAbQkAAAAAAABtCQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\nendif"
					},
					"BwAAAGwJAAAAAAAAbQkAAAAAAAAAAAAAbQkAAAAAAABvCQAAAAAAAAAAAABvCQAAAAAAAHAJAAAAAAAAAAAAAHAJAAAAAAAAcQkAAAAAAAAAAAAAcQkAAAAAAAByCQAAAAAAAAAAAAByCQAAAAAAAHMJAAAAAAAAAAAAAHMJAAAAAAAAdAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAkAAAAAAABsCQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AwAAAHQJAAAAAAAAdgkAAAAAAAAAAAAAbQkAAAAAAABtCQAAAAAAAAIAAAAgIG0JAAAAAAAAbQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAkAAAAAAAB0CQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAAHMJAAAAAAAAdAkAAAAAAAAAAAAAdAkAAAAAAAB1CQAAAAAAAAAAAAB1CQAAAAAAAHYJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwkAAAAAAABzCQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " WASI"
					},
					"BQAAAHYJAAAAAAAAdwkAAAAAAAAAAAAAdwkAAAAAAAB4CQAAAAAAAAAAAAB4CQAAAAAAAHkJAAAAAAAAAAAAAHkJAAAAAAAAegkAAAAAAAAAAAAAegkAAAAAAAB7CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgkAAAAAAAB2CQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " AND"
					},
					"BAAAAHsJAAAAAAAAfAkAAAAAAAAAAAAAfAkAAAAAAAB9CQAAAAAAAAAAAAB9CQAAAAAAAH4JAAAAAAAAAAAAAH4JAAAAAAAAfwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewkAAAAAAAB7CQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " NOT"
					},
					"BAAAAH8JAAAAAAAAgAkAAAAAAAAAAAAAgAkAAAAAAACBCQAAAAAAAAAAAACBCQAAAAAAAIIJAAAAAAAAAAAAAIIJAAAAAAAAgwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwkAAAAAAAB/CQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " A"
					},
					"AgAAAIMJAAAAAAAAhAkAAAAAAAAAAAAAhAkAAAAAAACFCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwkAAAAAAACDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"left_delete",
					null,
					"AQAAAIQJAAAAAAAAhAkAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAAhQkAAAAAAACFCQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "WA"
					},
					"AgAAAIQJAAAAAAAAhQkAAAAAAAAAAAAAhQkAAAAAAACGCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAkAAAAAAACECQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "SM"
					},
					"AgAAAIYJAAAAAAAAhwkAAAAAAAAAAAAAhwkAAAAAAACICQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgkAAAAAAACGCQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					2,
					"right_delete",
					null,
					"AgAAAEUJAAAAAAAARQkAAAAAAAADAAAATk9URQkAAAAAAABFCQAAAAAAAAEAAAAg",
					"AQAAAAAAAAABAAAARQkAAAAAAABICQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "IR"
					},
					"AwAAAEoJAAAAAAAASwkAAAAAAAAAAAAASwkAAAAAAABLCQAAAAAAAAcAAABBTkQgTk9USwkAAAAAAABMCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgkAAAAAAABRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					2,
					"left_delete",
					null,
					"AgAAAEsJAAAAAAAASwkAAAAAAAABAAAAUkoJAAAAAAAASgkAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAATAkAAAAAAABMCQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "OR"
					},
					"AgAAAEoJAAAAAAAASwkAAAAAAAAAAAAASwkAAAAAAABMCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgkAAAAAAABKCQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"cut",
					null,
					"AQAAAEIJAAAAAAAAQgkAAAAAAAAQAAAAaWYoV0FTSSBPUiBXQVNNKQ",
					"AQAAAAAAAAABAAAAQgkAAAAAAABSCQAAAAAAAP///////+9/"
				],
				[
					61,
					1,
					"paste",
					null,
					"AQAAAEIJAAAAAAAAUgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgkAAAAAAABCCQAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"paste",
					null,
					"AgAAAGcJAAAAAAAAdwkAAAAAAAAAAAAAdwkAAAAAAAB3CQAAAAAAABkAAABpZihOT1QgV0FTSSBBTkQgTk9UIFdBU00p",
					"AQAAAAAAAAABAAAAZwkAAAAAAACACQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "lib"
					},
					"AwAAAGEJAAAAAAAAYgkAAAAAAAAAAAAAYgkAAAAAAABjCQAAAAAAAAAAAABjCQAAAAAAAGQJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQkAAAAAAABhCQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"cut",
					null,
					"AQAAAEIJAAAAAAAAQgkAAAAAAAA5AAAAaWYoV0FTSSBPUiBXQVNNKQogIHNldChQUkVGSVggImxpYiIpCmVuZGlmKFdBU0kgT1IgV0FTTSkK",
					"AQAAAAAAAAABAAAAQgkAAAAAAAB7CQAAAAAAAAAAAAAAAAAA"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIkNAAAAAAAAig0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQ0AAAAAAACJDQAAAAAAAAAAAAAAAAAA"
				],
				[
					81,
					1,
					"paste",
					null,
					"AQAAAIoNAAAAAAAAww0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAig0AAAAAAACKDQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"cut",
					null,
					"AQAAAJsNAAAAAAAAmw0AAAAAAAAUAAAAICBzZXQoUFJFRklYICJsaWIiKQo",
					"AQAAAAAAAAABAAAAmw0AAAAAAACvDQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					2,
					"paste",
					null,
					"AgAAAJsNAAAAAAAArw0AAAAAAAAAAAAArw0AAAAAAADDDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmw0AAAAAAACbDQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAK8NAAAAAAAAsA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArw0AAAAAAACvDQAAAAAAAAAAAAAAAAAA"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "else"
					},
					"BAAAAK8NAAAAAAAAsA0AAAAAAAAAAAAAsA0AAAAAAACxDQAAAAAAAAAAAACxDQAAAAAAALINAAAAAAAAAAAAALINAAAAAAAAsw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArw0AAAAAAACvDQAAAAAAAAAAAAAAAAAA"
				],
				[
					96,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALMNAAAAAAAAtQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsw0AAAAAAACzDQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "WASI"
					},
					"BAAAALQNAAAAAAAAtQ0AAAAAAAAAAAAAtQ0AAAAAAAC2DQAAAAAAAAAAAAC2DQAAAAAAALcNAAAAAAAAAAAAALcNAAAAAAAAuA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtA0AAAAAAAC0DQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " OR"
					},
					"AwAAALgNAAAAAAAAuQ0AAAAAAAAAAAAAuQ0AAAAAAAC6DQAAAAAAAAAAAAC6DQAAAAAAALsNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuA0AAAAAAAC4DQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " WASM"
					},
					"BQAAALsNAAAAAAAAvA0AAAAAAAAAAAAAvA0AAAAAAAC9DQAAAAAAAAAAAAC9DQAAAAAAAL4NAAAAAAAAAAAAAL4NAAAAAAAAvw0AAAAAAAAAAAAAvw0AAAAAAADADQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuw0AAAAAAAC7DQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					3,
					"left_delete",
					null,
					"AwAAANINAAAAAAAA0g0AAAAAAAABAAAAYtENAAAAAAAA0Q0AAAAAAAABAAAAadANAAAAAAAA0A0AAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA0w0AAAAAAADTDQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA8PAAAAAAAAEA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADw8AAAAAAAAPDwAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AQAAAA8PAAAAAAAADw8AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAEA8AAAAAAAAQDwAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"cut",
					null,
					"AQAAAIkNAAAAAAAAiQ0AAAAAAABeAAAACmlmKFdBU0kgT1IgV0FTTSkKICBzZXQoUFJFRklYICJsaWIiKQplbHNlKFdBU0kgT1IgV0FTTSkKICBzZXQoUFJFRklYICIiKQplbmRpZihXQVNJIE9SIFdBU00pCg",
					"AQAAAAAAAAABAAAAiQ0AAAAAAADnDQAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"paste",
					null,
					"AQAAAMsIAAAAAAAAKQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywgAAAAAAADLCAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"cut",
					null,
					"AQAAAN0IAAAAAAAA3QgAAAAAAAAUAAAAICBzZXQoUFJFRklYICJsaWIiKQo",
					"AQAAAAAAAAABAAAA3QgAAAAAAADxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					2,
					"paste",
					null,
					"AgAAAN0IAAAAAAAA8QgAAAAAAAAAAAAA8QgAAAAAAAAFCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QgAAAAAAADdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"paste",
					null,
					"AgAAAPcIAAAAAAAACwkAAAAAAAAAAAAACwkAAAAAAAALCQAAAAAAAAYAAABQUkVGSVg",
					"AQAAAAAAAAABAAAA9wgAAAAAAAD9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "OFF"
					},
					"BAAAAAwJAAAAAAAADQkAAAAAAAAAAAAADQkAAAAAAAANCQAAAAAAAAUAAAAibGliIg0JAAAAAAAADgkAAAAAAAAAAAAADgkAAAAAAAAPCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAkAAAAAAAARCQAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADwEQAAZnVuY3Rpb24oY29uZmlnX21vZHVsZSBUQVJHRVRfTkFNRSkKICBpZihRVUlDS0pTX0xJQlJBUllfRElSKQogICAgc2V0X3RhcmdldF9wcm9wZXJ0aWVzKCR7VEFSR0VUX05BTUV9IFBST1BFUlRJRVMgTElOS19ESVJFQ1RPUklFUyAiJHtRVUlDS0pTX0xJQlJBUllfRElSfSIpCiAgZW5kaWYoUVVJQ0tKU19MSUJSQVJZX0RJUikKICBpZihRVUlDS0pTX01PRFVMRV9ERVBFTkRFTkNJRVMpCiAgICB0YXJnZXRfbGlua19saWJyYXJpZXMoJHtUQVJHRVRfTkFNRX0gJHtRVUlDS0pTX01PRFVMRV9ERVBFTkRFTkNJRVN9KQogIGVuZGlmKFFVSUNLSlNfTU9EVUxFX0RFUEVOREVOQ0lFUykKICBpZihRVUlDS0pTX01PRFVMRV9DRkxBR1MpCiAgICB0YXJnZXRfY29tcGlsZV9vcHRpb25zKCR7VEFSR0VUX05BTUV9IFBSSVZBVEUgIiR7UVVJQ0tKU19NT0RVTEVfQ0ZMQUdTfSIpCiAgZW5kaWYoUVVJQ0tKU19NT0RVTEVfQ0ZMQUdTKQplbmRmdW5jdGlvbihjb25maWdfbW9kdWxlIFRBUkdFVF9OQU1FKQoKZnVuY3Rpb24oY29tcGlsZV9tb2R1bGUgU09VUkNFKQogIGJhc2VuYW1lKEJBU0UgIiR7U09VUkNFfSIgLmpzKQogIG1lc3NhZ2UoU1RBVFVTICJDb21waWxlIFF1aWNrSlMgbW9kdWxlICcke0JBU0V9LmMnIGZyb20gJyR7U09VUkNFfSciKQoKICBzZXQoTU9EVUxFU19ESVIgIiR7Q01BS0VfQklOQVJZX0RJUn0vbW9kdWxlcyIpCiAgc2V0KE1PRFVMRVNfRElSICIke01PRFVMRVNfRElSfSIgUEFSRU5UX1NDT1BFKQogIGZpbGUoTUFLRV9ESVJFQ1RPUlkgIiR7TU9EVUxFU19ESVJ9IikKCiAgaWYoQVJHTikKICAgIHNldChPVVRQVVRfRklMRSAke0FSR059KQogIGVsc2UoQVJHTikKICAgIHNldChPVVRQVVRfRklMRSAiJHtNT0RVTEVTX0RJUn0vJHtCQVNFfS5jIikKICBlbmRpZihBUkdOKQoKICBsaXN0KEFQUEVORCBDT01QSUxFRF9NT0RVTEVTICIke0JBU0V9LmMiKQogIHNldChDT01QSUxFRF9NT0RVTEVTICIke0NPTVBJTEVEX01PRFVMRVN9IiBQQVJFTlRfU0NPUEUpCgogICNhZGRfY3VzdG9tX2NvbW1hbmQoT1VUUFVUICIke09VVFBVVF9GSUxFfSIgQ09NTUFORCBxanNjIC12IC1jIC1vICIke09VVFBVVF9GSUxFfSIgLW0gIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0iIERFUEVORFMgJHtRSlNDX0RFUFN9IFdPUktJTkdfRElSRUNUT1JZICIke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn0iQ09NTUVOVCAiR2VuZXJhdGUgJHtPVVRQVVRfRklMRX0gZnJvbSAke1NPVVJDRX0gdXNpbmcgcWpzIGNvbXBpbGVyIiBTT1VSQ0VTICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0gREVQRU5EUyBxanMtaW5zcGVjdCBxanMtbWlzYykKICBhZGRfY3VzdG9tX3RhcmdldCgKICAgICIke0JBU0V9LmMiCiAgICBCWVBST0RVQ1RTICIke09VVFBVVF9GSUxFfSIKICAgIENPTU1BTkQgIiR7UUpTQ30iIC12IC1jIC1vICIke09VVFBVVF9GSUxFfSIgLW0gIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0iCiAgICBERVBFTkRTICR7UUpTQ19ERVBTfQogICAgV09SS0lOR19ESVJFQ1RPUlkgIiR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfSIKICAgIENPTU1FTlQgIkdlbmVyYXRlICR7T1VUUFVUX0ZJTEV9IGZyb20gJHtTT1VSQ0V9IHVzaW5nIHFqcyBjb21waWxlciIKICAgIFNPVVJDRVMgIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0iICNERVBFTkRTIHFqcy1pbnNwZWN0IHFqcy1taXNjCiAgKQplbmRmdW5jdGlvbihjb21waWxlX21vZHVsZSBTT1VSQ0UpCgpmdW5jdGlvbihtYWtlX21vZHVsZSBGTkFNRSkKICAjbWVzc2FnZShTVEFUVVMgIkJ1aWxkaW5nIFF1aWNrSlMgbW9kdWxlOiAke0ZOQU1FfSIpCiAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIl8iICItIiBOQU1FICIke0ZOQU1FfSIpCiAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi0iICJfIiBWTkFNRSAiJHtGTkFNRX0iKQogIHN0cmluZyhUT1VQUEVSICIke0ZOQU1FfSIgVVVOQU1FKQogIHN0cmluZyhSRUdFWCBSRVBMQUNFICItIiAiXyIgVU5BTUUgIiR7VVVOQU1FfSIpCgogIHNldChUQVJHRVRfTkFNRSBxanMtJHtOQU1FfSkKCiAgaWYoQVJHTikKICAgIHNldChTT1VSQ0VTICR7QVJHTn0gJHske1ZOQU1FfV9TT1VSQ0VTfSkKICAgIHNldChERVBTICR7QVJHTn0gJHske1ZOQU1FfV9ERVBTfSkKICBlbHNlKEFSR04pCiAgICBzZXQoU09VUkNFUyBxdWlja2pzLSR7TkFNRX0uYyAkeyR7Vk5BTUV9X1NPVVJDRVN9KQogIGVuZGlmKEFSR04pCgppZihXQVNJIE9SIFdBU00pCiAgc2V0KFBSRUZJWCAibGliIikKICBzZXQoQlVJTERfU0hBUkVEX01PRFVMRVMgT0ZGKQplbHNlKFdBU0kgT1IgV0FTTSkKICBzZXQoUFJFRklYICIiKQplbmRpZihXQVNJIE9SIFdBU00pCgogICNkdW1wKFZOQU1FICR7Vk5BTUV9X1NPVVJDRVMgU09VUkNFUykKCiAgaWYoQlVJTERfU0hBUkVEX01PRFVMRVMpCiAgICBhZGRfbGlicmFyeSgke1RBUkdFVF9OQU1FfSBTSEFSRUQgJHtTT1VSQ0VTfSkKCiAgICBzZXRfdGFyZ2V0X3Byb3BlcnRpZXMoJHtUQVJHRVRfTkFNRX0gUFJPUEVSVElFUyBSUEFUSCAiJHtNQkVEVExTX0xJQlJBUllfRElSfSIgUFJFRklYICIiIE9VVFBVVF9OQU1FICIke1ZOQU1FfSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTVBJTEVfRkxBR1MgIiR7TU9EVUxFX0NPTVBJTEVfRkxBR1N9IikKCiAgICB0YXJnZXRfY29tcGlsZV9kZWZpbml0aW9ucygke1RBUkdFVF9OQU1FfSBQUklWQVRFIF9HTlVfU09VUkNFPTEgSlNfU0hBUkVEX0xJQlJBUlk9MSBKU18ke1VOQU1FfV9NT0RVTEU9MQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDT05GSUdfUFJFRklYPSIke1FVSUNLSlNfSU5TVEFMTF9QUkVGSVh9IikKCiAgICB0YXJnZXRfbGlua19kaXJlY3Rvcmllcygke1RBUkdFVF9OQU1FfSBQVUJMSUMgIiR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfSIpCiAgICB0YXJnZXRfbGlua19saWJyYXJpZXMoJHtUQVJHRVRfTkFNRX0gUFVCTElDICR7UVVJQ0tKU19MSUJSQVJZfSkKCiAgICAjbWVzc2FnZSgiQyBtb2R1bGUgZGlyOiAke1FVSUNLSlNfQ19NT0RVTEVfRElSfSIpCiAgICBpbnN0YWxsKFRBUkdFVFMgJHtUQVJHRVRfTkFNRX0gREVTVElOQVRJT04gIiR7UVVJQ0tKU19DX01PRFVMRV9ESVJ9IgogICAgICAgICAgICBQRVJNSVNTSU9OUyBPV05FUl9SRUFEIE9XTkVSX1dSSVRFIE9XTkVSX0VYRUNVVEUgR1JPVVBfUkVBRCBHUk9VUF9FWEVDVVRFIFdPUkxEX1JFQUQgV09STERfRVhFQ1VURSkKCiAgICBjb25maWdfbW9kdWxlKCR7VEFSR0VUX05BTUV9KQoKICAgIHNldChMSUJSQVJJRVMgJHske1ZOQU1FfV9MSUJSQVJJRVN9KQogICAgaWYoTElCUkFSSUVTKQogICAgICB0YXJnZXRfbGlua19saWJyYXJpZXMoJHtUQVJHRVRfTkFNRX0gUFJJVkFURSAke0xJQlJBUklFU30pCiAgICBlbmRpZihMSUJSQVJJRVMpCiAgICBpZihERVBTKQogICAgICBhZGRfZGVwZW5kZW5jaWVzKCR7VEFSR0VUX05BTUV9ICR7REVQU30pCiAgICBlbmRpZihERVBTKQoKICBlbmRpZihCVUlMRF9TSEFSRURfTU9EVUxFUykKCiAgYWRkX2xpYnJhcnkoJHtUQVJHRVRfTkFNRX0tc3RhdGljIFNUQVRJQyAke1NPVVJDRVN9KQoKICBzZXQoTU9EVUxFU19TVEFUSUMgIiR7UUpTX01PRFVMRVNfU1RBVElDfSIpCiAgbGlzdChBUFBFTkQgTU9EVUxFU19TVEFUSUMgIiR7VEFSR0VUX05BTUV9LXN0YXRpYyIpCiAgc2V0KFFKU19NT0RVTEVTX1NUQVRJQyAiJHtNT0RVTEVTX1NUQVRJQ30iIFBBUkVOVF9TQ09QRSkKCiAgc2V0X3RhcmdldF9wcm9wZXJ0aWVzKCR7VEFSR0VUX05BTUV9LXN0YXRpYyBQUk9QRVJUSUVTIE9VVFBVVF9OQU1FICIke1ZOQU1FfSIgQ09NUElMRV9GTEFHUyAiIikKICB0YXJnZXRfY29tcGlsZV9kZWZpbml0aW9ucygke1RBUkdFVF9OQU1FfS1zdGF0aWMgUFJJVkFURSBfR05VX1NPVVJDRT0xIEpTXyR7VU5BTUV9X01PRFVMRT0xCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ09ORklHX1BSRUZJWD0iJHtRVUlDS0pTX0lOU1RBTExfUFJFRklYfSIpCiAgdGFyZ2V0X2xpbmtfZGlyZWN0b3JpZXMoJHtUQVJHRVRfTkFNRX0tc3RhdGljIFBVQkxJQyAiJHtDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVJ9IikKICB0YXJnZXRfbGlua19saWJyYXJpZXMoJHtUQVJHRVRfTkFNRX0tc3RhdGljIFBVQkxJQyAke1FVSUNLSlNfTElCUkFSWX0pCgplbmRmdW5jdGlvbigpCgppZihXQVNJIE9SIEVNU0NSSVBURU4pCiAgc2V0KENNQUtFX0VYRUNVVEFCTEVfU1VGRklYICIud2FzbSIpCiAgb3B0aW9uKEJVSUxEX1NIQVJFRF9NT0RVTEVTICJCdWlsZCBzaGFyZWQgbW9kdWxlcyIgT0ZGKQplbHNlKFdBU0kgT1IgRU1TQ1JJUFRFTikKICBvcHRpb24oQlVJTERfU0hBUkVEX01PRFVMRVMgIkJ1aWxkIHNoYXJlZCBtb2R1bGVzIiBPTikKZW5kaWYoV0FTSSBPUiBFTVNDUklQVEVOKQoKaWYoV0lOMzIgT1IgTUlOR1cpCiAgc2V0KENNQUtFX1dJTkRPV1NfRVhQT1JUX0FMTF9TWU1CT0xTIFRSVUUpCmVuZGlmKFdJTjMyIE9SIE1JTkdXKQoAAAAAAAAAAOERAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgkAAAAAAABKCQAAAAAAAAAAAAAAAAAA"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "${PREFIX}"
					},
					"CQAAAC8KAAAAAAAAMAoAAAAAAAAAAAAAMAoAAAAAAAAxCgAAAAAAAAAAAAAxCgAAAAAAADIKAAAAAAAAAAAAADIKAAAAAAAAMwoAAAAAAAAAAAAAMwoAAAAAAAA0CgAAAAAAAAAAAAA0CgAAAAAAADUKAAAAAAAAAAAAADUKAAAAAAAANgoAAAAAAAAAAAAANgoAAAAAAAA3CgAAAAAAAAAAAAA3CgAAAAAAADgKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwoAAAAAAAAvCgAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADqEQAAZnVuY3Rpb24oY29uZmlnX21vZHVsZSBUQVJHRVRfTkFNRSkKICBpZihRVUlDS0pTX0xJQlJBUllfRElSKQogICAgc2V0X3RhcmdldF9wcm9wZXJ0aWVzKCR7VEFSR0VUX05BTUV9IFBST1BFUlRJRVMgTElOS19ESVJFQ1RPUklFUyAiJHtRVUlDS0pTX0xJQlJBUllfRElSfSIpCiAgZW5kaWYoUVVJQ0tKU19MSUJSQVJZX0RJUikKICBpZihRVUlDS0pTX01PRFVMRV9ERVBFTkRFTkNJRVMpCiAgICB0YXJnZXRfbGlua19saWJyYXJpZXMoJHtUQVJHRVRfTkFNRX0gJHtRVUlDS0pTX01PRFVMRV9ERVBFTkRFTkNJRVN9KQogIGVuZGlmKFFVSUNLSlNfTU9EVUxFX0RFUEVOREVOQ0lFUykKICBpZihRVUlDS0pTX01PRFVMRV9DRkxBR1MpCiAgICB0YXJnZXRfY29tcGlsZV9vcHRpb25zKCR7VEFSR0VUX05BTUV9IFBSSVZBVEUgIiR7UVVJQ0tKU19NT0RVTEVfQ0ZMQUdTfSIpCiAgZW5kaWYoUVVJQ0tKU19NT0RVTEVfQ0ZMQUdTKQplbmRmdW5jdGlvbihjb25maWdfbW9kdWxlIFRBUkdFVF9OQU1FKQoKZnVuY3Rpb24oY29tcGlsZV9tb2R1bGUgU09VUkNFKQogIGJhc2VuYW1lKEJBU0UgIiR7U09VUkNFfSIgLmpzKQogIG1lc3NhZ2UoU1RBVFVTICJDb21waWxlIFF1aWNrSlMgbW9kdWxlICcke0JBU0V9LmMnIGZyb20gJyR7U09VUkNFfSciKQoKICBzZXQoTU9EVUxFU19ESVIgIiR7Q01BS0VfQklOQVJZX0RJUn0vbW9kdWxlcyIpCiAgc2V0KE1PRFVMRVNfRElSICIke01PRFVMRVNfRElSfSIgUEFSRU5UX1NDT1BFKQogIGZpbGUoTUFLRV9ESVJFQ1RPUlkgIiR7TU9EVUxFU19ESVJ9IikKCiAgaWYoQVJHTikKICAgIHNldChPVVRQVVRfRklMRSAke0FSR059KQogIGVsc2UoQVJHTikKICAgIHNldChPVVRQVVRfRklMRSAiJHtNT0RVTEVTX0RJUn0vJHtCQVNFfS5jIikKICBlbmRpZihBUkdOKQoKICBsaXN0KEFQUEVORCBDT01QSUxFRF9NT0RVTEVTICIke0JBU0V9LmMiKQogIHNldChDT01QSUxFRF9NT0RVTEVTICIke0NPTVBJTEVEX01PRFVMRVN9IiBQQVJFTlRfU0NPUEUpCgogICNhZGRfY3VzdG9tX2NvbW1hbmQoT1VUUFVUICIke09VVFBVVF9GSUxFfSIgQ09NTUFORCBxanNjIC12IC1jIC1vICIke09VVFBVVF9GSUxFfSIgLW0gIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0iIERFUEVORFMgJHtRSlNDX0RFUFN9IFdPUktJTkdfRElSRUNUT1JZICIke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn0iQ09NTUVOVCAiR2VuZXJhdGUgJHtPVVRQVVRfRklMRX0gZnJvbSAke1NPVVJDRX0gdXNpbmcgcWpzIGNvbXBpbGVyIiBTT1VSQ0VTICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0gREVQRU5EUyBxanMtaW5zcGVjdCBxanMtbWlzYykKICBhZGRfY3VzdG9tX3RhcmdldCgKICAgICIke0JBU0V9LmMiCiAgICBCWVBST0RVQ1RTICIke09VVFBVVF9GSUxFfSIKICAgIENPTU1BTkQgIiR7UUpTQ30iIC12IC1jIC1vICIke09VVFBVVF9GSUxFfSIgLW0gIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0iCiAgICBERVBFTkRTICR7UUpTQ19ERVBTfQogICAgV09SS0lOR19ESVJFQ1RPUlkgIiR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfSIKICAgIENPTU1FTlQgIkdlbmVyYXRlICR7T1VUUFVUX0ZJTEV9IGZyb20gJHtTT1VSQ0V9IHVzaW5nIHFqcyBjb21waWxlciIKICAgIFNPVVJDRVMgIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0iICNERVBFTkRTIHFqcy1pbnNwZWN0IHFqcy1taXNjCiAgKQplbmRmdW5jdGlvbihjb21waWxlX21vZHVsZSBTT1VSQ0UpCgpmdW5jdGlvbihtYWtlX21vZHVsZSBGTkFNRSkKICAjbWVzc2FnZShTVEFUVVMgIkJ1aWxkaW5nIFF1aWNrSlMgbW9kdWxlOiAke0ZOQU1FfSIpCiAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIl8iICItIiBOQU1FICIke0ZOQU1FfSIpCiAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi0iICJfIiBWTkFNRSAiJHtGTkFNRX0iKQogIHN0cmluZyhUT1VQUEVSICIke0ZOQU1FfSIgVVVOQU1FKQogIHN0cmluZyhSRUdFWCBSRVBMQUNFICItIiAiXyIgVU5BTUUgIiR7VVVOQU1FfSIpCgogIHNldChUQVJHRVRfTkFNRSBxanMtJHtOQU1FfSkKCiAgaWYoQVJHTikKICAgIHNldChTT1VSQ0VTICR7QVJHTn0gJHske1ZOQU1FfV9TT1VSQ0VTfSkKICAgIHNldChERVBTICR7QVJHTn0gJHske1ZOQU1FfV9ERVBTfSkKICBlbHNlKEFSR04pCiAgICBzZXQoU09VUkNFUyBxdWlja2pzLSR7TkFNRX0uYyAkeyR7Vk5BTUV9X1NPVVJDRVN9KQogIGVuZGlmKEFSR04pCgogIGlmKFdBU0kgT1IgV0FTTSkKICAgIHNldChQUkVGSVggImxpYiIpCiAgICBzZXQoQlVJTERfU0hBUkVEX01PRFVMRVMgT0ZGKQogIGVsc2UoV0FTSSBPUiBXQVNNKQogICAgc2V0KFBSRUZJWCAiIikKICBlbmRpZihXQVNJIE9SIFdBU00pCgogICNkdW1wKFZOQU1FICR7Vk5BTUV9X1NPVVJDRVMgU09VUkNFUykKCiAgaWYoQlVJTERfU0hBUkVEX01PRFVMRVMpCiAgICBhZGRfbGlicmFyeSgke1RBUkdFVF9OQU1FfSBTSEFSRUQgJHtTT1VSQ0VTfSkKCiAgICBzZXRfdGFyZ2V0X3Byb3BlcnRpZXMoCiAgICAgICR7VEFSR0VUX05BTUV9IFBST1BFUlRJRVMgUlBBVEggIiR7TUJFRFRMU19MSUJSQVJZX0RJUn0iIFBSRUZJWCAiJHtQUkVGSVh9IiBPVVRQVVRfTkFNRSAiJHtWTkFNRX0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ09NUElMRV9GTEFHUyAiJHtNT0RVTEVfQ09NUElMRV9GTEFHU30iKQoKICAgIHRhcmdldF9jb21waWxlX2RlZmluaXRpb25zKAogICAgICAke1RBUkdFVF9OQU1FfSBQUklWQVRFIF9HTlVfU09VUkNFPTEgSlNfU0hBUkVEX0xJQlJBUlk9MSBKU18ke1VOQU1FfV9NT0RVTEU9MQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTkZJR19QUkVGSVg9IiR7UVVJQ0tKU19JTlNUQUxMX1BSRUZJWH0iKQoKICAgIHRhcmdldF9saW5rX2RpcmVjdG9yaWVzKCR7VEFSR0VUX05BTUV9IFBVQkxJQyAiJHtDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVJ9IikKICAgIHRhcmdldF9saW5rX2xpYnJhcmllcygke1RBUkdFVF9OQU1FfSBQVUJMSUMgJHtRVUlDS0pTX0xJQlJBUll9KQoKICAgICNtZXNzYWdlKCJDIG1vZHVsZSBkaXI6ICR7UVVJQ0tKU19DX01PRFVMRV9ESVJ9IikKICAgIGluc3RhbGwoVEFSR0VUUyAke1RBUkdFVF9OQU1FfSBERVNUSU5BVElPTiAiJHtRVUlDS0pTX0NfTU9EVUxFX0RJUn0iCiAgICAgICAgICAgIFBFUk1JU1NJT05TIE9XTkVSX1JFQUQgT1dORVJfV1JJVEUgT1dORVJfRVhFQ1VURSBHUk9VUF9SRUFEIEdST1VQX0VYRUNVVEUgV09STERfUkVBRAogICAgICAgICAgICAgICAgICAgICAgICBXT1JMRF9FWEVDVVRFKQoKICAgIGNvbmZpZ19tb2R1bGUoJHtUQVJHRVRfTkFNRX0pCgogICAgc2V0KExJQlJBUklFUyAkeyR7Vk5BTUV9X0xJQlJBUklFU30pCiAgICBpZihMSUJSQVJJRVMpCiAgICAgIHRhcmdldF9saW5rX2xpYnJhcmllcygke1RBUkdFVF9OQU1FfSBQUklWQVRFICR7TElCUkFSSUVTfSkKICAgIGVuZGlmKExJQlJBUklFUykKICAgIGlmKERFUFMpCiAgICAgIGFkZF9kZXBlbmRlbmNpZXMoJHtUQVJHRVRfTkFNRX0gJHtERVBTfSkKICAgIGVuZGlmKERFUFMpCgogIGVuZGlmKEJVSUxEX1NIQVJFRF9NT0RVTEVTKQoKICBhZGRfbGlicmFyeSgke1RBUkdFVF9OQU1FfS1zdGF0aWMgU1RBVElDICR7U09VUkNFU30pCgogIHNldChNT0RVTEVTX1NUQVRJQyAiJHtRSlNfTU9EVUxFU19TVEFUSUN9IikKICBsaXN0KEFQUEVORCBNT0RVTEVTX1NUQVRJQyAiJHtUQVJHRVRfTkFNRX0tc3RhdGljIikKICBzZXQoUUpTX01PRFVMRVNfU1RBVElDICIke01PRFVMRVNfU1RBVElDfSIgUEFSRU5UX1NDT1BFKQoKICBzZXRfdGFyZ2V0X3Byb3BlcnRpZXMoJHtUQVJHRVRfTkFNRX0tc3RhdGljIFBST1BFUlRJRVMgT1VUUFVUX05BTUUgIiR7Vk5BTUV9IiBDT01QSUxFX0ZMQUdTICIiKQogIHRhcmdldF9jb21waWxlX2RlZmluaXRpb25zKAogICAgJHtUQVJHRVRfTkFNRX0tc3RhdGljIFBSSVZBVEUgX0dOVV9TT1VSQ0U9MSBKU18ke1VOQU1FfV9NT0RVTEU9MQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ09ORklHX1BSRUZJWD0iJHtRVUlDS0pTX0lOU1RBTExfUFJFRklYfSIpCiAgdGFyZ2V0X2xpbmtfZGlyZWN0b3JpZXMoJHtUQVJHRVRfTkFNRX0tc3RhdGljIFBVQkxJQyAiJHtDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVJ9IikKICB0YXJnZXRfbGlua19saWJyYXJpZXMoJHtUQVJHRVRfTkFNRX0tc3RhdGljIFBVQkxJQyAke1FVSUNLSlNfTElCUkFSWX0pCgplbmRmdW5jdGlvbigpCgppZihXQVNJIE9SIEVNU0NSSVBURU4pCiAgc2V0KENNQUtFX0VYRUNVVEFCTEVfU1VGRklYICIud2FzbSIpCiAgb3B0aW9uKEJVSUxEX1NIQVJFRF9NT0RVTEVTICJCdWlsZCBzaGFyZWQgbW9kdWxlcyIgT0ZGKQplbHNlKFdBU0kgT1IgRU1TQ1JJUFRFTikKICBvcHRpb24oQlVJTERfU0hBUkVEX01PRFVMRVMgIkJ1aWxkIHNoYXJlZCBtb2R1bGVzIiBPTikKZW5kaWYoV0FTSSBPUiBFTVNDUklQVEVOKQoKaWYoV0lOMzIgT1IgTUlOR1cpCiAgc2V0KENNQUtFX1dJTkRPV1NfRVhQT1JUX0FMTF9TWU1CT0xTIFRSVUUpCmVuZGlmKFdJTjMyIE9SIE1JTkdXKQoAAAAAAAAAAGISAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAoAAAAAAAA4CgAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAANEIAAAAAAAA0ggAAAAAAAAAAAAA0ggAAAAAAADTCAAAAAAAAAAAAADTCAAAAAAAANQIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QgAAAAAAADRCAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANQIAAAAAAAA1QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AgAAAAAAADUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					2,
					"right_delete",
					null,
					"AgAAANoIAAAAAAAA2ggAAAAAAAABAAAAT9oIAAAAAAAA2ggAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAA2ggAAAAAAADaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "AND"
					},
					"AwAAANoIAAAAAAAA2wgAAAAAAAAAAAAA2wgAAAAAAADcCAAAAAAAAAAAAADcCAAAAAAAAN0IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2ggAAAAAAADaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"cut",
					null,
					"AQAAANEIAAAAAAAA0QgAAAAAAAAJAAAATk9UIFdBU0kg",
					"AQAAAAAAAAABAAAA0QgAAAAAAADaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"paste",
					null,
					"AQAAANEIAAAAAAAA2ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QgAAAAAAADRCAAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"cut",
					null,
					"AQAAACYJAAAAAAAAJgkAAAAAAAAgAAAAc2V0KEJVSUxEX1NIQVJFRF9NT0RVTEVTIE9GRikKICA",
					"AQAAAAAAAAABAAAAJgkAAAAAAABGCQAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAAMsIAAAAAAAAzAgAAAAAAAAAAAAAzAgAAAAAAADNCAAAAAAAAAAAAADNCAAAAAAAAM4IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywgAAAAAAADLCAAAAAAAAAAAAAAAAERA"
				],
				[
					195,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM4IAAAAAAAA0AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzggAAAAAAADOCAAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "WASI"
					},
					"BAAAAM8IAAAAAAAA0AgAAAAAAAAAAAAA0AgAAAAAAADRCAAAAAAAAAAAAADRCAAAAAAAANIIAAAAAAAAAAAAANIIAAAAAAAA0wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwgAAAAAAADPCAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"left_delete",
					null,
					"AQAAANIIAAAAAAAA0ggAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAA0wgAAAAAAADTCAAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AQAAANIIAAAAAAAA0wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0ggAAAAAAADSCAAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": " OR"
					},
					"AwAAANMIAAAAAAAA1AgAAAAAAAAAAAAA1AgAAAAAAADVCAAAAAAAAAAAAADVCAAAAAAAANYIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wgAAAAAAADTCAAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYIAAAAAAAA1wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1ggAAAAAAADWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "E;S"
					},
					"BAAAANcIAAAAAAAA2AgAAAAAAAAAAAAA2AgAAAAAAADYCAAAAAAAAAEAAAAp2AgAAAAAAADZCAAAAAAAAAAAAADZCAAAAAAAANoIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wgAAAAAAADYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					2,
					"left_delete",
					null,
					"AgAAANkIAAAAAAAA2QgAAAAAAAABAAAAU9gIAAAAAAAA2AgAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA2ggAAAAAAADaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "MSCRIPTEN"
					},
					"CQAAANgIAAAAAAAA2QgAAAAAAAAAAAAA2QgAAAAAAADaCAAAAAAAAAAAAADaCAAAAAAAANsIAAAAAAAAAAAAANsIAAAAAAAA3AgAAAAAAAAAAAAA3AgAAAAAAADdCAAAAAAAAAAAAADdCAAAAAAAAN4IAAAAAAAAAAAAAN4IAAAAAAAA3wgAAAAAAAAAAAAA3wgAAAAAAADgCAAAAAAAAAAAAADgCAAAAAAAAOEIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AgAAAAAAADYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOEIAAAAAAAA4ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QgAAAAAAADhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"paste",
					null,
					"AQAAAOIIAAAAAAAAEAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4ggAAAAAAADiCAAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": " R"
					},
					"AgAAAOEIAAAAAAAA4ggAAAAAAAAAAAAA4ggAAAAAAADjCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QgAAAAAAADhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"left_delete",
					null,
					"AQAAAOIIAAAAAAAA4ggAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAA4wgAAAAAAADjCAAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "OR"
					},
					"AgAAAOIIAAAAAAAA4wgAAAAAAAAAAAAA4wgAAAAAAADkCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4ggAAAAAAADiCAAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "\nendif"
					},
					"BwAAABMJAAAAAAAAFAkAAAAAAAAAAAAAFAkAAAAAAAAWCQAAAAAAAAAAAAAWCQAAAAAAABcJAAAAAAAAAAAAABcJAAAAAAAAGAkAAAAAAAAAAAAAGAkAAAAAAAAZCQAAAAAAAAAAAAAZCQAAAAAAABoJAAAAAAAAAAAAABoJAAAAAAAAGwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwkAAAAAAAATCQAAAAAAAP///////+9/"
				],
				[
					220,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AwAAABsJAAAAAAAAHQkAAAAAAAAAAAAAFAkAAAAAAAAUCQAAAAAAAAIAAAAgIBQJAAAAAAAAFAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwkAAAAAAAAbCQAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"left_delete",
					null,
					"AgAAABoJAAAAAAAAGgkAAAAAAAABAAAAKRQJAAAAAAAAFgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwkAAAAAAAAbCQAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"paste",
					null,
					"AQAAABwJAAAAAAAAYAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAkAAAAAAAAcCQAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AwAAAGAJAAAAAAAAYQkAAAAAAAAAAAAAFAkAAAAAAAAUCQAAAAAAAAIAAAAgIBQJAAAAAAAAFAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAkAAAAAAABgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"left_delete",
					null,
					"AQAAAF4JAAAAAAAAXgkAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAXwkAAAAAAABfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "\nset"
					},
					"BQAAABMJAAAAAAAAFAkAAAAAAAAAAAAAFAkAAAAAAAAWCQAAAAAAAAAAAAAWCQAAAAAAABcJAAAAAAAAAAAAABcJAAAAAAAAGAkAAAAAAAAAAAAAGAkAAAAAAAAZCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwkAAAAAAAATCQAAAAAAAAAAAAAAIIdA"
				],
				[
					232,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABkJAAAAAAAAGwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQkAAAAAAAAZCQAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": "WASM"
					},
					"BAAAABoJAAAAAAAAGwkAAAAAAAAAAAAAGwkAAAAAAAAcCQAAAAAAAAAAAAAcCQAAAAAAAB0JAAAAAAAAAAAAAB0JAAAAAAAAHgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgkAAAAAAAAaCQAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"cut",
					null,
					"AQAAABYJAAAAAAAAFgkAAAAAAAAJAAAAc2V0KFdBU00p",
					"AQAAAAAAAAABAAAAFgkAAAAAAAAfCQAAAAAAAP///////+9/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "set"
					},
					"AwAAABYJAAAAAAAAFwkAAAAAAAAAAAAAFwkAAAAAAAAYCQAAAAAAAAAAAAAYCQAAAAAAABkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgkAAAAAAAAWCQAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABkJAAAAAAAAGwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQkAAAAAAAAZCQAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "BUILD_"
					},
					"BgAAABoJAAAAAAAAGwkAAAAAAAAAAAAAGwkAAAAAAAAcCQAAAAAAAAAAAAAcCQAAAAAAAB0JAAAAAAAAAAAAAB0JAAAAAAAAHgkAAAAAAAAAAAAAHgkAAAAAAAAfCQAAAAAAAAAAAAAfCQAAAAAAACAJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgkAAAAAAAAaCQAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"insert_completion",
					{
						"completion": "BUILD_SHARED_MODULES",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "BUILD_SHARED_MODULES"
					},
					"AgAAABoJAAAAAAAAGgkAAAAAAAAGAAAAQlVJTERfGgkAAAAAAAAuCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAkAAAAAAAAgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": " OFF"
					},
					"BAAAAC4JAAAAAAAALwkAAAAAAAAAAAAALwkAAAAAAAAwCQAAAAAAAAAAAAAwCQAAAAAAADEJAAAAAAAAAAAAADEJAAAAAAAAMgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgkAAAAAAAAuCQAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAH4JAAAAAAAAfwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgkAAAAAAAB+CQAAAAAAAP///////+9/"
				],
				[
					256,
					1,
					"paste",
					null,
					"AgAAAN8JAAAAAAAA7AkAAAAAAAAAAAAA7AkAAAAAAADsCQAAAAAAAAcAAABXQVNJIE9S",
					"AQAAAAAAAAABAAAA3wkAAAAAAADmCQAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"paste",
					null,
					"AgAAADYKAAAAAAAAQwoAAAAAAAAAAAAAQwoAAAAAAABDCgAAAAAAAAgAAABXQVNJIE9SIA",
					"AQAAAAAAAAABAAAANgoAAAAAAAA+CgAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGEwAAZnVuY3Rpb24oY29uZmlnX21vZHVsZSBUQVJHRVRfTkFNRSkKICBpZihRVUlDS0pTX0xJQlJBUllfRElSKQogICAgc2V0X3RhcmdldF9wcm9wZXJ0aWVzKCR7VEFSR0VUX05BTUV9IFBST1BFUlRJRVMgTElOS19ESVJFQ1RPUklFUyAiJHtRVUlDS0pTX0xJQlJBUllfRElSfSIpCiAgZW5kaWYoUVVJQ0tKU19MSUJSQVJZX0RJUikKICBpZihRVUlDS0pTX01PRFVMRV9ERVBFTkRFTkNJRVMpCiAgICB0YXJnZXRfbGlua19saWJyYXJpZXMoJHtUQVJHRVRfTkFNRX0gJHtRVUlDS0pTX01PRFVMRV9ERVBFTkRFTkNJRVN9KQogIGVuZGlmKFFVSUNLSlNfTU9EVUxFX0RFUEVOREVOQ0lFUykKICBpZihRVUlDS0pTX01PRFVMRV9DRkxBR1MpCiAgICB0YXJnZXRfY29tcGlsZV9vcHRpb25zKCR7VEFSR0VUX05BTUV9IFBSSVZBVEUgIiR7UVVJQ0tKU19NT0RVTEVfQ0ZMQUdTfSIpCiAgZW5kaWYoUVVJQ0tKU19NT0RVTEVfQ0ZMQUdTKQplbmRmdW5jdGlvbihjb25maWdfbW9kdWxlIFRBUkdFVF9OQU1FKQoKZnVuY3Rpb24oY29tcGlsZV9tb2R1bGUgU09VUkNFKQogIGJhc2VuYW1lKEJBU0UgIiR7U09VUkNFfSIgLmpzKQogIG1lc3NhZ2UoU1RBVFVTICJDb21waWxlIFF1aWNrSlMgbW9kdWxlICcke0JBU0V9LmMnIGZyb20gJyR7U09VUkNFfSciKQoKICBzZXQoTU9EVUxFU19ESVIgIiR7Q01BS0VfQklOQVJZX0RJUn0vbW9kdWxlcyIpCiAgc2V0KE1PRFVMRVNfRElSICIke01PRFVMRVNfRElSfSIgUEFSRU5UX1NDT1BFKQogIGZpbGUoTUFLRV9ESVJFQ1RPUlkgIiR7TU9EVUxFU19ESVJ9IikKCiAgaWYoQVJHTikKICAgIHNldChPVVRQVVRfRklMRSAke0FSR059KQogIGVsc2UoQVJHTikKICAgIHNldChPVVRQVVRfRklMRSAiJHtNT0RVTEVTX0RJUn0vJHtCQVNFfS5jIikKICBlbmRpZihBUkdOKQoKICBsaXN0KEFQUEVORCBDT01QSUxFRF9NT0RVTEVTICIke0JBU0V9LmMiKQogIHNldChDT01QSUxFRF9NT0RVTEVTICIke0NPTVBJTEVEX01PRFVMRVN9IiBQQVJFTlRfU0NPUEUpCgogICNhZGRfY3VzdG9tX2NvbW1hbmQoT1VUUFVUICIke09VVFBVVF9GSUxFfSIgQ09NTUFORCBxanNjIC12IC1jIC1vICIke09VVFBVVF9GSUxFfSIgLW0gIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0iIERFUEVORFMgJHtRSlNDX0RFUFN9IFdPUktJTkdfRElSRUNUT1JZICIke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn0iQ09NTUVOVCAiR2VuZXJhdGUgJHtPVVRQVVRfRklMRX0gZnJvbSAke1NPVVJDRX0gdXNpbmcgcWpzIGNvbXBpbGVyIiBTT1VSQ0VTICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0gREVQRU5EUyBxanMtaW5zcGVjdCBxanMtbWlzYykKICBhZGRfY3VzdG9tX3RhcmdldCgKICAgICIke0JBU0V9LmMiCiAgICBCWVBST0RVQ1RTICIke09VVFBVVF9GSUxFfSIKICAgIENPTU1BTkQgIiR7UUpTQ30iIC12IC1jIC1vICIke09VVFBVVF9GSUxFfSIgLW0gIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0iCiAgICBERVBFTkRTICR7UUpTQ19ERVBTfQogICAgV09SS0lOR19ESVJFQ1RPUlkgIiR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfSIKICAgIENPTU1FTlQgIkdlbmVyYXRlICR7T1VUUFVUX0ZJTEV9IGZyb20gJHtTT1VSQ0V9IHVzaW5nIHFqcyBjb21waWxlciIKICAgIFNPVVJDRVMgIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8ke1NPVVJDRX0iICNERVBFTkRTIHFqcy1pbnNwZWN0IHFqcy1taXNjCiAgKQplbmRmdW5jdGlvbihjb21waWxlX21vZHVsZSBTT1VSQ0UpCgpmdW5jdGlvbihtYWtlX21vZHVsZSBGTkFNRSkKICAjbWVzc2FnZShTVEFUVVMgIkJ1aWxkaW5nIFF1aWNrSlMgbW9kdWxlOiAke0ZOQU1FfSIpCiAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIl8iICItIiBOQU1FICIke0ZOQU1FfSIpCiAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi0iICJfIiBWTkFNRSAiJHtGTkFNRX0iKQogIHN0cmluZyhUT1VQUEVSICIke0ZOQU1FfSIgVVVOQU1FKQogIHN0cmluZyhSRUdFWCBSRVBMQUNFICItIiAiXyIgVU5BTUUgIiR7VVVOQU1FfSIpCgogIHNldChUQVJHRVRfTkFNRSBxanMtJHtOQU1FfSkKCiAgaWYoQVJHTikKICAgIHNldChTT1VSQ0VTICR7QVJHTn0gJHske1ZOQU1FfV9TT1VSQ0VTfSkKICAgIHNldChERVBTICR7QVJHTn0gJHske1ZOQU1FfV9ERVBTfSkKICBlbHNlKEFSR04pCiAgICBzZXQoU09VUkNFUyBxdWlja2pzLSR7TkFNRX0uYyAkeyR7Vk5BTUV9X1NPVVJDRVN9KQogIGVuZGlmKEFSR04pCgppZihXQVNJIE9SIEVNU0NSSVBURU4gT1IgICIke0NNQUtFX1NZU1RFTV9OQU1FfSIgU1RSRVFVQUwgIkVtc2NyaXB0ZW4iKQogIHNldChCVUlMRF9TSEFSRURfTU9EVUxFUyBPRkYpCmVuZGlmKFdBU0kgT1IgRU1TQ1JJUFRFTiBPUiAgIiR7Q01BS0VfU1lTVEVNX05BTUV9IiBTVFJFUVVBTCAiRW1zY3JpcHRlbiIpCgogIGlmKE5PVCBXQVNJIEFORCAiJHtDTUFLRV9TWVNURU1fTkFNRX0iIFNUUkVRVUFMICJFbXNjcmlwdGVuIikKICAgIHNldChQUkVGSVggImxpYiIpCiAgICBlbHNlKE5PVCBXQVNJIEFORCAgIiR7Q01BS0VfU1lTVEVNX05BTUV9IiBTVFJFUVVBTCAiRW1zY3JpcHRlbiIpCiAgICBzZXQoUFJFRklYICIiKQogIGVuZGlmKE5PVCBXQVNJIEFORCAiJHtDTUFLRV9TWVNURU1fTkFNRX0iIFNUUkVRVUFMICJFbXNjcmlwdGVuIikKCiAgI2R1bXAoVk5BTUUgJHtWTkFNRX1fU09VUkNFUyBTT1VSQ0VTKQoKICBpZihCVUlMRF9TSEFSRURfTU9EVUxFUykKICAgIGFkZF9saWJyYXJ5KCR7VEFSR0VUX05BTUV9IFNIQVJFRCAke1NPVVJDRVN9KQoKICAgIHNldF90YXJnZXRfcHJvcGVydGllcygKICAgICAgJHtUQVJHRVRfTkFNRX0gUFJPUEVSVElFUyBSUEFUSCAiJHtNQkVEVExTX0xJQlJBUllfRElSfSIgUFJFRklYICIke1BSRUZJWH0iIE9VVFBVVF9OQU1FICIke1ZOQU1FfSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDT01QSUxFX0ZMQUdTICIke01PRFVMRV9DT01QSUxFX0ZMQUdTfSIpCgogICAgdGFyZ2V0X2NvbXBpbGVfZGVmaW5pdGlvbnMoCiAgICAgICR7VEFSR0VUX05BTUV9IFBSSVZBVEUgX0dOVV9TT1VSQ0U9MSBKU19TSEFSRURfTElCUkFSWT0xIEpTXyR7VU5BTUV9X01PRFVMRT0xCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ09ORklHX1BSRUZJWD0iJHtRVUlDS0pTX0lOU1RBTExfUFJFRklYfSIpCgogICAgdGFyZ2V0X2xpbmtfZGlyZWN0b3JpZXMoJHtUQVJHRVRfTkFNRX0gUFVCTElDICIke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn0iKQogICAgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKCR7VEFSR0VUX05BTUV9IFBVQkxJQyAke1FVSUNLSlNfTElCUkFSWX0pCgogICAgI21lc3NhZ2UoIkMgbW9kdWxlIGRpcjogJHtRVUlDS0pTX0NfTU9EVUxFX0RJUn0iKQogICAgaW5zdGFsbChUQVJHRVRTICR7VEFSR0VUX05BTUV9IERFU1RJTkFUSU9OICIke1FVSUNLSlNfQ19NT0RVTEVfRElSfSIKICAgICAgICAgICAgUEVSTUlTU0lPTlMgT1dORVJfUkVBRCBPV05FUl9XUklURSBPV05FUl9FWEVDVVRFIEdST1VQX1JFQUQgR1JPVVBfRVhFQ1VURSBXT1JMRF9SRUFECiAgICAgICAgICAgICAgICAgICAgICAgIFdPUkxEX0VYRUNVVEUpCgogICAgY29uZmlnX21vZHVsZSgke1RBUkdFVF9OQU1FfSkKCiAgICBzZXQoTElCUkFSSUVTICR7JHtWTkFNRX1fTElCUkFSSUVTfSkKICAgIGlmKExJQlJBUklFUykKICAgICAgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKCR7VEFSR0VUX05BTUV9IFBSSVZBVEUgJHtMSUJSQVJJRVN9KQogICAgZW5kaWYoTElCUkFSSUVTKQogICAgaWYoREVQUykKICAgICAgYWRkX2RlcGVuZGVuY2llcygke1RBUkdFVF9OQU1FfSAke0RFUFN9KQogICAgZW5kaWYoREVQUykKCiAgZW5kaWYoQlVJTERfU0hBUkVEX01PRFVMRVMpCgogIGFkZF9saWJyYXJ5KCR7VEFSR0VUX05BTUV9LXN0YXRpYyBTVEFUSUMgJHtTT1VSQ0VTfSkKCiAgc2V0KE1PRFVMRVNfU1RBVElDICIke1FKU19NT0RVTEVTX1NUQVRJQ30iKQogIGxpc3QoQVBQRU5EIE1PRFVMRVNfU1RBVElDICIke1RBUkdFVF9OQU1FfS1zdGF0aWMiKQogIHNldChRSlNfTU9EVUxFU19TVEFUSUMgIiR7TU9EVUxFU19TVEFUSUN9IiBQQVJFTlRfU0NPUEUpCgogIHNldF90YXJnZXRfcHJvcGVydGllcygke1RBUkdFVF9OQU1FfS1zdGF0aWMgUFJPUEVSVElFUyBPVVRQVVRfTkFNRSAiJHtWTkFNRX0iIENPTVBJTEVfRkxBR1MgIiIpCiAgdGFyZ2V0X2NvbXBpbGVfZGVmaW5pdGlvbnMoCiAgICAke1RBUkdFVF9OQU1FfS1zdGF0aWMgUFJJVkFURSBfR05VX1NPVVJDRT0xIEpTXyR7VU5BTUV9X01PRFVMRT0xCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDT05GSUdfUFJFRklYPSIke1FVSUNLSlNfSU5TVEFMTF9QUkVGSVh9IikKICB0YXJnZXRfbGlua19kaXJlY3Rvcmllcygke1RBUkdFVF9OQU1FfS1zdGF0aWMgUFVCTElDICIke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn0iKQogIHRhcmdldF9saW5rX2xpYnJhcmllcygke1RBUkdFVF9OQU1FfS1zdGF0aWMgUFVCTElDICR7UVVJQ0tKU19MSUJSQVJZfSkKCmVuZGZ1bmN0aW9uKCkKCmlmKFdBU0kgT1IgRU1TQ1JJUFRFTikKICBzZXQoQ01BS0VfRVhFQ1VUQUJMRV9TVUZGSVggIi53YXNtIikKICBvcHRpb24oQlVJTERfU0hBUkVEX01PRFVMRVMgIkJ1aWxkIHNoYXJlZCBtb2R1bGVzIiBPRkYpCmVsc2UoV0FTSSBPUiBFTVNDUklQVEVOKQogIG9wdGlvbihCVUlMRF9TSEFSRURfTU9EVUxFUyAiQnVpbGQgc2hhcmVkIG1vZHVsZXMiIE9OKQplbmRpZihXQVNJIE9SIEVNU0NSSVBURU4pCgppZihXSU4zMiBPUiBNSU5HVykKICBzZXQoQ01BS0VfV0lORE9XU19FWFBPUlRfQUxMX1NZTUJPTFMgVFJVRSkKZW5kaWYoV0lOMzIgT1IgTUlOR1cpCgAAAAAAAAAA/hIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwoAAAAAAABDCgAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFIQAAAAAAAAUxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhAAAAAAAABSEAAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": "SUFFIX"
					},
					"BgAAAFIQAAAAAAAAUxAAAAAAAAAAAAAAUxAAAAAAAABUEAAAAAAAAAAAAABUEAAAAAAAAFUQAAAAAAAAAAAAAFUQAAAAAAAAVhAAAAAAAAAAAAAAVhAAAAAAAABXEAAAAAAAAAAAAABXEAAAAAAAAFgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhAAAAAAAABSEAAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFgQAAAAAAAAWRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBAAAAAAAABYEAAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAFkQAAAAAAAAWxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWRAAAAAAAABZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "${CMAKE"
					},
					"BwAAAFoQAAAAAAAAWxAAAAAAAAAAAAAAWxAAAAAAAABcEAAAAAAAAAAAAABcEAAAAAAAAF0QAAAAAAAAAAAAAF0QAAAAAAAAXhAAAAAAAAAAAAAAXhAAAAAAAABfEAAAAAAAAAAAAABfEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAYRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhAAAAAAAABaEAAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": "_IMPORT"
					},
					"BwAAAGEQAAAAAAAAYhAAAAAAAAAAAAAAYhAAAAAAAABjEAAAAAAAAAAAAABjEAAAAAAAAGQQAAAAAAAAAAAAAGQQAAAAAAAAZRAAAAAAAAAAAAAAZRAAAAAAAABmEAAAAAAAAAAAAABmEAAAAAAAAGcQAAAAAAAAAAAAAGcQAAAAAAAAaBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYRAAAAAAAABhEAAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"insert_completion",
					{
						"completion": "CMAKE_IMPORT_LIBRARY_SUFFIX",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "CMAKE_IMPORT_LIBRARY_SUFFIX"
					},
					"AgAAAFwQAAAAAAAAXBAAAAAAAAAMAAAAQ01BS0VfSU1QT1JUXBAAAAAAAAB3EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBAAAAAAAABoEAAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAHcQAAAAAAAAeBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxAAAAAAAAB3EAAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAAAQAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABhAAAAAAAAAAAAAAARAAAAAAAAABEAAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"paste",
					null,
					"AQAAAAQQAAAAAAAA+xAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBAAAAAAAAAEEAAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"left_delete",
					null,
					"AgAAAIMQAAAAAAAAgxAAAAAAAAANAAAAQ01BS0VfSU1QT1JUXwIQAAAAAAAAAhAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAkBAAAAAAAACDEAAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"left_delete",
					null,
					"AQAAAFkQAAAAAAAAWRAAAAAAAAANAAAAQ01BS0VfSU1QT1JUXw",
					"AQAAAAAAAAABAAAAWRAAAAAAAABmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "lib"
					},
					"AwAAAGkQAAAAAAAAahAAAAAAAAAAAAAAahAAAAAAAABrEAAAAAAAAAAAAABrEAAAAAAAAGwQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaRAAAAAAAABpEAAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					2,
					"left_delete",
					null,
					"AgAAAIkQAAAAAAAAiRAAAAAAAAABAAAAY4gQAAAAAAAAiBAAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAihAAAAAAAACKEAAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAIgQAAAAAAAAiRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBAAAAAAAACIEAAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": "PREFIX="
					},
					"BwAAADMRAAAAAAAANBEAAAAAAAAAAAAANBEAAAAAAAA1EQAAAAAAAAAAAAA1EQAAAAAAADYRAAAAAAAAAAAAADYRAAAAAAAANxEAAAAAAAAAAAAANxEAAAAAAAA4EQAAAAAAAAAAAAA4EQAAAAAAADkRAAAAAAAAAAAAADkRAAAAAAAAOhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxEAAAAAAAAzEQAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"left_delete",
					null,
					"AQAAADkRAAAAAAAAOREAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAOhEAAAAAAAA6EQAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": " \"${LIBRARY_PREFIX"
					},
					"EgAAADkRAAAAAAAAOhEAAAAAAAAAAAAAOhEAAAAAAAA7EQAAAAAAAAAAAAA7EQAAAAAAADwRAAAAAAAAAAAAADwRAAAAAAAAPREAAAAAAAAAAAAAPREAAAAAAAA+EQAAAAAAAAAAAAA+EQAAAAAAAD8RAAAAAAAAAAAAAD8RAAAAAAAAQBEAAAAAAAAAAAAAQBEAAAAAAABBEQAAAAAAAAAAAABBEQAAAAAAAEIRAAAAAAAAAAAAAEIRAAAAAAAAQxEAAAAAAAAAAAAAQxEAAAAAAABEEQAAAAAAAAAAAABEEQAAAAAAAEURAAAAAAAAAAAAAEURAAAAAAAARhEAAAAAAAAAAAAARhEAAAAAAABHEQAAAAAAAAAAAABHEQAAAAAAAEgRAAAAAAAAAAAAAEgRAAAAAAAASREAAAAAAAAAAAAASREAAAAAAABKEQAAAAAAAAAAAABKEQAAAAAAAEsRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOREAAAAAAAA5EQAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "}\""
					},
					"AgAAAEsRAAAAAAAATBEAAAAAAAAAAAAATBEAAAAAAABNEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASxEAAAAAAABLEQAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE0RAAAAAAAAThEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATREAAAAAAABNEQAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BAAAAOEQAAAAAAAA4hAAAAAAAAAAAAAA4hAAAAAAAADjEAAAAAAAAAAAAADjEAAAAAAAAOQQAAAAAAAAAAAAAOQQAAAAAAAA5RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4RAAAAAAAADhEAAAAAAAAAAAAAAAuJBA"
				],
				[
					318,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOUQAAAAAAAA5xAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RAAAAAAAADlEAAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "no"
					},
					"AgAAAOYQAAAAAAAA5xAAAAAAAAAAAAAA5xAAAAAAAADoEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hAAAAAAAADmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					2,
					"left_delete",
					null,
					"AgAAAOcQAAAAAAAA5xAAAAAAAAABAAAAb+YQAAAAAAAA5hAAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAA6BAAAAAAAADoEAAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAAOYQAAAAAAAA5xAAAAAAAAAAAAAA5xAAAAAAAADoEAAAAAAAAAAAAADoEAAAAAAAAOkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hAAAAAAAADmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": " LIBRARY_PA"
					},
					"CwAAAOkQAAAAAAAA6hAAAAAAAAAAAAAA6hAAAAAAAADrEAAAAAAAAAAAAADrEAAAAAAAAOwQAAAAAAAAAAAAAOwQAAAAAAAA7RAAAAAAAAAAAAAA7RAAAAAAAADuEAAAAAAAAAAAAADuEAAAAAAAAO8QAAAAAAAAAAAAAO8QAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAADxEAAAAAAAAAAAAADxEAAAAAAAAPIQAAAAAAAAAAAAAPIQAAAAAAAA8xAAAAAAAAAAAAAA8xAAAAAAAAD0EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6RAAAAAAAADpEAAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					2,
					"left_delete",
					null,
					"AgAAAPMQAAAAAAAA8xAAAAAAAAABAAAAQfIQAAAAAAAA8hAAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAA9BAAAAAAAAD0EAAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": "PREFIX"
					},
					"BgAAAPIQAAAAAAAA8xAAAAAAAAAAAAAA8xAAAAAAAAD0EAAAAAAAAAAAAAD0EAAAAAAAAPUQAAAAAAAAAAAAAPUQAAAAAAAA9hAAAAAAAAAAAAAA9hAAAAAAAAD3EAAAAAAAAAAAAAD3EAAAAAAAAPgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hAAAAAAAADyEAAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": "\nset"
					},
					"BQAAAPkQAAAAAAAA+hAAAAAAAAAAAAAA+hAAAAAAAAD8EAAAAAAAAAAAAAD8EAAAAAAAAP0QAAAAAAAAAAAAAP0QAAAAAAAA/hAAAAAAAAAAAAAA/hAAAAAAAAD/EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RAAAAAAAAD5EAAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP8QAAAAAAAAAREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xAAAAAAAAD/EAAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": "LIBRARY_PREFIX"
					},
					"DgAAAAARAAAAAAAAAREAAAAAAAAAAAAAAREAAAAAAAACEQAAAAAAAAAAAAACEQAAAAAAAAMRAAAAAAAAAAAAAAMRAAAAAAAABBEAAAAAAAAAAAAABBEAAAAAAAAFEQAAAAAAAAAAAAAFEQAAAAAAAAYRAAAAAAAAAAAAAAYRAAAAAAAABxEAAAAAAAAAAAAABxEAAAAAAAAIEQAAAAAAAAAAAAAIEQAAAAAAAAkRAAAAAAAAAAAAAAkRAAAAAAAAChEAAAAAAAAAAAAAChEAAAAAAAALEQAAAAAAAAAAAAALEQAAAAAAAAwRAAAAAAAAAAAAAAwRAAAAAAAADREAAAAAAAAAAAAADREAAAAAAAAOEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4RAAAAAAAADxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhEAAAAAAAAOEQAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAA8RAAAAAAAAEREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxEAAAAAAAAPEQAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": "${CMAKE_LIB"
					},
					"CwAAABARAAAAAAAAEREAAAAAAAAAAAAAEREAAAAAAAASEQAAAAAAAAAAAAASEQAAAAAAABMRAAAAAAAAAAAAABMRAAAAAAAAFBEAAAAAAAAAAAAAFBEAAAAAAAAVEQAAAAAAAAAAAAAVEQAAAAAAABYRAAAAAAAAAAAAABYRAAAAAAAAFxEAAAAAAAAAAAAAFxEAAAAAAAAYEQAAAAAAAAAAAAAYEQAAAAAAABkRAAAAAAAAAAAAABkRAAAAAAAAGhEAAAAAAAAAAAAAGhEAAAAAAAAbEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBEAAAAAAAAQEQAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "RAR"
					},
					"AwAAABsRAAAAAAAAHBEAAAAAAAAAAAAAHBEAAAAAAAAdEQAAAAAAAAAAAAAdEQAAAAAAAB4RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGxEAAAAAAAAbEQAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					6,
					"left_delete",
					null,
					"BgAAAB0RAAAAAAAAHREAAAAAAAABAAAAUhwRAAAAAAAAHBEAAAAAAAABAAAAQRsRAAAAAAAAGxEAAAAAAAABAAAAUhoRAAAAAAAAGhEAAAAAAAABAAAAQhkRAAAAAAAAGREAAAAAAAABAAAASRgRAAAAAAAAGBEAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAHhEAAAAAAAAeEQAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": "IMPORT_LIBRARF"
					},
					"DgAAABgRAAAAAAAAGREAAAAAAAAAAAAAGREAAAAAAAAaEQAAAAAAAAAAAAAaEQAAAAAAABsRAAAAAAAAAAAAABsRAAAAAAAAHBEAAAAAAAAAAAAAHBEAAAAAAAAdEQAAAAAAAAAAAAAdEQAAAAAAAB4RAAAAAAAAAAAAAB4RAAAAAAAAHxEAAAAAAAAAAAAAHxEAAAAAAAAgEQAAAAAAAAAAAAAgEQAAAAAAACERAAAAAAAAAAAAACERAAAAAAAAIhEAAAAAAAAAAAAAIhEAAAAAAAAjEQAAAAAAAAAAAAAjEQAAAAAAACQRAAAAAAAAAAAAACQRAAAAAAAAJREAAAAAAAAAAAAAJREAAAAAAAAmEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBEAAAAAAAAYEQAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					1,
					"left_delete",
					null,
					"AQAAACURAAAAAAAAJREAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAAJhEAAAAAAAAmEQAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": "Y_"
					},
					"AgAAACURAAAAAAAAJhEAAAAAAAAAAAAAJhEAAAAAAAAnEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJREAAAAAAAAlEQAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					15,
					"left_delete",
					null,
					"DwAAACYRAAAAAAAAJhEAAAAAAAABAAAAXyURAAAAAAAAJREAAAAAAAABAAAAWSQRAAAAAAAAJBEAAAAAAAABAAAAUiMRAAAAAAAAIxEAAAAAAAABAAAAQSIRAAAAAAAAIhEAAAAAAAABAAAAUiERAAAAAAAAIREAAAAAAAABAAAAQiARAAAAAAAAIBEAAAAAAAABAAAASR8RAAAAAAAAHxEAAAAAAAABAAAATB4RAAAAAAAAHhEAAAAAAAABAAAAXx0RAAAAAAAAHREAAAAAAAABAAAAVBwRAAAAAAAAHBEAAAAAAAABAAAAUhsRAAAAAAAAGxEAAAAAAAABAAAATxoRAAAAAAAAGhEAAAAAAAABAAAAUBkRAAAAAAAAGREAAAAAAAABAAAATRgRAAAAAAAAGBEAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAJxEAAAAAAAAnEQAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": "SWTA"
					},
					"BAAAABgRAAAAAAAAGREAAAAAAAAAAAAAGREAAAAAAAAaEQAAAAAAAAAAAAAaEQAAAAAAABsRAAAAAAAAAAAAABsRAAAAAAAAHBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBEAAAAAAAAYEQAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					3,
					"left_delete",
					null,
					"AwAAABsRAAAAAAAAGxEAAAAAAAABAAAAQRoRAAAAAAAAGhEAAAAAAAABAAAAVBkRAAAAAAAAGREAAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAAHBEAAAAAAAAcEQAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": "TATIC_LIBRARY"
					},
					"DQAAABkRAAAAAAAAGhEAAAAAAAAAAAAAGhEAAAAAAAAbEQAAAAAAAAAAAAAbEQAAAAAAABwRAAAAAAAAAAAAABwRAAAAAAAAHREAAAAAAAAAAAAAHREAAAAAAAAeEQAAAAAAAAAAAAAeEQAAAAAAAB8RAAAAAAAAAAAAAB8RAAAAAAAAIBEAAAAAAAAAAAAAIBEAAAAAAAAhEQAAAAAAAAAAAAAhEQAAAAAAACIRAAAAAAAAAAAAACIRAAAAAAAAIxEAAAAAAAAAAAAAIxEAAAAAAAAkEQAAAAAAAAAAAAAkEQAAAAAAACURAAAAAAAAAAAAACURAAAAAAAAJhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGREAAAAAAAAZEQAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert_completion",
					{
						"completion": "CMAKE_STATIC_LIBRARY_PREFIX",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "CMAKE_STATIC_LIBRARY_PREFIX"
					},
					"AgAAABIRAAAAAAAAEhEAAAAAAAAUAAAAQ01BS0VfU1RBVElDX0xJQlJBUlkSEQAAAAAAAC0RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJhEAAAAAAAAmEQAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAC0RAAAAAAAALhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALREAAAAAAAAtEQAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"cut",
					null,
					"AQAAAPoQAAAAAAAA+hAAAAAAAAA3AAAAICBzZXQoTElCUkFSWV9QUkVGSVggIiR7Q01BS0VfU1RBVElDX0xJQlJBUllfUFJFRklYfSIpCg",
					"AQAAAAAAAAABAAAA+hAAAAAAAAAxEQAAAAAAAAAAAAAAAAAA"
				],
				[
					347,
					2,
					"paste",
					null,
					"AgAAAPoQAAAAAAAAMREAAAAAAAAAAAAAMREAAAAAAABoEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hAAAAAAAAD6EAAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": "SUFFIX"
					},
					"BwAAAD8RAAAAAAAAQBEAAAAAAAAAAAAAQBEAAAAAAABAEQAAAAAAAAYAAABQUkVGSVhAEQAAAAAAAEERAAAAAAAAAAAAAEERAAAAAAAAQhEAAAAAAAAAAAAAQhEAAAAAAABDEQAAAAAAAAAAAABDEQAAAAAAAEQRAAAAAAAAAAAAAEQRAAAAAAAARREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxEAAAAAAABFEQAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					6,
					"left_delete",
					null,
					"BgAAAGMRAAAAAAAAYxEAAAAAAAABAAAAWGIRAAAAAAAAYhEAAAAAAAABAAAASWERAAAAAAAAYREAAAAAAAABAAAARmARAAAAAAAAYBEAAAAAAAABAAAARV8RAAAAAAAAXxEAAAAAAAABAAAAUl4RAAAAAAAAXhEAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAZBEAAAAAAABkEQAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": "SUFFIX"
					},
					"BgAAAF4RAAAAAAAAXxEAAAAAAAAAAAAAXxEAAAAAAABgEQAAAAAAAAAAAABgEQAAAAAAAGERAAAAAAAAAAAAAGERAAAAAAAAYhEAAAAAAAAAAAAAYhEAAAAAAABjEQAAAAAAAAAAAABjEQAAAAAAAGQRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhEAAAAAAABeEQAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADARAAAAAAAAMREAAAAAAAAAAAAAMREAAAAAAAAzEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMBEAAAAAAAAwEQAAAAAAAAAAAAAAAPC/"
				],
				[
					360,
					1,
					"left_delete",
					null,
					"AQAAADERAAAAAAAAMREAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAMxEAAAAAAAAzEQAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAADERAAAAAAAAMhEAAAAAAAAAAAAAMhEAAAAAAAAzEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMREAAAAAAAAxEQAAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADMRAAAAAAAANREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxEAAAAAAAAzEQAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": "UNSET"
					},
					"BQAAADQRAAAAAAAANREAAAAAAAAAAAAANREAAAAAAAA2EQAAAAAAAAAAAAA2EQAAAAAAADcRAAAAAAAAAAAAADcRAAAAAAAAOBEAAAAAAAAAAAAAOBEAAAAAAAA5EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBEAAAAAAAA0EQAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"left_delete",
					null,
					"AQAAADgRAAAAAAAAOBEAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAAOREAAAAAAAA5EQAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AQAAADgRAAAAAAAAOREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBEAAAAAAAA4EQAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					5,
					"left_delete",
					null,
					"BQAAADgRAAAAAAAAOBEAAAAAAAABAAAAVDcRAAAAAAAANxEAAAAAAAABAAAARTYRAAAAAAAANhEAAAAAAAABAAAAUzURAAAAAAAANREAAAAAAAABAAAATjQRAAAAAAAANBEAAAAAAAABAAAAVQ",
					"AQAAAAAAAAABAAAAOREAAAAAAAA5EQAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAADQRAAAAAAAANREAAAAAAAAAAAAANREAAAAAAAA2EQAAAAAAAAAAAAA2EQAAAAAAADcRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBEAAAAAAAA0EQAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": " SET"
					},
					"BAAAADcRAAAAAAAAOBEAAAAAAAAAAAAAOBEAAAAAAAA5EQAAAAAAAAAAAAA5EQAAAAAAADoRAAAAAAAAAAAAADoRAAAAAAAAOxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxEAAAAAAAA3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsRAAAAAAAAPBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxEAAAAAAAA7EQAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					4,
					"left_delete",
					null,
					"BAAAADsRAAAAAAAAOxEAAAAAAAABAAAAIDoRAAAAAAAAOhEAAAAAAAABAAAAVDkRAAAAAAAAOREAAAAAAAABAAAARTgRAAAAAAAAOBEAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAPBEAAAAAAAA8EQAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": "LIBRARY_S"
					},
					"CQAAADgRAAAAAAAAOREAAAAAAAAAAAAAOREAAAAAAAA6EQAAAAAAAAAAAAA6EQAAAAAAADsRAAAAAAAAAAAAADsRAAAAAAAAPBEAAAAAAAAAAAAAPBEAAAAAAAA9EQAAAAAAAAAAAAA9EQAAAAAAAD4RAAAAAAAAAAAAAD4RAAAAAAAAPxEAAAAAAAAAAAAAPxEAAAAAAABAEQAAAAAAAAAAAABAEQAAAAAAAEERAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBEAAAAAAAA4EQAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"left_delete",
					null,
					"AQAAAEARAAAAAAAAQBEAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAQREAAAAAAABBEQAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": "SUFFI"
					},
					"BQAAAEARAAAAAAAAQREAAAAAAAAAAAAAQREAAAAAAABCEQAAAAAAAAAAAABCEQAAAAAAAEMRAAAAAAAAAAAAAEMRAAAAAAAARBEAAAAAAAAAAAAARBEAAAAAAABFEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQBEAAAAAAABAEQAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"cut",
					null,
					"AQAAAOMQAAAAAAAA4xAAAAAAAAAXAAAAaWYoTk9UIExJQlJBUllfUFJFRklYKQo",
					"AQAAAAAAAAABAAAA4xAAAAAAAAD6EAAAAAAAAAAAAAAAAAAA"
				],
				[
					379,
					1,
					"paste",
					null,
					"AQAAAOMQAAAAAAAA+hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4xAAAAAAAADjEAAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"paste",
					null,
					"AQAAADERAAAAAAAASBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMREAAAAAAAAxEQAAAAAAAAAAAAAAAAAA"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": "end"
					},
					"AwAAADERAAAAAAAAMhEAAAAAAAAAAAAAMhEAAAAAAAAzEQAAAAAAAAAAAAAzEQAAAAAAADQRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMREAAAAAAAAxEQAAAAAAAAAAAAAAAAAA"
				],
				[
					388,
					1,
					"cut",
					null,
					"AQAAAEsRAAAAAAAASxEAAAAAAAAWAAAAaWYoTk9UIExJQlJBUllfU1VGRkkpCg",
					"AQAAAAAAAAABAAAASxEAAAAAAABhEQAAAAAAAAAAAAAAAAAA"
				],
				[
					389,
					1,
					"paste",
					null,
					"AQAAAEsRAAAAAAAAYREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASxEAAAAAAABLEQAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"paste",
					null,
					"AQAAAJgRAAAAAAAArhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmBEAAAAAAACYEQAAAAAAAAAAAAAAAAAA"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": "end"
					},
					"AwAAAJgRAAAAAAAAmREAAAAAAAAAAAAAmREAAAAAAACaEQAAAAAAAAAAAACaEQAAAAAAAJsRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmBEAAAAAAACYEQAAAAAAAAAAAAAAAAAA"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAK8RAAAAAAAAsBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxEAAAAAAACvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"left_delete",
					null,
					"AQAAAK8RAAAAAAAArxEAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAsBEAAAAAAACwEQAAAAAAAAAAAAAAAPC/"
				],
				[
					401,
					1,
					"insert",
					{
						"characters": "X"
					},
					"AQAAAK8RAAAAAAAAsBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxEAAAAAAACvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					404,
					1,
					"insert",
					{
						"characters": "X"
					},
					"AQAAAF8RAAAAAAAAYBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXxEAAAAAAABfEQAAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					13,
					"left_delete",
					null,
					"DQAAADUSAAAAAAAANRIAAAAAAAABAAAAXzQSAAAAAAAANBIAAAAAAAABAAAAVDMSAAAAAAAAMxIAAAAAAAABAAAAUjISAAAAAAAAMhIAAAAAAAABAAAATzESAAAAAAAAMRIAAAAAAAABAAAAUDASAAAAAAAAMBIAAAAAAAABAAAATS8SAAAAAAAALxIAAAAAAAABAAAASS4SAAAAAAAALhIAAAAAAAABAAAAXy0SAAAAAAAALRIAAAAAAAABAAAARSwSAAAAAAAALBIAAAAAAAABAAAASysSAAAAAAAAKxIAAAAAAAABAAAAQSoSAAAAAAAAKhIAAAAAAAABAAAATSkSAAAAAAAAKRIAAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAANhIAAAAAAAA2EgAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"insert",
					{
						"characters": "W"
					},
					"AQAAABYQAAAAAAAAFxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhAAAAAAAAAWEAAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					1,
					"left_delete",
					null,
					"AQAAABYQAAAAAAAAFhAAAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAAFxAAAAAAAAAXEAAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"insert",
					{
						"characters": "WASI"
					},
					"BAAAABYQAAAAAAAAFxAAAAAAAAAAAAAAFxAAAAAAAAAYEAAAAAAAAAAAAAAYEAAAAAAAABkQAAAAAAAAAAAAABkQAAAAAAAAGhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhAAAAAAAAAWEAAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					4,
					"left_delete",
					null,
					"BAAAABkQAAAAAAAAGRAAAAAAAAABAAAASRgQAAAAAAAAGBAAAAAAAAABAAAAUxcQAAAAAAAAFxAAAAAAAAABAAAAQRYQAAAAAAAAFhAAAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAAGhAAAAAAAAAaEAAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					1,
					"insert",
					{
						"characters": "WASI"
					},
					"BAAAABUQAAAAAAAAFhAAAAAAAAAAAAAAFhAAAAAAAAAXEAAAAAAAAAAAAAAXEAAAAAAAABgQAAAAAAAAAAAAABgQAAAAAAAAGRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFRAAAAAAAAAVEAAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"insert",
					{
						"characters": " OR"
					},
					"AwAAABkQAAAAAAAAGhAAAAAAAAAAAAAAGhAAAAAAAAAbEAAAAAAAAAAAAAAbEAAAAAAAABwQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGRAAAAAAAAAZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwQAAAAAAAAHRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHBAAAAAAAAAcEAAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"paste",
					null,
					"AQAAAJ4QAAAAAAAAphAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhAAAAAAAACeEAAAAAAAAAAAAAAAAPC/"
				],
				[
					445,
					1,
					"left_delete",
					null,
					"AQAAAOIQAAAAAAAA4hAAAAAAAAAPAAAAZW5kaWYoTk9UIFdBU0kp",
					"AQAAAAAAAAABAAAA8RAAAAAAAADiEAAAAAAAAAAAAAAAAAAA"
				],
				[
					448,
					1,
					"left_delete",
					null,
					"AQAAAAMQAAAAAAAAAxAAAAAAAAANAAAAaWYoTk9UIFdBU0kpCg",
					"AQAAAAAAAAABAAAAAxAAAAAAAAAQEAAAAAAAAAAAAAAAAAAA"
				],
				[
					450,
					1,
					"unindent",
					null,
					"BAAAAAMQAAAAAAAAAxAAAAAAAAACAAAAICBKEAAAAAAAAEoQAAAAAAAAAgAAACAgZhAAAAAAAABmEAAAAAAAAAIAAAAgIIMQAAAAAAAAgxAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAAxAAAAAAAADVEAAAAAAAAAAAAAAAAAAA"
				],
				[
					454,
					1,
					"indent",
					null,
					"BgAAAM8QAAAAAAAA0RAAAAAAAAAAAAAA6BAAAAAAAADqEAAAAAAAAAAAAAAhEQAAAAAAACMRAAAAAAAAAAAAAD0RAAAAAAAAPxEAAAAAAAAAAAAAVhEAAAAAAABYEQAAAAAAAAAAAACPEQAAAAAAAJERAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzhAAAAAAAACfEQAAAAAAAAAAAAAAAAAA"
				],
				[
					457,
					1,
					"left_delete",
					null,
					"AQAAAMwQAAAAAAAAzBAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAzRAAAAAAAADNEAAAAAAAAAAAAAAAAAAA"
				],
				[
					461,
					1,
					"indent",
					null,
					"BAAAAAMQAAAAAAAABRAAAAAAAAAAAAAATBAAAAAAAABOEAAAAAAAAAAAAABqEAAAAAAAAGwQAAAAAAAAAAAAAIkQAAAAAAAAixAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzBAAAAAAAAACEAAAAAAAAAAAAAAA0IZA"
				],
				[
					463,
					1,
					"left_delete",
					null,
					"AQAAAAAQAAAAAAAAABAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					1,
					"insert",
					{
						"characters": "WASM"
					},
					"BAAAAA8QAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAREAAAAAAAAAAAAAAREAAAAAAAABIQAAAAAAAAAAAAABIQAAAAAAAAExAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxAAAAAAAAAPEAAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": " OR"
					},
					"AwAAABMQAAAAAAAAFBAAAAAAAAAAAAAAFBAAAAAAAAAVEAAAAAAAAAAAAAAVEAAAAAAAABYQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAExAAAAAAAAATEAAAAAAAAAAAAAAAAPC/"
				],
				[
					474,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABYQAAAAAAAAFxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhAAAAAAAAAWEAAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"paste",
					null,
					"AgAAAJgQAAAAAAAAqBAAAAAAAAAAAAAAqBAAAAAAAACoEAAAAAAAABIAAABXQVNJIE9SIEVNU0NSSVBURU4",
					"AQAAAAAAAAABAAAAmBAAAAAAAACqEAAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					1,
					"insert",
					{
						"characters": "EMSCRIPTEN"
					},
					"CgAAAKgQAAAAAAAAqRAAAAAAAAAAAAAAqRAAAAAAAACqEAAAAAAAAAAAAACqEAAAAAAAAKsQAAAAAAAAAAAAAKsQAAAAAAAArBAAAAAAAAAAAAAArBAAAAAAAACtEAAAAAAAAAAAAACtEAAAAAAAAK4QAAAAAAAAAAAAAK4QAAAAAAAArxAAAAAAAAAAAAAArxAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAALEQAAAAAAAAAAAAALEQAAAAAAAAshAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqBAAAAAAAACoEAAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"cut",
					null,
					"AQAAAAEQAAAAAAAAARAAAAAAAADAAQAACiAgaWYoV0FTSSBPUiBXQVNNIE9SIEVNU0NSSVBURU4gT1IgIiR7Q01BS0VfU1lTVEVNX05BTUV9IiBTVFJFUVVBTCAiRW1zY3JpcHRlbiIpCiAgICBzZXQoTElCUkFSWV9QUkVGSVggImxpYiIpCiAgICBzZXQoTElCUkFSWV9TVUZGSVggIi5hIikgIAogIGVuZGlmKFdBU0kgT1IgV0FTTSBPUiBFTVNDUklQVEVOIE9SICIke0NNQUtFX1NZU1RFTV9OQU1FfSIgU1RSRVFVQUwgIkVtc2NyaXB0ZW4iKQoKICBpZihOT1QgTElCUkFSWV9QUkVGSVgpCiAgICBzZXQoTElCUkFSWV9QUkVGSVggIiR7Q01BS0VfU1RBVElDX0xJQlJBUllfUFJFRklYfSIpCiAgZW5kaWYoTk9UIExJQlJBUllfUFJFRklYKQogIGlmKE5PVCBMSUJSQVJZX1NVRkZJWCkKICAgIHNldChMSUJSQVJZX1NVRkZJWCAiJHtDTUFLRV9TVEFUSUNfTElCUkFSWV9TVUZGSVh9IikKICBlbmRpZihOT1QgTElCUkFSWV9TVUZGSVgpCg",
					"AQAAAAAAAAABAAAAARAAAAAAAADBEQAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"paste",
					null,
					"AQAAADQTAAAAAAAA9BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBMAAAAAAAA0EwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "utils.c",
			"settings":
			{
				"buffer_size": 64208,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					560,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AgAAAOb1AAAAAAAA5/UAAAAAAAAAAAAA5/UAAAAAAADn9QAAAAAAAAEAAABp",
					"AgAAAAAAAAABAAAA5vUAAAAAAADn9QAAAAAAAAAAAAAAAPC/AQAAAAEAAAAz9wAAAAAAADP3AAAAAAAAAAAAAAAA8L8"
				],
				[
					562,
					1,
					"left_delete",
					null,
					"AQAAAO31AAAAAAAA7fUAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAA7vUAAAAAAADu9QAAAAAAAAAAAAAAAPC/AQAAAAEAAAAz9wAAAAAAADP3AAAAAAAAAAAAAAAA8L8"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAAO31AAAAAAAA7vUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7fUAAAAAAADt9QAAAAAAAAAAAAAAAPC/AQAAAAEAAAAy9wAAAAAAADL3AAAAAAAAAAAAAAAA8L8"
				],
				[
					590,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BgAAAD72AAAAAAAAP/YAAAAAAAAAAAAAP/YAAAAAAAA/9gAAAAAAAAMAAABpbnQ/9gAAAAAAAED2AAAAAAAAAAAAAED2AAAAAAAAQfYAAAAAAAAAAAAAQfYAAAAAAABC9gAAAAAAAAAAAABC9gAAAAAAAEP2AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7vUAAAAAAADu9QAAAAAAAAAAAAAAAPC/AQAAAAEAAAA+9gAAAAAAAEH2AAAAAAAAAAAAAAAA8L8"
				],
				[
					591,
					1,
					"insert",
					{
						"characters": " char*"
					},
					"BgAAAEP2AAAAAAAARPYAAAAAAAAAAAAARPYAAAAAAABF9gAAAAAAAAAAAABF9gAAAAAAAEb2AAAAAAAAAAAAAEb2AAAAAAAAR/YAAAAAAAAAAAAAR/YAAAAAAABI9gAAAAAAAAAAAABI9gAAAAAAAEn2AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7vUAAAAAAADu9QAAAAAAAAAAAAAAAPC/AQAAAAEAAABD9gAAAAAAAEP2AAAAAAAAAAAAAAAA8L8"
				],
				[
					594,
					1,
					"insert",
					{
						"characters": "args->v["
					},
					"CAAAAFT3AAAAAAAAVfcAAAAAAAAAAAAAVfcAAAAAAABW9wAAAAAAAAAAAABW9wAAAAAAAFf3AAAAAAAAAAAAAFf3AAAAAAAAWPcAAAAAAAAAAAAAWPcAAAAAAABZ9wAAAAAAAAAAAABZ9wAAAAAAAFr3AAAAAAAAAAAAAFr3AAAAAAAAW/cAAAAAAAAAAAAAW/cAAAAAAABc9wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7vUAAAAAAADu9QAAAAAAAAAAAAAAAPC/AQAAAAEAAABU9wAAAAAAAFT3AAAAAAAAAAAAAAAA8L8"
				],
				[
					596,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAF33AAAAAAAAXvcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7vUAAAAAAADu9QAAAAAAAAAAAAAAAPC/AQAAAAEAAABd9wAAAAAAAF33AAAAAAAAAAAAAAAA8L8"
				],
				[
					609,
					1,
					"cut",
					null,
					"AQAAAHbzAAAAAAAAdvMAAAAAAAAtAAAACiAgICBpZihpID4gMCkKICAgICAgZGJ1Zl9wdXRzdHIoZGJ1ZiwgIiwgIik7",
					"AgAAAAAAAAABAAAAo/MAAAAAAAB28wAAAAAAAAAAAAAAAPC/AQAAAAEAAABe9wAAAAAAAF73AAAAAAAAAAAAAAAA8L8"
				],
				[
					614,
					1,
					"paste",
					null,
					"AQAAAE/zAAAAAAAAfPMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAT/MAAAAAAABP8wAAAAAAAAAAAAAAAPC/AQAAAAEAAAAx9wAAAAAAADH3AAAAAAAAAAAAAAAA8L8"
				],
				[
					615,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHzzAAAAAAAAffMAAAAAAAAAAAAAffMAAAAAAACD8wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfPMAAAAAAAB88wAAAAAAAAAAAAAAAPC/AQAAAAEAAABe9wAAAAAAAF73AAAAAAAAAAAAAAAA8L8"
				],
				[
					617,
					3,
					"left_delete",
					null,
					"AwAAAE7zAAAAAAAATvMAAAAAAAABAAAAIEzzAAAAAAAATPMAAAAAAAACAAAAICBL8wAAAAAAAEvzAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAT/MAAAAAAABP8wAAAAAAAAAAAAAAAE5AAQAAAAEAAABl9wAAAAAAAGX3AAAAAAAAAAAAAAAA8L8"
				],
				[
					621,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADT+gAAI3VuZGVmIF9JU09DOTlfU09VUkNFCiNkZWZpbmUgX0lTT0M5OV9TT1VSQ0UgMQoKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxsaXN0Lmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgInZlY3Rvci5oIgojaW5jbHVkZSA8bGlicmVnZXhwLmg+CiNpbmNsdWRlICJxdWlja2pzLWludGVybmFsLmgiCiNpbmNsdWRlICJidWZmZXItdXRpbHMuaCIKI2luY2x1ZGUgPHRpbWUuaD4KI2luY2x1ZGUgPG1hdGguaD4KI2luY2x1ZGUgPGVycm5vLmg+CiNpbmNsdWRlIDxzaWduYWwuaD4KI2luY2x1ZGUgPHN5cy9zdGF0Lmg+CiNpbmNsdWRlIDxzeXMvdGltZS5oPgojaW5jbHVkZSA8cXVpY2tqcy1saWJjLmg+CgojaWYgZGVmaW5lZChfX0VNU0NSSVBURU5fXykgJiYgZGVmaW5lZChfX0dOVUNfXykKI2RlZmluZSBhdG9taWNfYWRkX2ludCBfX3N5bmNfYWRkX2FuZF9mZXRjaAojZW5kaWYKCi8qKgogKiBcYWRkdG9ncm91cCB1dGlscwogKiBAewogKi8Kdm9pZCBxdWlja3NvcnRfcih2b2lkKiwgc2l6ZV90LCBzaXplX3QsIGludCAoKikoY29uc3Qgdm9pZCosIGNvbnN0IHZvaWQqLCB2b2lkKiksIHZvaWQqKTsKaW50IHN0cnZlcnNjbXAoY29uc3QgY2hhciosIGNvbnN0IGNoYXIqKTsKCiNpZm5kZWYgSU5GSU5JVFkKI2RlZmluZSBJTkZJTklUWSBfX2J1aWx0aW5faW5mKCkKI2VuZGlmCgojaWZkZWYgVVNFX1dPUktFUgojaW5jbHVkZSA8cHRocmVhZC5oPgojaW5jbHVkZSA8c3RkYXRvbWljLmg+CgpzdGF0aWMgaW50CmF0b21pY19hZGRfaW50KGludCogcHRyLCBpbnQgdikgewogIHJldHVybiBhdG9taWNfZmV0Y2hfYWRkKChfQXRvbWljKHVpbnQzMl90KSopcHRyLCB2KSArIHY7Cn0KI2VuZGlmCgojaWYgZGVmaW5lZChfX2xpbnV4X18pIHx8IGRlZmluZWQoX19BUFBMRV9fKQp1aW50NjRfdAp0aW1lX3VzKHZvaWQpIHsKICBzdHJ1Y3QgdGltZXNwZWMgdHM7CiAgY2xvY2tfZ2V0dGltZShDTE9DS19NT05PVE9OSUMsICZ0cyk7CiAgcmV0dXJuICh1aW50NjRfdCl0cy50dl9zZWMgKiAxMDAwMDAwICsgKHRzLnR2X25zZWMgLyAxMDAwKTsKfQojZWxzZQovKiBtb3JlIHBvcnRhYmxlLCBidXQgZG9lcyBub3Qgd29yayBpZiB0aGUgZGF0ZSBpcyB1cGRhdGVkICovCnVpbnQ2NF90CnRpbWVfdXModm9pZCkgewogIHN0cnVjdCB0aW1ldmFsIHR2OwogIGdldHRpbWVvZmRheSgmdHYsIDApOwogIHJldHVybiAoaW50NjRfdCl0di50dl9zZWMgKiAxMDAwMDAwICsgdHYudHZfdXNlYzsKfQojZW5kaWYKCmludApyZWdleHBfZmxhZ3NfZnJvbXN0cmluZyhjb25zdCBjaGFyKiBzKSB7CiAgaW50IGZsYWdzID0gMDsKCiAgaWYoc3RyX2NvbnRhaW5zKHMsICdnJykpCiAgICBmbGFncyB8PSBMUkVfRkxBR19HTE9CQUw7CiAgaWYoc3RyX2NvbnRhaW5zKHMsICdpJykpCiAgICBmbGFncyB8PSBMUkVfRkxBR19JR05PUkVDQVNFOwogIGlmKHN0cl9jb250YWlucyhzLCAnbScpKQogICAgZmxhZ3MgfD0gTFJFX0ZMQUdfTVVMVElMSU5FOwogIGlmKHN0cl9jb250YWlucyhzLCAncycpKQogICAgZmxhZ3MgfD0gTFJFX0ZMQUdfRE9UQUxMOwogIGlmKHN0cl9jb250YWlucyhzLCAndScpKQogICAgZmxhZ3MgfD0gTFJFX0ZMQUdfVVRGMTY7CiAgaWYoc3RyX2NvbnRhaW5zKHMsICd5JykpCiAgICBmbGFncyB8PSBMUkVfRkxBR19TVElDS1k7CgogIHJldHVybiBmbGFnczsKfQoKaW50CnJlZ2V4cF9mbGFnc190b3N0cmluZyhpbnQgZmxhZ3MsIGNoYXIqIGJ1ZikgewogIGNoYXIqIG91dCA9IGJ1ZjsKCiAgaWYoZmxhZ3MgJiBMUkVfRkxBR19HTE9CQUwpCiAgICAqb3V0KysgPSAnZyc7CiAgaWYoZmxhZ3MgJiBMUkVfRkxBR19JR05PUkVDQVNFKQogICAgKm91dCsrID0gJ2knOwogIGlmKGZsYWdzICYgTFJFX0ZMQUdfTVVMVElMSU5FKQogICAgKm91dCsrID0gJ20nOwogIGlmKGZsYWdzICYgTFJFX0ZMQUdfRE9UQUxMKQogICAgKm91dCsrID0gJ3MnOwogIGlmKGZsYWdzICYgTFJFX0ZMQUdfVVRGMTYpCiAgICAqb3V0KysgPSAndSc7CiAgaWYoZmxhZ3MgJiBMUkVfRkxBR19TVElDS1kpCiAgICAqb3V0KysgPSAneSc7CgogICpvdXQgPSAnXDAnOwogIHJldHVybiBvdXQgLSBidWY7Cn0KClJlZ0V4cApyZWdleHBfZnJvbV9hcmd2KGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBKU0NvbnRleHQqIGN0eCkgewogIFJlZ0V4cCByZSA9IHswLCAwLCAwfTsKICBjb25zdCBjaGFyKiBmbGFnc3RyOwogIGFzc2VydChhcmdjID4gMCk7CiAgaWYoanNfaXNfcmVnZXhwKGN0eCwgYXJndlswXSkpIHsKICAgIHJlLnNvdXJjZSA9IGpzX2dldF9wcm9wZXJ0eXN0cl9zdHJpbmdsZW4oY3R4LCBhcmd2WzBdLCAic291cmNlIiwgJnJlLmxlbik7CiAgICByZS5mbGFncyA9IHJlZ2V4cF9mbGFnc19mcm9tc3RyaW5nKChmbGFnc3RyID0ganNfZ2V0X3Byb3BlcnR5c3RyX2NzdHJpbmcoY3R4LCBhcmd2WzBdLCAiZmxhZ3MiKSkpOwogICAganNfY3N0cmluZ19mcmVlKGN0eCwgZmxhZ3N0cik7CiAgfSBlbHNlIHsKICAgIHJlLnNvdXJjZSA9IGpzX3Rvc3RyaW5nbGVuKGN0eCwgJnJlLmxlbiwgYXJndlswXSk7CiAgICBpZihhcmdjID4gMSAmJiBKU19Jc1N0cmluZyhhcmd2WzFdKSkgewogICAgICByZS5mbGFncyA9IHJlZ2V4cF9mbGFnc19mcm9tc3RyaW5nKChmbGFnc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlsxXSkpKTsKICAgICAganNfY3N0cmluZ19mcmVlKGN0eCwgZmxhZ3N0cik7CiAgICB9CiAgfQogIHJldHVybiByZTsKfQoKUmVnRXhwCnJlZ2V4cF9mcm9tX2RidWYoRHluQnVmKiBkYnVmLCBpbnQgZmxhZ3MpIHsKICBSZWdFeHAgcmUgPSB7KGNoYXIqKWRidWYtPmJ1ZiwgZGJ1Zi0+c2l6ZSwgZmxhZ3N9OwogIGRidWYtPmJ1ZiA9IDA7CiAgZGJ1Zi0+YWxsb2NhdGVkX3NpemUgPSAwOwogIGRidWYtPnNpemUgPSAwOwogIHJldHVybiByZTsKfQoKdWludDhfdCoKcmVnZXhwX2NvbXBpbGUoUmVnRXhwIHJlLCBKU0NvbnRleHQqIGN0eCkgewogIGNoYXIgZXJyb3JfbXNnWzY0XTsKICBpbnQgbGVuID0gMDsKICB1aW50OF90KiBieXRlY29kZTsKICBpZighKGJ5dGVjb2RlID0gbHJlX2NvbXBpbGUoJmxlbiwgZXJyb3JfbXNnLCBzaXplb2YoZXJyb3JfbXNnKSwgcmUuc291cmNlLCByZS5sZW4sIHJlLmZsYWdzLCBjdHgpKSkKICAgIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJFcnJvciBjb21waWxpbmcgcmVnZXggLyUuKnMvOiAlcyIsIChpbnQpcmUubGVuLCByZS5zb3VyY2UsIGVycm9yX21zZyk7CgogIHJldHVybiBieXRlY29kZTsKfQoKSlNWYWx1ZQpyZWdleHBfdG9fdmFsdWUoUmVnRXhwIHJlLCBKU0NvbnRleHQqIGN0eCkgewogIGNoYXIgZmxhZ3N0clszMl0gPSB7MH07CiAgc2l6ZV90IGZsYWdsZW4gPSByZWdleHBfZmxhZ3NfdG9zdHJpbmcocmUuZmxhZ3MsIGZsYWdzdHIpOwogIEpTVmFsdWVDb25zdCBhcmdzWzJdID0ge0pTX05ld1N0cmluZ0xlbihjdHgsIHJlLnNvdXJjZSwgcmUubGVuKSwgSlNfTmV3U3RyaW5nTGVuKGN0eCwgZmxhZ3N0ciwgZmxhZ2xlbil9OwogIEpTVmFsdWUgcmVnZXgsIGN0b3IgPSBqc19nbG9iYWxfZ2V0X3N0cihjdHgsICJSZWdFeHAiKTsKICByZWdleCA9IEpTX0NhbGxDb25zdHJ1Y3RvcihjdHgsIGN0b3IsIDIsIGFyZ3MpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGFyZ3NbMF0pOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGFyZ3NbMV0pOwogIHJldHVybiByZWdleDsKfQoKaW50NjRfdApqc19hcnJheV9sZW5ndGgoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBhcnJheSkgewogIGludDY0X3QgbGVuID0gLTE7CiAgaWYoSlNfSXNBcnJheShjdHgsIGFycmF5KSB8fCBqc19pc190eXBlZGFycmF5KGFycmF5KSkgewogICAgSlNWYWx1ZSBsZW5ndGggPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGFycmF5LCAibGVuZ3RoIik7CiAgICBKU19Ub0ludDY0KGN0eCwgJmxlbiwgbGVuZ3RoKTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGxlbmd0aCk7CiAgfQogIHJldHVybiBsZW47Cn0KCnZvaWQKanNfYXJyYXlfY2xlYXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBhcnJheSkgewogIGludDY0X3QgbGVuID0ganNfYXJyYXlfbGVuZ3RoKGN0eCwgYXJyYXkpOwogIEpTVmFsdWUgcmV0OwogIEpTQXRvbSBzcGxpY2UgPSBKU19OZXdBdG9tKGN0eCwgInNwbGljZSIpOwogIEpTVmFsdWVDb25zdCBhcmdzWzJdID0ge0pTX05ld0ludDY0KGN0eCwgMCksIEpTX05ld0ludDY0KGN0eCwgbGVuKX07CgogIHJldCA9IEpTX0ludm9rZShjdHgsIGFycmF5LCBzcGxpY2UsIDIsIGFyZ3MpOwogIEpTX0ZyZWVBdG9tKGN0eCwgc3BsaWNlKTsKICBKU19GcmVlVmFsdWUoY3R4LCByZXQpOwoKICBhc3NlcnQoanNfYXJyYXlfbGVuZ3RoKGN0eCwgYXJyYXkpID09IDApOwp9CgpjaGFyKioKanNfYXJyYXlfdG9fYXJndihKU0NvbnRleHQqIGN0eCwgaW50KiBhcmdjcCwgSlNWYWx1ZUNvbnN0IGFycmF5KSB7CiAgaW50IGksIGxlbiA9IGpzX2FycmF5X2xlbmd0aChjdHgsIGFycmF5KTsKICBjaGFyKiogcmV0ID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihjaGFyKikgKiAobGVuICsgMSkpOwogIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICBKU1ZhbHVlIGl0ZW0gPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIGFycmF5LCBpKTsKICAgIHJldFtpXSA9IGpzX3Rvc3RyaW5nKGN0eCwgaXRlbSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBpdGVtKTsKICB9CiAgaWYoYXJnY3ApCiAgICAqYXJnY3AgPSBsZW47CiAgcmV0dXJuIHJldDsKfQoKaW50CmpzX2FycmF5X2NvcHlzKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgYXJyYXksIGludCBuLCBjaGFyKiogc3RyYSkgewogIGludCBpLCBsZW4gPSBNSU5fTlVNKG4sIGpzX2FycmF5X2xlbmd0aChjdHgsIGFycmF5KSk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgIEpTVmFsdWUgaXRlbSA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgYXJyYXksIGkpOwogICAgaWYoc3RyYVtpXSkKICAgICAganNfZnJlZShjdHgsIHN0cmFbaV0pOwogICAgc3RyYVtpXSA9IGpzX3Rvc3RyaW5nKGN0eCwgaXRlbSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBpdGVtKTsKICB9CiAgcmV0dXJuIGk7Cn0KCmludApqc19zdHJ2X2NvcHlzKEpTQ29udGV4dCogY3R4LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG4sIGNoYXIqKiBzdHJhKSB7CiAgaW50IGksIGxlbiA9IE1JTl9OVU0obiwgYXJnYyk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgIGlmKCFKU19Jc051bGwoYXJndltpXSkgJiYgIUpTX0lzVW5kZWZpbmVkKGFyZ3ZbaV0pKQogICAgICBzdHJhW2ldID0ganNfdG9zdHJpbmcoY3R4LCBhcmd2W2ldKTsKICAgIGVsc2UKICAgICAgc3RyYVtpXSA9IDA7CiAgfQogIGZvcig7IGkgPCBuOyBpKyspIHN0cmFbaV0gPSAwOwoKICByZXR1cm4gaTsKfQoKSlNBdG9tCmpzX2F0b21fZnJvbShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogc3RyKSB7CiAgaWYoc3RyWzBdID09ICdbJykgewogICAgSlNWYWx1ZSBvYmosIHZhbCA9IEpTX1VOREVGSU5FRDsKICAgIEpTQXRvbSBwcm9wLCByZXQ7CiAgICBzaXplX3Qgb2JqbGVuLCBwcm9wbGVuOwogICAgb2JqbGVuID0gc3RyX2Nocigmc3RyWzFdLCAnLicpOwogICAgb2JqID0ganNfZ2xvYmFsX2dldF9zdHJfbihjdHgsICZzdHJbMV0sIG9iamxlbik7CiAgICBwcm9wbGVuID0gc3RyX2Nocigmc3RyWzEgKyBvYmpsZW4gKyAxXSwgJ10nKTsKICAgIHByb3AgPSBKU19OZXdBdG9tTGVuKGN0eCwgJnN0clsxICsgb2JqbGVuICsgMV0sIHByb3BsZW4pOwogICAgdmFsID0gSlNfR2V0UHJvcGVydHkoY3R4LCBvYmosIHByb3ApOwogICAgSlNfRnJlZUF0b20oY3R4LCBwcm9wKTsKICAgIHJldCA9IEpTX1ZhbHVlVG9BdG9tKGN0eCwgdmFsKTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbCk7CiAgICByZXR1cm4gcmV0OwogIH0KCiAgcmV0dXJuIEpTX05ld0F0b20oY3R4LCBzdHIpOwp9Cgp2b2lkCmpzX2F0b21fZHVtcChKU0NvbnRleHQqIGN0eCwgSlNBdG9tIGF0b20sIER5bkJ1ZiogZGIsIEJPT0wgY29sb3IpIHsKICBjb25zdCBjaGFyKiBzdHI7CiAgQk9PTCBpc19pbnQ7CiAgc3RyID0gSlNfQXRvbVRvQ1N0cmluZyhjdHgsIGF0b20pOwogIGlzX2ludCA9IGpzX2F0b21faXNpbnQoYXRvbSkgfHwgaXNfaW50ZWdlcihzdHIpOwogIGlmKGNvbG9yKQogICAgZGJ1Zl9wdXRzdHIoZGIsIGlzX2ludCA/IENPTE9SX0JST1dOIDogQ09MT1JfR1JBWSk7CgogIGRidWZfcHV0c3RyKGRiLCBzdHIpOwogIGlmKGNvbG9yKQogICAgZGJ1Zl9wdXRzdHIoZGIsIENPTE9SX0NZQU4pOwoKICBpZighaXNfaW50KQogICAgZGJ1Zl9wcmludGYoZGIsICIoMHgleCkiLCBqc19hdG9tX3RvYmluYXJ5KGF0b20pKTsKCiAgaWYoY29sb3IpCiAgICBkYnVmX3B1dHN0cihkYiwgQ09MT1JfTk9ORSk7Cn0KCnVuc2lnbmVkIGludApqc19hdG9tX3RvYmluYXJ5KEpTQXRvbSBhdG9tKSB7CiAgc3NpemVfdCByZXQ7CiAgaWYoanNfYXRvbV9pc2ludChhdG9tKSkgewogICAgcmV0ID0ganNfYXRvbV90b2ludChhdG9tKTsKICAgIHJldCA9IC1yZXQ7CiAgfSBlbHNlIHsKICAgIHJldCA9IGF0b207CiAgfQogIHJldHVybiByZXQ7Cn0KCmNvbnN0IGNoYXIqCmpzX2F0b21fdG9fY3N0cmluZ2xlbihKU0NvbnRleHQqIGN0eCwgc2l6ZV90KiBsZW4sIEpTQXRvbSBhdG9tKSB7CiAgSlNWYWx1ZSB2OwogIGNvbnN0IGNoYXIqIHM7CiAgdiA9IEpTX0F0b21Ub1ZhbHVlKGN0eCwgYXRvbSk7CiAgcyA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsIGxlbiwgdik7CiAgSlNfRnJlZVZhbHVlKGN0eCwgdik7CiAgcmV0dXJuIHM7Cn0KCmludDMyX3QKanNfYXRvbV90b2ludDMyKEpTQ29udGV4dCogY3R4LCBKU0F0b20gYXRvbSkgewogIGlmKCFqc19hdG9tX2lzaW50KGF0b20pKSB7CiAgICBpbnQ2NF90IGkgPSBJTlQ2NF9NSU47CiAgICBqc19hdG9tX3RvaW50NjQoY3R4LCAmaSwgYXRvbSk7CiAgICByZXR1cm4gaTsKICB9CiAgcmV0dXJuIC1hdG9tOwp9CgppbnQKanNfYXRvbV90b2ludDY0KEpTQ29udGV4dCogY3R4LCBpbnQ2NF90KiBpLCBKU0F0b20gYXRvbSkgewogIGludCByZXQ7CiAgSlNWYWx1ZSB2YWx1ZTsKICAqaSA9IElOVDY0X01BWDsKICB2YWx1ZSA9IEpTX0F0b21Ub1ZhbHVlKGN0eCwgYXRvbSk7CiAgcmV0ID0gIUpTX1RvSW50NjQoY3R4LCBpLCB2YWx1ZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIHJldHVybiByZXQ7Cn0KCkJPT0wKanNfYXRvbV9pc19pbmRleChKU0NvbnRleHQqIGN0eCwgaW50NjRfdCogcHZhbCwgSlNBdG9tIGF0b20pIHsKICBKU1ZhbHVlIHZhbHVlOwogIEJPT0wgcmV0ID0gRkFMU0U7CiAgaW50NjRfdCBpbmRleDsKCiAgaWYoYXRvbSAmICgxVSA8PCAzMSkpIHsKICAgICpwdmFsID0gYXRvbSAmICh+KDFVIDw8IDMxKSk7CiAgICByZXR1cm4gVFJVRTsKICB9CgogIHZhbHVlID0gSlNfQXRvbVRvVmFsdWUoY3R4LCBhdG9tKTsKCiAgaWYoSlNfSXNOdW1iZXIodmFsdWUpKSB7CiAgICBKU19Ub0ludDY0KGN0eCwgJmluZGV4LCB2YWx1ZSk7CiAgICByZXQgPSBUUlVFOwogIH0gZWxzZSBpZihKU19Jc1N0cmluZyh2YWx1ZSkpIHsKICAgIGNvbnN0IGNoYXIqIHMgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICBpZihzWzBdID09ICctJyAmJiBpc19kaWdpdF9jaGFyKHNbc1swXSA9PSAnLSddKSkgewogICAgICBpbmRleCA9IGF0b2kocyk7CiAgICAgIHJldCA9IFRSVUU7CiAgICB9CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIH0KCiAgaWYocmV0ID09IFRSVUUpCiAgICAqcHZhbCA9IGluZGV4OwoKICByZXR1cm4gcmV0Owp9CgpCT09MCmpzX2F0b21faXNfbGVuZ3RoKEpTQ29udGV4dCogY3R4LCBKU0F0b20gYXRvbSkgewogIGNvbnN0IGNoYXIqIHN0ciA9IEpTX0F0b21Ub0NTdHJpbmcoY3R4LCBhdG9tKTsKICBCT09MIHJldCA9ICFzdHJjbXAoc3RyLCAibGVuZ3RoIik7CiAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwogIHJldHVybiByZXQ7Cn0KCmNvbnN0IGNoYXIqCmpzX2Z1bmN0aW9uX25hbWUoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIEpTQXRvbSBhdG9tOwogIEpTVmFsdWUgc3RyLCBuYW1lLCBhcmdzWzJdLCBpZHg7CiAgY29uc3QgY2hhciogcyA9IDA7CiAgaW50MzJfdCBpID0gLTE7CiAgc3RyID0ganNfdmFsdWVfdG9zdHJpbmcoY3R4LCAiRnVuY3Rpb24iLCB2YWx1ZSk7CiAgYXRvbSA9IEpTX05ld0F0b20oY3R4LCAiaW5kZXhPZiIpOwogIGFyZ3NbMF0gPSBKU19OZXdTdHJpbmcoY3R4LCAiZnVuY3Rpb24gIik7CiAgaWR4ID0gSlNfSW52b2tlKGN0eCwgc3RyLCBhdG9tLCAxLCBhcmdzKTsKICBKU19GcmVlVmFsdWUoY3R4LCBhcmdzWzBdKTsKICBKU19Ub0ludDMyKGN0eCwgJmksIGlkeCk7CiAgaWYoaSAhPSAwKSB7CiAgICBKU19GcmVlQXRvbShjdHgsIGF0b20pOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgc3RyKTsKICAgIHJldHVybiAwOwogIH0KICBhcmdzWzBdID0gSlNfTmV3U3RyaW5nKGN0eCwgIigiKTsKICBpZHggPSBKU19JbnZva2UoY3R4LCBzdHIsIGF0b20sIDEsIGFyZ3MpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGFyZ3NbMF0pOwogIEpTX0ZyZWVBdG9tKGN0eCwgYXRvbSk7CiAgYXRvbSA9IEpTX05ld0F0b20oY3R4LCAic3Vic3RyaW5nIik7CiAgYXJnc1swXSA9IEpTX05ld1VpbnQzMihjdHgsIDkpOwogIGFyZ3NbMV0gPSBpZHg7CiAgbmFtZSA9IEpTX0ludm9rZShjdHgsIHN0ciwgYXRvbSwgMiwgYXJncyk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgYXJnc1swXSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgYXJnc1sxXSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgc3RyKTsKICBKU19GcmVlQXRvbShjdHgsIGF0b20pOwogIHMgPSBKU19Ub0NTdHJpbmcoY3R4LCBuYW1lKTsKICBKU19GcmVlVmFsdWUoY3R4LCBuYW1lKTsKICByZXR1cm4gczsKfQoKaW50CmpzX2Z1bmN0aW9uX2FyZ2MoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHJldHVybiBqc19nZXRfcHJvcGVydHlzdHJfaW50MzIoY3R4LCB2YWx1ZSwgImxlbmd0aCIpOwp9CgpKU0NGdW5jdGlvbioKanNfZnVuY3Rpb25fY2Z1bmMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIGlmKGpzX3ZhbHVlX2lzY2xhc3MoY3R4LCB2YWx1ZSwgSlNfQ0xBU1NfQ19GVU5DVElPTikpIHsKICAgIEpTT2JqZWN0KiBvYmogPSBKU19WQUxVRV9HRVRfT0JKKHZhbHVlKTsKICAgIHJldHVybiBvYmotPnUuY2Z1bmMuY19mdW5jdGlvbi5nZW5lcmljOwogIH0KICByZXR1cm4gMDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZnVuY3Rpb25fYm91bmQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYywgSlNWYWx1ZSogZnVuY19kYXRhKSB7CiAgaW50IGkgPSAwLCBqID0gMCwgayA9IEFCU19OVU0obWFnaWMpLCBsID0gU0lHTl9OVU0obWFnaWMpOwogIEpTVmFsdWUgYXJnc1thcmdjICsga107CgogIGZvcihpID0gMDsgaSA8IG1hZ2ljOyBpKyspIGFyZ3NbaV0gPSBmdW5jX2RhdGFbaSArIDFdOwogIGZvcihqID0gMDsgaiA8IGFyZ2M7IGorKykgYXJnc1tpKytdID0gYXJndltqXTsKCiAgcmV0dXJuIEpTX0NhbGwoY3R4LCBmdW5jX2RhdGFbMF0sIGwgPyBhcmdzWzBdIDogdGhpc192YWwsIGksIGFyZ3MgKyBsKTsKfQoKSlNWYWx1ZQpqc19mdW5jdGlvbl9iaW5kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgZnVuYywgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIGRhdGFbYXJnYyArIDFdOwogIGludCBpOwogIGRhdGFbMF0gPSBKU19EdXBWYWx1ZShjdHgsIGZ1bmMpOwogIGZvcihpID0gMDsgaSA8IGFyZ2M7IGkrKykgZGF0YVtpICsgMV0gPSBKU19EdXBWYWx1ZShjdHgsIGFyZ3ZbaV0pOwogIHJldHVybiBKU19OZXdDRnVuY3Rpb25EYXRhKGN0eCwganNfZnVuY3Rpb25fYm91bmQsIDAsIGFyZ2MsIGFyZ2MgKyAxLCBkYXRhKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfZnVuY3Rpb25fYm91bmRfdGhpcyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlIGZ1bmNfZGF0YVtdKSB7CiAgcmV0dXJuIEpTX0NhbGwoY3R4LCBmdW5jX2RhdGFbMF0sIGZ1bmNfZGF0YVsxXSwgYXJnYywgYXJndik7Cn0KCkpTVmFsdWUKanNfZnVuY3Rpb25fYmluZF90aGlzKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgZnVuYywgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsKSB7CiAgSlNWYWx1ZSBkYXRhWzJdOwogIGRhdGFbMF0gPSBKU19EdXBWYWx1ZShjdHgsIGZ1bmMpOwogIGRhdGFbMV0gPSBKU19EdXBWYWx1ZShjdHgsIHRoaXNfdmFsKTsKICByZXR1cm4gSlNfTmV3Q0Z1bmN0aW9uRGF0YShjdHgsIGpzX2Z1bmN0aW9uX2JvdW5kX3RoaXMsIGpzX2Z1bmN0aW9uX2FyZ2MoY3R4LCBmdW5jKSwgMCwgMiwgZGF0YSk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2Z1bmN0aW9uX3Rocm93X2ZuKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMsIEpTVmFsdWVDb25zdCBkYXRhW10pIHsKICBpZighSlNfSXNVbmRlZmluZWQoZGF0YVswXSkpCiAgICByZXR1cm4gSlNfVGhyb3coY3R4LCBkYXRhWzBdKTsKCiAgcmV0dXJuIEpTX0R1cFZhbHVlKGN0eCwgYXJnYyA+PSAxID8gYXJndlswXSA6IEpTX1VOREVGSU5FRCk7Cn0KCkpTVmFsdWUKanNfZnVuY3Rpb25fdGhyb3coSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBlcnIpIHsKICBKU1ZhbHVlQ29uc3QgZGF0YVsxXTsKICBkYXRhWzBdID0gSlNfRHVwVmFsdWUoY3R4LCBlcnIpOwogIHJldHVybiBKU19OZXdDRnVuY3Rpb25EYXRhKGN0eCwganNfZnVuY3Rpb25fdGhyb3dfZm4sIDAsIDAsIDEsIGRhdGEpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19mdW5jdGlvbl9yZXR1cm5fdmFsdWVfZm4oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYywgSlNWYWx1ZUNvbnN0IGRhdGFbXSkgewogIHJldHVybiBkYXRhWzBdOwp9CgpKU1ZhbHVlCmpzX2Z1bmN0aW9uX3JldHVybl91bmRlZmluZWQoSlNDb250ZXh0KiBjdHgpIHsKICBKU1ZhbHVlIGRhdGFbMV07CiAgZGF0YVswXSA9IEpTX1VOREVGSU5FRDsKICByZXR1cm4gSlNfTmV3Q0Z1bmN0aW9uRGF0YShjdHgsIGpzX2Z1bmN0aW9uX3JldHVybl92YWx1ZV9mbiwgMCwgMCwgMSwgZGF0YSk7Cn0KCkpTVmFsdWUKanNfZnVuY3Rpb25fcmV0dXJuX3ZhbHVlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBKU1ZhbHVlIGRhdGFbMV07CiAgZGF0YVswXSA9IEpTX0R1cFZhbHVlKGN0eCwgdmFsdWUpOwogIHJldHVybiBKU19OZXdDRnVuY3Rpb25EYXRhKGN0eCwganNfZnVuY3Rpb25fcmV0dXJuX3ZhbHVlX2ZuLCAwLCAwLCAxLCBkYXRhKTsKfQoKSlNWYWx1ZQpqc19nbG9iYWxfZ2V0X3N0cihKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogcHJvcCkgewogIEpTVmFsdWUgZ2xvYmFsX29iaiwgcmV0OwogIGdsb2JhbF9vYmogPSBKU19HZXRHbG9iYWxPYmplY3QoY3R4KTsKICByZXQgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGdsb2JhbF9vYmosIHByb3ApOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGdsb2JhbF9vYmopOwogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKanNfZ2xvYmFsX2dldF9zdHJfbihKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogcHJvcCwgc2l6ZV90IGxlbikgewogIEpTVmFsdWUgcmV0OwogIEpTQXRvbSBhdG9tID0gSlNfTmV3QXRvbUxlbihjdHgsIHByb3AsIGxlbik7CiAgcmV0ID0ganNfZ2xvYmFsX2dldF9hdG9tKGN0eCwgYXRvbSk7CiAgSlNfRnJlZUF0b20oY3R4LCBhdG9tKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX2dsb2JhbF9nZXRfYXRvbShKU0NvbnRleHQqIGN0eCwgSlNBdG9tIHByb3ApIHsKICBKU1ZhbHVlIGdsb2JhbF9vYmosIHJldDsKICBnbG9iYWxfb2JqID0gSlNfR2V0R2xvYmFsT2JqZWN0KGN0eCk7CiAgcmV0ID0gSlNfR2V0UHJvcGVydHkoY3R4LCBnbG9iYWxfb2JqLCBwcm9wKTsKICBKU19GcmVlVmFsdWUoY3R4LCBnbG9iYWxfb2JqKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX2dsb2JhbF9wcm90b3R5cGUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIGNsYXNzX25hbWUpIHsKICBKU1ZhbHVlIGN0b3IsIHJldDsKICBjdG9yID0ganNfZ2xvYmFsX2dldF9zdHIoY3R4LCBjbGFzc19uYW1lKTsKICByZXQgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGN0b3IsICJwcm90b3R5cGUiKTsKICBKU19GcmVlVmFsdWUoY3R4LCBjdG9yKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX2dsb2JhbF9zdGF0aWNfZnVuYyhKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogY2xhc3NfbmFtZSwgY29uc3QgY2hhciogZnVuY19uYW1lKSB7CiAgSlNWYWx1ZSBjdG9yLCBmdW5jOwogIGN0b3IgPSBqc19nbG9iYWxfZ2V0X3N0cihjdHgsIGNsYXNzX25hbWUpOwogIGZ1bmMgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGN0b3IsIGZ1bmNfbmFtZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgY3Rvcik7CiAgcmV0dXJuIGZ1bmM7Cn0KCkpTVmFsdWUKanNfZ2xvYmFsX3Byb3RvdHlwZV9mdW5jKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBjbGFzc19uYW1lLCBjb25zdCBjaGFyKiBmdW5jX25hbWUpIHsKICBKU1ZhbHVlIHByb3RvLCBmdW5jOwogIHByb3RvID0ganNfZ2xvYmFsX3Byb3RvdHlwZShjdHgsIGNsYXNzX25hbWUpOwogIGZ1bmMgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIHByb3RvLCBmdW5jX25hbWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHByb3RvKTsKICByZXR1cm4gZnVuYzsKfQoKSlNWYWx1ZQpqc19pdGVyYXRvcl9tZXRob2QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICBKU0F0b20gYXRvbTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBhdG9tID0ganNfc3ltYm9sX3N0YXRpY19hdG9tKGN0eCwgImFzeW5jSXRlcmF0b3IiKTsKICBpZihKU19IYXNQcm9wZXJ0eShjdHgsIG9iaiwgYXRvbSkpCiAgICByZXQgPSBKU19HZXRQcm9wZXJ0eShjdHgsIG9iaiwgYXRvbSk7CgogIEpTX0ZyZWVBdG9tKGN0eCwgYXRvbSk7CiAgaWYoIUpTX0lzRnVuY3Rpb24oY3R4LCByZXQpKSB7CiAgICBhdG9tID0ganNfc3ltYm9sX3N0YXRpY19hdG9tKGN0eCwgIml0ZXJhdG9yIik7CiAgICBpZihKU19IYXNQcm9wZXJ0eShjdHgsIG9iaiwgYXRvbSkpCiAgICAgIHJldCA9IEpTX0dldFByb3BlcnR5KGN0eCwgb2JqLCBhdG9tKTsKCiAgICBKU19GcmVlQXRvbShjdHgsIGF0b20pOwogIH0KICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX2l0ZXJhdG9yX25ldyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIEpTVmFsdWUgZm4sIHJldDsKICBmbiA9IGpzX2l0ZXJhdG9yX21ldGhvZChjdHgsIG9iaik7CiAgcmV0ID0gSlNfQ2FsbChjdHgsIGZuLCBvYmosIDAsIDApOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGZuKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX2l0ZXJhdG9yX25leHQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIEJPT0wqIGRvbmVfcCkgewogIEpTVmFsdWUgZm4sIHJlc3VsdCwgZG9uZSwgdmFsdWU7CiAgZm4gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgIm5leHQiKTsKICByZXN1bHQgPSBKU19DYWxsKGN0eCwgZm4sIG9iaiwgMCwgMCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgZm4pOwogIGRvbmUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIHJlc3VsdCwgImRvbmUiKTsKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgcmVzdWx0LCAidmFsdWUiKTsKICBKU19GcmVlVmFsdWUoY3R4LCByZXN1bHQpOwogICpkb25lX3AgPSBKU19Ub0Jvb2woY3R4LCBkb25lKTsKICBKU19GcmVlVmFsdWUoY3R4LCBkb25lKTsKICByZXR1cm4gdmFsdWU7Cn0KCkpTVmFsdWUKanNfaXRlcmF0b3JfcmVzdWx0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUsIEJPT0wgZG9uZSkgewogIEpTVmFsdWUgcmV0ID0gSlNfTmV3T2JqZWN0KGN0eCk7CgogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAiZG9uZSIsIEpTX05ld0Jvb2woY3R4LCBkb25lKSk7CiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJ2YWx1ZSIsIEpTX0R1cFZhbHVlKGN0eCwgdmFsdWUpKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfaXRlcmF0b3JfdGhlbl9mbihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlQ29uc3QgZGF0YVtdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJkb25lIiwgSlNfRHVwVmFsdWUoY3R4LCBkYXRhWzBdKSk7CiAgaWYoYXJnYyA+PSAxKQogICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJ2YWx1ZSIsIEpTX0R1cFZhbHVlKGN0eCwgYXJndlswXSkpOwoKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX2l0ZXJhdG9yX3RoZW4oSlNDb250ZXh0KiBjdHgsIEJPT0wgZG9uZSkgewogIEpTVmFsdWUgcmV0OwogIEpTVmFsdWVDb25zdCBkYXRhWzFdID0ge0pTX05ld0Jvb2woY3R4LCBkb25lKX07CgogIHJldHVybiBKU19OZXdDRnVuY3Rpb25EYXRhKGN0eCwganNfaXRlcmF0b3JfdGhlbl9mbiwgMSwgMCwgMSwgZGF0YSk7Cn0KCkpTVmFsdWUKanNfb2JqZWN0X2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBKU1ZhbHVlIGN0b3IgPSBKU19VTkRFRklORUQ7CiAgaWYoSlNfSXNPYmplY3QodmFsdWUpKQogICAgY3RvciA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgdmFsdWUsICJjb25zdHJ1Y3RvciIpOwogIHJldHVybiBjdG9yOwp9CgpjaGFyKgpqc19vYmplY3RfY2xhc3NuYW1lKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBKU1ZhbHVlIHByb3RvLCBjdG9yOwogIGNvbnN0IGNoYXIqIHN0cjsKICBjaGFyKiBuYW1lID0gMDsKICBpbnQgbmFtZWxlbjsKICBjdG9yID0ganNfb2JqZWN0X2NvbnN0cnVjdG9yKGN0eCwgdmFsdWUpOwogIGlmKCFKU19Jc0Z1bmN0aW9uKGN0eCwgY3RvcikpIHsKICAgIHByb3RvID0gSlNfR2V0UHJvdG90eXBlKGN0eCwgdmFsdWUpOwogICAgY3RvciA9IGpzX29iamVjdF9jb25zdHJ1Y3RvcihjdHgsIHByb3RvKTsKICB9CiAgaWYoKHN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIGN0b3IpKSkgewogICAgaWYoIXN0cm5jbXAoc3RyLCAiZnVuY3Rpb24gIiwgOSkpIHsKICAgICAgbmFtZWxlbiA9IGJ5dGVfY2hyKHN0ciArIDksIHN0cmxlbihzdHIpIC0gOSwgJygnKTsKICAgICAgbmFtZSA9IGpzX3N0cm5kdXAoY3R4LCBzdHIgKyA5LCBuYW1lbGVuKTsKICAgIH0KICB9CiAgaWYoIW5hbWUpIHsKICAgIGlmKHN0cikKICAgICAganNfY3N0cmluZ19mcmVlKGN0eCwgc3RyKTsKICAgIGlmKChzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGN0b3IsICJuYW1lIikpKSkKICAgICAgbmFtZSA9IGpzX3N0cmR1cChjdHgsIHN0cik7CiAgfQogIGlmKHN0cikKICAgIGpzX2NzdHJpbmdfZnJlZShjdHgsIHN0cik7CiAgcmV0dXJuIG5hbWU7Cn0KCkJPT0wKanNfb2JqZWN0X2VxdWFscyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGEsIEpTVmFsdWVDb25zdCBiKSB7CiAgSlNQcm9wZXJ0eUVudW0gKmF0b21zX2EsICphdG9tc19iOwogIHVpbnQzMl90IGksIG5hdG9tc19hLCBuYXRvbXNfYjsKICBpbnQzMl90IHRhLCB0YjsKICB0YSA9IGpzX3ZhbHVlX3R5cGUoY3R4LCBhKTsKICB0YiA9IGpzX3ZhbHVlX3R5cGUoY3R4LCBiKTsKICBhc3NlcnQodGEgPT0gVFlQRV9PQkpFQ1QpOwogIGFzc2VydCh0YiA9PSBUWVBFX09CSkVDVCk7CiAgaWYoSlNfR2V0T3duUHJvcGVydHlOYW1lcyhjdHgsICZhdG9tc19hLCAmbmF0b21zX2EsIGEsIEpTX0dQTl9TVFJJTkdfTUFTSyB8IEpTX0dQTl9TWU1CT0xfTUFTSyB8IEpTX0dQTl9FTlVNX09OTFkpKQogICAgcmV0dXJuIEZBTFNFOwoKICBpZihKU19HZXRPd25Qcm9wZXJ0eU5hbWVzKGN0eCwgJmF0b21zX2IsICZuYXRvbXNfYiwgYiwgSlNfR1BOX1NUUklOR19NQVNLIHwgSlNfR1BOX1NZTUJPTF9NQVNLIHwgSlNfR1BOX0VOVU1fT05MWSkpCiAgICByZXR1cm4gRkFMU0U7CgogIGlmKG5hdG9tc19hICE9IG5hdG9tc19iKQogICAgcmV0dXJuIEZBTFNFOwoKICBxdWlja3NvcnRfcigmYXRvbXNfYSwgbmF0b21zX2EsIHNpemVvZihKU1Byb3BlcnR5RW51bSksICZqc19wcm9wZW51bV9jbXAsIGN0eCk7CiAgcXVpY2tzb3J0X3IoJmF0b21zX2IsIG5hdG9tc19iLCBzaXplb2YoSlNQcm9wZXJ0eUVudW0pLCAmanNfcHJvcGVudW1fY21wLCBjdHgpOwogIGZvcihpID0gMDsgaSA8IG5hdG9tc19hOyBpKyspCiAgICBpZihhdG9tc19hW2ldLmF0b20gIT0gYXRvbXNfYltpXS5hdG9tKQogICAgICByZXR1cm4gRkFMU0U7CiAgcmV0dXJuIFRSVUU7Cn0KCmludApqc19vYmplY3RfaXMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSwgY29uc3QgY2hhciogY21wKSB7CiAgQk9PTCByZXQgPSBGQUxTRTsKICBjb25zdCBjaGFyKiBzdHI7CiAgaWYoKHN0ciA9IGpzX29iamVjdF90b3N0cmluZyhjdHgsIHZhbHVlKSkpIHsKICAgIHJldCA9IHN0cmNtcChzdHIsIGNtcCkgPT0gMDsKICAgIGpzX2NzdHJpbmdfZnJlZShjdHgsIHN0cik7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKanNfb2JqZWN0X2NvbnN0cnVjdChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGN0b3IpIHsKICBKU1ZhbHVlQ29uc3QgYXJnc1tdID0ge0pTX1VOREVGSU5FRH07CiAgcmV0dXJuIEpTX0NhbGxDb25zdHJ1Y3RvcihjdHgsIGN0b3IsIDAsIGFyZ3MpOwp9CgpKU1ZhbHVlCmpzX29iamVjdF9lcnJvcihKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbWVzc2FnZSkgewogIEpTVmFsdWVDb25zdCBhcmdzW10gPSB7SlNfTmV3U3RyaW5nKGN0eCwgbWVzc2FnZSl9OwogIEpTVmFsdWUgcmV0ID0ganNfb2JqZWN0X25ldyhjdHgsICJFcnJvciIsIDEsIGFyZ3MpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGFyZ3NbMF0pOwogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKanNfb2JqZWN0X25ldyhKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogY2xhc3NfbmFtZSwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIGN0b3IgPSBqc19nbG9iYWxfZ2V0X3N0cihjdHgsIGNsYXNzX25hbWUpOwogIEpTVmFsdWUgb2JqID0gSlNfQ2FsbENvbnN0cnVjdG9yKGN0eCwgY3RvciwgYXJnYywgYXJndik7CiAgSlNfRnJlZVZhbHVlKGN0eCwgY3Rvcik7CiAgcmV0dXJuIG9iajsKfQoKSlNWYWx1ZQpqc19vYmplY3RfZnVuY3Rpb24oSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIGZ1bmNfbmFtZSwgSlNWYWx1ZUNvbnN0IG9iaikgewogIEpTVmFsdWUgcmV0LCBjdG9yID0ganNfZ2xvYmFsX2dldF9zdHIoY3R4LCAiT2JqZWN0Iik7CiAgcmV0ID0ganNfaW52b2tlKGN0eCwgY3RvciwgZnVuY19uYW1lLCAxLCAmb2JqKTsKICBKU19GcmVlVmFsdWUoY3R4LCBjdG9yKTsKICByZXR1cm4gcmV0Owp9CgpCT09MCmpzX2hhc19wcm9wZXJ0eXN0cihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaiwgY29uc3QgY2hhciogc3RyKSB7CiAgSlNBdG9tIGF0b207CiAgQk9PTCByZXQgPSBGQUxTRTsKICBhdG9tID0gSlNfTmV3QXRvbShjdHgsIHN0cik7CiAgcmV0ID0gSlNfSGFzUHJvcGVydHkoY3R4LCBvYmosIGF0b20pOwogIEpTX0ZyZWVBdG9tKGN0eCwgYXRvbSk7CiAgcmV0dXJuIHJldDsKfQoKSlNWYWx1ZQpqc19nZXRfcHJvcGVydHlhdG9tX3ZhbHVlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCBKU0F0b20gcHJvcCkgewogIHJldHVybiBKU19HZXRQcm9wZXJ0eUludGVybmFsKGN0eCwgb2JqLCBwcm9wLCBKU19OVUxMLCBGQUxTRSk7Cn0KCkJPT0wKanNfZ2V0X3Byb3BlcnR5c3RyX2Jvb2woSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIGNvbnN0IGNoYXIqIHN0cikgewogIEJPT0wgcmV0ID0gRkFMU0U7CiAgSlNWYWx1ZSB2YWx1ZTsKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCBzdHIpOwogIGlmKCFKU19Jc0V4Y2VwdGlvbih2YWx1ZSkpCiAgICByZXQgPSBKU19Ub0Jvb2woY3R4LCB2YWx1ZSk7CgogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKICByZXR1cm4gcmV0Owp9Cgpjb25zdCBjaGFyKgpqc19nZXRfcHJvcGVydHlzdHJfY3N0cmluZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaiwgY29uc3QgY2hhciogcHJvcCkgewogIEpTVmFsdWUgdmFsdWU7CiAgY29uc3QgY2hhciogcmV0OwogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosIHByb3ApOwogIGlmKEpTX0lzVW5kZWZpbmVkKHZhbHVlKSB8fCBKU19Jc0V4Y2VwdGlvbih2YWx1ZSkpCiAgICByZXR1cm4gMDsKCiAgcmV0ID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKICByZXR1cm4gcmV0Owp9Cgpjb25zdCBjaGFyKgpqc19nZXRfcHJvcGVydHlzdHJfY3N0cmluZ2xlbihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaiwgY29uc3QgY2hhciogcHJvcCwgc2l6ZV90KiBsZW5wKSB7CiAgSlNWYWx1ZSB2YWx1ZTsKICBjb25zdCBjaGFyKiByZXQ7CiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgcHJvcCk7CiAgaWYoSlNfSXNVbmRlZmluZWQodmFsdWUpIHx8IEpTX0lzRXhjZXB0aW9uKHZhbHVlKSkKICAgIHJldHVybiAwOwoKICByZXQgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCBsZW5wLCB2YWx1ZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIHJldHVybiByZXQ7Cn0KCmNvbnN0IGNoYXIqCmpzX2dldF9wcm9wZXJ0eWludF9jc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCB1aW50MzJfdCBwcm9wKSB7CiAgSlNWYWx1ZSB2YWx1ZTsKICBjaGFyKiByZXQ7CiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIG9iaiwgcHJvcCk7CiAgLyogaWYoSlNfSXNVbmRlZmluZWQodmFsdWUpIHx8IEpTX0lzRXhjZXB0aW9uKHZhbHVlKSkKICAgICByZXR1cm4gMDsqLwoKICByZXQgPSBqc190b3N0cmluZyhjdHgsIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgcmV0dXJuIHJldDsKfQoKaW50MzJfdApqc19nZXRfcHJvcGVydHlpbnRfaW50MzIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIHVpbnQzMl90IHByb3ApIHsKICBpbnQzMl90IHJldDsKICBKU1ZhbHVlIHZhbHVlID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBvYmosIHByb3ApOwogIEpTX1RvSW50MzIoY3R4LCAmcmV0LCB2YWx1ZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIHJldHVybiByZXQ7Cn0KCmNoYXIqCmpzX2dldF9wcm9wZXJ0eXN0cl9zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIGNvbnN0IGNoYXIqIHByb3ApIHsKICBKU1ZhbHVlIHZhbHVlOwogIGNoYXIqIHJldDsKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCBwcm9wKTsKICBpZihKU19Jc1VuZGVmaW5lZCh2YWx1ZSkgfHwgSlNfSXNFeGNlcHRpb24odmFsdWUpKQogICAgcmV0dXJuIDA7CgogIHJldCA9IGpzX3Rvc3RyaW5nKGN0eCwgdmFsdWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKICByZXR1cm4gcmV0Owp9CgpjaGFyKgpqc19nZXRfcHJvcGVydHlzdHJfc3RyaW5nbGVuKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCBjb25zdCBjaGFyKiBwcm9wLCBzaXplX3QqIGxlbnApIHsKICBKU1ZhbHVlIHZhbHVlOwogIGNoYXIqIHJldDsKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCBwcm9wKTsKICBpZihKU19Jc1VuZGVmaW5lZCh2YWx1ZSkgfHwgSlNfSXNFeGNlcHRpb24odmFsdWUpKQogICAgcmV0dXJuIDA7CgogIHJldCA9IGpzX3Rvc3RyaW5nbGVuKGN0eCwgbGVucCwgdmFsdWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKICByZXR1cm4gcmV0Owp9CgppbnQzMl90CmpzX2dldF9wcm9wZXJ0eXN0cl9pbnQzMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaiwgY29uc3QgY2hhciogcHJvcCkgewogIEpTVmFsdWUgdmFsdWU7CiAgaW50MzJfdCByZXQ7CiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgcHJvcCk7CiAgaWYoSlNfSXNVbmRlZmluZWQodmFsdWUpIHx8IEpTX0lzRXhjZXB0aW9uKHZhbHVlKSkKICAgIHJldHVybiAwOwogIEpTX1RvSW50MzIoY3R4LCAmcmV0LCB2YWx1ZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIHJldHVybiByZXQ7Cn0KCnVpbnQ2NF90CmpzX2dldF9wcm9wZXJ0eXN0cl91aW50NjQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIGNvbnN0IGNoYXIqIHByb3ApIHsKICBKU1ZhbHVlIHZhbHVlOwogIHVpbnQ2NF90IHJldDsKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCBwcm9wKTsKICBpZihKU19Jc1VuZGVmaW5lZCh2YWx1ZSkgfHwgSlNfSXNFeGNlcHRpb24odmFsdWUpKQogICAgcmV0dXJuIDA7CiAgSlNfVG9JbmRleChjdHgsICZyZXQsIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgcmV0dXJuIHJldDsKfQoKSlNBdG9tCmpzX2dldF9wcm9wZXJ0eXN0cl9hdG9tKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCBjb25zdCBjaGFyKiBwcm9wKSB7CiAgSlNWYWx1ZSB2YWx1ZTsKICBKU0F0b20gcmV0OwogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosIHByb3ApOwogIGlmKEpTX0lzVW5kZWZpbmVkKHZhbHVlKSB8fCBKU19Jc0V4Y2VwdGlvbih2YWx1ZSkpCiAgICByZXR1cm4gMDsKICByZXQgPSBKU19WYWx1ZVRvQXRvbShjdHgsIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgcmV0dXJuIHJldDsKfQoKdm9pZApqc19zZXRfcHJvcGVydHlpbnRfc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCB1aW50MzJfdCBpLCBjb25zdCBjaGFyKiBzdHIpIHsKICBKU1ZhbHVlIHZhbHVlOwogIHZhbHVlID0gSlNfTmV3U3RyaW5nKGN0eCwgc3RyKTsKICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIG9iaiwgaSwgdmFsdWUpOwp9Cgp2b2lkCmpzX3NldF9wcm9wZXJ0eWludF9pbnQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIHVpbnQzMl90IGksIGludDMyX3QgdmFsdWUpIHsKICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIG9iaiwgaSwgSlNfTmV3SW50MzIoY3R4LCB2YWx1ZSkpOwp9Cgp2b2lkCmpzX3NldF9wcm9wZXJ0eXN0cl9zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIGNvbnN0IGNoYXIqIHByb3AsIGNvbnN0IGNoYXIqIHN0cikgewogIEpTVmFsdWUgdmFsdWU7CiAgdmFsdWUgPSBKU19OZXdTdHJpbmcoY3R4LCBzdHIpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgb2JqLCBwcm9wLCB2YWx1ZSk7Cn0KCnZvaWQKanNfc2V0X3Byb3BlcnR5c3RyX3N0cmluZ2xlbihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaiwgY29uc3QgY2hhciogcHJvcCwgY29uc3QgY2hhciogc3RyLCBzaXplX3QgbGVuKSB7CiAgSlNWYWx1ZSB2YWx1ZTsKICB2YWx1ZSA9IEpTX05ld1N0cmluZ0xlbihjdHgsIHN0ciwgbGVuKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgcHJvcCwgdmFsdWUpOwp9CgppbnQKanNfZ2V0X3Byb3BlcnR5ZGVzY3JpcHRvcihKU0NvbnRleHQqIGN0eCwgSlNQcm9wZXJ0eURlc2NyaXB0b3IqIGRlc2MsIEpTVmFsdWVDb25zdCB2YWx1ZSwgSlNBdG9tIHByb3ApIHsKICBKU1ZhbHVlIG9iaiwgcHJvdG87CiAgb2JqID0gSlNfRHVwVmFsdWUoY3R4LCB2YWx1ZSk7CiAgZG8gewogICAgaWYoSlNfR2V0T3duUHJvcGVydHkoY3R4LCBkZXNjLCBvYmosIHByb3ApID09IFRSVUUpCiAgICAgIHJldHVybiBUUlVFOwogICAgcHJvdG8gPSBKU19HZXRQcm90b3R5cGUoY3R4LCBvYmopOwogICAgaWYoSlNfVkFMVUVfR0VUX09CSihwcm90bykgPT0gSlNfVkFMVUVfR0VUX09CSihvYmopKQogICAgICBicmVhazsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgICBvYmogPSBwcm90bzsKICB9IHdoaWxlKEpTX0lzT2JqZWN0KG9iaikpOwogIHJldHVybiBGQUxTRTsKfQoKSlNDbGFzc0lECmpzX2NsYXNzX2lkKEpTQ29udGV4dCogY3R4LCBpbnQgaWQpIHsKICByZXR1cm4gY3R4LT5ydC0+Y2xhc3NfYXJyYXlbaWRdLmNsYXNzX2lkOwp9CgpKU0NsYXNzSUQKanNfY2xhc3NfbmV3aWQodm9pZCkgewogIEpTQ2xhc3NJRCBpZDsKICBKU19OZXdDbGFzc0lEKCZpZCk7CiAgcmV0dXJuIGlkOwp9CgpKU0NsYXNzKgpqc19jbGFzc19nZXQoSlNDb250ZXh0KiBjdHgsIEpTQ2xhc3NJRCBpZCkgewogIEpTQ2xhc3MqIHJldCA9ICZjdHgtPnJ0LT5jbGFzc19hcnJheVtpZF07CiAgcmV0dXJuIHJldC0+Y2xhc3NfaWQgPT0gaWQgPyByZXQgOiAwOwp9CgpKU0NsYXNzSUQKanNfY2xhc3NfZmluZChKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbmFtZSkgewogIEpTQXRvbSBhdG9tID0gSlNfTmV3QXRvbShjdHgsIG5hbWUpOwogIEpTUnVudGltZSogcnQgPSBjdHgtPnJ0OwogIGludCBpLCBuID0gcnQtPmNsYXNzX2NvdW50OwogIGZvcihpID0gMDsgaSA8IG47IGkrKykKICAgIGlmKHJ0LT5jbGFzc19hcnJheVtpXS5jbGFzc19uYW1lID09IGF0b20pCiAgICAgIHJldHVybiBpOwoKICByZXR1cm4gLTE7Cn0KCkpTQXRvbQpqc19jbGFzc19hdG9tKEpTQ29udGV4dCogY3R4LCBKU0NsYXNzSUQgaWQpIHsKICBKU0F0b20gYXRvbSA9IDA7CiAgaWYoaWQgPiAwICYmIGlkIDwgKEpTQ2xhc3NJRCljdHgtPnJ0LT5jbGFzc19jb3VudCkKICAgIGF0b20gPSBjdHgtPnJ0LT5jbGFzc19hcnJheVtpZF0uY2xhc3NfbmFtZTsKICByZXR1cm4gYXRvbTsKfQoKY29uc3QgY2hhcioKanNfY2xhc3NfbmFtZShKU0NvbnRleHQqIGN0eCwgSlNDbGFzc0lEIGlkKSB7CiAgSlNBdG9tIGF0b20gPSBjdHgtPnJ0LT5jbGFzc19hcnJheVtpZF0uY2xhc3NfbmFtZTsKICByZXR1cm4gSlNfQXRvbVRvQ1N0cmluZyhjdHgsIGF0b20pOwp9Cgpjb25zdCBjaGFyKgpqc19vYmplY3RfdG9zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHN0YXRpYyB0aHJlYWRfbG9jYWwgSlNWYWx1ZSBtZXRob2Q7CgogIGlmKEpTX1ZBTFVFX0dFVF9UQUcobWV0aG9kKSA9PSAwKQogICAgbWV0aG9kID0ganNfZ2xvYmFsX3Byb3RvdHlwZV9mdW5jKGN0eCwgIk9iamVjdCIsICJ0b1N0cmluZyIpOwoKICByZXR1cm4ganNfb2JqZWN0X3Rvc3RyaW5nMihjdHgsIG1ldGhvZCwgdmFsdWUpOwp9Cgpjb25zdCBjaGFyKgpqc19vYmplY3RfdG9zdHJpbmcyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbWV0aG9kLCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBKU1ZhbHVlIHN0ciA9IEpTX0NhbGwoY3R4LCBtZXRob2QsIHZhbHVlLCAwLCAwKTsKICBjb25zdCBjaGFyKiBzID0gSlNfVG9DU3RyaW5nKGN0eCwgc3RyKTsKICBKU19GcmVlVmFsdWUoY3R4LCBzdHIpOwogIHJldHVybiBzOwp9Cgpjb25zdCBjaGFyKgpqc19mdW5jdGlvbl90b3N0cmluZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgSlNWYWx1ZSBzdHIgPSBqc192YWx1ZV90b3N0cmluZyhjdHgsICJGdW5jdGlvbiIsIHZhbHVlKTsKICBjb25zdCBjaGFyKiBzID0gSlNfVG9DU3RyaW5nKGN0eCwgc3RyKTsKICBKU19GcmVlVmFsdWUoY3R4LCBzdHIpOwogIHJldHVybiBzOwp9CgpCT09MCmpzX2Z1bmN0aW9uX2lzbmF0aXZlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBjb25zdCBjaGFyKiBmbiA9IGpzX2Z1bmN0aW9uX3Rvc3RyaW5nKGN0eCwgdmFsdWUpOwogIEJPT0wgcmV0ID0gISFzdHJzdHIoZm4sICJcbiAgICBbbmF0aXZlIGNvZGVdXG4iKTsKICBKU19GcmVlQ1N0cmluZyhjdHgsIGZuKTsKICByZXR1cm4gcmV0Owp9CgpCT09MCmpzX2lzX2lucHV0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICByZXR1cm4gSlNfSXNTdHJpbmcodmFsdWUpIHx8IGpzX3ZhbHVlX2lzY2xhc3MoY3R4LCB2YWx1ZSwgSlNfQ0xBU1NfQVJSQVlfQlVGRkVSKTsKfQoKaW50CmpzX3Byb3BlbnVtX2NtcChjb25zdCB2b2lkKiBhLCBjb25zdCB2b2lkKiBiLCB2b2lkKiBwdHIpIHsKICBKU0NvbnRleHQqIGN0eCA9IHB0cjsKICBjb25zdCBjaGFyICpzdHJhLCAqc3RyYjsKICBpbnQgcmV0OwogIHN0cmEgPSBKU19BdG9tVG9DU3RyaW5nKGN0eCwgKChjb25zdCBKU1Byb3BlcnR5RW51bSopYSktPmF0b20pOwogIHN0cmIgPSBKU19BdG9tVG9DU3RyaW5nKGN0eCwgKChjb25zdCBKU1Byb3BlcnR5RW51bSopYiktPmF0b20pOwogIHJldCA9IHN0cnZlcnNjbXAoc3RyYSwgc3RyYik7CiAganNfY3N0cmluZ19mcmVlKGN0eCwgc3RyYSk7CiAganNfY3N0cmluZ19mcmVlKGN0eCwgc3RyYik7CiAgcmV0dXJuIHJldDsKfQoKdm9pZApqc19wcm9wZXJ0eWVudW1zX2ZyZWUoSlNDb250ZXh0KiBjdHgsIEpTUHJvcGVydHlFbnVtKiBwcm9wcywgc2l6ZV90IGxlbikgewogIHVpbnQzMl90IGk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIEpTX0ZyZWVBdG9tKGN0eCwgcHJvcHNbaV0uYXRvbSk7CiAgLy8ganNfZnJlZShjdHgsIHByb3BzKTsKfQoKdm9pZApqc19zdHJ2X2ZyZWVfbihKU0NvbnRleHQqIGN0eCwgaW50IG4sIGNoYXIqIGFyZ3ZbXSkgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IG47IGkrKykgewogICAgaWYoYXJndltpXSkgewogICAgICBqc19mcmVlKGN0eCwgYXJndltpXSk7CiAgICAgIGFyZ3ZbaV0gPSAwOwogICAgfQogIH0KfQoKdm9pZApqc19zdHJ2X2ZyZWUoSlNDb250ZXh0KiBjdHgsIGNoYXIqKiBzdHJ2KSB7CiAgc2l6ZV90IGk7CiAgaWYoc3RydiA9PSAwKQogICAgcmV0dXJuOwoKICBmb3IoaSA9IDA7IHN0cnZbaV07IGkrKykgeyBqc19mcmVlKGN0eCwgc3RydltpXSk7IH0KICBqc19mcmVlKGN0eCwgc3Rydik7Cn0KCnZvaWQKanNfc3Rydl9mcmVlX3J0KEpTUnVudGltZSogcnQsIGNoYXIqKiBzdHJ2KSB7CiAgc2l6ZV90IGk7CiAgaWYoc3RydiA9PSAwKQogICAgcmV0dXJuOwoKICBmb3IoaSA9IDA7IHN0cnZbaV07IGkrKykgeyBqc19mcmVlX3J0KHJ0LCBzdHJ2W2ldKTsgfQogIGpzX2ZyZWVfcnQocnQsIHN0cnYpOwp9CgpKU1ZhbHVlCmpzX3N0cnZfdG9fYXJyYXkoSlNDb250ZXh0KiBjdHgsIGNoYXIqKiBzdHJ2KSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdBcnJheShjdHgpOwogIGlmKHN0cnYpIHsKICAgIHNpemVfdCBpOwogICAgZm9yKGkgPSAwOyBzdHJ2W2ldOyBpKyspIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCBpLCBKU19OZXdTdHJpbmcoY3R4LCBzdHJ2W2ldKSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCnNpemVfdApqc19zdHJ2X2xlbmd0aChjaGFyKiogc3RydikgewogIHNpemVfdCBpOwogIGZvcihpID0gMDsgc3RydltpXTsgaSsrKSB7fQogIHJldHVybiBpOwp9CgpjaGFyKioKanNfc3Rydl9kdXAoSlNDb250ZXh0KiBjdHgsIGNoYXIqKiBzdHJ2KSB7CiAgY2hhcioqIHJldDsKICBzaXplX3QgaSwgbGVuID0ganNfc3Rydl9sZW5ndGgoc3Rydik7CiAgcmV0ID0ganNfbWFsbG9jKGN0eCwgKGxlbiArIDEpICogc2l6ZW9mKGNoYXIqKSk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsgcmV0W2ldID0ganNfc3RyZHVwKGN0eCwgc3RydltpXSk7IH0KICByZXRbaV0gPSAwOwogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKanNfaW50dl90b19hcnJheShKU0NvbnRleHQqIGN0eCwgaW50KiBpbnR2LCBzaXplX3QgbGVuKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdBcnJheShjdHgpOwogIGlmKGludHYpIHsKICAgIHNpemVfdCBpOwogICAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCBpLCBKU19OZXdJbnQzMihjdHgsIGludHZbaV0pKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKSlNBdG9tCmpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbmFtZSkgewogIEpTVmFsdWUgc3ltID0ganNfc3ltYm9sX3N0YXRpY192YWx1ZShjdHgsIG5hbWUpOwogIEpTQXRvbSByZXQgPSBKU19WYWx1ZVRvQXRvbShjdHgsIHN5bSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgc3ltKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX3N5bWJvbF9zdGF0aWNfdmFsdWUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBKU1ZhbHVlIHN5bWJvbF9jdG9yLCByZXQ7CiAgc3ltYm9sX2N0b3IgPSBqc19zeW1ib2xfY3RvcihjdHgpOwogIHJldCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgc3ltYm9sX2N0b3IsIG5hbWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHN5bWJvbF9jdG9yKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX3N5bWJvbF9jdG9yKEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGpzX2dsb2JhbF9nZXRfc3RyKGN0eCwgIlN5bWJvbCIpOwp9CgpKU1ZhbHVlCmpzX3N5bWJvbF9pbnZva2Vfc3RhdGljKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBuYW1lLCBKU1ZhbHVlQ29uc3QgYXJnKSB7CiAgSlNWYWx1ZSByZXQ7CiAgSlNBdG9tIG1ldGhvZF9uYW1lID0gSlNfTmV3QXRvbShjdHgsIG5hbWUpOwogIHJldCA9IEpTX0ludm9rZShjdHgsIGpzX3N5bWJvbF9jdG9yKGN0eCksIG1ldGhvZF9uYW1lLCAxLCAmYXJnKTsKICBKU19GcmVlQXRvbShjdHgsIG1ldGhvZF9uYW1lKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX3N5bWJvbF9mb3IoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIHN5bV9mb3IpIHsKICBKU1ZhbHVlIGtleSwgc3ltOwogIEpTQXRvbSBhdG9tOwogIGtleSA9IEpTX05ld1N0cmluZyhjdHgsIHN5bV9mb3IpOwogIHN5bSA9IGpzX3N5bWJvbF9pbnZva2Vfc3RhdGljKGN0eCwgImZvciIsIGtleSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwga2V5KTsKICByZXR1cm4gc3ltOwp9CgpKU0F0b20KanNfc3ltYm9sX2Zvcl9hdG9tKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBzeW1fZm9yKSB7CiAgSlNWYWx1ZSBzeW0gPSBqc19zeW1ib2xfZm9yKGN0eCwgc3ltX2Zvcik7CiAgSlNBdG9tIGF0b20gPSBKU19WYWx1ZVRvQXRvbShjdHgsIHN5bSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgc3ltKTsKICByZXR1cm4gYXRvbTsKfQoKSlNWYWx1ZQpqc19zeW1ib2xfdG9fc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgc3ltKSB7CiAgSlNWYWx1ZSB2YWx1ZSwgc3RyOwogIEpTQXRvbSBhdG9tOwogIHZhbHVlID0ganNfc3ltYm9sX2ludm9rZV9zdGF0aWMoY3R4LCAia2V5Rm9yIiwgc3ltKTsKICBpZighSlNfSXNVbmRlZmluZWQodmFsdWUpKQogICAgcmV0dXJuIHZhbHVlOwoKICBhdG9tID0gSlNfVmFsdWVUb0F0b20oY3R4LCBzeW0pOwogIHN0ciA9IEpTX0F0b21Ub1N0cmluZyhjdHgsIGF0b20pOwogIEpTX0ZyZWVBdG9tKGN0eCwgYXRvbSk7CiAgcmV0dXJuIHN0cjsKfQoKY29uc3QgY2hhcioKanNfc3ltYm9sX3RvX2NzdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBzeW0pIHsKICBKU1ZhbHVlIHZhbHVlID0ganNfc3ltYm9sX3RvX3N0cmluZyhjdHgsIHN5bSk7CiAgY29uc3QgY2hhciogc3RyOwogIHN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgcmV0dXJuIHN0cjsKfQoKSlNWYWx1ZSoKanNfdmFsdWVzX2R1cChKU0NvbnRleHQqIGN0eCwgaW50IG52YWx1ZXMsIEpTVmFsdWVDb25zdCogdmFsdWVzKSB7CiAgSlNWYWx1ZSogcmV0ID0ganNfbWFsbG9jel9ydChjdHgtPnJ0LCBzaXplb2YoSlNWYWx1ZSkgKiBudmFsdWVzKTsKICBpbnQgaTsKICBmb3IoaSA9IDA7IGkgPCBudmFsdWVzOyBpKyspIHJldFtpXSA9IEpTX0R1cFZhbHVlUlQoY3R4LT5ydCwgdmFsdWVzW2ldKTsKICByZXR1cm4gcmV0Owp9Ci8qCnZvaWQKanNfdmFsdWVzX2ZyZWUoSlNDb250ZXh0KiBjdHgsIGludCBudmFsdWVzLCBKU1ZhbHVlQ29uc3QqIHZhbHVlcykgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IG52YWx1ZXM7IGkrKykgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWVzW2ldKTsKICBqc19mcmVlKGN0eCwgdmFsdWVzKTsKfQoqLwp2b2lkCmpzX3ZhbHVlc19mcmVlKEpTUnVudGltZSogcnQsIGludCBudmFsdWVzLCBKU1ZhbHVlQ29uc3QqIHZhbHVlcykgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IG52YWx1ZXM7IGkrKykgSlNfRnJlZVZhbHVlUlQocnQsIHZhbHVlc1tpXSk7CiAganNfZnJlZV9ydChydCwgdmFsdWVzKTsKfQoKSlNWYWx1ZQpqc192YWx1ZXNfdG9hcnJheShKU0NvbnRleHQqIGN0eCwgaW50IG52YWx1ZXMsIEpTVmFsdWVDb25zdCogdmFsdWVzKSB7CiAgaW50IGk7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdBcnJheShjdHgpOwogIGZvcihpID0gMDsgaSA8IG52YWx1ZXM7IGkrKykgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIGksIEpTX0R1cFZhbHVlKGN0eCwgdmFsdWVzW2ldKSk7CiAgcmV0dXJuIHJldDsKfQoKSlNWYWx1ZSoKanNfdmFsdWVzX2Zyb21hcnJheShKU0NvbnRleHQqIGN0eCwgc2l6ZV90KiBudmFsdWVzX3AsIEpTVmFsdWVDb25zdCBhcnIpIHsKICBzaXplX3QgaSwgbGVuID0ganNfYXJyYXlfbGVuZ3RoKGN0eCwgYXJyKTsKICBKU1ZhbHVlKiByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKEpTVmFsdWVDb25zdCkgKiBsZW4pOwoKICBpZihudmFsdWVzX3ApCiAgICAqbnZhbHVlc19wID0gbGVuOwoKICBmb3IoaSA9IDA7IGkgPCBsZW47IGkrKykgeyByZXRbaV0gPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIGFyciwgaSk7IH0KICByZXR1cm4gcmV0Owp9Cgpjb25zdCBjaGFyKgpqc192YWx1ZV90eXBlX25hbWUoaW50MzJfdCB0eXBlKSB7CiAgaW50MzJfdCBmbGFnID0ganNfdmFsdWVfdHlwZTJmbGFnKHR5cGUpOwogIGNvbnN0IGNoYXIqIGNvbnN0IHR5cGVzW10gPSB7CiAgICAgICJ1bmRlZmluZWQiLCAgICAgIm51bGwiLCAgICAgICAgICJib29sIiwgICAgICAiaW50IiwgIm9iamVjdCIsICAgInN0cmluZyIsICJzeW1ib2wiLCAiYmlnX2Zsb2F0IiwKICAgICAgImJpZ19pbnQiLCAgICAgICAiYmlnX2RlY2ltYWwiLCAgImZsb2F0NjQiLCAgICJuYW4iLCAiZnVuY3Rpb24iLCAiYXJyYXkiLCAgIm1vZHVsZSIsICJmdW5jdGlvbl9ieXRlY29kZSIsCiAgICAgICJ1bmluaXRpYWxpemVkIiwgImNhdGNoX29mZnNldCIsICJleGNlcHRpb24iLAogIH07CiAgaWYoZmxhZyA+PSAwICYmIGZsYWcgPCBjb3VudG9mKHR5cGVzKSkKICAgIHJldHVybiB0eXBlc1tmbGFnXTsKICByZXR1cm4gMDsKfQoKY29uc3QgY2hhcioKanNfdmFsdWVfdHlwZXN0cihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgaW50MzJfdCB0eXBlID0ganNfdmFsdWVfdHlwZShjdHgsIHZhbHVlKTsKICByZXR1cm4ganNfdmFsdWVfdHlwZV9uYW1lKHR5cGUpOwp9CgpCT09MCmpzX3ZhbHVlX2hhc19yZWZfY291bnQoSlNWYWx1ZSB2KSB7CiAgcmV0dXJuICgodW5zaWduZWQpanNfdmFsdWVfdGFnKHYpID49ICh1bnNpZ25lZClKU19UQUdfRklSU1QpOwp9CgplbnVtIHZhbHVlX21hc2sKanNfdmFsdWVfdHlwZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgaW50MzJfdCBmbGFnOwogIHVpbnQzMl90IHR5cGUgPSAwOwogIGlmKChmbGFnID0ganNfdmFsdWVfdHlwZV9nZXQoY3R4LCB2YWx1ZSkpID09IC0xKQogICAgcmV0dXJuIDA7CgogIGlmKGZsYWcgPT0gRkxBR19BUlJBWSAvKnx8IGZsYWcgPT0gRkxBR19GVU5DVElPTiovKQogICAgdHlwZSB8PSBUWVBFX09CSkVDVDsKCiAgdHlwZSB8PSAxIDw8IGZsYWc7CgogIHJldHVybiB0eXBlOwp9CgppbnQzMl90CmpzX3ZhbHVlX3R5cGVfZ2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBpZihKU19Jc0FycmF5KGN0eCwgdmFsdWUpKQogICAgcmV0dXJuIEZMQUdfQVJSQVk7CgogIGlmKEpTX0lzRnVuY3Rpb24oY3R4LCB2YWx1ZSkgJiYgSlNfR2V0Q2xhc3NJRCh2YWx1ZSkgPD0gSlNfQ0xBU1NfQVNZTkNfR0VORVJBVE9SKQogICAgcmV0dXJuIEZMQUdfRlVOQ1RJT047CgogIGlmKEpTX1ZBTFVFX0lTX05BTih2YWx1ZSkpCiAgICByZXR1cm4gRkxBR19OQU47CgogIHJldHVybiBqc192YWx1ZV90eXBlX2ZsYWcodmFsdWUpOwp9CgppbnQzMl90CmpzX3ZhbHVlX3R5cGVfZmxhZyhKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBzd2l0Y2goSlNfVkFMVUVfR0VUX1RBRyh2YWx1ZSkpIHsKICAgIGNhc2UgSlNfVEFHX0JJR19ERUNJTUFMOiByZXR1cm4gRkxBR19CSUdfREVDSU1BTDsKICAgIGNhc2UgSlNfVEFHX0JJR19JTlQ6IHJldHVybiBGTEFHX0JJR19JTlQ7CiAgICBjYXNlIEpTX1RBR19CSUdfRkxPQVQ6IHJldHVybiBGTEFHX0JJR19GTE9BVDsKICAgIGNhc2UgSlNfVEFHX1NZTUJPTDogcmV0dXJuIEZMQUdfU1lNQk9MOwogICAgY2FzZSBKU19UQUdfU1RSSU5HOiByZXR1cm4gRkxBR19TVFJJTkc7CiAgICBjYXNlIEpTX1RBR19NT0RVTEU6IHJldHVybiBGTEFHX01PRFVMRTsKICAgIGNhc2UgSlNfVEFHX0ZVTkNUSU9OX0JZVEVDT0RFOiByZXR1cm4gRkxBR19GVU5DVElPTl9CWVRFQ09ERTsKICAgIGNhc2UgSlNfVEFHX09CSkVDVDogcmV0dXJuIEZMQUdfT0JKRUNUOwogICAgY2FzZSBKU19UQUdfSU5UOiByZXR1cm4gRkxBR19JTlQ7CiAgICBjYXNlIEpTX1RBR19CT09MOiByZXR1cm4gRkxBR19CT09MOwogICAgY2FzZSBKU19UQUdfTlVMTDogcmV0dXJuIEZMQUdfTlVMTDsKICAgIGNhc2UgSlNfVEFHX1VOREVGSU5FRDogcmV0dXJuIEZMQUdfVU5ERUZJTkVEOwogICAgY2FzZSBKU19UQUdfVU5JTklUSUFMSVpFRDogcmV0dXJuIEZMQUdfVU5JTklUSUFMSVpFRDsKICAgIGNhc2UgSlNfVEFHX0NBVENIX09GRlNFVDogcmV0dXJuIEZMQUdfQ0FUQ0hfT0ZGU0VUOwogICAgY2FzZSBKU19UQUdfRVhDRVBUSU9OOiByZXR1cm4gRkxBR19FWENFUFRJT047CiAgICBjYXNlIEpTX1RBR19GTE9BVDY0OiByZXR1cm4gRkxBR19GTE9BVDY0OwogIH0KICByZXR1cm4gLTE7Cn0KCnZvaWQKanNfdmFsdWVfZnJlZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSB2KSB7CiAgaWYoanNfdmFsdWVfaGFzX3JlZl9jb3VudCh2KSkgewogICAgSlNSZWZDb3VudEhlYWRlciogcCA9IChKU1JlZkNvdW50SGVhZGVyKilqc192YWx1ZV9wdHIodik7CiAgICBpZihwLT5yZWZfY291bnQgPiAwKSB7CiAgICAgIC0tcC0+cmVmX2NvdW50OwogICAgICBpZihwLT5yZWZfY291bnQgPT0gMCkKICAgICAgICBfX0pTX0ZyZWVWYWx1ZShjdHgsIHYpOwogICAgfQogIH0KfQoKSlNWYWx1ZQpqc192YWx1ZV9jbG9uZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgZW51bSB2YWx1ZV9tYXNrIHR5cGUgPSAxIDw8IGpzX3ZhbHVlX3R5cGVfZ2V0KGN0eCwgdmFsdWUpOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIHN3aXRjaCh0eXBlKSB7CiAgICAvKmNhc2UgVFlQRV9TVFJJTkc6IHsKICAgICBzaXplX3QgbGVuOwogICAgIGNvbnN0IGNoYXIqIHN0cjsKICAgICBzdHIgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmbGVuLCB2YWx1ZSk7CiAgICAgcmV0ID0gSlNfTmV3U3RyaW5nTGVuKGN0eCwgc3RyLCBsZW4pOwogICAgIGpzX2NzdHJpbmdfZnJlZShjdHgsIHN0cik7CiAgICAgYnJlYWs7CiAgICAgfSovCiAgICBjYXNlIFRZUEVfSU5UOiB7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgSlNfVkFMVUVfR0VUX0lOVCh2YWx1ZSkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgVFlQRV9GTE9BVDY0OiB7CiAgICAgIHJldCA9IEpTX05ld0Zsb2F0NjQoY3R4LCBKU19WQUxVRV9HRVRfRkxPQVQ2NCh2YWx1ZSkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgVFlQRV9CT09MOiB7CiAgICAgIHJldCA9IEpTX05ld0Jvb2woY3R4LCBKU19WQUxVRV9HRVRfQk9PTCh2YWx1ZSkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgVFlQRV9GVU5DVElPTjoKICAgIGNhc2UgVFlQRV9BUlJBWToKICAgIGNhc2UgVFlQRV9PQkpFQ1Q6IHsKICAgICAgSlNQcm9wZXJ0eUVudW0qIHRhYl9hdG9tOwogICAgICB1aW50MzJfdCB0YWJfYXRvbV9sZW47CiAgICAgIHJldCA9IEpTX0lzQXJyYXkoY3R4LCB2YWx1ZSkgPyBKU19OZXdBcnJheShjdHgpIDogSlNfTmV3T2JqZWN0KGN0eCk7CiAgICAgIGlmKCFKU19HZXRPd25Qcm9wZXJ0eU5hbWVzKGN0eCwgJnRhYl9hdG9tLCAmdGFiX2F0b21fbGVuLCB2YWx1ZSwgSlNfR1BOX1NUUklOR19NQVNLIHwgSlNfR1BOX1NZTUJPTF9NQVNLIHwgSlNfR1BOX0VOVU1fT05MWSkpIHsKICAgICAgICB1aW50MzJfdCBpOwogICAgICAgIGZvcihpID0gMDsgaSA8IHRhYl9hdG9tX2xlbjsgaSsrKSB7CiAgICAgICAgICBKU1ZhbHVlIHByb3A7CiAgICAgICAgICBwcm9wID0gSlNfR2V0UHJvcGVydHkoY3R4LCB2YWx1ZSwgdGFiX2F0b21baV0uYXRvbSk7CiAgICAgICAgICBKU19TZXRQcm9wZXJ0eShjdHgsIHJldCwgdGFiX2F0b21baV0uYXRvbSwganNfdmFsdWVfY2xvbmUoY3R4LCBwcm9wKSk7CiAgICAgICAgfQogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBUWVBFX1VOREVGSU5FRDoKICAgIGNhc2UgVFlQRV9OVUxMOgogICAgY2FzZSBUWVBFX1NUUklORzoKICAgIGNhc2UgVFlQRV9TWU1CT0w6CiAgICBjYXNlIFRZUEVfQklHX0RFQ0lNQUw6CiAgICBjYXNlIFRZUEVfQklHX0lOVDoKICAgIGNhc2UgVFlQRV9CSUdfRkxPQVQ6IHsKICAgICAgcmV0ID0gSlNfRHVwVmFsdWUoY3R4LCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgZGVmYXVsdDogewogICAgICByZXQgPSBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJObyBzdWNoIHR5cGU6ICVzICgweCUwOHgpXG4iLCBqc192YWx1ZV90eXBlX25hbWUodHlwZSksIHR5cGUpOwogICAgICBicmVhazsKICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKdm9pZApqc192YWx1ZV9md3JpdGUoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWwsIEZJTEUqIGYpIHsKICBEeW5CdWYgZGJ1ZiA9IHswfTsKICBzaXplX3QgbjsKICBqc19kYnVmX2luaXQoY3R4LCAmZGJ1Zik7CiAganNfdmFsdWVfZHVtcChjdHgsIHZhbCwgJmRidWYpOwogIGRidWZfcHV0YygmZGJ1ZiwgJ1xuJyk7CiAgbiA9IGRidWYuc2l6ZTsKICBkYnVmXzAoJmRidWYpOwogIGZ3cml0ZShkYnVmLmJ1ZiwgMSwgbiwgZik7CiAgZmZsdXNoKGYpOwogIGRidWZfZnJlZSgmZGJ1Zik7Cn0KCnZvaWQKanNfdmFsdWVfZHVtcChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBEeW5CdWYqIGRiKSB7CiAgY29uc3QgY2hhciogc3RyOwogIHNpemVfdCBsZW47CiAgaWYoSlNfSXNGdW5jdGlvbihjdHgsIHZhbHVlKSkgewogICAgSlNWYWx1ZSBzcmMgPSBqc19pbnZva2UoY3R4LCB2YWx1ZSwgInRvU291cmNlIiwgMCwgMCk7CiAgICBqc192YWx1ZV9kdW1wKGN0eCwgc3JjLCBkYik7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBzcmMpOwogIH0gZWxzZSBpZihKU19Jc09iamVjdCh2YWx1ZSkpIHsKICAgIGNvbnN0IGNoYXIqIHN0ciA9IGpzX29iamVjdF90b3N0cmluZyhjdHgsIHZhbHVlKTsKICAgIGRidWZfcHV0c3RyKGRiLCBzdHIpOwogICAganNfY3N0cmluZ19mcmVlKGN0eCwgc3RyKTsKICAgIGlmKGRiLT5zaXplICYmIGRiLT5idWZbZGItPnNpemUgLSAxXSA9PSAnXG4nKQogICAgICBkYi0+c2l6ZS0tOwogIH0gZWxzZSB7CiAgICBpbnQgaXNfc3RyaW5nID0gSlNfSXNTdHJpbmcodmFsdWUpOwoKICAgIGlmKGlzX3N0cmluZykKICAgICAgZGJ1Zl9wdXRjKGRiLCAnIicpOwoKICAgIHN0ciA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZsZW4sIHZhbHVlKTsKICAgIGRidWZfYXBwZW5kKGRiLCAoY29uc3QgdWludDhfdCopc3RyLCBsZW4pOwoKICAgIGpzX2NzdHJpbmdfZnJlZShjdHgsIHN0cik7CgogICAgaWYoaXNfc3RyaW5nKQogICAgICBkYnVmX3B1dGMoZGIsICciJyk7CiAgICBlbHNlIGlmKEpTX0lzQmlnRmxvYXQodmFsdWUpKQogICAgICBkYnVmX3B1dGMoZGIsICdsJyk7CiAgICBlbHNlIGlmKEpTX0lzQmlnRGVjaW1hbCh2YWx1ZSkpCiAgICAgIGRidWZfcHV0YyhkYiwgJ20nKTsKICAgIGVsc2UgaWYoSlNfSXNCaWdJbnQoY3R4LCB2YWx1ZSkpCiAgICAgIGRidWZfcHV0YyhkYiwgJ24nKTsKICB9Cn0KCkJPT0wKanNfdmFsdWVfZXF1YWxzKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgYSwgSlNWYWx1ZUNvbnN0IGIpIHsKICBpbnQzMl90IHRhLCB0YjsKICBCT09MIHJldCA9IEZBTFNFOwogIHRhID0ganNfdmFsdWVfdHlwZShjdHgsIGEpOwogIHRiID0ganNfdmFsdWVfdHlwZShjdHgsIGIpOwoKICBpZih0YSAhPSB0YikgewogICAgcmV0ID0gRkFMU0U7CiAgfSBlbHNlIGlmKHRhICYgdGIgJiAoVFlQRV9OVUxMIHwgVFlQRV9VTkRFRklORUQgfCBUWVBFX05BTikpIHsKICAgIHJldCA9IFRSVUU7CiAgfSBlbHNlIGlmKHRhICYgdGIgJiAoVFlQRV9CSUdfSU5UIHwgVFlQRV9CSUdfRkxPQVQgfCBUWVBFX0JJR19ERUNJTUFMKSkgewogICAgY29uc3QgY2hhciAqYXN0ciwgKmJzdHI7CgogICAgYXN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIGEpOwogICAgYnN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIGIpOwoKICAgIHJldCA9ICFzdHJjbXAoYXN0ciwgYnN0cik7CgogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBhc3RyKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgYnN0cik7CgogIH0gZWxzZSBpZih0YSAmIFRZUEVfSU5UKSB7CiAgICBpbnQzMl90IGludGEsIGludGI7CgogICAgaW50YSA9IEpTX1ZBTFVFX0dFVF9JTlQoYSk7CiAgICBpbnRiID0gSlNfVkFMVUVfR0VUX0lOVChiKTsKICAgIHJldCA9IGludGEgPT0gaW50YjsKICB9IGVsc2UgaWYodGEgJiBUWVBFX0JPT0wpIHsKICAgIEJPT0wgYm9vbGEsIGJvb2xiOwoKICAgIGJvb2xhID0gISFKU19WQUxVRV9HRVRfQk9PTChhKTsKICAgIGJvb2xiID0gISFKU19WQUxVRV9HRVRfQk9PTChiKTsKICAgIHJldCA9IGJvb2xhID09IGJvb2xiOwoKICB9IGVsc2UgaWYodGEgJiBUWVBFX0ZMT0FUNjQpIHsKICAgIGRvdWJsZSBmbHRhLCBmbHRiOwoKICAgIGZsdGEgPSBKU19WQUxVRV9HRVRfRkxPQVQ2NChhKTsKICAgIGZsdGIgPSBKU19WQUxVRV9HRVRfRkxPQVQ2NChiKTsKICAgIHJldCA9IGZsdGEgPT0gZmx0YjsKCiAgfSBlbHNlIGlmKHRhICYgVFlQRV9PQkpFQ1QpIHsKICAgIHJldCA9IGpzX29iamVjdF9lcXVhbHMoY3R4LCBhLCBiKTsKICAgIC8qdm9pZCAqb2JqYSwgKm9iamI7CgogICAgb2JqYSA9IEpTX1ZBTFVFX0dFVF9PQkooYSk7CiAgICBvYmpiID0gSlNfVkFMVUVfR0VUX09CSihiKTsKCiAgICByZXQgPSBvYmphID09IG9iamI7Ki8KICB9IGVsc2UgaWYodGEgJiBUWVBFX1NUUklORykgewogICAgY29uc3QgY2hhciAqc3RyYSwgKnN0cmI7CgogICAgc3RyYSA9IEpTX1RvQ1N0cmluZyhjdHgsIGEpOwogICAgc3RyYiA9IEpTX1RvQ1N0cmluZyhjdHgsIGIpOwoKICAgIHJldCA9ICFzdHJjbXAoc3RyYSwgc3RyYik7CgogICAganNfY3N0cmluZ19mcmVlKGN0eCwgc3RyYSk7CiAgICBqc19jc3RyaW5nX2ZyZWUoY3R4LCBzdHJiKTsKICB9CgogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKanNfdmFsdWVfZnJvbV9jaGFyKEpTQ29udGV4dCogY3R4LCBpbnQgYykgewogIHVpbnQ4X3QgYnVmWzE2XTsKICBzaXplX3QgbGVuID0gdW5pY29kZV90b191dGY4KGJ1ZiwgYyk7CiAgcmV0dXJuIEpTX05ld1N0cmluZ0xlbihjdHgsIChjb25zdCBjaGFyKilidWYsIGxlbik7Cn0KCnZvaWQKanNfdmFsdWVfcHJpbnQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIER5bkJ1ZiBkYnVmOwogIGpzX2RidWZfaW5pdChjdHgsICZkYnVmKTsKICBqc192YWx1ZV9kdW1wKGN0eCwgdmFsdWUsICZkYnVmKTsKICBkYnVmXzAoJmRidWYpOwogIGZwdXRzKChjb25zdCBjaGFyKilkYnVmLmJ1Ziwgc3Rkb3V0KTsKICBkYnVmX2ZyZWUoJmRidWYpOwp9CgppbnQKanNfdmFsdWVfdG9zaXplKEpTQ29udGV4dCogY3R4LCBzaXplX3QqIHN6LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICB1aW50NjRfdCB1NjQgPSAwOwogIGludCByOwogIHIgPSBKU19Ub0luZGV4KGN0eCwgJnU2NCwgdmFsdWUpOwogICpzeiA9IHU2NDsKICByZXR1cm4gcjsKfQoKdm9pZApqc192YWx1ZV9mcmVlX3J0KEpTUnVudGltZSogcnQsIEpTVmFsdWUgdikgewogIGlmKGpzX3ZhbHVlX2hhc19yZWZfY291bnQodikpIHsKICAgIEpTUmVmQ291bnRIZWFkZXIqIHAgPSAoSlNSZWZDb3VudEhlYWRlciopanNfdmFsdWVfcHRyKHYpOwogICAgLS1wLT5yZWZfY291bnQ7CiAgICBpZihwLT5yZWZfY291bnQgPT0gMCkKICAgICAgX19KU19GcmVlVmFsdWVSVChydCwgdik7CiAgfQp9CgpjaGFyKgpqc19jc3RyaW5nX3B0cihKU1ZhbHVlQ29uc3QgdikgewogIEpTU3RyaW5nKiBwOwoKICBpZihKU19Jc1N0cmluZyh2KSkgewogICAgcCA9IEpTX1ZBTFVFX0dFVF9QVFIodik7CiAgICByZXR1cm4gKGNoYXIqKXAtPnUuc3RyODsKICB9CiAgcmV0dXJuIDA7Cn0KCmNoYXIqCmpzX2NzdHJpbmdfZHVwKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBzdHIpIHsKICBKU1N0cmluZyogcDsKICBpZighc3RyKQogICAgcmV0dXJuIDA7CiAgLyogcHVycG9zZWx5IHJlbW92aW5nIGNvbnN0bmVzcyAqLwogIHAgPSAoSlNTdHJpbmcqKSh2b2lkKikoc3RyIC0gb2Zmc2V0b2YoSlNTdHJpbmcsIHUpKTsKICBKU19EdXBWYWx1ZShjdHgsIEpTX01LUFRSKEpTX1RBR19TVFJJTkcsIHApKTsKICByZXR1cm4gKGNoYXIqKXN0cjsKfQoKSlNWYWx1ZUNvbnN0CmpzX2NzdHJpbmdfdmFsdWUoY29uc3QgY2hhciogcHRyKSB7CiAgSlNTdHJpbmcqIHA7CiAgaWYoIXB0cikKICAgIHJldHVybiBKU19VTkRFRklORUQ7CgogIHAgPSAoSlNTdHJpbmcqKSh2b2lkKikocHRyIC0gb2Zmc2V0b2YoSlNTdHJpbmcsIHUpKTsKICByZXR1cm4gSlNfTUtQVFIoSlNfVEFHX1NUUklORywgcCk7Cn0KCnZvaWQKanNfY3N0cmluZ19kdW1wKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUsIER5bkJ1ZiogZGIpIHsKICBjb25zdCBjaGFyKiBzdHI7CiAgc2l6ZV90IGxlbjsKCiAgc3RyID0gSlNfVG9DU3RyaW5nTGVuKGN0eCwgJmxlbiwgdmFsdWUpOwogIGRidWZfYXBwZW5kKGRiLCAoY29uc3QgdWludDhfdCopc3RyLCBsZW4pOwoKICBqc19jc3RyaW5nX2ZyZWUoY3R4LCBzdHIpOwp9CgpKU1ZhbHVlCmpzX21hcF9uZXcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBlbnRyaWVzKSB7CiAgSlNWYWx1ZSBtYXAsIGN0b3IgPSBqc19nbG9iYWxfZ2V0X3N0cihjdHgsICJNYXAiKTsKICBtYXAgPSBKU19DYWxsQ29uc3RydWN0b3IoY3R4LCBjdG9yLCAxLCAmZW50cmllcyk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgY3Rvcik7CiAgcmV0dXJuIG1hcDsKfQoKSlNWYWx1ZQptb2R1bGVfbmFtZShKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKICBpZihtLT5tb2R1bGVfbmFtZSA8IGN0eC0+cnQtPmF0b21fY291bnQpCiAgICByZXR1cm4gSlNfQXRvbVRvVmFsdWUoY3R4LCBtLT5tb2R1bGVfbmFtZSk7CgogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCmNoYXIqCm1vZHVsZV9uYW1lc3RyKEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIGNvbnN0IGNoYXIqIG5hbWUgPSBKU19BdG9tVG9DU3RyaW5nKGN0eCwgbS0+bW9kdWxlX25hbWUpOwogIGNoYXIqIHN0ciA9IGpzX3N0cmR1cChjdHgsIG5hbWUpOwogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbmFtZSk7CiAgcmV0dXJuIHN0cjsKfQoKc3RhdGljIEpTVmFsdWUKY2FsbF9tb2R1bGVfZnVuYyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2LCBpbnQgbWFnaWMsIEpTVmFsdWUqIGRhdGEpIHsKICB1bmlvbiB7CiAgICBKU01vZHVsZUluaXRGdW5jKiBpbml0X2Z1bmM7CiAgICBpbnQzMl90IGlbMl07CiAgfSB1OwoKICB1LmlbMF0gPSBKU19WQUxVRV9HRVRfSU5UKGRhdGFbMF0pOwogIHUuaVsxXSA9IEpTX1ZBTFVFX0dFVF9JTlQoZGF0YVsxXSk7CgogIGlmKGFyZ2MgPj0gMSAmJiBKU19Jc01vZHVsZShhcmd2WzBdKSkKICAgIHJldHVybiBKU19OZXdJbnQzMihjdHgsIHUuaW5pdF9mdW5jKGN0eCwgSlNfVkFMVUVfR0VUX1BUUihhcmd2WzBdKSkpOwoKICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgMSBtb2R1bGUgZXhwZWN0ZWQiKTsKfQoKSlNWYWx1ZQptb2R1bGVfZnVuYyhKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKICBKU1ZhbHVlIGZ1bmMgPSBKU19VTkRFRklORUQ7CiAgaWYoSlNfSXNGdW5jdGlvbihjdHgsIG0tPmZ1bmNfb2JqKSkgewogICAgZnVuYyA9IEpTX0R1cFZhbHVlKGN0eCwgbS0+ZnVuY19vYmopOwogIH0gZWxzZSBpZihtLT5pbml0X2Z1bmMpIHsKICAgIHVuaW9uIHsKICAgICAgSlNNb2R1bGVJbml0RnVuYyogaW5pdF9mdW5jOwogICAgICBpbnQzMl90IGlbMl07CiAgICB9IHUgPSB7bS0+aW5pdF9mdW5jfTsKICAgIEpTVmFsdWVDb25zdCBkYXRhWzJdID0gewogICAgICAgIEpTX01LVkFMKEpTX1RBR19JTlQsIHUuaVswXSksCiAgICAgICAgSlNfTUtWQUwoSlNfVEFHX0lOVCwgdS5pWzFdKSwKICAgIH07CiAgICBmdW5jID0gSlNfTmV3Q0Z1bmN0aW9uRGF0YShjdHgsIGNhbGxfbW9kdWxlX2Z1bmMsIDEsIDAsIDIsIGRhdGEpOwogIH0KICByZXR1cm4gZnVuYzsKfQoKSlNWYWx1ZQptb2R1bGVfbnMoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CiAgcmV0dXJuIEpTX0R1cFZhbHVlKGN0eCwgbS0+bW9kdWxlX25zKTsKfQoKSlNWYWx1ZQptb2R1bGVfZXhwb3J0c19maW5kKEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSwgSlNBdG9tIGF0b20pIHsKICBzaXplX3QgaTsKICBmb3IoaSA9IDA7IGkgPCBtLT5leHBvcnRfZW50cmllc19jb3VudDsgaSsrKSB7CiAgICBKU0V4cG9ydEVudHJ5KiBlbnRyeSA9ICZtLT5leHBvcnRfZW50cmllc1tpXTsKCiAgICBpZihlbnRyeS0+ZXhwb3J0X25hbWUgPT0gYXRvbSkgewogICAgICBKU1ZhclJlZiogcmVmID0gZW50cnktPnUubG9jYWwudmFyX3JlZjsKICAgICAgSlNWYWx1ZSBleHBvcnQgPSByZWYgPyBKU19EdXBWYWx1ZShjdHgsIHJlZi0+cHZhbHVlID8gKnJlZi0+cHZhbHVlIDogcmVmLT52YWx1ZSkgOiBKU19VTkRFRklORUQ7CiAgICAgIHJldHVybiBleHBvcnQ7CiAgICB9CiAgfQogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnZvaWQKbW9kdWxlX2V4cG9ydHNfZ2V0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSwgQk9PTCByZW5hbWVfZGVmYXVsdCwgSlNWYWx1ZUNvbnN0IGV4cG9ydHMpIHsKICBKU0F0b20gZGVmID0gSlNfTmV3QXRvbShjdHgsICJkZWZhdWx0Iik7CgogIHNpemVfdCBpOwogIGZvcihpID0gMDsgaSA8IG0tPmV4cG9ydF9lbnRyaWVzX2NvdW50OyBpKyspIHsKICAgIEpTRXhwb3J0RW50cnkqIGVudHJ5ID0gJm0tPmV4cG9ydF9lbnRyaWVzW2ldOwogICAgSlNWYXJSZWYqIHJlZiA9IGVudHJ5LT51LmxvY2FsLnZhcl9yZWY7CiAgICBpZihyZWYpIHsKICAgICAgSlNWYWx1ZSBleHBvcnQgPSBKU19EdXBWYWx1ZShjdHgsIHJlZi0+cHZhbHVlID8gKnJlZi0+cHZhbHVlIDogcmVmLT52YWx1ZSk7CiAgICAgIEpTQXRvbSBuYW1lID0gZW50cnktPmV4cG9ydF9uYW1lOwogICAgICBpZihyZW5hbWVfZGVmYXVsdCAmJiBuYW1lID09IGRlZikKICAgICAgICBuYW1lID0gbS0+bW9kdWxlX25hbWU7CiAgICAgIEpTX1NldFByb3BlcnR5KGN0eCwgZXhwb3J0cywgbmFtZSwgZXhwb3J0KTsKICAgIH0KICB9CiAgSlNfRnJlZUF0b20oY3R4LCBkZWYpOwp9CgpKU1ZhbHVlCm1vZHVsZV9leHBvcnRzKEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIEpTVmFsdWUgZXhwb3J0czsKICBleHBvcnRzID0gSlNfTmV3T2JqZWN0UHJvdG8oY3R4LCBKU19OVUxMKTsKICBtb2R1bGVfZXhwb3J0c19nZXQoY3R4LCBtLCBGQUxTRSwgZXhwb3J0cyk7CiAgcmV0dXJuIGV4cG9ydHM7Cn0KCnN0cnVjdCBsaXN0X2hlYWQqCmpzX21vZHVsZXNfbGlzdChKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiAmY3R4LT5sb2FkZWRfbW9kdWxlczsKfQoKSlNWYWx1ZQpqc19tb2R1bGVzX2FycmF5KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIHN0cnVjdCBsaXN0X2hlYWQqIGVsOwogIEpTVmFsdWUgcmV0ID0gSlNfTmV3QXJyYXkoY3R4KTsKICB1aW50MzJfdCBpID0gMDsKICBsaXN0X2Zvcl9lYWNoKGVsLCAmY3R4LT5sb2FkZWRfbW9kdWxlcykgewogICAgSlNNb2R1bGVEZWYqIG0gPSBsaXN0X2VudHJ5KGVsLCBKU01vZHVsZURlZiwgbGluayk7CiAgICBjaGFyKiBzdHIgPSBtb2R1bGVfbmFtZXN0cihjdHgsIG0pOwogICAgSlNWYWx1ZSBlbnRyeSA9IG1hZ2ljID8gbW9kdWxlX2VudHJ5KGN0eCwgbSkgOiBtb2R1bGVfdmFsdWUoY3R4LCBtKTsKICAgIGlmKDEgLypzdHJbMF0gIT0gJzwnKi8pCiAgICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCBpKyssIGVudHJ5KTsKICAgIGVsc2UKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgZW50cnkpOwogICAganNfZnJlZShjdHgsIHN0cik7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKanNfbW9kdWxlc19lbnRyaWVzKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIHN0cnVjdCBsaXN0X2hlYWQqIGVsOwogIEpTVmFsdWUgcmV0ID0gSlNfTmV3QXJyYXkoY3R4KTsKICB1aW50MzJfdCBpID0gMDsKICBsaXN0X2Zvcl9lYWNoKGVsLCAmY3R4LT5sb2FkZWRfbW9kdWxlcykgewogICAgSlNNb2R1bGVEZWYqIG0gPSBsaXN0X2VudHJ5KGVsLCBKU01vZHVsZURlZiwgbGluayk7CiAgICBjaGFyKiBuYW1lID0gbW9kdWxlX25hbWVzdHIoY3R4LCBtKTsKICAgIEpTVmFsdWUgZW50cnkgPSBKU19OZXdBcnJheShjdHgpOwogICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBlbnRyeSwgMCwgSlNfTmV3U3RyaW5nKGN0eCwgLypiYXNlbmFtZSovIChuYW1lKSkpOwogICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBlbnRyeSwgMSwgbWFnaWMgPyBtb2R1bGVfZW50cnkoY3R4LCBtKSA6IG1vZHVsZV92YWx1ZShjdHgsIG0pKTsKICAgIGlmKDEgLypzdHJbMF0gIT0gJzwnKi8pCiAgICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCBpKyssIGVudHJ5KTsKICAgIGVsc2UKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgZW50cnkpOwogICAganNfZnJlZShjdHgsIG5hbWUpOwogIH0KICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX21vZHVsZXNfbWFwKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIEpTVmFsdWUgbWFwLCBlbnRyaWVzID0ganNfbW9kdWxlc19lbnRyaWVzKGN0eCwgdGhpc192YWwsIG1hZ2ljKTsKICBtYXAgPSBqc19tYXBfbmV3KGN0eCwgZW50cmllcyk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgZW50cmllcyk7CiAgcmV0dXJuIG1hcDsKfQoKSlNWYWx1ZQpqc19tb2R1bGVzX29iamVjdChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgbGlzdF9oZWFkKiBpdDsKICBKU1ZhbHVlIG9iaiA9IEpTX05ld09iamVjdChjdHgpOwogIGxpc3RfZm9yX2VhY2goaXQsICZjdHgtPmxvYWRlZF9tb2R1bGVzKSB7CiAgICBKU01vZHVsZURlZiogbSA9IGxpc3RfZW50cnkoaXQsIEpTTW9kdWxlRGVmLCBsaW5rKTsKICAgIGNoYXIqIG5hbWUgPSBtb2R1bGVfbmFtZXN0cihjdHgsIG0pOwogICAgSlNWYWx1ZSBlbnRyeSA9IG1hZ2ljID8gbW9kdWxlX2VudHJ5KGN0eCwgbSkgOiBtb2R1bGVfdmFsdWUoY3R4LCBtKTsKICAgIGlmKDEgLypzdHJbMF0gIT0gJzwnKi8pCiAgICAgIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgb2JqLCBiYXNlbmFtZShuYW1lKSwgZW50cnkpOwogICAgZWxzZQogICAgICBKU19GcmVlVmFsdWUoY3R4LCBlbnRyeSk7CiAgICBqc19mcmVlKGN0eCwgbmFtZSk7CiAgfQogIHJldHVybiBvYmo7Cn0KCkpTVmFsdWUKbW9kdWxlX3ZhbHVlKEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIHJldHVybiBKU19EdXBWYWx1ZShjdHgsIEpTX01LUFRSKEpTX1RBR19NT0RVTEUsIG0pKTsKfQoKSlNWYWx1ZQptb2R1bGVfZW50cnkoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CiAgSlNWYWx1ZSBlbnRyeSA9IEpTX05ld0FycmF5KGN0eCk7CiAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBlbnRyeSwgMCwgbW9kdWxlX25zKGN0eCwgbSkpOwogIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgZW50cnksIDEsIG1vZHVsZV9leHBvcnRzKGN0eCwgbSkpOwogIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgZW50cnksIDIsIG1vZHVsZV9mdW5jKGN0eCwgbSkpOwogIHJldHVybiBlbnRyeTsKfQoKSlNWYWx1ZQptb2R1bGVfb2JqZWN0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIEpTVmFsdWUgbnMsIGV4cG9ydHMsIGZ1bmMsIG9iaiA9IEpTX05ld09iamVjdChjdHgpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAibmFtZSIsIG1vZHVsZV9uYW1lKGN0eCwgbSkpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAicmVzb2x2ZWQiLCBKU19OZXdCb29sKGN0eCwgbS0+cmVzb2x2ZWQpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgImZ1bmNfY3JlYXRlZCIsIEpTX05ld0Jvb2woY3R4LCBtLT5mdW5jX2NyZWF0ZWQpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgImluc3RhbnRpYXRlZCIsIEpTX05ld0Jvb2woY3R4LCBtLT5pbnN0YW50aWF0ZWQpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgImV2YWx1YXRlZCIsIEpTX05ld0Jvb2woY3R4LCBtLT5ldmFsdWF0ZWQpKTsKCiAgbnMgPSBtb2R1bGVfbnMoY3R4LCBtKTsKICBpZighSlNfSXNVbmRlZmluZWQobnMpKQogICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJucyIsIG5zKTsKICBleHBvcnRzID0gbW9kdWxlX2V4cG9ydHMoY3R4LCBtKTsKICBpZighSlNfSXNVbmRlZmluZWQoZXhwb3J0cykpCiAgICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgImV4cG9ydHMiLCBtb2R1bGVfZXhwb3J0cyhjdHgsIG0pKTsKICBmdW5jID0gbW9kdWxlX2Z1bmMoY3R4LCBtKTsKICBpZighSlNfSXNVbmRlZmluZWQoZnVuYykpCiAgICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgImZ1bmMiLCBmdW5jKTsKICByZXR1cm4gb2JqOwp9CgpjaGFyKgpqc19tb2R1bGVfc2VhcmNoKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBzZWFyY2hfcGF0aCwgY29uc3QgY2hhciogbW9kdWxlKSB7CiAgY2hhciogcGF0aCA9IDA7CgogIHdoaWxlKCFzdHJuY21wKG1vZHVsZSwgIi4vIiwgMikpIG1vZHVsZSA9IHRyaW1fZG90c2xhc2gobW9kdWxlKTsKCiAgaWYoIXN0cl9jb250YWlucyhtb2R1bGUsICcvJykgfHwgc3RyX2VuZHMobW9kdWxlLCAiLnNvIikpCiAgICBwYXRoID0ganNfbW9kdWxlX3NlYXJjaF9leHQoY3R4LCBzZWFyY2hfcGF0aCwgbW9kdWxlLCAiLnNvIik7CgogIGlmKCFwYXRoKQogICAgcGF0aCA9IGpzX21vZHVsZV9zZWFyY2hfZXh0KGN0eCwgc2VhcmNoX3BhdGgsIG1vZHVsZSwgIi5qcyIpOwoKICByZXR1cm4gcGF0aDsKfQoKY2hhcioKanNfbW9kdWxlX3NlYXJjaF9leHQoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIHBhdGgsIGNvbnN0IGNoYXIqIG5hbWUsIGNvbnN0IGNoYXIqIGV4dCkgewogIGNvbnN0IGNoYXIgKnAsICpxOwogIGNoYXIqIGZpbGUgPSAwOwogIHNpemVfdCBpLCBqOwogIHN0cnVjdCBzdGF0IHN0OwoKICBmb3IocCA9IHBhdGg7ICpwOyBwID0gcSkgewogICAgaWYoKHEgPSBzdHJjaHIocCwgJzonKSkgPT0gMCkKICAgICAgcSA9IHAgKyBzdHJsZW4ocCk7CiAgICBpID0gcSAtIHA7CiAgICBmaWxlID0ganNfbWFsbG9jKGN0eCwgaSArIDEgKyBzdHJsZW4obmFtZSkgKyAzICsgMSk7CiAgICBzdHJuY3B5KGZpbGUsIHAsIGkpOwogICAgZmlsZVtpXSA9ICcvJzsKICAgIHN0cmNweSgmZmlsZVtpICsgMV0sIG5hbWUpOwogICAgaiA9IHN0cmxlbihuYW1lKTsKICAgIGlmKCEoaiA+PSAzICYmICFzdHJjbXAoJm5hbWVbaiAtIDNdLCBleHQpKSkKICAgICAgc3RyY3B5KCZmaWxlW2kgKyAxICsgal0sIGV4dCk7CiAgICBpZighc3RhdChmaWxlLCAmc3QpKQogICAgICByZXR1cm4gZmlsZTsKICAgIGpzX2ZyZWUoY3R4LCBmaWxlKTsKICAgIGlmKCpxID09ICc6JykKICAgICAgKytxOwogIH0KICByZXR1cm4gMDsKfQoKY2hhcioKanNfbW9kdWxlX25vcm1hbGl6ZShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogcGF0aCwgY29uc3QgY2hhciogbmFtZSwgdm9pZCogb3BhcXVlKSB7CiAgc2l6ZV90IHA7CiAgY29uc3QgY2hhciogcjsKICBEeW5CdWYgZmlsZSA9IHswLCAwLCAwfTsKICBzaXplX3QgbjsKICBpZihuYW1lWzBdICE9ICcuJykKICAgIHJldHVybiBqc19zdHJkdXAoY3R4LCBuYW1lKTsKICBqc19kYnVmX2luaXQoY3R4LCAmZmlsZSk7CiAgbiA9IHBhdGhbKHAgPSBzdHJfcmNocihwYXRoLCAnLycpKV0gPyBwIDogMDsKICBkYnVmX3B1dCgmZmlsZSwgKGNvbnN0IHVpbnQ4X3QqKXBhdGgsIG4pOwogIGRidWZfMCgmZmlsZSk7CiAgZm9yKHIgPSBuYW1lOzspIHsKICAgIGlmKHJbMF0gPT0gJy4nICYmIHJbMV0gPT0gJy8nKSB7CiAgICAgIHIgKz0gMjsKICAgIH0gZWxzZSBpZihyWzBdID09ICcuJyAmJiByWzFdID09ICcuJyAmJiByWzJdID09ICcvJykgewogICAgICBpZihmaWxlLnNpemUgPT0gMCkKICAgICAgICBicmVhazsKICAgICAgaWYoKHAgPSBieXRlX3JjaHIoZmlsZS5idWYsIGZpbGUuc2l6ZSwgJy8nKSkgPCBmaWxlLnNpemUpCiAgICAgICAgcCsrOwogICAgICBlbHNlCiAgICAgICAgcCA9IDA7CiAgICAgIGlmKCFzdHJjbXAoKGNvbnN0IGNoYXIqKSZmaWxlLmJ1ZltwXSwgIi4iKSB8fCAhc3RyY21wKChjb25zdCBjaGFyKikmZmlsZS5idWZbcF0sICIuLiIpKQogICAgICAgIGJyZWFrOwogICAgICBpZihwID4gMCkKICAgICAgICBwLS07CiAgICAgIGZpbGUuc2l6ZSA9IHA7CiAgICAgIHIgKz0gMzsKICAgIH0gZWxzZSB7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICBpZihmaWxlLnNpemUgPT0gMCkKICAgIGRidWZfcHV0YygmZmlsZSwgJy4nKTsKICBkYnVmX3B1dGMoJmZpbGUsICcvJyk7CiAgZGJ1Zl9wdXRzdHIoJmZpbGUsIHIpOwogIGRidWZfMCgmZmlsZSk7CiAgcmV0dXJuIChjaGFyKilmaWxlLmJ1ZjsKfQoKSlNNb2R1bGVEZWYqCmpzX21vZHVsZV9kZWYoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIEpTTW9kdWxlRGVmKiBtID0gMDsKICBpZihKU19Jc1N0cmluZyh2YWx1ZSkpIHsKICAgIGNvbnN0IGNoYXIqIG5hbWUgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICBtID0ganNfbW9kdWxlX2ZpbmQoY3R4LCBuYW1lKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbmFtZSk7CiAgfSBlbHNlIGlmKEpTX1ZBTFVFX0dFVF9UQUcodmFsdWUpID09IEpTX1RBR19NT0RVTEUpIHsKICAgIG0gPSBKU19WQUxVRV9HRVRfUFRSKHZhbHVlKTsKICB9CiAgcmV0dXJuIG07Cn0KCkpTTW9kdWxlRGVmKgpqc19tb2R1bGVfZmluZF9md2QoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBzdHJ1Y3QgbGlzdF9oZWFkKiBlbDsKICBzaXplX3QgbmFtZWxlbiA9IHN0cmxlbihuYW1lKTsKICBsaXN0X2Zvcl9lYWNoKGVsLCAmY3R4LT5sb2FkZWRfbW9kdWxlcykgewogICAgSlNNb2R1bGVEZWYqIG0gPSBsaXN0X2VudHJ5KGVsLCBKU01vZHVsZURlZiwgbGluayk7CiAgICBjaGFyICpuLCAqc3RyID0gbW9kdWxlX25hbWVzdHIoY3R4LCBtKTsKICAgIHNpemVfdCBsZW47CiAgICBuID0gYmFzZW5hbWUoc3RyKTsKICAgIGxlbiA9IHN0cl9yY2hyKG4sICcuJyk7CiAgICBpZighc3RyY21wKHN0ciwgbmFtZSkgfHwgIXN0cmNtcChuLCBuYW1lKSB8fCAobGVuID09IG5hbWVsZW4gJiYgIXN0cm5jbXAobiwgbmFtZSwgbGVuKSkpCiAgICAgIHJldHVybiBtOwogICAganNfZnJlZShjdHgsIHN0cik7CiAgfQogIHJldHVybiAwOwp9CgpKU01vZHVsZURlZioKanNfbW9kdWxlX2ZpbmRfcmV2KEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBuYW1lKSB7CiAgc3RydWN0IGxpc3RfaGVhZCogZWw7CiAgc2l6ZV90IG5hbWVsZW4gPSBzdHJsZW4obmFtZSk7CiAgbGlzdF9mb3JfZWFjaF9wcmV2KGVsLCAmY3R4LT5sb2FkZWRfbW9kdWxlcykgewogICAgSlNNb2R1bGVEZWYqIG0gPSBsaXN0X2VudHJ5KGVsLCBKU01vZHVsZURlZiwgbGluayk7CiAgICBjaGFyICpuLCAqc3RyID0gbW9kdWxlX25hbWVzdHIoY3R4LCBtKTsKICAgIHNpemVfdCBsZW47CiAgICBuID0gYmFzZW5hbWUoc3RyKTsKICAgIGxlbiA9IHN0cl9yY2hyKG4sICcuJyk7CiAgICBpZighc3RyY21wKHN0ciwgbmFtZSkgfHwgIXN0cmNtcChuLCBuYW1lKSB8fCAobGVuID09IG5hbWVsZW4gJiYgIXN0cm5jbXAobiwgbmFtZSwgbGVuKSkpCiAgICAgIHJldHVybiBtOwogICAganNfZnJlZShjdHgsIHN0cik7CiAgfQogIHJldHVybiAwOwp9CgppbnQKanNfbW9kdWxlX2luZGV4b2YoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBkZWYpIHsKICBzdHJ1Y3QgbGlzdF9oZWFkKiBlbDsKICBpbnQgaSA9IDA7CiAgbGlzdF9mb3JfZWFjaChlbCwgJmN0eC0+bG9hZGVkX21vZHVsZXMpIHsKICAgIEpTTW9kdWxlRGVmKiBtID0gbGlzdF9lbnRyeShlbCwgSlNNb2R1bGVEZWYsIGxpbmspOwogICAgaWYobSA9PSBkZWYpCiAgICAgIHJldHVybiBpOwogICAgKytpOwogIH0KICByZXR1cm4gLTE7Cn0KLyoKVmVjdG9yCmpzX21vZHVsZV92ZWN0b3IoSlNDb250ZXh0KiBjdHgpIHsKICBWZWN0b3IgcmV0ID0gVkVDVE9SKGN0eCk7CiAgc3RydWN0IGxpc3RfaGVhZCogZWw7CiAgbGlzdF9mb3JfZWFjaChlbCwgJmN0eC0+bG9hZGVkX21vZHVsZXMpIHsKICAgIEpTTW9kdWxlRGVmKiBtID0gbGlzdF9lbnRyeShlbCwgSlNNb2R1bGVEZWYsIGxpbmspOwogICAgdmVjdG9yX3B1c2goJnJldCwgbSk7CiAgfQogIHJldHVybiByZXQ7Cn0KKi8KSlNNb2R1bGVEZWYqCmpzX21vZHVsZV9hdChKU0NvbnRleHQqIGN0eCwgaW50IGluZGV4KSB7CiAgc3RydWN0IGxpc3RfaGVhZCogZWw7CiAgaW50IGkgPSAwOwogIGlmKGluZGV4ID49IDApIHsKICAgIGxpc3RfZm9yX2VhY2goZWwsICZjdHgtPmxvYWRlZF9tb2R1bGVzKSB7CiAgICAgIEpTTW9kdWxlRGVmKiBtID0gbGlzdF9lbnRyeShlbCwgSlNNb2R1bGVEZWYsIGxpbmspOwogICAgICBpZihpbmRleCA9PSBpKQogICAgICAgIHJldHVybiBtOwogICAgICArK2k7CiAgICB9CiAgfSBlbHNlIHsKICAgIGluZGV4ID0gLShpbmRleCArIDEpOwogICAgbGlzdF9mb3JfZWFjaF9wcmV2KGVsLCAmY3R4LT5sb2FkZWRfbW9kdWxlcykgewogICAgICBKU01vZHVsZURlZiogbSA9IGxpc3RfZW50cnkoZWwsIEpTTW9kdWxlRGVmLCBsaW5rKTsKICAgICAgaWYoaW5kZXggPT0gaSkKICAgICAgICByZXR1cm4gbTsKICAgICAgKytpOwogICAgfQogIH0KICByZXR1cm4gMDsKfQoKQk9PTApqc19pc19hcnJheWJ1ZmZlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgQk9PTCByZXQgPSBGQUxTRTsKICBpZighSlNfSXNPYmplY3QodmFsdWUpKQogICAgcmV0dXJuIHJldDsKICBpZighcmV0KQogICAgcmV0IHw9IGpzX3ZhbHVlX2lzY2xhc3MoY3R4LCB2YWx1ZSwgSlNfQ0xBU1NfQVJSQVlfQlVGRkVSKTsKICAvKiBpZighcmV0KQogICAgcmV0IHw9IGpzX29iamVjdF9pcyhjdHgsIHZhbHVlLCAiW29iamVjdCBBcnJheUJ1ZmZlcl0iKTsgKi8KICAvKiAgaWYoIXJldCkgewogICAgICBKU09iamVjdCogb2JqOwogICAgICBpZigob2JqID0ganNfdmFsdWVfb2JqKHZhbHVlKSkgJiYgb2JqLT5jbGFzc19pZCkgewogICAgICAgIEpTVmFsdWUgY3RvciA9IGpzX2dsb2JhbF9nZXRfc3RyKGN0eCwgIkFycmF5QnVmZmVyIik7CiAgICAgICAgcmV0ID0gSlNfSXNJbnN0YW5jZU9mKGN0eCwgdmFsdWUsIGN0b3IpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGN0b3IpOwogICAgICB9CiAgICB9Ki8KICByZXR1cm4gcmV0Owp9CgpCT09MCmpzX2lzX3NoYXJlZGFycmF5YnVmZmVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICByZXR1cm4gSlNfSXNPYmplY3QodmFsdWUpICYmIChqc192YWx1ZV9pc2NsYXNzKGN0eCwgdmFsdWUsIEpTX0NMQVNTX1NIQVJFRF9BUlJBWV9CVUZGRVIpKTsKfQoKQk9PTApqc19pc19tYXAoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHJldHVybiBKU19Jc09iamVjdCh2YWx1ZSkgJiYgKGpzX3ZhbHVlX2lzY2xhc3MoY3R4LCB2YWx1ZSwgSlNfQ0xBU1NfTUFQKSk7Cn0KCkJPT0wKanNfaXNfc2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICByZXR1cm4gSlNfSXNPYmplY3QodmFsdWUpICYmIChqc192YWx1ZV9pc2NsYXNzKGN0eCwgdmFsdWUsIEpTX0NMQVNTX1NFVCkpOwp9CgpCT09MCmpzX2lzX2dlbmVyYXRvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgcmV0dXJuIEpTX0lzT2JqZWN0KHZhbHVlKSAmJiAoanNfdmFsdWVfaXNjbGFzcyhjdHgsIHZhbHVlLCBKU19DTEFTU19HRU5FUkFUT1IpKTsKfQoKQk9PTApqc19pc19yZWdleHAoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHJldHVybiBKU19Jc09iamVjdCh2YWx1ZSkgJiYgKGpzX3ZhbHVlX2lzY2xhc3MoY3R4LCB2YWx1ZSwgSlNfQ0xBU1NfUkVHRVhQKSk7Cn0KCkJPT0wKanNfaXNfcHJvbWlzZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgcmV0dXJuIEpTX0lzT2JqZWN0KHZhbHVlKSAmJiAoanNfdmFsdWVfaXNjbGFzcyhjdHgsIHZhbHVlLCBKU19DTEFTU19QUk9NSVNFKSB8fCBqc19vYmplY3RfaXMoY3R4LCB2YWx1ZSwgIltvYmplY3QgUHJvbWlzZV0iKSk7Cn0KCkJPT0wKanNfaXNfZGF0YXZpZXcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHJldHVybiBKU19Jc09iamVjdCh2YWx1ZSkgJiYgKGpzX3ZhbHVlX2lzY2xhc3MoY3R4LCB2YWx1ZSwgSlNfQ0xBU1NfREFUQVZJRVcpKTsKfQoKQk9PTApqc19pc19pdGVyYWJsZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIEpTQXRvbSBhdG9tOwogIEJPT0wgcmV0ID0gRkFMU0U7CiAgYXRvbSA9IGpzX3N5bWJvbF9zdGF0aWNfYXRvbShjdHgsICJpdGVyYXRvciIpOwogIGlmKEpTX0hhc1Byb3BlcnR5KGN0eCwgb2JqLCBhdG9tKSkKICAgIHJldCA9IFRSVUU7CgogIEpTX0ZyZWVBdG9tKGN0eCwgYXRvbSk7CiAgaWYoIXJldCkgewogICAgYXRvbSA9IGpzX3N5bWJvbF9zdGF0aWNfYXRvbShjdHgsICJhc3luY0l0ZXJhdG9yIik7CiAgICBpZihKU19IYXNQcm9wZXJ0eShjdHgsIG9iaiwgYXRvbSkpCiAgICAgIHJldCA9IFRSVUU7CgogICAgSlNfRnJlZUF0b20oY3R4LCBhdG9tKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKQk9PTApqc19pc19pdGVyYXRvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIGlmKEpTX0lzT2JqZWN0KG9iaikpIHsKICAgIEpTVmFsdWUgbmV4dCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAibmV4dCIpOwoKICAgIGlmKEpTX0lzRnVuY3Rpb24oY3R4LCBuZXh0KSkKICAgICAgcmV0dXJuIFRSVUU7CiAgfQogIHJldHVybiBGQUxTRTsKfQoKSlNWYWx1ZQpqc190eXBlZGFycmF5X3Byb3RvdHlwZShKU0NvbnRleHQqIGN0eCkgewogIEpTVmFsdWUgdThhcnJfcHJvdG8gPSBqc19nbG9iYWxfcHJvdG90eXBlKGN0eCwgIlVpbnQ4QXJyYXkiKTsKICBKU1ZhbHVlIHR5cGVkYXJyX3Byb3RvID0gSlNfR2V0UHJvdG90eXBlKGN0eCwgdThhcnJfcHJvdG8pOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHU4YXJyX3Byb3RvKTsKICByZXR1cm4gdHlwZWRhcnJfcHJvdG87Cn0KCkpTVmFsdWUKanNfdHlwZWRhcnJheV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCkgewogIEpTVmFsdWUgdHlwZWRhcnJfcHJvdG8gPSBqc190eXBlZGFycmF5X3Byb3RvdHlwZShjdHgpOwogIEpTVmFsdWUgdHlwZWRhcnJfY3RvciA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgdHlwZWRhcnJfcHJvdG8sICJjb25zdHJ1Y3RvciIpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHR5cGVkYXJyX3Byb3RvKTsKICByZXR1cm4gdHlwZWRhcnJfY3RvcjsKfQoKSlNWYWx1ZQpqc19pbnZva2UoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX29iaiwgY29uc3QgY2hhciogbWV0aG9kLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTQXRvbSBhdG9tOwogIEpTVmFsdWUgcmV0OwogIGF0b20gPSBKU19OZXdBdG9tKGN0eCwgbWV0aG9kKTsKICByZXQgPSBKU19JbnZva2UoY3R4LCB0aGlzX29iaiwgYXRvbSwgYXJnYywgYXJndik7CiAgSlNfRnJlZUF0b20oY3R4LCBhdG9tKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX3N5bWJvbF9vcGVyYXRvcnNldF92YWx1ZShKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBqc19zeW1ib2xfc3RhdGljX3ZhbHVlKGN0eCwgIm9wZXJhdG9yU2V0Iik7Cn0KCkpTQXRvbQpqc19zeW1ib2xfb3BlcmF0b3JzZXRfYXRvbShKU0NvbnRleHQqIGN0eCkgewogIEpTVmFsdWUgb3BlcmF0b3Jfc2V0ID0ganNfc3ltYm9sX29wZXJhdG9yc2V0X3ZhbHVlKGN0eCk7CiAgSlNBdG9tIGF0b20gPSBKU19WYWx1ZVRvQXRvbShjdHgsIG9wZXJhdG9yX3NldCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb3BlcmF0b3Jfc2V0KTsKICByZXR1cm4gYXRvbTsKfQoKSlNWYWx1ZQpqc19vcGVyYXRvcnNfY3JlYXRlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlKiB0aGlzX29iaikgewogIEpTVmFsdWUgb3BlcmF0b3JzID0ganNfZ2xvYmFsX2dldF9zdHIoY3R4LCAiT3BlcmF0b3JzIik7CiAgSlNWYWx1ZSBjcmVhdGVfZnVuID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcGVyYXRvcnMsICJjcmVhdGUiKTsKICBpZih0aGlzX29iaikKICAgICp0aGlzX29iaiA9IG9wZXJhdG9yczsKICBlbHNlCiAgICBKU19GcmVlVmFsdWUoY3R4LCBvcGVyYXRvcnMpOwogIHJldHVybiBjcmVhdGVfZnVuOwp9CgpKU1ZhbHVlCmpzX251bWJlcl9uZXcoSlNDb250ZXh0KiBjdHgsIGludDMyX3QgbikgewogIGlmKG4gPT0gSU5UMzJfTUFYKQogICAgcmV0dXJuIEpTX05ld0Zsb2F0NjQoY3R4LCBJTkZJTklUWSk7CgogIHJldHVybiBKU19OZXdJbnQzMihjdHgsIG4pOwp9CgpKU1ZhbHVlCmpzX2RhdGVfbmV3KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgYXJnKSB7CiAgSlNWYWx1ZSBjdG9yID0ganNfZ2xvYmFsX2dldF9zdHIoY3R4LCAiRGF0ZSIpOwogIEpTVmFsdWUgcmV0ID0gSlNfQ2FsbENvbnN0cnVjdG9yKGN0eCwgY3RvciwgMSwgJmFyZyk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgY3Rvcik7CiAgcmV0dXJuIHJldDsKfQoKSlNWYWx1ZQpqc19kYXRlX2Zyb21fbXMoSlNDb250ZXh0KiBjdHgsIGludDY0X3QgbXMpIHsKICBKU1ZhbHVlIGFyZyA9IEpTX05ld0ludDY0KGN0eCwgbXMpOwogIEpTVmFsdWUgcmV0ID0ganNfZGF0ZV9uZXcoY3R4LCBhcmcpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGFyZyk7CiAgcmV0dXJuIHJldDsKfQoKSlNWYWx1ZQpqc19kYXRlX2Zyb21fdGltZV9ucyhKU0NvbnRleHQqIGN0eCwgdGltZV90IHQsIGxvbmcgbnMpIHsKICByZXR1cm4ganNfZGF0ZV9mcm9tX21zKGN0eCwgdCAqIDEwMDB1bGwgKyBucyAvIDEwMDAwMDB1bGwpOwp9CgpKU1ZhbHVlCmpzX2RhdGVfZnJvbV90aW1lc3BlYyhKU0NvbnRleHQqIGN0eCwgY29uc3Qgc3RydWN0IHRpbWVzcGVjIHRzKSB7CiAgcmV0dXJuIGpzX2RhdGVfZnJvbV90aW1lX25zKGN0eCwgdHMudHZfc2VjLCB0cy50dl9uc2VjKTsKfQoKaW50NjRfdApqc19kYXRlX2dldHRpbWUoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBhcmcpIHsKICBpbnQ2NF90IHIgPSAtMTsKICBKU0F0b20gbWV0aG9kID0gSlNfTmV3QXRvbShjdHgsICJnZXRUaW1lIik7CiAgSlNWYWx1ZSB2YWx1ZSA9IEpTX0ludm9rZShjdHgsIGFyZywgbWV0aG9kLCAwLCAwKTsKICBKU19GcmVlQXRvbShjdHgsIG1ldGhvZCk7CiAgaWYoSlNfSXNOdW1iZXIodmFsdWUpKQogICAgSlNfVG9JbnQ2NChjdHgsICZyLCB2YWx1ZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIHJldHVybiByOwp9CgppbnQ2NF90CmpzX2RhdGVfdGltZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSBhcmcpIHsKICBpbnQ2NF90IHIgPSAtMTsKICBpZihKU19Jc09iamVjdChhcmcpKQogICAgciA9IGpzX2RhdGVfZ2V0dGltZShjdHgsIGFyZyk7CiAgZWxzZSBpZighanNfaXNfbnVsbGlzaChjdHgsIGFyZykpCiAgICBKU19Ub0ludDY0KGN0eCwgJnIsIGFyZyk7CiAgcmV0dXJuIHI7Cn0KCnN0cnVjdCB0aW1lc3BlYwpqc19kYXRlX3RpbWVzcGVjKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIGFyZykgewogIHN0cnVjdCB0aW1lc3BlYyB0czsKICBpbnQ2NF90IHIgPSBqc19kYXRlX3RpbWUoY3R4LCBhcmcpOwogIHRzLnR2X3NlYyA9IHIgLyAxMDAwdWxsOwogIHRzLnR2X25zZWMgPSAociAtIHRzLnR2X3NlYykgKiAxMDAwMDAwdWxsOwogIHJldHVybiB0czsKfQoKdm9pZApqc19hcnJheWJ1ZmZlcl9mcmVldmFsdWUoSlNSdW50aW1lKiBydCwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpIHsKICBKU1ZhbHVlKiB2YWxwdHIgPSBvcGFxdWU7CiAgSlNfRnJlZVZhbHVlUlQocnQsICp2YWxwdHIpOwogIGpzX2ZyZWVfcnQocnQsIG9wYXF1ZSk7Cn0KCkpTVmFsdWUKanNfYXJyYXlidWZmZXJfZnJvbXZhbHVlKEpTQ29udGV4dCogY3R4LCB2b2lkKiB4LCBzaXplX3QgbiwgSlNWYWx1ZUNvbnN0IHZhbCkgewogIEpTVmFsdWUqIHZhbHB0cjsKICBpZighKHZhbHB0ciA9IGpzX21hbGxvYyhjdHgsIHNpemVvZihKU1ZhbHVlKSkpKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKICAqdmFscHRyID0gSlNfRHVwVmFsdWUoY3R4LCB2YWwpOwogIHJldHVybiBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIHgsIG4sIGpzX2FycmF5YnVmZmVyX2ZyZWV2YWx1ZSwgdmFscHRyLCBGQUxTRSk7Cn0KCmludDY0X3QKanNfYXJyYXlidWZmZXJfYnl0ZWxlbmd0aChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgaW50NjRfdCBsZW4gPSAtMTsKICBpZihqc19pc19hcnJheWJ1ZmZlcihjdHgsIHZhbHVlKSkgewogICAgSlNWYWx1ZSBsZW5ndGggPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIHZhbHVlLCAiYnl0ZUxlbmd0aCIpOwogICAgSlNfVG9JbnQ2NChjdHgsICZsZW4sIGxlbmd0aCk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBsZW5ndGgpOwogIH0KICByZXR1cm4gbGVuOwp9CgpKU1ZhbHVlCmpzX2V2YWxfbW9kdWxlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCBCT09MIGxvYWRfb25seSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGludCB0YWcgPSBKU19WQUxVRV9HRVRfVEFHKG9iaik7CiAgaWYodGFnID09IEpTX1RBR19NT0RVTEUpIHsKICAgIGlmKCFsb2FkX29ubHkgJiYgSlNfUmVzb2x2ZU1vZHVsZShjdHgsIG9iaikgPCAwKSB7CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgICAgIHJldHVybiBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiRmFpbGVkIHJlc29sdmluZyBtb2R1bGUiKTsKICAgIH0KICAgIGpzX21vZHVsZV9zZXRfaW1wb3J0X21ldGEoY3R4LCBvYmosIEZBTFNFLCAhbG9hZF9vbmx5KTsKICAgIHJldHVybiBsb2FkX29ubHkgPyBKU19EdXBWYWx1ZShjdHgsIG9iaikgOiBKU19FdmFsRnVuY3Rpb24oY3R4LCBvYmopOwogIH0KICByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImludmFsaWQgdGFnICVpIiwgdGFnKTsKfQoKSlNWYWx1ZQpqc19ldmFsX2JpbmFyeShKU0NvbnRleHQqIGN0eCwgY29uc3QgdWludDhfdCogYnVmLCBzaXplX3QgYnVmX2xlbiwgQk9PTCBsb2FkX29ubHkpIHsKICBKU1ZhbHVlIG9iaiA9IEpTX1JlYWRPYmplY3QoY3R4LCBidWYsIGJ1Zl9sZW4sIEpTX1JFQURfT0JKX0JZVEVDT0RFKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgcmV0dXJuIG9iajsKICAvLyBwcmludGYoImpzX2V2YWxfYmluYXJ5IG9iaj0lc1xuIiwganNfdmFsdWVfdHlwZXN0cihjdHgsIG9iaikpOwogIGlmKCFsb2FkX29ubHkpIHsKICAgIEpTVmFsdWUgdG1wID0ganNfZXZhbF9tb2R1bGUoY3R4LCBvYmosIGxvYWRfb25seSk7CiAgICBpbnQgdGFnID0gSlNfVkFMVUVfR0VUX1RBRyh0bXApOwogICAgLy8gcHJpbnRmKCJqc19ldmFsX2JpbmFyeSB0bXA9JXNcbiIsIGpzX3ZhbHVlX3R5cGVzdHIoY3R4LCB0bXApKTsKICAgIGlmKCFKU19Jc0V4Y2VwdGlvbih0bXApICYmICFKU19Jc1VuZGVmaW5lZCh0bXApKQogICAgICBpZih0YWcgPj0gSlNfVEFHX0ZJUlNUICYmIHRhZyA8PSBKU19UQUdfRkxPQVQ2NCkKICAgICAgICByZXR1cm4gdG1wOwogIH0KICByZXR1cm4gb2JqOwp9CgpKU1ZhbHVlCmpzX2V2YWxfYnVmKEpTQ29udGV4dCogY3R4LCBjb25zdCB2b2lkKiBidWYsIGludCBidWZfbGVuLCBjb25zdCBjaGFyKiBmaWxlbmFtZSwgaW50IGV2YWxfZmxhZ3MpIHsKICBKU1ZhbHVlIHZhbDsKCiAgaWYoKGV2YWxfZmxhZ3MgJiBKU19FVkFMX1RZUEVfTUFTSykgPT0gSlNfRVZBTF9UWVBFX01PRFVMRSkgewogICAgLyogZm9yIHRoZSBtb2R1bGVzLCB3ZSBjb21waWxlIHRoZW4gcnVuIHRvIGJlIGFibGUgdG8gc2V0IGltcG9ydC5tZXRhICovCiAgICB2YWwgPSBKU19FdmFsKGN0eCwgYnVmLCBidWZfbGVuLCBmaWxlbmFtZSA/IGZpbGVuYW1lIDogIjxpbnB1dD4iLCBldmFsX2ZsYWdzIHwgSlNfRVZBTF9GTEFHX0NPTVBJTEVfT05MWSk7CiAgICBpZighSlNfSXNFeGNlcHRpb24odmFsKSkgewogICAgICBqc19tb2R1bGVfc2V0X2ltcG9ydF9tZXRhKGN0eCwgdmFsLCAhIWZpbGVuYW1lLCBUUlVFKTsKICAgICAgLyp2YWwgPSAqLyBKU19FdmFsRnVuY3Rpb24oY3R4LCB2YWwpOwogICAgfQogIH0gZWxzZSB7CiAgICB2YWwgPSBKU19FdmFsKGN0eCwgYnVmLCBidWZfbGVuLCBmaWxlbmFtZSwgZXZhbF9mbGFncyk7CiAgfQogIGlmKEpTX0lzRXhjZXB0aW9uKHZhbCkpCiAgICBqc19lcnJvcl9wcmludChjdHgsIEpTX0dldEV4Y2VwdGlvbihjdHgpKTsKICByZXR1cm4gdmFsOwp9CgppbnQKanNfZXZhbF9zdHIoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIHN0ciwgY29uc3QgY2hhciogZmlsZSwgaW50IGZsYWdzKSB7CiAgSlNWYWx1ZSB2YWwgPSBqc19ldmFsX2J1ZihjdHgsIHN0ciwgc3RybGVuKHN0ciksIGZpbGUsIGZsYWdzKTsKICBpbnQzMl90IHJldCA9IC0xOwogIGlmKEpTX0lzTnVtYmVyKHZhbCkpCiAgICBKU19Ub0ludDMyKGN0eCwgJnJldCwgdmFsKTsKICByZXR1cm4gcmV0Owp9Cgp0aHJlYWRfbG9jYWwgdWludDY0X3QganNfcGVuZGluZ19zaWduYWxzID0gMDsKCmludDY0X3QKanNfdGltZV9tcyh2b2lkKSB7CiAgc3RydWN0IHRpbWVzcGVjIHRzOwogIGNsb2NrX2dldHRpbWUoQ0xPQ0tfTU9OT1RPTklDLCAmdHMpOwogIHJldHVybiAodWludDY0X3QpdHMudHZfc2VjICogMTAwMCArICh0cy50dl9uc2VjIC8gMTAwMDAwMCk7Cn0KCmludApqc19pbnRlcnJ1cHRfaGFuZGxlcihKU1J1bnRpbWUqIHJ0LCB2b2lkKiBvcGFxdWUpIHsKICByZXR1cm4gKGpzX3BlbmRpbmdfc2lnbmFscyA+PiBTSUdJTlQpICYgMTsKfQoKdm9pZApqc190aW1lcl91bmxpbmsoSlNSdW50aW1lKiBydCwgSlNPU1RpbWVyKiB0aCkgewogIGlmKHRoLT5saW5rLnByZXYpIHsKICAgIGxpc3RfZGVsKCZ0aC0+bGluayk7CiAgICB0aC0+bGluay5wcmV2ID0gdGgtPmxpbmsubmV4dCA9IDA7CiAgfQp9Cgp2b2lkCmpzX3RpbWVyX2ZyZWUoSlNSdW50aW1lKiBydCwgSlNPU1RpbWVyKiB0aCkgewogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCB0aC0+ZnVuYyk7CiAganNfZnJlZV9ydChydCwgdGgpOwp9Cgp2b2lkCmpzX2NhbGxfaGFuZGxlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGZ1bmMpIHsKICBKU1ZhbHVlIHJldCwgZnVuYzE7CiAgZnVuYzEgPSBKU19EdXBWYWx1ZShjdHgsIGZ1bmMpOwogIHJldCA9IEpTX0NhbGwoY3R4LCBmdW5jMSwgSlNfVU5ERUZJTkVELCAwLCAwKTsKICBKU19GcmVlVmFsdWUoY3R4LCBmdW5jMSk7CiAgaWYoSlNfSXNFeGNlcHRpb24ocmV0KSkKICAgIGpzX3N0ZF9kdW1wX2Vycm9yKGN0eCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcmV0KTsKfQp2b2lkKgpqc19zYWJfYWxsb2Modm9pZCogb3BhcXVlLCBzaXplX3Qgc2l6ZSkgewogIEpTU0FCSGVhZGVyKiBzYWI7CiAgc2FiID0gbWFsbG9jKHNpemVvZihKU1NBQkhlYWRlcikgKyBzaXplKTsKICBpZighc2FiKQogICAgcmV0dXJuIDA7CiAgc2FiLT5yZWZfY291bnQgPSAxOwogIHJldHVybiBzYWItPmJ1ZjsKfQp2b2lkCmpzX3NhYl9mcmVlKHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgSlNTQUJIZWFkZXIqIHNhYjsKICBpbnQgcmVmX2NvdW50OwogIHNhYiA9IChKU1NBQkhlYWRlciopKCh1aW50OF90KilwdHIgLSBzaXplb2YoSlNTQUJIZWFkZXIpKTsKICByZWZfY291bnQgPSBhdG9taWNfYWRkX2ludCgmc2FiLT5yZWZfY291bnQsIC0xKTsKICBhc3NlcnQocmVmX2NvdW50ID49IDApOwogIGlmKHJlZl9jb3VudCA9PSAwKSB7CiAgICBmcmVlKHNhYik7CiAgfQp9Cgp2b2lkCmpzX3NhYl9kdXAodm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpIHsKICBKU1NBQkhlYWRlciogc2FiOwogIHNhYiA9IChKU1NBQkhlYWRlciopKCh1aW50OF90KilwdHIgLSBzaXplb2YoSlNTQUJIZWFkZXIpKTsKICBhdG9taWNfYWRkX2ludCgmc2FiLT5yZWZfY291bnQsIDEpOwp9Cgp2b2lkCmpzX2Vycm9yX2R1bXAoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBlcnJvciwgRHluQnVmKiBkYikgewogIGNvbnN0IGNoYXIgKnN0ciwgKnN0YWNrID0gMDsKICBpZihKU19Jc09iamVjdChlcnJvcikpIHsKICAgIEpTVmFsdWUgc3QgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGVycm9yLCAic3RhY2siKTsKICAgIGlmKCFKU19Jc1VuZGVmaW5lZChzdCkpCiAgICAgIHN0YWNrID0gSlNfVG9DU3RyaW5nKGN0eCwgc3QpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgc3QpOwogIH0KICBpZigoc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgZXJyb3IpKSkgewogICAgY29uc3QgY2hhciogdHlwZSA9IEpTX0lzT2JqZWN0KGVycm9yKSA/IGpzX29iamVjdF9jbGFzc25hbWUoY3R4LCBlcnJvcikgOiBqc192YWx1ZV90eXBlc3RyKGN0eCwgZXJyb3IpOwoKICAgIGlmKCFzdHJfc3RhcnQoc3RyLCB0eXBlKSkgewogICAgICBkYnVmX3B1dHN0cihkYiwgdHlwZSk7CiAgICAgIGRidWZfcHV0c3RyKGRiLCAiOiAiKTsKICAgIH0KICAgIGRidWZfcHV0c3RyKGRiLCBzdHIpOwogICAgZGJ1Zl9wdXRjKGRiLCAnXG4nKTsKICAgIGlmKHN0YWNrKSB7CiAgICAgIGRidWZfcHV0c3RyKGRiLCAiU1RBQ0tcbiIpOwogICAgICBkYnVmX3B1dHN0cihkYiwgc3RhY2spOwogICAgICBkYnVmX3B1dGMoZGIsICdcbicpOwogICAgfQogICAgZGJ1Zl8wKGRiKTsKICB9CiAgaWYoc3RhY2spCiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0YWNrKTsKICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7Cn0KCmNoYXIqCmpzX2Vycm9yX3Rvc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgZXJyb3IpIHsKICBEeW5CdWYgZGI7CiAganNfZGJ1Zl9pbml0KGN0eCwgJmRiKTsKICBqc19lcnJvcl9kdW1wKGN0eCwgZXJyb3IsICZkYik7CiAgcmV0dXJuIChjaGFyKilkYi5idWY7Cn0KCnZvaWQKanNfZXJyb3JfcHJpbnQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBlcnJvcikgewogIGNvbnN0IGNoYXIgKnN0ciA9IDAsICpzdGFjayA9IDA7CgogIGlmKEpTX0lzT2JqZWN0KGVycm9yKSkgewogICAgSlNWYWx1ZSBzdCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgZXJyb3IsICJzdGFjayIpOwoKICAgIGlmKCFKU19Jc1VuZGVmaW5lZChzdCkpCiAgICAgIHN0YWNrID0gSlNfVG9DU3RyaW5nKGN0eCwgc3QpOwoKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHN0KTsKICB9CgogIGlmKCFKU19Jc051bGwoZXJyb3IpICYmIChzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCBlcnJvcikpKSB7CiAgICBjb25zdCBjaGFyKiB0eXBlID0gSlNfSXNPYmplY3QoZXJyb3IpID8ganNfb2JqZWN0X2NsYXNzbmFtZShjdHgsIGVycm9yKSA6IGpzX3ZhbHVlX3R5cGVzdHIoY3R4LCBlcnJvcik7CiAgICBjb25zdCBjaGFyKiBleGNlcHRpb24gPSBzdHI7CiAgICBzaXplX3QgdHlwZWxlbiA9IHN0cmxlbih0eXBlKTsKCiAgICBpZighc3RybmNtcChleGNlcHRpb24sIHR5cGUsIHR5cGVsZW4pICYmIGV4Y2VwdGlvblt0eXBlbGVuXSA9PSAnOicpIHsKICAgICAgZXhjZXB0aW9uICs9IHR5cGVsZW4gKyAyOwogICAgfQogICAgZnByaW50ZihzdGRlcnIsICIlczogJXNcbiIsIHR5cGUsIGV4Y2VwdGlvbik7CiAgICBpZihzdGFjaykKICAgICAgZnByaW50ZihzdGRlcnIsICJTVEFDSz1cbiVzXG4iLCBzdGFjayk7CiAgICBmZmx1c2goc3RkZXJyKTsKICB9CiAgaWYoc3RhY2spCiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0YWNrKTsKICBpZihzdHIpCiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7Cn0KCkpTVmFsdWUKanNfZXJyb3Jfc3RhY2soSlNDb250ZXh0KiBjdHgpIHsKICBKU1ZhbHVlIGVycm9yID0ganNfb2JqZWN0X2Vycm9yKGN0eCwgIiIpOwogIEpTVmFsdWUgc3RhY2sgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGVycm9yLCAic3RhY2siKTsKICBKU19GcmVlVmFsdWUoY3R4LCBlcnJvcik7CiAgcmV0dXJuIHN0YWNrOwp9CgpKU1ZhbHVlCmpzX2lvX3JlYWRoYW5kbGVyX2ZuKEpTQ29udGV4dCogY3R4LCBCT09MIHdyaXRlKSB7CiAgSlNNb2R1bGVEZWYqIG9zOwogIGNvbnN0IGNoYXIqIGhhbmRsZXJzWzJdID0geyJzZXRSZWFkSGFuZGxlciIsICJzZXRXcml0ZUhhbmRsZXIifTsKICBKU0F0b20gZnVuY19uYW1lOwogIEpTVmFsdWUgc2V0X2hhbmRsZXI7CgogIGlmKCEob3MgPSBqc19tb2R1bGVfZmluZChjdHgsICJvcyIpKSkKICAgIHJldHVybiBKU19UaHJvd1JlZmVyZW5jZUVycm9yKGN0eCwgIidvcycgbW9kdWxlIHJlcXVpcmVkIik7CgogIGZ1bmNfbmFtZSA9IEpTX05ld0F0b20oY3R4LCBoYW5kbGVyc1t3cml0ZV0pOwogIHNldF9oYW5kbGVyID0gbW9kdWxlX2V4cG9ydHNfZmluZChjdHgsIG9zLCBmdW5jX25hbWUpOwogIEpTX0ZyZWVBdG9tKGN0eCwgZnVuY19uYW1lKTsKCiAgaWYoIUpTX0lzRnVuY3Rpb24oY3R4LCBzZXRfaGFuZGxlcikpIHsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHNldF9oYW5kbGVyKTsKICAgIHJldHVybiBKU19UaHJvd1JlZmVyZW5jZUVycm9yKGN0eCwgIm5vIG9zLiVzIGZ1bmN0aW9uIiwgaGFuZGxlcnNbd3JpdGVdKTsKICB9CgogIHJldHVybiBzZXRfaGFuZGxlcjsKfQoKc3RhdGljIHRocmVhZF9sb2NhbCBKU0NGdW5jdGlvbiogcmVhZGhhbmRsZXJfY2Z1bmM7CgpKU0NGdW5jdGlvbioKanNfaW9fcmVhZGhhbmRsZXJfY2Z1bmMoSlNDb250ZXh0KiBjdHgsIEJPT0wgd3JpdGUpIHsKICBpZighcmVhZGhhbmRsZXJfY2Z1bmMpIHsKICAgIEpTVmFsdWUgc2V0X2hhbmRsZXI7CiAgICBKU09iamVjdCogb2JqOwogICAgc2V0X2hhbmRsZXIgPSBqc19pb19yZWFkaGFuZGxlcl9mbihjdHgsIHdyaXRlKTsKICAgIGlmKEpTX0lzRXhjZXB0aW9uKHNldF9oYW5kbGVyKSkKICAgICAgcmV0dXJuIDA7CiAgICByZWFkaGFuZGxlcl9jZnVuYyA9IGpzX2Z1bmN0aW9uX2NmdW5jKGN0eCwgc2V0X2hhbmRsZXIpOwogIH0KICByZXR1cm4gcmVhZGhhbmRsZXJfY2Z1bmM7Cn0KCkpTVmFsdWUKanNfcHJvbWlzZV9yZXNvbHZlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvbWlzZSkgewogIEpTVmFsdWUgcmV0LCBjdG9yID0ganNfZ2xvYmFsX2dldF9zdHIoY3R4LCAiUHJvbWlzZSIpOwogIHJldCA9IGpzX2ludm9rZShjdHgsIGN0b3IsICJyZXNvbHZlIiwgMSwgJnByb21pc2UpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGN0b3IpOwogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKanNfcHJvbWlzZV90aGVuKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvbWlzZSwgSlNWYWx1ZUNvbnN0IGZ1bmMpIHsKICByZXR1cm4ganNfaW52b2tlKGN0eCwgcHJvbWlzZSwgInRoZW4iLCAxLCAmZnVuYyk7Cn0KCkpTVmFsdWUKanNfcHJvbWlzZV9jYXRjaChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHByb21pc2UsIEpTVmFsdWVDb25zdCBmdW5jKSB7CiAgcmV0dXJuIGpzX2ludm9rZShjdHgsIHByb21pc2UsICJjYXRjaCIsIDEsICZmdW5jKTsKfQoKSlNWYWx1ZQpqc19wcm9taXNlX3dyYXAoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIEpTVmFsdWUgcmV0LCBwcm9taXNlLCByZXNvbHZpbmdfZnVuY3NbMl07CiAgcHJvbWlzZSA9IEpTX05ld1Byb21pc2VDYXBhYmlsaXR5KGN0eCwgcmVzb2x2aW5nX2Z1bmNzKTsKICByZXQgPSBKU19DYWxsKGN0eCwgcmVzb2x2aW5nX2Z1bmNzWzBdLCBKU19VTkRFRklORUQsIDEsICZ2YWx1ZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcmV0KTsKCiAgSlNfRnJlZVZhbHVlKGN0eCwgcmVzb2x2aW5nX2Z1bmNzWzBdKTsKICBKU19GcmVlVmFsdWUoY3R4LCByZXNvbHZpbmdfZnVuY3NbMV0pOwogIHJldHVybiBwcm9taXNlOwp9CgpKU1ZhbHVlCmpzX3Byb21pc2VfYWRvcHQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIGlmKGpzX2lzX3Byb21pc2UoY3R4LCB2YWx1ZSkpCiAgICByZXR1cm4gSlNfRHVwVmFsdWUoY3R4LCB2YWx1ZSk7CiAgcmV0dXJuIGpzX3Byb21pc2Vfd3JhcChjdHgsIHZhbHVlKTsKfQoKSlNWYWx1ZQpqc190b19zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX29iaikgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIEpTQXRvbSBrZXkgPSBKU19OZXdBdG9tKGN0eCwgInRvU3RyaW5nIik7CiAgaWYoSlNfSGFzUHJvcGVydHkoY3R4LCB0aGlzX29iaiwga2V5KSkKICAgIHJldCA9IEpTX0ludm9rZShjdHgsIHRoaXNfb2JqLCBrZXksIDAsIDApOwogIGVsc2UKICAgIHJldCA9IEpTX1Rocm93VHlwZUVycm9yKGN0eCwgInZhbHVlIGhhcyBubyAudG9TdHJpbmcoKSBtZXRob2QiKTsKICBKU19GcmVlQXRvbShjdHgsIGtleSk7CiAgcmV0dXJuIHJldDsKfQpKU1ZhbHVlCmpzX3RvX3NvdXJjZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfb2JqKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgSlNBdG9tIGtleSA9IEpTX05ld0F0b20oY3R4LCAidG9Tb3VyY2UiKTsKICBpZihKU19IYXNQcm9wZXJ0eShjdHgsIHRoaXNfb2JqLCBrZXkpKQogICAgcmV0ID0gSlNfSW52b2tlKGN0eCwgdGhpc19vYmosIGtleSwgMCwgMCk7CiAgZWxzZQogICAgcmV0ID0gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAidmFsdWUgaGFzIG5vIC50b1NvdXJjZSgpIG1ldGhvZCIpOwogIEpTX0ZyZWVBdG9tKGN0eCwga2V5KTsKICByZXR1cm4gcmV0Owp9Cgp2b2lkCmFyZ3VtZW50c19kdW1wKEFyZ3VtZW50cyBjb25zdCogYXJncywgLypKU0NvbnRleHQqIGN0eCwqLyBEeW5CdWYqIGRidWYpIHsKICBpbnQgbiA9IGFyZ3MtPmMsIGk7CgogIGlmKG4gPiAxKQogICAgZGJ1Zl9wdXRzdHIoZGJ1ZiwgIigiKTsKICBmb3IoaSA9IDA7IGkgPCBuOyBpKyspIHsKICAgIGNvbnN0IGNoYXIqIGFyZyA9IGFyZ3MtPnZbaV07CiAgICBpZihpID4gMCkKICAgICAgZGJ1Zl9wdXRzdHIoZGJ1ZiwgIiwgIik7CiAgICAgICBkYnVmX3B1dHN0cihkYnVmLCBhcmcgPyBhcmcgOiAiTlVMTCIpOwogIH0KICBpZihuID4gMSkKICAgIGRidWZfcHV0c3RyKGRidWYsICIpIik7Cn0KCkJPT0wKYXJndW1lbnRzX2FsbG9jKEFyZ3VtZW50cyogYXJncywgSlNDb250ZXh0KiBjdHgsIGludCBuKSB7CiAgaW50IGksIGosIGM7CiAgaWYoYXJncy0+YSkgewogICAgaWYoIShhcmdzLT52ID0ganNfcmVhbGxvYyhjdHgsIGFyZ3MtPnYsIHNpemVvZihjaGFyKikgKiAobiArIDEpKSkpCiAgICAgIHJldHVybiBGQUxTRTsKICAgIGZvcihpID0gYXJncy0+YzsgaSA8IGFyZ3MtPmE7IGkrKykgYXJncy0+dltpXSA9IDA7CiAgICBhcmdzLT5hID0gbjsKICB9IGVsc2UgewogICAgY2hhcioqIHY7CiAgICBpZighKHYgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKGNoYXIqKSAqIChuICsgMSkpKSkKICAgICAgcmV0dXJuIEZBTFNFOwogICAgYyA9IE1JTl9OVU0oYXJncy0+Yywgbik7CiAgICBmb3IoaSA9IDA7IGkgPCBjOyBpKyspIHZbaV0gPSBqc19zdHJkdXAoY3R4LCBhcmdzLT52W2ldKTsKICAgIGZvcihqID0gYzsgaiA8IGFyZ3MtPmM7IGorKykganNfZnJlZShjdHgsIGFyZ3MtPnZbal0pOwogICAgZm9yKGogPSBpOyBqIDw9IG47IGorKykgdltqXSA9IDA7CiAgICBhcmdzLT52ID0gdjsKICAgIGFyZ3MtPmMgPSBjOwogICAgYXJncy0+YSA9IG47CiAgfQogIHJldHVybiBUUlVFOwp9Cgpjb25zdCBjaGFyKgphcmd1bWVudHNfcHVzaChBcmd1bWVudHMqIGFyZ3MsIEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBhcmcpIHsKICBpbnQgcjsKICBpZihhcmdzLT5jICsgMSA+PSBhcmdzLT5hKQogICAgaWYoIWFyZ3VtZW50c19hbGxvYyhhcmdzLCBjdHgsIGFyZ3MtPmEgKyAxKSkKICAgICAgcmV0dXJuIC0xOwogIHIgPSBhcmdzLT5jOwogIGFyZ3MtPnZbcl0gPSBqc19zdHJkdXAoY3R4LCBhcmcpOwogIGFyZ3MtPnZbciArIDFdID0gMDsKICBhcmdzLT5jKys7CiAgcmV0dXJuIGFyZ3MtPnZbcl07Cn0KCkJPT0wKanNfYXJndW1lbnRzX2FsbG9jKEpTQXJndW1lbnRzKiBhcmdzLCBKU0NvbnRleHQqIGN0eCwgaW50IG4pIHsKICBpbnQgaTsKICBpZihhcmdzLT5hKSB7CiAgICBpZighKGFyZ3MtPnYgPSBqc19yZWFsbG9jKGN0eCwgYXJncy0+diwgc2l6ZW9mKEpTVmFsdWVDb25zdCkgKiAobiArIDEpKSkpCiAgICAgIHJldHVybiBGQUxTRTsKCiAgICBmb3IoaSA9IGFyZ3MtPmM7IGkgPCBhcmdzLT5hOyBpKyspIGFyZ3MtPnZbaV0gPSBKU19VTkRFRklORUQ7CiAgfSBlbHNlIHsKICAgIEpTVmFsdWVDb25zdCogdjsKCiAgICBpZighKHYgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKEpTVmFsdWVDb25zdCkgKiAobiArIDEpKSkpCiAgICAgIHJldHVybiBGQUxTRTsKICAgIG1lbWNweSh2LCBhcmdzLT52LCBzaXplb2YoSlNWYWx1ZUNvbnN0KSAqIChhcmdzLT5jICsgMSkpOwogICAgYXJncy0+diA9IHY7CiAgICBhcmdzLT5hID0gbjsKICB9CiAgcmV0dXJuIFRSVUU7Cn0KCnZvaWQKanNfYXJndW1lbnRzX2R1bXAoSlNBcmd1bWVudHMgY29uc3QqIGFyZ3MsIEpTQ29udGV4dCogY3R4LCBEeW5CdWYqIGRidWYpIHsKICBpbnQgbiA9IGFyZ3MtPmMsIGk7CgogIGlmKG4gPiAxKQogICAgZGJ1Zl9wdXRzdHIoZGJ1ZiwgIigiKTsKCiAgZm9yKGkgPSAwOyBpIDwgbjsgaSsrKSB7CiAgICBKU1ZhbHVlIGFyZyA9IGFyZ3MtPnZbaV07CiAgICBpZihKU19Jc0V4Y2VwdGlvbihhcmcpKQogICAgICBicmVhazsKCiAgICBqc192YWx1ZV9kdW1wKGN0eCwgYXJnLCBkYnVmKTsKICAgIGlmKGkgPiAwKQogICAgICBkYnVmX3B1dHN0cihkYnVmLCAiLCAiKTsKICB9CgogIGlmKG4gPiAxKQogICAgZGJ1Zl9wdXRzdHIoZGJ1ZiwgIikiKTsKfQoKLyoqCiAqIEB9CiAqLwoAAAAAAAAAAND6AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAS/MAAAAAAABL8wAAAAAAAAAAAAAAAPC/AQAAAAEAAABh9wAAAAAAAGH3AAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "utils.h",
			"settings":
			{
				"buffer_size": 31370,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1005,
					1,
					"paste",
					null,
					"AQAAAO4OAAAAAAAANQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7g4AAAAAAADuDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1008,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAANQ8AAAAAAAA1DwAAAAAAAAAAAAAAAPC/"
				],
				[
					1018,
					1,
					"",
					null,
					"AQAAALAQAAAAAAAAthAAAAAAAAAFAAAAYXJncy4",
					"AQAAAAAAAAABAAAAsBAAAAAAAAC1EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1019,
					1,
					"",
					null,
					"AQAAAMMQAAAAAAAAyRAAAAAAAAAFAAAAYXJncy4",
					"AQAAAAAAAAABAAAAwxAAAAAAAADIEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1020,
					1,
					"",
					null,
					"AQAAAN0QAAAAAAAA4xAAAAAAAAAFAAAAYXJncy4",
					"AQAAAAAAAAABAAAA3RAAAAAAAADiEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1021,
					1,
					"",
					null,
					"AQAAABkRAAAAAAAAHxEAAAAAAAAFAAAAYXJncy4",
					"AQAAAAAAAAABAAAAGREAAAAAAAAeEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1022,
					1,
					"",
					null,
					"AQAAACYRAAAAAAAALBEAAAAAAAAFAAAAYXJncy4",
					"AQAAAAAAAAABAAAAJhEAAAAAAAArEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1023,
					1,
					"",
					null,
					"AQAAADQRAAAAAAAAOhEAAAAAAAAFAAAAYXJncy4",
					"AQAAAAAAAAABAAAANBEAAAAAAAA5EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1024,
					1,
					"",
					null,
					"AQAAAM4RAAAAAAAA1BEAAAAAAAAFAAAAYXJncy4",
					"AQAAAAAAAAABAAAAzhEAAAAAAADTEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1025,
					1,
					"",
					null,
					"AQAAAO8RAAAAAAAA9REAAAAAAAAFAAAAYXJncy4",
					"AQAAAAAAAAABAAAA7xEAAAAAAAD0EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1026,
					1,
					"",
					null,
					"AQAAAAQSAAAAAAAAChIAAAAAAAAFAAAAYXJncy4",
					"AQAAAAAAAAABAAAABBIAAAAAAAAJEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1027,
					1,
					"",
					null,
					"AQAAABcSAAAAAAAAHRIAAAAAAAAFAAAAYXJncy4",
					"AQAAAAAAAAABAAAAFxIAAAAAAAAcEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1041,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAAPURAAAAAAAA9hEAAAAAAAAAAAAA9hEAAAAAAAD2EQAAAAAAAAEAAABu",
					"AQAAAAAAAAABAAAA9REAAAAAAAD2EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1051,
					1,
					"insert",
					{
						"characters": "JSW_"
					},
					"BQAAAEERAAAAAAAAQhEAAAAAAAAAAAAAQhEAAAAAAABCEQAAAAAAAAEAAAAwQhEAAAAAAABDEQAAAAAAAAAAAABDEQAAAAAAAEQRAAAAAAAAAAAAAEQRAAAAAAAARREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQREAAAAAAABCEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1052,
					2,
					"left_delete",
					null,
					"AgAAAEQRAAAAAAAARBEAAAAAAAABAAAAX0MRAAAAAAAAQxEAAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAARREAAAAAAABFEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1053,
					1,
					"insert",
					{
						"characters": "_UNDEFINED"
					},
					"CgAAAEMRAAAAAAAARBEAAAAAAAAAAAAARBEAAAAAAABFEQAAAAAAAAAAAABFEQAAAAAAAEYRAAAAAAAAAAAAAEYRAAAAAAAARxEAAAAAAAAAAAAARxEAAAAAAABIEQAAAAAAAAAAAABIEQAAAAAAAEkRAAAAAAAAAAAAAEkRAAAAAAAAShEAAAAAAAAAAAAAShEAAAAAAABLEQAAAAAAAAAAAABLEQAAAAAAAEwRAAAAAAAAAAAAAEwRAAAAAAAATREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQxEAAAAAAABDEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1067,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAMIQAAAAAAAAwxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwhAAAAAAAADCEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1069,
					2,
					"left_delete",
					null,
					"AgAAAAkRAAAAAAAACREAAAAAAAABAAAAewgRAAAAAAAACBEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAChEAAAAAAAAKEQAAAAAAAP///////+9/"
				],
				[
					1070,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAAgRAAAAAAAACREAAAAAAAAAAAAACREAAAAAAAANEQAAAAAAAAAAAAAJEQAAAAAAAAkRAAAAAAAABAAAACAgICAJEQAAAAAAAA8RAAAAAAAAAAAAAA8RAAAAAAAAEBEAAAAAAAAAAAAAEBEAAAAAAAAREQAAAAAAAAAAAAAREQAAAAAAABIRAAAAAAAAAAAAABIRAAAAAAAAExEAAAAAAAAAAAAAExEAAAAAAAAUEQAAAAAAAAAAAAAUEQAAAAAAABURAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBEAAAAAAAAIEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1071,
					1,
					"insert",
					{
						"characters": " FALSE;"
					},
					"BwAAABURAAAAAAAAFhEAAAAAAAAAAAAAFhEAAAAAAAAXEQAAAAAAAAAAAAAXEQAAAAAAABgRAAAAAAAAAAAAABgRAAAAAAAAGREAAAAAAAAAAAAAGREAAAAAAAAaEQAAAAAAAAAAAAAaEQAAAAAAABsRAAAAAAAAAAAAABsRAAAAAAAAHBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFREAAAAAAAAVEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1075,
					1,
					"left_delete",
					null,
					"AQAAAGIRAAAAAAAAYhEAAAAAAAAZAAAAICAgICAgcmV0dXJuIFRSVUU7CiAgICB9Cg",
					"AQAAAAAAAAABAAAAYhEAAAAAAAB7EQAAAAAAAAAAAAAAAAAA"
				],
				[
					1080,
					1,
					"insert",
					{
						"characters": "√®"
					},
					"AQAAAIoRAAAAAAAAixEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihEAAAAAAACKEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1081,
					1,
					"left_delete",
					null,
					"AQAAAIoRAAAAAAAAihEAAAAAAAACAAAAw6g",
					"AQAAAAAAAAABAAAAixEAAAAAAACLEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1082,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAIoRAAAAAAAAixEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihEAAAAAAACKEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1084,
					1,
					"left_delete",
					null,
					"AQAAAMIRAAAAAAAAwhEAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAwxEAAAAAAADDEQAAAAAAAP///////+9/"
				],
				[
					1085,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAMIRAAAAAAAAwxEAAAAAAAAAAAAAwxEAAAAAAADEEQAAAAAAAAAAAADEEQAAAAAAAMURAAAAAAAAAAAAAMURAAAAAAAAxhEAAAAAAAAAAAAAxhEAAAAAAADHEQAAAAAAAAAAAADHEQAAAAAAAMgRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwhEAAAAAAADCEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1086,
					1,
					"insert",
					{
						"characters": " FALSE;"
					},
					"BwAAAMgRAAAAAAAAyREAAAAAAAAAAAAAyREAAAAAAADKEQAAAAAAAAAAAADKEQAAAAAAAMsRAAAAAAAAAAAAAMsRAAAAAAAAzBEAAAAAAAAAAAAAzBEAAAAAAADNEQAAAAAAAAAAAADNEQAAAAAAAM4RAAAAAAAAAAAAAM4RAAAAAAAAzxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyBEAAAAAAADIEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1089,
					1,
					"left_delete",
					null,
					"AQAAADUSAAAAAAAANRIAAAAAAAAZAAAACiAgICAgIHJldHVybiBUUlVFOwogICAgfQ",
					"AQAAAAAAAAABAAAANRIAAAAAAABOEgAAAAAAAAAAAAAAwIdA"
				],
				[
					1092,
					5,
					"left_delete",
					null,
					"BQAAAEcSAAAAAAAARxIAAAAAAAABAAAARUYSAAAAAAAARhIAAAAAAAABAAAAU0USAAAAAAAARRIAAAAAAAABAAAATEQSAAAAAAAARBIAAAAAAAABAAAAQUMSAAAAAAAAQxIAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAASBIAAAAAAABIEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1093,
					1,
					"insert",
					{
						"characters": "TRUE"
					},
					"BAAAAEMSAAAAAAAARBIAAAAAAAAAAAAARBIAAAAAAABFEgAAAAAAAAAAAABFEgAAAAAAAEYSAAAAAAAAAAAAAEYSAAAAAAAARxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQxIAAAAAAABDEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1111,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AgAAAJ8QAAAAAAAAoBAAAAAAAAAAAAAAoBAAAAAAAACgEAAAAAAAAKkBAAAgewogIGludCBpOwogIGlmKGFyZ3MtPmEpIHsKICAgIGlmKCEoYXJncy0+diA9IGpzX3JlYWxsb2MoY3R4LCBhcmdzLT52LCBzaXplb2YoSlNWYWx1ZUNvbnN0KSAqIChuICsgMSkpKSkKICAgICAgcmV0dXJuIEZBTFNFOwoKICAgICAgZm9yKGkgPSBhcmdzLT5jOyBpIDwgYXJncy0+YTsgaSsrKSBhcmdzLT52W2ldID0gSlNfVU5ERUZJTkVEOwogIH0gZWxzZSB7CiAgICBKU1ZhbHVlQ29uc3QqIHY7CgogICAgaWYoISh2ID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihKU1ZhbHVlQ29uc3QpICogKG4gKyAxKSkpKSByZXR1cm4gRkFMU0U7CiAgICAgIG1lbWNweSh2LCBhcmdzLT52LCBzaXplb2YoSlNWYWx1ZUNvbnN0KSAqIChhcmdzLT5jICsgMSkpOwogICAgICBhcmdzLT52ID0gdjsKICAgICAgYXJncy0+YSA9IG47CiAgfQogIHJldHVybiBUUlVFOw",
					"AQAAAAAAAAABAAAAnxAAAAAAAABIEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1112,
					1,
					"left_delete",
					null,
					"AQAAAJ8QAAAAAAAAnxAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAoBAAAAAAAACgEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1113,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJ8QAAAAAAAAoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxAAAAAAAACfEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1115,
					1,
					"left_delete",
					null,
					"AQAAAKAQAAAAAAAAoBAAAAAAAAACAAAACn0",
					"AQAAAAAAAAABAAAAoBAAAAAAAACiEAAAAAAAAAAAAAAAEINA"
				],
				[
					1118,
					13,
					"right_delete",
					null,
					"DQAAAFAQAAAAAAAAUBAAAAAAAAABAAAAc1AQAAAAAAAAUBAAAAAAAAABAAAAdFAQAAAAAAAAUBAAAAAAAAABAAAAYVAQAAAAAAAAUBAAAAAAAAABAAAAdFAQAAAAAAAAUBAAAAAAAAABAAAAaVAQAAAAAAAAUBAAAAAAAAABAAAAY1AQAAAAAAAAUBAAAAAAAAABAAAAIFAQAAAAAAAAUBAAAAAAAAABAAAAaVAQAAAAAAAAUBAAAAAAAAABAAAAblAQAAAAAAAAUBAAAAAAAAABAAAAbFAQAAAAAAAAUBAAAAAAAAABAAAAaVAQAAAAAAAAUBAAAAAAAAABAAAAblAQAAAAAAAAUBAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAUBAAAAAAAABQEAAAAAAAAAAAAAAAAAAA"
				],
				[
					1119,
					1,
					"join_lines",
					null,
					"AgAAAFUQAAAAAAAAVRAAAAAAAAABAAAAClUQAAAAAAAAVhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUBAAAAAAAABQEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1122,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAVhAAAAAAAABWEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1141,
					1,
					"insert",
					{
						"characters": "conat"
					},
					"BgAAAO4OAAAAAAAA7w4AAAAAAAAAAAAA7w4AAAAAAADvDgAAAAAAAAMAAABpbnTvDgAAAAAAAPAOAAAAAAAAAAAAAPAOAAAAAAAA8Q4AAAAAAAAAAAAA8Q4AAAAAAADyDgAAAAAAAAAAAADyDgAAAAAAAPMOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7g4AAAAAAADxDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1142,
					2,
					"left_delete",
					null,
					"AgAAAPIOAAAAAAAA8g4AAAAAAAABAAAAdPEOAAAAAAAA8Q4AAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA8w4AAAAAAADzDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1143,
					1,
					"insert",
					{
						"characters": "st"
					},
					"AgAAAPEOAAAAAAAA8g4AAAAAAAAAAAAA8g4AAAAAAADzDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8Q4AAAAAAADxDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1144,
					1,
					"insert",
					{
						"characters": " char*"
					},
					"BgAAAPMOAAAAAAAA9A4AAAAAAAAAAAAA9A4AAAAAAAD1DgAAAAAAAAAAAAD1DgAAAAAAAPYOAAAAAAAAAAAAAPYOAAAAAAAA9w4AAAAAAAAAAAAA9w4AAAAAAAD4DgAAAAAAAAAAAAD4DgAAAAAAAPkOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8w4AAAAAAADzDgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "predicate.h",
			"settings":
			{
				"buffer_size": 9104,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs-predicate.c",
			"settings":
			{
				"buffer_size": 30688,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 26973,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/.config/sublime-text/Packages/User/Themes/ES6 Next.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_deep.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_path.js",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/bnflexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/socklen_t.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/stack.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.c.structs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/blah.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/iteration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_watch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_mmap.js",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Aurora.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qsort_r.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/inet_ntop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_location.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debugger.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tmp.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/check-flags.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/TODO",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/clock_gettime.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/require.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Dokumente/bookmarks_10_26_21.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tmp.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/base64.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/Doxyfile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/.clang-format",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/fs.c"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"LDADD",
			"IMPORT_LIB",
			"WASM",
			"QJSM_LDADD",
			"make.*module",
			"PREFIX ",
			"^(\\s*)////",
			"args->n",
			"args\\.",
			"args.",
			"_dump\\(",
			"p,c",
			"c,\\s*p",
			"^(js_|)arguments_",
			"\"\\( \"",
			"js_value_equals",
			"EQUAL:",
			"parent",
			" function buildXPath(ptr, root)",
			"parent",
			"^(\\s*)(console\\.)",
			"isObject",
			"isFunc",
			"siblingTags",
			"'',",
			"\"0\"",
			"^js_value_type\\(",
			"js_value_type\\(",
			"js_misc_type",
			"\"values\"",
			"_VALUES",
			"PROP_VALUES",
			"\"values\"",
			"predicate_values",
			"\"id\"",
			"is_function",
			"\\[Func",
			"pr->",
			"fn_args",
			"predicate_(inspect|tosource)\\(",
			"predicate_(tosource)\\(",
			"predicate_(inspect|tosource)\\(",
			"predicate_(inspect|tosource)",
			"predicate_tosource",
			"save_args",
			"StringPred",
			"dbuf_put_escape",
			"expr",
			"_STRING:",
			"pred->",
			"arguments_dump",
			"Arguments",
			"=> ",
			"to_?string",
			"to_string",
			"to_source",
			"tosource",
			"PROPERTY:",
			"o\\.",
			"_to_",
			"js_to_source",
			"js_tosource",
			"^js[^ ]*string",
			"tostring",
			"proprety",
			"predicate_tostring",
			"predicate_dump",
			"_dump",
			"PROPERTY:",
			"predicate;",
			"predicate",
			"PREDICATE_PROPERTY",
			"slice",
			"getClassName",
			"className",
			"class",
			"#[0-3].[0-3].[0-5][0-9]",
			"#....[0-5][0-9]",
			"screen_width",
			"\"get.*Size",
			"\"get",
			"js_async_socket_class",
			"\"Socket\"",
			"js_async_socket_proto_funcs",
			"sock\\.",
			"sock->",
			", \\*s,",
			"syscall_return",
			"sock\\.",
			", sock,",
			"sock\\.",
			"id == js_",
			"JS_SetOpa",
			"JS_GetOpaque",
			"JS_NewObjectProtoClass",
			"js_socket_new_proto",
			"_same",
			"js_socket_class_id",
			"class_id",
			"js_socket_new_proto",
			"ret",
			"JS_GetProperty",
			"JS_GetPropertyValue",
			"JS_GetProperty",
			"inspect",
			"\"ret\"",
			"js_socket_new",
			"js_socket_class_id",
			"js_socket_new_proto",
			"new Sock",
			"js_socket_data2\\(ctx, ",
			"js_socket_data",
			"SYSCALL",
			"SYSCALL_SOCKET",
			"socket_state",
			"JS_GetClassID",
			"Socket",
			"new Socket",
			"js_socket_class",
			"js_async_socket_class_id",
			"socket_proto",
			"socket_ctor",
			"JS_SetPrototype",
			"sockets_",
			"list_add",
			"add_head",
			"list_add",
			"list_"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\1//",
			"args->c",
			"args->",
			"\\1//\\2",
			"METHOD_VALUES",
			"pr->",
			"property",
			"size[0]",
			"s->",
			"(sock)->",
			", s,",
			"(sock).",
			", *s,",
			"s->",
			"obj",
			"js_socket_data(",
			"obj",
			"loc",
			"YIELD_",
			"if",
			"\\1//\\2",
			"",
			"\\1//\\2",
			"js_pointer_free_func",
			"BITFIELD_SET",
			"fd",
			"misc.IN_",
			"fd",
			"wd",
			"JSValueConst\\1",
			"s",
			"queue_alloc(",
			"queue_alloc",
			"rpt",
			"js_return_",
			"tmp",
			"repeater_execute",
			"queue_item",
			"linked_item",
			"queue_",
			"rpt",
			"Repeater",
			"resolvable_item",
			"resolvable_",
			"js_resolvable_",
			"repeater_push",
			"COLOR_NONE",
			"COLOR_CYAN",
			"COLOR_RED",
			"COLOR_LIGHTRED",
			"\" BACKGROUND_RED \"",
			"BACKGROUND_BLUE \"",
			"BACKGROUND_GREEN \"",
			"BACKGROUND_YELLOW \"",
			"\" COLOR_NONE \"",
			"js_inspect_print_map",
			"js_inspect_print_set",
			"js_inspect_print_arraybuffer",
			"js_inspect_print_regexp",
			"js_inspect_print_number",
			"js_inspect_print_string",
			"js_inspect_print_atom",
			"js_inspect_print_module",
			"js_inspect_print_value",
			"imp",
			"INC",
			"format",
			"\\1//\\2",
			"ctx",
			"sel",
			"console.log",
			"cmd",
			"js_socket_async_wait",
			"utils_SOURCES",
			"${util_SOURCES}",
			"${vector_SOURCES}",
			"socketpair",
			"",
			"#",
			"",
			"HAVE_MEMMEM",
			"log",
			"class_key",
			"}\\n\\nsize_t",
			"# ",
			"#",
			"HAVE_REALPATH",
			"",
			"HAVE_TERMIOS_H",
			"HAVE_MMAP",
			"HAVE_SYS_MMAN_H",
			"HAVE_SYS_WAIT_H",
			"length",
			"loc->",
			"ret->",
			"arg",
			" ",
			"",
			"\"\\\\t",
			"\"\\t",
			"imp.",
			"ctx,",
			"",
			"JSValueConst)",
			"",
			"jsm_module_loader",
			"js_module_loader_so",
			"js_eval_file",
			"js_eval_buf",
			"js_load_script",
			"jsm_eval_script",
			"js_eval_file",
			"js_load_module",
			"js_eval_str",
			"js_module_get",
			"JSValueConst)",
			"js_module_search",
			"jsm_module_find",
			"js_module_find",
			"js_load_",
			"js_load_module",
			"js_eval_buf",
			"js_load_script",
			"js_std_dump_error",
			"js_module_exports",
			"fdset",
			" ",
			"js_input_buffer"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/wasmedge-quickjs/example_js/es6_module_demo/c.",
							"function_name_status_row": 17,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641975874.73,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/xpath.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5235,
						"regions":
						{
						},
						"selection":
						[
							[
								5217,
								5217
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 178,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641975512.9,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_moving":
							[
								4,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2639.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "predicate.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34190,
						"regions":
						{
						},
						"selection":
						[
							[
								19519,
								19519
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 690,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641981260.15,
							"tabs_extra_last_activated_sheet_index": 1,
							"tabs_extra_moving":
							[
								4,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12405.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "qjsm.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34647,
						"regions":
						{
						},
						"selection":
						[
							[
								2372,
								2372
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 94,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641982302.23,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1328.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18629,
						"regions":
						{
						},
						"selection":
						[
							[
								14365,
								14365
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 411,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641987588.12,
							"tabs_extra_last_activated_sheet_index": 3,
							"tabs_extra_moving":
							[
								4,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7351.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/roman/Projects/wasmedge-quickjs/example_js/es6_module_demo/c.",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tabs_extra_last_activated": 1641989398.95,
							"tabs_extra_last_activated_sheet_index": 4
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "cmake/QuickJSModule.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5364,
						"regions":
						{
						},
						"selection":
						[
							[
								5364,
								5364
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 138,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641986451.75,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1631.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64208,
						"regions":
						{
						},
						"selection":
						[
							[
								63329,
								63329
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2451,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641977579.35,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 46281.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31370,
						"regions":
						{
						},
						"selection":
						[
							[
								3893,
								3907
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 165,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641977649.2,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2636.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64208,
						"regions":
						{
						},
						"selection":
						[
							[
								63328,
								63204
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2445,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641977706.93,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 46455.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "predicate.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9104,
						"regions":
						{
						},
						"selection":
						[
							[
								2987,
								3015
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 135,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641975499.37,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2176.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "quickjs-predicate.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30688,
						"regions":
						{
						},
						"selection":
						[
							[
								345,
								357
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 13,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641977560.39,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26973,
						"regions":
						{
						},
						"selection":
						[
							[
								26358,
								26358
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 955,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641972857.17,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 18143.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"xpath.j",
				"lib/xpath.js"
			],
			[
				"predicate.h",
				"predicate.h"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"list.h",
				"~/Projects/plot-cv/quickjs/list.h"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"queue",
				"queue.c"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"path.c",
				"path.c"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"test_wa",
				"tests/test_watch.js"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"tree-wa",
				"quickjs-tree-walker.c"
			],
			[
				"quick",
				"quickjs-xml.c"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"predi",
				"predicate.c"
			],
			[
				"cmakelis",
				"CMakeLists.txt"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"char-u",
				"char-utils.h"
			],
			[
				"",
				"tests/test_xml.js"
			],
			[
				"quickjs-in",
				"quickjs-internal.h"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"doxy",
				"Doxyfile"
			],
			[
				"Doxyfile",
				"Doxyfile"
			],
			[
				"interna",
				"quickjs-internal.h"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"console.js",
				"lib/console.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"child",
				"child-process.c"
			],
			[
				"qsort_r",
				"qsort_r.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"quicksj-misc",
				"quickjs-misc.c"
			],
			[
				"process.js",
				"lib/process.js"
			],
			[
				"quickjs-mm",
				"quickjs-mmap.c"
			],
			[
				"quickjs-m",
				"quickjs-misc.c"
			],
			[
				"redicate.c",
				"predicate.c"
			],
			[
				"sockets.h",
				"quickjs-sockets.h"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"char-",
				"char-utils.h"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"conso",
				"lib/console.js"
			],
			[
				"clang-f",
				".clang-format"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"test_mi",
				"tests/test_misc.js"
			],
			[
				"ockets.",
				"quickjs-sockets.h"
			],
			[
				"quickjs-ar",
				"quickjs-archive.c"
			],
			[
				"fd_set",
				"lib/fd_set.js"
			],
			[
				"buffer-ut",
				"buffer-utils.c"
			],
			[
				"misc.",
				"quickjs-misc.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"socklen_t.js",
				"lib/socklen_t.js"
			],
			[
				"str.h",
				"quickjs-stringdecoder.h"
			],
			[
				"quickjs-libc",
				"~/Sources/plot-cv/quickjs/quickjs-libc.h"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.c"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"test_loca",
				"tests/test_location.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				".clang-fo",
				".clang-format"
			],
			[
				"buff",
				"buffer-utils.c"
			],
			[
				"buffer-util",
				"buffer-utils.c"
			],
			[
				"buffer-utils.c",
				"buffer-utils.c"
			],
			[
				"quickjs-so",
				"quickjs-sockets.c"
			],
			[
				"quickjs-insp",
				"quickjs-inspect.c"
			],
			[
				"test_soc",
				"tests/test_sockets.js"
			],
			[
				"test_qjsm",
				"tests/test_qjsm.js"
			],
			[
				"buffer-tu",
				"buffer-utils.c"
			],
			[
				"repl.",
				"lib/repl.js"
			],
			[
				"quickjs-blo",
				"quickjs-blob.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"test_mis",
				"tests/test_misc.js"
			],
			[
				"test_blob",
				"tests/test_blob.js"
			],
			[
				"test_string",
				"tests/test_stringdecoder.js"
			],
			[
				"test_str",
				"tests/test_stringdecoder.js"
			],
			[
				"quickjs-blb",
				"quickjs-blob.h"
			],
			[
				"ringbuffer.h",
				"ringbuffer.h"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"grammar.ki",
				"grammar.kison"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 282.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
