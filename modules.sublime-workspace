{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_Set",
				"JS_SetProperty"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					103,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtCQAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGZkID0+CigpID0+ClJFUEwKICBjb25zdHJ1Y3RvcihuYW1lLCBzaG93X2Jhbm5lciA9IHRydWUpCiAgKCkgPT4KICBhZGRDbGVhbnVwSGFuZGxlcihmbikKKCkgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgZXhpdChleGl0Q29kZSA9IDApCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoc2hvd19iYW5uZXIgPSB0cnVlKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZW5hbWUsIGZzKQooKSA9PgogIGhpc3RvcnlTYXZlKGZpbGVuYW1lLCBmcykKICBsaW5lID0+CiAgbGluZSA9PgogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgc2V0IGhpc3RvcnkoZW50cmllcykKICBnZXQgaGlzdG9yeSgpCiAgaGlzdG9yeVBvcygpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSB0cnVlKQogIGFyZyA9PgogIGFyZyA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CiAgcHJpbnRGdW5jdGlvbihsb2dGbikKICAoLi4uYXJncykgPT4KKCkgPT4KICBxdW90ZWRJbnNlcnQoKQogIHJldmVyc2VTZWFyY2goKQogIGZvcndhcmRTZWFyY2goKQogIHNlYXJjaENiKHBhdHRlcm4pCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1bihiYW5uZXIgPSB0cnVlKQogIHJ1blN5bmMoKQogICgpID0+CigpID0+CiAgc3RvcCgpCiAgc2lnaW50SGFuZGxlcigpCiAgc2tpcFdvcmRCYWNrd2FyZChwb3MpCiAgc2tpcFdvcmRGb3J3YXJkKHBvcykKICB0ZXJtSW5pdCgpCiAgYXJnID0+CiAgKCkgPT4KICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gZnMpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpClJFUEwKUkVQTAogIGZpbGUgPT4KICBtID0+CiAgZXJyb3IgPT4KICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					104,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41399,
								41409
							],
							[
								41672,
								41692
							],
							[
								41705,
								41718
							],
							[
								41736,
								41741
							],
							[
								41766,
								41780
							],
							[
								41817,
								41832
							],
							[
								42226,
								42241
							],
							[
								42429,
								42446
							],
							[
								42761,
								42784
							],
							[
								42849,
								42870
							],
							[
								43053,
								43078
							],
							[
								43781,
								43788
							],
							[
								43841,
								43865
							],
							[
								44130,
								44139
							],
							[
								44227,
								44233
							],
							[
								44286,
								44291
							],
							[
								44346,
								44352
							],
							[
								44478,
								44493
							],
							[
								44561,
								44582
							],
							[
								44733,
								44753
							],
							[
								44924,
								44934
							],
							[
								45327,
								45334
							],
							[
								45474,
								45480
							],
							[
								45513,
								45541
							],
							[
								45630,
								45657
							],
							[
								45735,
								45740
							],
							[
								45849,
								45866
							],
							[
								46038,
								46054
							],
							[
								46394,
								46410
							],
							[
								46876,
								46888
							],
							[
								47104,
								47112
							],
							[
								47670,
								47681
							],
							[
								50409,
								50415
							],
							[
								50454,
								50458
							],
							[
								50499,
								50503
							],
							[
								50536,
								50547
							],
							[
								50581,
								50585
							],
							[
								50625,
								50633
							],
							[
								50738,
								50757
							],
							[
								50849,
								50868
							],
							[
								50930,
								50948
							],
							[
								51040,
								51063
							],
							[
								51464,
								51493
							],
							[
								51552,
								51583
							],
							[
								51740,
								51765
							],
							[
								51874,
								51922
							],
							[
								52210,
								52236
							],
							[
								52465,
								52469
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AQAAAAAAAAAAAAAArQkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					105,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
						"symkeys":
						[
							[
								543,
								555
							],
							[
								596,
								608
							],
							[
								632,
								644
							],
							[
								740,
								754
							],
							[
								1397,
								1416
							],
							[
								1728,
								1741
							],
							[
								1812,
								1821
							],
							[
								2102,
								2119
							],
							[
								2634,
								2663
							],
							[
								2672,
								2701
							],
							[
								2877,
								2895
							],
							[
								2929,
								2942
							],
							[
								3208,
								3221
							],
							[
								3232,
								3258
							],
							[
								3360,
								3384
							],
							[
								3467,
								3493
							],
							[
								3578,
								3602
							],
							[
								4705,
								4739
							],
							[
								4789,
								4803
							],
							[
								5134,
								5146
							],
							[
								5847,
								5860
							],
							[
								6433,
								6446
							],
							[
								6644,
								6658
							],
							[
								6805,
								6817
							],
							[
								6917,
								6930
							],
							[
								6979,
								6994
							],
							[
								7064,
								7080
							],
							[
								7350,
								7365
							],
							[
								7448,
								7464
							],
							[
								7522,
								7535
							],
							[
								8326,
								8340
							],
							[
								8443,
								8456
							],
							[
								8615,
								8629
							],
							[
								9538,
								9557
							],
							[
								9597,
								9619
							],
							[
								9659,
								9679
							],
							[
								9719,
								9738
							],
							[
								9778,
								9797
							],
							[
								9837,
								9859
							],
							[
								9899,
								9923
							],
							[
								9963,
								9986
							],
							[
								10026,
								10052
							],
							[
								10092,
								10110
							],
							[
								10143,
								10159
							],
							[
								10249,
								10267
							],
							[
								10833,
								10853
							],
							[
								11239,
								11255
							],
							[
								11443,
								11459
							],
							[
								12468,
								12481
							],
							[
								12723,
								12739
							],
							[
								13029,
								13044
							],
							[
								13639,
								13654
							],
							[
								14009,
								14026
							],
							[
								14808,
								14825
							],
							[
								15503,
								15521
							],
							[
								16297,
								16312
							],
							[
								16896,
								16911
							],
							[
								17543,
								17560
							],
							[
								18442,
								18459
							],
							[
								19869,
								19889
							],
							[
								20950,
								20965
							],
							[
								21253,
								21270
							],
							[
								21969,
								21984
							],
							[
								22001,
								22016
							],
							[
								22034,
								22051
							],
							[
								22087,
								22098
							],
							[
								22441,
								22468
							],
							[
								22629,
								22657
							],
							[
								24035,
								24056
							],
							[
								24133,
								24149
							],
							[
								24579,
								24593
							],
							[
								24817,
								24834
							],
							[
								26136,
								26145
							],
							[
								26159,
								26167
							],
							[
								27292,
								27307
							],
							[
								28549,
								28564
							],
							[
								33425,
								33441
							],
							[
								34096,
								34100
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉCONFIG_SHEXT‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉCONFIG_SHEXT‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉCONFIG_SHEXT‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉatomic_add_int‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉQUICKJS_MODULE_PATH‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉis_searchable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉis_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_has_suffix‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_std_get_module_loader_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_std_set_module_loader_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmalloc_usable_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚ìÇ‚Äì‚ÄÉtrim_dotslash‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉBuiltinModule‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_module_extern_compiled‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_module_extern_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_module_record_compiled‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_module_record_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚íª‚Äì‚ÄÉjs_std_set_worker_new_context_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_dump_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_buf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_ptr‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_at‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_top‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_count‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_vector‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_push‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_pop‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_stack_load‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_init_module_deep‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_init_module_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_init_module_lexer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_init_module_misc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_init_module_path‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_init_module_pointer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_init_module_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_init_module_repeater‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_init_module_tree_walker‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_init_module_xml‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_init_modules‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_builtin_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_builtin_compiled‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚íª‚Äì‚ÄÉjsm_builtin_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_builtin_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_json‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_package‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_search_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_search_path‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_search_suffix‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_search_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_package‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_load‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_json‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_locate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_loader‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_normalize‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_context_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_module_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMALLOC_OVERHEAD‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMALLOC_OVERHEAD‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"trace_malloc_data",
							"‚Äî‚íª‚Äì‚ÄÉdump_vector‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_ptr_offset‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_usable_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_realloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉPROG_NAME‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉjsm_help‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_script‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_import_parse‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtCQAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGZkID0+CigpID0+ClJFUEwKICBjb25zdHJ1Y3RvcihuYW1lLCBzaG93X2Jhbm5lciA9IHRydWUpCiAgKCkgPT4KICBhZGRDbGVhbnVwSGFuZGxlcihmbikKKCkgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgZXhpdChleGl0Q29kZSA9IDApCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoc2hvd19iYW5uZXIgPSB0cnVlKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZW5hbWUsIGZzKQooKSA9PgogIGhpc3RvcnlTYXZlKGZpbGVuYW1lLCBmcykKICBsaW5lID0+CiAgbGluZSA9PgogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgc2V0IGhpc3RvcnkoZW50cmllcykKICBnZXQgaGlzdG9yeSgpCiAgaGlzdG9yeVBvcygpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSB0cnVlKQogIGFyZyA9PgogIGFyZyA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CiAgcHJpbnRGdW5jdGlvbihsb2dGbikKICAoLi4uYXJncykgPT4KKCkgPT4KICBxdW90ZWRJbnNlcnQoKQogIHJldmVyc2VTZWFyY2goKQogIGZvcndhcmRTZWFyY2goKQogIHNlYXJjaENiKHBhdHRlcm4pCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1bihiYW5uZXIgPSB0cnVlKQogIHJ1blN5bmMoKQogICgpID0+CigpID0+CiAgc3RvcCgpCiAgc2lnaW50SGFuZGxlcigpCiAgc2tpcFdvcmRCYWNrd2FyZChwb3MpCiAgc2tpcFdvcmRGb3J3YXJkKHBvcykKICB0ZXJtSW5pdCgpCiAgYXJnID0+CiAgKCkgPT4KICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gZnMpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpClJFUEwKUkVQTAogIGZpbGUgPT4KICBtID0+CiAgZXJyb3IgPT4KICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAPMMAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					106,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41399,
								41409
							],
							[
								41672,
								41692
							],
							[
								41705,
								41718
							],
							[
								41736,
								41741
							],
							[
								41766,
								41780
							],
							[
								41817,
								41832
							],
							[
								42226,
								42241
							],
							[
								42429,
								42446
							],
							[
								42761,
								42784
							],
							[
								42849,
								42870
							],
							[
								43053,
								43078
							],
							[
								43781,
								43788
							],
							[
								43841,
								43865
							],
							[
								44130,
								44139
							],
							[
								44227,
								44233
							],
							[
								44286,
								44291
							],
							[
								44346,
								44352
							],
							[
								44478,
								44493
							],
							[
								44561,
								44582
							],
							[
								44733,
								44753
							],
							[
								44924,
								44934
							],
							[
								45327,
								45334
							],
							[
								45474,
								45480
							],
							[
								45513,
								45541
							],
							[
								45630,
								45657
							],
							[
								45735,
								45740
							],
							[
								45849,
								45866
							],
							[
								46038,
								46054
							],
							[
								46394,
								46410
							],
							[
								46876,
								46888
							],
							[
								47104,
								47112
							],
							[
								47670,
								47681
							],
							[
								50409,
								50415
							],
							[
								50454,
								50458
							],
							[
								50499,
								50503
							],
							[
								50536,
								50547
							],
							[
								50581,
								50585
							],
							[
								50625,
								50633
							],
							[
								50738,
								50757
							],
							[
								50849,
								50868
							],
							[
								50930,
								50948
							],
							[
								51040,
								51063
							],
							[
								51464,
								51493
							],
							[
								51552,
								51583
							],
							[
								51740,
								51765
							],
							[
								51874,
								51922
							],
							[
								52210,
								52236
							],
							[
								52465,
								52469
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADTDwAAICDik4IgIENPTkZJR19TSEVYVCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgQ09ORklHX1NIRVhUIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBDT05GSUdfU0hFWFQg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgUVVJQ0tKU19NT0RVTEVfUEFUSCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgaXNfc2VhcmNoYWJsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGlzX21vZHVsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vZHVsZV9oYXNfc3VmZml4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX2dldF9tb2R1bGVfbG9hZGVyX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfc2V0X21vZHVsZV9sb2FkZXJfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1hbGxvY191c2FibGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIHRyaW1fZG90c2xhc2ggKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24KICDik4kgIEJ1aWx0aW5Nb2R1bGUgOyDigJQgdHlwZWRlZgrigJTik4LigJMganNtX21vZHVsZV9leHRlcm5fY29tcGlsZWQgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGpzbV9tb2R1bGVfZXh0ZXJuX25hdGl2ZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX21vZHVsZV9yZWNvcmRfY29tcGlsZWQgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGpzbV9tb2R1bGVfcmVjb3JkX25hdGl2ZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX3NldF93b3JrZXJfbmV3X2NvbnRleHRfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9kdW1wX2Vycm9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2V2YWxfYnVmICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2V2YWxfZmlsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19wdHIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RhY2tfZmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja190b3AgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RhY2tfY291bnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RhY2tfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3N0YWNrX3ByaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3N0YWNrX3ZlY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RhY2tfcHVzaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19wb3AgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RhY2tfbG9hZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX2RlZXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbml0X21vZHVsZV9pbnNwZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5pdF9tb2R1bGVfbGV4ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbml0X21vZHVsZV9taXNjICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5pdF9tb2R1bGVfcGF0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX3BvaW50ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbml0X21vZHVsZV9wcmVkaWNhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbml0X21vZHVsZV9yZXBlYXRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX3RyZWVfd2Fsa2VyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5pdF9tb2R1bGVfeG1sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2luaXRfbW9kdWxlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIGpzbV9idWlsdGluX25hdGl2ZSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fY29tcGlsZWQgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9idWlsdGluX2ZpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fYnVpbHRpbl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xvYWRfanNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9sb2FkX3BhY2thZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc2VhcmNoX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc2VhcmNoX3BhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc2VhcmNoX3N1ZmZpeCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zZWFyY2hfbW9kdWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX21vZHVsZV9wYWNrYWdlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX21vZHVsZV9sb2FkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX21vZHVsZV9qc29uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX21vZHVsZV9sb2NhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbm9ybWFsaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2NvbnRleHRfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX21vZHVsZV9uYXRpdmUgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24KICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTUFMTE9DX09WRVJIRUFEIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgdHJhY2VfbWFsbG9jX2RhdGEK4oCU4pK74oCTIGR1bXBfdmVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX21hbGxvY19wdHJfb2Zmc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX21hbGxvY191c2FibGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9yZWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgUFJPR19OQU1FIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBqc21faGVscCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9ldmFsX3NjcmlwdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9pbXBvcnRfcGFyc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAArQkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					107,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/property-enumeration.c",
						"symkeys":
						[
							[
								196,
								221
							],
							[
								750,
								775
							],
							[
								1509,
								1537
							],
							[
								1897,
								1931
							],
							[
								2268,
								2293
							],
							[
								2800,
								2828
							],
							[
								3688,
								3713
							],
							[
								4156,
								4184
							],
							[
								4503,
								4537
							],
							[
								4965,
								4994
							],
							[
								5226,
								5251
							],
							[
								5453,
								5483
							],
							[
								6011,
								6040
							],
							[
								6285,
								6311
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_dumpall‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_path_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_skip‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_deepest‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_path‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_pathstr‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_pathstr_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_insideof‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_circular‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉproperty_enumeration_check‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtCQAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGZkID0+CigpID0+ClJFUEwKICBjb25zdHJ1Y3RvcihuYW1lLCBzaG93X2Jhbm5lciA9IHRydWUpCiAgKCkgPT4KICBhZGRDbGVhbnVwSGFuZGxlcihmbikKKCkgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgZXhpdChleGl0Q29kZSA9IDApCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoc2hvd19iYW5uZXIgPSB0cnVlKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZW5hbWUsIGZzKQooKSA9PgogIGhpc3RvcnlTYXZlKGZpbGVuYW1lLCBmcykKICBsaW5lID0+CiAgbGluZSA9PgogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgc2V0IGhpc3RvcnkoZW50cmllcykKICBnZXQgaGlzdG9yeSgpCiAgaGlzdG9yeVBvcygpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSB0cnVlKQogIGFyZyA9PgogIGFyZyA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CiAgcHJpbnRGdW5jdGlvbihsb2dGbikKICAoLi4uYXJncykgPT4KKCkgPT4KICBxdW90ZWRJbnNlcnQoKQogIHJldmVyc2VTZWFyY2goKQogIGZvcndhcmRTZWFyY2goKQogIHNlYXJjaENiKHBhdHRlcm4pCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1bihiYW5uZXIgPSB0cnVlKQogIHJ1blN5bmMoKQogICgpID0+CigpID0+CiAgc3RvcCgpCiAgc2lnaW50SGFuZGxlcigpCiAgc2tpcFdvcmRCYWNrd2FyZChwb3MpCiAgc2tpcFdvcmRGb3J3YXJkKHBvcykKICB0ZXJtSW5pdCgpCiAgYXJnID0+CiAgKCkgPT4KICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gZnMpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpClJFUEwKUkVQTAogIGZpbGUgPT4KICBtID0+CiAgZXJyb3IgPT4KICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAPICAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					108,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41399,
								41409
							],
							[
								41672,
								41692
							],
							[
								41705,
								41718
							],
							[
								41736,
								41741
							],
							[
								41766,
								41780
							],
							[
								41817,
								41832
							],
							[
								42226,
								42241
							],
							[
								42429,
								42446
							],
							[
								42761,
								42784
							],
							[
								42849,
								42870
							],
							[
								43053,
								43078
							],
							[
								43781,
								43788
							],
							[
								43841,
								43865
							],
							[
								44130,
								44139
							],
							[
								44227,
								44233
							],
							[
								44286,
								44291
							],
							[
								44346,
								44352
							],
							[
								44478,
								44493
							],
							[
								44561,
								44582
							],
							[
								44733,
								44753
							],
							[
								44924,
								44934
							],
							[
								45327,
								45334
							],
							[
								45474,
								45480
							],
							[
								45513,
								45541
							],
							[
								45630,
								45657
							],
							[
								45735,
								45740
							],
							[
								45849,
								45866
							],
							[
								46038,
								46054
							],
							[
								46394,
								46410
							],
							[
								46876,
								46888
							],
							[
								47104,
								47112
							],
							[
								47670,
								47681
							],
							[
								50409,
								50415
							],
							[
								50454,
								50458
							],
							[
								50499,
								50503
							],
							[
								50536,
								50547
							],
							[
								50581,
								50585
							],
							[
								50625,
								50633
							],
							[
								50738,
								50757
							],
							[
								50849,
								50868
							],
							[
								50930,
								50948
							],
							[
								51040,
								51063
							],
							[
								51464,
								51493
							],
							[
								51552,
								51583
							],
							[
								51740,
								51765
							],
							[
								51874,
								51922
							],
							[
								52210,
								52236
							],
							[
								52465,
								52469
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB+AwAA4oCU4pK74oCTIHByb3BlcnR5X2VudW1lcmF0aW9uX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm9wZXJ0eV9lbnVtZXJhdGlvbl9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvcGVydHlfZW51bWVyYXRpb25fZHVtcGFsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3BlcnR5X2VudW1lcmF0aW9uX3BhdGhfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm9wZXJ0eV9lbnVtZXJhdGlvbl9za2lwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvcGVydHlfZW51bWVyYXRpb25fZGVlcGVzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3BlcnR5X2VudW1lcmF0aW9uX3BhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm9wZXJ0eV9lbnVtZXJhdGlvbl9wYXRoc3RyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvcGVydHlfZW51bWVyYXRpb25fcGF0aHN0cl92YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3BlcnR5X2VudW1lcmF0aW9uX2luc2lkZW9mICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvcGVydHlfZW51bWVyYXRpb25fZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3BlcnR5X2VudW1lcmF0aW9uX3ByZWRpY2F0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3BlcnR5X2VudW1lcmF0aW9uX2NpcmN1bGFyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvcGVydHlfZW51bWVyYXRpb25fY2hlY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAACtCQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					109,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
						"symkeys":
						[
							[
								697,
								709
							],
							[
								717,
								737
							],
							[
								1019,
								1037
							],
							[
								1416,
								1433
							],
							[
								1721,
								1737
							],
							[
								1971,
								1988
							],
							[
								2821,
								2835
							],
							[
								4039,
								4059
							],
							[
								4860,
								4888
							],
							[
								5580,
								5601
							],
							[
								6816,
								6842
							],
							[
								7024,
								7049
							],
							[
								7177,
								7202
							],
							[
								7544,
								7556
							],
							[
								8977,
								8991
							],
							[
								10177,
								10188
							],
							[
								10276,
								10288
							],
							[
								10505,
								10516
							],
							[
								11128,
								11139
							],
							[
								11227,
								11239
							],
							[
								11465,
								11476
							],
							[
								12093,
								12106
							],
							[
								12194,
								12208
							],
							[
								12427,
								12440
							],
							[
								13024,
								13039
							],
							[
								14648,
								14662
							],
							[
								15332,
								15347
							],
							[
								16410,
								16424
							],
							[
								18178,
								18193
							],
							[
								18360,
								18373
							],
							[
								18497,
								18509
							],
							[
								21351,
								21363
							],
							[
								22357,
								22371
							],
							[
								22401,
								22415
							],
							[
								22465,
								22479
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉDeepIterator‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"deep_iterator_return",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_parseflags‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_thisflags‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_getflags‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_return‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_iterator_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_iterator_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_iterator_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_iterator_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_iterator_iterator‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_iterator_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_select‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_get2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_set2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_unset‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_unset2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_unset‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_flatten‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_pathof‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_foreach‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_equals‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_iterate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_clone‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_deep_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉJS_INIT_MODULE‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtCQAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGZkID0+CigpID0+ClJFUEwKICBjb25zdHJ1Y3RvcihuYW1lLCBzaG93X2Jhbm5lciA9IHRydWUpCiAgKCkgPT4KICBhZGRDbGVhbnVwSGFuZGxlcihmbikKKCkgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgZXhpdChleGl0Q29kZSA9IDApCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoc2hvd19iYW5uZXIgPSB0cnVlKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZW5hbWUsIGZzKQooKSA9PgogIGhpc3RvcnlTYXZlKGZpbGVuYW1lLCBmcykKICBsaW5lID0+CiAgbGluZSA9PgogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgc2V0IGhpc3RvcnkoZW50cmllcykKICBnZXQgaGlzdG9yeSgpCiAgaGlzdG9yeVBvcygpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSB0cnVlKQogIGFyZyA9PgogIGFyZyA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CiAgcHJpbnRGdW5jdGlvbihsb2dGbikKICAoLi4uYXJncykgPT4KKCkgPT4KICBxdW90ZWRJbnNlcnQoKQogIHJldmVyc2VTZWFyY2goKQogIGZvcndhcmRTZWFyY2goKQogIHNlYXJjaENiKHBhdHRlcm4pCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1bihiYW5uZXIgPSB0cnVlKQogIHJ1blN5bmMoKQogICgpID0+CigpID0+CiAgc3RvcCgpCiAgc2lnaW50SGFuZGxlcigpCiAgc2tpcFdvcmRCYWNrd2FyZChwb3MpCiAgc2tpcFdvcmRGb3J3YXJkKHBvcykKICB0ZXJtSW5pdCgpCiAgYXJnID0+CiAgKCkgPT4KICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gZnMpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpClJFUEwKUkVQTAogIGZpbGUgPT4KICBtID0+CiAgZXJyb3IgPT4KICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAIkFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					110,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41399,
								41409
							],
							[
								41672,
								41692
							],
							[
								41705,
								41718
							],
							[
								41736,
								41741
							],
							[
								41766,
								41780
							],
							[
								41817,
								41832
							],
							[
								42226,
								42241
							],
							[
								42429,
								42446
							],
							[
								42761,
								42784
							],
							[
								42849,
								42870
							],
							[
								43053,
								43078
							],
							[
								43781,
								43788
							],
							[
								43841,
								43865
							],
							[
								44130,
								44139
							],
							[
								44227,
								44233
							],
							[
								44286,
								44291
							],
							[
								44346,
								44352
							],
							[
								44478,
								44493
							],
							[
								44561,
								44582
							],
							[
								44733,
								44753
							],
							[
								44924,
								44934
							],
							[
								45327,
								45334
							],
							[
								45474,
								45480
							],
							[
								45513,
								45541
							],
							[
								45630,
								45657
							],
							[
								45735,
								45740
							],
							[
								45849,
								45866
							],
							[
								46038,
								46054
							],
							[
								46394,
								46410
							],
							[
								46876,
								46888
							],
							[
								47104,
								47112
							],
							[
								47670,
								47681
							],
							[
								50409,
								50415
							],
							[
								50454,
								50458
							],
							[
								50499,
								50503
							],
							[
								50536,
								50547
							],
							[
								50581,
								50585
							],
							[
								50625,
								50633
							],
							[
								50738,
								50757
							],
							[
								50849,
								50868
							],
							[
								50930,
								50948
							],
							[
								51040,
								51063
							],
							[
								51464,
								51493
							],
							[
								51552,
								51583
							],
							[
								51740,
								51765
							],
							[
								51874,
								51922
							],
							[
								52210,
								52236
							],
							[
								52465,
								52469
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPBgAAICDik4kgIERlZXBJdGVyYXRvciA7IOKAlCB0eXBlZGVmCiAgZGVlcF9pdGVyYXRvcl9yZXR1cm4K4oCU4pK74oCTIGpzX2RlZXBfcGFyc2VmbGFncyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfdGhpc2ZsYWdzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZGVlcF9nZXRmbGFncyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZGVlcF9yZXR1cm4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kZWVwX2l0ZXJhdG9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfaXRlcmF0b3JfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kZWVwX2l0ZXJhdG9yX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kZWVwX2l0ZXJhdG9yX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfaXRlcmF0b3JfaXRlcmF0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kZWVwX2l0ZXJhdG9yX3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZGVlcF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZGVlcF9zZWxlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kZWVwX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfZ2V0MiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZGVlcF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kZWVwX3NldDIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kZWVwX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfdW5zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kZWVwX3Vuc2V0MiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfdW5zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kZWVwX2ZsYXR0ZW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kZWVwX3BhdGhvZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfZm9yZWFjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfZXF1YWxzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZGVlcF9pdGVyYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZGVlcF9jbG9uZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2RlZXBfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgSlNfSU5JVF9NT0RVTEUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAACtCQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					111,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								752,
								766
							],
							[
								846,
								869
							],
							[
								1007,
								1024
							],
							[
								1065,
								1082
							],
							[
								1115,
								1124
							],
							[
								1158,
								1168
							],
							[
								1202,
								1212
							],
							[
								1247,
								1258
							],
							[
								1292,
								1302
							],
							[
								1337,
								1348
							],
							[
								1385,
								1398
							],
							[
								1436,
								1450
							],
							[
								1486,
								1498
							],
							[
								1534,
								1546
							],
							[
								1599,
								1619
							],
							[
								1881,
								1897
							],
							[
								1951,
								1970
							],
							[
								2005,
								2021
							],
							[
								2063,
								2078
							],
							[
								2099,
								2103
							],
							[
								2141,
								2175
							],
							[
								2198,
								2230
							],
							[
								2253,
								2296
							],
							[
								4125,
								4144
							],
							[
								4242,
								4258
							],
							[
								4320,
								4338
							],
							[
								4402,
								4421
							],
							[
								4486,
								4495
							],
							[
								4550,
								4567
							],
							[
								4630,
								4647
							],
							[
								4710,
								4724
							],
							[
								4784,
								4799
							],
							[
								4860,
								4875
							],
							[
								4936,
								4944
							],
							[
								4998,
								5010
							],
							[
								5068,
								5078
							],
							[
								5134,
								5145
							],
							[
								5202,
								5210
							],
							[
								5264,
								5286
							],
							[
								5354,
								5369
							],
							[
								5430,
								5452
							],
							[
								5520,
								5536
							],
							[
								5598,
								5614
							],
							[
								5676,
								5688
							],
							[
								5746,
								5758
							],
							[
								5816,
								5829
							],
							[
								5888,
								5906
							],
							[
								5964,
								5982
							],
							[
								6046,
								6068
							],
							[
								6136,
								6163
							],
							[
								6236,
								6253
							],
							[
								6310,
								6327
							],
							[
								6384,
								6401
							],
							[
								6448,
								6464
							],
							[
								6547,
								6563
							],
							[
								6635,
								6651
							],
							[
								6723,
								6740
							],
							[
								6797,
								6817
							],
							[
								6876,
								6896
							],
							[
								7055,
								7074
							],
							[
								7150,
								7157
							],
							[
								7186,
								7206
							],
							[
								7276,
								7291
							],
							[
								7352,
								7378
							],
							[
								7449,
								7465
							],
							[
								7521,
								7534
							],
							[
								7611,
								7629
							],
							[
								7711,
								7724
							],
							[
								7789,
								7803
							],
							[
								7905,
								7931
							],
							[
								7977,
								8002
							],
							[
								8087,
								8129
							],
							[
								8263,
								8303
							],
							[
								11232,
								11275
							],
							[
								11692,
								11727
							],
							[
								11883,
								11901
							],
							[
								11931,
								11936
							],
							[
								12026,
								12053
							],
							[
								12172,
								12207
							],
							[
								12268,
								12272
							],
							[
								12288,
								12292
							],
							[
								12319,
								12328
							],
							[
								12491,
								12524
							],
							[
								12578,
								12610
							],
							[
								12774,
								12807
							],
							[
								13003,
								13024
							],
							[
								13094,
								13100
							],
							[
								13117,
								13133
							],
							[
								13202,
								13208
							],
							[
								13221,
								13237
							],
							[
								13410,
								13415
							],
							[
								13429,
								13438
							],
							[
								13488,
								13515
							],
							[
								13560,
								13566
							],
							[
								13611,
								13623
							],
							[
								13653,
								13686
							],
							[
								13744,
								13750
							],
							[
								13865,
								13877
							],
							[
								13931,
								13943
							],
							[
								14091,
								14102
							],
							[
								14144,
								14177
							],
							[
								14235,
								14244
							],
							[
								14366,
								14387
							],
							[
								14448,
								14469
							],
							[
								14627,
								14641
							],
							[
								14690,
								14729
							],
							[
								14802,
								14816
							],
							[
								14971,
								14988
							],
							[
								15129,
								15146
							],
							[
								15177,
								15194
							],
							[
								15294,
								15311
							],
							[
								15603,
								15617
							],
							[
								15663,
								15687
							],
							[
								15737,
								15741
							],
							[
								15781,
								15808
							],
							[
								16038,
								16058
							],
							[
								16088,
								16099
							],
							[
								16198,
								16233
							],
							[
								16273,
								16291
							],
							[
								16478,
								16499
							],
							[
								16523,
								16533
							],
							[
								16572,
								16602
							],
							[
								17150,
								17184
							],
							[
								17491,
								17546
							],
							[
								17822,
								17866
							],
							[
								18033,
								18067
							],
							[
								18133,
								18169
							],
							[
								18244,
								18261
							],
							[
								18420,
								18457
							],
							[
								18458,
								18472
							],
							[
								18478,
								18482
							],
							[
								18557,
								18589
							],
							[
								18617,
								18643
							],
							[
								18968,
								18990
							],
							[
								19041,
								19057
							],
							[
								19072,
								19079
							],
							[
								19107,
								19123
							],
							[
								19164,
								19192
							],
							[
								19411,
								19428
							],
							[
								19429,
								19438
							],
							[
								19490,
								19507
							],
							[
								19508,
								19517
							],
							[
								19577,
								19594
							],
							[
								19595,
								19618
							],
							[
								19674,
								19698
							],
							[
								22325,
								22353
							],
							[
								22784,
								22788
							],
							[
								22916,
								22929
							],
							[
								23245,
								23257
							],
							[
								23520,
								23533
							],
							[
								23638,
								23652
							],
							[
								24545,
								24573
							],
							[
								24689,
								24702
							],
							[
								24814,
								24840
							],
							[
								25030,
								25078
							],
							[
								25126,
								25238
							],
							[
								25343,
								25366
							],
							[
								25505,
								25557
							],
							[
								25651,
								25667
							],
							[
								25751,
								25762
							],
							[
								25875,
								25879
							],
							[
								26158,
								26191
							],
							[
								26305,
								26357
							],
							[
								26531,
								26567
							],
							[
								26724,
								26740
							],
							[
								26758,
								26780
							],
							[
								26893,
								26899
							],
							[
								27003,
								27016
							],
							[
								28424,
								28466
							],
							[
								28661,
								28692
							],
							[
								28742,
								28784
							],
							[
								28904,
								28928
							],
							[
								29148,
								29158
							],
							[
								29211,
								29215
							],
							[
								29254,
								29281
							],
							[
								29328,
								29340
							],
							[
								29410,
								29422
							],
							[
								29485,
								29510
							],
							[
								29555,
								29586
							],
							[
								29597,
								29614
							],
							[
								29755,
								29790
							],
							[
								29838,
								29865
							],
							[
								29956,
								29994
							],
							[
								30203,
								30251
							],
							[
								30839,
								30866
							],
							[
								31069,
								31083
							],
							[
								31132,
								31138
							],
							[
								31179,
								31245
							],
							[
								31247,
								31251
							],
							[
								31409,
								31416
							],
							[
								31508,
								31518
							],
							[
								31629,
								31638
							],
							[
								31744,
								31770
							],
							[
								31903,
								31934
							],
							[
								32109,
								32128
							],
							[
								32179,
								32187
							],
							[
								32216,
								32250
							],
							[
								32394,
								32419
							],
							[
								32480,
								32515
							],
							[
								32567,
								32596
							],
							[
								32678,
								32714
							],
							[
								32826,
								32830
							],
							[
								32857,
								32861
							],
							[
								32900,
								32904
							],
							[
								32932,
								32936
							],
							[
								32965,
								32993
							],
							[
								33123,
								33127
							],
							[
								33184,
								33215
							]
						],
						"symlist":
						[
							"sliceFn = x =>",
							"ArrayBuffer(start, end)",
							"SharedArrayBuffer",
							"Uint8ClampedArray",
							"Int8Array",
							"Uint8Array",
							"Int16Array",
							"Uint16Array",
							"Int32Array",
							"Uint32Array",
							"BigInt64Array",
							"BigUint64Array",
							"Float32Array",
							"Float64Array",
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							"function util()",
							"util",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterable(v)",
							"isAsyncIterable(v)",
							"isIterator(v)",
							"isArrayLike(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function memoize(fn, cache = {})",
							" function Memoize(n, ...rest)",
							" function getset(target, ...args)",
							"GetSet = (...args) =>",
							"key =>",
							" (key, value) =>",
							"key =>",
							" (key, value) =>",
							"() =>",
							" value =>",
							" function modifier(...args)",
							" fn =>",
							" newValue =>",
							" function getter(target, ...args)",
							" () =>",
							"ret = key =>",
							"ret = key =>",
							"ret = () =>",
							" function setter(target, ...args)",
							" value =>",
							"ret = (key, value) =>",
							"ret = (key, value) =>",
							"ret = value =>",
							" function gettersetter(target, ...args)",
							" (...args2) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							" (...args2) =>",
							" function hasGetSet(obj)",
							"m =>",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getPrototypeChain(obj, limit = -1, start = 0)",
							" function getConstructorChain(obj, ...range)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							"(acc, arg) =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function shorten(str, max = 40, suffix = '...')",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function arrayFacade(proto, itemFn = (container, i) => container.",
							"(i))",
							"*keys()",
							"*entries()",
							"*values()",
							"forEach(callback, thisArg)",
							"reduce(callback, accu, thisArg)",
							" function mod(a, b)",
							"b : n =>",
							" function pushUnique(arr, ...args)",
							" function intersect(a, b)",
							" function symmetricDifference(a, b)",
							" function* partition(a, size)",
							" function difference(a, b, includes)",
							"x =>",
							"x =>",
							"x =>",
							"x =>",
							" function intersection(a, b)",
							"x =>",
							" function union(a, b, equality)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtCQAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGZkID0+CigpID0+ClJFUEwKICBjb25zdHJ1Y3RvcihuYW1lLCBzaG93X2Jhbm5lciA9IHRydWUpCiAgKCkgPT4KICBhZGRDbGVhbnVwSGFuZGxlcihmbikKKCkgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgZXhpdChleGl0Q29kZSA9IDApCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoc2hvd19iYW5uZXIgPSB0cnVlKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZW5hbWUsIGZzKQooKSA9PgogIGhpc3RvcnlTYXZlKGZpbGVuYW1lLCBmcykKICBsaW5lID0+CiAgbGluZSA9PgogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgc2V0IGhpc3RvcnkoZW50cmllcykKICBnZXQgaGlzdG9yeSgpCiAgaGlzdG9yeVBvcygpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSB0cnVlKQogIGFyZyA9PgogIGFyZyA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CiAgcHJpbnRGdW5jdGlvbihsb2dGbikKICAoLi4uYXJncykgPT4KKCkgPT4KICBxdW90ZWRJbnNlcnQoKQogIHJldmVyc2VTZWFyY2goKQogIGZvcndhcmRTZWFyY2goKQogIHNlYXJjaENiKHBhdHRlcm4pCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1bihiYW5uZXIgPSB0cnVlKQogIHJ1blN5bmMoKQogICgpID0+CigpID0+CiAgc3RvcCgpCiAgc2lnaW50SGFuZGxlcigpCiAgc2tpcFdvcmRCYWNrd2FyZChwb3MpCiAgc2tpcFdvcmRGb3J3YXJkKHBvcykKICB0ZXJtSW5pdCgpCiAgYXJnID0+CiAgKCkgPT4KICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gZnMpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpClJFUEwKUkVQTAogIGZpbGUgPT4KICBtID0+CiAgZXJyb3IgPT4KICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					112,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41399,
								41409
							],
							[
								41672,
								41692
							],
							[
								41705,
								41718
							],
							[
								41736,
								41741
							],
							[
								41766,
								41780
							],
							[
								41817,
								41832
							],
							[
								42226,
								42241
							],
							[
								42429,
								42446
							],
							[
								42761,
								42784
							],
							[
								42849,
								42870
							],
							[
								43053,
								43078
							],
							[
								43781,
								43788
							],
							[
								43841,
								43865
							],
							[
								44130,
								44139
							],
							[
								44227,
								44233
							],
							[
								44286,
								44291
							],
							[
								44346,
								44352
							],
							[
								44478,
								44493
							],
							[
								44561,
								44582
							],
							[
								44733,
								44753
							],
							[
								44924,
								44934
							],
							[
								45327,
								45334
							],
							[
								45474,
								45480
							],
							[
								45513,
								45541
							],
							[
								45630,
								45657
							],
							[
								45735,
								45740
							],
							[
								45849,
								45866
							],
							[
								46038,
								46054
							],
							[
								46394,
								46410
							],
							[
								46876,
								46888
							],
							[
								47104,
								47112
							],
							[
								47670,
								47681
							],
							[
								50409,
								50415
							],
							[
								50454,
								50458
							],
							[
								50499,
								50503
							],
							[
								50536,
								50547
							],
							[
								50581,
								50585
							],
							[
								50625,
								50633
							],
							[
								50738,
								50757
							],
							[
								50849,
								50868
							],
							[
								50930,
								50948
							],
							[
								51040,
								51063
							],
							[
								51464,
								51493
							],
							[
								51552,
								51583
							],
							[
								51740,
								51765
							],
							[
								51874,
								51922
							],
							[
								52210,
								52236
							],
							[
								52465,
								52469
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAICBzbGljZUZuID0geCA9PgpBcnJheUJ1ZmZlcihzdGFydCwgZW5kKQpTaGFyZWRBcnJheUJ1ZmZlcgpVaW50OENsYW1wZWRBcnJheQpJbnQ4QXJyYXkKVWludDhBcnJheQpJbnQxNkFycmF5ClVpbnQxNkFycmF5CkludDMyQXJyYXkKVWludDMyQXJyYXkKQmlnSW50NjRBcnJheQpCaWdVaW50NjRBcnJheQpGbG9hdDMyQXJyYXkKRmxvYXQ2NEFycmF5CiAgc2xpY2UgPSAoeCwgcywgZSkgPT4KICBzdHJpbmdpZnkgPSB2ID0+CiAgZm9ybWF0TnVtYmVyID0gbiA9PgogIGlzTmF0aXZlID0gZm4gPT4KICB1dGlsKCkKICB1dGlsCkFzeW5jRnVuY3Rpb24gPSBmdW5jdGlvbiB4KCkKR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKICBpc0FueUFycmF5QnVmZmVyKHYpCiAgaXNBcnJheUJ1ZmZlcih2KQogIGlzQmlnSW50NjRBcnJheSh2KQogIGlzQmlnVWludDY0QXJyYXkodikKICBpc0RhdGUodikKICBpc0Zsb2F0MzJBcnJheSh2KQogIGlzRmxvYXQ2NEFycmF5KHYpCiAgaXNJbnQ4QXJyYXkodikKICBpc0ludDE2QXJyYXkodikKICBpc0ludDMyQXJyYXkodikKICBpc01hcCh2KQogIGlzUHJvbWlzZSh2KQogIGlzUHJveHkodikKICBpc1JlZ0V4cCh2KQogIGlzU2V0KHYpCiAgaXNTaGFyZWRBcnJheUJ1ZmZlcih2KQogIGlzVWludDhBcnJheSh2KQogIGlzVWludDhDbGFtcGVkQXJyYXkodikKICBpc1VpbnQxNkFycmF5KHYpCiAgaXNVaW50MzJBcnJheSh2KQogIGlzV2Vha01hcCh2KQogIGlzV2Vha1NldCh2KQogIGlzRGF0YVZpZXcodikKICBpc0Jvb2xlYW5PYmplY3QodikKICBpc0FzeW5jRnVuY3Rpb24odikKICBpc0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uKHYpCiAgaXNOdW1iZXJPYmplY3QodikKICBpc0JpZ0ludE9iamVjdCh2KQogIGlzU3ltYm9sT2JqZWN0KHYpCiAgaXNOYXRpdmVFcnJvcih2KQogIGlzTWFwSXRlcmF0b3IodikKICBpc1NldEl0ZXJhdG9yKHYpCiAgaXNTdHJpbmdPYmplY3QodikKICBpc0FycmF5QnVmZmVyVmlldyh2KQogIGlzQXJndW1lbnRzT2JqZWN0KHYpCiAgaXNCb3hlZFByaW1pdGl2ZSh2KQogIGN0b3IgPT4KICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNDb25zdHJ1Y3Rvcih2KQogIGlzSXRlcmFibGUodikKICBpc0FzeW5jSXRlcmFibGUodikKICBpc0l0ZXJhdG9yKHYpCiAgaXNBcnJheUxpa2UodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKKCkgPT4KICBjbGVhckludGVydmFsKGlkKQogIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3RvcikKICBjdG9yCiAgY3RvcgogIHN1cGVyQ3RvcgogIG1lbW9pemUoZm4sIGNhY2hlID0ge30pCk1lbW9pemUobiwgLi4ucmVzdCkKICBnZXRzZXQodGFyZ2V0LCAuLi5hcmdzKQpHZXRTZXQgPSAoLi4uYXJncykgPT4KICBrZXkgPT4KICAoa2V5LCB2YWx1ZSkgPT4KICBrZXkgPT4KICAoa2V5LCB2YWx1ZSkgPT4KKCkgPT4KICB2YWx1ZSA9PgogIG1vZGlmaWVyKC4uLmFyZ3MpCiAgZm4gPT4KICBuZXdWYWx1ZSA9PgogIGdldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgKCkgPT4KICByZXQgPSBrZXkgPT4KICByZXQgPSBrZXkgPT4KICByZXQgPSAoKSA9PgogIHNldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgdmFsdWUgPT4KICByZXQgPSAoa2V5LCB2YWx1ZSkgPT4KICByZXQgPSAoa2V5LCB2YWx1ZSkgPT4KICByZXQgPSB2YWx1ZSA9PgogIGdldHRlcnNldHRlcih0YXJnZXQsIC4uLmFyZ3MpCiAgKC4uLmFyZ3MyKSA9PgogIGZuID0gKC4uLmFyZ3MpID0+CiAgZm4gPSAoLi4uYXJncykgPT4KICBmbiA9ICguLi5hcmdzKSA9PgogIGZuID0gKC4uLmFyZ3MpID0+CiAgKC4uLmFyZ3MyKSA9PgogIGhhc0dldFNldChvYmopCiAgbSA9PgogIG1hcE9iamVjdCh0YXJnZXQpCiAgc2V0OiAoa2V5LCB2YWx1ZSkgPT4KICBnZXQ6IGtleSA9PgogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0UHJvdG90eXBlQ2hhaW4ob2JqLCBsaW1pdCA9IC0xLCBzdGFydCA9IDApCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmosIC4uLnJhbmdlKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgcHJlZCA9IChlbCwgaSkgPT4KICAoZiwgYXJyID0gW10sIGxlbmd0aCA9IGYubGVuZ3RoKSA9PgogICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAoZWwsIGksIGFycikgPT4KICBpdGVtID0+CiAgKGVsLCBpLCBhcnIpID0+CiAgZ2V0RnVuY3Rpb25Bcmd1bWVudHMgPSBmbiA9PgogIChvZmZzZXQgPSAwKSA9PgogIGNvZGUgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgZ2V0QW5zaVN0eWxlcygpCiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGMgPT4KICB2YWx1ZTogaGV4ID0+CiAgY2hhcmFjdGVyID0+CiAgdmFsdWU6IGhleCA9PgogIHZhbHVlOiBjb2RlID0+CiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIHZhbHVlOiBoZXggPT4KICByYW5kSW50KC4uLmFyZ3MpCiAgcmFuZEZsb2F0KG1pbiwgbWF4LCBybmcgPSBNYXRoLnJhbmRvbSkKICByYW5kU3RyKG4sIHNldCA9ICdfMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonLCBybmcgPSBNYXRoLnJhbmRvbSkKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogIGZ1bmN0aW9uKCkKICB2ID0+CiAgcmVwbGFjZVByb3BlcnR5KHZhbHVlKQogIGxhenlQcm9wZXJ0aWVzKG9iaiwgZ2V0dGVyc09iaiwgb3B0cyA9IHt9KQogIGdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGFyZyA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgb3B0ID0+CihhY2MsIGFyZykgPT4KICB0b1VuaXhUaW1lKGRhdGVPYmosIHV0YyA9IGZhbHNlKQogIHVuaXhUaW1lKHV0YyA9IGZhbHNlKQogIGZyb21Vbml4VGltZShlcG9jaCwgdXRjID0gZmFsc2UpCiAgcmFuZ2UoLi4uYXJncykKICAodiwgaykgPT4KICBuID0+CiAgcmVwZWF0ZXIobiwgd2hhdCkKKCkKKCkKICByZXBlYXQobiwgd2hhdCkKICBjaHVua0FycmF5KGFyciwgc2l6ZSkKICBmbiA9IChhLCB2LCBpKSA9PgogIGNhbWVsaXplKHN0ciwgZGVsaW0gPSAnJykKICAobWF0Y2gsIHAxLCBwMiwgb2Zmc2V0KSA9PgogIGRlY2FtZWxpemUoc3RyLCBkZWxpbSA9ICctJykKICBzaG9ydGVuKHN0ciwgbWF4ID0gNDAsIHN1ZmZpeCA9ICcuLi4nKQogIGFycmF5c0luQ29tbW9uKGEpCihpdG0sIGluZHgpID0+CiAgYXJyID0+CiAgYXJyYXlGYWNhZGUocHJvdG8sIGl0ZW1GbiA9IChjb250YWluZXIsIGkpID0+IGNvbnRhaW5lci4KKGkpKQoqa2V5cygpCiplbnRyaWVzKCkKKnZhbHVlcygpCiAgZm9yRWFjaChjYWxsYmFjaywgdGhpc0FyZykKICByZWR1Y2UoY2FsbGJhY2ssIGFjY3UsIHRoaXNBcmcpCiAgbW9kKGEsIGIpCiAgYiA6IG4gPT4KICBwdXNoVW5pcXVlKGFyciwgLi4uYXJncykKICBpbnRlcnNlY3QoYSwgYikKICBzeW1tZXRyaWNEaWZmZXJlbmNlKGEsIGIpCiAgcGFydGl0aW9uKGEsIHNpemUpCiAgZGlmZmVyZW5jZShhLCBiLCBpbmNsdWRlcykKICB4ID0+CiAgeCA9PgogIHggPT4KICB4ID0+CiAgaW50ZXJzZWN0aW9uKGEsIGIpCiAgeCA9PgogIHVuaW9uKGEsIGIsIGVxdWFsaXR5KQAAAAAAAAAArQkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					113,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtCQAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGZkID0+CigpID0+ClJFUEwKICBjb25zdHJ1Y3RvcihuYW1lLCBzaG93X2Jhbm5lciA9IHRydWUpCiAgKCkgPT4KICBhZGRDbGVhbnVwSGFuZGxlcihmbikKKCkgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgZXhpdChleGl0Q29kZSA9IDApCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoc2hvd19iYW5uZXIgPSB0cnVlKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZW5hbWUsIGZzKQooKSA9PgogIGhpc3RvcnlTYXZlKGZpbGVuYW1lLCBmcykKICBsaW5lID0+CiAgbGluZSA9PgogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgc2V0IGhpc3RvcnkoZW50cmllcykKICBnZXQgaGlzdG9yeSgpCiAgaGlzdG9yeVBvcygpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSB0cnVlKQogIGFyZyA9PgogIGFyZyA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CiAgcHJpbnRGdW5jdGlvbihsb2dGbikKICAoLi4uYXJncykgPT4KKCkgPT4KICBxdW90ZWRJbnNlcnQoKQogIHJldmVyc2VTZWFyY2goKQogIGZvcndhcmRTZWFyY2goKQogIHNlYXJjaENiKHBhdHRlcm4pCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1bihiYW5uZXIgPSB0cnVlKQogIHJ1blN5bmMoKQogICgpID0+CigpID0+CiAgc3RvcCgpCiAgc2lnaW50SGFuZGxlcigpCiAgc2tpcFdvcmRCYWNrd2FyZChwb3MpCiAgc2tpcFdvcmRGb3J3YXJkKHBvcykKICB0ZXJtSW5pdCgpCiAgYXJnID0+CiAgKCkgPT4KICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gZnMpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpClJFUEwKUkVQTAogIGZpbGUgPT4KICBtID0+CiAgZXJyb3IgPT4KICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					114,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41399,
								41409
							],
							[
								41672,
								41692
							],
							[
								41705,
								41718
							],
							[
								41736,
								41741
							],
							[
								41766,
								41780
							],
							[
								41817,
								41832
							],
							[
								42226,
								42241
							],
							[
								42429,
								42446
							],
							[
								42761,
								42784
							],
							[
								42849,
								42870
							],
							[
								43053,
								43078
							],
							[
								43781,
								43788
							],
							[
								43841,
								43865
							],
							[
								44130,
								44139
							],
							[
								44227,
								44233
							],
							[
								44286,
								44291
							],
							[
								44346,
								44352
							],
							[
								44478,
								44493
							],
							[
								44561,
								44582
							],
							[
								44733,
								44753
							],
							[
								44924,
								44934
							],
							[
								45327,
								45334
							],
							[
								45474,
								45480
							],
							[
								45513,
								45541
							],
							[
								45630,
								45657
							],
							[
								45735,
								45740
							],
							[
								45849,
								45866
							],
							[
								46038,
								46054
							],
							[
								46394,
								46410
							],
							[
								46876,
								46888
							],
							[
								47104,
								47112
							],
							[
								47670,
								47681
							],
							[
								50409,
								50415
							],
							[
								50454,
								50458
							],
							[
								50499,
								50503
							],
							[
								50536,
								50547
							],
							[
								50581,
								50585
							],
							[
								50625,
								50633
							],
							[
								50738,
								50757
							],
							[
								50849,
								50868
							],
							[
								50930,
								50948
							],
							[
								51040,
								51063
							],
							[
								51464,
								51493
							],
							[
								51552,
								51583
							],
							[
								51740,
								51765
							],
							[
								51874,
								51922
							],
							[
								52210,
								52236
							],
							[
								52465,
								52469
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AQAAAAAAAAAAAAAArQkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					115,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41427,
								41437
							],
							[
								41700,
								41720
							],
							[
								41733,
								41746
							],
							[
								41764,
								41769
							],
							[
								41794,
								41808
							],
							[
								41845,
								41860
							],
							[
								42254,
								42269
							],
							[
								42457,
								42474
							],
							[
								42789,
								42812
							],
							[
								42877,
								42898
							],
							[
								43081,
								43106
							],
							[
								43809,
								43816
							],
							[
								43869,
								43893
							],
							[
								44158,
								44167
							],
							[
								44255,
								44261
							],
							[
								44314,
								44319
							],
							[
								44374,
								44380
							],
							[
								44506,
								44521
							],
							[
								44589,
								44610
							],
							[
								44761,
								44781
							],
							[
								44952,
								44962
							],
							[
								45355,
								45362
							],
							[
								45502,
								45508
							],
							[
								45541,
								45569
							],
							[
								45658,
								45685
							],
							[
								45763,
								45768
							],
							[
								45877,
								45894
							],
							[
								46066,
								46082
							],
							[
								46422,
								46438
							],
							[
								46904,
								46916
							],
							[
								47132,
								47140
							],
							[
								47698,
								47709
							],
							[
								50437,
								50443
							],
							[
								50482,
								50486
							],
							[
								50527,
								50531
							],
							[
								50564,
								50575
							],
							[
								50609,
								50613
							],
							[
								50653,
								50661
							],
							[
								50766,
								50785
							],
							[
								50877,
								50896
							],
							[
								50958,
								50976
							],
							[
								51068,
								51091
							],
							[
								51492,
								51521
							],
							[
								51580,
								51611
							],
							[
								51768,
								51793
							],
							[
								51902,
								51950
							],
							[
								52238,
								52264
							],
							[
								52493,
								52497
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					116,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41427,
								41437
							],
							[
								41700,
								41720
							],
							[
								41733,
								41746
							],
							[
								41764,
								41769
							],
							[
								41794,
								41808
							],
							[
								41845,
								41860
							],
							[
								42254,
								42269
							],
							[
								42457,
								42474
							],
							[
								42789,
								42812
							],
							[
								42877,
								42898
							],
							[
								43081,
								43106
							],
							[
								43809,
								43816
							],
							[
								43869,
								43893
							],
							[
								44158,
								44167
							],
							[
								44255,
								44261
							],
							[
								44314,
								44319
							],
							[
								44374,
								44380
							],
							[
								44506,
								44521
							],
							[
								44589,
								44610
							],
							[
								44761,
								44781
							],
							[
								44952,
								44962
							],
							[
								45355,
								45362
							],
							[
								45502,
								45508
							],
							[
								45541,
								45569
							],
							[
								45658,
								45685
							],
							[
								45763,
								45768
							],
							[
								45877,
								45894
							],
							[
								46066,
								46082
							],
							[
								46422,
								46438
							],
							[
								46904,
								46916
							],
							[
								47132,
								47140
							],
							[
								47698,
								47709
							],
							[
								50437,
								50443
							],
							[
								50482,
								50486
							],
							[
								50527,
								50531
							],
							[
								50564,
								50575
							],
							[
								50609,
								50613
							],
							[
								50653,
								50661
							],
							[
								50766,
								50785
							],
							[
								50877,
								50896
							],
							[
								50958,
								50976
							],
							[
								51068,
								51091
							],
							[
								51492,
								51521
							],
							[
								51580,
								51611
							],
							[
								51768,
								51793
							],
							[
								51902,
								51950
							],
							[
								52238,
								52264
							],
							[
								52493,
								52497
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtCQAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGZkID0+CigpID0+ClJFUEwKICBjb25zdHJ1Y3RvcihuYW1lLCBzaG93X2Jhbm5lciA9IHRydWUpCiAgKCkgPT4KICBhZGRDbGVhbnVwSGFuZGxlcihmbikKKCkgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgZXhpdChleGl0Q29kZSA9IDApCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoc2hvd19iYW5uZXIgPSB0cnVlKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZW5hbWUsIGZzKQooKSA9PgogIGhpc3RvcnlTYXZlKGZpbGVuYW1lLCBmcykKICBsaW5lID0+CiAgbGluZSA9PgogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgc2V0IGhpc3RvcnkoZW50cmllcykKICBnZXQgaGlzdG9yeSgpCiAgaGlzdG9yeVBvcygpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSB0cnVlKQogIGFyZyA9PgogIGFyZyA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CiAgcHJpbnRGdW5jdGlvbihsb2dGbikKICAoLi4uYXJncykgPT4KKCkgPT4KICBxdW90ZWRJbnNlcnQoKQogIHJldmVyc2VTZWFyY2goKQogIGZvcndhcmRTZWFyY2goKQogIHNlYXJjaENiKHBhdHRlcm4pCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1bihiYW5uZXIgPSB0cnVlKQogIHJ1blN5bmMoKQogICgpID0+CigpID0+CiAgc3RvcCgpCiAgc2lnaW50SGFuZGxlcigpCiAgc2tpcFdvcmRCYWNrd2FyZChwb3MpCiAgc2tpcFdvcmRGb3J3YXJkKHBvcykKICB0ZXJtSW5pdCgpCiAgYXJnID0+CiAgKCkgPT4KICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gZnMpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpClJFUEwKUkVQTAogIGZpbGUgPT4KICBtID0+CiAgZXJyb3IgPT4KICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAK0JAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					117,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41425,
								41435
							],
							[
								41698,
								41718
							],
							[
								41731,
								41744
							],
							[
								41762,
								41767
							],
							[
								41792,
								41806
							],
							[
								41843,
								41858
							],
							[
								42252,
								42267
							],
							[
								42455,
								42472
							],
							[
								42787,
								42810
							],
							[
								42875,
								42896
							],
							[
								43079,
								43104
							],
							[
								43807,
								43814
							],
							[
								43867,
								43891
							],
							[
								44156,
								44165
							],
							[
								44253,
								44259
							],
							[
								44312,
								44317
							],
							[
								44372,
								44378
							],
							[
								44504,
								44519
							],
							[
								44587,
								44608
							],
							[
								44759,
								44779
							],
							[
								44950,
								44960
							],
							[
								45353,
								45360
							],
							[
								45500,
								45506
							],
							[
								45539,
								45567
							],
							[
								45656,
								45683
							],
							[
								45761,
								45766
							],
							[
								45875,
								45892
							],
							[
								46064,
								46080
							],
							[
								46420,
								46436
							],
							[
								46902,
								46914
							],
							[
								47130,
								47138
							],
							[
								47696,
								47707
							],
							[
								50435,
								50441
							],
							[
								50480,
								50484
							],
							[
								50525,
								50529
							],
							[
								50562,
								50573
							],
							[
								50607,
								50611
							],
							[
								50651,
								50659
							],
							[
								50764,
								50783
							],
							[
								50875,
								50894
							],
							[
								50956,
								50974
							],
							[
								51066,
								51089
							],
							[
								51490,
								51519
							],
							[
								51578,
								51609
							],
							[
								51766,
								51791
							],
							[
								51900,
								51948
							],
							[
								52236,
								52262
							],
							[
								52491,
								52495
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					118,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/streams.js",
						"symkeys":
						[
							[
								192,
								257
							],
							[
								323,
								340
							],
							[
								556,
								572
							],
							[
								1079,
								1093
							],
							[
								1193,
								1237
							],
							[
								1303,
								1320
							],
							[
								1550,
								1574
							],
							[
								1838,
								1855
							],
							[
								1949,
								1962
							],
							[
								2069,
								2086
							],
							[
								2115,
								2136
							],
							[
								2170,
								2180
							],
							[
								2296,
								2317
							],
							[
								2595,
								2602
							]
						],
						"symlist":
						[
							" function FileSystemReadableFileStream(path, bufSize = 1024 * 64)",
							"start(controller)",
							"pull(controller)",
							"cancel(reason)",
							" function FileSystemWritableFileStream(path)",
							"start(controller)",
							"write(chunk, controller)",
							"close(controller)",
							"abort(reason)",
							"TextEncoderStream",
							"constructor(encoding)",
							"start(ctl)",
							"transform(chunk, ctl)",
							"flush()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtCQAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGZkID0+CigpID0+ClJFUEwKICBjb25zdHJ1Y3RvcihuYW1lLCBzaG93X2Jhbm5lciA9IHRydWUpCiAgKCkgPT4KICBhZGRDbGVhbnVwSGFuZGxlcihmbikKKCkgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgZXhpdChleGl0Q29kZSA9IDApCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoc2hvd19iYW5uZXIgPSB0cnVlKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZW5hbWUsIGZzKQooKSA9PgogIGhpc3RvcnlTYXZlKGZpbGVuYW1lLCBmcykKICBsaW5lID0+CiAgbGluZSA9PgogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgc2V0IGhpc3RvcnkoZW50cmllcykKICBnZXQgaGlzdG9yeSgpCiAgaGlzdG9yeVBvcygpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSB0cnVlKQogIGFyZyA9PgogIGFyZyA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CiAgcHJpbnRGdW5jdGlvbihsb2dGbikKICAoLi4uYXJncykgPT4KKCkgPT4KICBxdW90ZWRJbnNlcnQoKQogIHJldmVyc2VTZWFyY2goKQogIGZvcndhcmRTZWFyY2goKQogIHNlYXJjaENiKHBhdHRlcm4pCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1bihiYW5uZXIgPSB0cnVlKQogIHJ1blN5bmMoKQogICgpID0+CigpID0+CiAgc3RvcCgpCiAgc2lnaW50SGFuZGxlcigpCiAgc2tpcFdvcmRCYWNrd2FyZChwb3MpCiAgc2tpcFdvcmRGb3J3YXJkKHBvcykKICB0ZXJtSW5pdCgpCiAgYXJnID0+CiAgKCkgPT4KICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gZnMpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpClJFUEwKUkVQTAogIGZpbGUgPT4KICBtID0+CiAgZXJyb3IgPT4KICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAD0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					121,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_streams.js",
						"symkeys":
						[
							[
								251,
								279
							]
						],
						"symlist":
						[
							"async function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA9AQAARmlsZVN5c3RlbVJlYWRhYmxlRmlsZVN0cmVhbShwYXRoLCBidWZTaXplID0gMTAyNCAqNjQpCiAgc3RhcnQoY29udHJvbGxlcikKICBwdWxsKGNvbnRyb2xsZXIpCiAgY2FuY2VsKHJlYXNvbikKRmlsZVN5c3RlbVdyaXRhYmxlRmlsZVN0cmVhbShwYXRoKQogIHN0YXJ0KGNvbnRyb2xsZXIpCiAgd3JpdGUoY2h1bmssIGNvbnRyb2xsZXIpCiAgY2xvc2UoY29udHJvbGxlcikKICBhYm9ydChyZWFzb24pClRleHRFbmNvZGVyU3RyZWFtCiAgY29uc3RydWN0b3IoZW5jb2RpbmcpCiAgc3RhcnQoY3RsKQogIHRyYW5zZm9ybShjaHVuaywgY3RsKQogIGZsdXNoKCkAAAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stream.js",
						"symkeys":
						[
							[
								336,
								369
							],
							[
								906,
								959
							],
							[
								1085,
								1107
							],
							[
								1535,
								1544
							],
							[
								1632,
								1647
							]
						],
						"symlist":
						[
							"async function ReadStream(stream)",
							"async function WriteStream(stream, fn = writer => {})",
							"function main(...args)",
							"result =>",
							"async writer =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAABhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					123,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAAAAUmVhZFN0cmVhbShzdHJlYW0pCldyaXRlU3RyZWFtKHN0cmVhbSwgZm4gPSB3cml0ZXIgPT4ge30pCiAgbWFpbiguLi5hcmdzKQogIHJlc3VsdCA9PgogIHdyaXRlciA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/repl.js",
			"settings":
			{
				"buffer_size": 52549,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"insert",
					{
						"characters": "if(typeof"
					},
					"CQAAAGuhAAAAAAAAbKEAAAAAAAAAAAAAbKEAAAAAAABtoQAAAAAAAAAAAABtoQAAAAAAAG6hAAAAAAAAAAAAAG6hAAAAAAAAb6EAAAAAAAAAAAAAb6EAAAAAAABwoQAAAAAAAAAAAABwoQAAAAAAAHGhAAAAAAAAAAAAAHGhAAAAAAAAcqEAAAAAAAAAAAAAcqEAAAAAAABzoQAAAAAAAAAAAABzoQAAAAAAAHShAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAa6EAAAAAAABroQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAHShAAAAAAAAdaEAAAAAAAAAAAAAdaEAAAAAAAB2oQAAAAAAAAAAAAB2oQAAAAAAAHehAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdKEAAAAAAAB0oQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAAHehAAAAAAAAeKEAAAAAAAAAAAAAeKEAAAAAAAB5oQAAAAAAAAAAAAB5oQAAAAAAAHqhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAd6EAAAAAAAB3oQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " 'function')"
					},
					"DAAAAHqhAAAAAAAAe6EAAAAAAAAAAAAAe6EAAAAAAAB8oQAAAAAAAAAAAAB8oQAAAAAAAH2hAAAAAAAAAAAAAH2hAAAAAAAAfqEAAAAAAAAAAAAAfqEAAAAAAAB/oQAAAAAAAAAAAAB/oQAAAAAAAIChAAAAAAAAAAAAAIChAAAAAAAAgaEAAAAAAAAAAAAAgaEAAAAAAACCoQAAAAAAAAAAAACCoQAAAAAAAIOhAAAAAAAAAAAAAIOhAAAAAAAAhKEAAAAAAAAAAAAAhKEAAAAAAACFoQAAAAAAAAAAAACFoQAAAAAAAIahAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeqEAAAAAAAB6oQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIahAAAAAAAAh6EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhqEAAAAAAACGoQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"right_delete",
					null,
					"AQAAAHihAAAAAAAAeKEAAAAAAAABAAAAIQ",
					"AQAAAAAAAAABAAAAeKEAAAAAAAB4oQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAHihAAAAAAAAeaEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeKEAAAAAAAB4oQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "string"
					},
					"BwAAAHyhAAAAAAAAfaEAAAAAAAAAAAAAfaEAAAAAAAB9oQAAAAAAAAgAAABmdW5jdGlvbn2hAAAAAAAAfqEAAAAAAAAAAAAAfqEAAAAAAAB/oQAAAAAAAAAAAAB/oQAAAAAAAIChAAAAAAAAAAAAAIChAAAAAAAAgaEAAAAAAAAAAAAAgaEAAAAAAACCoQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfKEAAAAAAACEoQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/streams.js",
			"settings":
			{
				"buffer_size": 2704,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/test_streams.js",
			"settings":
			{
				"buffer_size": 1173,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/test_stream.js",
			"settings":
			{
				"buffer_size": 1937,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libarchive",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/timers.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/css3-selectors.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_predicate.js",
		"/home/roman/Schreibtisch/Ophtalmologische Gruppen.txt",
		"/home/roman/Schreibtisch/discogs-shipping-policies.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/.config/sublime-text/Packages/JsPrettier/JsPrettier.sublime-settings",
		"/home/roman/.config/sublime-text/Packages/User/JsPrettier.sublime-settings",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/mmap-win32.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_treewalker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_css3_selectors.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/modules.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/c-mcp3301/fast-arduino-lib/cores/fastarduino/devices/mcp3001.h",
		"/home/roman/Projects/c-mcp3301/mcp300x/mcp300x.c",
		"/home/roman/Projects/c-mcp3301/mcp3001/src/mcp3001.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/c-mcp3301/fast-arduino-lib/cores/fastarduino/devices/mcp3x0x.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/deep.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml/write.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tree_walker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml/read.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/predicate.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/require.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tree-walker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_textcode.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml-write.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml-parse.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_css3_selector.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/callgrind.out.142973",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/src/tutf8e.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e/iso_8859_15.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/ecmascript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/csv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/include/libutf.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/src/libutf.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/debug.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stream.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.c"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,-*/inst/*,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"readdirSync",
			"js_function_name",
			"exception",
			");\n",
			"Factory",
			"GetNode",
			"class NodeList",
			"Comment",
			"GetNode",
			"'fac'",
			"NodeFactory",
			"NodeFactory\\.for",
			"NodeFactory",
			"[^a-z]Factory",
			"get children",
			"children",
			"[^a-z]Factory",
			" Factory",
			"Factory\\(",
			"lazyProperties",
			"\\.get\\(",
			"\\.get",
			"gettersetter",
			"apper",
			"new TokenList",
			"NodeMap",
			"Factory",
			"createElement",
			"wrapElement",
			"js_deep_predicate",
			"inspect\\(",
			"js_module_",
			"_EQUAL:",
			"PROPERTY:",
			"js_deep_predicate",
			"^property_enumeration_path",
			"property_enumeration_path",
			"js_deep_predicate",
			"STRING:",
			"predicates;",
			"_PROPERTY:",
			"STRING:",
			"js_arguments_shift\\(",
			"SHIFT:",
			"PREDICATE_SLICE",
			"get path",
			"js_arguments_shift\\(args\\)",
			"js_arguments_shift",
			"PREDICATE_AND",
			"query",
			"applyPath",
			"get path",
			"querySelectorAll",
			"parseSelector",
			"js_socket_new_proto",
			"js_socket_create",
			"js_async_socket_constructor",
			"js_async_socket_proto_funcs",
			"js_socket_async_wait",
			"_data",
			"set_handler",
			"\"setReadHandler",
			"readSync",
			"reduce",
			"callIt",
			"a",
			"callIt",
			"toNumber",
			"Array.isArray",
			"getRows",
			"rows",
			"Iterator",
			"getRows",
			"rows",
			"getterSet",
			"\\.value",
			"\\.get",
			"\\.strip",
			"getText =",
			"getPriceText",
			"getPrice",
			", input",
			"getElementFn",
			"element",
			"e",
			"getSelected",
			"getSelectedText",
			"re",
			"sliceFn",
			"sliceFn =",
			"toArrayFn",
			"toArrayFn =",
			"getElement",
			"globalThis\\.",
			"^([A-Za-z0-9_]+) =",
			"^[\\t ][\\t ]?[A-Za-z0-9_]+ =",
			"\\t",
			"^[\\t ][\\t ]?[A-Za-z0-9_]+ =",
			"getterSetter",
			"propertyPr",
			"propertyProxy",
			"getSet",
			"toStyle",
			"getPropertyValu",
			"getPropertyValue",
			"chainFn",
			"getElementFn",
			"toStyle",
			"fromArrayLike",
			"defineEn",
			"fromArrayLike",
			"t\\(",
			"is_arraybuffer",
			"is_array",
			"unique",
			"difference",
			"child_proc",
			"LIBDL",
			"is_array",
			"js_free",
			")))\n",
			"js_mallocz",
			"return (.*)",
			"frames",
			"->predicate",
			"predicate",
			"FILTER_ACCEPT",
			"class Doc"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"js_arguments_at\\(args, 1\\)",
			"js_arguments_at\\(args, 0\\)",
			"js_arguments_at\\(args, 1\\)",
			"js_arguments_at\\(args, 0\\)",
			"js_arguments_at\\(args, i\\)",
			"getSelectPos",
			"getSelectText",
			"g.",
			"globalThis.\\1 = ",
			"  ",
			"ret = \\1\\nbreak;",
			"ret = \\1",
			"ret = \\1\\nbreak;",
			"->filter",
			"\\1//console",
			"}\\n\\n\\1",
			"writeXML",
			"readXML",
			"fs.readFileSync",
			"process.release.name == 'quickjs' ? requireModule",
			"process.release.name == 'quickjs' ? requireModule(",
			"typeof \\1 == 'function'",
			"typeof(\\1) == 'function'",
			"inspect",
			"writeXML",
			"readXML",
			"(typeof \\1 == 'object' && \\1 != null)",
			"typeof \\1 == 'function'",
			"is\\1",
			"return TYPE_\\1",
			";\\\\n\" \"",
			"timers.",
			"",
			"\\1\\2(",
			"\\1function \\2(",
			"\\1//console.",
			"createModule",
			"static \\1\\2 {",
			"static ",
			"pnws",
			"sel = \\1;",
			"js_is_array",
			"if(debug_module_loader >= 2)",
			"INSPECT_LEVEL(opts, depth)",
			"BOOL compact =",
			"INSPECT_IS_COMPACT\\(opts, depth\\)",
			"path_skip_component(\\1, \\2, 0);",
			"-18s",
			"%-\\1s",
			"__FUNCTION__",
			".value",
			"->value",
			"\\1//printf",
			"stream",
			"_ENDIANNESS",
			"_ENDIAN",
			"be'",
			"le'",
			"'utf-",
			"-BE'",
			"'UTF-",
			"endian",
			"->endian == BIG",
			"transform_terminate",
			"transform_",
			"\\1",
			"type",
			"js_misc_duparraybuffer",
			"out.puts",
			"putline",
			"\\1: \\2,",
			"",
			"{ return",
			"\\\\\"",
			"\\1if(debug_module_loader) \\2",
			"",
			"BuiltinModule",
			"Text.store",
			"Tokens",
			"tokenModifiers",
			"xml_debug",
			"\\1",
			"xml_debug",
			"WRITABLE_GET_WRITER",
			"WRITABLE_CLOSE",
			"struct stream_reader",
			"readable_cancel",
			"READABLE_CANCEL",
			"readable_unlock",
			"writable_get_writer",
			"writable_\\1lock",
			"READABLE_",
			"writ",
			"FUNC_CLOSE",
			"js_reader_method",
			"js_writer_method",
			"js_stream_method",
			"STREAM_LOCKED",
			"->reader",
			"\"StreamReader",
			"Reader",
			"METHOD_",
			"array",
			"funcs.array",
			"js_resolve_functions",
			"js_resolvefunctions",
			"funcs[1]",
			"funcs[0]",
			"js_resolvingfunctions_free",
			"js_resolvingfunctions_ree",
			"length",
			"Chunk",
			"loc",
			"prevLength",
			"prevOffset",
			"compact(\\1)",
			"js_location_create",
			"lexer_token(",
			"token_lex(",
			"LOCATION_PROP_CHAROFFSET",
			"loc->",
			"\\1_release",
			"token",
			"ALLOC_PTR",
			"ALLOC_BLOCK(p)",
			"ALLOC_BLOCK_SIZE",
			"",
			"const char* str\\1"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"color_scheme": "Packages/Outline/outline-Dark.hidden-tmTheme",
							"current_file": null,
							"function_name_status_row": 4,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649614817.28,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/repl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52549,
						"regions":
						{
						},
						"selection":
						[
							[
								41346,
								41346
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1544,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649614810.07,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 30345.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/streams.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2704,
						"regions":
						{
						},
						"selection":
						[
							[
								1193,
								1237
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 41,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649614817.3,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "tests/test_streams.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1173,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649614823.95,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "tests/test_stream.js",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1937,
						"regions":
						{
						},
						"selection":
						[
							[
								845,
								845
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 26,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649615043.31,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.792447636134,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139621680902448)":
	{
		"height": 0.0
	},
	"output.Protocol(139700989780224)":
	{
		"height": 0.0
	},
	"output.Protocol(139713493134064)":
	{
		"height": 0.0
	},
	"output.Protocol(139717986633232)":
	{
		"height": 0.0
	},
	"output.Protocol(139737089962816)":
	{
		"height": 0.0
	},
	"output.Protocol(139742375937312)":
	{
		"height": 0.0
	},
	"output.Protocol(139743392563408)":
	{
		"height": 0.0
	},
	"output.Protocol(139869175351088)":
	{
		"height": 0.0
	},
	"output.Protocol(140020109919472)":
	{
		"height": 0.0
	},
	"output.Protocol(140057995247920)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752673856)":
	{
		"height": 0.0
	},
	"output.Protocol(140156677514432)":
	{
		"height": 0.0
	},
	"output.Protocol(140172266688720)":
	{
		"height": 0.0
	},
	"output.Protocol(140190208797904)":
	{
		"height": 0.0
	},
	"output.Protocol(140274144834032)":
	{
		"height": 0.0
	},
	"output.Protocol(140329701419328)":
	{
		"height": 0.0
	},
	"output.Protocol(140434608857040)":
	{
		"height": 0.0
	},
	"output.Protocol(140444770579072)":
	{
		"height": 0.0
	},
	"output.Protocol(140481508459424)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873537696)":
	{
		"height": 0.0
	},
	"output.Protocol(140517145188336)":
	{
		"height": 0.0
	},
	"output.Protocol(140557325510688)":
	{
		"height": 0.0
	},
	"output.Protocol(140569677099648)":
	{
		"height": 0.0
	},
	"output.Protocol(140571426803920)":
	{
		"height": 0.0
	},
	"output.Protocol(140585353818944)":
	{
		"height": 0.0
	},
	"output.Protocol(140589364043584)":
	{
		"height": 0.0
	},
	"output.Protocol(140603239164464)":
	{
		"height": 0.0
	},
	"output.Protocol(140614610715648)":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"deep.c",
				"quickjs-deep.c"
			],
			[
				"prop",
				"src/property-enumeration.c"
			],
			[
				"proper",
				"include/property-enumeration.h"
			],
			[
				"test_dom",
				"tests/test_dom.js"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"predicate.h",
				"include/predicate.h"
			],
			[
				"predicate.c",
				"src/predicate.c"
			],
			[
				"quickjs-pred",
				"quickjs-predicate.c"
			],
			[
				"test_pred",
				"tests/test_predicate.js"
			],
			[
				"utils.h",
				"include/utils.h"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"char-u",
				"include/char-utils.h"
			],
			[
				"vector.h",
				"include/vector.h"
			],
			[
				"path.h",
				"include/path.h"
			],
			[
				"vecto",
				"src/vector.c"
			],
			[
				"events",
				"lib/events.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"extract",
				"extract-structs.js"
			],
			[
				"test_lexe",
				"tests/test_lexer.js"
			],
			[
				"test_css",
				"tests/test_css3_selectors.js"
			],
			[
				"events.j",
				"lib/events.js"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			],
			[
				"qjsm",
				"src/qjsm.c"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"resolve-import",
				"resolve-imports.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"require.js",
				"lib/require.js"
			],
			[
				"test_do",
				"tests/test_dom.js"
			],
			[
				"css3-se",
				"lib/css3-selectors.js"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"console.",
				"lib/console.js"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_dom.js",
				"tests/test_dom.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"write.js",
				"lib/xml/write.js"
			],
			[
				"css-",
				"lib/css3-selectors.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"resolve-impo",
				"resolve-imports.js"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"location.h",
				"include/location.h"
			],
			[
				"l",
				"quickjs-lexer.c"
			],
			[
				"path.c",
				"src/path.c"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"repl.j",
				"lib/repl.js"
			],
			[
				"js-u",
				"src/js-utils.c"
			],
			[
				"js-ut",
				"include/js-utils.h"
			],
			[
				"streams.js",
				"tests/test_streams.js"
			],
			[
				"buffer",
				"src/buffer-utils.c"
			],
			[
				"test_te",
				"tests/test_textcode.js"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"extract-str",
				"extract-structs.js"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"list-exp",
				"list-exports.js"
			],
			[
				"token.c",
				"token.c"
			],
			[
				"quickjs-le",
				"quickjs-lexer.c"
			],
			[
				"jsutil",
				"js-utils.c"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.h"
			],
			[
				"quickjs-location",
				"quickjs-location.h"
			],
			[
				"quickjs-loca",
				"quickjs-location.c"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"char-ut",
				"char-utils.h"
			],
			[
				"buff",
				"buffer-utils.h"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"location",
				"location.c"
			],
			[
				"quickjs-child",
				"quickjs-child-process.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"CMakeLi",
				"CMakeLists.txt"
			],
			[
				"defines.h",
				"defines.h"
			],
			[
				"queue.c",
				"queue.c"
			],
			[
				"extend",
				"lib/extendArray.js"
			],
			[
				"quickjs-sockets",
				"quickjs-sockets.c"
			],
			[
				"lexer",
				"quickjs-lexer.c"
			],
			[
				"buffer-ut",
				"buffer-utils.h"
			],
			[
				"ringbuf",
				"ringbuffer.h"
			],
			[
				"debug.h",
				"debug.h"
			],
			[
				"debug.c",
				"debug.c"
			],
			[
				"quickjs-lexer.c",
				"quickjs-lexer.c"
			],
			[
				"quickjs-loc",
				"quickjs-location.c"
			],
			[
				"xml.c",
				"quickjs-xml.c"
			],
			[
				"test-dia",
				"build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"resol",
				"resolve-imports.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"quickjs-mis",
				"quickjs-misc.c"
			],
			[
				"location.c",
				"quickjs-location.c"
			],
			[
				"extra",
				"extract-structs.js"
			],
			[
				"-inspe",
				"quickjs-inspect.c"
			],
			[
				"vector",
				"vector.h"
			],
			[
				"dom.j",
				"lib/dom.js"
			],
			[
				"res",
				"resolve-imports.js"
			],
			[
				"lexre",
				"lexer.c"
			],
			[
				"lexer.c",
				"quickjs-lexer.c"
			],
			[
				"pointer",
				"pointer.c"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"archive",
				"quickjs-archive.c"
			],
			[
				"pointer.c",
				"quickjs-pointer.c"
			],
			[
				"spect.c",
				"quickjs-inspect.c"
			],
			[
				"blob.c",
				"quickjs-blob.c"
			],
			[
				"repea",
				"quickjs-repeater.c"
			],
			[
				"loca",
				"quickjs-location.c"
			],
			[
				"bjson.c",
				"quickjs-bjson.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"predi",
				"predicate.h"
			],
			[
				"virtua",
				"virtual-properties.c"
			],
			[
				"pointre",
				"pointer.c"
			],
			[
				"child-",
				"child-process.c"
			],
			[
				"child-pro",
				"quickjs-child-process.c"
			],
			[
				"gpio.c",
				"quickjs-gpio.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"ointer.h",
				"pointer.h"
			],
			[
				"defin",
				"defines.h"
			],
			[
				"defines",
				"defines.h"
			],
			[
				"cutils.h",
				"char-utils.h"
			],
			[
				"debu",
				"debug.h"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"test_le",
				"tests/test_lexer.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"test",
				"tests/test_stack.js"
			],
			[
				"jsutils",
				"CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 244.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
