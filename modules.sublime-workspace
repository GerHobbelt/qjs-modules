{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cFunc",
				"cFuncListObjects"
			],
			[
				"isC",
				"isCFuncCall"
			],
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_Set",
				"JS_SetProperty"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					712,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					713,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					714,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					715,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvQEAAE1heWJlTnVtYmVyID0gdCA9PgpOb25XUyA9IHQgPT4KVHJpbVdTID0gdCA9PgooYWNjLCBpdGVtKSA9PgpMZXhlbWUgPSB0ID0+CldTID0gdCA9PgpQYXJlbiA9ICh0b2tsaXN0LCB0ID0gdG9rID0+IHRvay5sZXhlbWUpID0+CiAgdG9rID0+CiAgdG9rID0+CkNvbW1hTGlzdCA9ICh0b2tsaXN0LCB0ID0gdG9rID0+IHRvay5sZXhlbWUpID0+CkNvbW1hSm9pbiA9IGxpc3QgPT4KKGFjYywgaXRlbSkgPT4KICBwYXJzZShsZXhlciwgZm4gPSAodG9rLCBhcnIpID0+IHt9LCAuLi5hcmdzKQogIG1haW4oLi4uYXJncykKICBmaWxlID0+CiAgKCkgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4KKGFjYywgdG9rZW4pID0+CiAgbCA9Pgoocm93LCBpKSA9PgogIHQgPT4KICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4AAAAAAAAAAL0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					716,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					717,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					718,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					719,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					720,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					721,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					722,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AQAAAAAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					723,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					724,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
						"symkeys":
						[
							[
								194,
								197
							],
							[
								487,
								496
							],
							[
								754,
								762
							],
							[
								967,
								977
							],
							[
								1128,
								1137
							],
							[
								1258,
								1270
							],
							[
								1392,
								1402
							],
							[
								1569,
								1586
							],
							[
								1666,
								1678
							],
							[
								1843,
								1854
							],
							[
								2067,
								2078
							],
							[
								2458,
								2477
							],
							[
								4700,
								4714
							],
							[
								5901,
								5916
							],
							[
								6357,
								6374
							],
							[
								7167,
								7179
							],
							[
								8038,
								8052
							],
							[
								8082,
								8096
							],
							[
								8146,
								8160
							]
						],
						"symlist":
						[
							"—Ⓜ– max ( ) … — macro function",
							"—Ⓕ– blob_init ( ) { … } — function",
							"—Ⓕ– blob_new ( ) { … } — function",
							"—Ⓕ– blob_write ( ) { … } — function",
							"—Ⓕ– blob_free ( ) { … } — function",
							"—Ⓕ– blob_free_rt ( ) { … } — function",
							"—Ⓕ– blob_input ( ) { … } — function",
							"—Ⓕ– js_blob_free_func ( ) { … } — function",
							"—Ⓕ– js_blob_wrap ( ) { … } — function",
							"—Ⓕ– js_blob_new ( ) { … } — function",
							"—Ⓕ– js_blob_get ( ) { … } — function",
							"—Ⓕ– js_blob_constructor ( ) { … } — function",
							"—Ⓕ– js_blob_method ( ) { … } — function",
							"—Ⓕ– js_blob_inspect ( ) { … } — function",
							"—Ⓕ– js_blob_finalizer ( ) { … } — function",
							"—Ⓕ– js_blob_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAA0AIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					725,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACGAwAA4oCU4pOC4oCTIG1heCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9iX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9pbnB1dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYmxvYl93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYmxvYl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19ibG9iX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19ibG9iX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYmxvYl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBKU19JTklUX01PRFVMRSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAL0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					726,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					727,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					728,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6012,
								6018
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					729,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6046,
								6052
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					730,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6046,
								6052
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					731,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6080,
								6086
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvQEAAE1heWJlTnVtYmVyID0gdCA9PgpOb25XUyA9IHQgPT4KVHJpbVdTID0gdCA9PgooYWNjLCBpdGVtKSA9PgpMZXhlbWUgPSB0ID0+CldTID0gdCA9PgpQYXJlbiA9ICh0b2tsaXN0LCB0ID0gdG9rID0+IHRvay5sZXhlbWUpID0+CiAgdG9rID0+CiAgdG9rID0+CkNvbW1hTGlzdCA9ICh0b2tsaXN0LCB0ID0gdG9rID0+IHRvay5sZXhlbWUpID0+CkNvbW1hSm9pbiA9IGxpc3QgPT4KKGFjYywgaXRlbSkgPT4KICBwYXJzZShsZXhlciwgZm4gPSAodG9rLCBhcnIpID0+IHt9LCAuLi5hcmdzKQogIG1haW4oLi4uYXJncykKICBmaWxlID0+CiAgKCkgPT4KICAoKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgoocywgdCkgPT4KKGFjYywgdG9rZW4pID0+CiAgbCA9Pgoocm93LCBpKSA9PgogIHQgPT4KICB0b2sgPT4KICB0b2sgPT4KICB0b2sgPT4AAAAAAAAAAL0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					732,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					733,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6080,
								6086
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AQAAAAAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					734,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6079,
								6085
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					735,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6079,
								6085
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					736,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6079,
								6085
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					737,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6079,
								6085
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					738,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6079,
								6085
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					739,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6079,
								6085
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					740,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6079,
								6085
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					741,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6079,
								6085
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					742,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6079,
								6085
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					743,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
						"symkeys":
						[
							[
								194,
								197
							],
							[
								487,
								496
							],
							[
								754,
								762
							],
							[
								967,
								977
							],
							[
								1128,
								1137
							],
							[
								1258,
								1270
							],
							[
								1392,
								1402
							],
							[
								1569,
								1586
							],
							[
								1666,
								1678
							],
							[
								1843,
								1854
							],
							[
								2067,
								2078
							],
							[
								2458,
								2477
							],
							[
								4700,
								4714
							],
							[
								5901,
								5916
							],
							[
								6357,
								6374
							],
							[
								7167,
								7179
							],
							[
								8038,
								8052
							],
							[
								8082,
								8096
							],
							[
								8146,
								8160
							]
						],
						"symlist":
						[
							"—Ⓜ– max ( ) … — macro function",
							"—Ⓕ– blob_init ( ) { … } — function",
							"—Ⓕ– blob_new ( ) { … } — function",
							"—Ⓕ– blob_write ( ) { … } — function",
							"—Ⓕ– blob_free ( ) { … } — function",
							"—Ⓕ– blob_free_rt ( ) { … } — function",
							"—Ⓕ– blob_input ( ) { … } — function",
							"—Ⓕ– js_blob_free_func ( ) { … } — function",
							"—Ⓕ– js_blob_wrap ( ) { … } — function",
							"—Ⓕ– js_blob_new ( ) { … } — function",
							"—Ⓕ– js_blob_get ( ) { … } — function",
							"—Ⓕ– js_blob_constructor ( ) { … } — function",
							"—Ⓕ– js_blob_method ( ) { … } — function",
							"—Ⓕ– js_blob_inspect ( ) { … } — function",
							"—Ⓕ– js_blob_finalizer ( ) { … } — function",
							"—Ⓕ– js_blob_init ( ) { … } — function",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAA0AIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					744,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6065,
								6071
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACGAwAA4oCU4pOC4oCTIG1heCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9iX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvYl9pbnB1dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfZnJlZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYmxvYl93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYmxvYl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19ibG9iX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19ibG9iX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Jsb2JfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYmxvYl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBKU19JTklUX01PRFVMRSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAL0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					745,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6065,
								6071
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					746,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					747,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								303,
								321
							],
							[
								390,
								402
							],
							[
								472,
								485
							],
							[
								497,
								511
							],
							[
								632,
								645
							],
							[
								709,
								718
							],
							[
								750,
								793
							],
							[
								828,
								834
							],
							[
								885,
								891
							],
							[
								1040,
								1087
							],
							[
								1309,
								1328
							],
							[
								1341,
								1355
							],
							[
								1409,
								1462
							],
							[
								1708,
								1730
							],
							[
								2085,
								2093
							],
							[
								2168,
								2174
							],
							[
								2235,
								2241
							],
							[
								3233,
								3247
							],
							[
								3405,
								3419
							],
							[
								3506,
								3520
							],
							[
								3599,
								3608
							],
							[
								4310,
								4325
							],
							[
								4565,
								4569
							],
							[
								4655,
								4666
							],
							[
								4748,
								4753
							],
							[
								4795,
								4801
							],
							[
								5747,
								5753
							],
							[
								6065,
								6071
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AQAAAAAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					748,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								310,
								328
							],
							[
								397,
								409
							],
							[
								479,
								492
							],
							[
								504,
								518
							],
							[
								639,
								652
							],
							[
								716,
								725
							],
							[
								757,
								800
							],
							[
								835,
								841
							],
							[
								892,
								898
							],
							[
								1047,
								1094
							],
							[
								1316,
								1335
							],
							[
								1348,
								1362
							],
							[
								1416,
								1469
							],
							[
								1715,
								1737
							],
							[
								2092,
								2100
							],
							[
								2175,
								2181
							],
							[
								2242,
								2248
							],
							[
								3240,
								3254
							],
							[
								3412,
								3426
							],
							[
								3513,
								3527
							],
							[
								3606,
								3615
							],
							[
								4317,
								4332
							],
							[
								4572,
								4576
							],
							[
								4662,
								4673
							],
							[
								4755,
								4760
							],
							[
								4802,
								4808
							],
							[
								5754,
								5760
							],
							[
								6072,
								6078
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					749,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								310,
								328
							],
							[
								397,
								409
							],
							[
								479,
								492
							],
							[
								504,
								518
							],
							[
								639,
								652
							],
							[
								716,
								725
							],
							[
								757,
								800
							],
							[
								835,
								841
							],
							[
								892,
								898
							],
							[
								1047,
								1094
							],
							[
								1316,
								1335
							],
							[
								1348,
								1362
							],
							[
								1416,
								1469
							],
							[
								1715,
								1737
							],
							[
								2092,
								2100
							],
							[
								2175,
								2181
							],
							[
								2242,
								2248
							],
							[
								3240,
								3254
							],
							[
								3412,
								3426
							],
							[
								3513,
								3527
							],
							[
								3606,
								3615
							],
							[
								4317,
								4332
							],
							[
								4572,
								4576
							],
							[
								4662,
								4673
							],
							[
								4755,
								4760
							],
							[
								4802,
								4808
							],
							[
								5754,
								5760
							],
							[
								6072,
								6078
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					750,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					751,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								310,
								328
							],
							[
								397,
								409
							],
							[
								479,
								492
							],
							[
								504,
								518
							],
							[
								639,
								652
							],
							[
								716,
								725
							],
							[
								757,
								800
							],
							[
								835,
								841
							],
							[
								892,
								898
							],
							[
								1047,
								1094
							],
							[
								1316,
								1335
							],
							[
								1348,
								1362
							],
							[
								1416,
								1469
							],
							[
								1715,
								1737
							],
							[
								2092,
								2100
							],
							[
								2175,
								2181
							],
							[
								2242,
								2248
							],
							[
								3240,
								3254
							],
							[
								3412,
								3426
							],
							[
								3513,
								3527
							],
							[
								3606,
								3615
							],
							[
								4317,
								4332
							],
							[
								4572,
								4576
							],
							[
								4662,
								4673
							],
							[
								4755,
								4760
							],
							[
								4802,
								4808
							],
							[
								5754,
								5760
							],
							[
								6072,
								6078
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AQAAAAAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					752,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								310,
								328
							],
							[
								397,
								409
							],
							[
								479,
								492
							],
							[
								504,
								518
							],
							[
								639,
								652
							],
							[
								716,
								725
							],
							[
								757,
								800
							],
							[
								835,
								841
							],
							[
								892,
								898
							],
							[
								1047,
								1094
							],
							[
								1316,
								1335
							],
							[
								1348,
								1362
							],
							[
								1416,
								1469
							],
							[
								1715,
								1737
							],
							[
								2092,
								2100
							],
							[
								2175,
								2181
							],
							[
								2242,
								2248
							],
							[
								3240,
								3254
							],
							[
								3412,
								3426
							],
							[
								3513,
								3527
							],
							[
								3606,
								3615
							],
							[
								4317,
								4332
							],
							[
								4572,
								4576
							],
							[
								4662,
								4673
							],
							[
								4755,
								4760
							],
							[
								4802,
								4808
							],
							[
								5754,
								5760
							],
							[
								6074,
								6080
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					753,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								59,
								71
							],
							[
								121,
								137
							],
							[
								478,
								495
							],
							[
								527,
								550
							],
							[
								624,
								641
							],
							[
								679,
								696
							],
							[
								810,
								827
							],
							[
								879,
								911
							],
							[
								1016,
								1033
							],
							[
								1230,
								1254
							],
							[
								1289,
								1313
							],
							[
								1350,
								1374
							],
							[
								1412,
								1436
							],
							[
								1475,
								1499
							],
							[
								1673,
								1697
							],
							[
								1738,
								1762
							],
							[
								1809,
								1812
							],
							[
								1816,
								1840
							],
							[
								1903,
								1907
							],
							[
								1911,
								1935
							],
							[
								2330,
								2350
							],
							[
								3429,
								3446
							],
							[
								3491,
								3501
							],
							[
								5838,
								5850
							],
							[
								5934,
								5946
							],
							[
								6735,
								6759
							],
							[
								6783,
								6807
							],
							[
								6819,
								6839
							],
							[
								6861,
								6880
							],
							[
								6888,
								6903
							],
							[
								7175,
								7199
							],
							[
								7231,
								7255
							],
							[
								7330,
								7346
							],
							[
								7381,
								7394
							],
							[
								7440,
								7460
							],
							[
								7540,
								7562
							],
							[
								7602,
								7618
							],
							[
								7711,
								7735
							],
							[
								7971,
								7986
							],
							[
								7997,
								8012
							],
							[
								8107,
								8122
							],
							[
								8125,
								8140
							],
							[
								8225,
								8240
							],
							[
								8243,
								8258
							],
							[
								8344,
								8355
							],
							[
								8486,
								8495
							],
							[
								8506,
								8520
							],
							[
								8523,
								8531
							],
							[
								8535,
								8544
							],
							[
								8559,
								8579
							],
							[
								8627,
								8641
							],
							[
								8675,
								8689
							],
							[
								8722,
								8742
							],
							[
								8749,
								8763
							],
							[
								8813,
								8831
							],
							[
								8872,
								8886
							],
							[
								8893,
								8906
							],
							[
								8940,
								8953
							],
							[
								8984,
								9002
							],
							[
								9064,
								9080
							],
							[
								9120,
								9133
							],
							[
								9136,
								9149
							],
							[
								9170,
								9184
							],
							[
								9204,
								9217
							],
							[
								9221,
								9237
							],
							[
								9260,
								9273
							],
							[
								9277,
								9297
							],
							[
								9304,
								9321
							],
							[
								9360,
								9373
							],
							[
								9406,
								9419
							],
							[
								9422,
								9435
							],
							[
								9508,
								9521
							],
							[
								9524,
								9537
							],
							[
								9580,
								9593
							],
							[
								9627,
								9643
							],
							[
								9726,
								9739
							],
							[
								9743,
								9763
							],
							[
								9771,
								9791
							],
							[
								9843,
								9864
							],
							[
								9977,
								9990
							],
							[
								9994,
								10008
							],
							[
								10015,
								10027
							],
							[
								10034,
								10048
							],
							[
								10153,
								10166
							],
							[
								10174,
								10191
							],
							[
								10292,
								10306
							],
							[
								10334,
								10349
							],
							[
								10356,
								10370
							],
							[
								10394,
								10407
							],
							[
								10499,
								10518
							],
							[
								10521,
								10535
							],
							[
								10621,
								10634
							],
							[
								10641,
								10652
							],
							[
								10659,
								10673
							],
							[
								10739,
								10752
							],
							[
								10756,
								10772
							],
							[
								10776,
								10791
							],
							[
								10798,
								10810
							],
							[
								10839,
								10852
							],
							[
								10873,
								10893
							],
							[
								10921,
								10933
							],
							[
								10936,
								10948
							],
							[
								10993,
								11010
							],
							[
								11049,
								11063
							],
							[
								11089,
								11102
							],
							[
								11109,
								11124
							],
							[
								11159,
								11172
							],
							[
								11196,
								11216
							],
							[
								11223,
								11236
							],
							[
								11259,
								11275
							],
							[
								11279,
								11292
							],
							[
								11296,
								11309
							],
							[
								11317,
								11331
							],
							[
								11366,
								11381
							],
							[
								11400,
								11412
							],
							[
								11415,
								11428
							],
							[
								11432,
								11452
							],
							[
								11459,
								11475
							],
							[
								11478,
								11491
							],
							[
								11495,
								11508
							],
							[
								11512,
								11532
							],
							[
								11539,
								11554
							],
							[
								11557,
								11570
							],
							[
								11574,
								11587
							],
							[
								11591,
								11611
							],
							[
								11643,
								11658
							],
							[
								11661,
								11676
							],
							[
								11750,
								11765
							],
							[
								11768,
								11783
							],
							[
								11853,
								11870
							],
							[
								11893,
								11908
							],
							[
								11911,
								11926
							],
							[
								11979,
								11991
							],
							[
								11994,
								12008
							],
							[
								12012,
								12025
							],
							[
								12183,
								12199
							],
							[
								12286,
								12300
							],
							[
								12304,
								12318
							],
							[
								12322,
								12342
							],
							[
								12350,
								12363
							],
							[
								12367,
								12381
							],
							[
								12389,
								12401
							],
							[
								12480,
								12492
							],
							[
								12496,
								12512
							],
							[
								12516,
								12530
							],
							[
								12538,
								12550
							],
							[
								12582,
								12602
							],
							[
								12605,
								12618
							],
							[
								12622,
								12642
							],
							[
								12759,
								12782
							],
							[
								12786,
								12810
							],
							[
								12831,
								12855
							],
							[
								12877,
								12892
							],
							[
								12895,
								12908
							],
							[
								12912,
								12932
							],
							[
								12939,
								12956
							],
							[
								12959,
								12979
							],
							[
								12987,
								13005
							],
							[
								13008,
								13022
							],
							[
								13026,
								13046
							],
							[
								13090,
								13105
							],
							[
								13108,
								13123
							],
							[
								13201,
								13216
							],
							[
								13219,
								13234
							],
							[
								13250,
								13262
							],
							[
								13265,
								13277
							],
							[
								13566,
								13586
							],
							[
								13993,
								14012
							],
							[
								14040,
								14059
							],
							[
								14063,
								14082
							],
							[
								14151,
								14170
							],
							[
								14281,
								14300
							],
							[
								14330,
								14349
							],
							[
								14353,
								14372
							],
							[
								14443,
								14462
							],
							[
								14582,
								14601
							],
							[
								14633,
								14652
							],
							[
								14656,
								14675
							],
							[
								14748,
								14767
							],
							[
								14910,
								14934
							],
							[
								14939,
								14944
							],
							[
								14996,
								15001
							],
							[
								15025,
								15029
							],
							[
								15071,
								15075
							],
							[
								15107,
								15111
							],
							[
								15141,
								15165
							],
							[
								15224,
								15248
							],
							[
								15252,
								15276
							],
							[
								15289,
								15293
							],
							[
								15308,
								15312
							],
							[
								15668,
								15673
							],
							[
								16105,
								16120
							],
							[
								16160,
								16174
							],
							[
								16224,
								16235
							],
							[
								16239,
								16263
							],
							[
								16303,
								16320
							],
							[
								16354,
								16381
							],
							[
								16394,
								16421
							],
							[
								16454,
								16471
							],
							[
								16534,
								16549
							],
							[
								16568,
								16577
							],
							[
								16626,
								16635
							],
							[
								16666,
								16677
							],
							[
								16808,
								16819
							],
							[
								16831,
								16842
							],
							[
								16845,
								16859
							],
							[
								16886,
								16901
							],
							[
								16924,
								16935
							],
							[
								16973,
								16992
							],
							[
								16995,
								16999
							],
							[
								17019,
								17036
							],
							[
								17059,
								17073
							],
							[
								17102,
								17106
							],
							[
								17113,
								17128
							],
							[
								17148,
								17158
							],
							[
								17297,
								17310
							],
							[
								17318,
								17322
							],
							[
								17326,
								17350
							],
							[
								17460,
								17473
							],
							[
								17512,
								17536
							],
							[
								17542,
								17553
							],
							[
								17580,
								17591
							],
							[
								17617,
								17626
							],
							[
								17650,
								17674
							],
							[
								17698,
								17702
							],
							[
								17716,
								17727
							],
							[
								17757,
								17770
							],
							[
								17792,
								17816
							],
							[
								17849,
								17873
							],
							[
								17981,
								17986
							],
							[
								18003,
								18024
							],
							[
								18044,
								18052
							],
							[
								18069,
								18090
							],
							[
								18158,
								18169
							],
							[
								18344,
								18355
							],
							[
								18425,
								18435
							],
							[
								18465,
								18476
							],
							[
								18492,
								18516
							],
							[
								18539,
								18559
							],
							[
								18562,
								18586
							],
							[
								18605,
								18625
							],
							[
								18651,
								18671
							],
							[
								18744,
								18763
							],
							[
								18767,
								18787
							],
							[
								18846,
								18865
							],
							[
								18883,
								18907
							],
							[
								18956,
								18967
							],
							[
								18991,
								18995
							],
							[
								19014,
								19025
							],
							[
								19052,
								19076
							],
							[
								19104,
								19113
							],
							[
								19137,
								19161
							],
							[
								19239,
								19263
							],
							[
								19310,
								19322
							],
							[
								19378,
								19389
							],
							[
								19404,
								19415
							],
							[
								19433,
								19444
							],
							[
								19462,
								19473
							],
							[
								19490,
								19501
							],
							[
								19519,
								19530
							],
							[
								19543,
								19554
							],
							[
								19575,
								19586
							],
							[
								19604,
								19615
							],
							[
								19629,
								19640
							],
							[
								19655,
								19673
							],
							[
								19689,
								19713
							],
							[
								19769,
								19781
							],
							[
								19792,
								19804
							],
							[
								19816,
								19840
							],
							[
								19874,
								19898
							],
							[
								19932,
								19950
							],
							[
								20001,
								20025
							],
							[
								20086,
								20098
							],
							[
								20107,
								20119
							],
							[
								20129,
								20144
							],
							[
								20154,
								20166
							],
							[
								20176,
								20196
							],
							[
								20206,
								20224
							],
							[
								20234,
								20255
							],
							[
								20265,
								20277
							],
							[
								20287,
								20299
							],
							[
								20309,
								20324
							],
							[
								20334,
								20350
							],
							[
								20360,
								20373
							],
							[
								20383,
								20397
							],
							[
								20407,
								20423
							],
							[
								20433,
								20445
							],
							[
								20455,
								20467
							],
							[
								20477,
								20489
							],
							[
								20499,
								20514
							],
							[
								20524,
								20541
							],
							[
								20551,
								20564
							],
							[
								20574,
								20590
							],
							[
								20600,
								20615
							],
							[
								20625,
								20639
							],
							[
								20649,
								20669
							],
							[
								20679,
								20695
							],
							[
								20705,
								20718
							],
							[
								20728,
								20747
							],
							[
								20757,
								20770
							],
							[
								20780,
								20794
							],
							[
								20804,
								20815
							],
							[
								20894,
								20906
							],
							[
								21040,
								21058
							],
							[
								21164,
								21180
							],
							[
								21237,
								21242
							],
							[
								21456,
								21467
							],
							[
								21474,
								21496
							],
							[
								21500,
								21522
							],
							[
								21528,
								21539
							],
							[
								21600,
								21611
							],
							[
								21617,
								21628
							],
							[
								21837,
								21859
							],
							[
								21948,
								21967
							],
							[
								22007,
								22017
							],
							[
								22021,
								22036
							],
							[
								22074,
								22084
							],
							[
								22088,
								22092
							],
							[
								22096,
								22105
							],
							[
								22184,
								22199
							],
							[
								22234,
								22256
							],
							[
								22368,
								22383
							],
							[
								22560,
								22580
							],
							[
								22634,
								22654
							],
							[
								22709,
								22729
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"HAVE_SPAWN",
							"HAVE_SYSINFO",
							"HAVE_SYSINFO",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"COMMON_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"libutf_SOURCES",
							"char_utils_SOURCES",
							"libutf_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"stream_SOURCES",
							"queue_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"token_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"location_SOURCES",
							"token_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"textcode_SOURCES",
							"libutf_SOURCES",
							"tutf8e_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"archive_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSM",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QJSM_LIBDIR",
							"QJSM_MODULE",
							"LIBRARY_SUFFIX",
							"QUICKJS_MODULES",
							"QJSM_LIBDIR",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM",
							"TEST_SOURCE",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIBLEXER",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"archive_SOURCES",
							"blob_SOURCES",
							"buffer_utils_SOURCES",
							"char_utils_SOURCES",
							"child_process_SOURCES",
							"deep_SOURCES",
							"gpio_SOURCES",
							"inspect_SOURCES",
							"js_utils_SOURCES",
							"lexer_SOURCES",
							"libutf_SOURCES",
							"location_SOURCES",
							"misc_SOURCES",
							"mmap_SOURCES",
							"path_SOURCES",
							"pointer_SOURCES",
							"predicate_SOURCES",
							"queue_SOURCES",
							"repeater_SOURCES",
							"sockets_SOURCES",
							"stream_SOURCES",
							"syscallerror_SOURCES",
							"textcode_SOURCES",
							"token_SOURCES",
							"tree_walker_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"xml_SOURCES",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"LIBDL",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QJSM_LDADD",
							"QUICKJS_LIBRARY",
							"LIBPTHREAD",
							"LIBM",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"INSTALL_SCRIPTS",
							"CMAKE_INSTALL_PREFIX",
							"CMAKE_INSTALL_PREFIX",
							"CMAKE_INSTALL_PREFIX"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAA+hUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					754,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								311,
								329
							],
							[
								398,
								410
							],
							[
								480,
								493
							],
							[
								505,
								519
							],
							[
								640,
								653
							],
							[
								717,
								726
							],
							[
								758,
								801
							],
							[
								836,
								842
							],
							[
								893,
								899
							],
							[
								1048,
								1095
							],
							[
								1317,
								1336
							],
							[
								1349,
								1363
							],
							[
								1417,
								1470
							],
							[
								1716,
								1738
							],
							[
								2093,
								2101
							],
							[
								2176,
								2182
							],
							[
								2243,
								2249
							],
							[
								3241,
								3255
							],
							[
								3413,
								3427
							],
							[
								3514,
								3528
							],
							[
								3607,
								3616
							],
							[
								4318,
								4333
							],
							[
								4573,
								4577
							],
							[
								4663,
								4674
							],
							[
								4756,
								4761
							],
							[
								4803,
								4809
							],
							[
								5755,
								5761
							],
							[
								6075,
								6081
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6FQAAUFJPSkVDVF9OQU1FCkNNQUtFX0NfU1RBTkRBUkQKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfRVhFQ1VUQUJMRV9TVUZGSVgKQlVJTERfU0hBUkVEX0xJQlMKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfV0lORE9XU19FWFBPUlRfQUxMX1NZTUJPTFMKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKUwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTQwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfUkVRVUlSRURfUVVJRVQKSEFWRV9QT1NJWF9TUEFXTlAKSEFWRV9TUEFXTgpIQVZFX1NZU0lORk8KSEFWRV9TWVNJTkZPCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUlMKUVVJQ0tKU19MSUJSQVJZX0RJUgpRVUlDS0pTX01PRFVMRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX1NZU1JPT1QKQ01BS0VfVE9PTENIQUlOX0ZJTEUKQ01BS0VfVkVSQk9TRV9NQUtFRklMRQpDTUFLRV9CVUlMRF9UWVBFCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpMSUJfTU9EVUxFUwpRVUlDS0pTX0gKQ09NTU9OX0hFQURFUlMKQ1VUSUxTX0gKUVVJQ0tKU19ICiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKQ09NTU9OX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgbGlidXRmX1NPVVJDRVMKICBjaGFyX3V0aWxzX1NPVVJDRVMKICBsaWJ1dGZfU09VUkNFUwogIHF1ZXVlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgY2hhcl91dGlsc19TT1VSQ0VTCiAganNfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgc3RyZWFtX1NPVVJDRVMKICBxdWV1ZV9TT1VSQ0VTCiAganNfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHByZWRpY2F0ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB0b2tlbl9TT1VSQ0VTCiAgbG9jYXRpb25fU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgY2hpbGRfcHJvY2Vzc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgZGVlcF9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICBkZWVwX0xJQlJBUklFUwogIGluc3BlY3RfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHRyZWVfd2Fsa2VyX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB4bWxfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICBpbnNwZWN0X1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBwcmVkaWNhdGVfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHBvaW50ZXJfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIGxleGVyX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgdG9rZW5fU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGxleGVyX0xJQlJBUklFUwogIG1tYXBfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHJlcGVhdGVyX1NPVVJDRVMKICBxdWV1ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgcXVldWVfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfTElCUkFSSUVTCiAgc29ja2V0c19TT1VSQ0VTCiAgc29ja2V0c19TT1VSQ0VTCiAgYmxvYl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdGV4dGNvZGVfU09VUkNFUwogIGxpYnV0Zl9TT1VSQ0VTCiAgdHV0ZjhlX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIG1pc2NfU09VUkNFUwogIHBhdGhfU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGdwaW9fU09VUkNFUwogIHN5c2NhbGxlcnJvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCkxpYkFyY2hpdmVfSU5DTFVERV9ESVJTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKICBhcmNoaXZlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBhcmNoaXZlX0xJQlJBUklFUwpMaWJBcmNoaXZlX0xJQlJBUklFUwpRSlNNX0VYVFJBX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwogIG1tYXBfU09VUkNFUwogIG1tYXBfU09VUkNFUwpDTUFLRV9SRVFVSVJFRF9RVUlFVApDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVFMKVEVTVFMKVEVTVApCQVNFCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTTQpURVNUClRFU1RTClFVSUNLSlNfTU9EVUxFUwpTSEFSRURfVEFSR0VUUwpRSlNNX0xJQkRJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfSU1QT1JUX0xJQlJBUllfUFJFRklYCkNNQUtFX0lNUE9SVF9MSUJSQVJZX1NVRkZJWApDTUFLRV9TWVNURU1fTkFNRQpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRSlNNX0xJQkRJUgpRSlNNX01PRFVMRQpMSUJSQVJZX1NVRkZJWApRVUlDS0pTX01PRFVMRVMKUUpTTV9MSUJESVIKICBwcmVkaWNhdGVfTElCUkFSSUVTCkxJQk0KICBzb2NrZXRzX0xJQlJBUklFUwogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9MSUJSQVJJRVMKICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNClRFU1RfU09VUkNFClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpMSUJKUwpRVUlDS0pTX0pTX01PRFVMRV9ESVIKTElCTEVYRVIKUVVJQ0tKU19KU19NT0RVTEVfRElSCkxJQl9NT0RVTEVTCkxJQl9NT0RVTEVTCkxJQl9NT0RVTEUKTElCX01PRFVMRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfU09VUkNFU19ST09UCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSClFVSUNLSlNfU09VUkNFU19ST09UClFVSUNLSlNfSU5DTFVERV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRVNfRElSClFKU0MKTU9EVUxFU19ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU0NfREVQUwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpNT0RVTEVTX0RJUgpRSlNNX0VYVFJBX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpRSlNNX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpUUkFOU1BPUlRfUExBVEZPUk0KQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpRSlNNX1NPVVJDRVMKICBhcmNoaXZlX1NPVVJDRVMKICBibG9iX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIGNoYXJfdXRpbHNfU09VUkNFUwogIGNoaWxkX3Byb2Nlc3NfU09VUkNFUwogIGRlZXBfU09VUkNFUwogIGdwaW9fU09VUkNFUwogIGluc3BlY3RfU09VUkNFUwogIGpzX3V0aWxzX1NPVVJDRVMKICBsZXhlcl9TT1VSQ0VTCiAgbGlidXRmX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgbWlzY19TT1VSQ0VTCiAgbW1hcF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcG9pbnRlcl9TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICBxdWV1ZV9TT1VSQ0VTCiAgcmVwZWF0ZXJfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHN0cmVhbV9TT1VSQ0VTCiAgc3lzY2FsbGVycm9yX1NPVVJDRVMKICB0ZXh0Y29kZV9TT1VSQ0VTCiAgdG9rZW5fU09VUkNFUwogIHRyZWVfd2Fsa2VyX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB4bWxfU09VUkNFUwpRSlNNX1NPVVJDRVMKUUpTX01PRFVMRVNfU1RBVElDCkNPTVBJTEVEX01PRFVMRVMKTElCREwKUUpTTV9MSUJESVIKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTClFKU01fTElCRElSCkxJTktfRVhQT1JUClFKU01fTElCRElSClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKUVVJQ0tKU19MSUJSQVJZX0RJUgpRSlNNX0xEQUREClFVSUNLSlNfTElCUkFSWQpMSUJQVEhSRUFECkxJQk0KTElCV1MyXzMyClFVSUNLSlNfVkVSU0lPTgpRVUlDS0pTX0lOU1RBTExfUFJFRklYCklOU1RBTExfU0NSSVBUUwpDTUFLRV9JTlNUQUxMX1BSRUZJWApDTUFLRV9JTlNUQUxMX1BSRUZJWApDTUFLRV9JTlNUQUxMX1BSRUZJWAAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					755,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								311,
								329
							],
							[
								398,
								410
							],
							[
								480,
								493
							],
							[
								505,
								519
							],
							[
								640,
								653
							],
							[
								717,
								726
							],
							[
								758,
								801
							],
							[
								836,
								842
							],
							[
								893,
								899
							],
							[
								1048,
								1095
							],
							[
								1317,
								1336
							],
							[
								1349,
								1363
							],
							[
								1417,
								1470
							],
							[
								1716,
								1738
							],
							[
								2093,
								2101
							],
							[
								2176,
								2182
							],
							[
								2243,
								2249
							],
							[
								3314,
								3328
							],
							[
								3486,
								3500
							],
							[
								3587,
								3601
							],
							[
								3680,
								3689
							],
							[
								4391,
								4406
							],
							[
								4646,
								4650
							],
							[
								4736,
								4747
							],
							[
								4829,
								4834
							],
							[
								4876,
								4882
							],
							[
								5828,
								5834
							],
							[
								6148,
								6154
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					756,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								311,
								329
							],
							[
								398,
								410
							],
							[
								480,
								493
							],
							[
								505,
								519
							],
							[
								640,
								653
							],
							[
								717,
								726
							],
							[
								758,
								801
							],
							[
								836,
								842
							],
							[
								893,
								899
							],
							[
								1048,
								1095
							],
							[
								1317,
								1336
							],
							[
								1349,
								1363
							],
							[
								1417,
								1470
							],
							[
								1716,
								1738
							],
							[
								2093,
								2101
							],
							[
								2176,
								2182
							],
							[
								2243,
								2249
							],
							[
								3309,
								3323
							],
							[
								3481,
								3495
							],
							[
								3582,
								3596
							],
							[
								3675,
								3684
							],
							[
								4386,
								4401
							],
							[
								4641,
								4645
							],
							[
								4731,
								4742
							],
							[
								4824,
								4829
							],
							[
								4871,
								4877
							],
							[
								5823,
								5829
							],
							[
								6143,
								6149
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					757,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								311,
								329
							],
							[
								398,
								410
							],
							[
								480,
								493
							],
							[
								505,
								519
							],
							[
								640,
								653
							],
							[
								717,
								726
							],
							[
								758,
								801
							],
							[
								836,
								842
							],
							[
								893,
								899
							],
							[
								1048,
								1095
							],
							[
								1317,
								1336
							],
							[
								1349,
								1363
							],
							[
								1417,
								1470
							],
							[
								1716,
								1738
							],
							[
								2093,
								2101
							],
							[
								2176,
								2182
							],
							[
								2243,
								2249
							],
							[
								3309,
								3323
							],
							[
								3481,
								3495
							],
							[
								3582,
								3596
							],
							[
								3675,
								3684
							],
							[
								4386,
								4401
							],
							[
								4641,
								4645
							],
							[
								4731,
								4742
							],
							[
								4824,
								4829
							],
							[
								4871,
								4877
							],
							[
								5823,
								5829
							],
							[
								6143,
								6149
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					758,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								311,
								329
							],
							[
								398,
								410
							],
							[
								480,
								493
							],
							[
								505,
								519
							],
							[
								640,
								653
							],
							[
								717,
								726
							],
							[
								758,
								801
							],
							[
								836,
								842
							],
							[
								893,
								899
							],
							[
								1048,
								1095
							],
							[
								1317,
								1336
							],
							[
								1349,
								1363
							],
							[
								1417,
								1470
							],
							[
								1716,
								1738
							],
							[
								2097,
								2105
							],
							[
								2180,
								2186
							],
							[
								2247,
								2253
							],
							[
								3313,
								3327
							],
							[
								3485,
								3499
							],
							[
								3586,
								3600
							],
							[
								3679,
								3688
							],
							[
								4390,
								4405
							],
							[
								4645,
								4649
							],
							[
								4735,
								4746
							],
							[
								4828,
								4833
							],
							[
								4875,
								4881
							],
							[
								5827,
								5833
							],
							[
								6147,
								6153
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					759,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					760,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					761,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								311,
								329
							],
							[
								398,
								410
							],
							[
								480,
								493
							],
							[
								505,
								519
							],
							[
								640,
								653
							],
							[
								717,
								726
							],
							[
								758,
								801
							],
							[
								836,
								842
							],
							[
								893,
								899
							],
							[
								1048,
								1095
							],
							[
								1317,
								1336
							],
							[
								1349,
								1363
							],
							[
								1417,
								1470
							],
							[
								1716,
								1738
							],
							[
								2097,
								2105
							],
							[
								2180,
								2186
							],
							[
								2247,
								2253
							],
							[
								3313,
								3327
							],
							[
								3485,
								3499
							],
							[
								3586,
								3600
							],
							[
								3679,
								3688
							],
							[
								4390,
								4405
							],
							[
								4645,
								4649
							],
							[
								4735,
								4746
							],
							[
								4828,
								4833
							],
							[
								4875,
								4881
							],
							[
								5827,
								5833
							],
							[
								6147,
								6153
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AwAAAAAAAAAAAAAAvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0BAABNYXliZU51bWJlciA9IHQgPT4KTm9uV1MgPSB0ID0+ClRyaW1XUyA9IHQgPT4KKGFjYywgaXRlbSkgPT4KTGV4ZW1lID0gdCA9PgpXUyA9IHQgPT4KUGFyZW4gPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgogIHRvayA9PgogIHRvayA9PgpDb21tYUxpc3QgPSAodG9rbGlzdCwgdCA9IHRvayA9PiB0b2subGV4ZW1lKSA9PgpDb21tYUpvaW4gPSBsaXN0ID0+CihhY2MsIGl0ZW0pID0+CiAgcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAodG9rLCBhcnIpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KKHMsIHQpID0+CihhY2MsIHRva2VuKSA9PgogIGwgPT4KKHJvdywgaSkgPT4KICB0ID0+CiAgdG9rID0+CiAgdG9rID0+CiAgdG9rID0+AAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					762,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								311,
								329
							],
							[
								398,
								410
							],
							[
								480,
								493
							],
							[
								505,
								519
							],
							[
								640,
								653
							],
							[
								717,
								726
							],
							[
								758,
								801
							],
							[
								836,
								842
							],
							[
								893,
								899
							],
							[
								1048,
								1095
							],
							[
								1317,
								1336
							],
							[
								1349,
								1363
							],
							[
								1417,
								1470
							],
							[
								1716,
								1738
							],
							[
								2097,
								2105
							],
							[
								2180,
								2186
							],
							[
								2247,
								2253
							],
							[
								3313,
								3327
							],
							[
								3485,
								3499
							],
							[
								3586,
								3600
							],
							[
								3679,
								3688
							],
							[
								4390,
								4405
							],
							[
								4645,
								4649
							],
							[
								4735,
								4746
							],
							[
								4828,
								4833
							],
							[
								4875,
								4881
							],
							[
								5827,
								5833
							],
							[
								6147,
								6153
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					763,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								118
							],
							[
								488,
								492
							],
							[
								535,
								540
							],
							[
								625,
								656
							],
							[
								1363,
								1370
							],
							[
								1486,
								1503
							],
							[
								1518,
								1540
							],
							[
								1574,
								1582
							],
							[
								1652,
								1675
							],
							[
								1726,
								1744
							],
							[
								1829,
								1859
							],
							[
								2014,
								2037
							],
							[
								2038,
								2059
							],
							[
								2400,
								2414
							],
							[
								2904,
								2938
							],
							[
								3301,
								3353
							],
							[
								3394,
								3427
							],
							[
								3607,
								3657
							],
							[
								3703,
								3749
							],
							[
								3857,
								3910
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							"printFunction = out =>",
							" text =>",
							"outputFunction = out =>",
							" function(...args)",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAAgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					764,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								118
							],
							[
								488,
								492
							],
							[
								535,
								540
							],
							[
								625,
								656
							],
							[
								1363,
								1370
							],
							[
								1486,
								1503
							],
							[
								1518,
								1540
							],
							[
								1574,
								1582
							],
							[
								1652,
								1675
							],
							[
								1726,
								1744
							],
							[
								1829,
								1859
							],
							[
								2014,
								2037
							],
							[
								2038,
								2059
							],
							[
								2400,
								2414
							],
							[
								2904,
								2938
							],
							[
								3301,
								3353
							],
							[
								3394,
								3427
							],
							[
								3607,
								3657
							],
							[
								3703,
								3749
							],
							[
								3857,
								3910
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							"printFunction = out =>",
							" text =>",
							"outputFunction = out =>",
							" function(...args)",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAACAgAAQ29uc29sZSguLi5hcmdzKQogIGYgPT4KICBmZCA9PgogIGNvbnNvbGVXaWR0aCA9IChmZCA9IHRlcm1GZCkgPT4KQ29uc29sZQogIC5pbnNwZWN0ID0gYXJnID0+CiAgcHJpbnRGdW5jdGlvbiA9IG91dCA9PgogIHRleHQgPT4KICBvdXRwdXRGdW5jdGlvbiA9IG91dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgaW5zcGVjdEZ1bmN0aW9uID0gKC4uLmFyZ3MpID0+CiAgbG9nRnVuY3Rpb24gPSBvdXRwdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwogIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMob2JqID0ge30pCkNvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zLm1lcmdlID0gZnVuY3Rpb24ob3B0cywgLi4uYXJncykKQ29uc29sZVNldHVwKGluc3BlY3RPcHRpb25zID0ge30sIGNhbGxiYWNrKQAAAAAAAAAAAgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					765,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAACAgAAQ29uc29sZSguLi5hcmdzKQogIGYgPT4KICBmZCA9PgogIGNvbnNvbGVXaWR0aCA9IChmZCA9IHRlcm1GZCkgPT4KQ29uc29sZQogIC5pbnNwZWN0ID0gYXJnID0+CiAgcHJpbnRGdW5jdGlvbiA9IG91dCA9PgogIHRleHQgPT4KICBvdXRwdXRGdW5jdGlvbiA9IG91dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgaW5zcGVjdEZ1bmN0aW9uID0gKC4uLmFyZ3MpID0+CiAgbG9nRnVuY3Rpb24gPSBvdXRwdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwogIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMob2JqID0ge30pCkNvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zLm1lcmdlID0gZnVuY3Rpb24ob3B0cywgLi4uYXJncykKQ29uc29sZVNldHVwKGluc3BlY3RPcHRpb25zID0ge30sIGNhbGxiYWNrKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					766,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								118
							],
							[
								488,
								492
							],
							[
								535,
								540
							],
							[
								625,
								656
							],
							[
								1363,
								1370
							],
							[
								1486,
								1503
							],
							[
								1518,
								1540
							],
							[
								1574,
								1582
							],
							[
								1652,
								1675
							],
							[
								1726,
								1744
							],
							[
								1829,
								1859
							],
							[
								2014,
								2037
							],
							[
								2038,
								2059
							],
							[
								2400,
								2414
							],
							[
								2904,
								2938
							],
							[
								3301,
								3353
							],
							[
								3394,
								3427
							],
							[
								3607,
								3657
							],
							[
								3703,
								3749
							],
							[
								3857,
								3910
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							"printFunction = out =>",
							" text =>",
							"outputFunction = out =>",
							" function(...args)",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AQAAAAAAAAAAAAAAAgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					767,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								118
							],
							[
								488,
								492
							],
							[
								572,
								577
							],
							[
								662,
								693
							],
							[
								1400,
								1407
							],
							[
								1523,
								1540
							],
							[
								1555,
								1577
							],
							[
								1611,
								1619
							],
							[
								1689,
								1712
							],
							[
								1763,
								1781
							],
							[
								1866,
								1896
							],
							[
								2051,
								2074
							],
							[
								2075,
								2096
							],
							[
								2437,
								2451
							],
							[
								2941,
								2975
							],
							[
								3338,
								3390
							],
							[
								3431,
								3464
							],
							[
								3644,
								3694
							],
							[
								3740,
								3786
							],
							[
								3894,
								3947
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							"printFunction = out =>",
							" text =>",
							"outputFunction = out =>",
							" function(...args)",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAACAgAAQ29uc29sZSguLi5hcmdzKQogIGYgPT4KICBmZCA9PgogIGNvbnNvbGVXaWR0aCA9IChmZCA9IHRlcm1GZCkgPT4KQ29uc29sZQogIC5pbnNwZWN0ID0gYXJnID0+CiAgcHJpbnRGdW5jdGlvbiA9IG91dCA9PgogIHRleHQgPT4KICBvdXRwdXRGdW5jdGlvbiA9IG91dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgaW5zcGVjdEZ1bmN0aW9uID0gKC4uLmFyZ3MpID0+CiAgbG9nRnVuY3Rpb24gPSBvdXRwdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwogIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMob2JqID0ge30pCkNvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zLm1lcmdlID0gZnVuY3Rpb24ob3B0cywgLi4uYXJncykKQ29uc29sZVNldHVwKGluc3BlY3RPcHRpb25zID0ge30sIGNhbGxiYWNrKQAAAAAAAAAAAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAABDb25zb2xlKC4uLmFyZ3MpCiAgZiA9PgogIGZkID0+CiAgY29uc29sZVdpZHRoID0gKGZkID0gdGVybUZkKSA9PgpDb25zb2xlCiAgLmluc3BlY3QgPSBhcmcgPT4KICBwcmludEZ1bmN0aW9uID0gb3V0ID0+CiAgdGV4dCA9PgogIG91dHB1dEZ1bmN0aW9uID0gb3V0ID0+CiAgZnVuY3Rpb24oLi4uYXJncykKICBpbnNwZWN0RnVuY3Rpb24gPSAoLi4uYXJncykgPT4KICBsb2dGdW5jdGlvbiA9IG91dHB1dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAACAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					768,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								118
							],
							[
								488,
								492
							],
							[
								572,
								577
							],
							[
								662,
								693
							],
							[
								1400,
								1407
							],
							[
								1523,
								1540
							],
							[
								1555,
								1577
							],
							[
								1611,
								1619
							],
							[
								1689,
								1712
							],
							[
								1763,
								1781
							],
							[
								1866,
								1896
							],
							[
								2051,
								2074
							],
							[
								2075,
								2096
							],
							[
								2437,
								2451
							],
							[
								2941,
								2975
							],
							[
								3338,
								3390
							],
							[
								3431,
								3464
							],
							[
								3644,
								3694
							],
							[
								3740,
								3786
							],
							[
								3894,
								3947
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							"printFunction = out =>",
							" text =>",
							"outputFunction = out =>",
							" function(...args)",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAACAgAAQ29uc29sZSguLi5hcmdzKQogIGYgPT4KICBmZCA9PgogIGNvbnNvbGVXaWR0aCA9IChmZCA9IHRlcm1GZCkgPT4KQ29uc29sZQogIC5pbnNwZWN0ID0gYXJnID0+CiAgcHJpbnRGdW5jdGlvbiA9IG91dCA9PgogIHRleHQgPT4KICBvdXRwdXRGdW5jdGlvbiA9IG91dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgaW5zcGVjdEZ1bmN0aW9uID0gKC4uLmFyZ3MpID0+CiAgbG9nRnVuY3Rpb24gPSBvdXRwdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwogIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMob2JqID0ge30pCkNvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zLm1lcmdlID0gZnVuY3Rpb24ob3B0cywgLi4uYXJncykKQ29uc29sZVNldHVwKGluc3BlY3RPcHRpb25zID0ge30sIGNhbGxiYWNrKQAAAAAAAAAAAgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					769,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								118
							],
							[
								488,
								496
							],
							[
								576,
								581
							],
							[
								666,
								697
							],
							[
								1404,
								1411
							],
							[
								1527,
								1544
							],
							[
								1559,
								1581
							],
							[
								1615,
								1623
							],
							[
								1693,
								1716
							],
							[
								1767,
								1785
							],
							[
								1870,
								1900
							],
							[
								2055,
								2078
							],
							[
								2079,
								2100
							],
							[
								2441,
								2455
							],
							[
								2945,
								2979
							],
							[
								3342,
								3394
							],
							[
								3435,
								3468
							],
							[
								3648,
								3698
							],
							[
								3744,
								3790
							],
							[
								3898,
								3951
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"(f,i) =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							"printFunction = out =>",
							" text =>",
							"outputFunction = out =>",
							" function(...args)",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAACAgAAQ29uc29sZSguLi5hcmdzKQogIGYgPT4KICBmZCA9PgogIGNvbnNvbGVXaWR0aCA9IChmZCA9IHRlcm1GZCkgPT4KQ29uc29sZQogIC5pbnNwZWN0ID0gYXJnID0+CiAgcHJpbnRGdW5jdGlvbiA9IG91dCA9PgogIHRleHQgPT4KICBvdXRwdXRGdW5jdGlvbiA9IG91dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgaW5zcGVjdEZ1bmN0aW9uID0gKC4uLmFyZ3MpID0+CiAgbG9nRnVuY3Rpb24gPSBvdXRwdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwogIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMob2JqID0ge30pCkNvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zLm1lcmdlID0gZnVuY3Rpb24ob3B0cywgLi4uYXJncykKQ29uc29sZVNldHVwKGluc3BlY3RPcHRpb25zID0ge30sIGNhbGxiYWNrKQAAAAAAAAAABAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCAABDb25zb2xlKC4uLmFyZ3MpCihmLGkpID0+CiAgZmQgPT4KICBjb25zb2xlV2lkdGggPSAoZmQgPSB0ZXJtRmQpID0+CkNvbnNvbGUKICAuaW5zcGVjdCA9IGFyZyA9PgogIHByaW50RnVuY3Rpb24gPSBvdXQgPT4KICB0ZXh0ID0+CiAgb3V0cHV0RnVuY3Rpb24gPSBvdXQgPT4KICBmdW5jdGlvbiguLi5hcmdzKQogIGluc3BlY3RGdW5jdGlvbiA9ICguLi5hcmdzKSA9PgogIGxvZ0Z1bmN0aW9uID0gb3V0cHV0ID0+CiAgZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMKICBhZGRNaXNzaW5nTWV0aG9kcyhjb25zKQpDb25zb2xlLnByb3RvdHlwZS5jb25maWcgPSBmdW5jdGlvbiBjb25maWcob2JqID0ge30pCkNvbnNvbGVPcHRpb25zKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucy5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpCkNvbnNvbGVTZXR1cChpbnNwZWN0T3B0aW9ucyA9IHt9LCBjYWxsYmFjaykAAAAAAAAAAAQCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAgAAQ29uc29sZSguLi5hcmdzKQooZixpKSA9PgogIGZkID0+CiAgY29uc29sZVdpZHRoID0gKGZkID0gdGVybUZkKSA9PgpDb25zb2xlCiAgLmluc3BlY3QgPSBhcmcgPT4KICBwcmludEZ1bmN0aW9uID0gb3V0ID0+CiAgdGV4dCA9PgogIG91dHB1dEZ1bmN0aW9uID0gb3V0ID0+CiAgZnVuY3Rpb24oLi4uYXJncykKICBpbnNwZWN0RnVuY3Rpb24gPSAoLi4uYXJncykgPT4KICBsb2dGdW5jdGlvbiA9IG91dHB1dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAEAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					770,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								118
							],
							[
								488,
								496
							],
							[
								607,
								612
							],
							[
								697,
								728
							],
							[
								1435,
								1442
							],
							[
								1558,
								1575
							],
							[
								1590,
								1612
							],
							[
								1646,
								1654
							],
							[
								1724,
								1747
							],
							[
								1798,
								1816
							],
							[
								1901,
								1931
							],
							[
								2086,
								2109
							],
							[
								2110,
								2131
							],
							[
								2472,
								2486
							],
							[
								2976,
								3010
							],
							[
								3373,
								3425
							],
							[
								3466,
								3499
							],
							[
								3679,
								3729
							],
							[
								3775,
								3821
							],
							[
								3929,
								3982
							]
						],
						"symlist":
						[
							" function Console(...args)",
							"(f,i) =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							"printFunction = out =>",
							" text =>",
							"outputFunction = out =>",
							" function(...args)",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions = {}, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAEAgAAQ29uc29sZSguLi5hcmdzKQooZixpKSA9PgogIGZkID0+CiAgY29uc29sZVdpZHRoID0gKGZkID0gdGVybUZkKSA9PgpDb25zb2xlCiAgLmluc3BlY3QgPSBhcmcgPT4KICBwcmludEZ1bmN0aW9uID0gb3V0ID0+CiAgdGV4dCA9PgogIG91dHB1dEZ1bmN0aW9uID0gb3V0ID0+CiAgZnVuY3Rpb24oLi4uYXJncykKICBpbnNwZWN0RnVuY3Rpb24gPSAoLi4uYXJncykgPT4KICBsb2dGdW5jdGlvbiA9IG91dHB1dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAAEAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					771,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								311,
								329
							],
							[
								398,
								410
							],
							[
								480,
								493
							],
							[
								505,
								519
							],
							[
								640,
								653
							],
							[
								717,
								726
							],
							[
								758,
								801
							],
							[
								836,
								842
							],
							[
								893,
								899
							],
							[
								1048,
								1095
							],
							[
								1317,
								1336
							],
							[
								1349,
								1363
							],
							[
								1417,
								1470
							],
							[
								1716,
								1738
							],
							[
								2097,
								2105
							],
							[
								2180,
								2186
							],
							[
								2247,
								2253
							],
							[
								3313,
								3327
							],
							[
								3485,
								3499
							],
							[
								3586,
								3600
							],
							[
								3679,
								3688
							],
							[
								4390,
								4405
							],
							[
								4645,
								4649
							],
							[
								4735,
								4746
							],
							[
								4828,
								4833
							],
							[
								4875,
								4881
							],
							[
								5827,
								5833
							],
							[
								6147,
								6153
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAEAgAAQ29uc29sZSguLi5hcmdzKQooZixpKSA9PgogIGZkID0+CiAgY29uc29sZVdpZHRoID0gKGZkID0gdGVybUZkKSA9PgpDb25zb2xlCiAgLmluc3BlY3QgPSBhcmcgPT4KICBwcmludEZ1bmN0aW9uID0gb3V0ID0+CiAgdGV4dCA9PgogIG91dHB1dEZ1bmN0aW9uID0gb3V0ID0+CiAgZnVuY3Rpb24oLi4uYXJncykKICBpbnNwZWN0RnVuY3Rpb24gPSAoLi4uYXJncykgPT4KICBsb2dGdW5jdGlvbiA9IG91dHB1dCA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCiAgYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnMgPSB7fSwgY2FsbGJhY2spAAAAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					772,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								311,
								329
							],
							[
								398,
								410
							],
							[
								480,
								493
							],
							[
								505,
								519
							],
							[
								640,
								653
							],
							[
								717,
								726
							],
							[
								758,
								801
							],
							[
								836,
								842
							],
							[
								893,
								899
							],
							[
								1048,
								1095
							],
							[
								1317,
								1336
							],
							[
								1349,
								1363
							],
							[
								1417,
								1470
							],
							[
								1716,
								1738
							],
							[
								2097,
								2105
							],
							[
								2180,
								2186
							],
							[
								2247,
								2253
							],
							[
								3313,
								3327
							],
							[
								3485,
								3499
							],
							[
								3586,
								3600
							],
							[
								3679,
								3688
							],
							[
								4390,
								4405
							],
							[
								4645,
								4649
							],
							[
								4735,
								4746
							],
							[
								4828,
								4833
							],
							[
								4875,
								4881
							],
							[
								5827,
								5833
							],
							[
								6147,
								6153
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					773,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					774,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					775,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					776,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					777,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					778,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					779,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					780,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					781,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					782,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					783,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					784,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					785,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
						"symkeys":
						[
							[
								311,
								329
							],
							[
								398,
								410
							],
							[
								480,
								493
							],
							[
								505,
								519
							],
							[
								640,
								653
							],
							[
								717,
								726
							],
							[
								758,
								801
							],
							[
								836,
								842
							],
							[
								893,
								899
							],
							[
								1048,
								1095
							],
							[
								1317,
								1336
							],
							[
								1349,
								1363
							],
							[
								1417,
								1470
							],
							[
								1716,
								1738
							],
							[
								2098,
								2106
							],
							[
								2181,
								2187
							],
							[
								2248,
								2254
							],
							[
								3313,
								3327
							],
							[
								3485,
								3499
							],
							[
								3586,
								3600
							],
							[
								3679,
								3688
							],
							[
								4390,
								4405
							],
							[
								4645,
								4649
							],
							[
								4735,
								4746
							],
							[
								4828,
								4833
							],
							[
								4875,
								4881
							],
							[
								5827,
								5833
							],
							[
								6147,
								6153
							]
						],
						"symlist":
						[
							"MaybeNumber = t =>",
							"NonWS = t =>",
							"TrimWS = t =>",
							"(acc, item) =>",
							"Lexeme = t =>",
							"WS = t =>",
							"Paren = (toklist, t = tok => tok.lexeme) =>",
							"tok =>",
							"tok =>",
							"CommaList = (toklist, t = tok => tok.lexeme) =>",
							"CommaJoin = list =>",
							"(acc, item) =>",
							"function parse(lexer, fn = (tok, arr) => {}, ...args)",
							"function main(...args)",
							" file =>",
							" () =>",
							" () =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							" (tok, arr) =>",
							"(s, t) =>",
							"(acc, token) =>",
							"l =>",
							"(row, i) =>",
							" t =>",
							"tok =>",
							"tok =>",
							"tok =>"
						]
					},
					"AQAAAAAAAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					786,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AQAATWF5YmVOdW1iZXIgPSB0ID0+Ck5vbldTID0gdCA9PgpUcmltV1MgPSB0ID0+CihhY2MsIGl0ZW0pID0+CkxleGVtZSA9IHQgPT4KV1MgPSB0ID0+ClBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KICB0b2sgPT4KICB0b2sgPT4KQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4KQ29tbWFKb2luID0gbGlzdCA9PgooYWNjLCBpdGVtKSA9PgogIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpCiAgbWFpbiguLi5hcmdzKQogIGZpbGUgPT4KICAoKSA9PgogICgpID0+CiAgKHRvaywgYXJyKSA9PgogICh0b2ssIGFycikgPT4KICAodG9rLCBhcnIpID0+CihzLCB0KSA9PgooYWNjLCB0b2tlbikgPT4KICBsID0+Cihyb3csIGkpID0+CiAgdCA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					787,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					788,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					789,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/repl.js",
			"settings":
			{
				"buffer_size": 52549,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"insert",
					{
						"characters": "if(typeof"
					},
					"CQAAAGuhAAAAAAAAbKEAAAAAAAAAAAAAbKEAAAAAAABtoQAAAAAAAAAAAABtoQAAAAAAAG6hAAAAAAAAAAAAAG6hAAAAAAAAb6EAAAAAAAAAAAAAb6EAAAAAAABwoQAAAAAAAAAAAABwoQAAAAAAAHGhAAAAAAAAAAAAAHGhAAAAAAAAcqEAAAAAAAAAAAAAcqEAAAAAAABzoQAAAAAAAAAAAABzoQAAAAAAAHShAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABroQAAAAAAAGuhAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAHShAAAAAAAAdaEAAAAAAAAAAAAAdaEAAAAAAAB2oQAAAAAAAAAAAAB2oQAAAAAAAHehAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0oQAAAAAAAHShAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAAHehAAAAAAAAeKEAAAAAAAAAAAAAeKEAAAAAAAB5oQAAAAAAAAAAAAB5oQAAAAAAAHqhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3oQAAAAAAAHehAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " 'function')"
					},
					"DAAAAHqhAAAAAAAAe6EAAAAAAAAAAAAAe6EAAAAAAAB8oQAAAAAAAAAAAAB8oQAAAAAAAH2hAAAAAAAAAAAAAH2hAAAAAAAAfqEAAAAAAAAAAAAAfqEAAAAAAAB/oQAAAAAAAAAAAAB/oQAAAAAAAIChAAAAAAAAAAAAAIChAAAAAAAAgaEAAAAAAAAAAAAAgaEAAAAAAACCoQAAAAAAAAAAAACCoQAAAAAAAIOhAAAAAAAAAAAAAIOhAAAAAAAAhKEAAAAAAAAAAAAAhKEAAAAAAACFoQAAAAAAAAAAAACFoQAAAAAAAIahAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6oQAAAAAAAHqhAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIahAAAAAAAAh6EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGoQAAAAAAAIahAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"right_delete",
					null,
					"AQAAAHihAAAAAAAAeKEAAAAAAAABAAAAIQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4oQAAAAAAAHihAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAHihAAAAAAAAeaEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4oQAAAAAAAHihAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "string"
					},
					"BwAAAHyhAAAAAAAAfaEAAAAAAAAAAAAAfaEAAAAAAAB9oQAAAAAAAAgAAABmdW5jdGlvbn2hAAAAAAAAfqEAAAAAAAAAAAAAfqEAAAAAAAB/oQAAAAAAAAAAAAB/oQAAAAAAAIChAAAAAAAAAAAAAIChAAAAAAAAgaEAAAAAAAAAAAAAgaEAAAAAAACCoQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8oQAAAAAAAIShAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/streams.js",
			"settings":
			{
				"buffer_size": 2704,
				"line_ending": "Unix"
			}
		},
		{
			"file": "extract-structs.js",
			"settings":
			{
				"buffer_size": 8136,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5937,
					1,
					"cut",
					null,
					"AQAAAAkWAAAAAAAACRYAAAAAAABQAAAAbGV0IGZuTmFtZSA9IGJsb2NrW2Jsb2NrLmZpbmRJbmRleCh0b2sgPT4gdG9rLmxleGVtZT09JygnKSsxXS5sZXhlbWU7CiAgICAgICAgICA",
					"AQAAAAAAAAABAAAACRYAAAAAAABZFgAAAAAAAAAAAAAAAFlA"
				],
				[
					5938,
					2,
					"paste",
					null,
					"AgAAAAkWAAAAAAAAWRYAAAAAAAAAAAAAWRYAAAAAAACpFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACRYAAAAAAAAJFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5943,
					1,
					"insert",
					{
						"characters": "OI"
					},
					"BAAAAA8WAAAAAAAAEBYAAAAAAAAAAAAAEBYAAAAAAAAQFgAAAAAAAAYAAABOYW1lID3KFgAAAAAAAMoWAAAAAAAACgAAACAgICAgICAgICAQFgAAAAAAABEWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxYAAAAAAAAVFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5944,
					2,
					"left_delete",
					null,
					"AgAAABAWAAAAAAAAEBYAAAAAAAABAAAASQ8WAAAAAAAADxYAAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAAERYAAAAAAAARFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5945,
					1,
					"insert",
					{
						"characters": "Index"
					},
					"BQAAAA8WAAAAAAAAEBYAAAAAAAAAAAAAEBYAAAAAAAARFgAAAAAAAAAAAAARFgAAAAAAABIWAAAAAAAAAAAAABIWAAAAAAAAExYAAAAAAAAAAAAAExYAAAAAAAAUFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxYAAAAAAAAPFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5946,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABQWAAAAAAAAFRYAAAAAAAAAAAAAFRYAAAAAAAAWFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFBYAAAAAAAAUFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5947,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABYWAAAAAAAAFxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhYAAAAAAAAWFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5948,
					1,
					"left_delete",
					null,
					"AQAAABYWAAAAAAAAFhYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAFxYAAAAAAAAXFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5952,
					6,
					"left_delete",
					null,
					"BgAAABwWAAAAAAAAHBYAAAAAAAABAAAAWxsWAAAAAAAAGxYAAAAAAAABAAAAaxoWAAAAAAAAGhYAAAAAAAABAAAAYxkWAAAAAAAAGRYAAAAAAAABAAAAbxgWAAAAAAAAGBYAAAAAAAABAAAAbBcWAAAAAAAAFxYAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAHRYAAAAAAAAdFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5959,
					1,
					"cut",
					null,
					"AQAAAEAWAAAAAAAAQBYAAAAAAAAIAAAAXS5sZXhlbWU",
					"AQAAAAAAAAABAAAAQBYAAAAAAABIFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5966,
					2,
					"left_delete",
					null,
					"AgAAAD8WAAAAAAAAPxYAAAAAAAABAAAAMT4WAAAAAAAAPhYAAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAAQBYAAAAAAABAFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5967,
					1,
					"insert",
					{
						"characters": "-1"
					},
					"AgAAAD4WAAAAAAAAPxYAAAAAAAAAAAAAPxYAAAAAAABAFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPhYAAAAAAAA+FgAAAAAAAAAAAAAAAPC/"
				],
				[
					5973,
					1,
					"insert",
					{
						"characters": "ifn"
					},
					"AwAAAF8WAAAAAAAAYBYAAAAAAAAAAAAAYBYAAAAAAABhFgAAAAAAAAAAAABhFgAAAAAAAGIWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXxYAAAAAAABfFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5974,
					3,
					"left_delete",
					null,
					"AwAAAGEWAAAAAAAAYRYAAAAAAAABAAAAbmAWAAAAAAAAYBYAAAAAAAABAAAAZl8WAAAAAAAAXxYAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAYhYAAAAAAABiFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5975,
					1,
					"insert",
					{
						"characters": "fnIndex"
					},
					"BwAAAF8WAAAAAAAAYBYAAAAAAAAAAAAAYBYAAAAAAABhFgAAAAAAAAAAAABhFgAAAAAAAGIWAAAAAAAAAAAAAGIWAAAAAAAAYxYAAAAAAAAAAAAAYxYAAAAAAABkFgAAAAAAAAAAAABkFgAAAAAAAGUWAAAAAAAAAAAAAGUWAAAAAAAAZhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXxYAAAAAAABfFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5978,
					1,
					"left_delete",
					null,
					"AQAAAGYWAAAAAAAAZhYAAAAAAAApAAAAYmxvY2suZmluZEluZGV4KHRvayA9PiB0b2subGV4ZW1lPT0nKCcpKzE",
					"AQAAAAAAAAABAAAAZhYAAAAAAACPFgAAAAAAAAAAAAAAAPC/"
				],
				[
					5999,
					1,
					"paste",
					null,
					"AQAAAKAWAAAAAAAA0BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoBYAAAAAAACgFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6009,
					1,
					"paste",
					null,
					"AgAAALcWAAAAAAAAvRYAAAAAAAAAAAAAvRYAAAAAAAC9FgAAAAAAAAYAAABBU1NJR04",
					"AQAAAAAAAAABAAAAtxYAAAAAAAC9FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6014,
					1,
					"paste",
					null,
					"AgAAAMcWAAAAAAAAzRYAAAAAAAAAAAAAzRYAAAAAAADNFgAAAAAAAAUAAABibG9jaw",
					"AQAAAAAAAAABAAAAxxYAAAAAAADMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6024,
					1,
					"paste",
					null,
					"AgAAALcWAAAAAAAAwhYAAAAAAAAAAAAAwhYAAAAAAADCFgAAAAAAAAYAAABmbk5hbWU",
					"AQAAAAAAAAABAAAAtxYAAAAAAAC9FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6027,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAMUWAAAAAAAAxRYAAAAAAAAOAAAATGV4ZW1lKGZuTmFtZSnFFgAAAAAAANUWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxRYAAAAAAADTFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6028,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AgAAAMYWAAAAAAAAxxYAAAAAAAAAAAAAxxYAAAAAAADHFgAAAAAAAA4AAABMZXhlbWUoZm5OYW1lKQ",
					"AQAAAAAAAAABAAAAxhYAAAAAAADUFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6029,
					1,
					"left_delete",
					null,
					"AQAAAMYWAAAAAAAAxhYAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAxxYAAAAAAADHFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6030,
					1,
					"insert",
					{
						"characters": "fnIndex,fnNa"
					},
					"DAAAAMYWAAAAAAAAxxYAAAAAAAAAAAAAxxYAAAAAAADIFgAAAAAAAAAAAADIFgAAAAAAAMkWAAAAAAAAAAAAAMkWAAAAAAAAyhYAAAAAAAAAAAAAyhYAAAAAAADLFgAAAAAAAAAAAADLFgAAAAAAAMwWAAAAAAAAAAAAAMwWAAAAAAAAzRYAAAAAAAAAAAAAzRYAAAAAAADOFgAAAAAAAAAAAADOFgAAAAAAAM8WAAAAAAAAAAAAAM8WAAAAAAAA0BYAAAAAAAAAAAAA0BYAAAAAAADRFgAAAAAAAAAAAADRFgAAAAAAANIWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxhYAAAAAAADGFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6031,
					1,
					"insert",
					{
						"characters": "me,fnArgs"
					},
					"CQAAANIWAAAAAAAA0xYAAAAAAAAAAAAA0xYAAAAAAADUFgAAAAAAAAAAAADUFgAAAAAAANUWAAAAAAAAAAAAANUWAAAAAAAA1hYAAAAAAAAAAAAA1hYAAAAAAADXFgAAAAAAAAAAAADXFgAAAAAAANgWAAAAAAAAAAAAANgWAAAAAAAA2RYAAAAAAAAAAAAA2RYAAAAAAADaFgAAAAAAAAAAAADaFgAAAAAAANsWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hYAAAAAAADSFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6042,
					1,
					"insert",
					{
						"characters": "fnIndex"
					},
					"BwAAAJ4XAAAAAAAAnxcAAAAAAAAAAAAAnxcAAAAAAACgFwAAAAAAAAAAAACgFwAAAAAAAKEXAAAAAAAAAAAAAKEXAAAAAAAAohcAAAAAAAAAAAAAohcAAAAAAACjFwAAAAAAAAAAAACjFwAAAAAAAKQXAAAAAAAAAAAAAKQXAAAAAAAApRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhcAAAAAAACeFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6043,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAKUXAAAAAAAAphcAAAAAAAAAAAAAphcAAAAAAACnFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRcAAAAAAAClFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6044,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAKcXAAAAAAAAqBcAAAAAAAAAAAAAqBcAAAAAAACpFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApxcAAAAAAACnFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6047,
					1,
					"left_delete",
					null,
					"AQAAAKkXAAAAAAAAqRcAAAAAAAAcAAAAZm5OYW1lID09ICdKU19OZXdDRnVuY3Rpb24yJw",
					"AQAAAAAAAAABAAAAqRcAAAAAAADFFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6060,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BgAAAKwXAAAAAAAArRcAAAAAAAAAAAAArRcAAAAAAAC3FwAAAAAAAAAAAAC3FwAAAAAAALkXAAAAAAAAAAAAALkXAAAAAAAAuhcAAAAAAAAAAAAAuhcAAAAAAAC7FwAAAAAAAAAAAAC7FwAAAAAAALwXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArBcAAAAAAACsFwAAAAAAAP///////+9/"
				],
				[
					6061,
					1,
					"insert",
					{
						"characters": " O"
					},
					"AgAAALwXAAAAAAAAvRcAAAAAAAAAAAAAvRcAAAAAAAC+FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBcAAAAAAAC8FwAAAAAAAAAAAAAAAPC/"
				],
				[
					6062,
					1,
					"left_delete",
					null,
					"AQAAAL0XAAAAAAAAvRcAAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAAvhcAAAAAAAC+FwAAAAAAAAAAAAAAAPC/"
				],
				[
					6063,
					1,
					"insert",
					{
						"characters": "objName"
					},
					"BwAAAL0XAAAAAAAAvhcAAAAAAAAAAAAAvhcAAAAAAAC/FwAAAAAAAAAAAAC/FwAAAAAAAMAXAAAAAAAAAAAAAMAXAAAAAAAAwRcAAAAAAAAAAAAAwRcAAAAAAADCFwAAAAAAAAAAAADCFwAAAAAAAMMXAAAAAAAAAAAAAMMXAAAAAAAAxBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvRcAAAAAAAC9FwAAAAAAAAAAAAAAAPC/"
				],
				[
					6064,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMQXAAAAAAAAxRcAAAAAAAAAAAAAxRcAAAAAAADGFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxBcAAAAAAADEFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6065,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMYXAAAAAAAAxxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxhcAAAAAAADGFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6072,
					1,
					"insert",
					{
						"characters": "block"
					},
					"BQAAAMcXAAAAAAAAyBcAAAAAAAAAAAAAyBcAAAAAAADJFwAAAAAAAAAAAADJFwAAAAAAAMoXAAAAAAAAAAAAAMoXAAAAAAAAyxcAAAAAAAAAAAAAyxcAAAAAAADMFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxcAAAAAAADHFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6073,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMwXAAAAAAAAzhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzBcAAAAAAADMFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6074,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAM0XAAAAAAAAzhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzRcAAAAAAADNFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6078,
					1,
					"insert",
					{
						"characters": "Lexm"
					},
					"BAAAAMcXAAAAAAAAyBcAAAAAAAAAAAAAyBcAAAAAAADJFwAAAAAAAAAAAADJFwAAAAAAAMoXAAAAAAAAAAAAAMoXAAAAAAAAyxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxcAAAAAAADHFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6079,
					1,
					"left_delete",
					null,
					"AQAAAMoXAAAAAAAAyhcAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAyxcAAAAAAADLFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6080,
					1,
					"insert",
					{
						"characters": "eme("
					},
					"BAAAAMoXAAAAAAAAyxcAAAAAAAAAAAAAyxcAAAAAAADMFwAAAAAAAAAAAADMFwAAAAAAAM0XAAAAAAAAAAAAAM0XAAAAAAAAzhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyhcAAAAAAADKFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6082,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAANYXAAAAAAAA1xcAAAAAAAAAAAAA1xcAAAAAAADYFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hcAAAAAAADWFwAAAAAAAP///////+9/"
				],
				[
					6111,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANkXAAAAAAAA2hcAAAAAAAAAAAAA2hcAAAAAAADaFwAAAAAAADwAAAAgICAgICAgICAgICBsZXQgW29iak5hbWUsIGNGdW5jTGlzdE5hbWVdID0gZm5BcmdzLnNsaWNlKDEpOwo",
					"AQAAAAAAAAABAAAA2RcAAAAAAAAVGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6123,
					1,
					"paste",
					null,
					"AgAAAPcXAAAAAAAA/hcAAAAAAAAAAAAA/hcAAAAAAAD+FwAAAAAAAA0AAABjRnVuY0xpc3ROYW1l",
					"AQAAAAAAAAABAAAA9xcAAAAAAAAEGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6128,
					1,
					"insert",
					{
						"characters": "fnArgs"
					},
					"BwAAAAIYAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADGAAAAAAAAAcAAABvYmpOYW1lAxgAAAAAAAAEGAAAAAAAAAAAAAAEGAAAAAAAAAUYAAAAAAAAAAAAAAUYAAAAAAAABhgAAAAAAAAAAAAABhgAAAAAAAAHGAAAAAAAAAAAAAAHGAAAAAAAAAgYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAhgAAAAAAAAJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6133,
					1,
					"insert",
					{
						"characters": "\n\nw"
					},
					"BgAAAN4WAAAAAAAA3xYAAAAAAAAAAAAA3xYAAAAAAADpFgAAAAAAAAAAAADpFgAAAAAAAOoWAAAAAAAAAAAAAOoWAAAAAAAA9BYAAAAAAAAAAAAA3xYAAAAAAADfFgAAAAAAAAoAAAAgICAgICAgICAg6hYAAAAAAADrFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hYAAAAAAADeFgAAAAAAAP///////+9/"
				],
				[
					6134,
					1,
					"left_delete",
					null,
					"AQAAAOoWAAAAAAAA6hYAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAA6xYAAAAAAADrFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6135,
					1,
					"insert",
					{
						"characters": "oif"
					},
					"AwAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA6xYAAAAAAADsFgAAAAAAAAAAAADsFgAAAAAAAO0WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hYAAAAAAADqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6136,
					3,
					"left_delete",
					null,
					"AwAAAOwWAAAAAAAA7BYAAAAAAAABAAAAZusWAAAAAAAA6xYAAAAAAAABAAAAaeoWAAAAAAAA6hYAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAA7RYAAAAAAADtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6137,
					1,
					"insert",
					{
						"characters": "iF"
					},
					"AgAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA6xYAAAAAAADsFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hYAAAAAAADqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6138,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOwWAAAAAAAA7hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BYAAAAAAADsFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6139,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOwWAAAAAAAA7BYAAAAAAAABAAAAKOwWAAAAAAAA7BYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA7RYAAAAAAADtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6140,
					2,
					"left_delete",
					null,
					"AgAAAOsWAAAAAAAA6xYAAAAAAAABAAAARuoWAAAAAAAA6hYAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA7BYAAAAAAADsFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6141,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA6xYAAAAAAADsFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hYAAAAAAADqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6142,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOwWAAAAAAAA7hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BYAAAAAAADsFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6143,
					1,
					"insert",
					{
						"characters": "fnArgs"
					},
					"BgAAAO0WAAAAAAAA7hYAAAAAAAAAAAAA7hYAAAAAAADvFgAAAAAAAAAAAADvFgAAAAAAAPAWAAAAAAAAAAAAAPAWAAAAAAAA8RYAAAAAAAAAAAAA8RYAAAAAAADyFgAAAAAAAAAAAADyFgAAAAAAAPMWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RYAAAAAAADtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6144,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPMWAAAAAAAA9RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8xYAAAAAAADzFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6145,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAPQWAAAAAAAA9RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BYAAAAAAAD0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6147,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAPYWAAAAAAAA9xYAAAAAAAAAAAAA9xYAAAAAAAD4FgAAAAAAAAAAAAD4FgAAAAAAAPkWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hYAAAAAAAD2FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6148,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPkWAAAAAAAA+hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RYAAAAAAAD5FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6149,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAPoWAAAAAAAA/BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hYAAAAAAAD6FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6150,
					1,
					"insert",
					{
						"characters": "ctx"
					},
					"AwAAAPsWAAAAAAAA/BYAAAAAAAAAAAAA/BYAAAAAAAD9FgAAAAAAAAAAAAD9FgAAAAAAAP4WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+xYAAAAAAAD7FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6152,
					1,
					"insert",
					{
						"characters": "\nfnARgs."
					},
					"CwAAAAAXAAAAAAAAARcAAAAAAAAAAAAAARcAAAAAAAALFwAAAAAAAAAAAAABFwAAAAAAAAEXAAAAAAAACgAAACAgICAgICAgICABFwAAAAAAAA0XAAAAAAAAAAAAAA0XAAAAAAAADhcAAAAAAAAAAAAADhcAAAAAAAAPFwAAAAAAAAAAAAAPFwAAAAAAABAXAAAAAAAAAAAAABAXAAAAAAAAERcAAAAAAAAAAAAAERcAAAAAAAASFwAAAAAAAAAAAAASFwAAAAAAABMXAAAAAAAAAAAAABMXAAAAAAAAFBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABcAAAAAAAAAFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6153,
					4,
					"left_delete",
					null,
					"BAAAABMXAAAAAAAAExcAAAAAAAABAAAALhIXAAAAAAAAEhcAAAAAAAABAAAAcxEXAAAAAAAAERcAAAAAAAABAAAAZxAXAAAAAAAAEBcAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAFBcAAAAAAAAUFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6154,
					1,
					"insert",
					{
						"characters": "rgs.shift"
					},
					"CQAAABAXAAAAAAAAERcAAAAAAAAAAAAAERcAAAAAAAASFwAAAAAAAAAAAAASFwAAAAAAABMXAAAAAAAAAAAAABMXAAAAAAAAFBcAAAAAAAAAAAAAFBcAAAAAAAAVFwAAAAAAAAAAAAAVFwAAAAAAABYXAAAAAAAAAAAAABYXAAAAAAAAFxcAAAAAAAAAAAAAFxcAAAAAAAAYFwAAAAAAAAAAAAAYFwAAAAAAABkXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBcAAAAAAAAQFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6155,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABkXAAAAAAAAGxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGRcAAAAAAAAZFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6157,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABsXAAAAAAAAHBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGxcAAAAAAAAbFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6163,
					1,
					"insert",
					{
						"characters": ".slice"
					},
					"BgAAAEYYAAAAAAAARxgAAAAAAAAAAAAARxgAAAAAAABIGAAAAAAAAAAAAABIGAAAAAAAAEkYAAAAAAAAAAAAAEkYAAAAAAAAShgAAAAAAAAAAAAAShgAAAAAAABLGAAAAAAAAAAAAABLGAAAAAAAAEwYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhgAAAAAAABGGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6164,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEwYAAAAAAAAThgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATBgAAAAAAABMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6165,
					1,
					"insert",
					{
						"characters": "0,2"
					},
					"AwAAAE0YAAAAAAAAThgAAAAAAAAAAAAAThgAAAAAAABPGAAAAAAAAAAAAABPGAAAAAAAAFAYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATRgAAAAAAABNGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6172,
					2,
					"left_delete",
					null,
					"AgAAAOsWAAAAAAAA6xYAAAAAAAABAAAAZuoWAAAAAAAA6hYAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA7BYAAAAAAADsFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6173,
					1,
					"insert",
					{
						"characters": "while"
					},
					"BQAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA6xYAAAAAAADsFgAAAAAAAAAAAADsFgAAAAAAAO0WAAAAAAAAAAAAAO0WAAAAAAAA7hYAAAAAAAAAAAAA7hYAAAAAAADvFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hYAAAAAAADqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6175,
					1,
					"insert",
					{
						"characters": "['ctx',m"
					},
					"CAAAAPAWAAAAAAAA8RYAAAAAAAAAAAAA8RYAAAAAAADyFgAAAAAAAAAAAADyFgAAAAAAAPMWAAAAAAAAAAAAAPMWAAAAAAAA9BYAAAAAAAAAAAAA9BYAAAAAAAD1FgAAAAAAAAAAAAD1FgAAAAAAAPYWAAAAAAAAAAAAAPYWAAAAAAAA9xYAAAAAAAAAAAAA9xYAAAAAAAD4FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BYAAAAAAADwFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6176,
					1,
					"left_delete",
					null,
					"AQAAAPcWAAAAAAAA9xYAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAA+BYAAAAAAAD4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6177,
					1,
					"insert",
					{
						"characters": "'m'].indexOf("
					},
					"DQAAAPcWAAAAAAAA+BYAAAAAAAAAAAAA+BYAAAAAAAD5FgAAAAAAAAAAAAD5FgAAAAAAAPoWAAAAAAAAAAAAAPoWAAAAAAAA+xYAAAAAAAAAAAAA+xYAAAAAAAD8FgAAAAAAAAAAAAD8FgAAAAAAAP0WAAAAAAAAAAAAAP0WAAAAAAAA/hYAAAAAAAAAAAAA/hYAAAAAAAD/FgAAAAAAAAAAAAD/FgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAARcAAAAAAAAAAAAAARcAAAAAAAACFwAAAAAAAAAAAAACFwAAAAAAAAMXAAAAAAAAAAAAAAMXAAAAAAAABBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xYAAAAAAAD3FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6181,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AgAAAA0XAAAAAAAADhcAAAAAAAAAAAAADhcAAAAAAAAOFwAAAAAAAAkAAAAgPT0gJ2N0eCc",
					"AQAAAAAAAAABAAAADRcAAAAAAAAWFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6182,
					1,
					"insert",
					{
						"characters": " !"
					},
					"AgAAAA4XAAAAAAAADxcAAAAAAAAAAAAADxcAAAAAAAAQFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhcAAAAAAAAOFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6184,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAABEXAAAAAAAAEhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERcAAAAAAAARFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6185,
					2,
					"left_delete",
					null,
					"AgAAABEXAAAAAAAAERcAAAAAAAABAAAAPRAXAAAAAAAAEBcAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAEhcAAAAAAAASFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6186,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAABAXAAAAAAAAERcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBcAAAAAAAAQFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6187,
					1,
					"insert",
					{
						"characters": " -1)"
					},
					"BAAAABEXAAAAAAAAEhcAAAAAAAAAAAAAEhcAAAAAAAATFwAAAAAAAAAAAAATFwAAAAAAABQXAAAAAAAAAAAAABQXAAAAAAAAFRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERcAAAAAAAARFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6193,
					1,
					"cut",
					null,
					"AQAAAKAWAAAAAAAAoBYAAAAAAAA/AAAAICAgICAgICAgIGNvbnNvbGUubG9nKCdpc0NGdW5jQ2FsbCcsIHtmbkluZGV4LGZuTmFtZSxmbkFyZ3N9KTsK",
					"AQAAAAAAAAABAAAAoBYAAAAAAADfFgAAAAAAAAAAAAAAAAAA"
				],
				[
					6195,
					1,
					"paste",
					null,
					"AQAAAPMWAAAAAAAAMhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8xYAAAAAAADzFgAAAAAAAAAAAAAAAAAA"
				],
				[
					6200,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAPIWAAAAAAAA8xYAAAAAAAAAAAAA8xYAAAAAAAD/FgAAAAAAAAAAAADzFgAAAAAAAPMWAAAAAAAADAAAACAgICAgICAgICAgIPMWAAAAAAAA/RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hYAAAAAAADyFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6222,
					10,
					"left_delete",
					null,
					"CwAAAK4XAAAAAAAArhcAAAAAAAABAAAAKfMWAAAAAAAA8xYAAAAAAAAKAAAAICAgICAgICAgIKMXAAAAAAAAoxcAAAAAAAABAAAAMaIXAAAAAAAAohcAAAAAAAABAAAAKKEXAAAAAAAAoRcAAAAAAAABAAAAZaAXAAAAAAAAoBcAAAAAAAABAAAAY58XAAAAAAAAnxcAAAAAAAABAAAAaZ4XAAAAAAAAnhcAAAAAAAABAAAAbJ0XAAAAAAAAnRcAAAAAAAABAAAAc5wXAAAAAAAAnBcAAAAAAAABAAAALpsXAAAAAAAAmxcAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAArxcAAAAAAACvFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6223,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAJsXAAAAAAAAnBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmxcAAAAAAACbFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6236,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAF4YAAAAAAAAYBgAAAAAAAAAAAAAUxgAAAAAAABVGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxgAAAAAAABeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6241,
					1,
					"insert",
					{
						"characters": "\nle"
					},
					"BAAAACMYAAAAAAAAJBgAAAAAAAAAAAAAJBgAAAAAAAAwGAAAAAAAAAAAAAAwGAAAAAAAADEYAAAAAAAAAAAAADEYAAAAAAAAMhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIxgAAAAAAAAjGAAAAAAAAAAAAAAAYH1A"
				],
				[
					6242,
					1,
					"insert",
					{
						"characters": " t"
					},
					"AgAAADIYAAAAAAAAMxgAAAAAAAAAAAAAMxgAAAAAAAA0GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMhgAAAAAAAAyGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6243,
					2,
					"left_delete",
					null,
					"AgAAADMYAAAAAAAAMxgAAAAAAAABAAAAdDIYAAAAAAAAMhgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAANBgAAAAAAAA0GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6244,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAADIYAAAAAAAAMxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMhgAAAAAAAAyGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6245,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADMYAAAAAAAANBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxgAAAAAAAAzGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6246,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADQYAAAAAAAANhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBgAAAAAAAA0GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6247,
					1,
					"insert",
					{
						"characters": "cCall,"
					},
					"BgAAADUYAAAAAAAANhgAAAAAAAAAAAAANhgAAAAAAAA3GAAAAAAAAAAAAAA3GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAORgAAAAAAAAAAAAAORgAAAAAAAA6GAAAAAAAAAAAAAA6GAAAAAAAADsYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANRgAAAAAAAA1GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6248,
					1,
					"insert",
					{
						"characters": "cas"
					},
					"AwAAADsYAAAAAAAAPBgAAAAAAAAAAAAAPBgAAAAAAAA9GAAAAAAAAAAAAAA9GAAAAAAAAD4YAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxgAAAAAAAA7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6249,
					3,
					"left_delete",
					null,
					"AwAAAD0YAAAAAAAAPRgAAAAAAAABAAAAczwYAAAAAAAAPBgAAAAAAAABAAAAYTsYAAAAAAAAOxgAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAPhgAAAAAAAA+GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6250,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAADsYAAAAAAAAPBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxgAAAAAAAA7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6251,
					1,
					"left_delete",
					null,
					"AQAAADsYAAAAAAAAOxgAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAPBgAAAAAAAA8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6252,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAADsYAAAAAAAAPBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxgAAAAAAAA7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6253,
					1,
					"left_delete",
					null,
					"AQAAADsYAAAAAAAAOxgAAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAAPBgAAAAAAAA8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6254,
					1,
					"insert",
					{
						"characters": "cName,"
					},
					"BgAAADsYAAAAAAAAPBgAAAAAAAAAAAAAPBgAAAAAAAA9GAAAAAAAAAAAAAA9GAAAAAAAAD4YAAAAAAAAAAAAAD4YAAAAAAAAPxgAAAAAAAAAAAAAPxgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEEYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxgAAAAAAAA7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6255,
					1,
					"insert",
					{
						"characters": "...rest"
					},
					"BwAAAEEYAAAAAAAAQhgAAAAAAAAAAAAAQhgAAAAAAABDGAAAAAAAAAAAAABDGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAARRgAAAAAAAAAAAAARRgAAAAAAABGGAAAAAAAAAAAAABGGAAAAAAAAEcYAAAAAAAAAAAAAEcYAAAAAAAASBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQRgAAAAAAABBGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6257,
					1,
					"insert",
					{
						"characters": "=fnArgs;"
					},
					"CAAAAEkYAAAAAAAAShgAAAAAAAAAAAAAShgAAAAAAABLGAAAAAAAAAAAAABLGAAAAAAAAEwYAAAAAAAAAAAAAEwYAAAAAAAATRgAAAAAAAAAAAAATRgAAAAAAABOGAAAAAAAAAAAAABOGAAAAAAAAE8YAAAAAAAAAAAAAE8YAAAAAAAAUBgAAAAAAAAAAAAAUBgAAAAAAABRGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASRgAAAAAAABJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6260,
					1,
					"insert",
					{
						"characters": "[cCall,cN"
					},
					"CQAAAHsYAAAAAAAAfBgAAAAAAAAAAAAAfBgAAAAAAAB9GAAAAAAAAAAAAAB9GAAAAAAAAH4YAAAAAAAAAAAAAH4YAAAAAAAAfxgAAAAAAAAAAAAAfxgAAAAAAACAGAAAAAAAAAAAAACAGAAAAAAAAIEYAAAAAAAAAAAAAIEYAAAAAAAAghgAAAAAAAAAAAAAghgAAAAAAACDGAAAAAAAAAAAAACDGAAAAAAAAIQYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexgAAAAAAAB7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6261,
					1,
					"insert",
					{
						"characters": "ame.replace(&"
					},
					"DQAAAIQYAAAAAAAAhRgAAAAAAAAAAAAAhRgAAAAAAACGGAAAAAAAAAAAAACGGAAAAAAAAIcYAAAAAAAAAAAAAIcYAAAAAAAAiBgAAAAAAAAAAAAAiBgAAAAAAACJGAAAAAAAAAAAAACJGAAAAAAAAIoYAAAAAAAAAAAAAIoYAAAAAAAAixgAAAAAAAAAAAAAixgAAAAAAACMGAAAAAAAAAAAAACMGAAAAAAAAI0YAAAAAAAAAAAAAI0YAAAAAAAAjhgAAAAAAAAAAAAAjhgAAAAAAACPGAAAAAAAAAAAAACPGAAAAAAAAJAYAAAAAAAAAAAAAJAYAAAAAAAAkRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBgAAAAAAACEGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6262,
					1,
					"left_delete",
					null,
					"AQAAAJAYAAAAAAAAkBgAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAkRgAAAAAAACRGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6263,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAJAYAAAAAAAAkRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBgAAAAAAACQGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6264,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJEYAAAAAAAAkhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRgAAAAAAACRGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6265,
					1,
					"left_delete",
					null,
					"AQAAAJEYAAAAAAAAkRgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAkhgAAAAAAACSGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6266,
					1,
					"insert",
					{
						"characters": "^"
					},
					"AQAAAJEYAAAAAAAAkhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRgAAAAAAACRGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6267,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJIYAAAAAAAAkxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhgAAAAAAACSGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6268,
					1,
					"left_delete",
					null,
					"AQAAAJIYAAAAAAAAkhgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAkxgAAAAAAACTGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6269,
					1,
					"insert",
					{
						"characters": "\"|"
					},
					"AgAAAJIYAAAAAAAAkxgAAAAAAAAAAAAAkxgAAAAAAACUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhgAAAAAAACSGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6270,
					1,
					"insert",
					{
						"characters": "\"$/"
					},
					"AwAAAJQYAAAAAAAAlRgAAAAAAAAAAAAAlRgAAAAAAACWGAAAAAAAAAAAAACWGAAAAAAAAJcYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlBgAAAAAAACUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6273,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJcYAAAAAAAAmBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlxgAAAAAAACXGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6274,
					1,
					"insert",
					{
						"characters": " '')"
					},
					"BAAAAJgYAAAAAAAAmRgAAAAAAAAAAAAAmRgAAAAAAACaGAAAAAAAAAAAAACaGAAAAAAAAJsYAAAAAAAAAAAAAJsYAAAAAAAAnBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmBgAAAAAAACYGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6275,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJwYAAAAAAAAnRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBgAAAAAAACcGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6276,
					1,
					"insert",
					{
						"characters": " ...rest]"
					},
					"CQAAAJ0YAAAAAAAAnhgAAAAAAAAAAAAAnhgAAAAAAACfGAAAAAAAAAAAAACfGAAAAAAAAKAYAAAAAAAAAAAAAKAYAAAAAAAAoRgAAAAAAAAAAAAAoRgAAAAAAACiGAAAAAAAAAAAAACiGAAAAAAAAKMYAAAAAAAAAAAAAKMYAAAAAAAApBgAAAAAAAAAAAAApBgAAAAAAAClGAAAAAAAAAAAAAClGAAAAAAAAKYYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRgAAAAAAACdGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6279,
					1,
					"left_delete",
					null,
					"AQAAAKYYAAAAAAAAphgAAAAAAAAVAAAAZm5BcmdzLyouc2xpY2UoMCwyKSov",
					"AQAAAAAAAAABAAAAphgAAAAAAAC7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6289,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAAFEYAAAAAAAAUhgAAAAAAAAAAAAAUhgAAAAAAABeGAAAAAAAAAAAAABeGAAAAAAAAF8YAAAAAAAAAAAAAF8YAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABhGAAAAAAAAAAAAABhGAAAAAAAAGIYAAAAAAAAAAAAAGIYAAAAAAAAYxgAAAAAAAAAAAAAYxgAAAAAAABkGAAAAAAAAAAAAABkGAAAAAAAAGUYAAAAAAAAAAAAAGUYAAAAAAAAZhgAAAAAAAAAAAAAZhgAAAAAAABnGAAAAAAAAAAAAABnGAAAAAAAAGgYAAAAAAAAAAAAAGgYAAAAAAAAaRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURgAAAAAAABRGAAAAAAAAAAAAAAAwHxA"
				],
				[
					6290,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGkYAAAAAAAAaxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaRgAAAAAAABpGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6291,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAGoYAAAAAAAAbBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahgAAAAAAABqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6293,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGwYAAAAAAAAbRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbBgAAAAAAABsGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6294,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG0YAAAAAAAAbhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbRgAAAAAAABtGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6295,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG4YAAAAAAAAcBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhgAAAAAAABuGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6296,
					1,
					"insert",
					{
						"characters": "objName,cNam"
					},
					"DAAAAG8YAAAAAAAAcBgAAAAAAAAAAAAAcBgAAAAAAABxGAAAAAAAAAAAAABxGAAAAAAAAHIYAAAAAAAAAAAAAHIYAAAAAAAAcxgAAAAAAAAAAAAAcxgAAAAAAAB0GAAAAAAAAAAAAAB0GAAAAAAAAHUYAAAAAAAAAAAAAHUYAAAAAAAAdhgAAAAAAAAAAAAAdhgAAAAAAAB3GAAAAAAAAAAAAAB3GAAAAAAAAHgYAAAAAAAAAAAAAHgYAAAAAAAAeRgAAAAAAAAAAAAAeRgAAAAAAAB6GAAAAAAAAAAAAAB6GAAAAAAAAHsYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxgAAAAAAABvGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6297,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAHsYAAAAAAAAfBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexgAAAAAAAB7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6305,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAH4YAAAAAAAAfxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhgAAAAAAAB+GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6306,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAH8YAAAAAAAAgBgAAAAAAAAAAAAAgBgAAAAAAACMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxgAAAAAAAB/GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6316,
					1,
					"cut",
					null,
					"AQAAAL0YAAAAAAAAvRgAAAAAAAAaAAAAY05hbWUucmVwbGFjZSgvXiJ8IiQvLCAnJyk",
					"AQAAAAAAAAABAAAAvRgAAAAAAADXGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6317,
					1,
					"insert",
					{
						"characters": "cName"
					},
					"BgAAAL0YAAAAAAAAvhgAAAAAAAAAAAAAgBgAAAAAAACAGAAAAAAAAAwAAAAgICAgICAgICAgICCyGAAAAAAAALMYAAAAAAAAAAAAALMYAAAAAAAAtBgAAAAAAAAAAAAAtBgAAAAAAAC1GAAAAAAAAAAAAAC1GAAAAAAAALYYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvRgAAAAAAAC9GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6319,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAAIAYAAAAAAAAgRgAAAAAAAAAAAAAgRgAAAAAAACCGAAAAAAAAAAAAACCGAAAAAAAAIMYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgBgAAAAAAACAGAAAAAAAAAAAAAAAkIBA"
				],
				[
					6320,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIMYAAAAAAAAhRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxgAAAAAAACDGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6321,
					1,
					"insert",
					{
						"characters": "cName"
					},
					"BQAAAIQYAAAAAAAAhRgAAAAAAAAAAAAAhRgAAAAAAACGGAAAAAAAAAAAAACGGAAAAAAAAIcYAAAAAAAAAAAAAIcYAAAAAAAAiBgAAAAAAAAAAAAAiBgAAAAAAACJGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBgAAAAAAACEGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6323,
					1,
					"insert",
					{
						"characters": "\ncName="
					},
					"CAAAAIoYAAAAAAAAixgAAAAAAAAAAAAAixgAAAAAAACNGAAAAAAAAAAAAACNGAAAAAAAAI4YAAAAAAAAAAAAAI4YAAAAAAAAjxgAAAAAAAAAAAAAjxgAAAAAAACQGAAAAAAAAAAAAACQGAAAAAAAAJEYAAAAAAAAAAAAAJEYAAAAAAAAkhgAAAAAAAAAAAAAkhgAAAAAAACTGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihgAAAAAAACKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6324,
					1,
					"paste",
					null,
					"AQAAAJMYAAAAAAAArRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxgAAAAAAACTGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6325,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAK0YAAAAAAAArhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArRgAAAAAAACtGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6326,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAK4YAAAAAAAArxgAAAAAAAAAAAAArxgAAAAAAACxGAAAAAAAAAAAAACvGAAAAAAAAK8YAAAAAAAAAgAAACAgrxgAAAAAAACvGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArhgAAAAAAACuGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6339,
					1,
					"insert",
					{
						"characters": "cName"
					},
					"BQAAANkYAAAAAAAA2hgAAAAAAAAAAAAA2hgAAAAAAADbGAAAAAAAAAAAAADbGAAAAAAAANwYAAAAAAAAAAAAANwYAAAAAAAA3RgAAAAAAAAAAAAA3RgAAAAAAADeGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2RgAAAAAAADZGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6340,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAN4YAAAAAAAA3xgAAAAAAAAAAAAA3xgAAAAAAADgGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hgAAAAAAADeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6341,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOAYAAAAAAAA4RgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4BgAAAAAAADgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6343,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPgYAAAAAAAA+RgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BgAAAAAAAD4GAAAAAAAAP///////+9/"
				],
				[
					6344,
					1,
					"left_delete",
					null,
					"AQAAAPgYAAAAAAAA+BgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA+RgAAAAAAAD5GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6346,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAPcYAAAAAAAA+BgAAAAAAAAAAAAA+BgAAAAAAAD5GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xgAAAAAAAD3GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6347,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPkYAAAAAAAA+hgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RgAAAAAAAD5GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6348,
					1,
					"insert",
					{
						"characters": "cCall;"
					},
					"BgAAAPoYAAAAAAAA+xgAAAAAAAAAAAAA+xgAAAAAAAD8GAAAAAAAAAAAAAD8GAAAAAAAAP0YAAAAAAAAAAAAAP0YAAAAAAAA/hgAAAAAAAAAAAAA/hgAAAAAAAD/GAAAAAAAAAAAAAD/GAAAAAAAAAAZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hgAAAAAAAD6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6351,
					1,
					"left_delete",
					null,
					"AQAAAP8YAAAAAAAA/xgAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAABkAAAAAAAAAGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6355,
					1,
					"insert",
					{
						"characters": "[þ"
					},
					"AgAAAPoYAAAAAAAA+xgAAAAAAAAAAAAA+xgAAAAAAAD8GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hgAAAAAAAD6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6356,
					1,
					"left_delete",
					null,
					"AQAAAPsYAAAAAAAA+xgAAAAAAAACAAAAw74",
					"AQAAAAAAAAABAAAA/BgAAAAAAAD8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6357,
					1,
					"left_delete",
					null,
					"AQAAAPoYAAAAAAAA+hgAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAA+xgAAAAAAAD7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6358,
					1,
					"insert",
					{
						"characters": "[loc]"
					},
					"BQAAAPoYAAAAAAAA+xgAAAAAAAAAAAAA+xgAAAAAAAD8GAAAAAAAAAAAAAD8GAAAAAAAAP0YAAAAAAAAAAAAAP0YAAAAAAAA/hgAAAAAAAAAAAAA/hgAAAAAAAD/GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hgAAAAAAAD6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6361,
					1,
					"left_delete",
					null,
					"AQAAAP8YAAAAAAAA/xgAAAAAAAAFAAAAY0NhbGw",
					"AQAAAAAAAAABAAAA/xgAAAAAAAAEGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6363,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAFEYAAAAAAAAUhgAAAAAAAAAAAAAUhgAAAAAAABeGAAAAAAAAAAAAABeGAAAAAAAAF8YAAAAAAAAAAAAAF8YAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABhGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURgAAAAAAABRGAAAAAAAAAAAAAAAsIhA"
				],
				[
					6364,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGEYAAAAAAAAYhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYRgAAAAAAABhGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6365,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGIYAAAAAAAAZBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhgAAAAAAABiGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6366,
					1,
					"insert",
					{
						"characters": "loc"
					},
					"AwAAAGMYAAAAAAAAZBgAAAAAAAAAAAAAZBgAAAAAAABlGAAAAAAAAAAAAABlGAAAAAAAAGYYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYxgAAAAAAABjGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6368,
					1,
					"insert",
					{
						"characters": "=block"
					},
					"BgAAAGcYAAAAAAAAaBgAAAAAAAAAAAAAaBgAAAAAAABpGAAAAAAAAAAAAABpGAAAAAAAAGoYAAAAAAAAAAAAAGoYAAAAAAAAaxgAAAAAAAAAAAAAaxgAAAAAAABsGAAAAAAAAAAAAABsGAAAAAAAAG0YAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxgAAAAAAABnGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6369,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAG0YAAAAAAAAbxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbRgAAAAAAABtGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6370,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAG4YAAAAAAAAbxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhgAAAAAAABuGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6372,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHAYAAAAAAAAcRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBgAAAAAAABwGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6373,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHEYAAAAAAAAchgAAAAAAAAAAAAAchgAAAAAAAB+GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcRgAAAAAAABxGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6375,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAF4YAAAAAAAAXxgAAAAAAAAAAAAAXxgAAAAAAABrGAAAAAAAAAAAAAB/GAAAAAAAAH8YAAAAAAAADAAAACAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAAXhgAAAAAAABeGAAAAAAAAAAAAAAAAF5A"
				],
				[
					6383,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAANwYAAAAAAAA3RgAAAAAAAAAAAAA3RgAAAAAAADfGAAAAAAAAAAAAADdGAAAAAAAAN0YAAAAAAAAAgAAACAg3RgAAAAAAADdGAAAAAAAAAAAAADdGAAAAAAAAN4YAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BgAAAAAAADcGAAAAAAAAAAAAAAA4IVA"
				],
				[
					6390,
					1,
					"insert",
					{
						"characters": "rest"
					},
					"BQAAACoZAAAAAAAAKxkAAAAAAAAAAAAAKxkAAAAAAAArGQAAAAAAAAUAAABbbG9jXSsZAAAAAAAALBkAAAAAAAAAAAAALBkAAAAAAAAtGQAAAAAAAAAAAAAtGQAAAAAAAC4ZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhkAAAAAAAAvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6392,
					1,
					"insert",
					{
						"characters": "rest.push/"
					},
					"CgAAAN4YAAAAAAAA3xgAAAAAAAAAAAAA3xgAAAAAAADgGAAAAAAAAAAAAADgGAAAAAAAAOEYAAAAAAAAAAAAAOEYAAAAAAAA4hgAAAAAAAAAAAAA4hgAAAAAAADjGAAAAAAAAAAAAADjGAAAAAAAAOQYAAAAAAAAAAAAAOQYAAAAAAAA5RgAAAAAAAAAAAAA5RgAAAAAAADmGAAAAAAAAAAAAADmGAAAAAAAAOcYAAAAAAAAAAAAAOcYAAAAAAAA6BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hgAAAAAAADeGAAAAAAAAAAAAAAAYIhA"
				],
				[
					6393,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOgYAAAAAAAA6hgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6394,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOgYAAAAAAAA6BgAAAAAAAABAAAAKOgYAAAAAAAA6BgAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA6RgAAAAAAADpGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6395,
					1,
					"left_delete",
					null,
					"AQAAAOcYAAAAAAAA5xgAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6396,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOcYAAAAAAAA6RgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xgAAAAAAADnGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6397,
					1,
					"insert",
					{
						"characters": "loc"
					},
					"AwAAAOgYAAAAAAAA6RgAAAAAAAAAAAAA6RgAAAAAAADqGAAAAAAAAAAAAADqGAAAAAAAAOsYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6399,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOwYAAAAAAAA7RgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BgAAAAAAADsGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6403,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAOsYAAAAAAAA7BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xgAAAAAAADrGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6404,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOwYAAAAAAAA7hgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BgAAAAAAADsGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6418,
					1,
					"cut",
					null,
					"AQAAAF8YAAAAAAAAXxgAAAAAAAAgAAAAICAgICAgICAgICAgbGV0IHtsb2N9PWJsb2NrWzBdOwo",
					"AQAAAAAAAAABAAAAXxgAAAAAAAB/GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6421,
					1,
					"paste",
					null,
					"AQAAADMXAAAAAAAAUxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxcAAAAAAAAzFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6434,
					1,
					"insert",
					{
						"characters": "[loc+'',"
					},
					"CAAAAOwXAAAAAAAA7RcAAAAAAAAAAAAA7RcAAAAAAADuFwAAAAAAAAAAAADuFwAAAAAAAO8XAAAAAAAAAAAAAO8XAAAAAAAA8BcAAAAAAAAAAAAA8BcAAAAAAADxFwAAAAAAAAAAAADxFwAAAAAAAPIXAAAAAAAAAAAAAPIXAAAAAAAA8xcAAAAAAAAAAAAA8xcAAAAAAAD0FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BcAAAAAAADsFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6435,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQXAAAAAAAA9RcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BcAAAAAAAD0FwAAAAAAAAAAAAAAAPC/"
				],
				[
					6438,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAPwXAAAAAAAA/RcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BcAAAAAAAD8FwAAAAAAAAAAAAAAAPC/"
				],
				[
					6457,
					1,
					"insert",
					{
						"characters": "[loc+'',"
					},
					"CAAAACUZAAAAAAAAJhkAAAAAAAAAAAAAJhkAAAAAAAAnGQAAAAAAAAAAAAAnGQAAAAAAACgZAAAAAAAAAAAAACgZAAAAAAAAKRkAAAAAAAAAAAAAKRkAAAAAAAAqGQAAAAAAAAAAAAAqGQAAAAAAACsZAAAAAAAAAAAAACsZAAAAAAAALBkAAAAAAAAAAAAALBkAAAAAAAAtGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJRkAAAAAAAAlGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6458,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC0ZAAAAAAAALhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRkAAAAAAAAtGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6461,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAFMZAAAAAAAAVBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxkAAAAAAABTGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6465,
					1,
					"left_delete",
					null,
					"AQAAAOgYAAAAAAAA6BgAAAAAAAATAAAAcmVzdC5wdXNoKGxvYysnJyk7Cg",
					"AQAAAAAAAAABAAAA6BgAAAAAAAD7GAAAAAAAAAAAAAAAAAAA"
				],
				[
					6474,
					1,
					"insert",
					{
						"characters": "...."
					},
					"BAAAABsZAAAAAAAAHBkAAAAAAAAAAAAAHBkAAAAAAAAdGQAAAAAAAAAAAAAdGQAAAAAAAB4ZAAAAAAAAAAAAAB4ZAAAAAAAAHxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGxkAAAAAAAAbGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6475,
					1,
					"left_delete",
					null,
					"AQAAAB4ZAAAAAAAAHhkAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAHxkAAAAAAAAfGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6476,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAB4ZAAAAAAAAHxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhkAAAAAAAAeGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6479,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEQZAAAAAAAARRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARBkAAAAAAABEGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6486,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAABIZAAAAAAAAExkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEhkAAAAAAAASGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6487,
					1,
					"insert",
					{
						"characters": " loc,"
					},
					"BQAAABMZAAAAAAAAFBkAAAAAAAAAAAAAFBkAAAAAAAAVGQAAAAAAAAAAAAAVGQAAAAAAABYZAAAAAAAAAAAAABYZAAAAAAAAFxkAAAAAAAAAAAAAFxkAAAAAAAAYGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAExkAAAAAAAATGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6488,
					1,
					"insert",
					{
						"characters": " args:"
					},
					"BgAAABgZAAAAAAAAGRkAAAAAAAAAAAAAGRkAAAAAAAAaGQAAAAAAAAAAAAAaGQAAAAAAABsZAAAAAAAAAAAAABsZAAAAAAAAHBkAAAAAAAAAAAAAHBkAAAAAAAAdGQAAAAAAAAAAAAAdGQAAAAAAAB4ZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBkAAAAAAAAYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6490,
					1,
					"right_delete",
					null,
					"AQAAAB4ZAAAAAAAAHhkAAAAAAAAMAAAAW2xvYysnJywgLi4u",
					"AQAAAAAAAAABAAAAHhkAAAAAAAAqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6491,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB4ZAAAAAAAAHxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhkAAAAAAAAeGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6494,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAEYZAAAAAAAARxkAAAAAAAAAAAAARxkAAAAAAABIGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhkAAAAAAABGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6495,
					1,
					"right_delete",
					null,
					"AQAAAEgZAAAAAAAASBkAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAASBkAAAAAAABIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6503,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOwXAAAAAAAA7RcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BcAAAAAAADsFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6504,
					1,
					"left_delete",
					null,
					"AQAAAOwXAAAAAAAA7BcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA7RcAAAAAAADtFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6505,
					1,
					"insert",
					{
						"characters": "{loc,"
					},
					"BQAAAOwXAAAAAAAA7RcAAAAAAAAAAAAA7RcAAAAAAADuFwAAAAAAAAAAAADuFwAAAAAAAO8XAAAAAAAAAAAAAO8XAAAAAAAA8BcAAAAAAAAAAAAA8BcAAAAAAADxFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BcAAAAAAADsFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6506,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPEXAAAAAAAA8hcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RcAAAAAAADxFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6507,
					1,
					"insert",
					{
						"characters": "args:"
					},
					"BQAAAPIXAAAAAAAA8xcAAAAAAAAAAAAA8xcAAAAAAAD0FwAAAAAAAAAAAAD0FwAAAAAAAPUXAAAAAAAAAAAAAPUXAAAAAAAA9hcAAAAAAAAAAAAA9hcAAAAAAAD3FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hcAAAAAAADyFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6508,
					1,
					"insert",
					{
						"characters": " ["
					},
					"AgAAAPcXAAAAAAAA+BcAAAAAAAAAAAAA+BcAAAAAAAD5FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xcAAAAAAAD3FwAAAAAAAAAAAAAAAPC/"
				],
				[
					6510,
					1,
					"cut",
					null,
					"AQAAAPkXAAAAAAAA+RcAAAAAAAAIAAAAW2xvYysnJyw",
					"AQAAAAAAAAABAAAA+RcAAAAAAAABGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6513,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAAIYAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAAEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6528,
					1,
					"insert",
					{
						"characters": "console.config"
					},
					"DgAAAC8bAAAAAAAAMBsAAAAAAAAAAAAAMBsAAAAAAAAxGwAAAAAAAAAAAAAxGwAAAAAAADIbAAAAAAAAAAAAADIbAAAAAAAAMxsAAAAAAAAAAAAAMxsAAAAAAAA0GwAAAAAAAAAAAAA0GwAAAAAAADUbAAAAAAAAAAAAADUbAAAAAAAANhsAAAAAAAAAAAAANhsAAAAAAAA3GwAAAAAAAAAAAAA3GwAAAAAAADgbAAAAAAAAAAAAADgbAAAAAAAAORsAAAAAAAAAAAAAORsAAAAAAAA6GwAAAAAAAAAAAAA6GwAAAAAAADsbAAAAAAAAAAAAADsbAAAAAAAAPBsAAAAAAAAAAAAAPBsAAAAAAAA9GwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALxsAAAAAAAAvGwAAAAAAAAAAAAAAAPC/"
				],
				[
					6529,
					1,
					"insert",
					{
						"characters": "({"
					},
					"AgAAAD0bAAAAAAAAPhsAAAAAAAAAAAAAPhsAAAAAAAA/GwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRsAAAAAAAA9GwAAAAAAAAAAAAAAAPC/"
				],
				[
					6530,
					1,
					"insert",
					{
						"characters": " depth:"
					},
					"BwAAAD8bAAAAAAAAQBsAAAAAAAAAAAAAQBsAAAAAAABBGwAAAAAAAAAAAABBGwAAAAAAAEIbAAAAAAAAAAAAAEIbAAAAAAAAQxsAAAAAAAAAAAAAQxsAAAAAAABEGwAAAAAAAAAAAABEGwAAAAAAAEUbAAAAAAAAAAAAAEUbAAAAAAAARhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxsAAAAAAAA/GwAAAAAAAAAAAAAAAPC/"
				],
				[
					6531,
					1,
					"insert",
					{
						"characters": " 10}),"
					},
					"BgAAAEYbAAAAAAAARxsAAAAAAAAAAAAARxsAAAAAAABIGwAAAAAAAAAAAABIGwAAAAAAAEkbAAAAAAAAAAAAAEkbAAAAAAAAShsAAAAAAAAAAAAAShsAAAAAAABLGwAAAAAAAAAAAABLGwAAAAAAAEwbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhsAAAAAAABGGwAAAAAAAAAAAAAAAPC/"
				],
				[
					6532,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEwbAAAAAAAATRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATBsAAAAAAABMGwAAAAAAAAAAAAAAAPC/"
				],
				[
					6547,
					1,
					"cut",
					null,
					"AQAAACkBAAAAAAAAKQEAAAAAAABSAAAAY29uc3QgTm9uV1MgPSB0ID0+IChBcnJheS5pc0FycmF5KHQpID8gdC5maWx0ZXIoTm9uV1MpIDogdC50eXBlICE9ICd3aGl0ZXNwYWNlJyk7Cg",
					"AQAAAAAAAAABAAAAKQEAAAAAAAB7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					6548,
					2,
					"paste",
					null,
					"AgAAACkBAAAAAAAAewEAAAAAAAAAAAAAewEAAAAAAADNAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQEAAAAAAAApAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6553,
					1,
					"insert",
					{
						"characters": "MaybeNumber"
					},
					"DAAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAwAQAAAAAAAAUAAABOb25XUzABAAAAAAAAMQEAAAAAAAAAAAAAMQEAAAAAAAAyAQAAAAAAAAAAAAAyAQAAAAAAADMBAAAAAAAAAAAAADMBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADYBAAAAAAAAAAAAADYBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA4AQAAAAAAAAAAAAA4AQAAAAAAADkBAAAAAAAAAAAAADkBAAAAAAAAOgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwEAAAAAAAA0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					6557,
					1,
					"insert",
					{
						"characters": "map"
					},
					"AwAAAFgBAAAAAAAAWQEAAAAAAAAAAAAAWQEAAAAAAABaAQAAAAAAAAAAAABaAQAAAAAAAFsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAEAAAAAAABYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6559,
					1,
					"left_delete",
					null,
					"AQAAAFsBAAAAAAAAWwEAAAAAAAAGAAAAZmlsdGVy",
					"AQAAAAAAAAABAAAAWwEAAAAAAABhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6561,
					1,
					"insert",
					{
						"characters": "MaybeNumber"
					},
					"CwAAAFwBAAAAAAAAXQEAAAAAAAAAAAAAXQEAAAAAAABeAQAAAAAAAAAAAABeAQAAAAAAAF8BAAAAAAAAAAAAAF8BAAAAAAAAYAEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAABhAQAAAAAAAGIBAAAAAAAAAAAAAGIBAAAAAAAAYwEAAAAAAAAAAAAAYwEAAAAAAABkAQAAAAAAAAAAAABkAQAAAAAAAGUBAAAAAAAAAAAAAGUBAAAAAAAAZgEAAAAAAAAAAAAAZgEAAAAAAABnAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAEAAAAAAABcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6562,
					5,
					"right_delete",
					null,
					"BQAAAGcBAAAAAAAAZwEAAAAAAAABAAAATmcBAAAAAAAAZwEAAAAAAAABAAAAb2cBAAAAAAAAZwEAAAAAAAABAAAAbmcBAAAAAAAAZwEAAAAAAAABAAAAV2cBAAAAAAAAZwEAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAZwEAAAAAAABnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6565,
					1,
					"insert",
					{
						"characters": "isNan"
					},
					"BQAAAGsBAAAAAAAAbAEAAAAAAAAAAAAAbAEAAAAAAABtAQAAAAAAAAAAAABtAQAAAAAAAG4BAAAAAAAAAAAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawEAAAAAAABrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6566,
					1,
					"left_delete",
					null,
					"AQAAAG8BAAAAAAAAbwEAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAcAEAAAAAAABwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6567,
					1,
					"insert",
					{
						"characters": "N(+t)"
					},
					"BQAAAG8BAAAAAAAAcAEAAAAAAAAAAAAAcAEAAAAAAABxAQAAAAAAAAAAAABxAQAAAAAAAHIBAAAAAAAAAAAAAHIBAAAAAAAAcwEAAAAAAAAAAAAAcwEAAAAAAAB0AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwEAAAAAAABvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6568,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAHQBAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB2AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAEAAAAAAAB0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					6569,
					1,
					"insert",
					{
						"characters": " t"
					},
					"AgAAAHYBAAAAAAAAdwEAAAAAAAAAAAAAdwEAAAAAAAB4AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgEAAAAAAAB2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					6570,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAHgBAAAAAAAAeQEAAAAAAAAAAAAAeQEAAAAAAAB6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAEAAAAAAAB4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					6571,
					1,
					"insert",
					{
						"characters": " +t"
					},
					"AwAAAHoBAAAAAAAAewEAAAAAAAAAAAAAewEAAAAAAAB8AQAAAAAAAAAAAAB8AQAAAAAAAH0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					6574,
					1,
					"left_delete",
					null,
					"AQAAAH0BAAAAAAAAfQEAAAAAAAAXAAAAdC50eXBlICE9ICd3aGl0ZXNwYWNlJyk",
					"AQAAAAAAAAABAAAAfQEAAAAAAACUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6593,
					1,
					"left_delete",
					null,
					"AQAAAEIBAAAAAAAAQgEAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAQwEAAAAAAABDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6619,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAADwZAAAAAAAAPRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBkAAAAAAAA8GQAAAAAAAAAAAAAAAPC/"
				],
				[
					6636,
					1,
					"cut",
					null,
					"AQAAAH0ZAAAAAAAAfRkAAAAAAAAlAAAAY05hbWUgPyBbY0NhbGwsY05hbWUsIC4uLnJlc3RdIDogcmVzdA",
					"AQAAAAAAAAABAAAAohkAAAAAAAB9GQAAAAAAAAAAAAAAAPC/"
				],
				[
					6637,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHwZAAAAAAAAfBkAAAAAAAABAAAAKHwZAAAAAAAAfBkAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAfRkAAAAAAAB9GQAAAAAAAAAAAAAAAPC/"
				],
				[
					6638,
					2,
					"left_delete",
					null,
					"AgAAAHsZAAAAAAAAexkAAAAAAAABAAAAIHoZAAAAAAAAehkAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAfBkAAAAAAAB8GQAAAAAAAAAAAAAAAPC/"
				],
				[
					6640,
					1,
					"insert",
					{
						"characters": "args="
					},
					"BQAAAEUZAAAAAAAARhkAAAAAAAAAAAAARhkAAAAAAABHGQAAAAAAAAAAAABHGQAAAAAAAEgZAAAAAAAAAAAAAEgZAAAAAAAASRkAAAAAAAAAAAAASRkAAAAAAABKGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARRkAAAAAAABFGQAAAAAAAAAAAAAAQIBA"
				],
				[
					6641,
					1,
					"paste",
					null,
					"AQAAAEoZAAAAAAAAbxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAShkAAAAAAABKGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6642,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAG8ZAAAAAAAAcBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxkAAAAAAABvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6644,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAEUZAAAAAAAARhkAAAAAAAAAAAAARhkAAAAAAABHGQAAAAAAAAAAAABHGQAAAAAAAEgZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARRkAAAAAAABFGQAAAAAAAAAAAAAAAAAA"
				],
				[
					6645,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEgZAAAAAAAASRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASBkAAAAAAABIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6647,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE4ZAAAAAAAATxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThkAAAAAAABOGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6650,
					1,
					"insert",
					{
						"characters": "May"
					},
					"AwAAAE4ZAAAAAAAATxkAAAAAAAAAAAAATxkAAAAAAABQGQAAAAAAAAAAAABQGQAAAAAAAFEZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThkAAAAAAABOGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6651,
					1,
					"insert_completion",
					{
						"completion": "MaybeNumber",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MaybeNumber"
					},
					"AgAAAE4ZAAAAAAAAThkAAAAAAAADAAAATWF5ThkAAAAAAABZGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURkAAAAAAABRGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6652,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFkZAAAAAAAAWxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWRkAAAAAAABZGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6653,
					2,
					"right_delete",
					null,
					"AgAAAFoZAAAAAAAAWhkAAAAAAAABAAAAKVoZAAAAAAAAWhkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAWhkAAAAAAABaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6656,
					1,
					"insert",
					{
						"characters": ")="
					},
					"AgAAAH8ZAAAAAAAAgBkAAAAAAAAAAAAAgBkAAAAAAACBGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxkAAAAAAAB/GQAAAAAAAAAAAAAAAPC/"
				],
				[
					6657,
					1,
					"left_delete",
					null,
					"AQAAAIAZAAAAAAAAgBkAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAgRkAAAAAAACBGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6667,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALAZAAAAAAAAsRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBkAAAAAAACwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6668,
					1,
					"insert",
					{
						"characters": " loc.toObject()"
					},
					"DwAAALEZAAAAAAAAshkAAAAAAAAAAAAAshkAAAAAAACzGQAAAAAAAAAAAACzGQAAAAAAALQZAAAAAAAAAAAAALQZAAAAAAAAtRkAAAAAAAAAAAAAtRkAAAAAAAC2GQAAAAAAAAAAAAC2GQAAAAAAALcZAAAAAAAAAAAAALcZAAAAAAAAuBkAAAAAAAAAAAAAuBkAAAAAAAC5GQAAAAAAAAAAAAC5GQAAAAAAALoZAAAAAAAAAAAAALoZAAAAAAAAuxkAAAAAAAAAAAAAuxkAAAAAAAC8GQAAAAAAAAAAAAC8GQAAAAAAAL0ZAAAAAAAAAAAAAL0ZAAAAAAAAvhkAAAAAAAAAAAAAvhkAAAAAAAC/GQAAAAAAAAAAAAC/GQAAAAAAAMAZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRkAAAAAAACxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6672,
					1,
					"left_delete",
					null,
					"AQAAALUZAAAAAAAAtRkAAAAAAAALAAAALnRvT2JqZWN0KCk",
					"AQAAAAAAAAABAAAAwBkAAAAAAAC1GQAAAAAAAAAAAAAAAPC/"
				],
				[
					6674,
					1,
					"insert",
					{
						"characters": "{..."
					},
					"BAAAALIZAAAAAAAAsxkAAAAAAAAAAAAAsxkAAAAAAAC0GQAAAAAAAAAAAAC0GQAAAAAAALUZAAAAAAAAAAAAALUZAAAAAAAAthkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAshkAAAAAAACyGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6676,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAALkZAAAAAAAAuhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuRkAAAAAAAC5GQAAAAAAAAAAAAAAAPC/"
				],
				[
					6688,
					1,
					"left_delete",
					null,
					"AQAAALAZAAAAAAAAsBkAAAAAAAAKAAAAOiB7Li4ubG9jfQ",
					"AQAAAAAAAAABAAAAsBkAAAAAAAC6GQAAAAAAAAAAAAAAAPC/"
				],
				[
					6697,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALAZAAAAAAAAsRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBkAAAAAAACwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6698,
					1,
					"insert",
					{
						"characters": " loc+''"
					},
					"BwAAALEZAAAAAAAAshkAAAAAAAAAAAAAshkAAAAAAACzGQAAAAAAAAAAAACzGQAAAAAAALQZAAAAAAAAAAAAALQZAAAAAAAAtRkAAAAAAAAAAAAAtRkAAAAAAAC2GQAAAAAAAAAAAAC2GQAAAAAAALcZAAAAAAAAAAAAALcZAAAAAAAAuBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRkAAAAAAACxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6700,
					1,
					"insert",
					{
						"characters": "ars,"
					},
					"BAAAAK0ZAAAAAAAArhkAAAAAAAAAAAAArhkAAAAAAACvGQAAAAAAAAAAAACvGQAAAAAAALAZAAAAAAAAAAAAALAZAAAAAAAAsRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArRkAAAAAAACtGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6701,
					2,
					"left_delete",
					null,
					"AgAAALAZAAAAAAAAsBkAAAAAAAABAAAALK8ZAAAAAAAArxkAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAsRkAAAAAAACxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6702,
					1,
					"insert",
					{
						"characters": "gs,"
					},
					"AwAAAK8ZAAAAAAAAsBkAAAAAAAAAAAAAsBkAAAAAAACxGQAAAAAAAAAAAACxGQAAAAAAALIZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxkAAAAAAACvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6703,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIZAAAAAAAAsxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAshkAAAAAAACyGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6708,
					6,
					"left_delete",
					null,
					"BgAAAMMZAAAAAAAAwxkAAAAAAAABAAAAc8IZAAAAAAAAwhkAAAAAAAABAAAAZ8EZAAAAAAAAwRkAAAAAAAABAAAAcsAZAAAAAAAAwBkAAAAAAAABAAAAYb8ZAAAAAAAAvxkAAAAAAAABAAAAIL4ZAAAAAAAAvhkAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAxBkAAAAAAADEGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6713,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0HAAAIyEvdXNyL2Jpbi9lbnYgcWpzbQppbXBvcnQgKiBhcyBvcyBmcm9tICdvcyc7CmltcG9ydCAqIGFzIHN0ZCBmcm9tICdzdGQnOwppbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7CmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IENMZXhlciBmcm9tICdsaWIvbGV4ZXIvYy5qcyc7CmltcG9ydCB7IGdldE9wdCwgZXNjYXBlLCBleHRlbmRBcnJheSB9IGZyb20gJ3V0aWwnOwoKZXh0ZW5kQXJyYXkoKTsKCmxldCBqc0NGdW5jcywgbm9TdHJ1Y3RzOwoKY29uc3QgTWF5YmVOdW1iZXIgPSB0ID0+IEFycmF5LmlzQXJyYXkodCkgPyB0Lm1hcChNYXliZU51bWJlcikgOiBpc05hTigrdCkgPyB0IDogK3Q7CmNvbnN0IE5vbldTID0gdCA9PiAoQXJyYXkuaXNBcnJheSh0KSA/IHQuZmlsdGVyKE5vbldTKSA6IHQudHlwZSAhPSAnd2hpdGVzcGFjZScpOwpjb25zdCBUcmltV1MgPSB0ID0+CiAgdC5yZWR1Y2UoKGFjYywgaXRlbSkgPT4gewogICAgaWYoYWNjLmxlbmd0aCA9PSAwICYmIGl0ZW0udHlwZSA9PSAnd2hpdGVzcGFjZScpIHJldHVybiBhY2M7CiAgICBhY2MucHVzaChpdGVtKTsKICAgIHJldHVybiBhY2M7CiAgfSwgW10pOwoKY29uc3QgTGV4ZW1lID0gdCA9PiAoQXJyYXkuaXNBcnJheSh0KSA/IHQubWFwKExleGVtZSkuam9pbignJykgOiB0LmxleGVtZSk7Cgpjb25zdCBXUyA9IHQgPT4gdC50eXBlID09ICd3aGl0ZXNwYWNlJzsKCmNvbnN0IFBhcmVuID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4gewogIGxldCBzdGFydCA9IHRva2xpc3QuZmluZEluZGV4KHRvayA9PiB0KHRvaykgPT0gJygnKTsKICBsZXQgZW5kID0gdG9rbGlzdC5maW5kTGFzdEluZGV4KHRvayA9PiB0KHRvaykgPT0gJyknKTsKCiAgaWYoc3RhcnQgPT0gLTEgfHwgZW5kID09IC0xKSByZXR1cm4gW107CiAgaWYoZW5kID09IC0xKSBlbmQgPSB0b2tsaXN0Lmxlbmd0aDsKCiAgcmV0dXJuIHRva2xpc3Quc2xpY2Uoc3RhcnQgKyAxLCBlbmQpOwp9OwoKY29uc3QgQ29tbWFMaXN0ID0gKHRva2xpc3QsIHQgPSB0b2sgPT4gdG9rLmxleGVtZSkgPT4gewogIGxldCBsaXN0ID0gW107CiAgbGV0IHMgPSAnJzsKICBmb3IobGV0IHRvayBvZiBOb25XUyh0b2tsaXN0KSkgewogICAgaWYodCh0b2spID09ICcsJykgewogICAgICBsaXN0LnB1c2gocyk7CiAgICAgIHMgPSAnJzsKICAgICAgY29udGludWU7CiAgICB9CiAgICBzICs9IHQodG9rKTsKICB9CiAgaWYocyAhPSAnJykgbGlzdC5wdXNoKHMpOwogIHJldHVybiBsaXN0Owp9Owpjb25zdCBDb21tYUpvaW4gPSBsaXN0ID0+IGxpc3QucmVkdWNlKChhY2MsIGl0ZW0pID0+IGFjYy5jb25jYXQoYWNjLmxlbmd0aCA/IFsnLCcsIGl0ZW1dIDogW2l0ZW1dKSwgW10pOwoKZnVuY3Rpb24gcGFyc2UobGV4ZXIsIGZuID0gKHRvaywgYXJyKSA9PiB7fSwgLi4uYXJncykgewogIGxldCBpID0gMCwKICAgIHRvaywKICAgIGFyciA9IFsuLi5hcmdzXTsKCiAgd2hpbGUoKHRvayA9IGxleGVyLm5leHRUb2tlbigpKSkgewogICAgLy9jb25zb2xlLmxvZygncGFyc2UnLCB7IGk6IGkrKywgdG9rLCBmbjogZm4gKyAnJyB9KTsKICAgIGxldCB2ID0gZm4odG9rLCBhcnIpOwogICAgaWYodiA8IDApIGJyZWFrOwogICAgYXJyLnB1c2godG9rKTsKICAgIGlmKHYpIGJyZWFrOwogIH0KICByZXR1cm4gYXJyOwp9CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3MpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBzdGRvdXQ6IHN0ZC5vdXQsCiAgICBzdGRlcnI6IHN0ZC5lcnIsCiAgICBpbnNwZWN0T3B0aW9uczogewogICAgICBjb2xvcnM6IHRydWUsCiAgICAgIG1heFN0cmluZ0xlbmd0aDogMTAwLAogICAgICBtYXhBcnJheUxlbmd0aDogSW5maW5pdHksCiAgICAgIGNvbXBhY3Q6IGZhbHNlCiAgICB9CiAgfSk7CiAgLy9jb25zb2xlLmxvZygnYXJncycsIHNjcmlwdEFyZ3MpOwoKICBsZXQgb3V0cHV0TmFtZSwKICAgIGRlYnVnLAogICAgb3V0cHV0ID0gc3RkLm91dDsKICBsZXQgcGFyYW1zID0gZ2V0T3B0KAogICAgewogICAgICBvdXRwdXQ6IFt0cnVlLCBmaWxlID0+IChvdXRwdXQgPSBzdGQub3Blbigob3V0cHV0TmFtZSA9IGZpbGUpLCAndysnKSksICdvJ10sCiAgICAgIGRlYnVnOiBbZmFsc2UsICgpID0+IChkZWJ1ZyA9IChkZWJ1ZyB8IDApICsgMSksICd4J10sCiAgICAgICduby1zdHJ1Y3RzJzogW2ZhbHNlLCAoKSA9PiAobm9TdHJ1Y3RzID0gdHJ1ZSksICdTJ10sCiAgICAgIGNmdW5jOiBbZmFsc2UsIChqc0NGdW5jcyA9IHRydWUpLCAnYyddLAogICAgICAnQCc6ICdmaWxlcycKICAgIH0sCiAgICBhcmdzCiAgKTsKICBsZXQgY0Z1bmNMaXN0cyA9IFtdOwogIGxldCBmaWxlcyA9IHBhcmFtc1snQCddOwoKICBmb3IobGV0IGZpbGUgb2YgZmlsZXMpIHsKICAgIC8vY29uc29sZS5sb2coJ2ZpbGUnLCBmaWxlKTsKCiAgICBsZXQgc3RyID0gc3RkLmxvYWRGaWxlKGZpbGUsICd1dGYtOCcpOwoKICAgIC8qY29uc29sZS5sb2coJ3N0cicsIHN0cik7CiAgICBjb25zb2xlLmxvZygnc3RyJywgc3RyLnNwbGl0KCdcbicpWzBdKTsqLwoKICAgIGxldCBsZXhlciA9IG5ldyBDTGV4ZXIoc3RyLCBmaWxlKTsKCiAgICBjb25zdCB7IHJ1bGVzLCB0b2tlbnMgfSA9IGxleGVyOwogICAgbGV0IGxpbmUgPSBbXSwKICAgICAgYmxvY2sgPSBbXTsKICAgIGxldCB0b2tsaXN0ID0gW107CiAgICBsZXQgaXNDRnVuY0xpc3QgPSBmYWxzZSwKICAgICAgaXNDRnVuY0NhbGwgPSBmYWxzZSwKICAgICAgY0Z1bmNMaXN0TmFtZXMgPSBbXSwKICAgICAgY0Z1bmNMaXN0T2JqZWN0cyA9IHt9OwoKICAgIC8vY29uc29sZS5sb2coJ3J1bGVzJywgIHJ1bGVzKTsKCiAgICBmb3IobGV0IGlkIG9mIGxleGVyKSB7CiAgICAgIC8vbGluZS5wdXNoKGxleGVyLnRva2VuKTsKICAgICAgYmxvY2sucHVzaChsZXhlci50b2tlbik7CgogICAgICBpZighbm9TdHJ1Y3RzKQogICAgICAgIGlmKGlkID09IHJ1bGVzWydzdHJ1Y3QnXSB8fCBpZCA9PSBydWxlc1sndHlwZWRlZiddKSB7CiAgICAgICAgICBjb25zdCB7IGxvYywgdG9rZW46IHRvayB9ID0gbGV4ZXI7CgogICAgICAgICAgaWYobG9jLmNvbHVtbiA9PSAxKSB7CiAgICAgICAgICAgIGxldCBzZXEsCiAgICAgICAgICAgICAgbGluZSA9IGxvYy5saW5lLAogICAgICAgICAgICAgIHRleHQgPSAnJzsKICAgICAgICAgICAgc2VxID0gcGFyc2UobGV4ZXIsICh0b2ssIGFycikgPT4gdG9rLmxvYy5saW5lICE9IGxpbmUgJiYgLTEsIHRvayk7CiAgICAgICAgICAgIGNvbnN0IGxhc3QgPSBzZXEuZmlsdGVyKE5vbldTKS5hdCgtMSk7CiAgICAgICAgICAgIGlmKGxhc3QudHlwZSA9PSAnbGJyYWNlJykgewogICAgICAgICAgICAgIHNlcSA9IHBhcnNlKGxleGVyLCAodG9rLCBhcnIpID0+IHRvay5sb2MuY29sdW1uID09IDEgJiYgdG9rLnR5cGUgPT0gJ3JicmFjZScsIC4uLnNlcSk7CiAgICAgICAgICAgICAgc2VxID0gcGFyc2UobGV4ZXIsICh0b2ssIGFycikgPT4gdG9rLnR5cGUgPT0gJ3NlbWknLCAuLi5zZXEpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIG91dHB1dC5wdXRzKHNlcS5yZWR1Y2UoKHMsIHQpID0+IHMgKyB0LmxleGVtZSwgJycpLnRyaW0oKSArICdcblxuJyk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgaWYoanNDRnVuY3MpIHsKICAgICAgICBpZihpZCA9PSBydWxlc1snaWRlbnRpZmllciddKSB7CiAgICAgICAgICBpZihsZXhlci5sZXhlbWUgPT0gJ0pTQ0Z1bmN0aW9uTGlzdEVudHJ5JykgaXNDRnVuY0xpc3QgPSB0cnVlOwogICAgICAgICAgdG9rbGlzdFtsZXhlci5zZXFdID0gbGV4ZXIubGV4ZW1lOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYoaXNDRnVuY0xpc3QpIHsKICAgICAgICBpZihpZCA9PSBydWxlc1sncmJyYWNlJ10gJiYgbGV4ZXIubG9jLmNvbHVtbiA9PSAxKSB7CiAgICAgICAgICB3aGlsZSgKICAgICAgICAgICAgYmxvY2subGVuZ3RoID4gMCAmJgogICAgICAgICAgICBbJ3doaXRlc3BhY2UnLCAncmJyYWNlJywgJ3NpbmdsZUxpbmVDb21tZW50JywgJ211bHRpTGluZUNvbW1lbnQnXS5pbmRleE9mKGJsb2NrWzBdLnR5cGUpICE9IC0xCiAgICAgICAgICApCiAgICAgICAgICAgIGJsb2NrLnNoaWZ0KCk7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdibG9jay5zbGljZSgwLDEwKScsIGJsb2NrLnNsaWNlKDAsMTApKTsKICAgICAgICAgIGxldCBmaXJzdExpbmUgPSBibG9ja1swXS5sb2MubGluZTsKICAgICAgICAgIGxldCByb3dzID0gTm9uV1MoYmxvY2spCiAgICAgICAgICAgIC5yZWR1Y2UoKGFjYywgdG9rZW4pID0+IHsKICAgICAgICAgICAgICBpZihbJ3ByZXByb2Nlc3NvcicsICdzaW5nbGVMaW5lQ29tbWVudCcsICdtdWx0aUxpbmVDb21tZW50J10uaW5kZXhPZih0b2tlbi50eXBlKSA9PSAtMSkKICAgICAgICAgICAgICAgIChhY2NbdG9rZW4ubG9jLmxpbmUgLSBmaXJzdExpbmVdID8/PSBbXSkucHVzaCh0b2tlbik7CiAgICAgICAgICAgICAgcmV0dXJuIGFjYzsKICAgICAgICAgICAgfSwgW10pCiAgICAgICAgICAgIC5maWx0ZXIobCA9PiBsLmxlbmd0aCk7CiAgICAgICAgICBsZXQgY2Z1bmNMaXN0ID0gcm93cwogICAgICAgICAgICAuc2xpY2UoMCwgLTEpCiAgICAgICAgICAgIC5tYXAoKHJvdywgaSkgPT4KICAgICAgICAgICAgICBpID4gMAogICAgICAgICAgICAgICAgPyBbcm93WzBdLmxleGVtZV0uY29uY2F0KENvbW1hTGlzdChQYXJlbihyb3csIHQgPT4gdC5sZXhlbWUpKSkKICAgICAgICAgICAgICAgIDogcm93LmZpbHRlcih0b2sgPT4gdG9rLnR5cGUgPT0gJ2lkZW50aWZpZXInKS5sYXN0Py5sZXhlbWUKICAgICAgICAgICAgKTsKICAgICAgICAgIGxldCBoZWFkZXIgPSBbY2Z1bmNMaXN0LnNoaWZ0KCksIGJsb2NrWzBdLmxvYyArICcnXTsKICAgICAgICAgIGNmdW5jTGlzdCA9IFtoZWFkZXIsIGNmdW5jTGlzdF07CgogICAgICAgICAgY0Z1bmNMaXN0TmFtZXMucHVzaChoZWFkZXJbMF0pOwoKICAgICAgICAgIGNvbnNvbGUubG9nKCdjZnVuY0xpc3QnLCBjb25zb2xlLmNvbmZpZyh7IGNvbXBhY3Q6IDEgfSksIGNmdW5jTGlzdCk7CiAgICAgICAgICBjRnVuY0xpc3RzLnB1c2goY2Z1bmNMaXN0KTsKCiAgICAgICAgICBibG9jay5zcGxpY2UoMCwgYmxvY2subGVuZ3RoKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYoaWQgPT0gcnVsZXNbJ3doaXRlc3BhY2UnXSkgewogICAgICAgIGNvbnN0IHsgcG9zLCBzZXEsIGxleGVtZSwgdmFsdWUsIGNoYXJMZW5ndGggfSA9IGxleGVyOwoKICAgICAgICAvKiBpZihsZXhlbWUgPT0gJ1xuJykgewogICAgICAgICAgbGluZS5zcGxpY2UoMCwgbGluZS5sZW5ndGgpOwogICAgICAgIH0qLwogICAgICB9IGVsc2UgaWYoaWQgPT0gcnVsZXNbJ3NlbWknXSkgewogICAgICAgIGJsb2NrID0gVHJpbVdTKGJsb2NrKTsKCiAgICAgICAgaWYoYmxvY2subGVuZ3RoID49IDMgJiYgTm9uV1MoYmxvY2spWzFdPy50eXBlID09ICdlcXVhbCcgJiYgYmxvY2tbMF0/LnR5cGUgPT0gJ2lkZW50aWZpZXInICYmCiAgICAgICAgICAvXyhwcm90b3xjdG9yKSQvLnRlc3QoYmxvY2tbMF0ubGV4ZW1lKQogICAgICAgICkgewogICAgICAgICAgY29uc29sZS5sb2coJ0FTU0lHTicsIExleGVtZShibG9jaykpOwoKICAgICAgICAgIGlzQ0Z1bmNDYWxsID0gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIGlmKGlzQ0Z1bmNDYWxsKSB7CiAgICAgICAgICBsZXQgZm5JbmRleCA9IGJsb2NrLmZpbmRJbmRleCh0b2sgPT4gdG9rLmxleGVtZT09JygnKS0xOwogICAgICAgICAgbGV0IGZuTmFtZSA9IGJsb2NrW2ZuSW5kZXhdLmxleGVtZTsKICAgICAgICAgIGxldCBmbkFyZ3MgPSBDb21tYUxpc3QoUGFyZW4oYmxvY2spKTsKCiAgICAgICAgICB3aGlsZShbJ2N0eCcsJ20nXS5pbmRleE9mKGZuQXJnc1swXSkgIT0gLTEpCiAgICAgICAgICAgIGZuQXJncy5zaGlmdCgpOwoKICAgICAgICAgIGNvbnNvbGUubG9nKCdpc0NGdW5jQ2FsbCcsIHtmbkluZGV4LGZuTmFtZSxmbkFyZ3N9KTsKICAgICAgICAgICAgbGV0IHtsb2N9PWJsb2NrWzBdOwoKICAgICAgICAgIGlmKGZuTmFtZSA9PSAnSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QnKSB7CiAgICAgICAgICAgIGxldCBbb2JqTmFtZSwgY0Z1bmNMaXN0TmFtZV0gPSBmbkFyZ3M7CiAgICAgICAgICAgIGNGdW5jTGlzdE9iamVjdHNbY0Z1bmNMaXN0TmFtZV0gPSB7bG9jLCBhcmdzOiBbIG9iak5hbWVdIH07CiAgICAgICAgICB9IGVsc2UgaWYoZm5JbmRleCA+IDApIHsKICAgICAgICAgICAgbGV0IG9iak5hbWUgPSBMZXhlbWUoYmxvY2tbMF0pOwogICAgICAgICAgICBsZXQgW2NDYWxsLGNOYW1lLC4uLnJlc3RdPWZuQXJnczsKICAgICAgICAgICAgCgogICAgICAgICAgICBjb25zb2xlLmxvZygnJywge29iak5hbWUsY05hbWV9KTsKCmlmKGNOYW1lKQogIGNOYW1lPWNOYW1lLnJlcGxhY2UoL14ifCIkL2csICcnKTsKCmxldCBhcmdzPU1heWJlTnVtYmVyKGNOYW1lID8gW2NDYWxsLGNOYW1lLCAuLi5yZXN0XSA6IHJlc3QpOwogICAgICAgICAgICAgY0Z1bmNMaXN0T2JqZWN0c1tvYmpOYW1lXSA9IHsgYXJncywgbG9jOiBsb2MrJycgfTsKICAgICAgICAgIH0KCiAgICAgICAgICBjb25zb2xlLmxvZygnY0Z1bmNDYWxsKCknLCBMZXhlbWUoYmxvY2spKTsKICAgICAgICB9CiAgICAgICAgaXNDRnVuY0xpc3QgPSBmYWxzZTsKICAgICAgICBpc0NGdW5jQ2FsbCA9IGZhbHNlOwoKICAgICAgICBibG9jay5zcGxpY2UoMCwgYmxvY2subGVuZ3RoKTsKICAgICAgfSBlbHNlIGlmKGxleGVyLmxvYy5jb2x1bW4gPT0gMSAmJiBpZCAhPSBydWxlc1snd2hpdGVzcGFjZSddICYmIGlkICE9IHJ1bGVzWydwcmVwcm9jZXNzb3InXSkgewogICAgICB9CiAgICAgIGlmKGNGdW5jTGlzdE5hbWVzLmluZGV4T2YobGV4ZXIubGV4ZW1lKSAhPSAtMSkgewogICAgICAgIGNvbnN0IHsgbGV4ZW1lLCBsb2MgfSA9IGxleGVyOwogICAgICAgIGlzQ0Z1bmNDYWxsID0gdHJ1ZTsKICAgICAgfQoKICAgICAgb3V0cHV0LmZsdXNoKCk7CiAgICB9CiAgICBjb25zb2xlLmxvZygnY0Z1bmNMaXN0T2JqZWN0cycsIGNvbnNvbGUuY29uZmlnKHsgZGVwdGg6IDEwfSksIGNGdW5jTGlzdE9iamVjdHMpOwogIH0KCiAgb3V0cHV0LnB1dHMoSlNPTi5zdHJpbmdpZnkoY0Z1bmNMaXN0cywgbnVsbCwgMikpOwoKICBpZihvdXRwdXROYW1lKSBjb25zb2xlLmxvZyhvdXRwdXQudGVsbCgpICsgYCBieXRlcyB3cml0dGVuIHRvICcke291dHB1dE5hbWV9J2ApOwogIG91dHB1dC5jbG9zZSgpOwp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvci5tZXNzYWdlfVxuJHtlcnJvci5zdGFja31gKTsKICBzdGQuZXhpdCgxKTsKfQoAAAAAAAAAACsdAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhkAAAAAAAC+GQAAAAAAAAAAAAAAAPC/"
				],
				[
					6716,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAG0XAAAAAAAAbhcAAAAAAAAAAAAAbhcAAAAAAABvFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbRcAAAAAAABtFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6722,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAsWAAAAAAAADBYAAAAAAAAAAAAADBYAAAAAAAANFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxYAAAAAAAALFgAAAAAAAAAAAAAAAFlA"
				],
				[
					6724,
					5,
					"join_lines",
					null,
					"DgAAAEoVAAAAAAAAShUAAAAAAAABAAAACkoVAAAAAAAAShUAAAAAAAAKAAAAICAgICAgICAgIF4VAAAAAAAAXhUAAAAAAAABAAAACl4VAAAAAAAAXhUAAAAAAAAKAAAAICAgICAgICAgIF4VAAAAAAAAXxUAAAAAAAAAAAAAghUAAAAAAACCFQAAAAAAAAEAAAAKghUAAAAAAACCFQAAAAAAAAoAAAAgICAgICAgICAgghUAAAAAAACDFQAAAAAAAAAAAACkFQAAAAAAAKQVAAAAAAAAAQAAAAqkFQAAAAAAAKQVAAAAAAAACgAAACAgICAgICAgICCkFQAAAAAAAKUVAAAAAAAAAAAAAMsVAAAAAAAAyxUAAAAAAAABAAAACssVAAAAAAAAyxUAAAAAAAAIAAAAICAgICAgICDLFQAAAAAAAMwVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAShUAAAAAAABKFQAAAAAAAAAAAAAAAF5A"
				],
				[
					6736,
					1,
					"left_delete",
					null,
					"AQAAAMsVAAAAAAAAyxUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAzBUAAAAAAADMFQAAAAAAAAAAAAAAAPC/"
				],
				[
					6739,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAyxUAAAAAAADLFQAAAAAAAAAAAAAAAPC/"
				],
				[
					6745,
					1,
					"insert",
					{
						"characters": ",compact:"
					},
					"CQAAAPQbAAAAAAAA9RsAAAAAAAAAAAAA9RsAAAAAAAD2GwAAAAAAAAAAAAD2GwAAAAAAAPcbAAAAAAAAAAAAAPcbAAAAAAAA+BsAAAAAAAAAAAAA+BsAAAAAAAD5GwAAAAAAAAAAAAD5GwAAAAAAAPobAAAAAAAAAAAAAPobAAAAAAAA+xsAAAAAAAAAAAAA+xsAAAAAAAD8GwAAAAAAAAAAAAD8GwAAAAAAAP0bAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BsAAAAAAAD0GwAAAAAAAAAAAAAAAPC/"
				],
				[
					6746,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAP0bAAAAAAAA/hsAAAAAAAAAAAAA/hsAAAAAAAD/GwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RsAAAAAAAD9GwAAAAAAAAAAAAAAAPC/"
				],
				[
					6757,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAAO0ZAAAAAAAA7hkAAAAAAAAAAAAA7hkAAAAAAADuGQAAAAAAAAoAAABjOiBsb2MgKyAn",
					"AQAAAAAAAAABAAAA7RkAAAAAAAD3GQAAAAAAAAAAAAAAAPC/"
				],
				[
					6758,
					1,
					"right_delete",
					null,
					"AQAAAO4ZAAAAAAAA7hkAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAA7hkAAAAAAADuGQAAAAAAAAAAAAAAAPC/"
				],
				[
					6767,
					1,
					"cut",
					null,
					"AQAAAGcYAAAAAAAAZxgAAAAAAAAEAAAAbG9jLA",
					"AQAAAAAAAAABAAAAZxgAAAAAAABrGAAAAAAAAAAAAAAAAPC/"
				],
				[
					6770,
					1,
					"insert",
					{
						"characters": ",loc"
					},
					"BAAAAHcYAAAAAAAAeBgAAAAAAAAAAAAAeBgAAAAAAAB5GAAAAAAAAAAAAAB5GAAAAAAAAHoYAAAAAAAAAAAAAHoYAAAAAAAAexgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxgAAAAAAAB3GAAAAAAAAAAAAAAAAPC/"
				],
				[
					6777,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAkaAAAAAAAAChoAAAAAAAAAAAAAChoAAAAAAAALGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACRoAAAAAAAAJGgAAAAAAAAAAAAAAAFlA"
				],
				[
					6786,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAA0ZAAAAAAAADhkAAAAAAAAAAAAADhkAAAAAAAAPGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADRkAAAAAAAANGQAAAAAAAAAAAAAAAF5A"
				],
				[
					6794,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAFsWAAAAAAAAXBYAAAAAAAAAAAAAXBYAAAAAAABkFgAAAAAAAAAAAABkFgAAAAAAAGUWAAAAAAAAAAAAAGUWAAAAAAAAbRYAAAAAAAAAAAAAXBYAAAAAAABcFgAAAAAAAAgAAAAgICAgICAgIGUWAAAAAAAAZhYAAAAAAAAAAAAAZhYAAAAAAABnFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxYAAAAAAABbFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6795,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGcWAAAAAAAAaRYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxYAAAAAAABnFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6796,
					1,
					"insert",
					{
						"characters": "blokck"
					},
					"BgAAAGgWAAAAAAAAaRYAAAAAAAAAAAAAaRYAAAAAAABqFgAAAAAAAAAAAABqFgAAAAAAAGsWAAAAAAAAAAAAAGsWAAAAAAAAbBYAAAAAAAAAAAAAbBYAAAAAAABtFgAAAAAAAAAAAABtFgAAAAAAAG4WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBYAAAAAAABoFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6797,
					3,
					"left_delete",
					null,
					"AwAAAG0WAAAAAAAAbRYAAAAAAAABAAAAa2wWAAAAAAAAbBYAAAAAAAABAAAAY2sWAAAAAAAAaxYAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAbhYAAAAAAABuFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6798,
					1,
					"insert",
					{
						"characters": "ck"
					},
					"AgAAAGsWAAAAAAAAbBYAAAAAAAAAAAAAbBYAAAAAAABtFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaxYAAAAAAABrFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6799,
					1,
					"insert",
					{
						"characters": ".c"
					},
					"AgAAAG0WAAAAAAAAbhYAAAAAAAAAAAAAbhYAAAAAAABvFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbRYAAAAAAABtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6800,
					1,
					"left_delete",
					null,
					"AQAAAG4WAAAAAAAAbhYAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAbxYAAAAAAABvFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6801,
					1,
					"insert",
					{
						"characters": "some"
					},
					"BAAAAG4WAAAAAAAAbxYAAAAAAAAAAAAAbxYAAAAAAABwFgAAAAAAAAAAAABwFgAAAAAAAHEWAAAAAAAAAAAAAHEWAAAAAAAAchYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhYAAAAAAABuFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6802,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHIWAAAAAAAAdBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAchYAAAAAAAByFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6803,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMWAAAAAAAAdBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxYAAAAAAABzFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6804,
					1,
					"left_delete",
					null,
					"AQAAAHMWAAAAAAAAcxYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAdBYAAAAAAAB0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6805,
					1,
					"insert",
					{
						"characters": "tok"
					},
					"AwAAAHMWAAAAAAAAdBYAAAAAAAAAAAAAdBYAAAAAAAB1FgAAAAAAAAAAAAB1FgAAAAAAAHYWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxYAAAAAAABzFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6806,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAHYWAAAAAAAAdxYAAAAAAAAAAAAAdxYAAAAAAAB4FgAAAAAAAAAAAAB4FgAAAAAAAHkWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdhYAAAAAAAB2FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6807,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHkWAAAAAAAAehYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeRYAAAAAAAB5FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6809,
					1,
					"insert",
					{
						"characters": "tok.lexeme="
					},
					"CwAAAHoWAAAAAAAAexYAAAAAAAAAAAAAexYAAAAAAAB8FgAAAAAAAAAAAAB8FgAAAAAAAH0WAAAAAAAAAAAAAH0WAAAAAAAAfhYAAAAAAAAAAAAAfhYAAAAAAAB/FgAAAAAAAAAAAAB/FgAAAAAAAIAWAAAAAAAAAAAAAIAWAAAAAAAAgRYAAAAAAAAAAAAAgRYAAAAAAACCFgAAAAAAAAAAAACCFgAAAAAAAIMWAAAAAAAAAAAAAIMWAAAAAAAAhBYAAAAAAAAAAAAAhBYAAAAAAACFFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehYAAAAAAAB6FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6810,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAIUWAAAAAAAAhxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRYAAAAAAACFFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6811,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAIUWAAAAAAAAhRYAAAAAAAABAAAAJ4UWAAAAAAAAhRYAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAhhYAAAAAAACGFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6812,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAIUWAAAAAAAAhhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRYAAAAAAACFFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6813,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAIYWAAAAAAAAiBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhYAAAAAAACGFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6814,
					1,
					"paste",
					null,
					"AQAAAIcWAAAAAAAAkhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxYAAAAAAACHFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6816,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUWAAAAAAAAlhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlRYAAAAAAACVFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6817,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJYWAAAAAAAAmBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhYAAAAAAACWFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6818,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAJcWAAAAAAAAmBYAAAAAAAAAAAAAmBYAAAAAAACgFgAAAAAAAAAAAACgFgAAAAAAAKEWAAAAAAAAAAAAAKEWAAAAAAAAqRYAAAAAAAAAAAAAmBYAAAAAAACYFgAAAAAAAAgAAAAgICAgICAgIJgWAAAAAAAAohYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlxYAAAAAAACXFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6819,
					1,
					"insert",
					{
						"characters": "isF"
					},
					"AwAAAKIWAAAAAAAAoxYAAAAAAAAAAAAAoxYAAAAAAACkFgAAAAAAAAAAAACkFgAAAAAAAKUWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAohYAAAAAAACiFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6820,
					1,
					"left_delete",
					null,
					"AQAAAKQWAAAAAAAApBYAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAApRYAAAAAAAClFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6821,
					1,
					"insert",
					{
						"characters": "CFuncCall=true;"
					},
					"DwAAAKQWAAAAAAAApRYAAAAAAAAAAAAApRYAAAAAAACmFgAAAAAAAAAAAACmFgAAAAAAAKcWAAAAAAAAAAAAAKcWAAAAAAAAqBYAAAAAAAAAAAAAqBYAAAAAAACpFgAAAAAAAAAAAACpFgAAAAAAAKoWAAAAAAAAAAAAAKoWAAAAAAAAqxYAAAAAAAAAAAAAqxYAAAAAAACsFgAAAAAAAAAAAACsFgAAAAAAAK0WAAAAAAAAAAAAAK0WAAAAAAAArhYAAAAAAAAAAAAArhYAAAAAAACvFgAAAAAAAAAAAACvFgAAAAAAALAWAAAAAAAAAAAAALAWAAAAAAAAsRYAAAAAAAAAAAAAsRYAAAAAAACyFgAAAAAAAAAAAACyFgAAAAAAALMWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApBYAAAAAAACkFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6828,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALMWAAAAAAAAtBYAAAAAAAAAAAAAtBYAAAAAAAC+FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsxYAAAAAAACzFgAAAAAAAAAAAAAA4HBA"
				],
				[
					6829,
					1,
					"insert",
					{
						"characters": "while"
					},
					"BQAAAL4WAAAAAAAAvxYAAAAAAAAAAAAAvxYAAAAAAADAFgAAAAAAAAAAAADAFgAAAAAAAMEWAAAAAAAAAAAAAMEWAAAAAAAAwhYAAAAAAAAAAAAAwhYAAAAAAADDFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhYAAAAAAAC+FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6830,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMMWAAAAAAAAxRYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwxYAAAAAAADDFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6831,
					1,
					"insert",
					{
						"characters": "block"
					},
					"BQAAAMQWAAAAAAAAxRYAAAAAAAAAAAAAxRYAAAAAAADGFgAAAAAAAAAAAADGFgAAAAAAAMcWAAAAAAAAAAAAAMcWAAAAAAAAyBYAAAAAAAAAAAAAyBYAAAAAAADJFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxBYAAAAAAADEFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6832,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMkWAAAAAAAAyxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyRYAAAAAAADJFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6833,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAMoWAAAAAAAAyxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyhYAAAAAAADKFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6835,
					1,
					"insert",
					{
						"characters": ".lexeme"
					},
					"BwAAAMwWAAAAAAAAzRYAAAAAAAAAAAAAzRYAAAAAAADOFgAAAAAAAAAAAADOFgAAAAAAAM8WAAAAAAAAAAAAAM8WAAAAAAAA0BYAAAAAAAAAAAAA0BYAAAAAAADRFgAAAAAAAAAAAADRFgAAAAAAANIWAAAAAAAAAAAAANIWAAAAAAAA0xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzBYAAAAAAADMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6836,
					1,
					"insert",
					{
						"characters": " !=="
					},
					"BAAAANMWAAAAAAAA1BYAAAAAAAAAAAAA1BYAAAAAAADVFgAAAAAAAAAAAADVFgAAAAAAANYWAAAAAAAAAAAAANYWAAAAAAAA1xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xYAAAAAAADTFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6837,
					1,
					"left_delete",
					null,
					"AQAAANYWAAAAAAAA1hYAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAA1xYAAAAAAADXFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6838,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYWAAAAAAAA1xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hYAAAAAAADWFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6839,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAANcWAAAAAAAA2RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1xYAAAAAAADXFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6840,
					1,
					"insert",
					{
						"characters": "JS_NewClass"
					},
					"CwAAANgWAAAAAAAA2RYAAAAAAAAAAAAA2RYAAAAAAADaFgAAAAAAAAAAAADaFgAAAAAAANsWAAAAAAAAAAAAANsWAAAAAAAA3BYAAAAAAAAAAAAA3BYAAAAAAADdFgAAAAAAAAAAAADdFgAAAAAAAN4WAAAAAAAAAAAAAN4WAAAAAAAA3xYAAAAAAAAAAAAA3xYAAAAAAADgFgAAAAAAAAAAAADgFgAAAAAAAOEWAAAAAAAAAAAAAOEWAAAAAAAA4hYAAAAAAAAAAAAA4hYAAAAAAADjFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2BYAAAAAAADYFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6842,
					1,
					"insert",
					{
						"characters": "\nblock.shift"
					},
					"DwAAAOUWAAAAAAAA5hYAAAAAAAAAAAAA5hYAAAAAAADwFgAAAAAAAAAAAADmFgAAAAAAAOYWAAAAAAAACgAAACAgICAgICAgICDmFgAAAAAAAPIWAAAAAAAAAAAAAPIWAAAAAAAA8xYAAAAAAAAAAAAA8xYAAAAAAAD0FgAAAAAAAAAAAAD0FgAAAAAAAPUWAAAAAAAAAAAAAPUWAAAAAAAA9hYAAAAAAAAAAAAA9hYAAAAAAAD3FgAAAAAAAAAAAAD3FgAAAAAAAPgWAAAAAAAAAAAAAPgWAAAAAAAA+RYAAAAAAAAAAAAA+RYAAAAAAAD6FgAAAAAAAAAAAAD6FgAAAAAAAPsWAAAAAAAAAAAAAPsWAAAAAAAA/BYAAAAAAAAAAAAA/BYAAAAAAAD9FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RYAAAAAAADlFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6843,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP0WAAAAAAAA/xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RYAAAAAAAD9FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6845,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAP8WAAAAAAAAABcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xYAAAAAAAD/FgAAAAAAAAAAAAAAAPC/"
				],
				[
					6853,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAAAXAAAAAAAAARcAAAAAAAAAAAAAARcAAAAAAAANFwAAAAAAAAAAAAABFwAAAAAAAAEXAAAAAAAADAAAACAgICAgICAgICAgIAEXAAAAAAAACxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABcAAAAAAAAAFwAAAAAAAAAAAAAA4HBA"
				],
				[
					6865,
					1,
					"paste",
					null,
					"AgAAAAgXAAAAAAAATRcAAAAAAAAAAAAATRcAAAAAAABNFwAAAAAAAAEAAAAg",
					"AQAAAAAAAAABAAAACRcAAAAAAAAIFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6868,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAAA8XAAAAAAAAEBcAAAAAAAAAAAAAEBcAAAAAAAAQFwAAAAAAAAYAAAAgICAvL2M",
					"AQAAAAAAAAABAAAAFRcAAAAAAAAPFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6878,
					1,
					"paste",
					null,
					"AgAAABwXAAAAAAAAIRcAAAAAAAAAAAAAIRcAAAAAAAAhFwAAAAAAAAsAAABpc0NGdW5jQ2FsbA",
					"AQAAAAAAAAABAAAAHBcAAAAAAAAnFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6881,
					2,
					"left_delete",
					null,
					"AgAAACUXAAAAAAAAJRcAAAAAAAAaAAAAIGZuSW5kZXgsIGZuTmFtZSwgZm5BcmdzIH0kFwAAAAAAACQXAAAAAAAAAQAAAHs",
					"AQAAAAAAAAABAAAAJRcAAAAAAAA/FwAAAAAAAAAAAAAAAPC/"
				],
				[
					6882,
					1,
					"paste",
					null,
					"AQAAACQXAAAAAAAAKRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJBcAAAAAAAAkFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6939,
					1,
					"insert_snippet",
					{
						"contents": "[${0:$SELECTION}]"
					},
					"AgAAALcYAAAAAAAAtxgAAAAAAAAKAAAAZm5OYW1lID09ILcYAAAAAAAAwxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxgAAAAAAADBGAAAAAAAAAAAAAAAAPC/"
				],
				[
					7061,
					1,
					"cut",
					null,
					"AQAAAKoYAAAAAAAAqhgAAAAAAADFAAAAICAgICAgICAgIGlmKFtmbk5hbWUgPT0gXSdKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdCcpIHsKICAgICAgICAgICAgbGV0IFtvYmpOYW1lLCBjRnVuY0xpc3ROYW1lXSA9IGZuQXJnczsKICAgICAgICAgICAgY0Z1bmNMaXN0T2JqZWN0c1tjRnVuY0xpc3ROYW1lXSA9IHsgIGFyZ3M6IFtvYmpOYW1lXSxsb2MgfTsKICAgICAgICAgIH0gZWxzZSA",
					"AQAAAAAAAAABAAAAqhgAAAAAAABvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7062,
					2,
					"paste",
					null,
					"AgAAAKoYAAAAAAAAbxkAAAAAAAAAAAAAbxkAAAAAAAA0GgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhgAAAAAAACqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					7077,
					1,
					"paste",
					null,
					"AgAAAIkZAAAAAAAAlBkAAAAAAAAAAAAAlBkAAAAAAACUGQAAAAAAABoAAABKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdA",
					"AQAAAAAAAAABAAAAiRkAAAAAAACjGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7087,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAKoZAAAAAAAAqxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhkAAAAAAACqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7088,
					1,
					"left_delete",
					null,
					"AQAAAKoZAAAAAAAAqhkAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAqxkAAAAAAACrGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7089,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKoZAAAAAAAAqxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhkAAAAAAACqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7099,
					1,
					"insert",
					{
						"characters": "ClassId"
					},
					"BwAAALUZAAAAAAAAthkAAAAAAAAAAAAAthkAAAAAAAC3GQAAAAAAAAAAAAC3GQAAAAAAALgZAAAAAAAAAAAAALgZAAAAAAAAuRkAAAAAAAAAAAAAuRkAAAAAAAC6GQAAAAAAAAAAAAC6GQAAAAAAALsZAAAAAAAAAAAAALsZAAAAAAAAvBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtRkAAAAAAAC1GQAAAAAAAAAAAAAAAPC/"
				],
				[
					7101,
					1,
					"left_delete",
					null,
					"AQAAALwZAAAAAAAAvBkAAAAAAAAIAAAARnVuY0xpc3Q",
					"AQAAAAAAAAABAAAAvBkAAAAAAADEGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7116,
					1,
					"paste",
					null,
					"AgAAAOkZAAAAAAAA9RkAAAAAAAAAAAAA9RkAAAAAAAD1GQAAAAAAAA0AAABjRnVuY0xpc3ROYW1l",
					"AQAAAAAAAAABAAAA6RkAAAAAAAD2GQAAAAAAAAAAAAAAAPC/"
				],
				[
					7126,
					1,
					"paste",
					null,
					"AgAAAAMaAAAAAAAAChoAAAAAAAAAAAAAChoAAAAAAAAKGgAAAAAAAAcAAABvYmpOYW1l",
					"AQAAAAAAAAABAAAAAxoAAAAAAAAKGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7135,
					1,
					"left_delete",
					null,
					"AQAAAMIYAAAAAAAAwhgAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAwxgAAAAAAADDGAAAAAAAAAAAAAAAAPC/"
				],
				[
					7140,
					1,
					"left_delete",
					null,
					"AQAAALcYAAAAAAAAtxgAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAAPC/"
				],
				[
					7145,
					1,
					"right_delete",
					null,
					"AQAAAHoZAAAAAAAAehkAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAehkAAAAAAAB6GQAAAAAAAAAAAAAAAPC/"
				],
				[
					7147,
					1,
					"right_delete",
					null,
					"AQAAAIQZAAAAAAAAhBkAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAhBkAAAAAAACEGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7154,
					1,
					"insert",
					{
						"characters": " ||"
					},
					"AwAAAJEZAAAAAAAAkhkAAAAAAAAAAAAAkhkAAAAAAACTGQAAAAAAAAAAAACTGQAAAAAAAJQZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRkAAAAAAACRGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7155,
					1,
					"insert",
					{
						"characters": " fnName=="
					},
					"CQAAAJQZAAAAAAAAlRkAAAAAAAAAAAAAlRkAAAAAAACWGQAAAAAAAAAAAACWGQAAAAAAAJcZAAAAAAAAAAAAAJcZAAAAAAAAmBkAAAAAAAAAAAAAmBkAAAAAAACZGQAAAAAAAAAAAACZGQAAAAAAAJoZAAAAAAAAAAAAAJoZAAAAAAAAmxkAAAAAAAAAAAAAmxkAAAAAAACcGQAAAAAAAAAAAACcGQAAAAAAAJ0ZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlBkAAAAAAACUGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7156,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJ0ZAAAAAAAAnxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRkAAAAAAACdGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7157,
					1,
					"paste",
					null,
					"AQAAAJ4ZAAAAAAAArhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhkAAAAAAACeGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7174,
					1,
					"cut",
					null,
					"AQAAAGIWAAAAAAAAYhYAAAAAAADXAAAAICAgaWYoYmxvY2suc29tZSh0b2sgPT4gdG9rLmxleGVtZT09J0pTX05ld0NsYXNzJykpIHsKICAgICAgICAgIGlzQ0Z1bmNDYWxsPXRydWU7CiAgICAgICAgICB3aGlsZShibG9ja1swXS5sZXhlbWUgIT0gJ0pTX05ld0NsYXNzJykKICAgICAgICAgICAgYmxvY2suc2hpZnQoKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYmxvY2snLCBibG9jayk7CiAgCiAgICAgICAgfQo",
					"AQAAAAAAAAABAAAAYhYAAAAAAAA5FwAAAAAAAAAAAAAAAPC/"
				],
				[
					7175,
					1,
					"paste",
					null,
					"AQAAAGIWAAAAAAAAORcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhYAAAAAAABiFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7187,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAHkWAAAAAAAAexYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeRYAAAAAAAB5FgAAAAAAAAAAAAAAAPC/"
				],
				[
					7188,
					1,
					"right_delete",
					null,
					"AQAAAHoWAAAAAAAAehYAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAehYAAAAAAAB6FgAAAAAAAAAAAAAAAPC/"
				],
				[
					7189,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAHoWAAAAAAAAfBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehYAAAAAAAB6FgAAAAAAAAAAAAAAAPC/"
				],
				[
					7190,
					1,
					"paste",
					null,
					"AQAAAHsWAAAAAAAAixYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexYAAAAAAAB7FgAAAAAAAAAAAAAAAPC/"
				],
				[
					7192,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIwWAAAAAAAAjRYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBYAAAAAAACMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7193,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAI0WAAAAAAAAjxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRYAAAAAAACNFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7194,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AQAAAI4WAAAAAAAAjxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhYAAAAAAACOFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7195,
					1,
					"left_delete",
					null,
					"AQAAAI4WAAAAAAAAjhYAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAjxYAAAAAAACPFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7196,
					1,
					"insert",
					{
						"characters": "JS_New"
					},
					"BgAAAI4WAAAAAAAAjxYAAAAAAAAAAAAAjxYAAAAAAACQFgAAAAAAAAAAAACQFgAAAAAAAJEWAAAAAAAAAAAAAJEWAAAAAAAAkhYAAAAAAAAAAAAAkhYAAAAAAACTFgAAAAAAAAAAAACTFgAAAAAAAJQWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhYAAAAAAACOFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7197,
					1,
					"insert_completion",
					{
						"completion": "JS_NewClass",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JS_NewClass"
					},
					"AgAAAI4WAAAAAAAAjhYAAAAAAAAGAAAASlNfTmV3jhYAAAAAAACZFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlBYAAAAAAACUFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7199,
					1,
					"insert",
					{
						"characters": "].indexOf"
					},
					"CQAAAJoWAAAAAAAAmxYAAAAAAAAAAAAAmxYAAAAAAACcFgAAAAAAAAAAAACcFgAAAAAAAJ0WAAAAAAAAAAAAAJ0WAAAAAAAAnhYAAAAAAAAAAAAAnhYAAAAAAACfFgAAAAAAAAAAAACfFgAAAAAAAKAWAAAAAAAAAAAAAKAWAAAAAAAAoRYAAAAAAAAAAAAAoRYAAAAAAACiFgAAAAAAAAAAAACiFgAAAAAAAKMWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmhYAAAAAAACaFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7200,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKMWAAAAAAAApRYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoxYAAAAAAACjFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7201,
					2,
					"right_delete",
					null,
					"AgAAAKQWAAAAAAAApBYAAAAAAAABAAAAKaQWAAAAAAAApBYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAApBYAAAAAAACkFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7203,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAK4WAAAAAAAArxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArhYAAAAAAACuFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7204,
					1,
					"insert",
					{
						"characters": " !=)"
					},
					"BAAAAK8WAAAAAAAAsBYAAAAAAAAAAAAAsBYAAAAAAACxFgAAAAAAAAAAAACxFgAAAAAAALIWAAAAAAAAAAAAALIWAAAAAAAAsxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxYAAAAAAACvFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7205,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALMWAAAAAAAAtBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsxYAAAAAAACzFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7206,
					2,
					"left_delete",
					null,
					"AgAAALMWAAAAAAAAsxYAAAAAAAABAAAAILIWAAAAAAAAshYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAtBYAAAAAAAC0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					7207,
					1,
					"insert",
					{
						"characters": " -1"
					},
					"AwAAALIWAAAAAAAAsxYAAAAAAAAAAAAAsxYAAAAAAAC0FgAAAAAAAAAAAAC0FgAAAAAAALUWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAshYAAAAAAACyFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7210,
					1,
					"left_delete",
					null,
					"AQAAALUWAAAAAAAAtRYAAAAAAAAPAAAAPT0nSlNfTmV3Q2xhc3Mn",
					"AQAAAAAAAAABAAAAtRYAAAAAAADEFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7248,
					1,
					"paste",
					null,
					"AQAAAOYWAAAAAAAAIhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hYAAAAAAADmFgAAAAAAAAAAAAAAAPC/"
				],
				[
					7251,
					1,
					"left_delete",
					null,
					"AQAAAB0XAAAAAAAAHRcAAAAAAAABAAAAIQ",
					"AQAAAAAAAAABAAAAHhcAAAAAAAAeFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7252,
					1,
					"insert",
					{
						"characters": "=0"
					},
					"AgAAAB0XAAAAAAAAHhcAAAAAAAAAAAAAHhcAAAAAAAAfFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHRcAAAAAAAAdFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7256,
					1,
					"cut",
					null,
					"AQAAACMXAAAAAAAAIxcAAAAAAAAIAAAAYmxvY2tbMF0",
					"AQAAAAAAAAABAAAAIxcAAAAAAAArFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7257,
					21,
					"right_delete",
					null,
					"FQAAACMXAAAAAAAAIxcAAAAAAAABAAAALiMXAAAAAAAAIxcAAAAAAAABAAAAbCMXAAAAAAAAIxcAAAAAAAABAAAAZSMXAAAAAAAAIxcAAAAAAAABAAAAeCMXAAAAAAAAIxcAAAAAAAABAAAAZSMXAAAAAAAAIxcAAAAAAAABAAAAbSMXAAAAAAAAIxcAAAAAAAABAAAAZSMXAAAAAAAAIxcAAAAAAAABAAAAICMXAAAAAAAAIxcAAAAAAAABAAAAISMXAAAAAAAAIxcAAAAAAAABAAAAPSMXAAAAAAAAIxcAAAAAAAABAAAAICMXAAAAAAAAIxcAAAAAAAABAAAAJyMXAAAAAAAAIxcAAAAAAAABAAAASiMXAAAAAAAAIxcAAAAAAAABAAAAUyMXAAAAAAAAIxcAAAAAAAABAAAAXyMXAAAAAAAAIxcAAAAAAAABAAAATiMXAAAAAAAAIxcAAAAAAAABAAAAZSMXAAAAAAAAIxcAAAAAAAABAAAAdyMXAAAAAAAAIxcAAAAAAAABAAAAQyMXAAAAAAAAIxcAAAAAAAABAAAAbCMXAAAAAAAAIxcAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAIxcAAAAAAAAjFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7258,
					3,
					"right_delete",
					null,
					"AwAAACMXAAAAAAAAIxcAAAAAAAABAAAAcyMXAAAAAAAAIxcAAAAAAAABAAAAcyMXAAAAAAAAIxcAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAIxcAAAAAAAAjFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7260,
					3,
					"left_delete",
					null,
					"AwAAABMXAAAAAAAAExcAAAAAAAABAAAAaxIXAAAAAAAAEhcAAAAAAAABAAAAbxEXAAAAAAAAERcAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAFBcAAAAAAAAUFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7261,
					1,
					"paste",
					null,
					"AQAAABEXAAAAAAAAGRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERcAAAAAAAARFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7276,
					1,
					"right_delete",
					null,
					"AQAAACMXAAAAAAAAIxcAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAIxcAAAAAAAAjFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7281,
					1,
					"insert",
					{
						"characters": ".slice"
					},
					"BgAAACcaAAAAAAAAKBoAAAAAAAAAAAAAKBoAAAAAAAApGgAAAAAAAAAAAAApGgAAAAAAACoaAAAAAAAAAAAAACoaAAAAAAAAKxoAAAAAAAAAAAAAKxoAAAAAAAAsGgAAAAAAAAAAAAAsGgAAAAAAAC0aAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJxoAAAAAAAAnGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7282,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAC0aAAAAAAAALxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRoAAAAAAAAtGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7283,
					1,
					"insert",
					{
						"characters": "-1"
					},
					"AgAAAC4aAAAAAAAALxoAAAAAAAAAAAAALxoAAAAAAAAwGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALhoAAAAAAAAuGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7284,
					1,
					"left_delete",
					null,
					"AQAAAC8aAAAAAAAALxoAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAMBoAAAAAAAAwGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7285,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAC8aAAAAAAAAMBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALxoAAAAAAAAvGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7293,
					1,
					"right_delete",
					null,
					"AQAAAAcaAAAAAAAABxoAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAABxoAAAAAAAAHGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7298,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAP8ZAAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAABGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xkAAAAAAAD/GQAAAAAAAAAAAAAAAPC/"
				],
				[
					7301,
					1,
					"insert",
					{
						"characters": "fnArgs"
					},
					"BgAAAGoaAAAAAAAAaxoAAAAAAAAAAAAAaxoAAAAAAABsGgAAAAAAAAAAAABsGgAAAAAAAG0aAAAAAAAAAAAAAG0aAAAAAAAAbhoAAAAAAAAAAAAAbhoAAAAAAABvGgAAAAAAAAAAAABvGgAAAAAAAHAaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahoAAAAAAABqGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7302,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAAHAaAAAAAAAAcRoAAAAAAAAAAAAAcRoAAAAAAAByGgAAAAAAAAAAAAByGgAAAAAAAHMaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBoAAAAAAABwGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7303,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMaAAAAAAAAdBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxoAAAAAAABzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7314,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAP0ZAAAAAAAA/hkAAAAAAAAAAAAA/hkAAAAAAAD+GQAAAAAAAAYAAAAgIC8vICA",
					"AQAAAAAAAAABAAAAAxoAAAAAAAD9GQAAAAAAAAAAAAAAAPC/"
				],
				[
					7334,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BQAAAPUZAAAAAAAA9hkAAAAAAAAAAAAA9hkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAIaAAAAAAAAAAAAAAIaAAAAAAAAAxoAAAAAAAAAAAAAAxoAAAAAAAAEGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RkAAAAAAAD1GQAAAAAAAP///////+9/"
				],
				[
					7335,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAQaAAAAAAAABhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBoAAAAAAAAEGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7336,
					1,
					"insert",
					{
						"characters": "fnName=="
					},
					"CAAAAAUaAAAAAAAABhoAAAAAAAAAAAAABhoAAAAAAAAHGgAAAAAAAAAAAAAHGgAAAAAAAAgaAAAAAAAAAAAAAAgaAAAAAAAACRoAAAAAAAAAAAAACRoAAAAAAAAKGgAAAAAAAAAAAAAKGgAAAAAAAAsaAAAAAAAAAAAAAAsaAAAAAAAADBoAAAAAAAAAAAAADBoAAAAAAAANGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRoAAAAAAAAFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7337,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAA0aAAAAAAAADxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADRoAAAAAAAANGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7338,
					1,
					"insert",
					{
						"characters": "JS_NewClass"
					},
					"CwAAAA4aAAAAAAAADxoAAAAAAAAAAAAADxoAAAAAAAAQGgAAAAAAAAAAAAAQGgAAAAAAABEaAAAAAAAAAAAAABEaAAAAAAAAEhoAAAAAAAAAAAAAEhoAAAAAAAATGgAAAAAAAAAAAAATGgAAAAAAABQaAAAAAAAAAAAAABQaAAAAAAAAFRoAAAAAAAAAAAAAFRoAAAAAAAAWGgAAAAAAAAAAAAAWGgAAAAAAABcaAAAAAAAAAAAAABcaAAAAAAAAGBoAAAAAAAAAAAAAGBoAAAAAAAAZGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhoAAAAAAAAOGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7340,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAABsaAAAAAAAAHBoAAAAAAAAAAAAAHBoAAAAAAAAoGgAAAAAAAAAAAAAcGgAAAAAAABwaAAAAAAAADAAAACAgICAgICAgICAgIBwaAAAAAAAAKhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGxoAAAAAAAAbGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7342,
					1,
					"insert",
					{
						"characters": "fnArgs="
					},
					"BwAAACoaAAAAAAAAKxoAAAAAAAAAAAAAKxoAAAAAAAAsGgAAAAAAAAAAAAAsGgAAAAAAAC0aAAAAAAAAAAAAAC0aAAAAAAAALhoAAAAAAAAAAAAALhoAAAAAAAAvGgAAAAAAAAAAAAAvGgAAAAAAADAaAAAAAAAAAAAAADAaAAAAAAAAMRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhoAAAAAAAAqGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7343,
					1,
					"left_delete",
					null,
					"AQAAADAaAAAAAAAAMBoAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAMRoAAAAAAAAxGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7344,
					1,
					"insert",
					{
						"characters": ".shift"
					},
					"BgAAADAaAAAAAAAAMRoAAAAAAAAAAAAAMRoAAAAAAAAyGgAAAAAAAAAAAAAyGgAAAAAAADMaAAAAAAAAAAAAADMaAAAAAAAANBoAAAAAAAAAAAAANBoAAAAAAAA1GgAAAAAAAAAAAAA1GgAAAAAAADYaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMBoAAAAAAAAwGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7345,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADYaAAAAAAAAOBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANhoAAAAAAAA2GgAAAAAAAAAAAAAAAPC/"
				],
				[
					7347,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADgaAAAAAAAAORoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBoAAAAAAAA4GgAAAAAAAAAAAAAAAPC/"
				],
				[
					7359,
					1,
					"cut",
					null,
					"AQAAAFEaAAAAAAAAURoAAAAAAAAMAAAAY0NsYXNzSWROYW1l",
					"AQAAAAAAAAABAAAAURoAAAAAAABdGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7360,
					1,
					"paste",
					null,
					"AQAAAFEaAAAAAAAAXRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURoAAAAAAABRGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7367,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKkaAAAAAAAAqhoAAAAAAAAAAAAAqhoAAAAAAACqGgAAAAAAAAoAAABmbkFyZ3MgPz8g",
					"AQAAAAAAAAABAAAAqRoAAAAAAACzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7372,
					1,
					"insert",
					{
						"characters": ".reverse"
					},
					"CAAAADgaAAAAAAAAORoAAAAAAAAAAAAAORoAAAAAAAA6GgAAAAAAAAAAAAA6GgAAAAAAADsaAAAAAAAAAAAAADsaAAAAAAAAPBoAAAAAAAAAAAAAPBoAAAAAAAA9GgAAAAAAAAAAAAA9GgAAAAAAAD4aAAAAAAAAAAAAAD4aAAAAAAAAPxoAAAAAAAAAAAAAPxoAAAAAAABAGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBoAAAAAAAA4GgAAAAAAAAAAAAAAAPC/"
				],
				[
					7373,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEAaAAAAAAAAQhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQBoAAAAAAABAGgAAAAAAAAAAAAAAAPC/"
				],
				[
					7378,
					1,
					"insert",
					{
						"characters": ",fnArgs"
					},
					"BwAAADgaAAAAAAAAORoAAAAAAAAAAAAAORoAAAAAAAA6GgAAAAAAAAAAAAA6GgAAAAAAADsaAAAAAAAAAAAAADsaAAAAAAAAPBoAAAAAAAAAAAAAPBoAAAAAAAA9GgAAAAAAAAAAAAA9GgAAAAAAAD4aAAAAAAAAAAAAAD4aAAAAAAAAPxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBoAAAAAAAA4GgAAAAAAAAAAAAAAAPC/"
				],
				[
					7382,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAShoAAAAAAABKGgAAAAAAAP///////+9/"
				],
				[
					7390,
					1,
					"insert",
					{
						"characters": "define("
					},
					"BwAAAHcZAAAAAAAAeBkAAAAAAAAAAAAAeBkAAAAAAAB5GQAAAAAAAAAAAAB5GQAAAAAAAHoZAAAAAAAAAAAAAHoZAAAAAAAAexkAAAAAAAAAAAAAexkAAAAAAAB8GQAAAAAAAAAAAAB8GQAAAAAAAH0ZAAAAAAAAAAAAAH0ZAAAAAAAAfhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxkAAAAAAAB3GQAAAAAAAAAAAAAAwHxA"
				],
				[
					7392,
					1,
					"right_delete",
					null,
					"AQAAAH4ZAAAAAAAAfhkAAAAAAAAHAAAAeyBhcmdzOg",
					"AQAAAAAAAAABAAAAfhkAAAAAAACFGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7395,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAIoZAAAAAAAAixkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihkAAAAAAACKGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7398,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJAZAAAAAAAAkRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBkAAAAAAACQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					7404,
					1,
					"cut",
					null,
					"AQAAAHcZAAAAAAAAdxkAAAAAAAAbAAAAZGVmaW5lKCBbb2JqTmFtZV0sIHtsb2MgfSk7",
					"AQAAAAAAAAABAAAAdxkAAAAAAACSGQAAAAAAAP///////+9/"
				],
				[
					7405,
					1,
					"paste",
					null,
					"AQAAAHcZAAAAAAAAkhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxkAAAAAAAB3GQAAAAAAAAAAAAAAAPC/"
				],
				[
					7409,
					1,
					"paste",
					null,
					"AgAAAJUaAAAAAAAAsBoAAAAAAAAAAAAAsBoAAAAAAACwGgAAAAAAABkAAAB7IGFyZ3M6IFtvYmpOYW1lXSwgbG9jIH07",
					"AQAAAAAAAAABAAAAlRoAAAAAAACuGgAAAAAAAP///////+9/"
				],
				[
					7412,
					1,
					"paste",
					null,
					"AQAAABccAAAAAAAAMhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFxwAAAAAAAAXHAAAAAAAAAAAAAAAAPC/"
				],
				[
					7414,
					10,
					"left_delete",
					null,
					"CgAAACccAAAAAAAAJxwAAAAAAAABAAAAXSYcAAAAAAAAJhwAAAAAAAABAAAAZSUcAAAAAAAAJRwAAAAAAAABAAAAbSQcAAAAAAAAJBwAAAAAAAABAAAAYSMcAAAAAAAAIxwAAAAAAAABAAAATiIcAAAAAAAAIhwAAAAAAAABAAAAaiEcAAAAAAAAIRwAAAAAAAABAAAAYiAcAAAAAAAAIBwAAAAAAAABAAAAbx8cAAAAAAAAHxwAAAAAAAABAAAAWx4cAAAAAAAAHhwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAKBwAAAAAAAAoHAAAAAAAAAAAAAAAAPC/"
				],
				[
					7415,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BAAAAB4cAAAAAAAAHxwAAAAAAAAAAAAAHxwAAAAAAAAgHAAAAAAAAAAAAAAgHAAAAAAAACEcAAAAAAAAAAAAACEcAAAAAAAAIhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhwAAAAAAAAeHAAAAAAAAAAAAAAAAPC/"
				],
				[
					7418,
					1,
					"cut",
					null,
					"AQAAACwcAAAAAAAALBwAAAAAAAAOAAAAeyBhcmdzLCBsb2MgfTs",
					"AQAAAAAAAAABAAAALBwAAAAAAAA6HAAAAAAAAP///////+9/"
				],
				[
					7424,
					1,
					"insert",
					{
						"characters": ",define"
					},
					"BwAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPEAAAAAAAAAAAAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gAAAAAAAADuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7431,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAADoeAAAAAAAAOx4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOh4AAAAAAAA6HgAAAAAAAAAAAAAAAPC/"
				],
				[
					7437,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAADkeAAAAAAAAOh4AAAAAAAAAAAAAOh4AAAAAAAA6HgAAAAAAAAIAAAAyMQ",
					"AQAAAAAAAAABAAAAOR4AAAAAAAA7HgAAAAAAAAAAAAAAAPC/"
				],
				[
					7451,
					1,
					"insert",
					{
						"characters": "&//"
					},
					"AwAAAE4XAAAAAAAATxcAAAAAAAAAAAAATxcAAAAAAABQFwAAAAAAAAAAAABQFwAAAAAAAFEXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThcAAAAAAABOFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7452,
					3,
					"left_delete",
					null,
					"AwAAAFAXAAAAAAAAUBcAAAAAAAABAAAAL08XAAAAAAAATxcAAAAAAAABAAAAL04XAAAAAAAAThcAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAURcAAAAAAABRFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7453,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAE4XAAAAAAAATxcAAAAAAAAAAAAATxcAAAAAAABQFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThcAAAAAAABOFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7456,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAUBcAAAAAAABQFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7459,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAGsJAAAAAAAAbAkAAAAAAAAAAAAAbAkAAAAAAABuCQAAAAAAAAAAAABuCQAAAAAAAG8JAAAAAAAAAAAAAG8JAAAAAAAAcQkAAAAAAAAAAAAAbAkAAAAAAABsCQAAAAAAAAIAAAAgIG8JAAAAAAAAcAkAAAAAAAAAAAAAcAkAAAAAAABxCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawkAAAAAAABrCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7460,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHEJAAAAAAAAcwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQkAAAAAAABxCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7461,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAHIJAAAAAAAAcwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgkAAAAAAAByCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7462,
					1,
					"left_delete",
					null,
					"AQAAAHIJAAAAAAAAcgkAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAcwkAAAAAAABzCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7463,
					1,
					"insert",
					{
						"characters": "/et"
					},
					"AwAAAHIJAAAAAAAAcwkAAAAAAAAAAAAAcwkAAAAAAAB0CQAAAAAAAAAAAAB0CQAAAAAAAHUJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgkAAAAAAAByCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7464,
					2,
					"left_delete",
					null,
					"AgAAAHQJAAAAAAAAdAkAAAAAAAABAAAAdHMJAAAAAAAAcwkAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAdQkAAAAAAAB1CQAAAAAAAAAAAAAAAPC/"
				],
				[
					7465,
					1,
					"insert",
					{
						"characters": "bindings/.test"
					},
					"DgAAAHMJAAAAAAAAdAkAAAAAAAAAAAAAdAkAAAAAAAB1CQAAAAAAAAAAAAB1CQAAAAAAAHYJAAAAAAAAAAAAAHYJAAAAAAAAdwkAAAAAAAAAAAAAdwkAAAAAAAB4CQAAAAAAAAAAAAB4CQAAAAAAAHkJAAAAAAAAAAAAAHkJAAAAAAAAegkAAAAAAAAAAAAAegkAAAAAAAB7CQAAAAAAAAAAAAB7CQAAAAAAAHwJAAAAAAAAAAAAAHwJAAAAAAAAfQkAAAAAAAAAAAAAfQkAAAAAAAB+CQAAAAAAAAAAAAB+CQAAAAAAAH8JAAAAAAAAAAAAAH8JAAAAAAAAgAkAAAAAAAAAAAAAgAkAAAAAAACBCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwkAAAAAAABzCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7466,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIEJAAAAAAAAgwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQkAAAAAAACBCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7467,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAIIJAAAAAAAAgwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggkAAAAAAACCCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7468,
					1,
					"left_delete",
					null,
					"AQAAAIIJAAAAAAAAggkAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAgwkAAAAAAACDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7469,
					1,
					"insert",
					{
						"characters": "scriptArgs"
					},
					"CgAAAIIJAAAAAAAAgwkAAAAAAAAAAAAAgwkAAAAAAACECQAAAAAAAAAAAACECQAAAAAAAIUJAAAAAAAAAAAAAIUJAAAAAAAAhgkAAAAAAAAAAAAAhgkAAAAAAACHCQAAAAAAAAAAAACHCQAAAAAAAIgJAAAAAAAAAAAAAIgJAAAAAAAAiQkAAAAAAAAAAAAAiQkAAAAAAACKCQAAAAAAAAAAAACKCQAAAAAAAIsJAAAAAAAAAAAAAIsJAAAAAAAAjAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggkAAAAAAACCCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7470,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIwJAAAAAAAAjgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAkAAAAAAACMCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7471,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAI0JAAAAAAAAjgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQkAAAAAAACNCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7473,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJEJAAAAAAAAkgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQkAAAAAAACRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7474,
					1,
					"insert",
					{
						"characters": "\nnoStructs"
					},
					"DQAAAJIJAAAAAAAAkwkAAAAAAAAAAAAAkwkAAAAAAACVCQAAAAAAAAAAAACTCQAAAAAAAJMJAAAAAAAAAgAAACAgkwkAAAAAAACXCQAAAAAAAAAAAACXCQAAAAAAAJgJAAAAAAAAAAAAAJgJAAAAAAAAmQkAAAAAAAAAAAAAmQkAAAAAAACaCQAAAAAAAAAAAACaCQAAAAAAAJsJAAAAAAAAAAAAAJsJAAAAAAAAnAkAAAAAAAAAAAAAnAkAAAAAAACdCQAAAAAAAAAAAACdCQAAAAAAAJ4JAAAAAAAAAAAAAJ4JAAAAAAAAnwkAAAAAAAAAAAAAnwkAAAAAAACgCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgkAAAAAAACSCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7475,
					1,
					"insert",
					{
						"characters": "=true,jsCF"
					},
					"CgAAAKAJAAAAAAAAoQkAAAAAAAAAAAAAoQkAAAAAAACiCQAAAAAAAAAAAACiCQAAAAAAAKMJAAAAAAAAAAAAAKMJAAAAAAAApAkAAAAAAAAAAAAApAkAAAAAAAClCQAAAAAAAAAAAAClCQAAAAAAAKYJAAAAAAAAAAAAAKYJAAAAAAAApwkAAAAAAAAAAAAApwkAAAAAAACoCQAAAAAAAAAAAACoCQAAAAAAAKkJAAAAAAAAAAAAAKkJAAAAAAAAqgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAkAAAAAAACgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7476,
					1,
					"insert",
					{
						"characters": "uncs=true;"
					},
					"CgAAAKoJAAAAAAAAqwkAAAAAAAAAAAAAqwkAAAAAAACsCQAAAAAAAAAAAACsCQAAAAAAAK0JAAAAAAAAAAAAAK0JAAAAAAAArgkAAAAAAAAAAAAArgkAAAAAAACvCQAAAAAAAAAAAACvCQAAAAAAALAJAAAAAAAAAAAAALAJAAAAAAAAsQkAAAAAAAAAAAAAsQkAAAAAAACyCQAAAAAAAAAAAACyCQAAAAAAALMJAAAAAAAAAAAAALMJAAAAAAAAtAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgkAAAAAAACqCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7482,
					5,
					"left_delete",
					null,
					"BQAAAKUJAAAAAAAApQkAAAAAAAABAAAALKQJAAAAAAAApAkAAAAAAAABAAAAZaMJAAAAAAAAowkAAAAAAAABAAAAdaIJAAAAAAAAogkAAAAAAAABAAAAcqEJAAAAAAAAoQkAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAApgkAAAAAAACmCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7491,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAG0JAAAAAAAAbwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQkAAAAAAABtCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7492,
					1,
					"left_delete",
					null,
					"AQAAAG0JAAAAAAAAbQkAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAbwkAAAAAAABvCQAAAAAAAAAAAAAAAPC/"
				],
				[
					7497,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAB8HAAAAAAAAIQcAAAAAAAAAAAAA9QYAAAAAAAD3BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QYAAAAAAAAfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					7558,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAANQeAAAAAAAA1R4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1B4AAAAAAADUHgAAAAAAAAAAAAAAAPC/"
				],
				[
					7559,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAANUeAAAAAAAA1x4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1R4AAAAAAADVHgAAAAAAAAAAAAAAAPC/"
				],
				[
					7560,
					1,
					"insert",
					{
						"characters": "\\n"
					},
					"AgAAANYeAAAAAAAA1x4AAAAAAAAAAAAA1x4AAAAAAADYHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1h4AAAAAAADWHgAAAAAAAAAAAAAAAPC/"
				],
				[
					7564,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADGHwAAIyEvdXNyL2Jpbi9lbnYgcWpzbQppbXBvcnQgKiBhcyBvcyBmcm9tICdvcyc7CmltcG9ydCAqIGFzIHN0ZCBmcm9tICdzdGQnOwppbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7CmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IENMZXhlciBmcm9tICdsaWIvbGV4ZXIvYy5qcyc7CmltcG9ydCB7IGdldE9wdCwgZXNjYXBlLCBleHRlbmRBcnJheSwgZGVmaW5lIH0gZnJvbSAndXRpbCc7CgpleHRlbmRBcnJheSgpOwoKbGV0IGpzQ0Z1bmNzLCBub1N0cnVjdHM7Cgpjb25zdCBNYXliZU51bWJlciA9IHQgPT4gKEFycmF5LmlzQXJyYXkodCkgPyB0Lm1hcChNYXliZU51bWJlcikgOiBpc05hTigrdCkgPyB0IDogK3QpOwpjb25zdCBOb25XUyA9IHQgPT4gKEFycmF5LmlzQXJyYXkodCkgPyB0LmZpbHRlcihOb25XUykgOiB0LnR5cGUgIT0gJ3doaXRlc3BhY2UnKTsKY29uc3QgVHJpbVdTID0gdCA9PgogIHQucmVkdWNlKChhY2MsIGl0ZW0pID0+IHsKICAgIGlmKGFjYy5sZW5ndGggPT0gMCAmJiBpdGVtLnR5cGUgPT0gJ3doaXRlc3BhY2UnKSByZXR1cm4gYWNjOwogICAgYWNjLnB1c2goaXRlbSk7CiAgICByZXR1cm4gYWNjOwogIH0sIFtdKTsKCmNvbnN0IExleGVtZSA9IHQgPT4gKEFycmF5LmlzQXJyYXkodCkgPyB0Lm1hcChMZXhlbWUpLmpvaW4oJycpIDogdC5sZXhlbWUpOwoKY29uc3QgV1MgPSB0ID0+IHQudHlwZSA9PSAnd2hpdGVzcGFjZSc7Cgpjb25zdCBQYXJlbiA9ICh0b2tsaXN0LCB0ID0gdG9rID0+IHRvay5sZXhlbWUpID0+IHsKICBsZXQgc3RhcnQgPSB0b2tsaXN0LmZpbmRJbmRleCh0b2sgPT4gdCh0b2spID09ICcoJyk7CiAgbGV0IGVuZCA9IHRva2xpc3QuZmluZExhc3RJbmRleCh0b2sgPT4gdCh0b2spID09ICcpJyk7CgogIGlmKHN0YXJ0ID09IC0xIHx8IGVuZCA9PSAtMSkgcmV0dXJuIFtdOwogIGlmKGVuZCA9PSAtMSkgZW5kID0gdG9rbGlzdC5sZW5ndGg7CgogIHJldHVybiB0b2tsaXN0LnNsaWNlKHN0YXJ0ICsgMSwgZW5kKTsKfTsKCmNvbnN0IENvbW1hTGlzdCA9ICh0b2tsaXN0LCB0ID0gdG9rID0+IHRvay5sZXhlbWUpID0+IHsKICBsZXQgbGlzdCA9IFtdOwogIGxldCBzID0gJyc7CiAgZm9yKGxldCB0b2sgb2YgTm9uV1ModG9rbGlzdCkpIHsKICAgIGlmKHQodG9rKSA9PSAnLCcpIHsKICAgICAgbGlzdC5wdXNoKHMpOwogICAgICBzID0gJyc7CiAgICAgIGNvbnRpbnVlOwogICAgfQogICAgcyArPSB0KHRvayk7CiAgfQogIGlmKHMgIT0gJycpIGxpc3QucHVzaChzKTsKICByZXR1cm4gbGlzdDsKfTsKY29uc3QgQ29tbWFKb2luID0gbGlzdCA9PiBsaXN0LnJlZHVjZSgoYWNjLCBpdGVtKSA9PiBhY2MuY29uY2F0KGFjYy5sZW5ndGggPyBbJywnLCBpdGVtXSA6IFtpdGVtXSksIFtdKTsKCmZ1bmN0aW9uIHBhcnNlKGxleGVyLCBmbiA9ICh0b2ssIGFycikgPT4ge30sIC4uLmFyZ3MpIHsKICBsZXQgaSA9IDAsCiAgICB0b2ssCiAgICBhcnIgPSBbLi4uYXJnc107CgogIHdoaWxlKCh0b2sgPSBsZXhlci5uZXh0VG9rZW4oKSkpIHsKICAgIC8vY29uc29sZS5sb2coJ3BhcnNlJywgeyBpOiBpKyssIHRvaywgZm46IGZuICsgJycgfSk7CiAgICBsZXQgdiA9IGZuKHRvaywgYXJyKTsKICAgIGlmKHYgPCAwKSBicmVhazsKICAgIGFyci5wdXNoKHRvayk7CiAgICBpZih2KSBicmVhazsKICB9CiAgcmV0dXJuIGFycjsKfQoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoewogICAvKiBzdGRvdXQ6IHN0ZC5vdXQsCiAgICBzdGRlcnI6IHN0ZC5lcnIsCiAgICovIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgbWF4U3RyaW5nTGVuZ3RoOiAxMDAsCiAgICAgIG1heEFycmF5TGVuZ3RoOiBJbmZpbml0eSwKICAgICAgY29tcGFjdDogZmFsc2UKICAgIH0KICB9KTsKICAvL2NvbnNvbGUubG9nKCdhcmdzJywgc2NyaXB0QXJncyk7CgogIGxldCBvdXRwdXROYW1lLAogICAgZGVidWcsCiAgICBvdXRwdXQgPSBzdGQub3V0OwogIGxldCBwYXJhbXMgPSBnZXRPcHQoCiAgICB7CiAgICAgIG91dHB1dDogW3RydWUsIGZpbGUgPT4gKG91dHB1dCA9IHN0ZC5vcGVuKChvdXRwdXROYW1lID0gZmlsZSksICd3KycpKSwgJ28nXSwKICAgICAgZGVidWc6IFtmYWxzZSwgKCkgPT4gKGRlYnVnID0gKGRlYnVnIHwgMCkgKyAxKSwgJ3gnXSwKICAgICAgJ25vLXN0cnVjdHMnOiBbZmFsc2UsICgpID0+IChub1N0cnVjdHMgPSB0cnVlKSwgJ1MnXSwKICAgICAgY2Z1bmM6IFtmYWxzZSwgKGpzQ0Z1bmNzID0gdHJ1ZSksICdjJ10sCiAgICAgICdAJzogJ2ZpbGVzJwogICAgfSwKICAgIGFyZ3MKICApOwogIGxldCBjRnVuY0xpc3RzID0gW107CiAgbGV0IGZpbGVzID0gcGFyYW1zWydAJ107CgogIGlmKC9iaW5kaW5ncy8udGVzdChzY3JpcHRBcmdzWzBdKSkgCiAgICBub1N0cnVjdHM9anNDRnVuY3M9dHJ1ZTsKCiAgZm9yKGxldCBmaWxlIG9mIGZpbGVzKSB7CiAgICAvL2NvbnNvbGUubG9nKCdmaWxlJywgZmlsZSk7CgogICAgbGV0IHN0ciA9IHN0ZC5sb2FkRmlsZShmaWxlLCAndXRmLTgnKTsKCiAgICAvKmNvbnNvbGUubG9nKCdzdHInLCBzdHIpOwogICAgY29uc29sZS5sb2coJ3N0cicsIHN0ci5zcGxpdCgnXG4nKVswXSk7Ki8KCiAgICBsZXQgbGV4ZXIgPSBuZXcgQ0xleGVyKHN0ciwgZmlsZSk7CgogICAgY29uc3QgeyBydWxlcywgdG9rZW5zIH0gPSBsZXhlcjsKICAgIGxldCBsaW5lID0gW10sCiAgICAgIGJsb2NrID0gW107CiAgICBsZXQgdG9rbGlzdCA9IFtdOwogICAgbGV0IGlzQ0Z1bmNMaXN0ID0gZmFsc2UsCiAgICAgIGlzQ0Z1bmNDYWxsID0gZmFsc2UsCiAgICAgIGNGdW5jTGlzdE5hbWVzID0gW10sCiAgICAgIGNGdW5jTGlzdE9iamVjdHMgPSB7fTsKCiAgICAvL2NvbnNvbGUubG9nKCdydWxlcycsICBydWxlcyk7CgogICAgZm9yKGxldCBpZCBvZiBsZXhlcikgewogICAgICAvL2xpbmUucHVzaChsZXhlci50b2tlbik7CiAgICAgIGJsb2NrLnB1c2gobGV4ZXIudG9rZW4pOwoKICAgICAgaWYoIW5vU3RydWN0cykKICAgICAgICBpZihpZCA9PSBydWxlc1snc3RydWN0J10gfHwgaWQgPT0gcnVsZXNbJ3R5cGVkZWYnXSkgewogICAgICAgICAgY29uc3QgeyBsb2MsIHRva2VuOiB0b2sgfSA9IGxleGVyOwoKICAgICAgICAgIGlmKGxvYy5jb2x1bW4gPT0gMSkgewogICAgICAgICAgICBsZXQgc2VxLAogICAgICAgICAgICAgIGxpbmUgPSBsb2MubGluZSwKICAgICAgICAgICAgICB0ZXh0ID0gJyc7CiAgICAgICAgICAgIHNlcSA9IHBhcnNlKGxleGVyLCAodG9rLCBhcnIpID0+IHRvay5sb2MubGluZSAhPSBsaW5lICYmIC0xLCB0b2spOwogICAgICAgICAgICBjb25zdCBsYXN0ID0gc2VxLmZpbHRlcihOb25XUykuYXQoLTEpOwogICAgICAgICAgICBpZihsYXN0LnR5cGUgPT0gJ2xicmFjZScpIHsKICAgICAgICAgICAgICBzZXEgPSBwYXJzZShsZXhlciwgKHRvaywgYXJyKSA9PiB0b2subG9jLmNvbHVtbiA9PSAxICYmIHRvay50eXBlID09ICdyYnJhY2UnLCAuLi5zZXEpOwogICAgICAgICAgICAgIHNlcSA9IHBhcnNlKGxleGVyLCAodG9rLCBhcnIpID0+IHRvay50eXBlID09ICdzZW1pJywgLi4uc2VxKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBvdXRwdXQucHV0cyhzZXEucmVkdWNlKChzLCB0KSA9PiBzICsgdC5sZXhlbWUsICcnKS50cmltKCkgKyAnXG5cbicpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgIGlmKGpzQ0Z1bmNzKSB7CiAgICAgICAgaWYoaWQgPT0gcnVsZXNbJ2lkZW50aWZpZXInXSkgewogICAgICAgICAgaWYobGV4ZXIubGV4ZW1lID09ICdKU0NGdW5jdGlvbkxpc3RFbnRyeScpIGlzQ0Z1bmNMaXN0ID0gdHJ1ZTsKICAgICAgICAgIHRva2xpc3RbbGV4ZXIuc2VxXSA9IGxleGVyLmxleGVtZTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmKGlzQ0Z1bmNMaXN0KSB7CiAgICAgICAgaWYoaWQgPT0gcnVsZXNbJ3JicmFjZSddICYmIGxleGVyLmxvYy5jb2x1bW4gPT0gMSkgewogICAgICAgICAgd2hpbGUoCiAgICAgICAgICAgIGJsb2NrLmxlbmd0aCA+IDAgJiYKICAgICAgICAgICAgWyd3aGl0ZXNwYWNlJywgJ3JicmFjZScsICdzaW5nbGVMaW5lQ29tbWVudCcsICdtdWx0aUxpbmVDb21tZW50J10uaW5kZXhPZihibG9ja1swXS50eXBlKSAhPSAtMQogICAgICAgICAgKQogICAgICAgICAgICBibG9jay5zaGlmdCgpOwogICAgICAgICAgLy9jb25zb2xlLmxvZygnYmxvY2suc2xpY2UoMCwxMCknLCBibG9jay5zbGljZSgwLDEwKSk7CiAgICAgICAgICBsZXQgZmlyc3RMaW5lID0gYmxvY2tbMF0ubG9jLmxpbmU7CiAgICAgICAgICBsZXQgcm93cyA9IE5vbldTKGJsb2NrKQogICAgICAgICAgICAucmVkdWNlKChhY2MsIHRva2VuKSA9PiB7CiAgICAgICAgICAgICAgaWYoWydwcmVwcm9jZXNzb3InLCAnc2luZ2xlTGluZUNvbW1lbnQnLCAnbXVsdGlMaW5lQ29tbWVudCddLmluZGV4T2YodG9rZW4udHlwZSkgPT0gLTEpCiAgICAgICAgICAgICAgICAoYWNjW3Rva2VuLmxvYy5saW5lIC0gZmlyc3RMaW5lXSA/Pz0gW10pLnB1c2godG9rZW4pOwogICAgICAgICAgICAgIHJldHVybiBhY2M7CiAgICAgICAgICAgIH0sIFtdKQogICAgICAgICAgICAuZmlsdGVyKGwgPT4gbC5sZW5ndGgpOwogICAgICAgICAgbGV0IGNmdW5jTGlzdCA9IHJvd3MKICAgICAgICAgICAgLnNsaWNlKDAsIC0xKQogICAgICAgICAgICAubWFwKChyb3csIGkpID0+CiAgICAgICAgICAgICAgaSA+IDAKICAgICAgICAgICAgICAgID8gW3Jvd1swXS5sZXhlbWVdLmNvbmNhdChDb21tYUxpc3QoUGFyZW4ocm93LCB0ID0+IHQubGV4ZW1lKSkpCiAgICAgICAgICAgICAgICA6IHJvdy5maWx0ZXIodG9rID0+IHRvay50eXBlID09ICdpZGVudGlmaWVyJykubGFzdD8ubGV4ZW1lCiAgICAgICAgICAgICk7CiAgICAgICAgICBsZXQgaGVhZGVyID0gW2NmdW5jTGlzdC5zaGlmdCgpLCBibG9ja1swXS5sb2MgKyAnJ107CiAgICAgICAgICBjZnVuY0xpc3QgPSBbaGVhZGVyLCBjZnVuY0xpc3RdOwoKICAgICAgICAgIGNGdW5jTGlzdE5hbWVzLnB1c2goaGVhZGVyWzBdKTsKCiAgICAgICAgICBjb25zb2xlLmxvZygnY2Z1bmNMaXN0JywgY29uc29sZS5jb25maWcoeyBjb21wYWN0OiAxIH0pLCBjZnVuY0xpc3QpOwogICAgICAgICAgY0Z1bmNMaXN0cy5wdXNoKGNmdW5jTGlzdCk7CgogICAgICAgICAgYmxvY2suc3BsaWNlKDAsIGJsb2NrLmxlbmd0aCk7CiAgICAgICAgfQogICAgICB9CiAgICAgIGlmKGlkID09IHJ1bGVzWyd3aGl0ZXNwYWNlJ10pIHsKICAgICAgICBjb25zdCB7IHBvcywgc2VxLCBsZXhlbWUsIHZhbHVlLCBjaGFyTGVuZ3RoIH0gPSBsZXhlcjsKCiAgICAgICAgLyogaWYobGV4ZW1lID09ICdcbicpIHsKICAgICAgICAgIGxpbmUuc3BsaWNlKDAsIGxpbmUubGVuZ3RoKTsKICAgICAgICB9Ki8KICAgICAgfSBlbHNlIGlmKGlkID09IHJ1bGVzWydzZW1pJ10pIHsKICAgICAgICBibG9jayA9IFRyaW1XUyhibG9jayk7CgogICAgICAgIGlmKAogICAgICAgICAgYmxvY2subGVuZ3RoID49IDMgJiYKICAgICAgICAgIE5vbldTKGJsb2NrKVsxXT8udHlwZSA9PSAnZXF1YWwnICYmCiAgICAgICAgICBibG9ja1swXT8udHlwZSA9PSAnaWRlbnRpZmllcicgJiYKICAgICAgICAgIC9fKHByb3RvfGN0b3IpJC8udGVzdChibG9ja1swXS5sZXhlbWUpCiAgICAgICAgKSB7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdBU1NJR04nLCBMZXhlbWUoYmxvY2spKTsKCiAgICAgICAgICBpc0NGdW5jQ2FsbCA9IHRydWU7CiAgICAgICAgfQoKICAgICAgICBpZihibG9jay5zb21lKHRvayA9PiBbJ0pTX1NldENsYXNzUHJvdG8nLCAnSlNfTmV3Q2xhc3MnXS5pbmRleE9mKHRvay5sZXhlbWUpICE9IC0xKSkgewogICAgICAgICAgaXNDRnVuY0NhbGwgPSB0cnVlOwogICAgICAgICAgd2hpbGUoWydKU19TZXRDbGFzc1Byb3RvJywgJ0pTX05ld0NsYXNzJ10uaW5kZXhPZihibG9ja1swXS5sZXhlbWUpID09IC0xKSBibG9jay5zaGlmdCgpOwogICAgICAgICAgLy9jb25zb2xlLmxvZygnYmxvY2snLCBibG9jayk7CiAgICAgICAgfQoKICAgICAgICBpZihpc0NGdW5jQ2FsbCkgewogICAgICAgICAgbGV0IGZuSW5kZXggPSBibG9jay5maW5kSW5kZXgodG9rID0+IHRvay5sZXhlbWUgPT0gJygnKSAtIDE7CiAgICAgICAgICBsZXQgZm5OYW1lID0gYmxvY2tbZm5JbmRleF0ubGV4ZW1lOwogICAgICAgICAgbGV0IGZuQXJncyA9IENvbW1hTGlzdChQYXJlbihibG9jaykpOwoKICAgICAgICAgIHdoaWxlKFsnY3R4JywgJ20nXS5pbmRleE9mKGZuQXJnc1swXSkgIT0gLTEpIGZuQXJncy5zaGlmdCgpOwoKICAgICAgICAgIC8vY29uc29sZS5sb2coJ2lzQ0Z1bmNDYWxsJywgeyBmbkluZGV4LCBmbk5hbWUsIGZuQXJncyB9KTsKICAgICAgICAgIGxldCB7IGxvYyB9ID0gYmxvY2tbMF07CgogICAgICAgICAgaWYoZm5OYW1lID09ICdKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdCcpIHsKICAgICAgICAgICAgbGV0IFtvYmpOYW1lLCBjRnVuY0xpc3ROYW1lXSA9IGZuQXJnczsKICAgICAgICAgICAgY0Z1bmNMaXN0T2JqZWN0c1tjRnVuY0xpc3ROYW1lXSA9IGRlZmluZShbb2JqTmFtZV0sIHsgbG9jIH0pOwogICAgICAgICAgfSBlbHNlIGlmKGZuTmFtZSA9PSAnSlNfTmV3Q2xhc3MnIHx8IGZuTmFtZSA9PSAnSlNfU2V0Q2xhc3NQcm90bycpIHsKICAgICAgICAgICAgaWYoZm5OYW1lID09ICdKU19OZXdDbGFzcycpIGZuQXJncy5zaGlmdCgpLCBmbkFyZ3MucmV2ZXJzZSgpOwogICAgICAgICAgICBsZXQgW29iak5hbWUsIGNDbGFzc0lkTmFtZV0gPSBmbkFyZ3Muc2xpY2UoLTIpOwogICAgICAgICAgICBjRnVuY0xpc3RPYmplY3RzW2NDbGFzc0lkTmFtZV0gPSBkZWZpbmUoW29iak5hbWVdLCB7IGxvYyB9KTsKICAgICAgICAgIH0gZWxzZSBpZihmbkluZGV4ID4gMCkgewogICAgICAgICAgICBsZXQgb2JqTmFtZSA9IExleGVtZShibG9ja1swXSk7CiAgICAgICAgICAgIGxldCBbY0NhbGwsIGNOYW1lLCAuLi5yZXN0XSA9IGZuQXJnczsKCiAgICAgICAgICAgIC8vY29uc29sZS5sb2coJycsIHsgb2JqTmFtZSwgY05hbWUgfSk7CgogICAgICAgICAgICBpZihjTmFtZSkgY05hbWUgPSBjTmFtZS5yZXBsYWNlKC9eInwiJC9nLCAnJyk7CgogICAgICAgICAgICBsZXQgYXJncyA9IE1heWJlTnVtYmVyKGNOYW1lID8gW2NDYWxsLCBjTmFtZSwgLi4ucmVzdF0gOiByZXN0KTsKICAgICAgICAgICAgY0Z1bmNMaXN0T2JqZWN0c1tvYmpOYW1lXSA9IGRlZmluZShhcmdzLCB7IGxvYyB9KTsKICAgICAgICAgIH0KCiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdjRnVuY0NhbGwoKScsIExleGVtZShibG9jaykpOwogICAgICAgIH0KICAgICAgICBpc0NGdW5jTGlzdCA9IGZhbHNlOwogICAgICAgIGlzQ0Z1bmNDYWxsID0gZmFsc2U7CgogICAgICAgIGJsb2NrLnNwbGljZSgwLCBibG9jay5sZW5ndGgpOwogICAgICB9IGVsc2UgaWYobGV4ZXIubG9jLmNvbHVtbiA9PSAxICYmIGlkICE9IHJ1bGVzWyd3aGl0ZXNwYWNlJ10gJiYgaWQgIT0gcnVsZXNbJ3ByZXByb2Nlc3NvciddKSB7CiAgICAgIH0KICAgICAgaWYoY0Z1bmNMaXN0TmFtZXMuaW5kZXhPZihsZXhlci5sZXhlbWUpICE9IC0xKSB7CiAgICAgICAgY29uc3QgeyBsZXhlbWUsIGxvYyB9ID0gbGV4ZXI7CiAgICAgICAgaXNDRnVuY0NhbGwgPSB0cnVlOwogICAgICB9CgogICAgICBvdXRwdXQuZmx1c2goKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdjRnVuY0xpc3RPYmplY3RzJywgY29uc29sZS5jb25maWcoeyBkZXB0aDogMTAsIGNvbXBhY3Q6IDEgfSksIGNGdW5jTGlzdE9iamVjdHMpOwogIH0KCiAgb3V0cHV0LnB1dHMoSlNPTi5zdHJpbmdpZnkoY0Z1bmNMaXN0cywgbnVsbCwgMikrJ1xuJyk7CgogIGlmKG91dHB1dE5hbWUpIGNvbnNvbGUubG9nKG91dHB1dC50ZWxsKCkgKyBgIGJ5dGVzIHdyaXR0ZW4gdG8gJyR7b3V0cHV0TmFtZX0nYCk7CiAgb3V0cHV0LmNsb3NlKCk7Cn0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIGNvbnNvbGUubG9nKGBGQUlMOiAke2Vycm9yLm1lc3NhZ2V9XG4ke2Vycm9yLnN0YWNrfWApOwogIHN0ZC5leGl0KDEpOwp9CgAAAAAAAAAAyB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2R4AAAAAAADZHgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 22757,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					52,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAFYAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAADWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAVgAAAAAAAABWAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "m,a"
					},
					"AwAAAAJYAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAAEWAAAAAAAAAAAAAAEWAAAAAAAAAVYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAlgAAAAAAAACWAAAAAAAAAAAAAAAAAAA"
				],
				[
					55,
					2,
					"left_delete",
					null,
					"AgAAAARYAAAAAAAABFgAAAAAAAABAAAAYQNYAAAAAAAAA1gAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAABVgAAAAAAAAFWAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "acro"
					},
					"BAAAAANYAAAAAAAABFgAAAAAAAAAAAAABFgAAAAAAAAFWAAAAAAAAAAAAAAFWAAAAAAAAAZYAAAAAAAAAAAAAAZYAAAAAAAAB1gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAA1gAAAAAAAADWAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAdYAAAAAAAACVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAB1gAAAAAAAAHWAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "SYMLINK"
					},
					"BwAAAAhYAAAAAAAACVgAAAAAAAAAAAAACVgAAAAAAAAKWAAAAAAAAAAAAAAKWAAAAAAAAAtYAAAAAAAAAAAAAAtYAAAAAAAADFgAAAAAAAAAAAAADFgAAAAAAAANWAAAAAAAAAAAAAANWAAAAAAAAA5YAAAAAAAAAAAAAA5YAAAAAAAAD1gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACFgAAAAAAAAIWAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAA9YAAAAAAAAEFgAAAAAAAAAAAAAEFgAAAAAAAARWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAD1gAAAAAAAAPWAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAABBYAAAAAAAAEFgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAEVgAAAAAAAARWAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "TARGET"
					},
					"BgAAABBYAAAAAAAAEVgAAAAAAAAAAAAAEVgAAAAAAAASWAAAAAAAAAAAAAASWAAAAAAAABNYAAAAAAAAAAAAABNYAAAAAAAAFFgAAAAAAAAAAAAAFFgAAAAAAAAVWAAAAAAAAAAAAAAVWAAAAAAAABZYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEFgAAAAAAAAQWAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " LINK_L"
					},
					"BwAAABZYAAAAAAAAF1gAAAAAAAAAAAAAF1gAAAAAAAAYWAAAAAAAAAAAAAAYWAAAAAAAABlYAAAAAAAAAAAAABlYAAAAAAAAGlgAAAAAAAAAAAAAGlgAAAAAAAAbWAAAAAAAAAAAAAAbWAAAAAAAABxYAAAAAAAAAAAAABxYAAAAAAAAHVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFlgAAAAAAAAWWAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"left_delete",
					null,
					"AQAAABxYAAAAAAAAHFgAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAHVgAAAAAAAAdWAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "NAME"
					},
					"BAAAABxYAAAAAAAAHVgAAAAAAAAAAAAAHVgAAAAAAAAeWAAAAAAAAAAAAAAeWAAAAAAAAB9YAAAAAAAAAAAAAB9YAAAAAAAAIFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHFgAAAAAAAAcWAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"cut",
					null,
					"AQAAAAJYAAAAAAAAAlgAAAAAAAAgAAAAbWFjcm8oU1lNTElOSyBUQVJHRVQgTElOS19OQU1FKQo",
					"AQAAAAAAAAABAAAAIlgAAAAAAAACWAAAAAAAAAAAAAAAAAAA"
				],
				[
					68,
					2,
					"paste",
					null,
					"AgAAAAJYAAAAAAAAIlgAAAAAAAAAAAAAIlgAAAAAAABCWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAlgAAAAAAAACWAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "end"
					},
					"AwAAACJYAAAAAAAAI1gAAAAAAAAAAAAAI1gAAAAAAAAkWAAAAAAAAAAAAAAkWAAAAAAAACVYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIlgAAAAAAAAiWAAAAAAAAAAAAAAAAAAA"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACFYAAAAAAAAIlgAAAAAAAAAAAAAIlgAAAAAAAAkWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIVgAAAAAAAAhWAAAAAAAAP///////+9/"
				],
				[
					78,
					1,
					"cut",
					null,
					"AQAAAElYAAAAAAAASVgAAAAAAACPAAAAaW5zdGFsbCgKICBDT0RFICJleGVjdXRlX3Byb2Nlc3MoQ09NTUFORCAke0NNQUtFX0NPTU1BTkR9IC1FIGNyZWF0ZV9zeW1saW5rIHJlc29sdmUtaW1wb3J0cy5qcyAke0NNQUtFX0lOU1RBTExfUFJFRklYfS9iaW4vbGlzdC1pbXBvcnRzLmpzKSIKKQo",
					"AQAAAAAAAAABAAAASVgAAAAAAADYWAAAAAAAAAAAAAAAAAAA"
				],
				[
					79,
					1,
					"paste",
					null,
					"AQAAAElYAAAAAAAA2FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASVgAAAAAAABJWAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"paste",
					null,
					"AQAAACJYAAAAAAAAsVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIlgAAAAAAAAiWAAAAAAAAAAAAAAAAAAA"
				],
				[
					90,
					1,
					"insert_snippet",
					{
						"contents": "${1:\\${$SELECTION\\}}"
					},
					"AwAAAG5YAAAAAAAAblgAAAAAAAASAAAAcmVzb2x2ZS1pbXBvcnRzLmpzblgAAAAAAACDWAAAAAAAAAAAAAC0WAAAAAAAALRYAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAblgAAAAAAACAWAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"paste",
					null,
					"AQAAAHBYAAAAAAAAdlgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcFgAAAAAAABwWAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAHZYAAAAAAAAd1gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdlgAAAAAAAB2WAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"right_delete",
					null,
					"AQAAAHdYAAAAAAAAd1gAAAAAAAATAAAAcmVzb2x2ZS1pbXBvcnRzLmpzfQ",
					"AQAAAAAAAAABAAAAd1gAAAAAAACKWAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "${LINK_NAME"
					},
					"CwAAAHhYAAAAAAAAeVgAAAAAAAAAAAAAeVgAAAAAAAB6WAAAAAAAAAAAAAB6WAAAAAAAAHtYAAAAAAAAAAAAAHtYAAAAAAAAfFgAAAAAAAAAAAAAfFgAAAAAAAB9WAAAAAAAAAAAAAB9WAAAAAAAAH5YAAAAAAAAAAAAAH5YAAAAAAAAf1gAAAAAAAAAAAAAf1gAAAAAAACAWAAAAAAAAAAAAACAWAAAAAAAAIFYAAAAAAAAAAAAAIFYAAAAAAAAglgAAAAAAAAAAAAAglgAAAAAAACDWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeFgAAAAAAAB4WAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAINYAAAAAAAAhFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAg1gAAAAAAACDWAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIRYAAAAAAAAhVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhFgAAAAAAACEWAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					2,
					"left_delete",
					null,
					"AgAAAIVYAAAAAAAAhVgAAAAAAAArAAAAJHtDTUFLRV9JTlNUQUxMX1BSRUZJWH0vYmluL2xpc3QtaW1wb3J0cy5qc4RYAAAAAAAAhFgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAhVgAAAAAAACwWAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					2,
					"join_lines",
					null,
					"AwAAACpYAAAAAAAAKlgAAAAAAAABAAAACipYAAAAAAAAKlgAAAAAAAACAAAAICCDWAAAAAAAAINYAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAI1gAAAAAAAAjWAAAAAAAAAAAAAAAACRA"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAACJYAAAAAAAAJFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIlgAAAAAAAAiWAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"left_delete",
					null,
					"AQAAAIZYAAAAAAAAhlgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAh1gAAAAAAACHWAAAAAAAAAAAAAAAADRA"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "\nS"
					},
					"AgAAAKpYAAAAAAAAq1gAAAAAAAAAAAAAq1gAAAAAAACsWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqlgAAAAAAACqWAAAAAAAAAAAAAAAQI9A"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AQAAAKtYAAAAAAAAq1gAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAArFgAAAAAAACsWAAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "symlink"
					},
					"BwAAAKtYAAAAAAAArFgAAAAAAAAAAAAArFgAAAAAAACtWAAAAAAAAAAAAACtWAAAAAAAAK5YAAAAAAAAAAAAAK5YAAAAAAAAr1gAAAAAAAAAAAAAr1gAAAAAAACwWAAAAAAAAAAAAACwWAAAAAAAALFYAAAAAAAAAAAAALFYAAAAAAAAslgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAq1gAAAAAAACrWAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALJYAAAAAAAAtFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAslgAAAAAAACyWAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALNYAAAAAAAAtFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAs1gAAAAAAACzWAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"left_delete",
					null,
					"AQAAALNYAAAAAAAAs1gAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAtFgAAAAAAAC0WAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"right_delete",
					null,
					"AQAAALNYAAAAAAAAs1gAAAAAAABOAAAAKQppbnN0YWxsKAogIENPREUgImV4ZWN1dGVfcHJvY2VzcyhDT01NQU5EICR7Q01BS0VfQ09NTUFORH0gLUUgY3JlYXRlX3N5bWxpbmsg",
					"AQAAAAAAAAABAAAAs1gAAAAAAAABWQAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					2,
					"left_delete",
					null,
					"AgAAAPJYAAAAAAAA8lgAAAAAAAABAAAAIvFYAAAAAAAA8VgAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA81gAAAAAAADzWAAAAAAAAP///////+9/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAPFYAAAAAAAA8lgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8VgAAAAAAADxWAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"left_delete",
					null,
					"AQAAAPJYAAAAAAAA8lgAAAAAAAACAAAACik",
					"AQAAAAAAAAABAAAA8lgAAAAAAAD0WAAAAAAAAAAAAAAAMIZA"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAPFYAAAAAAAA8lgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8VgAAAAAAADxWAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAMZYAAAAAAAAx1gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxlgAAAAAAADGWAAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"cut",
					null,
					"AQAAAKtYAAAAAAAAq1gAAAAAAABKAAAAc3ltbGluayhyZXNvbHZlLWltcG9ydHMuanMgIiR7Q01BS0VfSU5TVEFMTF9QUkVGSVh9L2Jpbi9saXN0LWltcG9ydHMuanMiKQo",
					"AQAAAAAAAAABAAAAq1gAAAAAAAD1WAAAAAAAAAAAAAAAAAAA"
				],
				[
					144,
					2,
					"paste",
					null,
					"AgAAAKtYAAAAAAAA9VgAAAAAAAAAAAAA9VgAAAAAAAA/WQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAq1gAAAAAAACrWAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"paste",
					null,
					"AgAAAC1ZAAAAAAAAMlkAAAAAAAAAAAAAMlkAAAAAAAAyWQAAAAAAAAQAAABsaXN0",
					"AQAAAAAAAAABAAAALVkAAAAAAAAxWQAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"cut",
					null,
					"AQAAAPVYAAAAAAAA9VgAAAAAAABLAAAAc3ltbGluayhyZXNvbHZlLWltcG9ydHMuanMgIiR7Q01BS0VfSU5TVEFMTF9QUkVGSVh9L2Jpbi9jaGVjay1pbXBvcnRzLmpzIikK",
					"AQAAAAAAAAABAAAA9VgAAAAAAABAWQAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					2,
					"paste",
					null,
					"AgAAAPVYAAAAAAAAQFkAAAAAAAAAAAAAQFkAAAAAAACLWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9VgAAAAAAAD1WAAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "extract-strucfts"
					},
					"EQAAAEhZAAAAAAAASVkAAAAAAAAAAAAASVkAAAAAAABJWQAAAAAAABIAAAByZXNvbHZlLWltcG9ydHMuanNJWQAAAAAAAEpZAAAAAAAAAAAAAEpZAAAAAAAAS1kAAAAAAAAAAAAAS1kAAAAAAABMWQAAAAAAAAAAAABMWQAAAAAAAE1ZAAAAAAAAAAAAAE1ZAAAAAAAATlkAAAAAAAAAAAAATlkAAAAAAABPWQAAAAAAAAAAAABPWQAAAAAAAFBZAAAAAAAAAAAAAFBZAAAAAAAAUVkAAAAAAAAAAAAAUVkAAAAAAABSWQAAAAAAAAAAAABSWQAAAAAAAFNZAAAAAAAAAAAAAFNZAAAAAAAAVFkAAAAAAAAAAAAAVFkAAAAAAABVWQAAAAAAAAAAAABVWQAAAAAAAFZZAAAAAAAAAAAAAFZZAAAAAAAAV1kAAAAAAAAAAAAAV1kAAAAAAABYWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASFkAAAAAAABaWQAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					3,
					"left_delete",
					null,
					"AwAAAFdZAAAAAAAAV1kAAAAAAAABAAAAc1ZZAAAAAAAAVlkAAAAAAAABAAAAdFVZAAAAAAAAVVkAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAWFkAAAAAAABYWQAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "ts.js"
					},
					"BQAAAFVZAAAAAAAAVlkAAAAAAAAAAAAAVlkAAAAAAABXWQAAAAAAAAAAAABXWQAAAAAAAFhZAAAAAAAAAAAAAFhZAAAAAAAAWVkAAAAAAAAAAAAAWVkAAAAAAABaWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVVkAAAAAAABVWQAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"paste",
					null,
					"AgAAAHhZAAAAAAAAiFkAAAAAAAAAAAAAiFkAAAAAAACIWQAAAAAAAA0AAABjaGVjay1pbXBvcnRz",
					"AQAAAAAAAAABAAAAeFkAAAAAAACFWQAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "jscfunctions"
					},
					"DQAAAIBZAAAAAAAAgVkAAAAAAAAAAAAAgVkAAAAAAACBWQAAAAAAAAgAAABzdHJ1Y3RzLoFZAAAAAAAAglkAAAAAAAAAAAAAglkAAAAAAACDWQAAAAAAAAAAAACDWQAAAAAAAIRZAAAAAAAAAAAAAIRZAAAAAAAAhVkAAAAAAAAAAAAAhVkAAAAAAACGWQAAAAAAAAAAAACGWQAAAAAAAIdZAAAAAAAAAAAAAIdZAAAAAAAAiFkAAAAAAAAAAAAAiFkAAAAAAACJWQAAAAAAAAAAAACJWQAAAAAAAIpZAAAAAAAAAAAAAIpZAAAAAAAAi1kAAAAAAAAAAAAAi1kAAAAAAACMWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiFkAAAAAAACAWQAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"left_delete",
					null,
					"AQAAAJJZAAAAAAAAklkAAAAAAACQAAAAaW5zdGFsbCgKICBDT0RFICJleGVjdXRlX3Byb2Nlc3MoQ09NTUFORCAke0NNQUtFX0NPTU1BTkR9IC1FIGNyZWF0ZV9zeW1saW5rIHJlc29sdmUtaW1wb3J0cy5qcyAke0NNQUtFX0lOU1RBTExfUFJFRklYfS9iaW4vY2hlY2staW1wb3J0cy5qcykiCikK",
					"AQAAAAAAAAABAAAAklkAAAAAAAAiWgAAAAAAAAAAAAAAAAAA"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "bindings"
					},
					"CQAAAIBZAAAAAAAAgVkAAAAAAAAAAAAAgVkAAAAAAACBWQAAAAAAAAwAAABqc2NmdW5jdGlvbnOBWQAAAAAAAIJZAAAAAAAAAAAAAIJZAAAAAAAAg1kAAAAAAAAAAAAAg1kAAAAAAACEWQAAAAAAAAAAAACEWQAAAAAAAIVZAAAAAAAAAAAAAIVZAAAAAAAAhlkAAAAAAAAAAAAAhlkAAAAAAACHWQAAAAAAAAAAAACHWQAAAAAAAIhZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgFkAAAAAAACMWQAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"cut",
					null,
					"AQAAAAFYAAAAAAAAAVgAAAAAAACpAAAACm1hY3JvKFNZTUxJTksgVEFSR0VUIExJTktfTkFNRSkKICBpbnN0YWxsKENPREUgImV4ZWN1dGVfcHJvY2VzcyhDT01NQU5EICR7Q01BS0VfQ09NTUFORH0gLUUgY3JlYXRlX3N5bWxpbmsgJHtUQVJHRVR9ICR7TElOS19OQU1FfSkiKQplbmRtYWNybyhTWU1MSU5LIFRBUkdFVCBMSU5LX05BTUUpCg",
					"AQAAAAAAAAABAAAAqlgAAAAAAAABWAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "cmake/functions.cmake",
			"settings":
			{
				"buffer_size": 3938,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AQAAALkOAAAAAAAAYg8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQ4AAAAAAAC5DgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/lexer/c.js",
			"settings":
			{
				"buffer_size": 2727,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "resolve-imports.js",
			"settings":
			{
				"buffer_size": 46911,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/console.js",
			"settings":
			{
				"buffer_size": 4186,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					33,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAABICAAAAAAAAEwIAAAAAAAAAAAAAEwIAAAAAAAATAgAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAAEgIAAAAAAAATAgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAABECAAAAAAAAEgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQIAAAAAAAARAgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"left_delete",
					null,
					"AQAAABECAAAAAAAAEQIAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAEgIAAAAAAAASAgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAABECAAAAAAAAEgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQIAAAAAAAARAgAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"left_delete",
					null,
					"AQAAABECAAAAAAAAEQIAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAEgIAAAAAAAASAgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": ".find("
					},
					"BgAAABECAAAAAAAAEgIAAAAAAAAAAAAAEgIAAAAAAAATAgAAAAAAAAAAAAATAgAAAAAAABQCAAAAAAAAAAAAABQCAAAAAAAAFQIAAAAAAAAAAAAAFQIAAAAAAAAWAgAAAAAAAAAAAAAWAgAAAAAAABcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQIAAAAAAAARAgAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABcCAAAAAAAAGAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwIAAAAAAAAXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"left_delete",
					null,
					"AQAAABcCAAAAAAAAFwIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAGAIAAAAAAAAYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "fd"
					},
					"AgAAABcCAAAAAAAAGAIAAAAAAAAAAAAAGAIAAAAAAAAZAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwIAAAAAAAAXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAABkCAAAAAAAAGgIAAAAAAAAAAAAAGgIAAAAAAAAbAgAAAAAAAAAAAAAbAgAAAAAAABwCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQIAAAAAAAAZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " os.isA"
					},
					"BwAAABwCAAAAAAAAHQIAAAAAAAAAAAAAHQIAAAAAAAAeAgAAAAAAAAAAAAAeAgAAAAAAAB8CAAAAAAAAAAAAAB8CAAAAAAAAIAIAAAAAAAAAAAAAIAIAAAAAAAAhAgAAAAAAAAAAAAAhAgAAAAAAACICAAAAAAAAAAAAACICAAAAAAAAIwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAIAAAAAAAAcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"left_delete",
					null,
					"AQAAACICAAAAAAAAIgIAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAAIwIAAAAAAAAjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "ar"
					},
					"AgAAACICAAAAAAAAIwIAAAAAAAAAAAAAIwIAAAAAAAAkAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgIAAAAAAAAiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"left_delete",
					null,
					"AQAAACMCAAAAAAAAIwIAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAJAIAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "tty("
					},
					"BAAAACMCAAAAAAAAJAIAAAAAAAAAAAAAJAIAAAAAAAAlAgAAAAAAAAAAAAAlAgAAAAAAACYCAAAAAAAAAAAAACYCAAAAAAAAJwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwIAAAAAAAAjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "fd))"
					},
					"BAAAACcCAAAAAAAAKAIAAAAAAAAAAAAAKAIAAAAAAAApAgAAAAAAAAAAAAApAgAAAAAAACoCAAAAAAAAAAAAACoCAAAAAAAAKwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwIAAAAAAAAnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAACsCAAAAAAAALAIAAAAAAAAAAAAALAIAAAAAAAAtAgAAAAAAAAAAAAAtAgAAAAAAAC4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwIAAAAAAAArAgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " stdioFds"
					},
					"CQAAAC4CAAAAAAAALwIAAAAAAAAAAAAALwIAAAAAAAAwAgAAAAAAAAAAAAAwAgAAAAAAADECAAAAAAAAAAAAADECAAAAAAAAMgIAAAAAAAAAAAAAMgIAAAAAAAAzAgAAAAAAAAAAAAAzAgAAAAAAADQCAAAAAAAAAAAAADQCAAAAAAAANQIAAAAAAAAAAAAANQIAAAAAAAA2AgAAAAAAAAAAAAA2AgAAAAAAADcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgIAAAAAAAAuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"left_delete",
					null,
					"AQAAADgCAAAAAAAAOAIAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAOQIAAAAAAAA5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAADgCAAAAAAAAOQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAIAAAAAAAA4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAO0BAAAAAAAA7gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QEAAAAAAADtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"left_delete",
					null,
					"AQAAAO0BAAAAAAAA7QEAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAA7gEAAAAAAADuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "typeof("
					},
					"BwAAAO0BAAAAAAAA7gEAAAAAAAAAAAAA7gEAAAAAAADvAQAAAAAAAAAAAADvAQAAAAAAAPABAAAAAAAAAAAAAPABAAAAAAAA8QEAAAAAAAAAAAAA8QEAAAAAAADyAQAAAAAAAAAAAADyAQAAAAAAAPMBAAAAAAAAAAAAAPMBAAAAAAAA9AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QEAAAAAAADtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"left_delete",
					null,
					"AQAAAPMBAAAAAAAA8wEAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAA9AEAAAAAAAD0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " f"
					},
					"AgAAAPMBAAAAAAAA9AEAAAAAAAAAAAAA9AEAAAAAAAD1AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wEAAAAAAADzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA9gEAAAAAAAD3AQAAAAAAAAAAAAD3AQAAAAAAAPgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QEAAAAAAAD1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " 'object'"
					},
					"CQAAAPgBAAAAAAAA+QEAAAAAAAAAAAAA+QEAAAAAAAD6AQAAAAAAAAAAAAD6AQAAAAAAAPsBAAAAAAAAAAAAAPsBAAAAAAAA/AEAAAAAAAAAAAAA/AEAAAAAAAD9AQAAAAAAAAAAAAD9AQAAAAAAAP4BAAAAAAAAAAAAAP4BAAAAAAAA/wEAAAAAAAAAAAAA/wEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AEAAAAAAAD4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAAECAAAAAAAAAgIAAAAAAAAAAAAAAgIAAAAAAAADAgAAAAAAAAAAAAADAgAAAAAAAAQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQIAAAAAAAABAgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " f"
					},
					"AgAAAAQCAAAAAAAABQIAAAAAAAAAAAAABQIAAAAAAAAGAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAIAAAAAAAAEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAAAYCAAAAAAAABwIAAAAAAAAAAAAABwIAAAAAAAAIAgAAAAAAAAAAAAAIAgAAAAAAAAkCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgIAAAAAAAAGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " null"
					},
					"BQAAAAkCAAAAAAAACgIAAAAAAAAAAAAACgIAAAAAAAALAgAAAAAAAAAAAAALAgAAAAAAAAwCAAAAAAAAAAAAAAwCAAAAAAAADQIAAAAAAAAAAAAADQIAAAAAAAAOAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQIAAAAAAAAJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAA4CAAAAAAAADwIAAAAAAAAAAAAADwIAAAAAAAAQAgAAAAAAAAAAAAAQAgAAAAAAABECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgIAAAAAAAAOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABECAAAAAAAAEgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQIAAAAAAAARAgAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAOgBAAAAAAAA6QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AEAAAAAAADoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": ",i)"
					},
					"AwAAAOoBAAAAAAAA6wEAAAAAAAAAAAAA6wEAAAAAAADsAQAAAAAAAAAAAADsAQAAAAAAAO0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gEAAAAAAADqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QEAAAAAAADxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "\nretu"
					},
					"CAAAAPIBAAAAAAAA8wEAAAAAAAAAAAAA8wEAAAAAAAD1AQAAAAAAAAAAAADzAQAAAAAAAPMBAAAAAAAAAgAAACAg8wEAAAAAAAD3AQAAAAAAAAAAAAD3AQAAAAAAAPgBAAAAAAAAAAAAAPgBAAAAAAAA+QEAAAAAAAAAAAAA+QEAAAAAAAD6AQAAAAAAAAAAAAD6AQAAAAAAAPsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gEAAAAAAADyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					4,
					"left_delete",
					null,
					"BAAAAPoBAAAAAAAA+gEAAAAAAAABAAAAdfkBAAAAAAAA+QEAAAAAAAABAAAAdPgBAAAAAAAA+AEAAAAAAAABAAAAZfcBAAAAAAAA9wEAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAA+wEAAAAAAAD7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "try"
					},
					"AwAAAPcBAAAAAAAA+AEAAAAAAAAAAAAA+AEAAAAAAAD5AQAAAAAAAAAAAAD5AQAAAAAAAPoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wEAAAAAAAD3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA+wEAAAAAAAD8AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gEAAAAAAAD6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAPwBAAAAAAAA/QEAAAAAAAAAAAAA/QEAAAAAAAABAgAAAAAAAAAAAAD9AQAAAAAAAP0BAAAAAAAABAAAACAgICD9AQAAAAAAAAMCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AEAAAAAAAD8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BwAAAAMCAAAAAAAABAIAAAAAAAAAAAAABAIAAAAAAAAEAgAAAAAAACQAAAB0eXBlb2YgZiA9PSAnb2JqZWN0JyAmJiBmICE9IG51bGwgJiYEAgAAAAAAAAUCAAAAAAAAAAAAAAUCAAAAAAAABgIAAAAAAAAAAAAABgIAAAAAAAAHAgAAAAAAAAAAAAAHAgAAAAAAAAgCAAAAAAAAAAAAAAgCAAAAAAAACQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwIAAAAAAAAnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					2,
					"left_delete",
					null,
					"AgAAABUCAAAAAAAAFQIAAAAAAAABAAAAOxQCAAAAAAAAFAIAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAFgIAAAAAAAAWAgAAAAAAAP///////+9/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABQCAAAAAAAAFQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAIAAAAAAAAUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "\n}catch"
					},
					"CgAAABUCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAcAgAAAAAAAAAAAAAcAgAAAAAAAB0CAAAAAAAAAAAAABYCAAAAAAAAFgIAAAAAAAAGAAAAICAgICAgFgIAAAAAAAAaAgAAAAAAAAAAAAAbAgAAAAAAABwCAAAAAAAAAAAAABwCAAAAAAAAHQIAAAAAAAAAAAAAHQIAAAAAAAAeAgAAAAAAAAAAAAAeAgAAAAAAAB8CAAAAAAAAAAAAAB8CAAAAAAAAIAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQIAAAAAAAAVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACACAAAAAAAAIgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAIAAAAAAAAgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAACECAAAAAAAAIgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQIAAAAAAAAhAgAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACMCAAAAAAAAJAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwIAAAAAAAAjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"left_delete",
					null,
					"AQAAACMCAAAAAAAAIwIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAJAIAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACMCAAAAAAAAJAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwIAAAAAAAAjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACQCAAAAAAAAJgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAIAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAACUCAAAAAAAAJgIAAAAAAAAAAAAAJgIAAAAAAAAqAgAAAAAAAAAAAAAqAgAAAAAAACsCAAAAAAAAAAAAACsCAAAAAAAALwIAAAAAAAAAAAAAJgIAAAAAAAAmAgAAAAAAAAQAAAAgICAgJgIAAAAAAAAsAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQIAAAAAAAAlAgAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAACwCAAAAAAAALQIAAAAAAAAAAAAALQIAAAAAAAAuAgAAAAAAAAAAAAAuAgAAAAAAAC8CAAAAAAAAAAAAAC8CAAAAAAAAMAIAAAAAAAAAAAAAMAIAAAAAAAAxAgAAAAAAAAAAAAAxAgAAAAAAADICAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAIAAAAAAAAsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " ui"
					},
					"AwAAADICAAAAAAAAMwIAAAAAAAAAAAAAMwIAAAAAAAA0AgAAAAAAAAAAAAA0AgAAAAAAADUCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgIAAAAAAAAyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					2,
					"left_delete",
					null,
					"AgAAADQCAAAAAAAANAIAAAAAAAABAAAAaTMCAAAAAAAAMwIAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAANQIAAAAAAAA1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "i;"
					},
					"AgAAADMCAAAAAAAANAIAAAAAAAAAAAAANAIAAAAAAAA1AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwIAAAAAAAAzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "\n});"
					},
					"BwAAADsCAAAAAAAAPAIAAAAAAAAAAAAAPAIAAAAAAABAAgAAAAAAAAAAAABAAgAAAAAAAEECAAAAAAAAAAAAADwCAAAAAAAAPAIAAAAAAAAEAAAAICAgIDwCAAAAAAAAPgIAAAAAAAAAAAAAPwIAAAAAAABAAgAAAAAAAAAAAABAAgAAAAAAAEECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwIAAAAAAAA7AgAAAAAAAAAAAAAAwGJA"
				]
			]
		},
		{
			"file": "quickjs-blob.c",
			"settings":
			{
				"buffer_size": 8449,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs-inspect.c",
			"settings":
			{
				"buffer_size": 41630,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					100,
					1,
					"right_delete",
					null,
					"AQAAAOJ4AAAAAAAA4ngAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA4ngAAAAAAADieAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"cut",
					null,
					"AQAAAMd4AAAAAAAAx3gAAAAAAAAfAAAAICAgICAgICBkYnVmX3B1dHN0cihidWYsICIsIik7Cg",
					"AQAAAAAAAAABAAAAx3gAAAAAAADmeAAAAAAAAAAAAAAAAAAA"
				],
				[
					105,
					1,
					"paste",
					null,
					"AQAAAMd4AAAAAAAA5ngAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAx3gAAAAAAADHeAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "\nelse"
					},
					"CAAAAJB5AAAAAAAAkXkAAAAAAAAAAAAAkXkAAAAAAACbeQAAAAAAAAAAAACReQAAAAAAAJF5AAAAAAAACgAAACAgICAgICAgICCReQAAAAAAAJl5AAAAAAAAAAAAAJl5AAAAAAAAmnkAAAAAAAAAAAAAmnkAAAAAAACbeQAAAAAAAAAAAACbeQAAAAAAAJx5AAAAAAAAAAAAAJx5AAAAAAAAnXkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkHkAAAAAAACQeQAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ15AAAAAAAAnnkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnXkAAAAAAACdeQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"paste",
					null,
					"AQAAAJ55AAAAAAAAvXkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnnkAAAAAAACeeQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"left_delete",
					null,
					"AQAAALh5AAAAAAAAuHkAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAuXkAAAAAAAC5eQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALh5AAAAAAAAuXkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuHkAAAAAAAC4eQAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAB95AAAAAAAAIHkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAH3kAAAAAAAAfeQAAAAAAAAAAAAAAAE5A"
				],
				[
					131,
					1,
					"left_delete",
					null,
					"AQAAAB95AAAAAAAAH3kAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAIHkAAAAAAAAgeQAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAG6BAAAAAAAAb4EAAAAAAAAAAAAAb4EAAAAAAAB1gQAAAAAAAAAAAABvgQAAAAAAAG+BAAAAAAAABgAAACAgICAgIG+BAAAAAAAAc4EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAboEAAAAAAABugQAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "\nelse"
					},
					"CQAAAG6BAAAAAAAAb4EAAAAAAAAAAAAAb4EAAAAAAAB1gQAAAAAAAAAAAAB2gQAAAAAAAHaBAAAAAAAABAAAACAgICBvgQAAAAAAAG+BAAAAAAAABgAAACAgICAgIG+BAAAAAAAAc4EAAAAAAAAAAAAAc4EAAAAAAAB0gQAAAAAAAAAAAAB0gQAAAAAAAHWBAAAAAAAAAAAAAHWBAAAAAAAAdoEAAAAAAAAAAAAAdoEAAAAAAAB3gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAboEAAAAAAABugQAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"cut",
					null,
					"AQAAANeAAAAAAAAA14AAAAAAAAAnAAAAZGJ1Zl9wdXRzdHIoYnVmLCBjb21wYWN0ID8gIiwgIiA6ICIsIik7",
					"AQAAAAAAAAABAAAA14AAAAAAAAD+gAAAAAAAAP///////+9/"
				],
				[
					179,
					1,
					"paste",
					null,
					"AQAAANeAAAAAAAAA/oAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA14AAAAAAAADXgAAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAHeBAAAAAAAAeIEAAAAAAAAAAAAAeIEAAAAAAAB8gQAAAAAAAAAAAAB4gQAAAAAAAHiBAAAAAAAABAAAACAgICB4gQAAAAAAAH6BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAd4EAAAAAAAB3gQAAAAAAAAAAAAAAIHxA"
				],
				[
					183,
					1,
					"paste",
					null,
					"AQAAAH6BAAAAAAAApYEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfoEAAAAAAAB+gQAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANCAAAAAAAAA0YAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0IAAAAAAAADQgAAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAANGAAAAAAAAA0oAAAAAAAAAAAAAAAYEAAAAAAAAHgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0YAAAAAAAADRgAAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"right_delete",
					null,
					"AQAAANKAAAAAAAAA0oAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA0oAAAAAAAADSgAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"left_delete",
					null,
					"AQAAAASBAAAAAAAABIEAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAABYEAAAAAAAAFgQAAAAAAAAAAAAAAQGVA"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BwAAAKuBAAAAAAAArIEAAAAAAAAAAAAArIEAAAAAAACygQAAAAAAAAAAAACsgQAAAAAAAKyBAAAAAAAABgAAACAgICAgIKyBAAAAAAAAsIEAAAAAAAAAAAAAsIEAAAAAAACxgQAAAAAAAAAAAACsgQAAAAAAAKyBAAAAAAAABAAAACAgICCsgQAAAAAAAK6BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAq4EAAAAAAACrgQAAAAAAAP///////+9/"
				],
				[
					207,
					20,
					"left_delete",
					null,
					"FAAAAKiBAAAAAAAAqIEAAAAAAAABAAAAIqeBAAAAAAAAp4EAAAAAAAABAAAALKaBAAAAAAAApoEAAAAAAAABAAAAIqWBAAAAAAAApYEAAAAAAAABAAAAIKSBAAAAAAAApIEAAAAAAAABAAAAOqOBAAAAAAAAo4EAAAAAAAABAAAAIKKBAAAAAAAAooEAAAAAAAABAAAAIqGBAAAAAAAAoYEAAAAAAAABAAAAIKCBAAAAAAAAoIEAAAAAAAABAAAALJ+BAAAAAAAAn4EAAAAAAAABAAAAIp6BAAAAAAAAnoEAAAAAAAABAAAAIJ2BAAAAAAAAnYEAAAAAAAABAAAAP5yBAAAAAAAAnIEAAAAAAAABAAAAIJuBAAAAAAAAm4EAAAAAAAABAAAAdJqBAAAAAAAAmoEAAAAAAAABAAAAY5mBAAAAAAAAmYEAAAAAAAABAAAAYZiBAAAAAAAAmIEAAAAAAAABAAAAcJeBAAAAAAAAl4EAAAAAAAABAAAAbZaBAAAAAAAAloEAAAAAAAABAAAAb5WBAAAAAAAAlYEAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAqYEAAAAAAACpgQAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAJWBAAAAAAAAl4EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlYEAAAAAAACVgQAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJaBAAAAAAAAl4EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAloEAAAAAAACWgQAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAPqAAAAAAAAA/IAAAAAAAAAAAAAA6YAAAAAAAADrgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6YAAAAAAAAD6gAAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA64AAAAAAAAD8gAAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": " else"
					},
					"BQAAAKuBAAAAAAAArIEAAAAAAAAAAAAArIEAAAAAAACtgQAAAAAAAAAAAACtgQAAAAAAAK6BAAAAAAAAAAAAAK6BAAAAAAAAr4EAAAAAAAAAAAAAr4EAAAAAAACwgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAq4EAAAAAAACrgQAAAAAAAAAAAAAAAElA"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALCBAAAAAAAAsYEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsIEAAAAAAACwgQAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALGBAAAAAAAAs4EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsYEAAAAAAACxgQAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAALKBAAAAAAAAs4EAAAAAAAAAAAAAs4EAAAAAAAC3gQAAAAAAAAAAAAC3gQAAAAAAALiBAAAAAAAAAAAAALiBAAAAAAAAvIEAAAAAAAAAAAAAs4EAAAAAAACzgQAAAAAAAAQAAAAgICAgs4EAAAAAAAC5gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsoEAAAAAAACygQAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"cut",
					null,
					"AQAAAA6BAAAAAAAADoEAAAAAAAB0AAAAaWYoIWNvbXBhY3QgJiYgb3B0cy0+YnJlYWtfbGVuZ3RoICE9IElOVDMyX01BWCkKICAgICAgICBpbnNwZWN0X25ld2xpbmUoYnVmLCBJTlNQRUNUX0xFVkVMKG9wdHMsIGRlcHRoKSArIDEpOwogICAgICA",
					"AQAAAAAAAAABAAAADoEAAAAAAACCgQAAAAAAAAAAAAAAAE5A"
				],
				[
					244,
					1,
					"paste",
					null,
					"AQAAAA6BAAAAAAAAgoEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADoEAAAAAAAAOgQAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"paste",
					null,
					"AQAAALmBAAAAAAAALYIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuYEAAAAAAAC5gQAAAAAAAAAAAAAAAE5A"
				],
				[
					247,
					3,
					"left_delete",
					null,
					"AwAAACuCAAAAAAAAK4IAAAAAAAACAAAAICApggAAAAAAACmCAAAAAAAAAgAAACAgJ4IAAAAAAAAnggAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAALYIAAAAAAAAtggAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACfogAAI2luY2x1ZGUgImluY2x1ZGUvZGVmaW5lcy5oIgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlICJpbmNsdWRlL2l0ZXJhdGlvbi5oIgojaW5jbHVkZSA8bGlzdC5oPgojaW5jbHVkZSAiaW5jbHVkZS9wcm9wZXJ0eS1lbnVtZXJhdGlvbi5oIgojaW5jbHVkZSAicXVpY2tqcy1pbnRlcm5hbC5oIgojaW5jbHVkZSAicXVpY2tqcy1wcmVkaWNhdGUuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPHF1aWNranMtY29uZmlnLmg+CiNpbmNsdWRlICJpbmNsdWRlL3V0aWxzLmgiCiNpbmNsdWRlICJpbmNsdWRlL3ZlY3Rvci5oIgojaW5jbHVkZSAiaW5jbHVkZS9idWZmZXItdXRpbHMuaCIKCiNpbmNsdWRlIDxjdHlwZS5oPgojaW5jbHVkZSA8bWF0aC5oPgojaW5jbHVkZSA8c3RyaW5nLmg+CgojaWZkZWYgX1dJTjMyCiNpbmNsdWRlIDx3aW5kb3dzLmg+CmludCBpc2F0dHkoSEFORExFKTsKI2Vsc2UKI2luY2x1ZGUgPHVuaXN0ZC5oPgojaWYgSEFWRV9URVJNSU9TX0gKI2luY2x1ZGUgPHRlcm1pb3MuaD4KI2luY2x1ZGUgPHN5cy9pb2N0bC5oPgojZW5kaWYKI2VuZGlmCgojaW5jbHVkZSAiaW5jbHVkZS9kZWJ1Zy5oIgoKc3RhdGljIEpTQ2xhc3NJRCBmdW5jdGlvbl9jbGFzc19pZF9jZWlsID0gSlNfQ0xBU1NfQVNZTkNfR0VORVJBVE9SOwoKLyoqCiAqIFxkZWZncm91cCBxdWlja2pzLWluc3BlY3QgUXVpY2tKUyBtb2R1bGU6IGluc3BlY3QgLSBJbnNwZWN0aW9uCiAqIEB7CiAqLwoKdGhyZWFkX2xvY2FsIEpTQXRvbSBpbnNwZWN0X2N1c3RvbV9hdG9tID0gMCwgaW5zcGVjdF9jdXN0b21fYXRvbV9ub2RlID0gMDsKdGhyZWFkX2xvY2FsIEpTVmFsdWUgb2JqZWN0X3Rvc3RyaW5nOwoKI2RlZmluZSBJTlNQRUNUX0lOVDMyVF9JTlJBTkdFKGkpICgoaSkgPiBJTlQzMl9NSU4gJiYgKGkpIDwgSU5UMzJfTUFYKQojZGVmaW5lIElOU1BFQ1RfTEVWRUwob3B0cywgX2RlcHRoKSAoKG9wdHMpLT5kZXB0aCAtIChfZGVwdGgpKQojZGVmaW5lIElOU1BFQ1RfSVNfQ09NUEFDVF9ERVBUSChsZXZlbCwgY29tKSAoKGNvbSkgPT0gSU5UMzJfTUFYID8gVFJVRSA6IElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UoKGNvbSkpID8gKGNvbSkgPCAwID8gKGxldmVsKSA+PSAtKGNvbSkgOiAobGV2ZWwpID49IChjb20pIDogMCkKI2RlZmluZSBJTlNQRUNUX0lTX0NPTVBBQ1Qob3B0cywgX2RlcHRoKSBJTlNQRUNUX0lTX0NPTVBBQ1RfREVQVEgoSU5TUEVDVF9MRVZFTChvcHRzLCBfZGVwdGgpLCAob3B0cyktPmNvbXBhY3QpCiNkZWZpbmUgSU5TUEVDVF9DT01QQUNUKG9wdHMsIF9kZXB0aCkgSU5TUEVDVF9MRVZFTChvcHRzLCBfZGVwdGgpCgpzdHJ1Y3QgcHJvcF9rZXk7Cgp0eXBlZGVmIHN0cnVjdCBwcm9wX2tleSB7CiAgLyogc3RydWN0IGxpc3RfaGVhZCBsaW5rOyovCiAgY29uc3QgY2hhciogbmFtZTsKICBKU0F0b20gYXRvbTsKfSBwcm9wX2tleV90OwoKdHlwZWRlZiBzdHJ1Y3QgewogIGludCBjb2xvcnMgOiAxOwogIGludCBzaG93X2hpZGRlbiA6IDE7CiAgaW50IGN1c3RvbV9pbnNwZWN0IDogMTsKICBpbnQgc2hvd19wcm94eSA6IDE7CiAgaW50IGdldHRlcnMgOiAxOwogIGludCBzdHJpbmdfYnJlYWtfbmV3bGluZSA6IDE7CiAgaW50IHJlcGFyc2VhYmxlIDogMTsKICBpbnQzMl90IGRlcHRoOwogIGludDMyX3QgbWF4X2FycmF5X2xlbmd0aDsKICBpbnQzMl90IG1heF9zdHJpbmdfbGVuZ3RoOwogIGludDMyX3QgYnJlYWtfbGVuZ3RoOwogIGludDMyX3QgY29tcGFjdDsKICBpbnQzMl90IHByb3RvX2NoYWluOwogIGludDMyX3QgbnVtYmVyX2Jhc2U7CiAgVmVjdG9yIGhpZGVfa2V5czsKICBwcm9wX2tleV90IGNsYXNzX2tleTsKfSBpbnNwZWN0X29wdGlvbnNfdDsKCnN0YXRpYyBpbnQgc3Rkb3V0X2lzYXR0eSwgc3RkZXJyX2lzYXR0eTsKc3RhdGljIGludDMyX3Qgc2NyZWVuX3dpZHRoID0gLTE7CgpzdGF0aWMgaW50IGpzX2luc3BlY3RfcHJpbnRfdmFsdWUoSlNDb250ZXh0KiBjdHgsIER5bkJ1ZiogYnVmLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGluc3BlY3Rfb3B0aW9uc190KiBvcHRzLCBpbnQzMl90IGRlcHRoKTsKCnN0YXRpYyBpbnQKcmVnZXhwX3ByZWRpY2F0ZShpbnQgYykgewogIHN3aXRjaChjKSB7CiAgICBjYXNlIDg6IHJldHVybiAndSc7CiAgICBjYXNlIDEyOiByZXR1cm4gJ2YnOwogICAgY2FzZSAxMDogcmV0dXJuICduJzsKICAgIGNhc2UgMTM6IHJldHVybiAncic7CiAgICBjYXNlIDk6IHJldHVybiAndCc7CiAgICBjYXNlIDExOiByZXR1cm4gJ3YnOwogIH0KICBpZihjIDwgMHgyMCkKICAgIHJldHVybiAndSc7CiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbmxpbmUgaW50Cmluc3BlY3Rfc2NyZWVuX3dpZHRoKHZvaWQpIHsKICBpZihzY3JlZW5fd2lkdGggIT0gLTEpCiAgICByZXR1cm4gc2NyZWVuX3dpZHRoOwoKI2lmZGVmIF9XSU4zMgogIENPTlNPTEVfU0NSRUVOX0JVRkZFUl9JTkZPIGNzYmk7CgogIEdldENvbnNvbGVTY3JlZW5CdWZmZXJJbmZvKEdldFN0ZEhhbmRsZShTVERfT1VUUFVUX0hBTkRMRSksICZjc2JpKTsKICBzY3JlZW5fd2lkdGggPSBjc2JpLnNyV2luZG93LlJpZ2h0IC0gY3NiaS5zcldpbmRvdy5MZWZ0ICsgMTsKCiNlbGlmIGRlZmluZWQoSEFWRV9URVJNSU9TX0gpCiAgewogICAgc3RydWN0IHdpbnNpemUgdyA9IHsud3NfY29sID0gLTEsIC53c19yb3cgPSAtMX07CgogICAgaWYoc3Rkb3V0X2lzYXR0eSkKICAgICAgaW9jdGwoU1RET1VUX0ZJTEVOTywgVElPQ0dXSU5TWiwgJncpOwogICAgZWxzZSBpZihzdGRlcnJfaXNhdHR5KQogICAgICBpb2N0bChTVERFUlJfRklMRU5PLCBUSU9DR1dJTlNaLCAmdyk7CgogICAgc2NyZWVuX3dpZHRoID0gdy53c19jb2w7CiAgfQojZWxzZQogIHNjcmVlbl93aWR0aCA9IDgwOwojZW5kaWYKICByZXR1cm4gc2NyZWVuX3dpZHRoOwp9CgpzdGF0aWMgdm9pZAppbnNwZWN0X29wdGlvbnNfaW5pdChpbnNwZWN0X29wdGlvbnNfdCogb3B0cywgSlNDb250ZXh0KiBjdHgpIHsKICBvcHRzLT5jb2xvcnMgPSBUUlVFOwogIG9wdHMtPnNob3dfaGlkZGVuID0gRkFMU0U7CiAgb3B0cy0+Y3VzdG9tX2luc3BlY3QgPSBUUlVFOwogIG9wdHMtPnNob3dfcHJveHkgPSBGQUxTRTsKICBvcHRzLT5nZXR0ZXJzID0gRkFMU0U7CiAgb3B0cy0+c3RyaW5nX2JyZWFrX25ld2xpbmUgPSBGQUxTRTsKICBvcHRzLT5yZXBhcnNlYWJsZSA9IEZBTFNFOwogIG9wdHMtPmRlcHRoID0gSU5UMzJfTUFYOwogIG9wdHMtPm1heF9hcnJheV9sZW5ndGggPSAzMDA7CiAgb3B0cy0+bWF4X3N0cmluZ19sZW5ndGggPSBJTlQzMl9NQVg7CiAgb3B0cy0+YnJlYWtfbGVuZ3RoID0gaW5zcGVjdF9zY3JlZW5fd2lkdGgoKTsKICBvcHRzLT5jb21wYWN0ID0gNTsKICBvcHRzLT5wcm90b19jaGFpbiA9IDA7CiAgb3B0cy0+bnVtYmVyX2Jhc2UgPSAxMDsKICB2ZWN0b3JfaW5pdCgmb3B0cy0+aGlkZV9rZXlzLCBjdHgpOwoKICBwcm9wX2tleV90IHRvX3N0cmluZ190YWcgPSB7MCwganNfYXRvbV9mcm9tKGN0eCwgIltTeW1ib2wudG9TdHJpbmdUYWddIil9OwogIHRvX3N0cmluZ190YWcubmFtZSA9IEpTX0F0b21Ub0NTdHJpbmcoY3R4LCB0b19zdHJpbmdfdGFnLmF0b20pOwoKICB2ZWN0b3JfcHVzaCgmb3B0cy0+aGlkZV9rZXlzLCB0b19zdHJpbmdfdGFnKTsKfQoKc3RhdGljIHZvaWQKaW5zcGVjdF9vcHRpb25zX2ZyZWUoaW5zcGVjdF9vcHRpb25zX3QqIG9wdHMsIEpTQ29udGV4dCogY3R4KSB7CgogIHByb3Bfa2V5X3QqIGtleTsKCiAgdmVjdG9yX2ZvcmVhY2hfdCgmb3B0cy0+aGlkZV9rZXlzLCBrZXkpIHsKICAgIEpTX0ZyZWVBdG9tKGN0eCwga2V5LT5hdG9tKTsKICAgIGpzX2NzdHJpbmdfZnJlZShjdHgsIGtleS0+bmFtZSk7CiAgfQogIHZlY3Rvcl9mcmVlKCZvcHRzLT5oaWRlX2tleXMpOwp9CgpzdGF0aWMgdm9pZAppbnNwZWN0X29wdGlvbnNfZ2V0KGluc3BlY3Rfb3B0aW9uc190KiBvcHRzLCBKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iamVjdCkgewogIEpTVmFsdWUgdmFsdWU7CiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iamVjdCwgImNvbG9ycyIpOwogIGlmKCFKU19Jc0V4Y2VwdGlvbih2YWx1ZSkgJiYgIUpTX0lzVW5kZWZpbmVkKHZhbHVlKSkgewogICAgb3B0cy0+Y29sb3JzID0gSlNfVG9Cb29sKGN0eCwgdmFsdWUpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIH0KCiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iamVjdCwgInNob3dIaWRkZW4iKTsKICBpZighSlNfSXNFeGNlcHRpb24odmFsdWUpICYmICFKU19Jc1VuZGVmaW5lZCh2YWx1ZSkpIHsKICAgIG9wdHMtPnNob3dfaGlkZGVuID0gSlNfVG9Cb29sKGN0eCwgdmFsdWUpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIH0KICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqZWN0LCAiY3VzdG9tSW5zcGVjdCIpOwogIGlmKCFKU19Jc0V4Y2VwdGlvbih2YWx1ZSkgJiYgIUpTX0lzVW5kZWZpbmVkKHZhbHVlKSkgewogICAgb3B0cy0+Y3VzdG9tX2luc3BlY3QgPSBKU19Ub0Jvb2woY3R4LCB2YWx1ZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgfQoKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqZWN0LCAic2hvd1Byb3h5Iik7CiAgaWYoIUpTX0lzRXhjZXB0aW9uKHZhbHVlKSAmJiAhSlNfSXNVbmRlZmluZWQodmFsdWUpKSB7CiAgICBvcHRzLT5zaG93X3Byb3h5ID0gSlNfVG9Cb29sKGN0eCwgdmFsdWUpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIH0KCiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iamVjdCwgImdldHRlcnMiKTsKICBpZighSlNfSXNFeGNlcHRpb24odmFsdWUpICYmICFKU19Jc1VuZGVmaW5lZCh2YWx1ZSkpIHsKICAgIG9wdHMtPmdldHRlcnMgPSBKU19Ub0Jvb2woY3R4LCB2YWx1ZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgfQoKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqZWN0LCAic3RyaW5nQnJlYWtOZXdsaW5lIik7CiAgaWYoIUpTX0lzRXhjZXB0aW9uKHZhbHVlKSAmJiAhSlNfSXNVbmRlZmluZWQodmFsdWUpKSB7CiAgICBvcHRzLT5zdHJpbmdfYnJlYWtfbmV3bGluZSA9IEpTX1RvQm9vbChjdHgsIHZhbHVlKTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKICB9CgogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmplY3QsICJyZXBhcnNlYWJsZSIpOwogIGlmKCFKU19Jc0V4Y2VwdGlvbih2YWx1ZSkgJiYgIUpTX0lzVW5kZWZpbmVkKHZhbHVlKSkgewogICAgb3B0cy0+cmVwYXJzZWFibGUgPSBKU19Ub0Jvb2woY3R4LCB2YWx1ZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgfQoKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqZWN0LCAiZGVwdGgiKTsKICBpZighSlNfSXNVbmRlZmluZWQodmFsdWUpICYmICFKU19Jc0V4Y2VwdGlvbih2YWx1ZSkpIHsKICAgIGlmKEpTX1ZBTFVFX0dFVF9UQUcodmFsdWUpID09IEpTX1RBR19GTE9BVDY0ICYmIGlzaW5mKEpTX1ZBTFVFX0dFVF9GTE9BVDY0KHZhbHVlKSkpCiAgICAgIG9wdHMtPmRlcHRoID0gSU5UMzJfTUFYOwogICAgZWxzZQogICAgICBKU19Ub0ludDMyKGN0eCwgJm9wdHMtPmRlcHRoLCB2YWx1ZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgfQogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmplY3QsICJtYXhBcnJheUxlbmd0aCIpOwogIGlmKCFKU19Jc1VuZGVmaW5lZCh2YWx1ZSkgJiYgIUpTX0lzRXhjZXB0aW9uKHZhbHVlKSkgewogICAgaWYoSlNfVkFMVUVfR0VUX1RBRyh2YWx1ZSkgPT0gSlNfVEFHX0ZMT0FUNjQgJiYgaXNpbmYoSlNfVkFMVUVfR0VUX0ZMT0FUNjQodmFsdWUpKSkKICAgICAgb3B0cy0+bWF4X2FycmF5X2xlbmd0aCA9IElOVDMyX01BWDsKICAgIGVsc2UKICAgICAgSlNfVG9JbnQzMihjdHgsICZvcHRzLT5tYXhfYXJyYXlfbGVuZ3RoLCB2YWx1ZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgfQogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmplY3QsICJtYXhTdHJpbmdMZW5ndGgiKTsKICBpZighSlNfSXNVbmRlZmluZWQodmFsdWUpICYmICFKU19Jc0V4Y2VwdGlvbih2YWx1ZSkpIHsKICAgIGlmKEpTX1ZBTFVFX0dFVF9UQUcodmFsdWUpID09IEpTX1RBR19GTE9BVDY0ICYmIGlzaW5mKEpTX1ZBTFVFX0dFVF9GTE9BVDY0KHZhbHVlKSkpCiAgICAgIG9wdHMtPm1heF9zdHJpbmdfbGVuZ3RoID0gSU5UMzJfTUFYOwogICAgZWxzZQogICAgICBKU19Ub0ludDMyKGN0eCwgJm9wdHMtPm1heF9zdHJpbmdfbGVuZ3RoLCB2YWx1ZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgfQogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmplY3QsICJicmVha0xlbmd0aCIpOwogIGlmKCFKU19Jc1VuZGVmaW5lZCh2YWx1ZSkgJiYgIUpTX0lzRXhjZXB0aW9uKHZhbHVlKSkgewogICAgaWYoSlNfVkFMVUVfR0VUX1RBRyh2YWx1ZSkgPT0gSlNfVEFHX0ZMT0FUNjQgJiYgaXNpbmYoSlNfVkFMVUVfR0VUX0ZMT0FUNjQodmFsdWUpKSkKICAgICAgb3B0cy0+YnJlYWtfbGVuZ3RoID0gSU5UMzJfTUFYOwogICAgZWxzZQogICAgICBKU19Ub0ludDMyKGN0eCwgJm9wdHMtPmJyZWFrX2xlbmd0aCwgdmFsdWUpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIH0KICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqZWN0LCAiY29tcGFjdCIpOwogIGlmKCFKU19Jc1VuZGVmaW5lZCh2YWx1ZSkgJiYgIUpTX0lzRXhjZXB0aW9uKHZhbHVlKSkgewogICAgaWYoSlNfVkFMVUVfR0VUX1RBRyh2YWx1ZSkgPT0gSlNfVEFHX0JPT0wpCiAgICAgIG9wdHMtPmNvbXBhY3QgPSBKU19WQUxVRV9HRVRfQk9PTCh2YWx1ZSkgPT0gMCA/IDAgOiBJTlQzMl9NQVg7CiAgICBlbHNlIGlmKEpTX1ZBTFVFX0dFVF9UQUcodmFsdWUpID09IEpTX1RBR19GTE9BVDY0ICYmIGlzaW5mKEpTX1ZBTFVFX0dFVF9GTE9BVDY0KHZhbHVlKSkpCiAgICAgIG9wdHMtPmNvbXBhY3QgPSBJTlQzMl9NQVg7CiAgICBlbHNlCiAgICAgIEpTX1RvSW50MzIoY3R4LCAmb3B0cy0+Y29tcGFjdCwgdmFsdWUpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIH0KICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqZWN0LCAiaGlkZUtleXMiKTsKICBpZihqc19pc19hcnJheShjdHgsIHZhbHVlKSkgewogICAgaW50NjRfdCBsZW4sIHBvczsKICAgIGxlbiA9IGpzX2FycmF5X2xlbmd0aChjdHgsIHZhbHVlKTsKCiAgICBmb3IocG9zID0gMDsgcG9zIDwgbGVuOyBwb3MrKykgewogICAgICBKU1ZhbHVlIGl0ZW0gPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHZhbHVlLCBwb3MpOwogICAgICBwcm9wX2tleV90IGtleTsKICAgICAga2V5Lm5hbWUgPSBKU19WQUxVRV9HRVRfVEFHKGl0ZW0pID09IEpTX1RBR19TWU1CT0wgPyAwIDogSlNfVG9DU3RyaW5nKGN0eCwgaXRlbSk7CiAgICAgIGtleS5hdG9tID0gSlNfVmFsdWVUb0F0b20oY3R4LCBpdGVtKTsKICAgICAgdmVjdG9yX3B1c2goJm9wdHMtPmhpZGVfa2V5cywga2V5KTsKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgaXRlbSk7CiAgICB9CiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgfQogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmplY3QsICJwcm90b0NoYWluIik7CiAgLy8gaWYoSlNfSXNOdW1iZXIodmFsdWUpKQogIEpTX1RvSW50MzIoY3R4LCAmb3B0cy0+cHJvdG9fY2hhaW4sIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmplY3QsICJudW1iZXJCYXNlIik7CiAgaWYoSlNfSXNOdW1iZXIodmFsdWUpKQogICAgSlNfVG9JbnQzMihjdHgsICZvcHRzLT5udW1iZXJfYmFzZSwgdmFsdWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKCiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iamVjdCwgImNsYXNzS2V5Iik7CiAgb3B0cy0+Y2xhc3Nfa2V5LmF0b20gPSBKU19WYWx1ZVRvQXRvbShjdHgsIHZhbHVlKTsKICBvcHRzLT5jbGFzc19rZXkubmFtZSA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmluc3BlY3Rfb3B0aW9uc19vYmplY3QoaW5zcGVjdF9vcHRpb25zX3QqIG9wdHMsIEpTQ29udGV4dCogY3R4KSB7CiAgSlNWYWx1ZSBhcnIsIHJldCA9IEpTX05ld09iamVjdChjdHgpOwogIHVpbnQzMl90IG47CiAgcHJvcF9rZXlfdCoga2V5OwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgImNvbG9ycyIsIEpTX05ld0Jvb2woY3R4LCBvcHRzLT5jb2xvcnMpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgInNob3dIaWRkZW4iLCBKU19OZXdCb29sKGN0eCwgb3B0cy0+c2hvd19oaWRkZW4pKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgImN1c3RvbUluc3BlY3QiLCBKU19OZXdCb29sKGN0eCwgb3B0cy0+Y3VzdG9tX2luc3BlY3QpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgInNob3dQcm94eSIsIEpTX05ld0Jvb2woY3R4LCBvcHRzLT5zaG93X3Byb3h5KSk7CiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJnZXR0ZXJzIiwgSlNfTmV3Qm9vbChjdHgsIG9wdHMtPmdldHRlcnMpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgInN0cmluZ0JyZWFrTmV3bGluZSIsIEpTX05ld0Jvb2woY3R4LCBvcHRzLT5zdHJpbmdfYnJlYWtfbmV3bGluZSkpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAicmVwYXJzZWFibGUiLCBKU19OZXdCb29sKGN0eCwgb3B0cy0+cmVwYXJzZWFibGUpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgImRlcHRoIiwganNfbnVtYmVyX25ldyhjdHgsIG9wdHMtPmRlcHRoKSk7CiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJtYXhBcnJheUxlbmd0aCIsIGpzX251bWJlcl9uZXcoY3R4LCBvcHRzLT5tYXhfYXJyYXlfbGVuZ3RoKSk7CiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJtYXhTdHJpbmdMZW5ndGgiLCBqc19udW1iZXJfbmV3KGN0eCwgb3B0cy0+bWF4X3N0cmluZ19sZW5ndGgpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgImJyZWFrTGVuZ3RoIiwganNfbnVtYmVyX25ldyhjdHgsIG9wdHMtPmJyZWFrX2xlbmd0aCkpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAiY29tcGFjdCIsIGpzX25ld19ib29sX29yX251bWJlcihjdHgsIG9wdHMtPmNvbXBhY3QpKTsKICBpZihvcHRzLT5wcm90b19jaGFpbikKICAgIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAicHJvdG9DaGFpbiIsIGpzX251bWJlcl9uZXcoY3R4LCBvcHRzLT5wcm90b19jaGFpbikpOwogIGFyciA9IEpTX05ld0FycmF5KGN0eCk7CiAgbiA9IDA7CiAgdmVjdG9yX2ZvcmVhY2hfdCgmb3B0cy0+aGlkZV9rZXlzLCBrZXkpIHsgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcnIsIG4rKywganNfYXRvbV90b3ZhbHVlKGN0eCwga2V5LT5hdG9tKSk7IH0KICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgImhpZGVLZXlzIiwgYXJyKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgIm51bWJlckJhc2UiLCBqc19udW1iZXJfbmV3KGN0eCwgb3B0cy0+bnVtYmVyX2Jhc2UpKTsKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgImNsYXNzS2V5IiwgSlNfQXRvbVRvVmFsdWUoY3R4LCBvcHRzLT5jbGFzc19rZXkuYXRvbSkpOwogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbnQKaW5zcGVjdF9vcHRpb25zX2hpZGRlbihpbnNwZWN0X29wdGlvbnNfdCogb3B0cywgSlNBdG9tIGF0b20pIHsKICBwcm9wX2tleV90KiBrZXk7CiAgdmVjdG9yX2ZvcmVhY2hfdCgmb3B0cy0+aGlkZV9rZXlzLCBrZXkpIHsKICAgIGlmKGtleS0+YXRvbSA9PSBhdG9tKSAvLyEgc3RyY21wKGtleS0+bmFtZSwgc3RyKSkKICAgICAgcmV0dXJuIDE7CiAgfQogIHJldHVybiAwOwp9CgpzdGF0aWMgdm9pZAppbnNwZWN0X25ld2xpbmUoRHluQnVmKiBidWYsIGludDMyX3QgZGVwdGgpIHsKICBkYnVmX3B1dGMoYnVmLCAnXG4nKTsKICB3aGlsZShkZXB0aC0tID4gMCkgZGJ1Zl9wdXRzdHIoYnVmLCAiICAiKTsKfQoKc3RhdGljIGludApqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lcyhKU0NvbnRleHQqIGN0eCwgdW5pb24gVmVjdG9yKiBwcm9wZW51bV90YWIsIEpTVmFsdWVDb25zdCBvYmosIGludCBmbGFncykgewogIGludCByZXQ7CiAgSlNQcm9wZXJ0eUVudW0qIHRtcF90YWI7CiAgdWludDMyX3QgaSwgdG1wX2xlbjsKICByZXQgPSBKU19HZXRPd25Qcm9wZXJ0eU5hbWVzKGN0eCwgJnRtcF90YWIsICZ0bXBfbGVuLCBvYmosIGZsYWdzKTsKCiAgZm9yKGkgPSAwOyBpIDwgdG1wX2xlbjsgaSsrKSB7CiAgICBpZih2ZWN0b3JfZmluZChwcm9wZW51bV90YWIsIHNpemVvZihKU1Byb3BlcnR5RW51bSksICZ0bXBfdGFiW2ldKSA9PSAtMSkKICAgICAgdmVjdG9yX3B1dChwcm9wZW51bV90YWIsICZ0bXBfdGFiW2ldLCBzaXplb2YoSlNQcm9wZXJ0eUVudW0pKTsKICB9CgogIG9yaWdfanNfZnJlZShjdHgsIHRtcF90YWIpOwogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbnQKanNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXNfcmVjdXJzaXZlKEpTQ29udGV4dCogY3R4LCB1bmlvbiBWZWN0b3IqIHByb3BlbnVtX3RhYiwgSlNWYWx1ZUNvbnN0IG9iaiwgaW50IGZsYWdzKSB7CiAgaW50IHJldDsKCiAgd2hpbGUoKHJldCA9IGpzX29iamVjdF9nZXRwcm9wZXJ0eW5hbWVzKGN0eCwgcHJvcGVudW1fdGFiLCBvYmosIGZsYWdzKSkgPj0gMCkgewogICAgSlNWYWx1ZSBwcm90byA9IEpTX0dldFByb3RvdHlwZShjdHgsIG9iaik7CgogICAgaWYoIUpTX0lzT2JqZWN0KHByb3RvKSkKICAgICAgYnJlYWs7CgogICAgb2JqID0gcHJvdG87CiAgICAvLyAgICAgIHJldCA9IGpzX29iamVjdF9nZXRwcm9wZXJ0eW5hbWVzX3JlY3Vyc2l2ZShjdHgsIHByb3BlbnVtX3RhYiwgcHJvdG8sIGZsYWdzKTsKICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU0F0b20KanNfaW5zcGVjdF9jdXN0b21fYXRvbShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogc3ltX2ZvcikgewogIEpTVmFsdWUga2V5LCBzeW07CiAgSlNBdG9tIGF0b207CiAga2V5ID0gSlNfTmV3U3RyaW5nKGN0eCwgc3ltX2ZvciA/IHN5bV9mb3IgOiAicXVpY2tqcy5pbnNwZWN0LmN1c3RvbSIpOwogIHN5bSA9IGpzX3N5bWJvbF9pbnZva2Vfc3RhdGljKGN0eCwgImZvciIsIGtleSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwga2V5KTsKICBhdG9tID0gSlNfVmFsdWVUb0F0b20oY3R4LCBzeW0pOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHN5bSk7CgogIHJldHVybiBhdG9tOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19pbnNwZWN0X2N1c3RvbV9jYWxsKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCBpbnNwZWN0X29wdGlvbnNfdCogb3B0cywgaW50MzJfdCBkZXB0aCkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIEpTVmFsdWUgaW5zcGVjdCA9IEpTX1VOREVGSU5FRDsKICBKU0F0b20gcHJvcDsKCiAgaWYoSlNfVkFMVUVfR0VUX09CSihvYmopLT5jbGFzc19pZCkgewogICAgaWYoSlNfSGFzUHJvcGVydHkoY3R4LCBvYmosIGluc3BlY3RfY3VzdG9tX2F0b20pKQogICAgICBpbnNwZWN0ID0gSlNfR2V0UHJvcGVydHkoY3R4LCBvYmosIGluc3BlY3RfY3VzdG9tX2F0b20pOwogICAgZWxzZSBpZihKU19IYXNQcm9wZXJ0eShjdHgsIG9iaiwgaW5zcGVjdF9jdXN0b21fYXRvbV9ub2RlKSkKICAgICAgaW5zcGVjdCA9IEpTX0dldFByb3BlcnR5KGN0eCwgb2JqLCBpbnNwZWN0X2N1c3RvbV9hdG9tX25vZGUpOwogIH0KICBpZihKU19Jc0Z1bmN0aW9uKGN0eCwgaW5zcGVjdCkpIHsKICAgIEpTVmFsdWVDb25zdCBhcmdzWzJdOwogICAgaW5zcGVjdF9vcHRpb25zX3Qgb3B0c19ub2N1c3RvbTsKICAgIG1lbWNweSgmb3B0c19ub2N1c3RvbSwgb3B0cywgc2l6ZW9mKGluc3BlY3Rfb3B0aW9uc190KSk7CiAgICBvcHRzX25vY3VzdG9tLmN1c3RvbV9pbnNwZWN0ID0gRkFMU0U7CiAgICBhcmdzWzBdID0ganNfbnVtYmVyX25ldyhjdHgsIElOU1BFQ1RfTEVWRUwob3B0cywgZGVwdGgpIC0gMSk7CiAgICBhcmdzWzFdID0gaW5zcGVjdF9vcHRpb25zX29iamVjdCgmb3B0c19ub2N1c3RvbSwgY3R4KTsKICAgIHJldCA9IEpTX0NhbGwoY3R4LCBpbnNwZWN0LCBvYmosIDIsIGFyZ3MpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgYXJnc1swXSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBhcmdzWzFdKTsKICAgIC8qICAgc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgcmV0KTsKICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHJldCk7Ki8KICB9CgogIEpTX0ZyZWVWYWx1ZShjdHgsIGluc3BlY3QpOwogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbnQKanNfaW5zcGVjdF9wcmludF9kYXRlKEpTQ29udGV4dCogY3R4LCBEeW5CdWYqIGJ1ZiwgSlNWYWx1ZUNvbnN0IG9iaiwgaW5zcGVjdF9vcHRpb25zX3QqIG9wdHMsIGludDMyX3QgZGVwdGgpIHsKICBjb25zdCBjaGFyKiBzdHI7CiAgSlNWYWx1ZSBkYXRlOwoKICAvLyBkYXRlID0gSlNfRHVwVmFsdWUoY3R4LCBvYmopOwogIGRhdGUgPSBqc19pbnZva2UoY3R4LCBvYmosICJ0b0lTT1N0cmluZyIsIDAsIDApOwoKICBpZigoc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgZGF0ZSkpKSB7CiAgICBpZihvcHRzLT5jb2xvcnMpCiAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgQ09MT1JfUFVSUExFKTsKICAgIGRidWZfcHV0c3RyKGJ1Ziwgc3RyKTsKICAgIGlmKG9wdHMtPmNvbG9ycykKICAgICAgZGJ1Zl9wdXRzdHIoYnVmLCBDT0xPUl9OT05FKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKICB9CgogIEpTX0ZyZWVWYWx1ZShjdHgsIGRhdGUpOwoKICByZXR1cm4gMDsKfQoKc3RhdGljIGludApqc19pbnNwZWN0X3ByaW50X21hcChKU0NvbnRleHQqIGN0eCwgRHluQnVmKiBidWYsIEpTVmFsdWVDb25zdCBvYmosIGluc3BlY3Rfb3B0aW9uc190KiBvcHRzLCBpbnQzMl90IGRlcHRoKSB7CiAgQk9PTCByZXQsIGZpbmlzaCA9IEZBTFNFOwogIHNpemVfdCBpID0gMDsKICBCT09MIGNvbXBhY3QgPSBJTlNQRUNUX0lTX0NPTVBBQ1Qob3B0cywgZGVwdGgpOwogIC8vIHByaW50ZigianNfaW5zcGVjdF9wcmludF9tYXAgbGV2ZWw9JXUgb3B0cy0+ZGVwdGg9JSIgUFJJZDMyICIgZGVwdGg9JSIgUFJJZDMyICIKICAvLyBjb21wYWN0PSVpXG4iLCBJTlNQRUNUX0xFVkVMKG9wdHMsIGRlcHRoKSwgb3B0cy0+ZGVwdGgsIGRlcHRoLCBjb21wYWN0KTsKICBKU1ZhbHVlIGRhdGEsIGtleSwgdmFsdWU7CiAgSXRlcmF0aW9uIGl0OwogIGlmKCEocmV0ID0gaXRlcmF0aW9uX21ldGhvZF9zeW1ib2woJml0LCBjdHgsIG9iaiwgIml0ZXJhdG9yIikpKSB7CiAgICBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJqc19pbnNwZWN0X3ByaW50X21hcCB0YWc9JWRcbiIsIEpTX1ZBTFVFX0dFVF9UQUcob2JqKSk7CiAgICByZXR1cm4gMDsKICB9CiAgZGJ1Zl9wdXRzdHIoYnVmLCAiTWFwIHsiKTsKICBpZighY29tcGFjdCAmJiBvcHRzLT5icmVha19sZW5ndGggIT0gSU5UMzJfTUFYKQogICAgaW5zcGVjdF9uZXdsaW5lKGJ1ZiwgSU5TUEVDVF9MRVZFTChvcHRzLCBkZXB0aCkpOwogIGZvcihpID0gMDsgIShmaW5pc2ggPSBpdGVyYXRpb25fbmV4dCgmaXQsIGN0eCkpOyBpKyspIHsKICAgIGlmKCFmaW5pc2gpIHsKICAgICAgZGF0YSA9IGl0ZXJhdGlvbl92YWx1ZSgmaXQsIGN0eCk7CiAgICAgIGlmKGkpIHsKICAgICAgICBkYnVmX3B1dHN0cihidWYsICIsIik7CiAgICAgICAgaWYoIWNvbXBhY3QgJiYgb3B0cy0+YnJlYWtfbGVuZ3RoICE9IElOVDMyX01BWCkKICAgICAgICAgIGluc3BlY3RfbmV3bGluZShidWYsIElOU1BFQ1RfTEVWRUwob3B0cywgZGVwdGgpKTsKICAgICAgfQogICAgICBkYnVmX3B1dHN0cihidWYsIGNvbXBhY3QgPyAiICIgOiAiICAiKTsKICAgICAga2V5ID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBkYXRhLCAwKTsKICAgICAganNfaW5zcGVjdF9wcmludF92YWx1ZShjdHgsIGJ1Ziwga2V5LCBvcHRzLCBkZXB0aCAtIDEpOwogICAgICBkYnVmX3B1dHN0cihidWYsICIgPT4gIik7CiAgICAgIHZhbHVlID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBkYXRhLCAxKTsKICAgICAganNfaW5zcGVjdF9wcmludF92YWx1ZShjdHgsIGJ1ZiwgdmFsdWUsIG9wdHMsIGRlcHRoIC0gMSk7CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGtleSk7CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgZGF0YSk7CiAgICB9CiAgfQogIGlmKCFjb21wYWN0ICYmIG9wdHMtPmJyZWFrX2xlbmd0aCAhPSBJTlQzMl9NQVgpCiAgICBpbnNwZWN0X25ld2xpbmUoYnVmLCBJTlNQRUNUX0xFVkVMKG9wdHMsIGRlcHRoKSk7CiAgZGJ1Zl9wdXRzdHIoYnVmLCBjb21wYWN0ID8gIiB9IiA6ICJ9Iik7CiAgaXRlcmF0aW9uX3Jlc2V0KCZpdCwgSlNfR2V0UnVudGltZShjdHgpKTsKICByZXR1cm4gMDsKfQoKc3RhdGljIGludApqc19pbnNwZWN0X3ByaW50X3NldChKU0NvbnRleHQqIGN0eCwgRHluQnVmKiBidWYsIEpTVmFsdWVDb25zdCBvYmosIGluc3BlY3Rfb3B0aW9uc190KiBvcHRzLCBpbnQzMl90IGRlcHRoKSB7CiAgQk9PTCByZXQsIGZpbmlzaCA9IEZBTFNFOwogIHNpemVfdCBpID0gMDsKICBCT09MIGNvbXBhY3QgPSBJTlNQRUNUX0lTX0NPTVBBQ1Qob3B0cywgZGVwdGgpOwogIEpTVmFsdWUgdmFsdWU7CiAgSXRlcmF0aW9uIGl0OwoKICBpZighKHJldCA9IGl0ZXJhdGlvbl9tZXRob2Rfc3ltYm9sKCZpdCwgY3R4LCBvYmosICJpdGVyYXRvciIpKSkgewogICAgSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAianNfaW5zcGVjdF9wcmludF9tYXAgdGFnPSVkXG4iLCBKU19WQUxVRV9HRVRfVEFHKG9iaikpOwogICAgcmV0dXJuIDA7CiAgfQogIGRidWZfcHV0c3RyKGJ1ZiwgIlNldCBbIik7CiAgaWYoIWNvbXBhY3QgJiYgb3B0cy0+YnJlYWtfbGVuZ3RoICE9IElOVDMyX01BWCkKICAgIGluc3BlY3RfbmV3bGluZShidWYsIElOU1BFQ1RfTEVWRUwob3B0cywgZGVwdGgpKTsKICBmb3IoaSA9IDA7ICEoZmluaXNoID0gaXRlcmF0aW9uX25leHQoJml0LCBjdHgpKTsgaSsrKSB7CiAgICBpZighZmluaXNoKSB7CiAgICAgIHZhbHVlID0gaXRlcmF0aW9uX3ZhbHVlKCZpdCwgY3R4KTsKICAgICAgaWYoaSkgewogICAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgIiwiKTsKICAgICAgICBpZighY29tcGFjdCAmJiBvcHRzLT5icmVha19sZW5ndGggIT0gSU5UMzJfTUFYKQogICAgICAgICAgaW5zcGVjdF9uZXdsaW5lKGJ1ZiwgSU5TUEVDVF9MRVZFTChvcHRzLCBkZXB0aCkpOwogICAgICB9CiAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgY29tcGFjdCA/ICIgIiA6ICIgICIpOwogICAgICBqc19pbnNwZWN0X3ByaW50X3ZhbHVlKGN0eCwgYnVmLCB2YWx1ZSwgb3B0cywgZGVwdGgpOwogICAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgICB9CiAgfQogIGlmKCFjb21wYWN0ICYmIG9wdHMtPmJyZWFrX2xlbmd0aCAhPSBJTlQzMl9NQVgpCiAgICBpbnNwZWN0X25ld2xpbmUoYnVmLCBJTlNQRUNUX0xFVkVMKG9wdHMsIGRlcHRoKSk7CiAgZGJ1Zl9wdXRzdHIoYnVmLCBjb21wYWN0ID8gIiBdIiA6ICJdIik7CiAgaXRlcmF0aW9uX3Jlc2V0KCZpdCwgSlNfR2V0UnVudGltZShjdHgpKTsKICByZXR1cm4gMDsKfQoKc3RhdGljIGludApqc19pbnNwZWN0X3ByaW50X2FycmF5YnVmZmVyKEpTQ29udGV4dCogY3R4LCBEeW5CdWYqIGJ1ZiwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnNwZWN0X29wdGlvbnNfdCogb3B0cywgaW50MzJfdCBkZXB0aCkgewogIGNvbnN0IGNoYXIgKnN0ciwgKnN0cjI7CiAgdWludDhfdCogcHRyOwogIHNpemVfdCBpLCBzbGVuLCBzaXplOwogIGludCBicmVha19sZW4gPSBvcHRzLT5icmVha19sZW5ndGg7IC8vIGluc3BlY3Rfc2NyZWVuX3dpZHRoKCk7CiAgaW50IGNvbHVtbiA9IGRidWZfZ2V0X2NvbHVtbihidWYpOwogIEpTVmFsdWUgcHJvdG87CiAgaW50IGNvbXBhY3QgPSBvcHRzLT5jb21wYWN0OwogIGJyZWFrX2xlbiA9IChicmVha19sZW4gKyAxKSAvIDM7CiAgYnJlYWtfbGVuICo9IDM7CgogIGlmKGJyZWFrX2xlbiA+IG9wdHMtPmJyZWFrX2xlbmd0aCkKICAgIGJyZWFrX2xlbiA9IG9wdHMtPmJyZWFrX2xlbmd0aDsKICBwdHIgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZzaXplLCB2YWx1ZSk7CiAgLy8gcHJpbnRmKCJtYXhBcnJheUxlbmd0aDogJWlcbiIsIG9wdHMtPm1heF9hcnJheV9sZW5ndGgpOwogIHByb3RvID0gSlNfR2V0UHJvdG90eXBlKGN0eCwgdmFsdWUpOwogIHN0ciA9IGpzX29iamVjdF90b3N0cmluZzIoY3R4LCBvYmplY3RfdG9zdHJpbmcsIHByb3RvKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CgogIGlmKG9wdHMtPnJlcGFyc2VhYmxlKQogICAgZGJ1Zl9wdXRzdHIoYnVmLCAibmV3IFVpbnQ4QXJyYXkoWyIpOwogIGVsc2UgewogICAgaWYoanNfaXNfYXJyYXlidWZmZXIoY3R4LCB2YWx1ZSkpCiAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgIkFycmF5QnVmZmVyIik7CiAgICBlbHNlIGlmKGpzX2lzX3NoYXJlZGFycmF5YnVmZmVyKGN0eCwgdmFsdWUpKQogICAgICBkYnVmX3B1dHN0cihidWYsICJTaGFyZWRBcnJheUJ1ZmZlciIpOwogICAgZWxzZSBpZihzdHIgJiYgKHN0cjIgPSBzdHJjaHIoc3RyLCAnICcpKSkgewogICAgICBzdHIyKys7CiAgICAgIHNsZW4gPSBieXRlX2NocihzdHIyLCBzdHJsZW4oc3RyMiksICddJyk7CiAgICAgIGRidWZfYXBwZW5kKGJ1ZiwgKGNvbnN0IHVpbnQ4X3QqKXN0cjIsIHNsZW4pOwogICAgfQoKICAgIGlmKHN0cikKICAgICAganNfY3N0cmluZ19mcmVlKGN0eCwgc3RyKTsKCiAgICBkYnVmX3B1dHN0cihidWYsICIgeyIpOwogICAgaWYoY29tcGFjdCA+IDEpCiAgICAgIGRidWZfcHV0YyhidWYsICcgJyk7CiAgICBlbHNlCiAgICAgIGluc3BlY3RfbmV3bGluZShidWYsIElOU1BFQ1RfTEVWRUwob3B0cywgZGVwdGgpICsgMik7CiAgICBkYnVmX3ByaW50ZihidWYsICJieXRlTGVuZ3RoOiAlenUgWyIsIHNpemUpOwogIH0KCiAgaWYoY29tcGFjdCA+IDApCiAgICBkYnVmX3B1dGMoYnVmLCAnICcpOwogIGVsc2UKICAgIGluc3BlY3RfbmV3bGluZShidWYsIElOU1BFQ1RfTEVWRUwob3B0cywgZGVwdGgpICsgMyk7CgogIGJyZWFrX2xlbiAtPSAoSU5TUEVDVF9MRVZFTChvcHRzLCBkZXB0aCkgKyAzKSAqIDI7CiAgY29sdW1uID0gMDsKCiAgZm9yKGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7CiAgICBpZihjb2x1bW4gKyAob3B0cy0+cmVwYXJzZWFibGUgPyA2IDogMykgPj0gYnJlYWtfbGVuICYmIG9wdHMtPmJyZWFrX2xlbmd0aCAhPSBJTlQzMl9NQVgpIHsKICAgICAgaWYob3B0cy0+cmVwYXJzZWFibGUgJiYgaSA+IDApCiAgICAgICAgZGJ1Zl9wdXRjKGJ1ZiwgJywnKTsKCiAgICAgIGlmKGNvbXBhY3QgPiAwKQogICAgICAgIGRidWZfcHV0YyhidWYsICcgJyk7CiAgICAgIGVsc2UKICAgICAgICBpbnNwZWN0X25ld2xpbmUoYnVmLCBJTlNQRUNUX0xFVkVMKG9wdHMsIGRlcHRoKSArIDMpOwogICAgICBjb2x1bW4gPSAwOwogICAgfQoKICAgIGlmKG9wdHMtPnJlcGFyc2VhYmxlKSB7CiAgICAgIHNpemVfdCBwb3MgPSBidWYtPnNpemU7CiAgICAgIGRidWZfcHJpbnRmKGJ1ZiwgY29sdW1uID4gMCA/ICIsIDB4JTAyeCIgOiAiMHglMDJ4IiwgcHRyW2ldKTsKICAgICAgY29sdW1uICs9IGJ1Zi0+c2l6ZSAtIHBvczsKICAgIH0gZWxzZSBpZigvKihvcHRzLT5tYXhfYXJyYXlfbGVuZ3RoID09IElOVDMyX01BWCAmJiBpID4gMzIpIHx8Ki8gaSA9PSAoc2l6ZV90KW9wdHMtPm1heF9hcnJheV9sZW5ndGgpIHsKICAgICAgYnJlYWs7CiAgICB9IGVsc2UgewogICAgICBkYnVmX3ByaW50ZihidWYsIGNvbHVtbiA/ICIgJTAyeCIgOiAiJTAyeCIsIHB0cltpXSk7CiAgICAgIGNvbHVtbiArPSBjb2x1bW4gPyAzIDogMjsKICAgIH0KICB9CgogIGlmKG9wdHMtPnJlcGFyc2VhYmxlKSB7CiAgICBkYnVmX3B1dHN0cihidWYsICJdKS5idWZmZXIiKTsKICB9IGVsc2UgewogICAgaWYoaSA8IHNpemUpIHsKICAgICAgaWYoY29tcGFjdCA+IDApCiAgICAgICAgZGJ1Zl9wdXRjKGJ1ZiwgJyAnKTsKICAgICAgZWxzZQogICAgICAgIGluc3BlY3RfbmV3bGluZShidWYsIElOU1BFQ1RfTEVWRUwob3B0cywgZGVwdGgpICsgMyk7CgogICAgICBkYnVmX3ByaW50ZihidWYsICIuLi4gJXp1IG1vcmUgYnl0ZXMiLCBzaXplIC0gaSk7CiAgICB9CiAgICBpZihjb21wYWN0ID4gMCkKICAgICAgZGJ1Zl9wdXRjKGJ1ZiwgJyAnKTsKICAgIGVsc2UKICAgICAgaW5zcGVjdF9uZXdsaW5lKGJ1ZiwgSU5TUEVDVF9MRVZFTChvcHRzLCBkZXB0aCkgKyAyKTsKICAgIGRidWZfcHV0c3RyKGJ1ZiwgIl0iKTsKICAgIGlmKGNvbXBhY3QgPiAxKQogICAgICBkYnVmX3B1dGMoYnVmLCAnICcpOwogICAgZWxzZQogICAgICBpbnNwZWN0X25ld2xpbmUoYnVmLCBJTlNQRUNUX0xFVkVMKG9wdHMsIGRlcHRoKSArIDEpOwogICAgZGJ1Zl9wdXRzdHIoYnVmLCAifSIpOwogIH0KICByZXR1cm4gMDsKfQoKc3RhdGljIGludApqc19pbnNwZWN0X3ByaW50X3JlZ2V4cChKU0NvbnRleHQqIGN0eCwgRHluQnVmKiBidWYsIEpTVmFsdWVDb25zdCB2YWx1ZSwgaW5zcGVjdF9vcHRpb25zX3QqIG9wdHMsIGludDMyX3QgZGVwdGgpIHsKICBjb25zdCBjaGFyKiBzdHI7CiAgc2l6ZV90IGxlbjsKICBzdHIgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmbGVuLCB2YWx1ZSk7CiAgaWYob3B0cy0+Y29sb3JzKQogICAgZGJ1Zl9wdXRzdHIoYnVmLCBDT0xPUl9SRUQpOwogIGRidWZfcHV0X2VzY2FwZWRfcHJlZChidWYsIHN0ciwgbGVuLCByZWdleHBfcHJlZGljYXRlKTsKICBpZihvcHRzLT5jb2xvcnMpCiAgICBkYnVmX3B1dHN0cihidWYsIENPTE9SX05PTkUpOwogIGpzX2NzdHJpbmdfZnJlZShjdHgsIHN0cik7CiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbnQKanNfaW5zcGVjdF9wcmludF9udW1iZXIoSlNDb250ZXh0KiBjdHgsIER5bkJ1ZiogYnVmLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGluc3BlY3Rfb3B0aW9uc190KiBvcHRzLCBpbnQzMl90IGRlcHRoKSB7CiAgaW50IHRhZyA9IEpTX1ZBTFVFX0dFVF9UQUcodmFsdWUpOwogIGNvbnN0IGNoYXIqIHN0cjsKICBzaXplX3QgbGVuOwogIGlmKHRhZyAhPSBKU19UQUdfU1lNQk9MICYmIG9wdHMtPmNvbG9ycykKICAgIGRidWZfcHV0c3RyKGJ1ZiwgQ09MT1JfWUVMTE9XKTsKCiAgaWYob3B0cy0+bnVtYmVyX2Jhc2UgPT0gMTYgJiYgdGFnICE9IEpTX1RBR19GTE9BVDY0KSB7CiAgICBpbnQ2NF90IG51bTsKICAgIGNoYXIgc3RyW0ZNVF9YTE9OR107CiAgICBKU19Ub0ludDY0KGN0eCwgJm51bSwgdmFsdWUpOwogICAgZGJ1Zl9wdXRzdHIoYnVmLCAiMHgiKTsKICAgIGRidWZfcHV0KGJ1ZiwgKGNvbnN0IHVpbnQ4X3QqKXN0ciwgZm10X3hsb25nbG9uZyhzdHIsIG51bSkpOwoKICB9IGVsc2UgewogICAgSlNWYWx1ZSBudW1iZXI7CiAgICBpbnQgYmFzZSA9IDEwOwogICAgaWYob3B0cy0+bnVtYmVyX2Jhc2UgJiYgb3B0cy0+bnVtYmVyX2Jhc2UgIT0gMTAgJiYgdGFnICE9IEpTX1RBR19GTE9BVDY0KSB7CiAgICAgIEpTVmFsdWUgYXJnID0gSlNfTmV3SW50MzIoY3R4LCBvcHRzLT5udW1iZXJfYmFzZSk7CiAgICAgIG51bWJlciA9IGpzX2ludm9rZShjdHgsIHZhbHVlLCAidG9TdHJpbmciLCAxLCAmYXJnKTsKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgYXJnKTsKICAgICAgYmFzZSA9IG9wdHMtPm51bWJlcl9iYXNlOwogICAgfSBlbHNlIHsKICAgICAgbnVtYmVyID0gSlNfRHVwVmFsdWUoY3R4LCB2YWx1ZSk7CiAgICB9CiAgICBzdHIgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmbGVuLCBudW1iZXIpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgbnVtYmVyKTsKCiAgICBzd2l0Y2goYmFzZSkgewogICAgICBjYXNlIDE2OiBkYnVmX3B1dHN0cihidWYsICIweCIpOyBicmVhazsKICAgICAgY2FzZSAyOiBkYnVmX3B1dHN0cihidWYsICIwYiIpOyBicmVhazsKICAgICAgY2FzZSA4OiBkYnVmX3B1dHN0cihidWYsICIwIik7IGJyZWFrOwogICAgfQoKICAgIGRidWZfYXBwZW5kKGJ1ZiwgKGNvbnN0IHVpbnQ4X3QqKXN0ciwgbGVuKTsKCiAgICBqc19jc3RyaW5nX2ZyZWUoY3R4LCBzdHIpOwogIH0KCiAgaWYodGFnIDw9IEpTX1RBR19CSUdfRkxPQVQpCiAgICBkYnVmX3B1dGMoYnVmLCB0YWcgPT0gSlNfVEFHX0JJR19ERUNJTUFMID8gJ20nIDogdGFnID09IEpTX1RBR19CSUdfRkxPQVQgPyAnbCcgOiAnbicpOwogIGlmKG9wdHMtPmNvbG9ycykKICAgIGRidWZfcHV0c3RyKGJ1ZiwgQ09MT1JfTk9ORSk7CiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbnQKanNfaW5zcGVjdF9wcmludF9zdHJpbmcoSlNDb250ZXh0KiBjdHgsIER5bkJ1ZiogYnVmLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGluc3BlY3Rfb3B0aW9uc190KiBvcHRzLCBpbnQzMl90IGRlcHRoKSB7CiAgaW50IHRhZyA9IEpTX1ZBTFVFX0dFVF9UQUcodmFsdWUpOwogIEJPT0wgY29tcGFjdCA9IElOU1BFQ1RfSVNfQ09NUEFDVChvcHRzLCBkZXB0aCk7CgogIGNvbnN0IGNoYXIqIHN0cjsKICBzaXplX3QgcG9zLCBsZW4sIG1heF9sZW4sIGxpbWl0LCBjb2x1bW5fc3RhcnQgPSAoSU5TUEVDVF9MRVZFTChvcHRzLCBkZXB0aCkgKiAyKTsKICBpbnQgY29sID0gZGJ1Zl9nZXRfY29sdW1uKGJ1Zik7CiAgc3RyID0gSlNfVG9DU3RyaW5nTGVuKGN0eCwgJmxlbiwgdmFsdWUpOwogIG1heF9sZW4gPSBtaW5fc2l6ZShvcHRzLT5icmVha19sZW5ndGggLSBjb2wgLSAxMCwgbGVuKTsKCiAgaWYodGFnICE9IEpTX1RBR19TWU1CT0wgJiYgb3B0cy0+Y29sb3JzKQogICAgZGJ1Zl9wdXRzdHIoYnVmLCBDT0xPUl9HUkVFTik7CiAgZGJ1Zl9wdXRjKGJ1ZiwgdGFnID09IEpTX1RBR19TWU1CT0wgPyAnKCcgOiAnXCcnKTsKICBsaW1pdCA9IG9wdHMtPnJlcGFyc2VhYmxlID8gbGVuIDogbWluX3NpemUob3B0cy0+bWF4X3N0cmluZ19sZW5ndGgsIGxlbik7CgogIGZvcihwb3MgPSAwOyBwb3MgPCBsaW1pdDspIHsKICAgIHNpemVfdCBpLCBuLCBlb2w7CiAgICBuID0gbGltaXQgLSBwb3M7CiAgICBpZihwb3MgPiAwKSB7CiAgICAgIGRidWZfcHV0c3RyKGJ1Ziwgb3B0cy0+Y29sb3JzID8gIiciIENPTE9SX05PTkUgIiArIiA6ICInICsiKTsKICAgICAgbWF4X2xlbiA9IG9wdHMtPmJyZWFrX2xlbmd0aCAtIGNvbHVtbl9zdGFydCAtIDg7CiAgICAgIGluc3BlY3RfbmV3bGluZShidWYsIElOU1BFQ1RfTEVWRUwob3B0cywgZGVwdGgpICsgMSk7CiAgICAgIGRidWZfcHV0c3RyKGJ1Ziwgb3B0cy0+Y29sb3JzID8gQ09MT1JfR1JFRU4gIiciIDogIiciKTsKICAgIH0KICAgIGlmKG9wdHMtPnN0cmluZ19icmVha19uZXdsaW5lKSB7CiAgICAgIGZvcihpID0gcG9zOyBpIDwgbGltaXQ7IGkgKz0gZW9sKSB7CiAgICAgICAgZW9sID0gYnl0ZV9jaHIoJnN0cltpXSwgbGltaXQgLSBpLCAnXG4nKTsKICAgICAgICBpZihzdHJbaSArIGVvbF0gPT0gJ1xuJykKICAgICAgICAgIGVvbCsrOwoKICAgICAgICBpZihpID4gcG9zICYmIGFuc2lfdHJ1bmNhdGUoJnN0cltwb3NdLCBpICsgZW9sIC0gcG9zLCBtYXhfbGVuKSA8IGkgKyBlb2wgLSBwb3MpIHsKICAgICAgICAgIG4gPSBpIC0gcG9zOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICB9IGVsc2UgaWYoY29tcGFjdCkgewogICAgICBuID0gYW5zaV90cnVuY2F0ZSgmc3RyW3Bvc10sIG4sIG1heF9sZW4pOwogICAgfQogICAgZGJ1Zl9wdXRfZXNjYXBlZChidWYsICZzdHJbcG9zXSwgbik7CiAgICBwb3MgKz0gbjsKICB9CiAganNfY3N0cmluZ19mcmVlKGN0eCwgc3RyKTsKICBkYnVmX3B1dGMoYnVmLCB0YWcgPT0gSlNfVEFHX1NZTUJPTCA/ICcpJyA6ICdcJycpOwoKICBpZihvcHRzLT5jb2xvcnMpCiAgICBkYnVmX3B1dHN0cihidWYsIENPTE9SX05PTkUpOwoKICBpZihsaW1pdCA8IGxlbikgewogICAgaWYob3B0cy0+YnJlYWtfbGVuZ3RoICE9IElOVDMyX01BWCAmJiBkYnVmX2dldF9jb2x1bW4oYnVmKSArIDI2ID4gb3B0cy0+YnJlYWtfbGVuZ3RoKQogICAgICBpbnNwZWN0X25ld2xpbmUoYnVmLCBJTlNQRUNUX0xFVkVMKG9wdHMsIGRlcHRoKSArIDEpOwogICAgZGJ1Zl9wcmludGYoYnVmLCAiLi4uICV6dSBtb3JlIGNoYXJhY3RlcnMiLCBsZW4gLSBwb3MpOwogIH0KICByZXR1cm4gMDsKfQoKc3RhdGljIGludApqc19pbnNwZWN0X3ByaW50X2F0b20oSlNDb250ZXh0KiBjdHgsIER5bkJ1ZiogYnVmLCBKU0F0b20gYXRvbSwgaW5zcGVjdF9vcHRpb25zX3QqIG9wdHMsIGludDMyX3QgZGVwdGgpIHsKICBKU1ZhbHVlIHZhbHVlOwogIGludCByOwogIHZhbHVlID0gSlNfQXRvbVRvVmFsdWUoY3R4LCBhdG9tKTsKICByID0ganNfaW5zcGVjdF9wcmludF92YWx1ZShjdHgsIGJ1ZiwgdmFsdWUsIG9wdHMsIGRlcHRoKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgcmV0dXJuIHI7Cn0KCnN0YXRpYyBpbnQKanNfaW5zcGVjdF9wcmludF9tb2R1bGUoSlNDb250ZXh0KiBjdHgsIER5bkJ1ZiogYnVmLCBKU01vZHVsZURlZiogZGVmLCBpbnNwZWN0X29wdGlvbnNfdCogb3B0cywgaW50MzJfdCBkZXB0aCkgewogIHNpemVfdCBwb3M7CiAgZGJ1Zl9wdXRzdHIoYnVmLCBvcHRzLT5jb2xvcnMgPyBDT0xPUl9DWUFOICJbbW9kdWxlIiBDT0xPUl9OT05FIDogIlttb2R1bGUiKTsKICBpZihkZWYpIHsKICAgIGludCBpbmRleCA9IGpzX21vZHVsZV9pbmRleG9mKGN0eCwgZGVmKTsKICAgIGFzc2VydChqc19tb2R1bGVfYXQoY3R4LCBpbmRleCkgPT0gZGVmKTsKICAgIGRidWZfcHJpbnRmKGJ1ZiwgQ09MT1JfV0hJVEUgIiAjJWkiIENPTE9SX05PTkUsIGluZGV4KTsKCiAgICBkYnVmX3ByaW50ZihidWYsIENPTE9SX1lFTExPVyAiICVwIiBDT0xPUl9OT05FLCBkZWYpOwogICAgZGJ1Zl9wdXRjKGJ1ZiwgJyAnKTsKICAgIHBvcyA9IGJ1Zi0+c2l6ZTsKICAgIGpzX2luc3BlY3RfcHJpbnRfYXRvbShjdHgsIGJ1ZiwgZGVmLT5tb2R1bGVfbmFtZSwgb3B0cywgZGVwdGggLSAxKTsKCiAgICB3aGlsZShwb3MgPCBidWYtPnNpemUpIHsKICAgICAgaWYoYnVmLT5idWZbcG9zXSA9PSAnXCcnKQogICAgICAgIGJ1Zi0+YnVmW3Bvc10gPSAnIic7CiAgICAgIGVsc2UgaWYoYnVmLT5idWZbcG9zIC0gMl0gPT0gJ1snICYmIGJ1Zi0+YnVmW3BvcyAtIDFdID09ICczJyAmJiBidWYtPmJ1Zltwb3NdID09ICcyJyAmJiBidWYtPmJ1Zltwb3MgKyAxXSA9PSAnbScpCiAgICAgICAgYnVmLT5idWZbcG9zXSA9ICc1JzsKICAgICAgKytwb3M7CiAgICB9CgogICAgaWYoSlNfSXNGdW5jdGlvbihjdHgsIGRlZi0+ZnVuY19vYmopKSB7CiAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgQ09MT1JfUkVEICIgSlMiIENPTE9SX05PTkUpOwogICAgfSBlbHNlIGlmKGRlZi0+aW5pdF9mdW5jKSB7CiAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgQ09MT1JfUkVEICIgTkFUSVZFIiBDT0xPUl9OT05FKTsKICAgIH0gZWxzZSB7CiAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgQ09MT1JfUkVEICIgQllURUNPREUiIENPTE9SX05PTkUpOwogICAgfQoKICAgIGlmKCFkZWYtPnJlc29sdmVkKQogICAgICBkYnVmX3B1dHN0cihidWYsIENPTE9SX1lFTExPVyAiIChub3QgcmVzb2x2ZWQpIiBDT0xPUl9OT05FKTsKICAgIGVsc2UgaWYoIWRlZi0+ZnVuY19jcmVhdGVkKQogICAgICBkYnVmX3B1dHN0cihidWYsIENPTE9SX1lFTExPVyAiIChubyBmdW5jdGlvbiBjcmVhdGVkKSIgQ09MT1JfTk9ORSk7CiAgICBlbHNlIGlmKCFkZWYtPmluc3RhbnRpYXRlZCkKICAgICAgZGJ1Zl9wdXRzdHIoYnVmLCBDT0xPUl9ZRUxMT1cgIiAobm90IGluc3RhbnRpYXRlZCkiIENPTE9SX05PTkUpOwogICAgZWxzZSBpZighZGVmLT5ldmFsdWF0ZWQpCiAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgQ09MT1JfWUVMTE9XICIgKG5vdCBldmFsdWF0ZWQpIiBDT0xPUl9OT05FKTsKCiAgICBpZihKU19Jc0Z1bmN0aW9uKGN0eCwgZGVmLT5mdW5jX29iaikpIHsKICAgICAgZGJ1Zl9wdXRjKGJ1ZiwgJyAnKTsKICAgICAganNfaW5zcGVjdF9wcmludF92YWx1ZShjdHgsIGJ1ZiwgZGVmLT5mdW5jX29iaiwgb3B0cywgZGVwdGggLSAxKTsKICAgIH0KICB9CiAgZGJ1Zl9wdXRzdHIoYnVmLCBvcHRzLT5jb2xvcnMgPyBDT0xPUl9DWUFOICJdIiBDT0xPUl9OT05FIDogIl0iKTsKICByZXR1cm4gMDsKfQoKc3RhdGljIGludApqc19pbnNwZWN0X3ByaW50X2Vycm9yKEpTQ29udGV4dCogY3R4LCBEeW5CdWYqIGJ1ZiwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnNwZWN0X29wdGlvbnNfdCogb3B0cywgaW50MzJfdCBkZXB0aCkgewoKICBjaGFyKiBjbGFzc19uYW1lOwogIGNvbnN0IGNoYXIqIHM7CiAgSlNWYWx1ZSBzdGFjazsKCiAgY2xhc3NfbmFtZSA9IGpzX29iamVjdF9jbGFzc25hbWUoY3R4LCB2YWx1ZSk7CgogIGRidWZfcHV0c3RyKGJ1Ziwgb3B0cy0+Y29sb3JzID8gIlsiIENPTE9SX1JFRCA6ICJbIik7CiAgZGJ1Zl9wdXRzdHIoYnVmLCBjbGFzc19uYW1lKTsKICBpZigocyA9IGpzX2dldF9wcm9wZXJ0eXN0cl9jc3RyaW5nKGN0eCwgdmFsdWUsICJtZXNzYWdlIikpKSB7CiAgICBkYnVmX3B1dHN0cihidWYsICI6ICIpOwogICAgZGJ1Zl9wdXRzdHIoYnVmLCBzKTsKICAgIC8vIGRidWZfcHV0c3RyKGJ1ZiwgIik7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIH0KICBkYnVmX3B1dHN0cihidWYsIG9wdHMtPmNvbG9ycyA/IENPTE9SX05PTkUgIl0iIDogIl0iKTsKCiAgc3RhY2sgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIHZhbHVlLCAic3RhY2siKTsKCiAgaWYoIUpTX0lzVW5kZWZpbmVkKHN0YWNrKSkgewogICAgaWYoKHMgPSBKU19Ub0NTdHJpbmcoY3R4LCBzdGFjaykpKSB7CiAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgIiBTVEFDSzpcbiIpOwogICAgICBkYnVmX3B1dHN0cihidWYsIHMpOwogICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogICAgfQogIH0KCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbnQKanNfaW5zcGVjdF9wcmludF9vYmplY3QoSlNDb250ZXh0KiBjdHgsIER5bkJ1ZiogYnVmLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGluc3BlY3Rfb3B0aW9uc190KiBvcHRzLCBpbnQzMl90IGRlcHRoKSB7CiAgQk9PTCBpc19hcnJheSA9IDAsIGlzX3R5cGVkYXJyYXkgPSAwLCBpc19mdW5jdGlvbiA9IDA7CiAgaW50NjRfdCBwb3MsIGxlbiwgbGltaXQ7CiAgVmVjdG9yIHByb3BlbnVtX3RhYjsKICBjb25zdCBjaGFyKiBzID0gMDsKICBpbnQgY29tcGFjdCA9IDA7CiAgSlNPYmplY3QqIG9iaiA9IEpTX1ZBTFVFX0dFVF9PQkoodmFsdWUpOwoKICBkYnVmX2luaXQyKCZwcm9wZW51bV90YWIuZGJ1ZiwgY3R4LCAocmVhbGxvY19mdW5jKikmdXRpbHNfanNfcmVhbGxvYyk7CgogIGlmKCFvYmotPnByb3AgfHwgIW9iai0+c2hhcGUpIHsKICAgIGRidWZfcHJpbnRmKGJ1ZiwgImpzX2luc3BlY3RfcHJpbnRfdmFsdWUgT2JqZWN0IHByb3AgPSAlcCwgc2hhcGUgPSAlcCAiLCBvYmotPnByb3AsIG9iai0+c2hhcGUpOwogICAgcmV0dXJuIC0xOwogIH0KCiAgaWYob3B0cy0+Y3VzdG9tX2luc3BlY3QpIHsKICAgIEpTVmFsdWUgdG1wID0ganNfaW5zcGVjdF9jdXN0b21fY2FsbChjdHgsIHZhbHVlLCBvcHRzLCBkZXB0aCArIDEpOwogICAgaWYoSlNfSXNTdHJpbmcodG1wKSkgewogICAgICBjb25zdCBjaGFyKiBzID0gSlNfVG9DU3RyaW5nKGN0eCwgdG1wKTsKICAgICAgZGJ1Zl9wdXRzdHIoYnVmLCBzKTsKICAgICAganNfY3N0cmluZ19mcmVlKGN0eCwgcyk7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGlmKEpTX0lzRXhjZXB0aW9uKHRtcCkpIHsKICAgICAgSlNWYWx1ZSBleGNlcHRpb24gPSBKU19HZXRFeGNlcHRpb24oY3R4KTsKCiAgICAgIC8vIGRidWZfcHJpbnRmKGJ1ZiwgImV4Y2VwdGlvbjogJXNcbiIsIEpTX1RvQ1N0cmluZyhjdHgsIGV4Y2VwdGlvbikpOwogICAgICAvLyByZXR1cm4gMDsKCiAgICB9IGVsc2UgaWYoIUpTX0lzVW5kZWZpbmVkKHRtcCkpIHsKICAgICAgaWYoIUpTX0lzT2JqZWN0KHRtcCkpCiAgICAgICAgcmV0dXJuIGpzX2luc3BlY3RfcHJpbnRfdmFsdWUoY3R4LCBidWYsIHRtcCwgb3B0cywgZGVwdGggKyAxKTsKICAgICAgLy8gZGVwdGg7CgogICAgICB2YWx1ZSA9IHRtcDsKICAgICAgY29tcGFjdCsrOwogICAgfQogIH0KCiAgaWYob3B0cy0+Y29tcGFjdCA8IDApIHsKICAgIGNvbXBhY3QgPSBkZXB0aCA+PSAtb3B0cy0+Y29tcGFjdDsKICB9IGVsc2UgaWYoSU5TUEVDVF9JTlQzMlRfSU5SQU5HRShvcHRzLT5jb21wYWN0KSAmJiBvcHRzLT5jb21wYWN0ID4gMCkgewogICAgaW50MzJfdCBkZWVwZXN0ID0gMTsKICAgIGludDMyX3QgZCA9IGRlcHRoID4gMjAwMDAwMDAwMCA/IElOVDMyX01BWCAtIGRlcHRoIDogZGVwdGg7CgogICAgLy8gaWYoIWpzX2lzX2FycmF5YnVmZmVyKGN0eCwgdmFsdWUpKQogICAgZGVlcGVzdCA9IHByb3BlcnR5X2VudW1lcmF0aW9uX2RlZXBlc3QoY3R4LCB2YWx1ZSwgb3B0cy0+Y29tcGFjdCArIDEpOwoKICAgIC8vIGNvbnN0IGNoYXIqIHR5cGVzdHIgPSBqc19vYmplY3RfdG9zdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICBjb21wYWN0ID0gZGVlcGVzdCA8PSBvcHRzLT5jb21wYWN0OwoKICAgIC8vIHByaW50ZigiJXMgY29tcGFjdCA9ICVkLCBvcHRzLT5jb21wYWN0ID0gJSIgUFJJaTMyICIsIGRlZXBlc3QgPSAlIiBQUklpMzIgIiwgZGVwdGggPSAlIiBQUklpMzIgIlxuIiwgdHlwZXN0ciA/IHR5cGVzdHIgOiAiKG51bGwpIiwKICAgIC8vIGNvbXBhY3QsIG9wdHMtPmNvbXBhY3QsIGRlZXBlc3QsIGQpOwogIH0KCiAgaXNfZnVuY3Rpb24gPSBKU19Jc0Z1bmN0aW9uKGN0eCwgdmFsdWUpICYmIChmdW5jdGlvbl9jbGFzc19pZF9jZWlsIDw9IDAgfHwgSlNfR2V0Q2xhc3NJRCh2YWx1ZSkgPCBmdW5jdGlvbl9jbGFzc19pZF9jZWlsKTsKCiAgaWYoIWlzX2Z1bmN0aW9uKSB7CiAgICBpc19hcnJheSA9IGpzX2lzX2FycmF5KGN0eCwgdmFsdWUpOwogICAgaXNfdHlwZWRhcnJheSA9IGpzX2lzX3R5cGVkYXJyYXkodmFsdWUpOwoKICAgIGlmKCFpc19hcnJheSAmJiAhaXNfdHlwZWRhcnJheSkgewogICAgICBpZihqc19pc19hcnJheWJ1ZmZlcihjdHgsIHZhbHVlKSB8fCBqc19pc19zaGFyZWRhcnJheWJ1ZmZlcihjdHgsIHZhbHVlKSkKICAgICAgICByZXR1cm4ganNfaW5zcGVjdF9wcmludF9hcnJheWJ1ZmZlcihjdHgsIGJ1ZiwgdmFsdWUsIG9wdHMsIGRlcHRoICsgMSk7CiAgICAgIGlmKGpzX2lzX2RhdGUoY3R4LCB2YWx1ZSkpCiAgICAgICAgcmV0dXJuIGpzX2luc3BlY3RfcHJpbnRfZGF0ZShjdHgsIGJ1ZiwgdmFsdWUsIG9wdHMsIGRlcHRoIC8qKyAxKi8pOwogICAgICBpZihqc19pc19tYXAoY3R4LCB2YWx1ZSkpCiAgICAgICAgcmV0dXJuIGpzX2luc3BlY3RfcHJpbnRfbWFwKGN0eCwgYnVmLCB2YWx1ZSwgb3B0cywgZGVwdGggLyorIDEqLyk7CiAgICAgIGlmKGpzX2lzX3NldChjdHgsIHZhbHVlKSkKICAgICAgICByZXR1cm4ganNfaW5zcGVjdF9wcmludF9zZXQoY3R4LCBidWYsIHZhbHVlLCBvcHRzLCBkZXB0aCArIDEpOwogICAgICBpZihqc19pc19yZWdleHAoY3R4LCB2YWx1ZSkpCiAgICAgICAgcmV0dXJuIGpzX2luc3BlY3RfcHJpbnRfcmVnZXhwKGN0eCwgYnVmLCB2YWx1ZSwgb3B0cywgZGVwdGggKyAxKTsKICAgICAgLyppZihKU19Jc0luc3RhbmNlT2YoY3R4LCB2YWx1ZSwgcHJveHlfY3RvcikpIHsKICAgICAgICBkYnVmX3B1dHN0cihidWYsICJbUHJveHldIik7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0qLwogICAgfQoKICAgIGlmKGpzX29iamVjdF90bXBtYXJrX2lzc2V0KHZhbHVlKSkgewogICAgICBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJjaXJjdWxhciByZWZlcmVuY2UiKTsKICAgICAgcmV0dXJuIC0xOwogICAgfQoKICAgIGlmKGpzX2lzX2dlbmVyYXRvcihjdHgsIHZhbHVlKSkgewogICAgICBkYnVmX3B1dHN0cihidWYsICJPYmplY3QgW0dlbmVyYXRvcl0ge30iKTsKICAgICAganNfY3N0cmluZ19mcmVlKGN0eCwgcyk7CiAgICAgIHJldHVybiAwOwogICAgfQogIH0KCiAgaWYoanNfaXNfcHJvbWlzZShjdHgsIHZhbHVlKSkgewogICAgZGJ1Zl9wdXRzdHIoYnVmLCBvcHRzLT5jb2xvcnMgPyBDT0xPUl9MSUdIVFJFRCAiUHJvbWlzZSAiIENPTE9SX05PTkUgOiAiUHJvbWlzZSAiKTsKCiAgfSBlbHNlIGlmKCFqc19pc19hcnJheShjdHgsIHZhbHVlKSAmJiAhaXNfZnVuY3Rpb24pIHsKICAgIGlmKHMgPT0gMCAmJiBKU19Jc0Z1bmN0aW9uKGN0eCwgb2JqZWN0X3Rvc3RyaW5nKSkKICAgICAgcyA9IGpzX29iamVjdF90b3N0cmluZzIoY3R4LCBvYmplY3RfdG9zdHJpbmcsIHZhbHVlKTsKCiAgICBpZihzICYmICFzdHJuY21wKHMsICJbb2JqZWN0ICIsIDgpKSB7CiAgICAgIGNvbnN0IGNoYXIqIGUgPSBzdHJjaHIocywgJ10nKTsKICAgICAgc2l6ZV90IHNsZW4gPSBlIC0gKHMgKyA4KTsKCiAgICAgIGlmKHNsZW4gIT0gNiB8fCBtZW1jbXAocyArIDgsICJPYmplY3QiLCA2KSkgewogICAgICAgIGRidWZfcHV0c3RyKGJ1Ziwgb3B0cy0+Y29sb3JzID8gQ09MT1JfTElHSFRSRUQgOiAiWyIpOwogICAgICAgIC8vIGRidWZfcHV0c3RyKGJ1Ziwgb3B0cy0+Y29sb3JzID8gQ09MT1JfTUFSSU5FICJbIiA6ICJbIik7CiAgICAgICAgZGJ1Zl9hcHBlbmQoYnVmLCAoY29uc3QgdWludDhfdCopcyArIDgsIGUgLSAocyArIDgpKTsKICAgICAgICAvLyBkYnVmX3B1dHN0cihidWYsIG9wdHMtPmNvbG9ycyA/ICJdIiBDT0xPUl9OT05FICIgIiA6ICJdICIpOwogICAgICAgIGRidWZfcHV0c3RyKGJ1Ziwgb3B0cy0+Y29sb3JzID8gQ09MT1JfTk9ORSAiICIgOiAiXSAiKTsKICAgICAgfQogICAgfQogIH0KICBpZihzKQogICAganNfY3N0cmluZ19mcmVlKGN0eCwgcyk7CgogIEJPT0wgaXNfYXJyYXlfbGlrZSA9IGlzX2FycmF5IHx8IGlzX3R5cGVkYXJyYXkgfHwganNfaXNfYXJyYXlfbGlrZShjdHgsIHZhbHVlKTsKCiAgaWYoIWlzX2FycmF5X2xpa2UpIHsKICAgIEJPT0wgc2hvd19oaWRkZW4gPSBvcHRzLT5zaG93X2hpZGRlbjsKCiAgICAvLyBwcmludGYoInByb3RvX2NoYWluOiAlaVxuIiwgb3B0cy0+cHJvdG9fY2hhaW4pOwogICAgaWYoKDEgfHwgb3B0cy0+cHJvdG9fY2hhaW4gPyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDoganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMpKGN0eCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICZwcm9wZW51bV90YWIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBvcHRzLT5wcm90b19jaGFpbiA8PSAwID8gSlNfR2V0UHJvdG90eXBlKGN0eCwgdmFsdWUpIDogKi8gdmFsdWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19HUE5fU1RSSU5HX01BU0sgfCBKU19HUE5fU1lNQk9MX01BU0sgfCAoc2hvd19oaWRkZW4gPyAwIDogSlNfR1BOX0VOVU1fT05MWSkpKQogICAgICByZXR1cm4gLTE7CiAgfQoKICBpZihpc19mdW5jdGlvbikgewogICAgSlNWYWx1ZSBuYW1lOwogICAgZGJ1Zl9wdXRzdHIoYnVmLCBvcHRzLT5jb2xvcnMgPyBDT0xPUl9NQVJJTkUgIltGdW5jdGlvbiIgOiAiW0Z1bmN0aW9uIik7CiAgICBuYW1lID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCB2YWx1ZSwgIm5hbWUiKTsKICAgIGlmKCFKU19Jc1VuZGVmaW5lZChuYW1lKSkgewogICAgICBzID0gSlNfVG9DU3RyaW5nKGN0eCwgbmFtZSk7CiAgICAgIGlmKCpzKSB7CiAgICAgICAgZGJ1Zl9wdXRzdHIoYnVmLCAiOiAiKTsKICAgICAgICBkYnVmX3B1dHN0cihidWYsIHMpOwogICAgICB9CiAgICAgIGpzX2NzdHJpbmdfZnJlZShjdHgsIHMpOwogICAgfQogICAgSlNfRnJlZVZhbHVlKGN0eCwgbmFtZSk7CiAgICBkYnVmX3B1dHN0cihidWYsIG9wdHMtPmNvbG9ycyA/ICJdIiBDT0xPUl9OT05FIDogIl0iKTsKICAgIC8qICBpZih2ZWN0b3Jfc2l6ZSgmcHJvcGVudW1fdGFiLCBzaXplb2YoSlNQcm9wZXJ0eURlc2NyaXB0b3IpKSAmJiBkZXB0aCA+PSAwKQogICAgICAgIGRidWZfcHV0YyhidWYsICcgJyk7CiAgICAgIGVsc2UqLwogICAgZ290byBlbmRfb2JqOwogIH0KICBpZihkZXB0aCA8IDApIHsKICAgIGRidWZfcHV0X2NvbG9yc3RyKGJ1ZiwgaXNfYXJyYXkgPyAiW0FycmF5XSIgOiAiW09iamVjdF0iLCBDT0xPUl9NQVJJTkUsIG9wdHMtPmNvbG9ycyk7CiAgICBnb3RvIGVuZF9vYmo7CiAgfQoKICBqc19vYmplY3RfdG1wbWFya19zZXQodmFsdWUpOwoKICBpZihpc19hcnJheV9saWtlKSB7CiAgICBsZW4gPSBqc19hcnJheV9sZW5ndGgoY3R4LCB2YWx1ZSk7CiAgICBkYnVmX3B1dHN0cihidWYsIGNvbXBhY3QgJiYgb3B0cy0+YnJlYWtfbGVuZ3RoICE9IElOVDMyX01BWCA/ICJbICIgOiAiWyIpOwogICAgbGltaXQgPSBtaW5fc2l6ZShvcHRzLT5tYXhfYXJyYXlfbGVuZ3RoLCBsZW4pOwogICAgaWYobGVuICYmICFjb21wYWN0ICYmIG9wdHMtPmJyZWFrX2xlbmd0aCAhPSBJTlQzMl9NQVgpCiAgICAgIGluc3BlY3RfbmV3bGluZShidWYsIElOU1BFQ1RfTEVWRUwob3B0cywgZGVwdGgpICsgMSk7CiAgICBmb3IocG9zID0gMDsgcG9zIDwgbGVuOyBwb3MrKykgewogICAgICBKU1Byb3BlcnR5RGVzY3JpcHRvciBkZXNjOwogICAgICBKU0F0b20gcHJvcDsKICAgICAgaWYocG9zID09IGxpbWl0KQogICAgICAgIGJyZWFrOwogICAgICBpZihwb3MgPiAwKSB7CiAgICAgICAgZGJ1Zl9wdXRzdHIoYnVmLCAiLCIpOwogICAgICAgIC8vIGRidWZfcHV0c3RyKGJ1ZiwgY29tcGFjdCA/ICIsICIgOiAiLCIpOwogICAgICAgIGlmKCFjb21wYWN0ICYmIG9wdHMtPmJyZWFrX2xlbmd0aCAhPSBJTlQzMl9NQVgpCiAgICAgICAgICBpbnNwZWN0X25ld2xpbmUoYnVmLCBJTlNQRUNUX0xFVkVMKG9wdHMsIGRlcHRoKSArIDEpOwogICAgICAgIGVsc2UKICAgICAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgIiAiKTsKICAgICAgfQogICAgICBwcm9wID0gSlNfTmV3QXRvbVVJbnQzMihjdHgsIHBvcyk7CiAgICAgIG1lbXNldCgmZGVzYywgMCwgc2l6ZW9mKGRlc2MpKTsKICAgICAgZGVzYy52YWx1ZSA9IEpTX1VOREVGSU5FRDsKICAgICAgSlNfR2V0T3duUHJvcGVydHkoY3R4LCAmZGVzYywgdmFsdWUsIHByb3ApOwogICAgICBKU19GcmVlQXRvbShjdHgsIHByb3ApOwoKICAgICAgaWYoKGRlc2MuZmxhZ3MgJiBKU19QUk9QX0dFVFNFVCkgJiYgb3B0cy0+Z2V0dGVycykgewogICAgICAgIGludCBpZHggPSAoSlNfSXNVbmRlZmluZWQoZGVzYy5nZXR0ZXIpID8gMCA6IDEpIHwgKEpTX0lzVW5kZWZpbmVkKGRlc2Muc2V0dGVyKSA/IDAgOiAyKTsKICAgICAgICBzdGF0aWMgY29uc3QgY2hhciogY29uc3Qgc3Ryc1s0XSA9IHswLCAiW0dldHRlcl0iLCAiW1NldHRlcl0iLCAiW0dldHRlci9TZXR0ZXJdIn07CiAgICAgICAgaWYoaWR4KQogICAgICAgICAgZGJ1Zl9wdXRfY29sb3JzdHIoYnVmLCBzdHJzW2lkeF0sIENPTE9SX01BUklORSwgb3B0cy0+Y29sb3JzKTsKCiAgICAgIH0gZWxzZSBpZihKU19IYXNQcm9wZXJ0eShjdHgsIHZhbHVlLCBKU19BVE9NX1RBR19JTlQgfCBwb3MpKSB7CiAgICAgICAgLyogIGlmKGNvbXBhY3QgfHwgb3B0cy0+YnJlYWtfbGVuZ3RoID09IElOVDMyX01BWCkKICAgICAgICAgICAgZGJ1Zl9wdXRjKGJ1ZiwgJyAnKTsqLwogICAgICAgIGpzX2luc3BlY3RfcHJpbnRfdmFsdWUoY3R4LCBidWYsIGRlc2MudmFsdWUsIG9wdHMsIGRlcHRoIC0gMSk7CiAgICAgIH0KICAgICAganNfcHJvcGVydHlkZXNjcmlwdG9yX2ZyZWUoY3R4LCAmZGVzYyk7CiAgICB9CiAgICBpZihsZW4gJiYgbGltaXQgPCBsZW4pIHsKICAgICAgaWYoIWNvbXBhY3QgJiYgb3B0cy0+YnJlYWtfbGVuZ3RoICE9IElOVDMyX01BWCkKICAgICAgICBpbnNwZWN0X25ld2xpbmUoYnVmLCBJTlNQRUNUX0xFVkVMKG9wdHMsIGRlcHRoKSArIDEpOwogICAgICBkYnVmX3ByaW50ZihidWYsICIuLi4gJSIgUFJJZDY0ICIgbW9yZSBpdGVtIiwgbGVuIC0gcG9zKTsKICAgICAgaWYocG9zICsgMSA8IGxlbikKICAgICAgICBkYnVmX3B1dGMoYnVmLCAncycpOwogICAgfQogIH0KCiAgaWYoIWlzX2FycmF5X2xpa2UpIHsKICAgIGRidWZfcHV0c3RyKGJ1ZiwgKGNvbXBhY3QgJiYgdmVjdG9yX3NpemUoJnByb3BlbnVtX3RhYiwgc2l6ZW9mKEpTUHJvcGVydHlFbnVtKSkpID8gInsgIiA6ICJ7Iik7CiAgICBsZW4gPSAwOwogIH0KCiAgZm9yKHBvcyA9IDA7IHBvcyA8IHZlY3Rvcl9zaXplKCZwcm9wZW51bV90YWIsIHNpemVvZihKU1Byb3BlcnR5RW51bSkpOyBwb3MrKykgewogICAgSlNQcm9wZXJ0eURlc2NyaXB0b3IgZGVzYzsKICAgIGNvbnN0IGNoYXIqIG5hbWU7CiAgICBKU1Byb3BlcnR5RW51bSogcHJvcGVudW0gPSAoSlNQcm9wZXJ0eUVudW0qKXZlY3Rvcl9hdCgmcHJvcGVudW1fdGFiLCBzaXplb2YoSlNQcm9wZXJ0eUVudW0pLCBwb3MpOwogICAgSlNWYWx1ZSBrZXkgPSBqc19hdG9tX3RvdmFsdWUoY3R4LCBwcm9wZW51bS0+YXRvbSk7CiAgICBuYW1lID0gSlNfQXRvbVRvQ1N0cmluZyhjdHgsIHByb3BlbnVtLT5hdG9tKTsKICAgIGlmKCghSlNfSXNTeW1ib2woa2V5KSAmJiAoKGlzX2FycmF5X2xpa2UpICYmIGlzX2ludGVnZXIobmFtZSkpKSB8fCBpbnNwZWN0X29wdGlvbnNfaGlkZGVuKG9wdHMsIHByb3BlbnVtLT5hdG9tKSkgewogICAgICBKU19GcmVlVmFsdWUoY3R4LCBrZXkpOwogICAgICBqc19jc3RyaW5nX2ZyZWUoY3R4LCBuYW1lKTsKICAgICAgY29udGludWU7CiAgICB9CiAgICBpZihwb3MgPiAwKSB7CiAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgLypjb21wYWN0ID8gIiwgIiA6ICovICIsIik7CgogICAgICBpZighY29tcGFjdCAmJiBvcHRzLT5icmVha19sZW5ndGggIT0gSU5UMzJfTUFYKQogICAgICAgIGluc3BlY3RfbmV3bGluZShidWYsIElOU1BFQ1RfTEVWRUwob3B0cywgZGVwdGgpICsgMSk7CiAgICAgIGVsc2UKICAgICAgICBkYnVmX3B1dHN0cihidWYsICIgIik7CiAgICB9IGVsc2UgewogICAgICBpZighY29tcGFjdCAmJiBvcHRzLT5icmVha19sZW5ndGggIT0gSU5UMzJfTUFYKQogICAgICAgIGluc3BlY3RfbmV3bGluZShidWYsIElOU1BFQ1RfTEVWRUwob3B0cywgZGVwdGgpICsgMSk7CgogICAgfQoKICAgIGlmKCFKU19Jc1N5bWJvbChrZXkpICYmIChpc19pZGVudGlmaWVyKG5hbWUpIHx8IGlzX2ludGVnZXIobmFtZSkpKSB7CiAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgbmFtZSk7CiAgICB9IGVsc2UgewogICAgICBpZighSlNfSXNTdHJpbmcoa2V5KSkKICAgICAgICBkYnVmX3B1dGMoYnVmLCAnWycpOwogICAgICBqc19pbnNwZWN0X3ByaW50X3ZhbHVlKGN0eCwgYnVmLCBrZXksIG9wdHMsIGRlcHRoIC0gMSk7CiAgICAgIGlmKCFKU19Jc1N0cmluZyhrZXkpKQogICAgICAgIGRidWZfcHV0YyhidWYsICddJyk7CiAgICB9CiAgICBkYnVmX3B1dHN0cihidWYsICI6ICIpOwogICAganNfY3N0cmluZ19mcmVlKGN0eCwgbmFtZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBrZXkpOwoKICAgIGlmKGpzX2dldF9wcm9wZXJ0eWRlc2NyaXB0b3IoY3R4LCAmZGVzYywgdmFsdWUsIHByb3BlbnVtLT5hdG9tKSA9PSBUUlVFKSB7CiAgICAgIGlmKChkZXNjLmZsYWdzICYgSlNfUFJPUF9HRVRTRVQpKSB7CiAgICAgICAgaWYoIW9wdHMtPmdldHRlcnMpIHsKICAgICAgICAgIC8vIEpTVmFsdWUgdiA9IEpTX0dldFByb3BlcnR5KGN0eCwgdmFsdWUsIHByb3BlbnVtLT5hdG9tKTsKICAgICAgICAgIEpTVmFsdWUgdiA9IEpTX0NhbGwoY3R4LCBkZXNjLmdldHRlciwgdmFsdWUsIDAsIDApOwogICAgICAgICAganNfaW5zcGVjdF9wcmludF92YWx1ZShjdHgsIGJ1Ziwgdiwgb3B0cywgZGVwdGggLSAyKTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHYpOwogICAgICAgIH0gZWxzZQogICAgICAgICAgZGJ1Zl9wdXRfY29sb3JzdHIoYnVmLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfSXNVbmRlZmluZWQoZGVzYy5nZXR0ZXIpICAgPyAiW1NldHRlcl0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IEpTX0lzVW5kZWZpbmVkKGRlc2Muc2V0dGVyKSA/ICJbR2V0dGVyXSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogIltHZXR0ZXIvU2V0dGVyXSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDT0xPUl9NQVJJTkUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRzLT5jb2xvcnMpOwogICAgICB9IGVsc2UgewoKICAgICAgICBpZihKU19Jc09iamVjdChkZXNjLnZhbHVlKSAmJiBqc19vYmplY3RfdG1wbWFya19pc3NldChkZXNjLnZhbHVlKSkKICAgICAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgIlx4MWJbMDszMW1bQ2lyY3VsYXIgUmVmZXJlbmNlXVx4MWJbMG0iKTsKICAgICAgICBlbHNlCiAgICAgICAgICBqc19pbnNwZWN0X3ByaW50X3ZhbHVlKGN0eCwgYnVmLCBkZXNjLnZhbHVlLCBvcHRzLCBkZXB0aCAtIDIpOwogICAgICB9CiAgICB9CiAgICBqc19wcm9wZXJ0eWRlc2NyaXB0b3JfZnJlZShjdHgsICZkZXNjKTsKICAgIGxlbisrOwogIH0KICBqc19vYmplY3RfdG1wbWFya19jbGVhcih2YWx1ZSk7CgogIGlmKCFjb21wYWN0ICYmIGxlbiAmJiBvcHRzLT5icmVha19sZW5ndGggIT0gSU5UMzJfTUFYKQogICAgaW5zcGVjdF9uZXdsaW5lKGJ1ZiwgSU5TUEVDVF9MRVZFTChvcHRzLCBkZXB0aCkpOwogIGRidWZfcHV0c3RyKGJ1ZiwgKGlzX2FycmF5X2xpa2UpID8gKChjb21wYWN0IHx8IG9wdHMtPmJyZWFrX2xlbmd0aCA9PSBJTlQzMl9NQVgpICYmIGxlbiA/ICIgXSIgOiAiXSIpIDogKGNvbXBhY3QgJiYgbGVuID8gIiB9IiA6ICJ9IikpOwoKZW5kX29iajoKICBpZighdmVjdG9yX2VtcHR5KCZwcm9wZW51bV90YWIpKQogICAganNfcHJvcGVydHllbnVtc19mcmVlKGN0eCwgdmVjdG9yX2JlZ2luKCZwcm9wZW51bV90YWIpLCB2ZWN0b3Jfc2l6ZSgmcHJvcGVudW1fdGFiLCBzaXplb2YoSlNQcm9wZXJ0eUVudW0pKSk7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW50CmpzX2luc3BlY3RfcHJpbnRfdmFsdWUoSlNDb250ZXh0KiBjdHgsIER5bkJ1ZiogYnVmLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGluc3BlY3Rfb3B0aW9uc190KiBvcHRzLCBpbnQzMl90IGRlcHRoKSB7CiAgaW50IHRhZyA9IEpTX1ZBTFVFX0dFVF9UQUcodmFsdWUpOwogIHN3aXRjaCh0YWcpIHsKICAgIGNhc2UgSlNfVEFHX0ZMT0FUNjQ6CiAgICBjYXNlIEpTX1RBR19CSUdfREVDSU1BTDoKICAgIGNhc2UgSlNfVEFHX0JJR19JTlQ6CiAgICBjYXNlIEpTX1RBR19JTlQ6CiAgICBjYXNlIEpTX1RBR19CSUdfRkxPQVQ6IHsKICAgICAgcmV0dXJuIGpzX2luc3BlY3RfcHJpbnRfbnVtYmVyKGN0eCwgYnVmLCB2YWx1ZSwgb3B0cywgZGVwdGgpOwogICAgfQoKICAgIGNhc2UgSlNfVEFHX0JPT0w6IHsKICAgICAgaWYob3B0cy0+Y29sb3JzKQogICAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgQ09MT1JfQlJPV04pOwogICAgICBkYnVmX3B1dHN0cihidWYsIEpTX1ZBTFVFX0dFVF9CT09MKHZhbHVlKSA/ICJ0cnVlIiA6ICJmYWxzZSIpOwogICAgICBpZihvcHRzLT5jb2xvcnMpCiAgICAgICAgZGJ1Zl9wdXRzdHIoYnVmLCBDT0xPUl9OT05FKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBKU19UQUdfTlVMTDogewogICAgICBkYnVmX3B1dHN0cihidWYsIG9wdHMtPmNvbG9ycyA/ICJceDFiWzM4OzU7MTI5bW51bGxceDFiW20iIDogIm51bGwiKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBKU19UQUdfVU5ERUZJTkVEOiB7CiAgICAgIGRidWZfcHV0X2NvbG9yc3RyKGJ1ZiwgInVuZGVmaW5lZCIsIENPTE9SX0dSQVksIG9wdHMtPmNvbG9ycyk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgSlNfVEFHX0VYQ0VQVElPTjogewogICAgICBjb25zdCBjaGFyKiBtc2c7CiAgICAgIEpTVmFsdWUgbWVzc2FnZTsKICAgICAgZGJ1Zl9wdXRfY29sb3JzdHIoYnVmLCAiW2V4Y2VwdGlvbiIsIENPTE9SX1JFRCwgb3B0cy0+Y29sb3JzKTsKCiAgICAgIGlmKEpTX0lzT2JqZWN0KGN0eC0+cnQtPmN1cnJlbnRfZXhjZXB0aW9uKSkgewogICAgICAgIG1lc3NhZ2UgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGN0eC0+cnQtPmN1cnJlbnRfZXhjZXB0aW9uLCAibWVzc2FnZSIpOwogICAgICAgIGlmKChtc2cgPSBKU19Ub0NTdHJpbmcoY3R4LCBtZXNzYWdlKSkpIHsKICAgICAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgIiBcIiIpOwogICAgICAgICAgZGJ1Zl9wdXRzdHIoYnVmLCBtc2cpOwogICAgICAgICAgZGJ1Zl9wdXRjKGJ1ZiwgJyInKTsKICAgICAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbXNnKTsKICAgICAgICB9CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgbWVzc2FnZSk7CiAgICAgIH0KICAgICAgZGJ1Zl9wdXRfY29sb3JzdHIoYnVmLCAiXSIsIENPTE9SX1JFRCwgb3B0cy0+Y29sb3JzKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBKU19UQUdfU1lNQk9MOiB7CiAgICAgIHZhbHVlID0ganNfc3ltYm9sX3RvX3N0cmluZyhjdHgsIHZhbHVlKTsKICAgICAgaWYob3B0cy0+Y29sb3JzKQogICAgICAgIGRidWZfcHV0c3RyKGJ1ZiwgQ09MT1JfR1JFRU4pOwogICAgICBkYnVmX3B1dHN0cihidWYsICJTeW1ib2wiKTsKICAgICAgX19hdHRyaWJ1dGVfXygoZmFsbHRocm91Z2gpKTsKICAgIH0KCiAgICBjYXNlIEpTX1RBR19TVFJJTkc6IHsKICAgICAgcmV0dXJuIGpzX2luc3BlY3RfcHJpbnRfc3RyaW5nKGN0eCwgYnVmLCB2YWx1ZSwgb3B0cywgZGVwdGgpOwogICAgfQoKICAgIGNhc2UgSlNfVEFHX09CSkVDVDogewogICAgICBpZihKU19Jc0Vycm9yKGN0eCwgdmFsdWUpKQogICAgICAgIHJldHVybiBqc19pbnNwZWN0X3ByaW50X2Vycm9yKGN0eCwgYnVmLCB2YWx1ZSwgb3B0cywgZGVwdGgpOwoKICAgICAgcmV0dXJuIGpzX2luc3BlY3RfcHJpbnRfb2JqZWN0KGN0eCwgYnVmLCB2YWx1ZSwgb3B0cywgZGVwdGgpOwogICAgfQoKICAgIGNhc2UgSlNfVEFHX0ZVTkNUSU9OX0JZVEVDT0RFOiB7CiAgICAgIGRidWZfcHV0c3RyKGJ1Ziwgb3B0cy0+Y29sb3JzID8gQ09MT1JfTElHSFRSRUQgIltieXRlY29kZV0iIENPTE9SX05PTkUgOiAiW2J5dGVjb2RlXSIpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIEpTX1RBR19NT0RVTEU6IHsKICAgICAgSlNNb2R1bGVEZWYqIGRlZiA9IEpTX1ZBTFVFX0dFVF9QVFIodmFsdWUpOwogICAgICBjb25zdCBjaGFyKiBuYW1lID0gSlNfQXRvbVRvQ1N0cmluZyhjdHgsIGRlZi0+bW9kdWxlX25hbWUpOwoKICAgICAgZGJ1Zl9wcmludGYoYnVmLCBvcHRzLT5jb2xvcnMgPyBDT0xPUl9MSUdIVFJFRCAiW21vZHVsZSAnJXMnXSIgQ09MT1JfTk9ORSA6ICJbbW9kdWxlICclcyddIiwgbmFtZSk7CiAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbmFtZSk7CiAgICAgIC8vICBqc19pbnNwZWN0X3ByaW50X21vZHVsZShjdHgsIGJ1ZiwgSlNfVkFMVUVfR0VUX1BUUih2YWx1ZSksIG9wdHMsIGRlcHRoIC0gMSk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiVW5oYW5kbGVkIHZhbHVlIHRhZyBpbiBqc19pbnNwZWN0X3ByaW50X3ZhbHVlOiAlZFxuIiwgdGFnKTsKICAgICAgcmV0dXJuIC0xOwogICAgfQogIH0KICByZXR1cm4gMDsKfQoKc3RhdGljIEpTVmFsdWUKanNfaW5zcGVjdChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIER5bkJ1ZiBkYnVmOwogIGluc3BlY3Rfb3B0aW9uc190IG9wdGlvbnM7CiAgaW50MzJfdCBsZXZlbDsKICBpbnQgb3B0aW5kID0gMTsKICBKU1ZhbHVlIHJldDsKCiAganNfZGJ1Zl9pbml0KGN0eCwgJmRidWYpOwogIGluc3BlY3Rfb3B0aW9uc19pbml0KCZvcHRpb25zLCBjdHgpOwoKICBpZihhcmdjID4gMSAmJiBKU19Jc051bWJlcihhcmd2WzFdKSkKICAgIG9wdGluZCsrOwoKICBpZihvcHRpbmQgPCBhcmdjKQogICAgaW5zcGVjdF9vcHRpb25zX2dldCgmb3B0aW9ucywgY3R4LCBhcmd2W29wdGluZF0pOwoKICBpZihvcHRpbmQgPiAxKSB7CiAgICBkb3VibGUgZDsKICAgIEpTX1RvRmxvYXQ2NChjdHgsICZkLCBhcmd2WzFdKTsKICAgIGxldmVsID0gaXNpbmYoZCkgPyBJTlQzMl9NQVggOiBkOwogIH0gZWxzZSB7CiAgICBsZXZlbCA9IDA7CiAgfQoKICAvKnByaW50ZigianNfaW5zcGVjdCBicmVha19sZW5ndGg6ICVkLCBtYXhfYXJyYXlfbGVuZ3RoOiAlZCwKICAgICBtYXhfc3RyaW5nX2xlbmd0aDogJWRcbiIsIG9wdGlvbnMuYnJlYWtfbGVuZ3RoLCBvcHRpb25zLm1heF9hcnJheV9sZW5ndGgsCiAgICAgb3B0aW9ucy5tYXhfc3RyaW5nX2xlbmd0aCk7Ki8KCiAganNfaW5zcGVjdF9wcmludF92YWx1ZShjdHgsICZkYnVmLCBhcmd2WzBdLCAmb3B0aW9ucywgb3B0aW9ucy5kZXB0aCAtIGxldmVsKTsKCiAgcmV0ID0gSlNfTmV3U3RyaW5nTGVuKGN0eCwgKGNvbnN0IGNoYXIqKWRidWYuYnVmLCBkYnVmLnNpemUpOwoKICBkYnVmX2ZyZWUoJmRidWYpOwoKICBpbnNwZWN0X29wdGlvbnNfZnJlZSgmb3B0aW9ucywgY3R4KTsKCiAgcmV0dXJuIHJldDsKfQoKY2hhcioKanNfaW5zcGVjdF90b3N0cmluZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgRHluQnVmIGRidWY7CiAgaW5zcGVjdF9vcHRpb25zX3Qgb3B0aW9uczsKICBqc19kYnVmX2luaXQoY3R4LCAmZGJ1Zik7CiAgaW5zcGVjdF9vcHRpb25zX2luaXQoJm9wdGlvbnMsIGN0eCk7CgogIG9wdGlvbnMuY29sb3JzID0gRkFMU0U7CiAgb3B0aW9ucy5jb21wYWN0ID0gMDsKICBvcHRpb25zLmdldHRlcnMgPSBUUlVFOwogIGpzX2luc3BlY3RfcHJpbnRfdmFsdWUoY3R4LCAmZGJ1ZiwgdmFsdWUsICZvcHRpb25zLCBvcHRpb25zLmRlcHRoKTsKCiAgaW5zcGVjdF9vcHRpb25zX2ZyZWUoJm9wdGlvbnMsIGN0eCk7CgogIGRidWZfMCgmZGJ1Zik7CiAgcmV0dXJuIChjaGFyKilkYnVmLmJ1ZjsKfQoKY2hhcioKanNfaW5zcGVjdF9hdG9tKEpTQ29udGV4dCogY3R4LCBKU0F0b20gYXRvbSkgewogIEpTVmFsdWUgdmFsdWU7CiAgY2hhciogc3RyOwogIHZhbHVlID0gSlNfQXRvbVRvVmFsdWUoY3R4LCBhdG9tKTsKCiAgc3RyID0ganNfaW5zcGVjdF90b3N0cmluZyhjdHgsIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgcmV0dXJuIHN0cjsKfQoKSlNWYWx1ZSBqc19kZWJ1Z2dlcl9idWlsZF9iYWNrdHJhY2UoSlNDb250ZXh0KiBjdHgsIGNvbnN0IHVpbnQ4X3QqIGN1cl9wYyk7CgpKU1ZhbHVlCmpzX2luc3BlY3Rfc3RhY2t0cmFjZV92YWx1ZShKU0NvbnRleHQqIGN0eCkgewogIEpTUnVudGltZSogcnQgPSBKU19HZXRSdW50aW1lKGN0eCk7CiAgc3RydWN0IEpTU3RhY2tGcmFtZSogZnJhbWU7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgaWYoKGZyYW1lID0gcnQtPmN1cnJlbnRfc3RhY2tfZnJhbWUpKSB7CiNpZmRlZiBDT05GSUdfREVCVUdHRVIKICAgIHJldCA9IGpzX2RlYnVnZ2VyX2J1aWxkX2JhY2t0cmFjZShjdHgsIGZyYW1lLT5jdXJfcGMpOwojZW5kaWYKICB9CiAgcmV0dXJuIHJldDsKfQoKY29uc3QgY2hhcioKanNfaW5zcGVjdF9zdGFja3RyYWNlKEpTQ29udGV4dCogY3R4KSB7CiAgSlNWYWx1ZSBzdGFjayA9IGpzX2luc3BlY3Rfc3RhY2t0cmFjZV92YWx1ZShjdHgpOwogIHJldHVybiBqc19pbnNwZWN0X3Rvc3RyaW5nKGN0eCwgc3RhY2spOwp9CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfaW5zcGVjdF9mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfREVGKCJpbnNwZWN0IiwgMSwganNfaW5zcGVjdCksCn07CgpzdGF0aWMgaW50CmpzX2luc3BlY3RfaW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKICBKU1ZhbHVlIGluc3BlY3QsIGluc3BlY3Rfc3ltYm9sLCBzeW1ib2xfY3RvcjsKCiAgLy8gZnVuY3Rpb25fY2xhc3NfaWRfY2VpbCA9IE1BWF9OVU0oSlNfQ0xBU1NfQVNZTkNfR0VORVJBVE9SLCBqc19wcmVkaWNhdGVfY2xhc3NfaWQpOwoKICBzdGRvdXRfaXNhdHR5ID0gaXNhdHR5KFNURE9VVF9GSUxFTk8pOwogIHN0ZGVycl9pc2F0dHkgPSBpc2F0dHkoU1RERVJSX0ZJTEVOTyk7CgogIGluc3BlY3QgPSBKU19OZXdDRnVuY3Rpb24oY3R4LCBqc19pbnNwZWN0LCAiaW5zcGVjdCIsIDIpOwoKICBpbnNwZWN0X3N5bWJvbCA9IGpzX3N5bWJvbF9mb3IoY3R4LCAicXVpY2tqcy5pbnNwZWN0LmN1c3RvbSIpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgaW5zcGVjdCwgInN5bWJvbCIsIEpTX0R1cFZhbHVlKGN0eCwgaW5zcGVjdF9zeW1ib2wpKTsKICBzeW1ib2xfY3RvciA9IGpzX3N5bWJvbF9jdG9yKGN0eCk7CiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBzeW1ib2xfY3RvciwgImluc3BlY3QiLCBKU19EdXBWYWx1ZShjdHgsIGluc3BlY3Rfc3ltYm9sKSk7CgogIEpTX0ZyZWVWYWx1ZShjdHgsIHN5bWJvbF9jdG9yKTsKICBKU19GcmVlVmFsdWUoY3R4LCBpbnNwZWN0X3N5bWJvbCk7CgogIGluc3BlY3RfY3VzdG9tX2F0b20gPSBqc19pbnNwZWN0X2N1c3RvbV9hdG9tKGN0eCwgInF1aWNranMuaW5zcGVjdC5jdXN0b20iKTsKICBpbnNwZWN0X2N1c3RvbV9hdG9tX25vZGUgPSBqc19pbnNwZWN0X2N1c3RvbV9hdG9tKGN0eCwgIm5vZGVqcy51dGlsLmluc3BlY3QuY3VzdG9tIik7CgogIG9iamVjdF90b3N0cmluZyA9IGpzX2dsb2JhbF9wcm90b3R5cGVfZnVuYyhjdHgsICJPYmplY3QiLCAidG9TdHJpbmciKTsKCiAgaWYobSkgewogICAgSlNfU2V0TW9kdWxlRXhwb3J0TGlzdChjdHgsIG0sIGpzX2luc3BlY3RfZnVuY3MsIGNvdW50b2YoanNfaW5zcGVjdF9mdW5jcykpOwogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgImRlZmF1bHQiLCBpbnNwZWN0KTsKICB9CgogIHJldHVybiAwOwp9CgojaWYgZGVmaW5lZChKU19TSEFSRURfTElCUkFSWSkgJiYgZGVmaW5lZChKU19JTlNQRUNUX01PRFVMRSkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX2luc3BlY3QKI2VuZGlmCgpWSVNJQkxFIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCBqc19pbnNwZWN0X2luaXQpOwogIGlmKCFtKQogICAgcmV0dXJuIE5VTEw7CiAgSlNfQWRkTW9kdWxlRXhwb3J0TGlzdChjdHgsIG0sIGpzX2luc3BlY3RfZnVuY3MsIGNvdW50b2YoanNfaW5zcGVjdF9mdW5jcykpOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJkZWZhdWx0Iik7CiAgcmV0dXJuIG07Cn0KCi8qKgogKiBAfQogKi8KAAAAAAAAAACeogAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJ4IAAAAAAAAnggAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-lexer.c",
			"settings":
			{
				"buffer_size": 42687,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "tests/test_streams.js",
			"settings":
			{
				"buffer_size": 1173,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libarchive"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/timers.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/css3-selectors.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_predicate.js",
		"/home/roman/Schreibtisch/Ophtalmologische Gruppen.txt",
		"/home/roman/Schreibtisch/discogs-shipping-policies.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/.config/sublime-text/Packages/JsPrettier/JsPrettier.sublime-settings",
		"/home/roman/.config/sublime-text/Packages/User/JsPrettier.sublime-settings",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/mmap-win32.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_treewalker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_css3_selectors.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/modules.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/c-mcp3301/fast-arduino-lib/cores/fastarduino/devices/mcp3001.h",
		"/home/roman/Projects/c-mcp3301/mcp300x/mcp300x.c",
		"/home/roman/Projects/c-mcp3301/mcp3001/src/mcp3001.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/c-mcp3301/fast-arduino-lib/cores/fastarduino/devices/mcp3x0x.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/deep.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml/write.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tree_walker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml/read.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/predicate.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/require.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tree-walker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_textcode.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml-write.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml-parse.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_css3_selector.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/callgrind.out.142973",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/src/tutf8e.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e/iso_8859_15.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/ecmascript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/csv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/include/libutf.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/src/libutf.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/debug.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stream.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.c"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,-*/inst/*,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"fileno",
			"output",
			"CommaList",
			"CommaList =",
			"Paren",
			"Parent",
			"Paren",
			"TrimWS",
			"line",
			"block.slice",
			"rbrace",
			"output =",
			"output",
			"fileno",
			"\\*\\.js",
			"extract",
			"output\\.",
			"output =",
			"cFuncList",
			"CommaList",
			"Paren",
			"Lexeme",
			"NonWS",
			"\\.lexeme",
			"omment",
			"comment",
			"'line'",
			"'lexer.token'",
			"firstLine",
			"Paren",
			"CommaList",
			"NonWS",
			"consoleWidth",
			"ttyGetWin",
			"PROP_TOKEN",
			"lexer_token",
			"^js_inspect_print_object",
			"^js_inspec",
			"_array\\(",
			"print_array",
			"_DEF",
			"DEF",
			"params",
			"readdirSync",
			"js_function_name",
			"exception",
			");\n",
			"Factory",
			"GetNode",
			"class NodeList",
			"Comment",
			"GetNode",
			"'fac'",
			"NodeFactory",
			"NodeFactory\\.for",
			"NodeFactory",
			"[^a-z]Factory",
			"get children",
			"children",
			"[^a-z]Factory",
			" Factory",
			"Factory\\(",
			"lazyProperties",
			"\\.get\\(",
			"\\.get",
			"gettersetter",
			"apper",
			"new TokenList",
			"NodeMap",
			"Factory",
			"createElement",
			"wrapElement",
			"js_deep_predicate",
			"inspect\\(",
			"js_module_",
			"_EQUAL:",
			"PROPERTY:",
			"js_deep_predicate",
			"^property_enumeration_path",
			"property_enumeration_path",
			"js_deep_predicate",
			"STRING:",
			"predicates;",
			"_PROPERTY:",
			"STRING:",
			"js_arguments_shift\\(",
			"SHIFT:",
			"PREDICATE_SLICE",
			"get path",
			"js_arguments_shift\\(args\\)",
			"js_arguments_shift",
			"PREDICATE_AND",
			"query",
			"applyPath",
			"get path",
			"querySelectorAll",
			"parseSelector",
			"js_socket_new_proto",
			"js_socket_create",
			"js_async_socket_constructor",
			"js_async_socket_proto_funcs",
			"js_socket_async_wait",
			"_data",
			"set_handler",
			"\"setReadHandler",
			"readSync",
			"reduce",
			"callIt",
			"a",
			"callIt",
			"toNumber",
			"Array.isArray",
			"getRows",
			"rows",
			"Iterator",
			"getRows",
			"rows",
			"getterSet",
			"\\.value",
			"\\.get",
			"\\.strip",
			"getText =",
			"getPriceText",
			"getPrice",
			", input",
			"getElementFn",
			"element",
			"e"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"isCFuncList",
			"",
			"js_arguments_at\\(args, 1\\)",
			"js_arguments_at\\(args, 0\\)",
			"js_arguments_at\\(args, 1\\)",
			"js_arguments_at\\(args, 0\\)",
			"js_arguments_at\\(args, i\\)",
			"getSelectPos",
			"getSelectText",
			"g.",
			"globalThis.\\1 = ",
			"  ",
			"ret = \\1\\nbreak;",
			"ret = \\1",
			"ret = \\1\\nbreak;",
			"->filter",
			"\\1//console",
			"}\\n\\n\\1",
			"writeXML",
			"readXML",
			"fs.readFileSync",
			"process.release.name == 'quickjs' ? requireModule",
			"process.release.name == 'quickjs' ? requireModule(",
			"typeof \\1 == 'function'",
			"typeof(\\1) == 'function'",
			"inspect",
			"writeXML",
			"readXML",
			"(typeof \\1 == 'object' && \\1 != null)",
			"typeof \\1 == 'function'",
			"is\\1",
			"return TYPE_\\1",
			";\\\\n\" \"",
			"timers.",
			"",
			"\\1\\2(",
			"\\1function \\2(",
			"\\1//console.",
			"createModule",
			"static \\1\\2 {",
			"static ",
			"pnws",
			"sel = \\1;",
			"js_is_array",
			"if(debug_module_loader >= 2)",
			"INSPECT_LEVEL(opts, depth)",
			"BOOL compact =",
			"INSPECT_IS_COMPACT\\(opts, depth\\)",
			"path_skip_component(\\1, \\2, 0);",
			"-18s",
			"%-\\1s",
			"__FUNCTION__",
			".value",
			"->value",
			"\\1//printf",
			"stream",
			"_ENDIANNESS",
			"_ENDIAN",
			"be'",
			"le'",
			"'utf-",
			"-BE'",
			"'UTF-",
			"endian",
			"->endian == BIG",
			"transform_terminate",
			"transform_",
			"\\1",
			"type",
			"js_misc_duparraybuffer",
			"out.puts",
			"putline",
			"\\1: \\2,",
			"",
			"{ return",
			"\\\\\"",
			"\\1if(debug_module_loader) \\2",
			"",
			"BuiltinModule",
			"Text.store",
			"Tokens",
			"tokenModifiers",
			"xml_debug",
			"\\1",
			"xml_debug",
			"WRITABLE_GET_WRITER",
			"WRITABLE_CLOSE",
			"struct stream_reader",
			"readable_cancel",
			"READABLE_CANCEL",
			"readable_unlock",
			"writable_get_writer",
			"writable_\\1lock",
			"READABLE_",
			"writ",
			"FUNC_CLOSE",
			"js_reader_method",
			"js_writer_method",
			"js_stream_method",
			"STREAM_LOCKED",
			"->reader",
			"\"StreamReader",
			"Reader",
			"METHOD_",
			"array",
			"funcs.array",
			"js_resolve_functions",
			"js_resolvefunctions",
			"funcs[1]",
			"funcs[0]",
			"js_resolvingfunctions_free",
			"js_resolvingfunctions_ree",
			"length",
			"Chunk",
			"loc",
			"prevLength",
			"prevOffset",
			"compact(\\1)",
			"js_location_create",
			"lexer_token(",
			"token_lex(",
			"LOCATION_PROP_CHAROFFSET",
			"loc->",
			"\\1_release",
			"token",
			"ALLOC_PTR",
			"ALLOC_BLOCK(p)",
			"ALLOC_BLOCK_SIZE"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"color_scheme": "Packages/Outline/outline-Dark.hidden-tmTheme",
							"current_file": null,
							"function_name_status_row": 0,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649634603.54,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/repl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52549,
						"regions":
						{
						},
						"selection":
						[
							[
								41346,
								41346
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1544,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649626269.15,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 30345.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/streams.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2704,
						"regions":
						{
						},
						"selection":
						[
							[
								1193,
								1237
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 41,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649625963.49,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "extract-structs.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8136,
						"regions":
						{
						},
						"selection":
						[
							[
								7897,
								7897
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 255,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649641766.05,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3518.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22757,
						"regions":
						{
						},
						"selection":
						[
							[
								22687,
								22694
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 686,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649636430.09,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 13178.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "cmake/functions.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3938,
						"regions":
						{
						},
						"selection":
						[
							[
								3770,
								3775
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 125,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649630760.34,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1998.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "lib/lexer/c.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2727,
						"regions":
						{
						},
						"selection":
						[
							[
								155,
								172
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 5,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649629300.3,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "resolve-imports.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 46911,
						"regions":
						{
						},
						"selection":
						[
							[
								24298,
								24427
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 773,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649627777.67,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 15145.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/console.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4186,
						"regions":
						{
						},
						"selection":
						[
							[
								379,
								379
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 13,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649636734.75,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "quickjs-blob.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8449,
						"regions":
						{
						},
						"selection":
						[
							[
								7740,
								7740
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 306,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649636179.06,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5516.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "quickjs-inspect.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41630,
						"regions":
						{
						},
						"selection":
						[
							[
								33319,
								33319
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1030,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649627101.1,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 19800.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "quickjs-lexer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42687,
						"regions":
						{
						},
						"selection":
						[
							[
								38670,
								38680
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1416,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649627185.05,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 27905.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "tests/test_streams.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1173,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649625962.61,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.792447636134,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139621680902448)":
	{
		"height": 0.0
	},
	"output.Protocol(139700989780224)":
	{
		"height": 0.0
	},
	"output.Protocol(139713493134064)":
	{
		"height": 0.0
	},
	"output.Protocol(139717986633232)":
	{
		"height": 0.0
	},
	"output.Protocol(139737089962816)":
	{
		"height": 0.0
	},
	"output.Protocol(139742375937312)":
	{
		"height": 0.0
	},
	"output.Protocol(139743392563408)":
	{
		"height": 0.0
	},
	"output.Protocol(139869175351088)":
	{
		"height": 0.0
	},
	"output.Protocol(140020109919472)":
	{
		"height": 0.0
	},
	"output.Protocol(140057995247920)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752673856)":
	{
		"height": 0.0
	},
	"output.Protocol(140156677514432)":
	{
		"height": 0.0
	},
	"output.Protocol(140172266688720)":
	{
		"height": 0.0
	},
	"output.Protocol(140190208797904)":
	{
		"height": 0.0
	},
	"output.Protocol(140274144834032)":
	{
		"height": 0.0
	},
	"output.Protocol(140329701419328)":
	{
		"height": 0.0
	},
	"output.Protocol(140434608857040)":
	{
		"height": 0.0
	},
	"output.Protocol(140444770579072)":
	{
		"height": 0.0
	},
	"output.Protocol(140481508459424)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873537696)":
	{
		"height": 0.0
	},
	"output.Protocol(140517145188336)":
	{
		"height": 0.0
	},
	"output.Protocol(140557325510688)":
	{
		"height": 0.0
	},
	"output.Protocol(140569677099648)":
	{
		"height": 0.0
	},
	"output.Protocol(140571426803920)":
	{
		"height": 0.0
	},
	"output.Protocol(140585353818944)":
	{
		"height": 0.0
	},
	"output.Protocol(140589364043584)":
	{
		"height": 0.0
	},
	"output.Protocol(140603239164464)":
	{
		"height": 0.0
	},
	"output.Protocol(140614610715648)":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"quickjs-bl",
				"quickjs-blob.c"
			],
			[
				"console.js",
				"lib/console.js"
			],
			[
				"c.js",
				"lib/lexer/c.js"
			],
			[
				"console.j",
				"lib/console.js"
			],
			[
				"inspect",
				"quickjs-inspect.c"
			],
			[
				"quickjs-le",
				"quickjs-lexer.c"
			],
			[
				"deep.c",
				"quickjs-deep.c"
			],
			[
				"prop",
				"src/property-enumeration.c"
			],
			[
				"proper",
				"include/property-enumeration.h"
			],
			[
				"test_dom",
				"tests/test_dom.js"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"predicate.h",
				"include/predicate.h"
			],
			[
				"predicate.c",
				"src/predicate.c"
			],
			[
				"quickjs-pred",
				"quickjs-predicate.c"
			],
			[
				"test_pred",
				"tests/test_predicate.js"
			],
			[
				"utils.h",
				"include/utils.h"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"char-u",
				"include/char-utils.h"
			],
			[
				"vector.h",
				"include/vector.h"
			],
			[
				"path.h",
				"include/path.h"
			],
			[
				"vecto",
				"src/vector.c"
			],
			[
				"events",
				"lib/events.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"extract",
				"extract-structs.js"
			],
			[
				"test_lexe",
				"tests/test_lexer.js"
			],
			[
				"test_css",
				"tests/test_css3_selectors.js"
			],
			[
				"events.j",
				"lib/events.js"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			],
			[
				"qjsm",
				"src/qjsm.c"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"resolve-import",
				"resolve-imports.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"require.js",
				"lib/require.js"
			],
			[
				"test_do",
				"tests/test_dom.js"
			],
			[
				"css3-se",
				"lib/css3-selectors.js"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"console.",
				"lib/console.js"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_dom.js",
				"tests/test_dom.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"write.js",
				"lib/xml/write.js"
			],
			[
				"css-",
				"lib/css3-selectors.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"resolve-impo",
				"resolve-imports.js"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"location.h",
				"include/location.h"
			],
			[
				"l",
				"quickjs-lexer.c"
			],
			[
				"path.c",
				"src/path.c"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"repl.j",
				"lib/repl.js"
			],
			[
				"js-u",
				"src/js-utils.c"
			],
			[
				"js-ut",
				"include/js-utils.h"
			],
			[
				"streams.js",
				"tests/test_streams.js"
			],
			[
				"buffer",
				"src/buffer-utils.c"
			],
			[
				"test_te",
				"tests/test_textcode.js"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"extract-str",
				"extract-structs.js"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"list-exp",
				"list-exports.js"
			],
			[
				"token.c",
				"token.c"
			],
			[
				"jsutil",
				"js-utils.c"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.h"
			],
			[
				"quickjs-location",
				"quickjs-location.h"
			],
			[
				"quickjs-loca",
				"quickjs-location.c"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"char-ut",
				"char-utils.h"
			],
			[
				"buff",
				"buffer-utils.h"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"location",
				"location.c"
			],
			[
				"quickjs-child",
				"quickjs-child-process.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"CMakeLi",
				"CMakeLists.txt"
			],
			[
				"defines.h",
				"defines.h"
			],
			[
				"queue.c",
				"queue.c"
			],
			[
				"extend",
				"lib/extendArray.js"
			],
			[
				"quickjs-sockets",
				"quickjs-sockets.c"
			],
			[
				"lexer",
				"quickjs-lexer.c"
			],
			[
				"buffer-ut",
				"buffer-utils.h"
			],
			[
				"ringbuf",
				"ringbuffer.h"
			],
			[
				"debug.h",
				"debug.h"
			],
			[
				"debug.c",
				"debug.c"
			],
			[
				"quickjs-lexer.c",
				"quickjs-lexer.c"
			],
			[
				"quickjs-loc",
				"quickjs-location.c"
			],
			[
				"xml.c",
				"quickjs-xml.c"
			],
			[
				"test-dia",
				"build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"resol",
				"resolve-imports.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"quickjs-mis",
				"quickjs-misc.c"
			],
			[
				"location.c",
				"quickjs-location.c"
			],
			[
				"extra",
				"extract-structs.js"
			],
			[
				"-inspe",
				"quickjs-inspect.c"
			],
			[
				"vector",
				"vector.h"
			],
			[
				"dom.j",
				"lib/dom.js"
			],
			[
				"res",
				"resolve-imports.js"
			],
			[
				"lexre",
				"lexer.c"
			],
			[
				"lexer.c",
				"quickjs-lexer.c"
			],
			[
				"pointer",
				"pointer.c"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"archive",
				"quickjs-archive.c"
			],
			[
				"pointer.c",
				"quickjs-pointer.c"
			],
			[
				"spect.c",
				"quickjs-inspect.c"
			],
			[
				"blob.c",
				"quickjs-blob.c"
			],
			[
				"repea",
				"quickjs-repeater.c"
			],
			[
				"loca",
				"quickjs-location.c"
			],
			[
				"bjson.c",
				"quickjs-bjson.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"predi",
				"predicate.h"
			],
			[
				"virtua",
				"virtual-properties.c"
			],
			[
				"pointre",
				"pointer.c"
			],
			[
				"child-",
				"child-process.c"
			],
			[
				"child-pro",
				"quickjs-child-process.c"
			],
			[
				"gpio.c",
				"quickjs-gpio.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"ointer.h",
				"pointer.h"
			],
			[
				"defin",
				"defines.h"
			],
			[
				"defines",
				"defines.h"
			],
			[
				"cutils.h",
				"char-utils.h"
			],
			[
				"debu",
				"debug.h"
			],
			[
				"repl",
				"lib/repl.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 244.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
