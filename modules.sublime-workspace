{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"js_sys",
				"js_syscallerror_data"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"JS_New",
				"JS_NewInt32"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Console(opts = {})\nConsole\n\tfunction(...args)\nConsoleOptions\n\taddMissingMethods(cons)\nConsole.prototype.config = config(obj = {})\nConsoleOptions(obj = {})\nConsoleOptions.prototype.merge = function(...args)\nConsoleOptions.merge = function(opts, ...args)\nConsoleSetup(inspectOptions={}, callback )",
			"settings":
			{
				"buffer_size": 295,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					254,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABvDQAACeKTgiAgX0dOVV9TT1VSQ0Ug4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCgnik4kgIHBvbGxoYW5kbGVyX3QgOyDigJQgdHlwZWRlZgoJ4pKhICBqc19zdGRfc2V0X21vZHVsZV9sb2FkZXJfZnVuYyAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNfc3RkX3NldF93b3JrZXJfbmV3X2NvbnRleHRfZnVuYyAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX3N0ZF9kdW1wX2Vycm9yICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTikrvigJMganNtX3RpbWVfbXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21faW50ZXJydXB0X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdW5saW5rX3RpbWVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZyZWVfdGltZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY2FsbF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3NhYl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZyZWVfbWVzc2FnZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9oYW5kbGVfcG9zdGVkX21lc3NhZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9wYWNrYWdlX2pzb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2V4cG9ydHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2ZpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9kdW1wX29iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGRfZHVtcF9lcnJvcjEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RkX2R1bXBfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZmluZF9tb2R1bGVfZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZpbmRfbW9kdWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX25vcm1hbGl6ZV9tb2R1bGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlcl9zbyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbG9hZGVyX3BhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9iaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9idWYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zdHIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9maWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xvYWRfc2NyaXB0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xvYWRfbW9kdWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xpc3RfbW9kdWxlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9jb250ZXh0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIGpzbV9tb2R1bGVfbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCgnik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBNQUxMT0NfT1ZFUkhFQUQg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK44oCTIHRyYWNlX21hbGxvY19kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgZHVtcF92ZWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3B0cl9vZmZzZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3VzYWJsZV9zaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX21hbGxvY19wcmludGYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfcmVhbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KCeKTgiAgUFJPR19OQU1FIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBqc21faGVscCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2V2YWxfc2NyaXB0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					255,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								1755,
								1769
							],
							[
								2007,
								2018
							],
							[
								2133,
								2146
							],
							[
								2233,
								2262
							],
							[
								2379,
								2397
							],
							[
								2424,
								2437
							],
							[
								2499,
								2517
							],
							[
								2918,
								2936
							],
							[
								2947,
								2965
							],
							[
								2975,
								2993
							],
							[
								2999,
								3017
							],
							[
								3031,
								3049
							],
							[
								3060,
								3078
							],
							[
								3086,
								3104
							],
							[
								3115,
								3133
							],
							[
								3140,
								3158
							],
							[
								3188,
								3206
							],
							[
								3257,
								3291
							],
							[
								3334,
								3352
							],
							[
								3579,
								3590
							],
							[
								3729,
								3750
							],
							[
								3836,
								3852
							],
							[
								3986,
								4000
							],
							[
								4095,
								4111
							],
							[
								4506,
								4518
							],
							[
								4771,
								4787
							],
							[
								5051,
								5076
							],
							[
								6703,
								6724
							],
							[
								7025,
								7043
							],
							[
								7500,
								7515
							],
							[
								8062,
								8076
							],
							[
								8405,
								8420
							],
							[
								8964,
								8976
							],
							[
								9208,
								9227
							],
							[
								9586,
								9604
							],
							[
								10029,
								10048
							],
							[
								10845,
								10860
							],
							[
								11298,
								11318
							],
							[
								12449,
								12469
							],
							[
								13642,
								13664
							],
							[
								15926,
								15941
							],
							[
								16478,
								16490
							],
							[
								17212,
								17224
							],
							[
								17473,
								17486
							],
							[
								18070,
								18085
							],
							[
								18481,
								18496
							],
							[
								18822,
								18838
							],
							[
								19181,
								19196
							],
							[
								19487,
								19504
							],
							[
								20001,
								20016
							],
							[
								20033,
								20048
							],
							[
								20066,
								20083
							],
							[
								20119,
								20130
							],
							[
								20473,
								20500
							],
							[
								20661,
								20689
							],
							[
								21285,
								21308
							],
							[
								21996,
								22017
							],
							[
								22094,
								22110
							],
							[
								22543,
								22557
							],
							[
								22781,
								22798
							],
							[
								24095,
								24104
							],
							[
								24118,
								24126
							],
							[
								25227,
								25241
							],
							[
								26456,
								26470
							],
							[
								30303,
								30307
							],
							[
								36070,
								36088
							],
							[
								36705,
								36725
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉatomic_add_int‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉpollhandler‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉpollhandler_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_std_set_module_loader_func‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉmalloc_usable_size‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚ìÇ‚Äì‚ÄÉtrim_dotslash‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_std_set_worker_new_context_func‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_std_dump_error‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjsm_time_ms‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_interrupt_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_unlink_timer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_free_timer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_call_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_sab_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_free_message‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_handle_posted_message‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_package_json‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_exports‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_dump_obj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_std_dump_error1‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_std_dump_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_find_module_ext‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_find_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_normalize_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_loader_so‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_loader_path‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_binary‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_buf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_str‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_script‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_list_modules‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_context_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_module_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMALLOC_OVERHEAD‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMALLOC_OVERHEAD‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉtrace_malloc_data‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉdump_vector‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_ptr_offset‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_usable_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_printf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_realloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉPROG_NAME‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉjsm_help‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_eval_script‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_builtin_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_builtin_compiled‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function"
						]
					},
					"AQAAAAAAAAAAAAAAMQsAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					256,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								1755,
								1769
							],
							[
								2007,
								2018
							],
							[
								2133,
								2146
							],
							[
								2233,
								2262
							],
							[
								2379,
								2397
							],
							[
								2424,
								2437
							],
							[
								2499,
								2517
							],
							[
								2918,
								2936
							],
							[
								2947,
								2965
							],
							[
								2975,
								2993
							],
							[
								2999,
								3017
							],
							[
								3031,
								3049
							],
							[
								3060,
								3078
							],
							[
								3086,
								3104
							],
							[
								3115,
								3133
							],
							[
								3140,
								3158
							],
							[
								3188,
								3206
							],
							[
								3257,
								3291
							],
							[
								3334,
								3352
							],
							[
								3579,
								3590
							],
							[
								3729,
								3750
							],
							[
								3836,
								3852
							],
							[
								3986,
								4000
							],
							[
								4095,
								4111
							],
							[
								4506,
								4518
							],
							[
								4771,
								4787
							],
							[
								5051,
								5076
							],
							[
								6703,
								6724
							],
							[
								7025,
								7043
							],
							[
								7500,
								7515
							],
							[
								8062,
								8076
							],
							[
								8405,
								8420
							],
							[
								8964,
								8976
							],
							[
								9208,
								9227
							],
							[
								9586,
								9604
							],
							[
								10029,
								10048
							],
							[
								10845,
								10860
							],
							[
								11298,
								11318
							],
							[
								12449,
								12469
							],
							[
								13642,
								13664
							],
							[
								15950,
								15965
							],
							[
								16502,
								16514
							],
							[
								17236,
								17248
							],
							[
								17497,
								17510
							],
							[
								18094,
								18109
							],
							[
								18505,
								18520
							],
							[
								18846,
								18862
							],
							[
								19205,
								19220
							],
							[
								19511,
								19528
							],
							[
								20025,
								20040
							],
							[
								20057,
								20072
							],
							[
								20090,
								20107
							],
							[
								20143,
								20154
							],
							[
								20497,
								20524
							],
							[
								20685,
								20713
							],
							[
								21309,
								21332
							],
							[
								22020,
								22041
							],
							[
								22118,
								22134
							],
							[
								22567,
								22581
							],
							[
								22805,
								22822
							],
							[
								24119,
								24128
							],
							[
								24142,
								24150
							],
							[
								25251,
								25265
							],
							[
								26480,
								26494
							],
							[
								30327,
								30331
							],
							[
								36094,
								36112
							],
							[
								36729,
								36749
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉatomic_add_int‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉpollhandler‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉpollhandler_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_std_set_module_loader_func‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉmalloc_usable_size‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚ìÇ‚Äì‚ÄÉtrim_dotslash‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_std_set_worker_new_context_func‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_std_dump_error‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjsm_time_ms‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_interrupt_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_unlink_timer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_free_timer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_call_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_sab_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_free_message‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_handle_posted_message‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_package_json‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_exports‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_dump_obj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_std_dump_error1‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_std_dump_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_find_module_ext‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_find_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_normalize_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_loader_so‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_loader_path‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_binary‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_buf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_str‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_script‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_list_modules‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_context_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_module_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMALLOC_OVERHEAD‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMALLOC_OVERHEAD‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉtrace_malloc_data‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉdump_vector‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_ptr_offset‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_usable_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_printf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_realloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉPROG_NAME‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉjsm_help‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_eval_script‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_builtin_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_builtin_compiled‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					257,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/jslexer.js",
						"symkeys":
						[
							[
								14010,
								14028
							],
							[
								14223,
								14233
							],
							[
								14353,
								14371
							],
							[
								15571,
								15578
							],
							[
								15597,
								15625
							],
							[
								15887,
								15899
							],
							[
								15976,
								15986
							]
						],
						"symlist":
						[
							" (lex, skip) =>",
							" lex =>",
							" (lex, skip) =>",
							"JSLexer",
							"constructor(input, fileName)",
							"addDefines()",
							"addRules()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABvDQAACeKTgiAgX0dOVV9TT1VSQ0Ug4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCgnik4kgIHBvbGxoYW5kbGVyX3QgOyDigJQgdHlwZWRlZgoJ4pKhICBqc19zdGRfc2V0X21vZHVsZV9sb2FkZXJfZnVuYyAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNfc3RkX3NldF93b3JrZXJfbmV3X2NvbnRleHRfZnVuYyAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX3N0ZF9kdW1wX2Vycm9yICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTikrvigJMganNtX3RpbWVfbXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21faW50ZXJydXB0X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdW5saW5rX3RpbWVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZyZWVfdGltZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY2FsbF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3NhYl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZyZWVfbWVzc2FnZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9oYW5kbGVfcG9zdGVkX21lc3NhZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9wYWNrYWdlX2pzb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2V4cG9ydHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2ZpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9kdW1wX29iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGRfZHVtcF9lcnJvcjEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RkX2R1bXBfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZmluZF9tb2R1bGVfZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZpbmRfbW9kdWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX25vcm1hbGl6ZV9tb2R1bGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlcl9zbyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbG9hZGVyX3BhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9iaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9idWYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zdHIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9maWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xvYWRfc2NyaXB0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xvYWRfbW9kdWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xpc3RfbW9kdWxlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9jb250ZXh0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIGpzbV9tb2R1bGVfbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCgnik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBNQUxMT0NfT1ZFUkhFQUQg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK44oCTIHRyYWNlX21hbGxvY19kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgZHVtcF92ZWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3B0cl9vZmZzZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3VzYWJsZV9zaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX21hbGxvY19wcmludGYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfcmVhbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KCeKTgiAgUFJPR19OQU1FIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBqc21faGVscCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2V2YWxfc2NyaXB0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAQgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					258,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1864,
								1875
							],
							[
								1930,
								1942
							],
							[
								1998,
								2010
							],
							[
								2279,
								2303
							],
							[
								2561,
								2604
							],
							[
								2790,
								2815
							],
							[
								3053,
								3098
							],
							[
								3202,
								3254
							],
							[
								3397,
								3430
							],
							[
								3569,
								3592
							],
							[
								3852,
								3877
							],
							[
								3940,
								3974
							],
							[
								4299,
								4319
							],
							[
								4471,
								4495
							],
							[
								4694,
								4712
							],
							[
								4754,
								4775
							],
							[
								4820,
								4842
							],
							[
								4903,
								4925
							],
							[
								5088,
								5140
							],
							[
								5649,
								5706
							],
							[
								6411,
								6434
							],
							[
								6514,
								6540
							],
							[
								6651,
								6680
							],
							[
								6779,
								6818
							],
							[
								6869,
								6929
							],
							[
								7039,
								7082
							],
							[
								7403,
								7430
							],
							[
								7477,
								7505
							],
							[
								7553,
								7581
							],
							[
								7629,
								7667
							],
							[
								7725,
								7753
							],
							[
								7851,
								7886
							],
							[
								7941,
								7967
							],
							[
								8013,
								8058
							],
							[
								8548,
								8564
							],
							[
								8623,
								8662
							],
							[
								8774,
								8814
							],
							[
								8927,
								8965
							],
							[
								9070,
								9094
							],
							[
								9177,
								9197
							],
							[
								9225,
								9231
							],
							[
								9313,
								9352
							],
							[
								9458,
								9483
							],
							[
								9566,
								9586
							],
							[
								9615,
								9621
							],
							[
								9704,
								9744
							],
							[
								10600,
								10633
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABCAAAASlNMZXhlcgogIGNvbnN0cnVjdG9yKGlucHV0LCBmaWxlTmFtZSkKICBhZGREZWZpbmVzKCkKICBhZGRSdWxlcygpAAAAAAAAAADHBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					259,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglmb3BlbihmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					260,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1864,
								1875
							],
							[
								1930,
								1942
							],
							[
								1998,
								2010
							],
							[
								2279,
								2303
							],
							[
								2561,
								2604
							],
							[
								2790,
								2815
							],
							[
								3053,
								3098
							],
							[
								3202,
								3254
							],
							[
								3397,
								3430
							],
							[
								3569,
								3592
							],
							[
								3852,
								3877
							],
							[
								3940,
								3974
							],
							[
								4299,
								4319
							],
							[
								4471,
								4495
							],
							[
								4694,
								4712
							],
							[
								4754,
								4775
							],
							[
								4820,
								4842
							],
							[
								4903,
								4925
							],
							[
								5088,
								5140
							],
							[
								5649,
								5706
							],
							[
								6411,
								6434
							],
							[
								6514,
								6540
							],
							[
								6651,
								6680
							],
							[
								6779,
								6818
							],
							[
								6869,
								6929
							],
							[
								7039,
								7082
							],
							[
								7403,
								7430
							],
							[
								7477,
								7505
							],
							[
								7553,
								7581
							],
							[
								7629,
								7667
							],
							[
								7725,
								7753
							],
							[
								7851,
								7886
							],
							[
								7941,
								7967
							],
							[
								8013,
								8058
							],
							[
								8548,
								8564
							],
							[
								8623,
								8662
							],
							[
								8774,
								8814
							],
							[
								8927,
								8965
							],
							[
								9070,
								9094
							],
							[
								9177,
								9197
							],
							[
								9225,
								9231
							],
							[
								9313,
								9352
							],
							[
								9458,
								9483
							],
							[
								9566,
								9586
							],
							[
								9615,
								9621
							],
							[
								9704,
								9744
							],
							[
								10600,
								10633
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAAxwQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					261,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAADHBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglmb3BlbihmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					262,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1864,
								1875
							],
							[
								1930,
								1942
							],
							[
								1998,
								2010
							],
							[
								2279,
								2303
							],
							[
								2561,
								2604
							],
							[
								2790,
								2815
							],
							[
								3053,
								3098
							],
							[
								3202,
								3254
							],
							[
								3397,
								3430
							],
							[
								3569,
								3592
							],
							[
								3852,
								3877
							],
							[
								3940,
								3974
							],
							[
								4299,
								4319
							],
							[
								4471,
								4495
							],
							[
								4694,
								4712
							],
							[
								4754,
								4775
							],
							[
								4820,
								4842
							],
							[
								4903,
								4925
							],
							[
								5088,
								5140
							],
							[
								5649,
								5706
							],
							[
								6411,
								6434
							],
							[
								6514,
								6540
							],
							[
								6651,
								6680
							],
							[
								6779,
								6818
							],
							[
								6869,
								6929
							],
							[
								7039,
								7082
							],
							[
								7403,
								7430
							],
							[
								7477,
								7505
							],
							[
								7553,
								7581
							],
							[
								7629,
								7667
							],
							[
								7725,
								7753
							],
							[
								7851,
								7886
							],
							[
								7941,
								7967
							],
							[
								8013,
								8058
							],
							[
								8548,
								8564
							],
							[
								8623,
								8662
							],
							[
								8774,
								8814
							],
							[
								8927,
								8965
							],
							[
								9070,
								9094
							],
							[
								9177,
								9197
							],
							[
								9225,
								9231
							],
							[
								9313,
								9352
							],
							[
								9458,
								9483
							],
							[
								9566,
								9586
							],
							[
								9615,
								9621
							],
							[
								9704,
								9744
							],
							[
								10600,
								10633
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAAxwQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					263,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1864,
								1875
							],
							[
								1930,
								1942
							],
							[
								1998,
								2010
							],
							[
								2279,
								2303
							],
							[
								2561,
								2604
							],
							[
								2790,
								2815
							],
							[
								3053,
								3098
							],
							[
								3202,
								3254
							],
							[
								3397,
								3430
							],
							[
								3569,
								3592
							],
							[
								3852,
								3877
							],
							[
								3940,
								3974
							],
							[
								4299,
								4319
							],
							[
								4471,
								4495
							],
							[
								4694,
								4712
							],
							[
								4754,
								4775
							],
							[
								4820,
								4842
							],
							[
								4903,
								4925
							],
							[
								5088,
								5140
							],
							[
								5649,
								5706
							],
							[
								6411,
								6434
							],
							[
								6514,
								6540
							],
							[
								6651,
								6680
							],
							[
								6779,
								6818
							],
							[
								6869,
								6929
							],
							[
								7039,
								7082
							],
							[
								7403,
								7430
							],
							[
								7477,
								7505
							],
							[
								7553,
								7581
							],
							[
								7629,
								7667
							],
							[
								7725,
								7753
							],
							[
								7851,
								7886
							],
							[
								7941,
								7967
							],
							[
								8013,
								8058
							],
							[
								8548,
								8564
							],
							[
								8623,
								8662
							],
							[
								8774,
								8814
							],
							[
								8927,
								8965
							],
							[
								9070,
								9094
							],
							[
								9177,
								9197
							],
							[
								9225,
								9231
							],
							[
								9313,
								9352
							],
							[
								9458,
								9483
							],
							[
								9566,
								9586
							],
							[
								9615,
								9621
							],
							[
								9704,
								9744
							],
							[
								10600,
								10633
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglmb3BlbihmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAMcEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					269,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1864,
								1875
							],
							[
								1930,
								1942
							],
							[
								1998,
								2010
							],
							[
								2279,
								2303
							],
							[
								2561,
								2604
							],
							[
								2790,
								2815
							],
							[
								3053,
								3098
							],
							[
								3202,
								3257
							],
							[
								3400,
								3433
							],
							[
								3572,
								3595
							],
							[
								3855,
								3880
							],
							[
								3943,
								3977
							],
							[
								4302,
								4322
							],
							[
								4474,
								4498
							],
							[
								4697,
								4715
							],
							[
								4757,
								4778
							],
							[
								4823,
								4845
							],
							[
								4906,
								4928
							],
							[
								5091,
								5143
							],
							[
								5652,
								5709
							],
							[
								6414,
								6437
							],
							[
								6517,
								6543
							],
							[
								6654,
								6683
							],
							[
								6782,
								6821
							],
							[
								6872,
								6932
							],
							[
								7042,
								7085
							],
							[
								7406,
								7433
							],
							[
								7480,
								7508
							],
							[
								7556,
								7584
							],
							[
								7632,
								7670
							],
							[
								7728,
								7756
							],
							[
								7854,
								7889
							],
							[
								7944,
								7970
							],
							[
								8016,
								8061
							],
							[
								8551,
								8567
							],
							[
								8626,
								8665
							],
							[
								8777,
								8817
							],
							[
								8930,
								8968
							],
							[
								9073,
								9097
							],
							[
								9180,
								9200
							],
							[
								9228,
								9234
							],
							[
								9316,
								9355
							],
							[
								9461,
								9486
							],
							[
								9569,
								9589
							],
							[
								9618,
								9624
							],
							[
								9707,
								9747
							],
							[
								10603,
								10636
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function openSync(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglmb3BlbihmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAMoEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAEAAAAAAABUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADKBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					271,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1864,
								1875
							],
							[
								1930,
								1942
							],
							[
								1998,
								2010
							],
							[
								2279,
								2303
							],
							[
								2561,
								2604
							],
							[
								2790,
								2815
							],
							[
								3053,
								3098
							],
							[
								3202,
								3257
							],
							[
								3400,
								3433
							],
							[
								3572,
								3595
							],
							[
								3855,
								3880
							],
							[
								3943,
								3977
							],
							[
								4302,
								4322
							],
							[
								4474,
								4498
							],
							[
								4697,
								4715
							],
							[
								4757,
								4778
							],
							[
								4823,
								4845
							],
							[
								4906,
								4928
							],
							[
								5091,
								5143
							],
							[
								5652,
								5709
							],
							[
								6414,
								6437
							],
							[
								6517,
								6543
							],
							[
								6654,
								6683
							],
							[
								6782,
								6821
							],
							[
								6872,
								6932
							],
							[
								7042,
								7085
							],
							[
								7406,
								7433
							],
							[
								7480,
								7508
							],
							[
								7556,
								7584
							],
							[
								7632,
								7670
							],
							[
								7728,
								7756
							],
							[
								7854,
								7889
							],
							[
								7944,
								7970
							],
							[
								8016,
								8061
							],
							[
								8551,
								8567
							],
							[
								8626,
								8665
							],
							[
								8777,
								8817
							],
							[
								8930,
								8968
							],
							[
								9073,
								9097
							],
							[
								9180,
								9200
							],
							[
								9228,
								9234
							],
							[
								9316,
								9355
							],
							[
								9461,
								9486
							],
							[
								9569,
								9589
							],
							[
								9618,
								9624
							],
							[
								9707,
								9747
							],
							[
								10603,
								10636
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function openSync(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAAygQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					272,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1867,
								1878
							],
							[
								1933,
								1945
							],
							[
								2001,
								2013
							],
							[
								2282,
								2306
							],
							[
								2564,
								2607
							],
							[
								2793,
								2818
							],
							[
								3056,
								3101
							],
							[
								3205,
								3260
							],
							[
								3403,
								3436
							],
							[
								3575,
								3598
							],
							[
								3858,
								3883
							],
							[
								3946,
								3980
							],
							[
								4305,
								4325
							],
							[
								4477,
								4501
							],
							[
								4700,
								4718
							],
							[
								4760,
								4781
							],
							[
								4826,
								4848
							],
							[
								4909,
								4931
							],
							[
								5094,
								5146
							],
							[
								5655,
								5712
							],
							[
								6417,
								6440
							],
							[
								6520,
								6546
							],
							[
								6657,
								6686
							],
							[
								6785,
								6824
							],
							[
								6875,
								6935
							],
							[
								7045,
								7088
							],
							[
								7409,
								7436
							],
							[
								7483,
								7511
							],
							[
								7559,
								7587
							],
							[
								7635,
								7673
							],
							[
								7731,
								7759
							],
							[
								7857,
								7892
							],
							[
								7947,
								7973
							],
							[
								8019,
								8064
							],
							[
								8554,
								8570
							],
							[
								8629,
								8668
							],
							[
								8780,
								8820
							],
							[
								8933,
								8971
							],
							[
								9076,
								9100
							],
							[
								9183,
								9203
							],
							[
								9231,
								9237
							],
							[
								9319,
								9358
							],
							[
								9464,
								9489
							],
							[
								9572,
								9592
							],
							[
								9621,
								9627
							],
							[
								9710,
								9750
							],
							[
								10606,
								10639
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function openSync(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADKBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAMoEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAMoEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					273,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADKBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					274,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1867,
								1878
							],
							[
								1933,
								1945
							],
							[
								2001,
								2013
							],
							[
								2282,
								2306
							],
							[
								2564,
								2607
							],
							[
								2793,
								2818
							],
							[
								3056,
								3101
							],
							[
								3205,
								3260
							],
							[
								3403,
								3436
							],
							[
								3575,
								3598
							],
							[
								3858,
								3883
							],
							[
								3946,
								3980
							],
							[
								4305,
								4325
							],
							[
								4477,
								4501
							],
							[
								4700,
								4718
							],
							[
								4760,
								4781
							],
							[
								4826,
								4848
							],
							[
								4909,
								4931
							],
							[
								5094,
								5146
							],
							[
								5655,
								5712
							],
							[
								6417,
								6440
							],
							[
								6520,
								6546
							],
							[
								6657,
								6686
							],
							[
								6785,
								6824
							],
							[
								6875,
								6935
							],
							[
								7045,
								7088
							],
							[
								7409,
								7436
							],
							[
								7483,
								7511
							],
							[
								7559,
								7587
							],
							[
								7635,
								7673
							],
							[
								7731,
								7759
							],
							[
								7857,
								7892
							],
							[
								7947,
								7973
							],
							[
								8019,
								8064
							],
							[
								8554,
								8570
							],
							[
								8629,
								8668
							],
							[
								8780,
								8820
							],
							[
								8933,
								8971
							],
							[
								9076,
								9100
							],
							[
								9183,
								9203
							],
							[
								9231,
								9237
							],
							[
								9319,
								9358
							],
							[
								9464,
								9489
							],
							[
								9572,
								9592
							],
							[
								9621,
								9627
							],
							[
								9710,
								9750
							],
							[
								10606,
								10639
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function openSync(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAAygQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					275,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADKBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					276,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1867,
								1878
							],
							[
								1933,
								1945
							],
							[
								2001,
								2013
							],
							[
								2282,
								2306
							],
							[
								2564,
								2607
							],
							[
								2793,
								2818
							],
							[
								3056,
								3101
							],
							[
								3205,
								3260
							],
							[
								3403,
								3436
							],
							[
								3575,
								3598
							],
							[
								3858,
								3883
							],
							[
								3946,
								3980
							],
							[
								4305,
								4325
							],
							[
								4477,
								4501
							],
							[
								4700,
								4718
							],
							[
								4760,
								4781
							],
							[
								4826,
								4848
							],
							[
								4909,
								4931
							],
							[
								5094,
								5146
							],
							[
								5655,
								5712
							],
							[
								6417,
								6440
							],
							[
								6520,
								6546
							],
							[
								6657,
								6686
							],
							[
								6785,
								6824
							],
							[
								6875,
								6935
							],
							[
								7045,
								7088
							],
							[
								7409,
								7436
							],
							[
								7483,
								7511
							],
							[
								7559,
								7587
							],
							[
								7635,
								7673
							],
							[
								7731,
								7759
							],
							[
								7857,
								7892
							],
							[
								7947,
								7973
							],
							[
								8019,
								8064
							],
							[
								8554,
								8570
							],
							[
								8629,
								8668
							],
							[
								8780,
								8820
							],
							[
								8933,
								8971
							],
							[
								9076,
								9100
							],
							[
								9183,
								9203
							],
							[
								9231,
								9237
							],
							[
								9319,
								9358
							],
							[
								9464,
								9489
							],
							[
								9572,
								9592
							],
							[
								9621,
								9627
							],
							[
								9710,
								9750
							],
							[
								10606,
								10639
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function openSync(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAAygQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					277,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADKBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					278,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1864,
								1875
							],
							[
								1930,
								1942
							],
							[
								1998,
								2010
							],
							[
								2279,
								2303
							],
							[
								2561,
								2604
							],
							[
								2790,
								2815
							],
							[
								3053,
								3098
							],
							[
								3202,
								3254
							],
							[
								3397,
								3430
							],
							[
								3569,
								3592
							],
							[
								3852,
								3877
							],
							[
								3940,
								3974
							],
							[
								4299,
								4319
							],
							[
								4471,
								4495
							],
							[
								4694,
								4712
							],
							[
								4754,
								4775
							],
							[
								4820,
								4842
							],
							[
								4903,
								4925
							],
							[
								5088,
								5140
							],
							[
								5649,
								5706
							],
							[
								6411,
								6434
							],
							[
								6514,
								6540
							],
							[
								6651,
								6680
							],
							[
								6779,
								6818
							],
							[
								6869,
								6929
							],
							[
								7039,
								7082
							],
							[
								7403,
								7430
							],
							[
								7477,
								7505
							],
							[
								7553,
								7581
							],
							[
								7629,
								7667
							],
							[
								7725,
								7753
							],
							[
								7851,
								7886
							],
							[
								7941,
								7967
							],
							[
								8013,
								8058
							],
							[
								8548,
								8564
							],
							[
								8623,
								8662
							],
							[
								8774,
								8814
							],
							[
								8927,
								8965
							],
							[
								9070,
								9094
							],
							[
								9177,
								9197
							],
							[
								9225,
								9231
							],
							[
								9313,
								9352
							],
							[
								9458,
								9483
							],
							[
								9566,
								9586
							],
							[
								9615,
								9621
							],
							[
								9704,
								9744
							],
							[
								10600,
								10633
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AwAAAAAAAAAAAAAAxwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMcEAAAgIHN0cmVycihyZXQpCiAgbnVtZXJyKHJldCkKU3RhdHMKICBjb25zdHJ1Y3RvcihzdCkKICBpc0RpcmVjdG9yeSgpCiAgaXNDaGFyYWN0ZXJEZXZpY2UoKQogIGlzQmxvY2tEZXZpY2UoKQogIGlzRmlsZSgpCiAgaXNGSUZPKCkKICBpc1N5bWJvbGljTGluaygpCiAgaXNTb2NrZXQoKQogIGdldCBlcnJubygpCiAgZ2V0IGVycnN0cigpCiAgZ2V0IHN0ZGluKCkKICBnZXQgc3Rkb3V0KCkKICBnZXQgc3RkZXJyKCkKCWJ1ZmZlcihsZW5ndGgpCglidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKCWJ1ZmZlclNpemUoYnVmKQoJYnVmZmVyVG9TdHJpbmcoYnVmLCBvZmZzZXQsIGxlbmd0aCkKCWZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQoJZmRvcGVuKGZkLCBmbGFncyA9ICdyJykKCXB1dHMoZmQsIHN0cikKCWZsdXNoU3luYyhmaWxlKQoJc2VlayhmZCwgb2Zmc2V0LCB3aGVuY2UpCgl0ZWxsKGZpbGUpCglzaXplU3luYyhmaWxlKQoJZ2V0Y3dkKCkKCWNoZGlyKHBhdGgpCglpc2F0dHkoZmlsZSkKCWZpbGVubyhmaWxlKQoJcmVhZEZpbGVTeW5jKGZpbGVuYW1lLCBlbmNvZGluZyA9ICd1dGYtOCcpCgl3cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQoJY2xvc2VTeW5jKGZkKQoJZXhpc3RzU3luYyhwYXRoKQoJbHN0YXRTeW5jKHBhdGgsIGNiKQoJbWtkaXJTeW5jKHBhdGgsIG1vZGUgPSAwbzc3NykKCW9wZW5TeW5jKGZpbGVuYW1lLCBmbGFncyA9IE9fUkRPTkxZLCBtb2RlID0gMHgxYTQpCglyZWFkU3luYyhmZCwgYnVmLCBvZmZzZXQsIGxlbmd0aCkKCXJlYWRkaXJTeW5jKHBhdGgpCglyZWFkbGlua1N5bmMocGF0aCkKCXJlYWxwYXRoU3luYyhwYXRoKQoJcmVuYW1lU3luYyhvbGRuYW1lLCBuZXduYW1lKQoJc3RhdFN5bmMocGF0aCwgY2IpCglzeW1saW5rU3luYyh0YXJnZXQsIHBhdGgpCgl1bmxpbmtTeW5jKHBhdGgpCgl3cml0ZVN5bmMoZmQsIGRhdGEsIG9mZnNldCwgbGVuZ3RoKQoJcGlwZSgpCglzZXRSZWFkSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJc2V0V3JpdGVIYW5kbGVyKGZpbGUsIGhhbmRsZXIpCglvblJlYWQoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0UmVhZChmaWxlKQoJb25Xcml0ZShmaWxlLCBoYW5kbGVyID0gbnVsbCkKCXdhaXRXcml0ZShmaWxlKQoJcmVhZEFsbChpbnB1dCwgYnVmU2l6ZSA9IDEwMjQpCkVuY29kaW5nMkJ5dGVzKGVuY29kaW5nKQAAAAAAAAAAxwQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					279,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglmb3BlbihmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					280,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					281,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								1755,
								1769
							],
							[
								2007,
								2018
							],
							[
								2133,
								2146
							],
							[
								2233,
								2262
							],
							[
								2379,
								2397
							],
							[
								2424,
								2437
							],
							[
								2499,
								2517
							],
							[
								2918,
								2936
							],
							[
								2947,
								2965
							],
							[
								2975,
								2993
							],
							[
								2999,
								3017
							],
							[
								3031,
								3049
							],
							[
								3060,
								3078
							],
							[
								3086,
								3104
							],
							[
								3115,
								3133
							],
							[
								3140,
								3158
							],
							[
								3188,
								3206
							],
							[
								3257,
								3291
							],
							[
								3334,
								3352
							],
							[
								3579,
								3590
							],
							[
								3729,
								3750
							],
							[
								3836,
								3852
							],
							[
								3986,
								4000
							],
							[
								4095,
								4111
							],
							[
								4506,
								4518
							],
							[
								4771,
								4787
							],
							[
								5051,
								5076
							],
							[
								6703,
								6724
							],
							[
								7025,
								7043
							],
							[
								7500,
								7515
							],
							[
								8062,
								8076
							],
							[
								8405,
								8420
							],
							[
								8964,
								8976
							],
							[
								9208,
								9227
							],
							[
								9586,
								9604
							],
							[
								10029,
								10048
							],
							[
								10845,
								10860
							],
							[
								11298,
								11318
							],
							[
								12449,
								12469
							],
							[
								13642,
								13664
							],
							[
								15940,
								15955
							],
							[
								16492,
								16504
							],
							[
								17226,
								17238
							],
							[
								17487,
								17500
							],
							[
								18084,
								18099
							],
							[
								18495,
								18510
							],
							[
								18836,
								18852
							],
							[
								19195,
								19210
							],
							[
								19501,
								19518
							],
							[
								20015,
								20030
							],
							[
								20047,
								20062
							],
							[
								20080,
								20097
							],
							[
								20133,
								20144
							],
							[
								20487,
								20514
							],
							[
								20675,
								20703
							],
							[
								21299,
								21322
							],
							[
								22010,
								22031
							],
							[
								22108,
								22124
							],
							[
								22557,
								22571
							],
							[
								22795,
								22812
							],
							[
								24109,
								24118
							],
							[
								24132,
								24140
							],
							[
								25241,
								25255
							],
							[
								26470,
								26484
							],
							[
								30317,
								30321
							],
							[
								36084,
								36102
							],
							[
								36719,
								36739
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉatomic_add_int‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉpollhandler‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉpollhandler_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_std_set_module_loader_func‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉmalloc_usable_size‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚ìÇ‚Äì‚ÄÉtrim_dotslash‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_std_set_worker_new_context_func‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_std_dump_error‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjsm_time_ms‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_interrupt_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_unlink_timer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_free_timer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_call_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_sab_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_free_message‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_handle_posted_message‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_package_json‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_exports‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_dump_obj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_std_dump_error1‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_std_dump_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_find_module_ext‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_find_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_normalize_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_loader_so‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_loader_path‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_binary‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_buf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_str‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_script‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_list_modules‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_context_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_module_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMALLOC_OVERHEAD‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMALLOC_OVERHEAD‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉtrace_malloc_data‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉdump_vector‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_ptr_offset‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_usable_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_printf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_realloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉPROG_NAME‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉjsm_help‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_eval_script‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_builtin_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_builtin_compiled‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function"
						]
					},
					"AQAAAAAAAAAAAAAAMQsAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					282,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1864,
								1875
							],
							[
								1930,
								1942
							],
							[
								1998,
								2010
							],
							[
								2279,
								2303
							],
							[
								2561,
								2604
							],
							[
								2790,
								2815
							],
							[
								3053,
								3098
							],
							[
								3202,
								3254
							],
							[
								3397,
								3430
							],
							[
								3569,
								3592
							],
							[
								3852,
								3877
							],
							[
								3940,
								3974
							],
							[
								4299,
								4319
							],
							[
								4471,
								4495
							],
							[
								4694,
								4712
							],
							[
								4754,
								4775
							],
							[
								4820,
								4842
							],
							[
								4903,
								4925
							],
							[
								5088,
								5140
							],
							[
								5649,
								5706
							],
							[
								6411,
								6434
							],
							[
								6514,
								6540
							],
							[
								6651,
								6680
							],
							[
								6779,
								6818
							],
							[
								6869,
								6929
							],
							[
								7039,
								7082
							],
							[
								7403,
								7430
							],
							[
								7477,
								7505
							],
							[
								7553,
								7581
							],
							[
								7629,
								7667
							],
							[
								7725,
								7753
							],
							[
								7851,
								7886
							],
							[
								7941,
								7967
							],
							[
								8013,
								8058
							],
							[
								8548,
								8564
							],
							[
								8623,
								8662
							],
							[
								8774,
								8814
							],
							[
								8927,
								8965
							],
							[
								9070,
								9094
							],
							[
								9177,
								9197
							],
							[
								9225,
								9231
							],
							[
								9313,
								9352
							],
							[
								9458,
								9483
							],
							[
								9566,
								9586
							],
							[
								9615,
								9621
							],
							[
								9704,
								9744
							],
							[
								10600,
								10633
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABvDQAACeKTgiAgX0dOVV9TT1VSQ0Ug4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCgnik4kgIHBvbGxoYW5kbGVyX3QgOyDigJQgdHlwZWRlZgoJ4pKhICBqc19zdGRfc2V0X21vZHVsZV9sb2FkZXJfZnVuYyAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNfc3RkX3NldF93b3JrZXJfbmV3X2NvbnRleHRfZnVuYyAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX3N0ZF9kdW1wX2Vycm9yICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTikrvigJMganNtX3RpbWVfbXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21faW50ZXJydXB0X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdW5saW5rX3RpbWVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZyZWVfdGltZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY2FsbF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3NhYl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZyZWVfbWVzc2FnZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9oYW5kbGVfcG9zdGVkX21lc3NhZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9wYWNrYWdlX2pzb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2V4cG9ydHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2ZpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9kdW1wX29iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGRfZHVtcF9lcnJvcjEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RkX2R1bXBfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZmluZF9tb2R1bGVfZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZpbmRfbW9kdWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX25vcm1hbGl6ZV9tb2R1bGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlcl9zbyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbG9hZGVyX3BhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9iaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9idWYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zdHIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9maWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xvYWRfc2NyaXB0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xvYWRfbW9kdWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xpc3RfbW9kdWxlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9jb250ZXh0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIGpzbV9tb2R1bGVfbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCgnik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBNQUxMT0NfT1ZFUkhFQUQg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK44oCTIHRyYWNlX21hbGxvY19kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgZHVtcF92ZWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3B0cl9vZmZzZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3VzYWJsZV9zaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX21hbGxvY19wcmludGYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfcmVhbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KCeKTgiAgUFJPR19OQU1FIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBqc21faGVscCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2V2YWxfc2NyaXB0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAxwQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					283,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								1755,
								1769
							],
							[
								2007,
								2018
							],
							[
								2133,
								2146
							],
							[
								2233,
								2262
							],
							[
								2379,
								2397
							],
							[
								2424,
								2437
							],
							[
								2499,
								2517
							],
							[
								2918,
								2936
							],
							[
								2947,
								2965
							],
							[
								2975,
								2993
							],
							[
								2999,
								3017
							],
							[
								3031,
								3049
							],
							[
								3060,
								3078
							],
							[
								3086,
								3104
							],
							[
								3115,
								3133
							],
							[
								3140,
								3158
							],
							[
								3188,
								3206
							],
							[
								3257,
								3291
							],
							[
								3334,
								3352
							],
							[
								3579,
								3590
							],
							[
								3729,
								3750
							],
							[
								3836,
								3852
							],
							[
								3986,
								4000
							],
							[
								4095,
								4111
							],
							[
								4506,
								4518
							],
							[
								4771,
								4787
							],
							[
								5051,
								5076
							],
							[
								6703,
								6724
							],
							[
								7025,
								7043
							],
							[
								7500,
								7515
							],
							[
								8062,
								8076
							],
							[
								8405,
								8420
							],
							[
								8964,
								8976
							],
							[
								9208,
								9227
							],
							[
								9586,
								9604
							],
							[
								10029,
								10048
							],
							[
								10845,
								10860
							],
							[
								11298,
								11318
							],
							[
								12449,
								12469
							],
							[
								13642,
								13664
							],
							[
								15940,
								15955
							],
							[
								16492,
								16504
							],
							[
								17226,
								17238
							],
							[
								17487,
								17500
							],
							[
								18084,
								18099
							],
							[
								18495,
								18510
							],
							[
								18836,
								18852
							],
							[
								19195,
								19210
							],
							[
								19501,
								19518
							],
							[
								20015,
								20030
							],
							[
								20047,
								20062
							],
							[
								20080,
								20097
							],
							[
								20133,
								20144
							],
							[
								20487,
								20514
							],
							[
								20675,
								20703
							],
							[
								21299,
								21322
							],
							[
								22010,
								22031
							],
							[
								22108,
								22124
							],
							[
								22557,
								22571
							],
							[
								22795,
								22812
							],
							[
								24109,
								24118
							],
							[
								24132,
								24140
							],
							[
								25241,
								25255
							],
							[
								26470,
								26484
							],
							[
								30317,
								30321
							],
							[
								36084,
								36102
							],
							[
								36719,
								36739
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉatomic_add_int‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉpollhandler‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉpollhandler_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_std_set_module_loader_func‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉmalloc_usable_size‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚ìÇ‚Äì‚ÄÉtrim_dotslash‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_declare_module‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_std_set_worker_new_context_func‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjsm_std_dump_error‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjsm_time_ms‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_interrupt_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_unlink_timer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_free_timer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_call_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_sab_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_free_message‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_handle_posted_message‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_package_json‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_exports‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_dump_obj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_std_dump_error1‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_std_dump_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_find_module_ext‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_find_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_normalize_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_loader_so‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_module_loader_path‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_binary‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_buf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_str‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_eval_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_script‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_load_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_list_modules‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_context_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_module_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMALLOC_OVERHEAD‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMALLOC_OVERHEAD‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉtrace_malloc_data‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉdump_vector‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_ptr_offset‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_usable_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_printf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_malloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjsm_trace_realloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉPROG_NAME‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉjsm_help‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_eval_script‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_builtin_native‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉjsm_builtin_compiled‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglmb3BlbihmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAADELAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					284,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1864,
								1875
							],
							[
								1930,
								1942
							],
							[
								1998,
								2010
							],
							[
								2279,
								2303
							],
							[
								2561,
								2604
							],
							[
								2790,
								2815
							],
							[
								3053,
								3098
							],
							[
								3202,
								3254
							],
							[
								3397,
								3430
							],
							[
								3569,
								3592
							],
							[
								3852,
								3877
							],
							[
								3940,
								3974
							],
							[
								4299,
								4319
							],
							[
								4471,
								4495
							],
							[
								4694,
								4712
							],
							[
								4754,
								4775
							],
							[
								4820,
								4842
							],
							[
								4903,
								4925
							],
							[
								5088,
								5140
							],
							[
								5649,
								5706
							],
							[
								6411,
								6434
							],
							[
								6514,
								6540
							],
							[
								6651,
								6680
							],
							[
								6779,
								6818
							],
							[
								6869,
								6929
							],
							[
								7039,
								7082
							],
							[
								7403,
								7430
							],
							[
								7477,
								7505
							],
							[
								7553,
								7581
							],
							[
								7629,
								7667
							],
							[
								7725,
								7753
							],
							[
								7851,
								7886
							],
							[
								7941,
								7967
							],
							[
								8013,
								8058
							],
							[
								8548,
								8564
							],
							[
								8623,
								8662
							],
							[
								8774,
								8814
							],
							[
								8927,
								8965
							],
							[
								9070,
								9094
							],
							[
								9177,
								9197
							],
							[
								9225,
								9231
							],
							[
								9313,
								9352
							],
							[
								9458,
								9483
							],
							[
								9566,
								9586
							],
							[
								9615,
								9621
							],
							[
								9704,
								9744
							],
							[
								10600,
								10633
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABvDQAACeKTgiAgX0dOVV9TT1VSQ0Ug4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGF0b21pY19hZGRfaW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgcG9sbGhhbmRsZXIgeyDigKYgfSA7IOKAlCB0eXBlCgnik4kgIHBvbGxoYW5kbGVyX3QgOyDigJQgdHlwZWRlZgoJ4pKhICBqc19zdGRfc2V0X21vZHVsZV9sb2FkZXJfZnVuYyAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAgbWFsbG9jX3VzYWJsZV9zaXplICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTik4LigJMgdHJpbV9kb3RzbGFzaCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMganNtX2RlY2xhcmVfbW9kdWxlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX2RlY2xhcmVfbW9kdWxlICggKSA7IOKAlCBkZWNsYXJhdGlvbgoJ4pKhICBqc21fZGVjbGFyZV9tb2R1bGUgKCApIDsg4oCUIGRlY2xhcmF0aW9uCgnikqEgIGpzbV9kZWNsYXJlX21vZHVsZSAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNfc3RkX3NldF93b3JrZXJfbmV3X2NvbnRleHRfZnVuYyAoICkgOyDigJQgZGVjbGFyYXRpb24KCeKSoSAganNtX3N0ZF9kdW1wX2Vycm9yICggKSA7IOKAlCBkZWNsYXJhdGlvbgrigJTikrvigJMganNtX3RpbWVfbXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21faW50ZXJydXB0X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdW5saW5rX3RpbWVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZyZWVfdGltZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fY2FsbF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3NhYl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZyZWVfbWVzc2FnZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9oYW5kbGVfcG9zdGVkX21lc3NhZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9wYWNrYWdlX2pzb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2V4cG9ydHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2ZpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9kdW1wX29iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGRfZHVtcF9lcnJvcjEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RkX2R1bXBfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZmluZF9tb2R1bGVfZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2ZpbmRfbW9kdWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX25vcm1hbGl6ZV9tb2R1bGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2xvYWRlcl9zbyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbG9hZGVyX3BhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9iaW5hcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9idWYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9zdHIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZXZhbF9maWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xvYWRfc2NyaXB0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xvYWRfbW9kdWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xpc3RfbW9kdWxlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9jb250ZXh0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIGpzbV9tb2R1bGVfbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCgnik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAoJ4pOCICBNQUxMT0NfT1ZFUkhFQUQg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK44oCTIHRyYWNlX21hbGxvY19kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgZHVtcF92ZWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3B0cl9vZmZzZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX3VzYWJsZV9zaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX21hbGxvY19wcmludGYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfcmVhbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KCeKTgiAgUFJPR19OQU1FIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBqc21faGVscCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2V2YWxfc2NyaXB0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgAAAAAAAAAAxwQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					285,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglmb3BlbihmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					286,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1864,
								1875
							],
							[
								1930,
								1942
							],
							[
								1998,
								2010
							],
							[
								2279,
								2303
							],
							[
								2561,
								2604
							],
							[
								2790,
								2815
							],
							[
								3053,
								3098
							],
							[
								3202,
								3254
							],
							[
								3397,
								3430
							],
							[
								3569,
								3592
							],
							[
								3852,
								3877
							],
							[
								3940,
								3974
							],
							[
								4299,
								4319
							],
							[
								4471,
								4495
							],
							[
								4694,
								4712
							],
							[
								4754,
								4775
							],
							[
								4820,
								4842
							],
							[
								4903,
								4925
							],
							[
								5088,
								5140
							],
							[
								5649,
								5706
							],
							[
								6411,
								6434
							],
							[
								6514,
								6540
							],
							[
								6651,
								6680
							],
							[
								6779,
								6818
							],
							[
								6869,
								6929
							],
							[
								7039,
								7082
							],
							[
								7403,
								7430
							],
							[
								7477,
								7505
							],
							[
								7553,
								7581
							],
							[
								7629,
								7667
							],
							[
								7725,
								7753
							],
							[
								7851,
								7886
							],
							[
								7941,
								7967
							],
							[
								8013,
								8058
							],
							[
								8548,
								8564
							],
							[
								8623,
								8662
							],
							[
								8774,
								8814
							],
							[
								8927,
								8965
							],
							[
								9070,
								9094
							],
							[
								9177,
								9197
							],
							[
								9225,
								9231
							],
							[
								9313,
								9352
							],
							[
								9458,
								9483
							],
							[
								9566,
								9586
							],
							[
								9615,
								9621
							],
							[
								9704,
								9744
							],
							[
								10600,
								10633
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, encoding = 'utf-8')",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AQAAAAAAAAAAAAAAxwQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					287,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/clexer.js",
						"symkeys":
						[
							[
								2324,
								2330
							],
							[
								2349,
								2383
							],
							[
								2464,
								2474
							]
						],
						"symlist":
						[
							"CLexer",
							"constructor(input, filename, mask)",
							"addRules()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCglidWZmZXIobGVuZ3RoKQoJYnVmZmVyRnJvbShjaHVuaywgb2Zmc2V0LCBsZW5ndGgpCglidWZmZXJTaXplKGJ1ZikKCWJ1ZmZlclRvU3RyaW5nKGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglmb3BlbihmaWxlbmFtZSwgZmxhZ3MgPSAncicsIG1vZGUgPSAwbzY0NCkKCWZkb3BlbihmZCwgZmxhZ3MgPSAncicpCglwdXRzKGZkLCBzdHIpCglmbHVzaFN5bmMoZmlsZSkKCXNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQoJdGVsbChmaWxlKQoJc2l6ZVN5bmMoZmlsZSkKCWdldGN3ZCgpCgljaGRpcihwYXRoKQoJaXNhdHR5KGZpbGUpCglmaWxlbm8oZmlsZSkKCXJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcgPSAndXRmLTgnKQoJd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKCWNsb3NlU3luYyhmZCkKCWV4aXN0c1N5bmMocGF0aCkKCWxzdGF0U3luYyhwYXRoLCBjYikKCW1rZGlyU3luYyhwYXRoLCBtb2RlID0gMG83NzcpCglvcGVuU3luYyhmaWxlbmFtZSwgZmxhZ3MgPSBPX1JET05MWSwgbW9kZSA9IDB4MWE0KQoJcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCglyZWFkZGlyU3luYyhwYXRoKQoJcmVhZGxpbmtTeW5jKHBhdGgpCglyZWFscGF0aFN5bmMocGF0aCkKCXJlbmFtZVN5bmMob2xkbmFtZSwgbmV3bmFtZSkKCXN0YXRTeW5jKHBhdGgsIGNiKQoJc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQoJdW5saW5rU3luYyhwYXRoKQoJd3JpdGVTeW5jKGZkLCBkYXRhLCBvZmZzZXQsIGxlbmd0aCkKCXBpcGUoKQoJc2V0UmVhZEhhbmRsZXIoZmlsZSwgaGFuZGxlcikKCXNldFdyaXRlSGFuZGxlcihmaWxlLCBoYW5kbGVyKQoJb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQoJd2FpdFJlYWQoZmlsZSkKCW9uV3JpdGUoZmlsZSwgaGFuZGxlciA9IG51bGwpCgl3YWl0V3JpdGUoZmlsZSkKCXJlYWRBbGwoaW5wdXQsIGJ1ZlNpemUgPSAxMDI0KQpFbmNvZGluZzJCeXRlcyhlbmNvZGluZykAAAAAAAAAADgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					288,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								120
							],
							[
								201,
								205
							],
							[
								248,
								253
							],
							[
								323,
								354
							],
							[
								1010,
								1017
							],
							[
								1135,
								1152
							],
							[
								1184,
								1194
							],
							[
								1195,
								1211
							],
							[
								1260,
								1290
							],
							[
								1445,
								1468
							],
							[
								1469,
								1490
							],
							[
								1831,
								1845
							],
							[
								2336,
								2370
							],
							[
								2698,
								2750
							],
							[
								2791,
								2824
							],
							[
								3003,
								3053
							],
							[
								3098,
								3144
							]
						],
						"symlist":
						[
							" function Console(opts = {})",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAQ0xleGVyCiAgY29uc3RydWN0b3IoaW5wdXQsIGZpbGVuYW1lLCBtYXNrKQogIGFkZFJ1bGVzKCkAAAAAAAAAAPwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					289,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								120
							],
							[
								201,
								205
							],
							[
								248,
								253
							],
							[
								323,
								354
							],
							[
								1010,
								1017
							],
							[
								1135,
								1152
							],
							[
								1184,
								1194
							],
							[
								1195,
								1211
							],
							[
								1260,
								1290
							],
							[
								1445,
								1468
							],
							[
								1469,
								1490
							],
							[
								1831,
								1845
							],
							[
								2336,
								2370
							],
							[
								2698,
								2750
							],
							[
								2791,
								2824
							],
							[
								3003,
								3053
							],
							[
								3098,
								3144
							],
							[
								3252,
								3287
							]
						],
						"symlist":
						[
							" function Console(opts = {})",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(options= {})"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAQ29uc29sZShvcHRzID0ge30pCkNvbnNvbGUKCWZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCglhZGRNaXNzaW5nTWV0aG9kcyhjb25zKQpDb25zb2xlLnByb3RvdHlwZS5jb25maWcgPSBjb25maWcob2JqID0ge30pCkNvbnNvbGVPcHRpb25zKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucy5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpAAAAAAAAAAAWAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgEAAENvbnNvbGUob3B0cyA9IHt9KQpDb25zb2xlCglmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwoJYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAob3B0aW9ucz0ge30pAAAAAAAAAAAWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					290,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								120
							],
							[
								201,
								205
							],
							[
								248,
								253
							],
							[
								323,
								354
							],
							[
								1010,
								1017
							],
							[
								1135,
								1152
							],
							[
								1184,
								1194
							],
							[
								1195,
								1211
							],
							[
								1260,
								1290
							],
							[
								1445,
								1468
							],
							[
								1469,
								1490
							],
							[
								1831,
								1845
							],
							[
								2336,
								2370
							],
							[
								2698,
								2750
							],
							[
								2791,
								2824
							],
							[
								3003,
								3053
							],
							[
								3098,
								3144
							],
							[
								3252,
								3307
							]
						],
						"symlist":
						[
							" function Console(opts = {})",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(options={}, callback = () => {})"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAQ29uc29sZShvcHRzID0ge30pCkNvbnNvbGUKCWZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCglhZGRNaXNzaW5nTWV0aG9kcyhjb25zKQpDb25zb2xlLnByb3RvdHlwZS5jb25maWcgPSBjb25maWcob2JqID0ge30pCkNvbnNvbGVPcHRpb25zKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucy5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpCkNvbnNvbGVTZXR1cChvcHRpb25zPSB7fSkAAAAAAAAAAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAQ29uc29sZShvcHRzID0ge30pCkNvbnNvbGUKCWZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCglhZGRNaXNzaW5nTWV0aG9kcyhjb25zKQpDb25zb2xlLnByb3RvdHlwZS5jb25maWcgPSBjb25maWcob2JqID0ge30pCkNvbnNvbGVPcHRpb25zKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucy5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpAAAAAAAAAAD8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					291,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								120
							],
							[
								201,
								205
							],
							[
								248,
								253
							],
							[
								323,
								354
							],
							[
								1010,
								1017
							],
							[
								1135,
								1152
							],
							[
								1184,
								1194
							],
							[
								1195,
								1211
							],
							[
								1260,
								1290
							],
							[
								1445,
								1468
							],
							[
								1469,
								1490
							],
							[
								1831,
								1845
							],
							[
								2336,
								2370
							],
							[
								2698,
								2750
							],
							[
								2791,
								2824
							],
							[
								3003,
								3053
							],
							[
								3098,
								3144
							],
							[
								3252,
								3314
							]
						],
						"symlist":
						[
							" function Console(opts = {})",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions={}, callback = () => {})"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAQ29uc29sZShvcHRzID0ge30pCkNvbnNvbGUKCWZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCglhZGRNaXNzaW5nTWV0aG9kcyhjb25zKQpDb25zb2xlLnByb3RvdHlwZS5jb25maWcgPSBjb25maWcob2JqID0ge30pCkNvbnNvbGVPcHRpb25zKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucy5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpAAAAAAAAAAD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAENvbnNvbGUob3B0cyA9IHt9KQpDb25zb2xlCglmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwoJYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQAAAAAAAAAA/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					292,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								120
							],
							[
								201,
								205
							],
							[
								248,
								253
							],
							[
								323,
								354
							],
							[
								1010,
								1017
							],
							[
								1135,
								1152
							],
							[
								1184,
								1194
							],
							[
								1195,
								1211
							],
							[
								1260,
								1290
							],
							[
								1445,
								1468
							],
							[
								1469,
								1490
							],
							[
								1831,
								1845
							],
							[
								2336,
								2370
							],
							[
								2698,
								2750
							],
							[
								2791,
								2824
							],
							[
								3003,
								3053
							],
							[
								3098,
								3144
							],
							[
								3252,
								3304
							]
						],
						"symlist":
						[
							" function Console(opts = {})",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions={}, callback )"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAQ29uc29sZShvcHRzID0ge30pCkNvbnNvbGUKCWZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCglhZGRNaXNzaW5nTWV0aG9kcyhjb25zKQpDb25zb2xlLnByb3RvdHlwZS5jb25maWcgPSBjb25maWcob2JqID0ge30pCkNvbnNvbGVPcHRpb25zKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucy5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpAAAAAAAAAAAnAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJwEAAENvbnNvbGUob3B0cyA9IHt9KQpDb25zb2xlCglmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucwoJYWRkTWlzc2luZ01ldGhvZHMoY29ucykKQ29uc29sZS5wcm90b3R5cGUuY29uZmlnID0gY29uZmlnKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMubWVyZ2UgPSBmdW5jdGlvbihvcHRzLCAuLi5hcmdzKQpDb25zb2xlU2V0dXAoaW5zcGVjdE9wdGlvbnM9e30sIGNhbGxiYWNrICkAAAAAAAAAACcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					293,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
						"symkeys":
						[
							[
								92,
								120
							],
							[
								201,
								205
							],
							[
								248,
								253
							],
							[
								323,
								354
							],
							[
								1010,
								1017
							],
							[
								1135,
								1152
							],
							[
								1184,
								1194
							],
							[
								1195,
								1211
							],
							[
								1260,
								1290
							],
							[
								1445,
								1468
							],
							[
								1469,
								1490
							],
							[
								1831,
								1845
							],
							[
								2336,
								2370
							],
							[
								2698,
								2750
							],
							[
								2791,
								2824
							],
							[
								3003,
								3053
							],
							[
								3098,
								3144
							],
							[
								3252,
								3304
							]
						],
						"symlist":
						[
							" function Console(opts = {})",
							"f =>",
							"fd =>",
							"consoleWidth = (fd = termFd) =>",
							"Console",
							".inspect = arg =>",
							" out =>",
							" (...args) =>",
							"inspectFunction = (...args) =>",
							"logFunction = output =>",
							" function(...args)",
							"ConsoleOptions",
							" function addMissingMethods(cons)",
							"Console.prototype.config = function config(obj = {})",
							"function ConsoleOptions(obj = {})",
							"ConsoleOptions.prototype.merge = function(...args)",
							"ConsoleOptions.merge = function(opts, ...args)",
							" function ConsoleSetup(inspectOptions={}, callback )"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAnAQAAQ29uc29sZShvcHRzID0ge30pCkNvbnNvbGUKCWZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zCglhZGRNaXNzaW5nTWV0aG9kcyhjb25zKQpDb25zb2xlLnByb3RvdHlwZS5jb25maWcgPSBjb25maWcob2JqID0ge30pCkNvbnNvbGVPcHRpb25zKG9iaiA9IHt9KQpDb25zb2xlT3B0aW9ucy5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiguLi5hcmdzKQpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpCkNvbnNvbGVTZXR1cChpbnNwZWN0T3B0aW9ucz17fSwgY2FsbGJhY2sgKQAAAAAAAAAAJwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcBAABDb25zb2xlKG9wdHMgPSB7fSkKQ29uc29sZQoJZnVuY3Rpb24oLi4uYXJncykKQ29uc29sZU9wdGlvbnMKCWFkZE1pc3NpbmdNZXRob2RzKGNvbnMpCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGNvbmZpZyhvYmogPSB7fSkKQ29uc29sZU9wdGlvbnMob2JqID0ge30pCkNvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkNvbnNvbGVPcHRpb25zLm1lcmdlID0gZnVuY3Rpb24ob3B0cywgLi4uYXJncykKQ29uc29sZVNldHVwKGluc3BlY3RPcHRpb25zPXt9LCBjYWxsYmFjayApAAAAAAAAAAAnAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "quickjs-gpio.c",
			"settings":
			{
				"buffer_size": 5340,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					164,
					1,
					"insert",
					{
						"characters": "JS_V"
					},
					"BQAAAA8BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAAQAQAAAAAAAAwAAABKU19VTkRFRklORUQQAQAAAAAAABEBAAAAAAAAAAAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAQAAAAAAABsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					165,
					1,
					"left_delete",
					null,
					"AQAAABIBAAAAAAAAEgEAAAAAAAABAAAAVg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAQAAAAAAABMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "TAG_UNDEFINED"
					},
					"DQAAABIBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAXAQAAAAAAAAAAAAAXAQAAAAAAABgBAAAAAAAAAAAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABsBAAAAAAAAAAAAABsBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAdAQAAAAAAAAAAAAAdAQAAAAAAAB4BAAAAAAAAAAAAAB4BAAAAAAAAHwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAQAAAAAAABIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACEBAAAAAAAAIgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAEBgAAAAAAABoFAAAgIGNhc2UgR1BJT19NRVRIT0RfUkVBRDogewogICAgICB1aW50MzJfdCBibG9ja19zaXplID0gMTAyNDA7CgogICAgICBpZighKGFyID0gZ3Bpb19yZWFkX25ldygpKSkKICAgICAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICAgICAgZ3Bpb19yZWFkX3N1cHBvcnRfY29tcHJlc3Npb25fYWxsKGFyKTsKICAgICAgZ3Bpb19yZWFkX3N1cHBvcnRfZmlsdGVyX2FsbChhcik7CiAgICAgIGdwaW9fcmVhZF9zdXBwb3J0X2Zvcm1hdF9hbGwoYXIpOwoKICAgICAgaWYoYXJnYyA+IDEgJiYgSlNfSXNOdW1iZXIoYXJndlsxXSkpIHsKICAgICAgICBKU19Ub1VpbnQzMihjdHgsICZibG9ja19zaXplLCBhcmd2WzFdKTsKICAgICAgfQogICAgICBpZihKU19Jc1N0cmluZyhhcmd2WzBdKSkgewogICAgICAgIHdjaGFyX3QqIGZpbGVuYW1lID0ganNfdG93c3RyaW5nKGN0eCwgYXJndlswXSk7CiAgICAgICAgaW50IHIgPSBncGlvX3JlYWRfb3Blbl9maWxlbmFtZV93KGFyLCBmaWxlbmFtZSwgYmxvY2tfc2l6ZSk7CiAgICAgICAganNfZnJlZShjdHgsIGZpbGVuYW1lKTsKCiAgICAgICAgaWYociAhPSBHUElPX09LKSB7CiAgICAgICAgICByZXQgPSBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCBncGlvX2Vycm9yX3N0cmluZyhhcikpOwogICAgICAgICAgZ3Bpb19yZWFkX2ZyZWUoYXIpOwogICAgICAgICAgcmV0dXJuIHJldDsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldCA9IGpzX2dwaW9fd3JhcF9wcm90byhjdHgsIHByb3RvLCBhcik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHUElPX01FVEhPRF9XUklURTogewogICAgICBpZighKGFyID0gZ3Bpb193cml0ZV9uZXcoKSkpCiAgICAgICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgICAgIGlmKEpTX0lzU3RyaW5nKGFyZ3ZbMF0pKSB7CiAgICAgICAgd2NoYXJfdCogZmlsZW5hbWUgPSBqc190b3dzdHJpbmcoY3R4LCBhcmd2WzBdKTsKICAgICAgICBpbnQgciA9IGdwaW9fd3JpdGVfb3Blbl9maWxlbmFtZV93KGFyLCBmaWxlbmFtZSk7CiAgICAgICAganNfZnJlZShjdHgsIGZpbGVuYW1lKTsKCiAgICAgICAgaWYociAhPSBHUElPX09LKSB7CiAgICAgICAgICByZXQgPSBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCBncGlvX2Vycm9yX3N0cmluZyhhcikpOwogICAgICAgICAgZ3Bpb19yZWFkX2ZyZWUoYXIpOwogICAgICAgICAgcmV0dXJuIHJldDsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0ID0ganNfZ3Bpb193cmFwX3Byb3RvKGN0eCwgcHJvdG8sIGFyKTsKICAgICAgYnJlYWs7CiAgICB9",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADBgAAAAAAAB0LAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAIMAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADDAAAAAAAAI0LAAAKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19yZWFkKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgc3RydWN0IGdwaW8qIGFyOwogIHVpbnQ4X3QqIHB0cjsKICBzaXplX3QgbGVuOwogIHNzaXplX3QgcjsKICBzaXplX3Qgb2Zmc2V0ID0gMCwgbGVuZ3RoID0gMDsKCiAgaWYoIShhciA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZihhcmdjIDwgMSB8fCAhanNfaXNfYXJyYXlidWZmZXIoY3R4LCBhcmd2WzBdKSkgewogICAgdm9pZCogZGF0YTsKICAgIHNpemVfdCBzaXplOwogICAgbGFfaW50NjRfdCBvZmZzZXQ7CiAgICBzd2l0Y2goZ3Bpb19yZWFkX2RhdGFfYmxvY2soYXIsICZkYXRhLCAmc2l6ZSwgJm9mZnNldCkpIHsKICAgICAgY2FzZSBHUElPX09LOiB7CiAgICAgICAgc3RydWN0IEdQSU9JbnN0YW5jZSogYWJ1ZiA9IGpzX21hbGxvYyhjdHgsIHNpemVvZihzdHJ1Y3QgR1BJT0luc3RhbmNlKSk7CiAgICAgICAgYWJ1Zi0+Z3BpbyA9IEpTX0R1cFZhbHVlKGN0eCwgdGhpc192YWwpOwogICAgICAgIHJldCA9IEpTX05ld0FycmF5QnVmZmVyKGN0eCwgZGF0YSwgc2l6ZSwganNfZ3Bpb19mcmVlX2J1ZmZlciwgYWJ1ZiwgRkFMU0UpOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGNhc2UgR1BJT19FT0Y6IHsKICAgICAgICByZXQgPSBKU19OVUxMOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGNhc2UgR1BJT19GQVRBTDogewogICAgICAgIHJldCA9IEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJsaWJncGlvIGVycm9yOiAlcyIsIGdwaW9fZXJyb3Jfc3RyaW5nKGFyKSk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gcmV0OwogIH0KCiAgaWYoIShwdHIgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZsZW4sIGFyZ3ZbMF0pKSkKICAgIHJldHVybiBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiRmFpbGVkIGdldHRpbmcgQXJyYXlCdWZmZXIgZGF0YSIpOwoKICBpZihhcmdjID49IDIgJiYgSlNfSXNOdW1iZXIoYXJndlsxXSkpIHsKICAgIEpTX1RvSW5kZXgoY3R4LCAmb2Zmc2V0LCBhcmd2WzFdKTsKICAgIGlmKG9mZnNldCA+IGxlbikKICAgICAgb2Zmc2V0ID0gbGVuOwogIH0KCiAgbGVuZ3RoID0gbGVuIC0gb2Zmc2V0OwoKICBpZihhcmdjID49IDMgJiYgSlNfSXNOdW1iZXIoYXJndlsyXSkpIHsKICAgIEpTX1RvSW5kZXgoY3R4LCAmbGVuZ3RoLCBhcmd2WzJdKTsKICAgIGlmKGxlbmd0aCA+IChsZW4gLSBvZmZzZXQpKQogICAgICBsZW5ndGggPSAobGVuIC0gb2Zmc2V0KTsKICB9CgogIGlmKChyID0gZ3Bpb19yZWFkX2RhdGEoYXIsIHB0ciArIG9mZnNldCwgbGVuZ3RoKSkgPj0gMCkKICAgIHJldCA9IEpTX05ld0ludDY0KGN0eCwgcik7CiAgZWxzZQogICAgcmV0ID0gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImxpYmdwaW8gZXJyb3I6ICVzIiwgZ3Bpb19lcnJvcl9zdHJpbmcoYXIpKTsKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3NlZWsoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBzdHJ1Y3QgZ3BpbyogYXI7CiAgaW50NjRfdCBvZmZzZXQgPSAwOwogIGludDMyX3Qgd2hlbmNlID0gMDsKCiAgaWYoIShhciA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBKU19Ub0ludDY0KGN0eCwgJm9mZnNldCwgYXJndlswXSk7CiAgSlNfVG9JbnQzMihjdHgsICZ3aGVuY2UsIGFyZ3ZbMV0pOwoKICByZXQgPSBKU19OZXdJbnQ2NChjdHgsIGdwaW9fc2Vla19kYXRhKGFyLCBvZmZzZXQsIHdoZW5jZSkpOwogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fZmlsdGVyYnl0ZXMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBzdHJ1Y3QgZ3BpbyogYXI7CiAgaW50MzJfdCBpbmRleCA9IC0xOwoKICBpZighKGFyID0ganNfZ3Bpb19kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKGFyZ2MgPj0gMSkKICAgIEpTX1RvSW50MzIoY3R4LCAmaW5kZXgsIGFyZ3ZbMF0pOwoKICByZXQgPSBKU19OZXdJbnQ2NChjdHgsIGdwaW9fZmlsdGVyX2J5dGVzKGFyLCBpbmRleCkpOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2Nsb3NlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgc3RydWN0IGdwaW8qIGFyOwoKICBpZighKGFyID0ganNfZ3Bpb19kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHJldCA9IEpTX05ld0ludDMyKGN0eCwgZ3Bpb19yZWFkX2Nsb3NlKGFyKSk7CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fdmVyc2lvbihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHJldHVybiBKU19OZXdTdHJpbmcoY3R4LCBncGlvX3ZlcnNpb25fZGV0YWlscygpKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19pdGVyYXRvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHJldHVybiBKU19EdXBWYWx1ZShjdHgsIHRoaXNfdmFsKTsKfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACDAAAAAAAAI8XAAAAAAAAAAAAAAAA8L8"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFgNAAAAAAAAWQ0AAAAAAAAAAAAAWQ0AAAAAAABZDQAAAAAAAJICAAAgIEpTX0lURVJBVE9SX05FWFRfREVGKCJuZXh0IiwgMCwganNfZ3Bpb19uZXh0LCAwKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJmb3JtYXQiLCBqc19ncGlvX2dldHRlciwgMCwgR1BJT19QUk9QX0ZPUk1BVCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiY29tcHJlc3Npb24iLCBqc19ncGlvX2dldHRlciwgMCwgR1BJT19QUk9QX0NPTVBSRVNTSU9OKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJmaWx0ZXJzIiwganNfZ3Bpb19nZXR0ZXIsIDAsIEdQSU9fUFJPUF9GSUxURVJTKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJmaWxlQ291bnQiLCBqc19ncGlvX2dldHRlciwgMCwgR1BJT19QUk9QX0ZJTEVDT1VOVCksCiAgICBKU19DRlVOQ19ERUYoInJlYWQiLCAxLCBqc19ncGlvX3JlYWQpLAogICAgSlNfQ0ZVTkNfREVGKCJzZWVrIiwgMiwganNfZ3Bpb19zZWVrKSwKICAgIEpTX0NGVU5DX0RFRigiZXh0cmFjdCIsIDEsIGpzX2dwaW9fZXh0cmFjdCksCiAgICBKU19DRlVOQ19ERUYoImZpbHRlckJ5dGVzIiwgMSwganNfZ3Bpb19maWx0ZXJieXRlcyksCiAgICBKU19DRlVOQ19ERUYoImNsb3NlIiwgMCwganNfZ3Bpb19jbG9zZSksCiAgICBKU19DRlVOQ19ERUYoIltTeW1ib2wuaXRlcmF0b3JdIiwgMCwganNfZ3Bpb19pdGVyYXRvciks",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYDQAAAAAAAOoPAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"cut",
					null,
					"AQAAAPoAAAAAAAAA+gAAAAAAAAAmAAAAZ3Bpb19wcm90byA9IHsudGFnID0gSlNfVEFHX1VOREVGSU5FRH0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6AAAAAAAAACABAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"paste",
					null,
					"AQAAAPoAAAAAAAAAIAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6AAAAAAAAAPoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACABAAAAAAAAIQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgAQAAAAAAACABAAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"paste",
					null,
					"AQAAACEBAAAAAAAARwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "ctor"
					},
					"BQAAACYBAAAAAAAAJwEAAAAAAAAAAAAAJwEAAAAAAAAnAQAAAAAAAAUAAABwcm90bycBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAApAQAAAAAAAAAAAAApAQAAAAAAACoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmAQAAAAAAACsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAABsEgAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtZ3Bpby5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9LGdwaW9fY3RvciA9IHsudGFnID0gSlNfVEFHX1VOREVGSU5FRH07CgplbnVtIHsgR1BJT19NRVRIT0RfUkVBRCwgR1BJT19NRVRIT0RfV1JJVEUsIEdQSU9fTUVUSE9EX1JFQURGSUxFLCBHUElPX01FVEhPRF9XUklURUZJTEUgfTsKZW51bSB7IEdQSU9fUFJPUF9GT1JNQVQsIEdQSU9fUFJPUF9DT01QUkVTU0lPTiwgR1BJT19QUk9QX0ZJTFRFUlMsIEdQSU9fUFJPUF9GSUxFQ09VTlQgfTsKCnN0cnVjdCBncGlvKgpqc19ncGlvX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHN0cnVjdCBncGlvKiBhcjsKICBhciA9IEpTX0dldE9wYXF1ZTIoY3R4LCB2YWx1ZSwganNfZ3Bpb19jbGFzc19pZCk7CiAgcmV0dXJuIGFyOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3dyYXBfcHJvdG8oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBwcm90bywgc3RydWN0IGdwaW8qIGFyKSB7CiAgSlNWYWx1ZSBvYmo7CgogIGlmKGpzX2dwaW9fY2xhc3NfaWQgPT0gMCkKICAgIGpzX2dwaW9faW5pdChjdHgsIDApOwogIGlmKEpTX0lzTnVsbChwcm90bykgfHwgSlNfSXNVbmRlZmluZWQocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIGdwaW9fcHJvdG8pOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfZ3Bpb19jbGFzc19pZCk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgYXIpOwoKICByZXR1cm4gb2JqOwpmYWlsOgogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb193cmFwKEpTQ29udGV4dCogY3R4LCBzdHJ1Y3QgZ3BpbyogYXIpIHsKICByZXR1cm4ganNfZ3Bpb193cmFwX3Byb3RvKGN0eCwgZ3Bpb19wcm90bywgYXIpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2Z1bmN0aW9ucyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGFyID0gMDsKICBKU1ZhbHVlIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCB0aGlzX3ZhbCwgInByb3RvdHlwZSIpOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgCiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2dldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgZ3BpbyogYXI7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoYXIgPSBqc19ncGlvX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIEdQSU9fUFJPUF9GT1JNQVQ6IHsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgZ3Bpb19mb3JtYXRfbmFtZShhcikpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19QUk9QX0NPTVBSRVNTSU9OOiB7CiAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIGdwaW9fY29tcHJlc3Npb25fbmFtZShhcikpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19QUk9QX0ZJTFRFUlM6IHsKICAgICAgaW50IGksIG51bV9maWx0ZXJzID0gZ3Bpb19maWx0ZXJfY291bnQoYXIpOwogICAgICByZXQgPSBKU19OZXdBcnJheShjdHgpOwogICAgICBmb3IoaSA9IDA7IGkgPCBudW1fZmlsdGVyczsgaSsrKSB7CiAgICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIGksIEpTX05ld1N0cmluZyhjdHgsIGdwaW9fZmlsdGVyX25hbWUoYXIsIGkpKSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fUFJPUF9GSUxFQ09VTlQ6IHsKICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgZ3Bpb19maWxlX2NvdW50KGFyKSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3NldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGludCBtYWdpYykgewogIHN0cnVjdCBncGlvKiBhcjsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShhciA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBvYmogPSBKU19VTkRFRklORUQ7CiAgSlNWYWx1ZSBwcm90bzsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgbmV3X3RhcmdldCwgInByb3RvdHlwZSIpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHByb3RvKSkKICAgIGdvdG8gZmFpbDsKCiAgcmV0dXJuIGpzX2dwaW9fd3JhcF9wcm90byhjdHgsIHByb3RvLCAwKTsKCmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CiAKCnN0YXRpYyB2b2lkCmpzX2dwaW9fZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgc3RydWN0IGdwaW8qIGFyID0gSlNfR2V0T3BhcXVlKHZhbCwganNfZ3Bpb19jbGFzc19pZCk7CiAgaWYoYXIpIHsKICAgIGdwaW9fZnJlZShhcik7CiAgfQogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCB2YWwpOwp9CgpzdGF0aWMgSlNDbGFzc0RlZiBqc19ncGlvX2NsYXNzID0gewogICAgLmNsYXNzX25hbWUgPSAiR1BJTyIsCiAgICAuZmluYWxpemVyID0ganNfZ3Bpb19maW5hbGl6ZXIsCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfZ3Bpb19mdW5jc1tdID0gewogICAKCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIkdQSU8iLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfZ3Bpb19zdGF0aWNfZnVuY3NbXSA9IHsKICAgIEpTX1BST1BfSU5UMzJfREVGKCJJTlBVVCIsIDAsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiT1VUUFVUIiwgMSwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKCn07CgppbnQKanNfZ3Bpb19pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBpZihqc19ncGlvX2NsYXNzX2lkID09IDApIHsKICAgIEpTX05ld0NsYXNzSUQoJmpzX2dwaW9fY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19ncGlvX2NsYXNzX2lkLCAmanNfZ3Bpb19jbGFzcyk7CgogICAgZ3Bpb19jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX2dwaW9fY29uc3RydWN0b3IsICJHUElPIiwgMSwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogICAgZ3Bpb19wcm90byA9IEpTX05ld09iamVjdChjdHgpOwoKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgZ3Bpb19wcm90bywganNfZ3Bpb19mdW5jcywgY291bnRvZihqc19ncGlvX2Z1bmNzKSk7CiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGdwaW9fY3RvciwganNfZ3Bpb19zdGF0aWNfZnVuY3MsIGNvdW50b2YoanNfZ3Bpb19zdGF0aWNfZnVuY3MpKTsKICAgIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19ncGlvX2NsYXNzX2lkLCBncGlvX3Byb3RvKTsKICB9CgogIGlmKG0pIHsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIiwgZ3Bpb19jdG9yKTsKICB9CgogIHJldHVybiAwOwp9CgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX2dwaW8KI2VuZGlmCgpWSVNJQkxFIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBpZighKG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19ncGlvX2luaXQpKSkKICAgIHJldHVybiBtOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIik7CiAgcmV0dXJuIG07Cn0KAAAAAAAAAABgEgAAAAAAAAAAAAAAAAAAAAAAAGASAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAQAAAAAAACoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgEgAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtZ3Bpby5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9LCBncGlvX2N0b3IgPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9OwoKZW51bSB7IEdQSU9fTUVUSE9EX1JFQUQsIEdQSU9fTUVUSE9EX1dSSVRFLCBHUElPX01FVEhPRF9SRUFERklMRSwgR1BJT19NRVRIT0RfV1JJVEVGSUxFIH07CmVudW0geyBHUElPX1BST1BfRk9STUFULCBHUElPX1BST1BfQ09NUFJFU1NJT04sIEdQSU9fUFJPUF9GSUxURVJTLCBHUElPX1BST1BfRklMRUNPVU5UIH07CgpzdHJ1Y3QgZ3BpbyoKanNfZ3Bpb19kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBzdHJ1Y3QgZ3BpbyogYXI7CiAgYXIgPSBKU19HZXRPcGFxdWUyKGN0eCwgdmFsdWUsIGpzX2dwaW9fY2xhc3NfaWQpOwogIHJldHVybiBhcjsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb193cmFwX3Byb3RvKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvdG8sIHN0cnVjdCBncGlvKiBhcikgewogIEpTVmFsdWUgb2JqOwoKICBpZihqc19ncGlvX2NsYXNzX2lkID09IDApCiAgICBqc19ncGlvX2luaXQoY3R4LCAwKTsKICBpZihKU19Jc051bGwocHJvdG8pIHx8IEpTX0lzVW5kZWZpbmVkKHByb3RvKSkKICAgIHByb3RvID0gSlNfRHVwVmFsdWUoY3R4LCBncGlvX3Byb3RvKTsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX2dwaW9fY2xhc3NfaWQpOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIGFyKTsKCiAgcmV0dXJuIG9iajsKZmFpbDoKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fd3JhcChKU0NvbnRleHQqIGN0eCwgc3RydWN0IGdwaW8qIGFyKSB7CiAgcmV0dXJuIGpzX2dwaW9fd3JhcF9wcm90byhjdHgsIGdwaW9fcHJvdG8sIGFyKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19mdW5jdGlvbnMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIHN0cnVjdCBncGlvKiBhciA9IDA7CiAgSlNWYWx1ZSBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgdGhpc192YWwsICJwcm90b3R5cGUiKTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgc3dpdGNoKG1hZ2ljKSB7fQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2dldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgZ3BpbyogYXI7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoYXIgPSBqc19ncGlvX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIEdQSU9fUFJPUF9GT1JNQVQ6IHsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgZ3Bpb19mb3JtYXRfbmFtZShhcikpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19QUk9QX0NPTVBSRVNTSU9OOiB7CiAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIGdwaW9fY29tcHJlc3Npb25fbmFtZShhcikpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19QUk9QX0ZJTFRFUlM6IHsKICAgICAgaW50IGksIG51bV9maWx0ZXJzID0gZ3Bpb19maWx0ZXJfY291bnQoYXIpOwogICAgICByZXQgPSBKU19OZXdBcnJheShjdHgpOwogICAgICBmb3IoaSA9IDA7IGkgPCBudW1fZmlsdGVyczsgaSsrKSB7CiAgICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIGksIEpTX05ld1N0cmluZyhjdHgsIGdwaW9fZmlsdGVyX25hbWUoYXIsIGkpKSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fUFJPUF9GSUxFQ09VTlQ6IHsKICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgZ3Bpb19maWxlX2NvdW50KGFyKSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3NldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGludCBtYWdpYykgewogIHN0cnVjdCBncGlvKiBhcjsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShhciA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBvYmogPSBKU19VTkRFRklORUQ7CiAgSlNWYWx1ZSBwcm90bzsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgbmV3X3RhcmdldCwgInByb3RvdHlwZSIpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHByb3RvKSkKICAgIGdvdG8gZmFpbDsKCiAgcmV0dXJuIGpzX2dwaW9fd3JhcF9wcm90byhjdHgsIHByb3RvLCAwKTsKCmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgdm9pZApqc19ncGlvX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIHN0cnVjdCBncGlvKiBhciA9IEpTX0dldE9wYXF1ZSh2YWwsIGpzX2dwaW9fY2xhc3NfaWQpOwogIGlmKGFyKSB7CiAgICBncGlvX2ZyZWUoYXIpOwogIH0KICBKU19GcmVlVmFsdWVSVChydCwgdmFsKTsKfQoKc3RhdGljIEpTQ2xhc3NEZWYganNfZ3Bpb19jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIkdQSU8iLAogICAgLmZpbmFsaXplciA9IGpzX2dwaW9fZmluYWxpemVyLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2dwaW9fZnVuY3NbXSA9IHsKCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIkdQSU8iLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfZ3Bpb19zdGF0aWNfZnVuY3NbXSA9IHsKICAgIEpTX1BST1BfSU5UMzJfREVGKCJJTlBVVCIsIDAsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiT1VUUFVUIiwgMSwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKCn07CgppbnQKanNfZ3Bpb19pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBpZihqc19ncGlvX2NsYXNzX2lkID09IDApIHsKICAgIEpTX05ld0NsYXNzSUQoJmpzX2dwaW9fY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19ncGlvX2NsYXNzX2lkLCAmanNfZ3Bpb19jbGFzcyk7CgogICAgZ3Bpb19jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX2dwaW9fY29uc3RydWN0b3IsICJHUElPIiwgMSwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogICAgZ3Bpb19wcm90byA9IEpTX05ld09iamVjdChjdHgpOwoKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgZ3Bpb19wcm90bywganNfZ3Bpb19mdW5jcywgY291bnRvZihqc19ncGlvX2Z1bmNzKSk7CiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGdwaW9fY3RvciwganNfZ3Bpb19zdGF0aWNfZnVuY3MsIGNvdW50b2YoanNfZ3Bpb19zdGF0aWNfZnVuY3MpKTsKICAgIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19ncGlvX2NsYXNzX2lkLCBncGlvX3Byb3RvKTsKICB9CgogIGlmKG0pIHsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIiwgZ3Bpb19jdG9yKTsKICB9CgogIHJldHVybiAwOwp9CgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX2dwaW8KI2VuZGlmCgpWSVNJQkxFIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBpZighKG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19ncGlvX2luaXQpKSkKICAgIHJldHVybiBtOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIik7CiAgcmV0dXJuIG07Cn0KAAAAAAAAAABgEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgEAAAAAAAAqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "close"
					},
					"BgAAAKwMAAAAAAAArQwAAAAAAAAAAAAArQwAAAAAAACtDAAAAAAAAAQAAABmcmVlrQwAAAAAAACuDAAAAAAAAAAAAACuDAAAAAAAAK8MAAAAAAAAAAAAAK8MAAAAAAAAsAwAAAAAAAAAAAAAsAwAAAAAAACxDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAwAAAAAAACwDAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhEgAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtZ3Bpby5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9LCBncGlvX2N0b3IgPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9OwoKZW51bSB7IEdQSU9fTUVUSE9EX1JFQUQsIEdQSU9fTUVUSE9EX1dSSVRFLCBHUElPX01FVEhPRF9SRUFERklMRSwgR1BJT19NRVRIT0RfV1JJVEVGSUxFIH07CmVudW0geyBHUElPX1BST1BfRk9STUFULCBHUElPX1BST1BfQ09NUFJFU1NJT04sIEdQSU9fUFJPUF9GSUxURVJTLCBHUElPX1BST1BfRklMRUNPVU5UIH07CgpzdHJ1Y3QgZ3BpbyoKanNfZ3Bpb19kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBzdHJ1Y3QgZ3BpbyogYXI7CiAgYXIgPSBKU19HZXRPcGFxdWUyKGN0eCwgdmFsdWUsIGpzX2dwaW9fY2xhc3NfaWQpOwogIHJldHVybiBhcjsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb193cmFwX3Byb3RvKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvdG8sIHN0cnVjdCBncGlvKiBhcikgewogIEpTVmFsdWUgb2JqOwoKICBpZihqc19ncGlvX2NsYXNzX2lkID09IDApCiAgICBqc19ncGlvX2luaXQoY3R4LCAwKTsKICBpZihKU19Jc051bGwocHJvdG8pIHx8IEpTX0lzVW5kZWZpbmVkKHByb3RvKSkKICAgIHByb3RvID0gSlNfRHVwVmFsdWUoY3R4LCBncGlvX3Byb3RvKTsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX2dwaW9fY2xhc3NfaWQpOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIGFyKTsKCiAgcmV0dXJuIG9iajsKZmFpbDoKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fd3JhcChKU0NvbnRleHQqIGN0eCwgc3RydWN0IGdwaW8qIGFyKSB7CiAgcmV0dXJuIGpzX2dwaW9fd3JhcF9wcm90byhjdHgsIGdwaW9fcHJvdG8sIGFyKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19mdW5jdGlvbnMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIHN0cnVjdCBncGlvKiBhciA9IDA7CiAgSlNWYWx1ZSBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgdGhpc192YWwsICJwcm90b3R5cGUiKTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgc3dpdGNoKG1hZ2ljKSB7fQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2dldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgZ3BpbyogYXI7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoYXIgPSBqc19ncGlvX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIEdQSU9fUFJPUF9GT1JNQVQ6IHsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgZ3Bpb19mb3JtYXRfbmFtZShhcikpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19QUk9QX0NPTVBSRVNTSU9OOiB7CiAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIGdwaW9fY29tcHJlc3Npb25fbmFtZShhcikpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19QUk9QX0ZJTFRFUlM6IHsKICAgICAgaW50IGksIG51bV9maWx0ZXJzID0gZ3Bpb19maWx0ZXJfY291bnQoYXIpOwogICAgICByZXQgPSBKU19OZXdBcnJheShjdHgpOwogICAgICBmb3IoaSA9IDA7IGkgPCBudW1fZmlsdGVyczsgaSsrKSB7CiAgICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIGksIEpTX05ld1N0cmluZyhjdHgsIGdwaW9fZmlsdGVyX25hbWUoYXIsIGkpKSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fUFJPUF9GSUxFQ09VTlQ6IHsKICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgZ3Bpb19maWxlX2NvdW50KGFyKSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3NldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGludCBtYWdpYykgewogIHN0cnVjdCBncGlvKiBhcjsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShhciA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBvYmogPSBKU19VTkRFRklORUQ7CiAgSlNWYWx1ZSBwcm90bzsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgbmV3X3RhcmdldCwgInByb3RvdHlwZSIpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHByb3RvKSkKICAgIGdvdG8gZmFpbDsKCiAgcmV0dXJuIGpzX2dwaW9fd3JhcF9wcm90byhjdHgsIHByb3RvLCAwKTsKCmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgdm9pZApqc19ncGlvX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIHN0cnVjdCBncGlvKiBhciA9IEpTX0dldE9wYXF1ZSh2YWwsIGpzX2dwaW9fY2xhc3NfaWQpOwogIGlmKGFyKSB7CiAgICBncGlvX2Nsb3NlKGFyKTsKICB9CiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbCk7Cn0KCnN0YXRpYyBKU0NsYXNzRGVmIGpzX2dwaW9fY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJHUElPIiwKICAgIC5maW5hbGl6ZXIgPSBqc19ncGlvX2ZpbmFsaXplciwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19ncGlvX2Z1bmNzW10gPSB7CgogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJHUElPIiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2dwaW9fc3RhdGljX2Z1bmNzW10gPSB7CiAgICBKU19QUk9QX0lOVDMyX0RFRigiSU5QVVQiLCAwLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk9VVFBVVCIsIDEsIEpTX1BST1BfRU5VTUVSQUJMRSksCgp9OwoKaW50CmpzX2dwaW9faW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKCiAgaWYoanNfZ3Bpb19jbGFzc19pZCA9PSAwKSB7CiAgICBKU19OZXdDbGFzc0lEKCZqc19ncGlvX2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfZ3Bpb19jbGFzc19pZCwgJmpzX2dwaW9fY2xhc3MpOwoKICAgIGdwaW9fY3RvciA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19ncGlvX2NvbnN0cnVjdG9yLCAiR1BJTyIsIDEsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKICAgIGdwaW9fcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGdwaW9fcHJvdG8sIGpzX2dwaW9fZnVuY3MsIGNvdW50b2YoanNfZ3Bpb19mdW5jcykpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBncGlvX2N0b3IsIGpzX2dwaW9fc3RhdGljX2Z1bmNzLCBjb3VudG9mKGpzX2dwaW9fc3RhdGljX2Z1bmNzKSk7CiAgICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfZ3Bpb19jbGFzc19pZCwgZ3Bpb19wcm90byk7CiAgfQoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiR1BJTyIsIGdwaW9fY3Rvcik7CiAgfQoKICByZXR1cm4gMDsKfQoKI2lmZGVmIEpTX1NIQVJFRF9MSUJSQVJZCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9ncGlvCiNlbmRpZgoKVklTSUJMRSBKU01vZHVsZURlZioKSlNfSU5JVF9NT0RVTEUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKSB7CiAgSlNNb2R1bGVEZWYqIG07CiAgaWYoIShtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfZ3Bpb19pbml0KSkpCiAgICByZXR1cm4gbTsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiR1BJTyIpOwogIHJldHVybiBtOwp9CgAAAAAAAAAAiRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQwAAAAAAACxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"paste",
					null,
					"AgAAAOsKAAAAAAAA1gwAAAAAAAAAAAAA1gwAAAAAAADWDAAAAAAAAB4BAAAgIEpTVmFsdWUgb2JqID0gSlNfVU5ERUZJTkVEOwogIEpTVmFsdWUgcHJvdG87CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBnb3RvIGZhaWw7CgogIHJldHVybiBqc19ncGlvX3dyYXBfcHJvdG8oY3R4LCBwcm90bywgMCk7",
					"AQAAAAAAAAABAAAACQwAAAAAAADrCgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"",
					null,
					"AQAAAOwKAAAAAAAA+AoAAAAAAAAFAAAAR1BJTyo",
					"AQAAAAAAAAABAAAA7AoAAAAAAADxCgAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"",
					null,
					"AQAAAFkLAAAAAAAAZAsAAAAAAAAEAAAAR1BJTw",
					"AQAAAAAAAAABAAAAWQsAAAAAAABdCwAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "SETk,"
					},
					"BgAAAF0BAAAAAAAAXgEAAAAAAAAAAAAAXgEAAAAAAABeAQAAAAAAAEQAAABSRUFELCBHUElPX01FVEhPRF9XUklURSwgR1BJT19NRVRIT0RfUkVBREZJTEUsIEdQSU9fTUVUSE9EX1dSSVRFRklMRV4BAAAAAAAAXwEAAAAAAAAAAAAAXwEAAAAAAABgAQAAAAAAAAAAAABgAQAAAAAAAGEBAAAAAAAAAAAAAGEBAAAAAAAAYgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQEAAAAAAAChAQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					2,
					"left_delete",
					null,
					"AgAAAGEBAAAAAAAAYQEAAAAAAAABAAAALGABAAAAAAAAYAEAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAYgEAAAAAAABiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": ",GPIO_ET"
					},
					"CAAAAGABAAAAAAAAYQEAAAAAAAAAAAAAYQEAAAAAAABiAQAAAAAAAAAAAABiAQAAAAAAAGMBAAAAAAAAAAAAAGMBAAAAAAAAZAEAAAAAAAAAAAAAZAEAAAAAAABlAQAAAAAAAAAAAABlAQAAAAAAAGYBAAAAAAAAAAAAAGYBAAAAAAAAZwEAAAAAAAAAAAAAZwEAAAAAAABoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAEAAAAAAABgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					2,
					"left_delete",
					null,
					"AgAAAGcBAAAAAAAAZwEAAAAAAAABAAAAVGYBAAAAAAAAZgEAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAAaAEAAAAAAABoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "METHOD_READ"
					},
					"CwAAAGYBAAAAAAAAZwEAAAAAAAAAAAAAZwEAAAAAAABoAQAAAAAAAAAAAABoAQAAAAAAAGkBAAAAAAAAAAAAAGkBAAAAAAAAagEAAAAAAAAAAAAAagEAAAAAAABrAQAAAAAAAAAAAABrAQAAAAAAAGwBAAAAAAAAAAAAAGwBAAAAAAAAbQEAAAAAAAAAAAAAbQEAAAAAAABuAQAAAAAAAAAAAABuAQAAAAAAAG8BAAAAAAAAAAAAAG8BAAAAAAAAcAEAAAAAAAAAAAAAcAEAAAAAAABxAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgEAAAAAAABmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"cut",
					null,
					"AQAAAHUBAAAAAAAAdQEAAAAAAABaAAAAZW51bSB7IEdQSU9fUFJPUF9GT1JNQVQsIEdQSU9fUFJPUF9DT01QUkVTU0lPTiwgR1BJT19QUk9QX0ZJTFRFUlMsIEdQSU9fUFJPUF9GSUxFQ09VTlQgfTsK",
					"AQAAAAAAAAABAAAAdQEAAAAAAADPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAK0FAAAAAAAArgUAAAAAAAAAAAAArgUAAAAAAACwBQAAAAAAAAAAAACwBQAAAAAAALEFAAAAAAAAAAAAALEFAAAAAAAAswUAAAAAAAAAAAAArgUAAAAAAACuBQAAAAAAAAIAAAAgIK4FAAAAAAAAsgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQUAAAAAAACtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "\ncase"
					},
					"BwAAALIFAAAAAAAAswUAAAAAAAAAAAAAswUAAAAAAAC3BQAAAAAAAAAAAACuBQAAAAAAAK4FAAAAAAAABAAAACAgICCzBQAAAAAAALQFAAAAAAAAAAAAALQFAAAAAAAAtQUAAAAAAAAAAAAAtQUAAAAAAAC2BQAAAAAAAAAAAAC2BQAAAAAAALcFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgUAAAAAAACyBQAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " GPIO_METHOD"
					},
					"DAAAALcFAAAAAAAAuAUAAAAAAAAAAAAAuAUAAAAAAAC5BQAAAAAAAAAAAAC5BQAAAAAAALoFAAAAAAAAAAAAALoFAAAAAAAAuwUAAAAAAAAAAAAAuwUAAAAAAAC8BQAAAAAAAAAAAAC8BQAAAAAAAL0FAAAAAAAAAAAAAL0FAAAAAAAAvgUAAAAAAAAAAAAAvgUAAAAAAAC/BQAAAAAAAAAAAAC/BQAAAAAAAMAFAAAAAAAAAAAAAMAFAAAAAAAAwQUAAAAAAAAAAAAAwQUAAAAAAADCBQAAAAAAAAAAAADCBQAAAAAAAMMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwUAAAAAAAC3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "_SET:"
					},
					"BQAAAMMFAAAAAAAAxAUAAAAAAAAAAAAAxAUAAAAAAADFBQAAAAAAAAAAAADFBQAAAAAAAMYFAAAAAAAAAAAAAMYFAAAAAAAAxwUAAAAAAAAAAAAAxwUAAAAAAADIBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwUAAAAAAADDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMgFAAAAAAAAyQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAUAAAAAAADIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMkFAAAAAAAAywUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQUAAAAAAADJBQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " break;"
					},
					"BwAAAMoFAAAAAAAAywUAAAAAAAAAAAAAywUAAAAAAADMBQAAAAAAAAAAAADMBQAAAAAAAM0FAAAAAAAAAAAAAM0FAAAAAAAAzgUAAAAAAAAAAAAAzgUAAAAAAADPBQAAAAAAAAAAAADPBQAAAAAAANAFAAAAAAAAAAAAANAFAAAAAAAA0QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygUAAAAAAADKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANEFAAAAAAAA0gUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QUAAAAAAADRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"cut",
					null,
					"AQAAAK8FAAAAAAAArwUAAAAAAAAlAAAAICAgIGNhc2UgR1BJT19NRVRIT0RfU0VUOiB7IGJyZWFrOyB9Cg",
					"AQAAAAAAAAABAAAArwUAAAAAAADUBQAAAAAAAAAAAAAAAAAA"
				],
				[
					119,
					2,
					"paste",
					null,
					"AgAAAK8FAAAAAAAA1AUAAAAAAAAAAAAA1AUAAAAAAAD5BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwUAAAAAAACvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "GET"
					},
					"BAAAAOkFAAAAAAAA6gUAAAAAAAAAAAAA6gUAAAAAAADqBQAAAAAAAAMAAABTRVTqBQAAAAAAAOsFAAAAAAAAAAAAAOsFAAAAAAAA7AUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QUAAAAAAADsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOYGAAAAAAAA5wYAAAAAAAAAAAAA5wYAAAAAAADnBgAAAAAAAEsCAAAgIGNhc2UgR1BJT19QUk9QX0ZPUk1BVDogewogICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBncGlvX2Zvcm1hdF9uYW1lKGdwaW8pKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fUFJPUF9DT01QUkVTU0lPTjogewogICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBncGlvX2NvbXByZXNzaW9uX25hbWUoZ3BpbykpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19QUk9QX0ZJTFRFUlM6IHsKICAgICAgaW50IGksIG51bV9maWx0ZXJzID0gZ3Bpb19maWx0ZXJfY291bnQoZ3Bpbyk7CiAgICAgIHJldCA9IEpTX05ld0FycmF5KGN0eCk7CiAgICAgIGZvcihpID0gMDsgaSA8IG51bV9maWx0ZXJzOyBpKyspIHsKICAgICAgICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgaSwgSlNfTmV3U3RyaW5nKGN0eCwgZ3Bpb19maWx0ZXJfbmFtZShncGlvLCBpKSkpOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHUElPX1BST1BfRklMRUNPVU5UOiB7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIGdwaW9fZmlsZV9jb3VudChncGlvKSk7CiAgICAgIGJyZWFrOwogICAgfQ",
					"AQAAAAAAAAABAAAA5gYAAAAAAAAxCQAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": ":_"
					},
					"AgAAAGABAAAAAAAAYQEAAAAAAAAAAAAAYQEAAAAAAABiAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAEAAAAAAABgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					2,
					"left_delete",
					null,
					"AgAAAGEBAAAAAAAAYQEAAAAAAAABAAAAX2ABAAAAAAAAYAEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAYgEAAAAAAABiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "_PIN"
					},
					"BAAAAGABAAAAAAAAYQEAAAAAAAAAAAAAYQEAAAAAAABiAQAAAAAAAAAAAABiAQAAAAAAAGMBAAAAAAAAAAAAAGMBAAAAAAAAZAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAEAAAAAAABgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAHUBAAAAAAAAdgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQEAAAAAAAB1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					5,
					"left_delete",
					null,
					"BQAAAHUBAAAAAAAAdQEAAAAAAAABAAAAX3QBAAAAAAAAdAEAAAAAAAABAAAARHMBAAAAAAAAcwEAAAAAAAABAAAAQXIBAAAAAAAAcgEAAAAAAAABAAAARXEBAAAAAAAAcQEAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAdgEAAAAAAAB2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "GET_PIN"
					},
					"BwAAAHEBAAAAAAAAcgEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAABzAQAAAAAAAHQBAAAAAAAAAAAAAHQBAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB2AQAAAAAAAAAAAAB2AQAAAAAAAHcBAAAAAAAAAAAAAHcBAAAAAAAAeAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQEAAAAAAABxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"cut",
					null,
					"AQAAAFEBAAAAAAAAUQEAAAAAAAAUAAAAR1BJT19NRVRIT0RfU0VUX1BJTiw",
					"AQAAAAAAAAABAAAAUQEAAAAAAABlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					2,
					"paste",
					null,
					"AgAAAFEBAAAAAAAAZQEAAAAAAAAAAAAAZQEAAAAAAAB5AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQEAAAAAAABRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "INIT"
					},
					"BQAAAF0BAAAAAAAAXgEAAAAAAAAAAAAAXgEAAAAAAABeAQAAAAAAAAMAAABTRVReAQAAAAAAAF8BAAAAAAAAAAAAAF8BAAAAAAAAYAEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQEAAAAAAABgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "_OP"
					},
					"AwAAAAgGAAAAAAAACQYAAAAAAAAAAAAACQYAAAAAAAAKBgAAAAAAAAAAAAAKBgAAAAAAAAsGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAYAAAAAAAAIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					2,
					"left_delete",
					null,
					"AgAAAAoGAAAAAAAACgYAAAAAAAABAAAAUAkGAAAAAAAACQYAAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAACwYAAAAAAAALBgAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "PINT"
					},
					"BAAAAAkGAAAAAAAACgYAAAAAAAAAAAAACgYAAAAAAAALBgAAAAAAAAAAAAALBgAAAAAAAAwGAAAAAAAAAAAAAAwGAAAAAAAADQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQYAAAAAAAAJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"left_delete",
					null,
					"AQAAAAwGAAAAAAAADAYAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAADQYAAAAAAAANBgAAAAAAAAAAAAAAAG1A"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "_ON"
					},
					"AwAAAOMFAAAAAAAA5AUAAAAAAAAAAAAA5AUAAAAAAADlBQAAAAAAAAAAAADlBQAAAAAAAOYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wUAAAAAAADjBQAAAAAAAAAAAAAAAGhA"
				],
				[
					158,
					2,
					"left_delete",
					null,
					"AgAAAOUFAAAAAAAA5QUAAAAAAAABAAAATuQFAAAAAAAA5AUAAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAA5gUAAAAAAADmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "PIN"
					},
					"AwAAAOQFAAAAAAAA5QUAAAAAAAAAAAAA5QUAAAAAAADmBQAAAAAAAAAAAADmBQAAAAAAAOcFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AUAAAAAAADkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"cut",
					null,
					"AQAAAMsFAAAAAAAAywUAAAAAAAApAAAAICAgIGNhc2UgR1BJT19NRVRIT0RfU0VUX1BJTjogeyBicmVhazsgfQo",
					"AQAAAAAAAAABAAAAywUAAAAAAAD0BQAAAAAAAAAAAAAAAAAA"
				],
				[
					164,
					2,
					"paste",
					null,
					"AgAAAMsFAAAAAAAA9AUAAAAAAAAAAAAA9AUAAAAAAAAdBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywUAAAAAAADLBQAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "INIT"
					},
					"BQAAAOAFAAAAAAAA4QUAAAAAAAAAAAAA4QUAAAAAAADhBQAAAAAAAAMAAABTRVThBQAAAAAAAOIFAAAAAAAAAAAAAOIFAAAAAAAA4wUAAAAAAAAAAAAA4wUAAAAAAADkBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AUAAAAAAADjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"paste",
					null,
					"AQAAAEAMAAAAAAAAjgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAwAAAAAAABADAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "js_gpio_fun"
					},
					"DAAAAGIMAAAAAAAAYwwAAAAAAAAAAAAAYwwAAAAAAABjDAAAAAAAABQAAABqc19hcmNoaXZlX2Z1bmN0aW9uc2MMAAAAAAAAZAwAAAAAAAAAAAAAZAwAAAAAAABlDAAAAAAAAAAAAABlDAAAAAAAAGYMAAAAAAAAAAAAAGYMAAAAAAAAZwwAAAAAAAAAAAAAZwwAAAAAAABoDAAAAAAAAAAAAABoDAAAAAAAAGkMAAAAAAAAAAAAAGkMAAAAAAAAagwAAAAAAAAAAAAAagwAAAAAAABrDAAAAAAAAAAAAABrDAAAAAAAAGwMAAAAAAAAAAAAAGwMAAAAAAAAbQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgwAAAAAAAB2DAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "ctions"
					},
					"BgAAAG0MAAAAAAAAbgwAAAAAAAAAAAAAbgwAAAAAAABvDAAAAAAAAAAAAABvDAAAAAAAAHAMAAAAAAAAAAAAAHAMAAAAAAAAcQwAAAAAAAAAAAAAcQwAAAAAAAByDAAAAAAAAAAAAAByDAAAAAAAAHMMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQwAAAAAAABtDAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "initPin"
					},
					"CAAAAFgMAAAAAAAAWQwAAAAAAAAAAAAAWQwAAAAAAABZDAAAAAAAAAQAAAByZWFkWQwAAAAAAABaDAAAAAAAAAAAAABaDAAAAAAAAFsMAAAAAAAAAAAAAFsMAAAAAAAAXAwAAAAAAAAAAAAAXAwAAAAAAABdDAAAAAAAAAAAAABdDAAAAAAAAF4MAAAAAAAAAAAAAF4MAAAAAAAAXwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAwAAAAAAABcDAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAGIMAAAAAAAAYwwAAAAAAAAAAAAAYwwAAAAAAABjDAAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAAYgwAAAAAAABjDAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "J"
					},
					"AgAAAHgMAAAAAAAAeQwAAAAAAAAAAAAAeQwAAAAAAAB5DAAAAAAAABMAAABBUkNISVZFX01FVEhPRF9SRUFE",
					"AQAAAAAAAAABAAAAeAwAAAAAAACLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"left_delete",
					null,
					"AQAAAHgMAAAAAAAAeAwAAAAAAAABAAAASg",
					"AQAAAAAAAAABAAAAeQwAAAAAAAB5DAAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "GPIO_METHOD_INI"
					},
					"DwAAAHgMAAAAAAAAeQwAAAAAAAAAAAAAeQwAAAAAAAB6DAAAAAAAAAAAAAB6DAAAAAAAAHsMAAAAAAAAAAAAAHsMAAAAAAAAfAwAAAAAAAAAAAAAfAwAAAAAAAB9DAAAAAAAAAAAAAB9DAAAAAAAAH4MAAAAAAAAAAAAAH4MAAAAAAAAfwwAAAAAAAAAAAAAfwwAAAAAAACADAAAAAAAAAAAAACADAAAAAAAAIEMAAAAAAAAAAAAAIEMAAAAAAAAggwAAAAAAAAAAAAAggwAAAAAAACDDAAAAAAAAAAAAACDDAAAAAAAAIQMAAAAAAAAAAAAAIQMAAAAAAAAhQwAAAAAAAAAAAAAhQwAAAAAAACGDAAAAAAAAAAAAACGDAAAAAAAAIcMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAwAAAAAAAB4DAAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert_completion",
					{
						"completion": "GPIO_METHOD_INIT_PIN",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "GPIO_METHOD_INIT_PIN"
					},
					"AgAAAHgMAAAAAAAAeAwAAAAAAAAPAAAAR1BJT19NRVRIT0RfSU5JeAwAAAAAAACMDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwwAAAAAAACHDAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"cut",
					null,
					"AQAAAEAMAAAAAAAAQAwAAAAAAABPAAAAICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaW5pdFBpbiIsIDIsIGpzX2dwaW9fZnVuY3Rpb25zLCBHUElPX01FVEhPRF9JTklUX1BJTiksCg",
					"AQAAAAAAAAABAAAAQAwAAAAAAACPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					3,
					"paste",
					null,
					"AwAAAEAMAAAAAAAAjwwAAAAAAAAAAAAAjwwAAAAAAADeDAAAAAAAAAAAAADeDAAAAAAAAC0NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAwAAAAAAABADAAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "setPing"
					},
					"CAAAAKcMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACoDAAAAAAAAAcAAABpbml0UGluqAwAAAAAAACpDAAAAAAAAAAAAACpDAAAAAAAAKoMAAAAAAAAAAAAAKoMAAAAAAAAqwwAAAAAAAAAAAAAqwwAAAAAAACsDAAAAAAAAAAAAACsDAAAAAAAAK0MAAAAAAAAAAAAAK0MAAAAAAAArgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwwAAAAAAACuDAAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					8,
					"left_delete",
					null,
					"CAAAANoMAAAAAAAA2gwAAAAAAAABAAAATtkMAAAAAAAA2QwAAAAAAAABAAAASdgMAAAAAAAA2AwAAAAAAAABAAAAUNcMAAAAAAAA1wwAAAAAAAABAAAAX9YMAAAAAAAA1gwAAAAAAAABAAAAVNUMAAAAAAAA1QwAAAAAAAABAAAASdQMAAAAAAAA1AwAAAAAAAABAAAATtMMAAAAAAAA0wwAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAA2wwAAAAAAADbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "SET"
					},
					"AwAAANMMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADVDAAAAAAAAAAAAADVDAAAAAAAANYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wwAAAAAAADTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"insert_completion",
					{
						"completion": "GPIO_METHOD_SET_PIN",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "GPIO_METHOD_SET_PIN"
					},
					"AgAAAMcMAAAAAAAAxwwAAAAAAAAPAAAAR1BJT19NRVRIT0RfU0VUxwwAAAAAAADaDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gwAAAAAAADWDAAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": "getPin"
					},
					"BwAAAPUMAAAAAAAA9gwAAAAAAAAAAAAA9gwAAAAAAAD2DAAAAAAAAAcAAABpbml0UGlu9gwAAAAAAAD3DAAAAAAAAAAAAAD3DAAAAAAAAPgMAAAAAAAAAAAAAPgMAAAAAAAA+QwAAAAAAAAAAAAA+QwAAAAAAAD6DAAAAAAAAAAAAAD6DAAAAAAAAPsMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QwAAAAAAAD8DAAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"left_delete",
					null,
					"AQAAAP4MAAAAAAAA/gwAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA/wwAAAAAAAD/DAAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAP4MAAAAAAAA/wwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gwAAAAAAAD+DAAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					4,
					"left_delete",
					null,
					"BAAAACMNAAAAAAAAIw0AAAAAAAABAAAAVCINAAAAAAAAIg0AAAAAAAABAAAASSENAAAAAAAAIQ0AAAAAAAABAAAATiANAAAAAAAAIA0AAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAJA0AAAAAAAAkDQAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "GET"
					},
					"AwAAACANAAAAAAAAIQ0AAAAAAAAAAAAAIQ0AAAAAAAAiDQAAAAAAAAAAAAAiDQAAAAAAACMNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIA0AAAAAAAAgDQAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"left_delete",
					null,
					"AQAAACkNAAAAAAAAKQ0AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAKg0AAAAAAAAqDQAAAAAAAAAAAAAAgIFA"
				],
				[
					238,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAVEgAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtZ3Bpby5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9LCBncGlvX2N0b3IgPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9OwoKZW51bSB7IEdQSU9fTUVUSE9EX0lOSVRfUElOLEdQSU9fTUVUSE9EX1NFVF9QSU4sR1BJT19NRVRIT0RfR0VUX1BJTiB9OwoKc3RydWN0IGdwaW8qCmpzX2dwaW9fZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgZ3BpbyA9IEpTX0dldE9wYXF1ZTIoY3R4LCB2YWx1ZSwganNfZ3Bpb19jbGFzc19pZCk7CiAgcmV0dXJuIGdwaW87Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fd3JhcF9wcm90byhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHByb3RvLCBzdHJ1Y3QgZ3BpbyogZ3BpbykgewogIEpTVmFsdWUgb2JqOwoKICBpZihqc19ncGlvX2NsYXNzX2lkID09IDApCiAgICBqc19ncGlvX2luaXQoY3R4LCAwKTsKICBpZihKU19Jc051bGwocHJvdG8pIHx8IEpTX0lzVW5kZWZpbmVkKHByb3RvKSkKICAgIHByb3RvID0gSlNfRHVwVmFsdWUoY3R4LCBncGlvX3Byb3RvKTsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX2dwaW9fY2xhc3NfaWQpOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIGdwaW8pOwoKICByZXR1cm4gb2JqOwpmYWlsOgogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb193cmFwKEpTQ29udGV4dCogY3R4LCBzdHJ1Y3QgZ3BpbyogZ3BpbykgewogIHJldHVybiBqc19ncGlvX3dyYXBfcHJvdG8oY3R4LCBncGlvX3Byb3RvLCBncGlvKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19mdW5jdGlvbnMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIHN0cnVjdCBncGlvKiBncGlvID0gMDsKICBKU1ZhbHVlIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCB0aGlzX3ZhbCwgInByb3RvdHlwZSIpOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBzd2l0Y2gobWFnaWMpIHsKCiAgICBjYXNlIEdQSU9fTUVUSE9EX0lOSVRfUElOOiB7IGJyZWFrOyB9CiAgICBjYXNlIEdQSU9fTUVUSE9EX1NFVF9QSU46IHsgYnJlYWs7IH0KICAgIGNhc2UgR1BJT19NRVRIT0RfR0VUX1BJTjogeyBicmVhazsgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19nZXR0ZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHsKICAgCiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fc2V0dGVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIEpTVmFsdWVDb25zdCB2YWx1ZSwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiBzdHJ1Y3QgR1BJTyogZ3BpbzsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRCwgcHJvdG8gPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IEdQSU8pKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfZ3Bpb19jbGFzc19pZCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIGdwaW8pOwoKCmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgdm9pZApqc19ncGlvX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIHN0cnVjdCBncGlvKiBncGlvID0gSlNfR2V0T3BhcXVlKHZhbCwganNfZ3Bpb19jbGFzc19pZCk7CiAgaWYoZ3BpbykgewogICAgZ3Bpb19jbG9zZShncGlvKTsKICB9CiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbCk7Cn0KCnN0YXRpYyBKU0NsYXNzRGVmIGpzX2dwaW9fY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJHUElPIiwKICAgIC5maW5hbGl6ZXIgPSBqc19ncGlvX2ZpbmFsaXplciwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19ncGlvX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImluaXRQaW4iLCAyLCBqc19ncGlvX2Z1bmN0aW9ucywgR1BJT19NRVRIT0RfSU5JVF9QSU4pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzZXRQaW5nIiwgMiwganNfZ3Bpb19mdW5jdGlvbnMsIEdQSU9fTUVUSE9EX1NFVF9QSU4pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRQaW4iLCAxLCBqc19ncGlvX2Z1bmN0aW9ucywgR1BJT19NRVRIT0RfR0VUX1BJTiksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIkdQSU8iLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfZ3Bpb19zdGF0aWNfZnVuY3NbXSA9IHsKICAgIEpTX1BST1BfSU5UMzJfREVGKCJJTlBVVCIsIDAsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiT1VUUFVUIiwgMSwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKCn07CgppbnQKanNfZ3Bpb19pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBpZihqc19ncGlvX2NsYXNzX2lkID09IDApIHsKICAgIEpTX05ld0NsYXNzSUQoJmpzX2dwaW9fY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19ncGlvX2NsYXNzX2lkLCAmanNfZ3Bpb19jbGFzcyk7CgogICAgZ3Bpb19jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX2dwaW9fY29uc3RydWN0b3IsICJHUElPIiwgMSwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogICAgZ3Bpb19wcm90byA9IEpTX05ld09iamVjdChjdHgpOwoKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgZ3Bpb19wcm90bywganNfZ3Bpb19mdW5jcywgY291bnRvZihqc19ncGlvX2Z1bmNzKSk7CiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGdwaW9fY3RvciwganNfZ3Bpb19zdGF0aWNfZnVuY3MsIGNvdW50b2YoanNfZ3Bpb19zdGF0aWNfZnVuY3MpKTsKICAgIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19ncGlvX2NsYXNzX2lkLCBncGlvX3Byb3RvKTsKICB9CgogIGlmKG0pIHsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIiwgZ3Bpb19jdG9yKTsKICB9CgogIHJldHVybiAwOwp9CgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX2dwaW8KI2VuZGlmCgpWSVNJQkxFIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBpZighKG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19ncGlvX2luaXQpKSkKICAgIHJldHVybiBtOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIik7CiAgcmV0dXJuIG07Cn0KAAAAAAAAAAAuEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQ0AAAAAAAApDQAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"",
					null,
					"AgAAADsJAAAAAAAARgkAAAAAAAALAAAAc3RydWN0IEdQSU/OCAAAAAAAANkIAAAAAAAACwAAAHN0cnVjdCBHUElP",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "\ngp"
					},
					"BQAAAO0FAAAAAAAA7gUAAAAAAAAAAAAA7gUAAAAAAADyBQAAAAAAAAAAAADyBQAAAAAAAPQFAAAAAAAAAAAAAPQFAAAAAAAA9QUAAAAAAAAAAAAA9QUAAAAAAAD2BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QUAAAAAAADtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					2,
					"left_delete",
					null,
					"AgAAAPUFAAAAAAAA9QUAAAAAAAABAAAAcPQFAAAAAAAA9AUAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAA9gUAAAAAAAD2BQAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": "int32_"
					},
					"BgAAAPQFAAAAAAAA9QUAAAAAAAAAAAAA9QUAAAAAAAD2BQAAAAAAAAAAAAD2BQAAAAAAAPcFAAAAAAAAAAAAAPcFAAAAAAAA+AUAAAAAAAAAAAAA+AUAAAAAAAD5BQAAAAAAAAAAAAD5BQAAAAAAAPoFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AUAAAAAAAD0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					6,
					"left_delete",
					null,
					"BgAAAPkFAAAAAAAA+QUAAAAAAAABAAAAX/gFAAAAAAAA+AUAAAAAAAABAAAAMvcFAAAAAAAA9wUAAAAAAAABAAAAM/YFAAAAAAAA9gUAAAAAAAABAAAAdPUFAAAAAAAA9QUAAAAAAAABAAAAbvQFAAAAAAAA9AUAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA+gUAAAAAAAD6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "uinbt32"
					},
					"BwAAAPQFAAAAAAAA9QUAAAAAAAAAAAAA9QUAAAAAAAD2BQAAAAAAAAAAAAD2BQAAAAAAAPcFAAAAAAAAAAAAAPcFAAAAAAAA+AUAAAAAAAAAAAAA+AUAAAAAAAD5BQAAAAAAAAAAAAD5BQAAAAAAAPoFAAAAAAAAAAAAAPoFAAAAAAAA+wUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AUAAAAAAAD0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					4,
					"left_delete",
					null,
					"BAAAAPoFAAAAAAAA+gUAAAAAAAABAAAAMvkFAAAAAAAA+QUAAAAAAAABAAAAM/gFAAAAAAAA+AUAAAAAAAABAAAAdPcFAAAAAAAA9wUAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAA+wUAAAAAAAD7BQAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "t32_t"
					},
					"BQAAAPcFAAAAAAAA+AUAAAAAAAAAAAAA+AUAAAAAAAD5BQAAAAAAAAAAAAD5BQAAAAAAAPoFAAAAAAAAAAAAAPoFAAAAAAAA+wUAAAAAAAAAAAAA+wUAAAAAAAD8BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wUAAAAAAAD3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": " pin_"
					},
					"BQAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA/QUAAAAAAAD+BQAAAAAAAAAAAAD+BQAAAAAAAP8FAAAAAAAAAAAAAP8FAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAABBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AUAAAAAAAD8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"left_delete",
					null,
					"AQAAAAAGAAAAAAAAAAYAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAAQYAAAAAAAABBgAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "=0"
					},
					"AgAAAAAGAAAAAAAAAQYAAAAAAAAAAAAAAQYAAAAAAAACBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"left_delete",
					null,
					"AQAAAAEGAAAAAAAAAQYAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAAgYAAAAAAAACBgAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": "-1;M"
					},
					"BAAAAAEGAAAAAAAAAgYAAAAAAAAAAAAAAgYAAAAAAAADBgAAAAAAAAAAAAADBgAAAAAAAAQGAAAAAAAAAAAAAAQGAAAAAAAABQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQYAAAAAAAABBgAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"left_delete",
					null,
					"AQAAAAQGAAAAAAAABAYAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"right_delete",
					null,
					"AQAAAPQFAAAAAAAA9AUAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAA9AUAAAAAAAD0BQAAAAAAAAAAAAAAAEhA"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAKBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwYAAAAAAAADBgAAAAAAAP///////+9/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "uint32_t"
					},
					"CgAAAPQFAAAAAAAA9QUAAAAAAAAAAAAA9QUAAAAAAAD1BQAAAAAAAAcAAABpbnQzMl90/gUAAAAAAAD+BQAAAAAAAAYAAAAgICAgICD1BQAAAAAAAPYFAAAAAAAAAAAAAPYFAAAAAAAA9wUAAAAAAAAAAAAA9wUAAAAAAAD4BQAAAAAAAAAAAAD4BQAAAAAAAPkFAAAAAAAAAAAAAPkFAAAAAAAA+gUAAAAAAAAAAAAA+gUAAAAAAAD7BQAAAAAAAAAAAAD7BQAAAAAAAPwFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AUAAAAAAAD7BQAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					2,
					"left_delete",
					null,
					"AgAAAAIGAAAAAAAAAgYAAAAAAAABAAAAMQEGAAAAAAAAAQYAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAAwYAAAAAAAADBgAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAAEGAAAAAAAAAgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQYAAAAAAAABBgAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": "\nJS_ToUint32"
					},
					"DQAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAKBgAAAAAAAAAAAAAKBgAAAAAAAAsGAAAAAAAAAAAAAAsGAAAAAAAADAYAAAAAAAAAAAAADAYAAAAAAAANBgAAAAAAAAAAAAANBgAAAAAAAA4GAAAAAAAAAAAAAA4GAAAAAAAADwYAAAAAAAAAAAAADwYAAAAAAAAQBgAAAAAAAAAAAAAQBgAAAAAAABEGAAAAAAAAAAAAABEGAAAAAAAAEgYAAAAAAAAAAAAAEgYAAAAAAAATBgAAAAAAAAAAAAATBgAAAAAAABQGAAAAAAAAAAAAABQGAAAAAAAAFQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwYAAAAAAAADBgAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABUGAAAAAAAAFwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQYAAAAAAAAVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABkGAAAAAAAAAAAAABkGAAAAAAAAGgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgYAAAAAAAAWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": " &pin,"
					},
					"BgAAABoGAAAAAAAAGwYAAAAAAAAAAAAAGwYAAAAAAAAcBgAAAAAAAAAAAAAcBgAAAAAAAB0GAAAAAAAAAAAAAB0GAAAAAAAAHgYAAAAAAAAAAAAAHgYAAAAAAAAfBgAAAAAAAAAAAAAfBgAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgYAAAAAAAAaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": " argv"
					},
					"BQAAACAGAAAAAAAAIQYAAAAAAAAAAAAAIQYAAAAAAAAiBgAAAAAAAAAAAAAiBgAAAAAAACMGAAAAAAAAAAAAACMGAAAAAAAAJAYAAAAAAAAAAAAAJAYAAAAAAAAlBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAYAAAAAAAAgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACUGAAAAAAAAJwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQYAAAAAAAAlBgAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "0'"
					},
					"AgAAACYGAAAAAAAAJwYAAAAAAAAAAAAAJwYAAAAAAAAoBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgYAAAAAAAAmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"left_delete",
					null,
					"AQAAACcGAAAAAAAAJwYAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAKAYAAAAAAAAoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACkGAAAAAAAAKgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQYAAAAAAAApBgAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "\nBOOL"
					},
					"BgAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAKBgAAAAAAAAAAAAAKBgAAAAAAAAsGAAAAAAAAAAAAAAsGAAAAAAAADAYAAAAAAAAAAAAADAYAAAAAAAANBgAAAAAAAAAAAAANBgAAAAAAAA4GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwYAAAAAAAADBgAAAAAAAAAAAAAAAHNA"
				],
				[
					306,
					1,
					"insert",
					{
						"characters": " output=FALSE"
					},
					"DQAAAA4GAAAAAAAADwYAAAAAAAAAAAAADwYAAAAAAAAQBgAAAAAAAAAAAAAQBgAAAAAAABEGAAAAAAAAAAAAABEGAAAAAAAAEgYAAAAAAAAAAAAAEgYAAAAAAAATBgAAAAAAAAAAAAATBgAAAAAAABQGAAAAAAAAAAAAABQGAAAAAAAAFQYAAAAAAAAAAAAAFQYAAAAAAAAWBgAAAAAAAAAAAAAWBgAAAAAAABcGAAAAAAAAAAAAABcGAAAAAAAAGAYAAAAAAAAAAAAAGAYAAAAAAAAZBgAAAAAAAAAAAAAZBgAAAAAAABoGAAAAAAAAAAAAABoGAAAAAAAAGwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgYAAAAAAAAOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABsGAAAAAAAAHAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwYAAAAAAAAbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "JS_"
					},
					"AwAAAEQGAAAAAAAARQYAAAAAAAAAAAAARQYAAAAAAABGBgAAAAAAAAAAAABGBgAAAAAAAEcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAYAAAAAAABEBgAAAAAAAAAAAAAAAGhA"
				],
				[
					310,
					3,
					"left_delete",
					null,
					"AwAAAEYGAAAAAAAARgYAAAAAAAABAAAAX0UGAAAAAAAARQYAAAAAAAABAAAAU0QGAAAAAAAARAYAAAAAAAABAAAASg",
					"AQAAAAAAAAABAAAARwYAAAAAAABHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					5,
					"left_delete",
					null,
					"BQAAABoGAAAAAAAAGgYAAAAAAAABAAAARRkGAAAAAAAAGQYAAAAAAAABAAAAUxgGAAAAAAAAGAYAAAAAAAABAAAATBcGAAAAAAAAFwYAAAAAAAABAAAAQRYGAAAAAAAAFgYAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAAGwYAAAAAAAAbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"insert",
					{
						"characters": "JS_ToBool"
					},
					"CQAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABkGAAAAAAAAAAAAABkGAAAAAAAAGgYAAAAAAAAAAAAAGgYAAAAAAAAbBgAAAAAAAAAAAAAbBgAAAAAAABwGAAAAAAAAAAAAABwGAAAAAAAAHQYAAAAAAAAAAAAAHQYAAAAAAAAeBgAAAAAAAAAAAAAeBgAAAAAAAB8GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgYAAAAAAAAWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAB8GAAAAAAAAIQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwYAAAAAAAAfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAACAGAAAAAAAAIQYAAAAAAAAAAAAAIQYAAAAAAAAiBgAAAAAAAAAAAAAiBgAAAAAAACMGAAAAAAAAAAAAACMGAAAAAAAAJAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAYAAAAAAAAgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": " argv"
					},
					"BQAAACQGAAAAAAAAJQYAAAAAAAAAAAAAJQYAAAAAAAAmBgAAAAAAAAAAAAAmBgAAAAAAACcGAAAAAAAAAAAAACcGAAAAAAAAKAYAAAAAAAAAAAAAKAYAAAAAAAApBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAYAAAAAAAAkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACkGAAAAAAAAKwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQYAAAAAAAApBgAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAACoGAAAAAAAAKwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgYAAAAAAAAqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"left_delete",
					null,
					"AQAAAFUGAAAAAAAAVQYAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAgHRA"
				],
				[
					330,
					1,
					"paste",
					null,
					"AQAAAIoGAAAAAAAA7gYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigYAAAAAAACKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BgAAAKgGAAAAAAAAqQYAAAAAAAAAAAAAqQYAAAAAAACpBgAAAAAAAAYAAABvdXRwdXSpBgAAAAAAAKoGAAAAAAAAAAAAAKoGAAAAAAAAqwYAAAAAAAAAAAAAqwYAAAAAAACsBgAAAAAAAAAAAACsBgAAAAAAAK0GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAYAAAAAAACuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO8GAAAAAAAA8AYAAAAAAAAAAAAA8AYAAAAAAAD2BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wYAAAAAAADvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFwGAAAAAAAAXQYAAAAAAAAAAAAAXQYAAAAAAABjBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAYAAAAAAABcBgAAAAAAAAAAAAAAAEhA"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": "gpio_init_pin"
					},
					"DQAAAFwGAAAAAAAAXQYAAAAAAAAAAAAAXQYAAAAAAABeBgAAAAAAAAAAAABeBgAAAAAAAF8GAAAAAAAAAAAAAF8GAAAAAAAAYAYAAAAAAAAAAAAAYAYAAAAAAABhBgAAAAAAAAAAAABhBgAAAAAAAGIGAAAAAAAAAAAAAGIGAAAAAAAAYwYAAAAAAAAAAAAAYwYAAAAAAABkBgAAAAAAAAAAAABkBgAAAAAAAGUGAAAAAAAAAAAAAGUGAAAAAAAAZgYAAAAAAAAAAAAAZgYAAAAAAABnBgAAAAAAAAAAAABnBgAAAAAAAGgGAAAAAAAAAAAAAGgGAAAAAAAAaQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAYAAAAAAABcBgAAAAAAAAAAAAAAAEhA"
				],
				[
					344,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGkGAAAAAAAAawYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQYAAAAAAABpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": "gpio,"
					},
					"BQAAAGoGAAAAAAAAawYAAAAAAAAAAAAAawYAAAAAAABsBgAAAAAAAAAAAABsBgAAAAAAAG0GAAAAAAAAAAAAAG0GAAAAAAAAbgYAAAAAAAAAAAAAbgYAAAAAAABvBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagYAAAAAAABqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": " pin,"
					},
					"BQAAAG8GAAAAAAAAcAYAAAAAAAAAAAAAcAYAAAAAAABxBgAAAAAAAAAAAABxBgAAAAAAAHIGAAAAAAAAAAAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB0BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwYAAAAAAABvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": " output"
					},
					"BwAAAHQGAAAAAAAAdQYAAAAAAAAAAAAAdQYAAAAAAAB2BgAAAAAAAAAAAAB2BgAAAAAAAHcGAAAAAAAAAAAAAHcGAAAAAAAAeAYAAAAAAAAAAAAAeAYAAAAAAAB5BgAAAAAAAAAAAAB5BgAAAAAAAHoGAAAAAAAAAAAAAHoGAAAAAAAAewYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAYAAAAAAAB0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHwGAAAAAAAAfQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAYAAAAAAAB8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"cut",
					null,
					"AQAAAFYGAAAAAAAAVgYAAAAAAAAoAAAAICAgICAgZ3Bpb19pbml0X3BpbihncGlvLCBwaW4sIG91dHB1dCk7Cg",
					"AQAAAAAAAAABAAAAfgYAAAAAAABWBgAAAAAAAAAAAAAAAAAA"
				],
				[
					355,
					1,
					"paste",
					null,
					"AQAAAFYGAAAAAAAAfgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"paste",
					null,
					"AQAAABgHAAAAAAAAQAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAcAAAAAAAAYBwAAAAAAAAAAAAAAAAAA"
				],
				[
					359,
					6,
					"left_delete",
					null,
					"BgAAADwHAAAAAAAAPAcAAAAAAAABAAAAdDsHAAAAAAAAOwcAAAAAAAABAAAAdToHAAAAAAAAOgcAAAAAAAABAAAAcDkHAAAAAAAAOQcAAAAAAAABAAAAdDgHAAAAAAAAOAcAAAAAAAABAAAAdTcHAAAAAAAANwcAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAPQcAAAAAAAA9BwAAAAAAAAAAAAAAAPC/"
				],
				[
					360,
					1,
					"insert",
					{
						"characters": "val"
					},
					"AwAAADcHAAAAAAAAOAcAAAAAAAAAAAAAOAcAAAAAAAA5BwAAAAAAAAAAAAA5BwAAAAAAADoHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwcAAAAAAAA3BwAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert_completion",
					{
						"completion": "value",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "value"
					},
					"AgAAADcHAAAAAAAANwcAAAAAAAADAAAAdmFsNwcAAAAAAAA8BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgcAAAAAAAA6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					4,
					"left_delete",
					null,
					"BAAAACYHAAAAAAAAJgcAAAAAAAABAAAAdCUHAAAAAAAAJQcAAAAAAAABAAAAaSQHAAAAAAAAJAcAAAAAAAABAAAAbiMHAAAAAAAAIwcAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAJwcAAAAAAAAnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": "set"
					},
					"AwAAACMHAAAAAAAAJAcAAAAAAAAAAAAAJAcAAAAAAAAlBwAAAAAAAAAAAAAlBwAAAAAAACYHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwcAAAAAAAAjBwAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"paste",
					null,
					"AgAAAHQHAAAAAAAADggAAAAAAAAAAAAADggAAAAAAAAOCAAAAAAAAA0AAAAgICAgICBicmVhazsK",
					"AQAAAAAAAAABAAAAdAcAAAAAAACBBwAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJYHAAAAAAAAlwcAAAAAAAAAAAAAlwcAAAAAAACXBwAAAAAAABgAAAA9SlNfVG9Cb29sKGN0eCwgYXJndlsxXSk",
					"AQAAAAAAAAABAAAAlgcAAAAAAACuBwAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BQAAAMgHAAAAAAAAyQcAAAAAAAAAAAAAyQcAAAAAAADKBwAAAAAAAAAAAADKBwAAAAAAAMsHAAAAAAAAAAAAAMsHAAAAAAAAzAcAAAAAAAAAAAAAzAcAAAAAAADNBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAcAAAAAAADIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAM0HAAAAAAAAzgcAAAAAAAAAAAAAzgcAAAAAAADPBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQcAAAAAAADNBwAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"left_delete",
					null,
					"AQAAANQHAAAAAAAA1AcAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA1QcAAAAAAADVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAANQHAAAAAAAA1QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AcAAAAAAADUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					403,
					10,
					"left_delete",
					null,
					"CgAAAOsHAAAAAAAA6wcAAAAAAAABAAAAZeoHAAAAAAAA6gcAAAAAAAABAAAAdekHAAAAAAAA6QcAAAAAAAABAAAAbOgHAAAAAAAA6AcAAAAAAAABAAAAYecHAAAAAAAA5wcAAAAAAAABAAAAduYHAAAAAAAA5gcAAAAAAAABAAAAIOUHAAAAAAAA5QcAAAAAAAABAAAALOQHAAAAAAAA5AcAAAAAAAABAAAAbuMHAAAAAAAA4wcAAAAAAAABAAAAaeIHAAAAAAAA4gcAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA7AcAAAAAAADsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					404,
					1,
					"insert",
					{
						"characters": "pin"
					},
					"AwAAAOIHAAAAAAAA4wcAAAAAAAAAAAAA4wcAAAAAAADkBwAAAAAAAAAAAADkBwAAAAAAAOUHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gcAAAAAAADiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": "\nret"
					},
					"BQAAAOcHAAAAAAAA6AcAAAAAAAAAAAAA6AcAAAAAAADuBwAAAAAAAAAAAADuBwAAAAAAAO8HAAAAAAAAAAAAAO8HAAAAAAAA8AcAAAAAAAAAAAAA8AcAAAAAAADxBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wcAAAAAAADnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					408,
					1,
					"insert",
					{
						"characters": " =JS_"
					},
					"BQAAAPEHAAAAAAAA8gcAAAAAAAAAAAAA8gcAAAAAAADzBwAAAAAAAAAAAADzBwAAAAAAAPQHAAAAAAAAAAAAAPQHAAAAAAAA9QcAAAAAAAAAAAAA9QcAAAAAAAD2BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QcAAAAAAADxBwAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "NewUint"
					},
					"BwAAAPYHAAAAAAAA9wcAAAAAAAAAAAAA9wcAAAAAAAD4BwAAAAAAAAAAAAD4BwAAAAAAAPkHAAAAAAAAAAAAAPkHAAAAAAAA+gcAAAAAAAAAAAAA+gcAAAAAAAD7BwAAAAAAAAAAAAD7BwAAAAAAAPwHAAAAAAAAAAAAAPwHAAAAAAAA/QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gcAAAAAAAD2BwAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAAP0HAAAAAAAA/gcAAAAAAAAAAAAA/gcAAAAAAAD/BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QcAAAAAAAD9BwAAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP8HAAAAAAAAAQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wcAAAAAAAD/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAP8HAAAAAAAA/wcAAAAAAAABAAAAKP8HAAAAAAAA/wcAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAPC/"
				],
				[
					413,
					6,
					"left_delete",
					null,
					"BgAAAP4HAAAAAAAA/gcAAAAAAAABAAAAMv0HAAAAAAAA/QcAAAAAAAABAAAAM/wHAAAAAAAA/AcAAAAAAAABAAAAdPsHAAAAAAAA+wcAAAAAAAABAAAAbvoHAAAAAAAA+gcAAAAAAAABAAAAafkHAAAAAAAA+QcAAAAAAAABAAAAVQ",
					"AQAAAAAAAAABAAAA/wcAAAAAAAD/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": "Boo"
					},
					"AwAAAPkHAAAAAAAA+gcAAAAAAAAAAAAA+gcAAAAAAAD7BwAAAAAAAAAAAAD7BwAAAAAAAPwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QcAAAAAAAD5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					415,
					3,
					"left_delete",
					null,
					"AwAAAPsHAAAAAAAA+wcAAAAAAAABAAAAb/oHAAAAAAAA+gcAAAAAAAABAAAAb/kHAAAAAAAA+QcAAAAAAAABAAAAQg",
					"AQAAAAAAAAABAAAA/AcAAAAAAAD8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": "Int32"
					},
					"BQAAAPkHAAAAAAAA+gcAAAAAAAAAAAAA+gcAAAAAAAD7BwAAAAAAAAAAAAD7BwAAAAAAAPwHAAAAAAAAAAAAAPwHAAAAAAAA/QcAAAAAAAAAAAAA/QcAAAAAAAD+BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QcAAAAAAAD5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP4HAAAAAAAAAAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gcAAAAAAAD+BwAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAP8HAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAIIAAAAAAAAAAAAAAIIAAAAAAAAAwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wcAAAAAAAD/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAAAMIAAAAAAAABAgAAAAAAAAAAAAABAgAAAAAAAAFCAAAAAAAAAAAAAAFCAAAAAAAAAYIAAAAAAAAAAAAAAYIAAAAAAAABwgAAAAAAAAAAAAABwgAAAAAAAAICAAAAAAAAAAAAAAICAAAAAAAAAkIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwgAAAAAAAADCAAAAAAAAAAAAAAAAPC/"
				],
				[
					421,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAoIAAAAAAAACwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACggAAAAAAAAKCAAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADoEwAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtZ3Bpby5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9LCBncGlvX2N0b3IgPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9OwoKZW51bSB7IEdQSU9fTUVUSE9EX0lOSVRfUElOLCBHUElPX01FVEhPRF9TRVRfUElOLCBHUElPX01FVEhPRF9HRVRfUElOIH07CgpzdHJ1Y3QgZ3BpbyoKanNfZ3Bpb19kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBncGlvID0gSlNfR2V0T3BhcXVlMihjdHgsIHZhbHVlLCBqc19ncGlvX2NsYXNzX2lkKTsKICByZXR1cm4gZ3BpbzsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb193cmFwX3Byb3RvKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvdG8sIHN0cnVjdCBncGlvKiBncGlvKSB7CiAgSlNWYWx1ZSBvYmo7CgogIGlmKGpzX2dwaW9fY2xhc3NfaWQgPT0gMCkKICAgIGpzX2dwaW9faW5pdChjdHgsIDApOwogIGlmKEpTX0lzTnVsbChwcm90bykgfHwgSlNfSXNVbmRlZmluZWQocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIGdwaW9fcHJvdG8pOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfZ3Bpb19jbGFzc19pZCk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgZ3Bpbyk7CgogIHJldHVybiBvYmo7CmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3dyYXAoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBncGlvKiBncGlvKSB7CiAgcmV0dXJuIGpzX2dwaW9fd3JhcF9wcm90byhjdHgsIGdwaW9fcHJvdG8sIGdwaW8pOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2Z1bmN0aW9ucyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW8gPSAwOwogIEpTVmFsdWUgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIHRoaXNfdmFsLCAicHJvdG90eXBlIik7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIHN3aXRjaChtYWdpYykgewoKICAgIGNhc2UgR1BJT19NRVRIT0RfSU5JVF9QSU46IHsKICAgICAgdWludDMyX3QgcGluPTA7CiAgICAgIEJPT0wgb3V0cHV0PUpTX1RvQm9vbChjdHgsIGFyZ3ZbMV0pOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZwaW4sIGFyZ3ZbMF0pOwogICAgICBncGlvX2luaXRfcGluKGdwaW8sIHBpbiwgb3V0cHV0KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fTUVUSE9EX1NFVF9QSU46IHsKICAgIHVpbnQzMl90IHBpbj0wOwogICAgICBCT09MIHZhbHVlPUpTX1RvQm9vbChjdHgsIGFyZ3ZbMV0pOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZwaW4sIGFyZ3ZbMF0pOyAgCiAgICAgIGdwaW9fc2V0X3BpbihncGlvLCBwaW4sIHZhbHVlKTsKICAgICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fTUVUSE9EX0dFVF9QSU46IHsKICB1aW50MzJfdCBwaW49MDsKICAgICAgQk9PTCB2YWx1ZSA7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBpbiwgYXJndlswXSk7ICAKICAgICAgdmFsdWUgPWdwaW9fZ2V0X3BpbihncGlvLCBwaW4pOwogICAgICByZXQgPUpTX05ld0ludDMyKGN0eCwgdmFsdWUpOwogICAgICAgICBicmVhazsgICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19nZXR0ZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19zZXR0ZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShncGlvID0ganNfZ3Bpb19kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiByZXQ7CgogIHN3aXRjaChtYWdpYykge30KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRCwgcHJvdG8gPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IGdwaW8pKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfZ3Bpb19jbGFzc19pZCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIGdwaW8pOwoKZmFpbDoKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCnN0YXRpYyB2b2lkCmpzX2dwaW9fZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgc3RydWN0IGdwaW8qIGdwaW8gPSBKU19HZXRPcGFxdWUodmFsLCBqc19ncGlvX2NsYXNzX2lkKTsKICBpZihncGlvKSB7CiAgICBncGlvX2Nsb3NlKGdwaW8pOwogIH0KICBKU19GcmVlVmFsdWVSVChydCwgdmFsKTsKfQoKc3RhdGljIEpTQ2xhc3NEZWYganNfZ3Bpb19jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIkdQSU8iLAogICAgLmZpbmFsaXplciA9IGpzX2dwaW9fZmluYWxpemVyLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2dwaW9fZnVuY3NbXSA9IHsKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaW5pdFBpbiIsIDIsIGpzX2dwaW9fZnVuY3Rpb25zLCBHUElPX01FVEhPRF9JTklUX1BJTiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNldFBpbmciLCAyLCBqc19ncGlvX2Z1bmN0aW9ucywgR1BJT19NRVRIT0RfU0VUX1BJTiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFBpbiIsIDEsIGpzX2dwaW9fZnVuY3Rpb25zLCBHUElPX01FVEhPRF9HRVRfUElOKSwKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiR1BJTyIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19ncGlvX3N0YXRpY19mdW5jc1tdID0gewogICAgSlNfUFJPUF9JTlQzMl9ERUYoIklOUFVUIiwgMCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJPVVRQVVQiLCAxLCBKU19QUk9QX0VOVU1FUkFCTEUpLAoKfTsKCmludApqc19ncGlvX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX2dwaW9fY2xhc3NfaWQgPT0gMCkgewogICAgSlNfTmV3Q2xhc3NJRCgmanNfZ3Bpb19jbGFzc19pZCk7CiAgICBKU19OZXdDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIGpzX2dwaW9fY2xhc3NfaWQsICZqc19ncGlvX2NsYXNzKTsKCiAgICBncGlvX2N0b3IgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwganNfZ3Bpb19jb25zdHJ1Y3RvciwgIkdQSU8iLCAxLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICBncGlvX3Byb3RvID0gSlNfTmV3T2JqZWN0KGN0eCk7CgogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBncGlvX3Byb3RvLCBqc19ncGlvX2Z1bmNzLCBjb3VudG9mKGpzX2dwaW9fZnVuY3MpKTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgZ3Bpb19jdG9yLCBqc19ncGlvX3N0YXRpY19mdW5jcywgY291bnRvZihqc19ncGlvX3N0YXRpY19mdW5jcykpOwogICAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIGpzX2dwaW9fY2xhc3NfaWQsIGdwaW9fcHJvdG8pOwogIH0KCiAgaWYobSkgewogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIkdQSU8iLCBncGlvX2N0b3IpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCiNpZmRlZiBKU19TSEFSRURfTElCUkFSWQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfZ3BpbwojZW5kaWYKClZJU0lCTEUgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIGlmKCEobSA9IEpTX05ld0NNb2R1bGUoY3R4LCBtb2R1bGVfbmFtZSwgJmpzX2dwaW9faW5pdCkpKQogICAgcmV0dXJuIG07CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIkdQSU8iKTsKICByZXR1cm4gbTsKfQoAAAAAAAAAAPATAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgcAAAAAAACZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"paste",
					null,
					"AQAAALkFAAAAAAAA9gUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQUAAAAAAAC5BQAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					4,
					"left_delete",
					null,
					"BAAAAFcFAAAAAAAAVwUAAAAAAAABAAAAMFYFAAAAAAAAVgUAAAAAAAABAAAAIFUFAAAAAAAAVQUAAAAAAAABAAAAPVQFAAAAAAAAVAUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAVwUAAAAAAABYBQAAAAAAAAAAAAAAAPC/"
				],
				[
					458,
					1,
					"left_delete",
					null,
					"AQAAAFYFAAAAAAAAVgUAAAAAAABBAAAAICBKU1ZhbHVlIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCB0aGlzX3ZhbCwgInByb3RvdHlwZSIpOwo",
					"AQAAAAAAAAABAAAAVgUAAAAAAACXBQAAAAAAAAAAAAAAAAAA"
				],
				[
					480,
					1,
					"paste",
					null,
					"AQAAAB4LAAAAAAAAgwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgsAAAAAAAAeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAB8LAAAAAAAAIAsAAAAAAAAAAAAAIAsAAAAAAAAgCwAAAAAAAGQAAAAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBnb3RvIGZhaWw7",
					"AQAAAAAAAAABAAAAHwsAAAAAAACDCwAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADqEwAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtZ3Bpby5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9LCBncGlvX2N0b3IgPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9OwoKZW51bSB7IEdQSU9fTUVUSE9EX0lOSVRfUElOLCBHUElPX01FVEhPRF9TRVRfUElOLCBHUElPX01FVEhPRF9HRVRfUElOIH07CgpzdHJ1Y3QgZ3BpbyoKanNfZ3Bpb19kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBncGlvID0gSlNfR2V0T3BhcXVlMihjdHgsIHZhbHVlLCBqc19ncGlvX2NsYXNzX2lkKTsKICByZXR1cm4gZ3BpbzsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb193cmFwX3Byb3RvKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvdG8sIHN0cnVjdCBncGlvKiBncGlvKSB7CiAgSlNWYWx1ZSBvYmo7CgogIGlmKGpzX2dwaW9fY2xhc3NfaWQgPT0gMCkKICAgIGpzX2dwaW9faW5pdChjdHgsIDApOwogIGlmKEpTX0lzTnVsbChwcm90bykgfHwgSlNfSXNVbmRlZmluZWQocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIGdwaW9fcHJvdG8pOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfZ3Bpb19jbGFzc19pZCk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgZ3Bpbyk7CgogIHJldHVybiBvYmo7CmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3dyYXAoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBncGlvKiBncGlvKSB7CiAgcmV0dXJuIGpzX2dwaW9fd3JhcF9wcm90byhjdHgsIGdwaW9fcHJvdG8sIGdwaW8pOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2Z1bmN0aW9ucyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHsKCiAgICBjYXNlIEdQSU9fTUVUSE9EX0lOSVRfUElOOiB7CiAgICAgIHVpbnQzMl90IHBpbiA9IDA7CiAgICAgIEJPT0wgb3V0cHV0ID0gSlNfVG9Cb29sKGN0eCwgYXJndlsxXSk7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBpbiwgYXJndlswXSk7CiAgICAgIGdwaW9faW5pdF9waW4oZ3BpbywgcGluLCBvdXRwdXQpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19NRVRIT0RfU0VUX1BJTjogewogICAgICB1aW50MzJfdCBwaW4gPSAwOwogICAgICBCT09MIHZhbHVlID0gSlNfVG9Cb29sKGN0eCwgYXJndlsxXSk7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBpbiwgYXJndlswXSk7CiAgICAgIGdwaW9fc2V0X3BpbihncGlvLCBwaW4sIHZhbHVlKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fTUVUSE9EX0dFVF9QSU46IHsKICAgICAgdWludDMyX3QgcGluID0gMDsKICAgICAgQk9PTCB2YWx1ZTsKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmcGluLCBhcmd2WzBdKTsKICAgICAgdmFsdWUgPSBncGlvX2dldF9waW4oZ3BpbywgcGluKTsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19nZXR0ZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19zZXR0ZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShncGlvID0ganNfZ3Bpb19kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiByZXQ7CgogIHN3aXRjaChtYWdpYykge30KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRCwgcHJvdG8gPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IGdwaW8pKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwogIAogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBnb3RvIGZhaWw7CiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBqc19ncGlvX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgZ3Bpbyk7CgpmYWlsOgogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIHZvaWQKanNfZ3Bpb19maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbyA9IEpTX0dldE9wYXF1ZSh2YWwsIGpzX2dwaW9fY2xhc3NfaWQpOwogIGlmKGdwaW8pIHsKICAgIGdwaW9fY2xvc2UoZ3Bpbyk7CiAgfQogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCB2YWwpOwp9CgpzdGF0aWMgSlNDbGFzc0RlZiBqc19ncGlvX2NsYXNzID0gewogICAgLmNsYXNzX25hbWUgPSAiR1BJTyIsCiAgICAuZmluYWxpemVyID0ganNfZ3Bpb19maW5hbGl6ZXIsCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfZ3Bpb19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpbml0UGluIiwgMiwganNfZ3Bpb19mdW5jdGlvbnMsIEdQSU9fTUVUSE9EX0lOSVRfUElOKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic2V0UGluZyIsIDIsIGpzX2dwaW9fZnVuY3Rpb25zLCBHUElPX01FVEhPRF9TRVRfUElOKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0UGluIiwgMSwganNfZ3Bpb19mdW5jdGlvbnMsIEdQSU9fTUVUSE9EX0dFVF9QSU4pLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJHUElPIiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2dwaW9fc3RhdGljX2Z1bmNzW10gPSB7CiAgICBKU19QUk9QX0lOVDMyX0RFRigiSU5QVVQiLCAwLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk9VVFBVVCIsIDEsIEpTX1BST1BfRU5VTUVSQUJMRSksCgp9OwoKaW50CmpzX2dwaW9faW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKCiAgaWYoanNfZ3Bpb19jbGFzc19pZCA9PSAwKSB7CiAgICBKU19OZXdDbGFzc0lEKCZqc19ncGlvX2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfZ3Bpb19jbGFzc19pZCwgJmpzX2dwaW9fY2xhc3MpOwoKICAgIGdwaW9fY3RvciA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19ncGlvX2NvbnN0cnVjdG9yLCAiR1BJTyIsIDEsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKICAgIGdwaW9fcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGdwaW9fcHJvdG8sIGpzX2dwaW9fZnVuY3MsIGNvdW50b2YoanNfZ3Bpb19mdW5jcykpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBncGlvX2N0b3IsIGpzX2dwaW9fc3RhdGljX2Z1bmNzLCBjb3VudG9mKGpzX2dwaW9fc3RhdGljX2Z1bmNzKSk7CiAgICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfZ3Bpb19jbGFzc19pZCwgZ3Bpb19wcm90byk7CiAgfQoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiR1BJTyIsIGdwaW9fY3Rvcik7CiAgfQoKICByZXR1cm4gMDsKfQoKI2lmZGVmIEpTX1NIQVJFRF9MSUJSQVJZCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9ncGlvCiNlbmRpZgoKVklTSUJMRSBKU01vZHVsZURlZioKSlNfSU5JVF9NT0RVTEUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKSB7CiAgSlNNb2R1bGVEZWYqIG07CiAgaWYoIShtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfZ3Bpb19pbml0KSkpCiAgICByZXR1cm4gbTsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiR1BJTyIpOwogIHJldHVybiBtOwp9CgAAAAAAAAAA6BMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAsAAAAAAAAgCwAAAAAAAAAAAAAAAPC/"
				],
				[
					511,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAIAMAAAAAAAAgQwAAAAAAAAAAAAAgQwAAAAAAACCDAAAAAAAAAAAAACCDAAAAAAAAIMMAAAAAAAAAAAAAIMMAAAAAAAAhAwAAAAAAAAAAAAAhAwAAAAAAACFDAAAAAAAAAAAAACFDAAAAAAAAIYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAwAAAAAAACADAAAAAAAAAAAAAAAAPC/"
				],
				[
					512,
					1,
					"insert",
					{
						"characters": " obj;"
					},
					"BQAAAIYMAAAAAAAAhwwAAAAAAAAAAAAAhwwAAAAAAACIDAAAAAAAAAAAAACIDAAAAAAAAIkMAAAAAAAAAAAAAIkMAAAAAAAAigwAAAAAAAAAAAAAigwAAAAAAACLDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgwAAAAAAACGDAAAAAAAAAAAAAAAAPC/"
				],
				[
					513,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIsMAAAAAAAAjAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwwAAAAAAACLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					515,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0EwAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtZ3Bpby5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9LCBncGlvX2N0b3IgPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9OwoKZW51bSB7IEdQSU9fTUVUSE9EX0lOSVRfUElOLCBHUElPX01FVEhPRF9TRVRfUElOLCBHUElPX01FVEhPRF9HRVRfUElOIH07CgpzdHJ1Y3QgZ3BpbyoKanNfZ3Bpb19kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBncGlvID0gSlNfR2V0T3BhcXVlMihjdHgsIHZhbHVlLCBqc19ncGlvX2NsYXNzX2lkKTsKICByZXR1cm4gZ3BpbzsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb193cmFwX3Byb3RvKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvdG8sIHN0cnVjdCBncGlvKiBncGlvKSB7CiAgSlNWYWx1ZSBvYmo7CgogIGlmKGpzX2dwaW9fY2xhc3NfaWQgPT0gMCkKICAgIGpzX2dwaW9faW5pdChjdHgsIDApOwogIGlmKEpTX0lzTnVsbChwcm90bykgfHwgSlNfSXNVbmRlZmluZWQocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIGdwaW9fcHJvdG8pOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfZ3Bpb19jbGFzc19pZCk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgZ3Bpbyk7CgogIHJldHVybiBvYmo7CmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3dyYXAoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBncGlvKiBncGlvKSB7CiAgcmV0dXJuIGpzX2dwaW9fd3JhcF9wcm90byhjdHgsIGdwaW9fcHJvdG8sIGdwaW8pOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2Z1bmN0aW9ucyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHsKCiAgICBjYXNlIEdQSU9fTUVUSE9EX0lOSVRfUElOOiB7CiAgICAgIHVpbnQzMl90IHBpbiA9IDA7CiAgICAgIEJPT0wgb3V0cHV0ID0gSlNfVG9Cb29sKGN0eCwgYXJndlsxXSk7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBpbiwgYXJndlswXSk7CiAgICAgIGdwaW9faW5pdF9waW4oZ3BpbywgcGluLCBvdXRwdXQpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19NRVRIT0RfU0VUX1BJTjogewogICAgICB1aW50MzJfdCBwaW4gPSAwOwogICAgICBCT09MIHZhbHVlID0gSlNfVG9Cb29sKGN0eCwgYXJndlsxXSk7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBpbiwgYXJndlswXSk7CiAgICAgIGdwaW9fc2V0X3BpbihncGlvLCBwaW4sIHZhbHVlKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fTUVUSE9EX0dFVF9QSU46IHsKICAgICAgdWludDMyX3QgcGluID0gMDsKICAgICAgQk9PTCB2YWx1ZTsKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmcGluLCBhcmd2WzBdKTsKICAgICAgdmFsdWUgPSBncGlvX2dldF9waW4oZ3BpbywgcGluKTsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19nZXR0ZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19zZXR0ZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShncGlvID0ganNfZ3Bpb19kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiByZXQ7CgogIHN3aXRjaChtYWdpYykge30KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRCwgcHJvdG8gPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IGdwaW8pKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfZ3Bpb19jbGFzc19pZCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIGdwaW8pOwpyZXR1cm4gb2JqOwoKZmFpbDoKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCnN0YXRpYyB2b2lkCmpzX2dwaW9fZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgc3RydWN0IGdwaW8qIGdwaW8gPSBKU19HZXRPcGFxdWUodmFsLCBqc19ncGlvX2NsYXNzX2lkKTsKICBpZihncGlvKSB7CiAgICBncGlvX2Nsb3NlKGdwaW8pOwogIH0KICBKU19GcmVlVmFsdWVSVChydCwgdmFsKTsKfQoKc3RhdGljIEpTQ2xhc3NEZWYganNfZ3Bpb19jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIkdQSU8iLAogICAgLmZpbmFsaXplciA9IGpzX2dwaW9fZmluYWxpemVyLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2dwaW9fZnVuY3NbXSA9IHsKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaW5pdFBpbiIsIDIsIGpzX2dwaW9fZnVuY3Rpb25zLCBHUElPX01FVEhPRF9JTklUX1BJTiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNldFBpbmciLCAyLCBqc19ncGlvX2Z1bmN0aW9ucywgR1BJT19NRVRIT0RfU0VUX1BJTiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFBpbiIsIDEsIGpzX2dwaW9fZnVuY3Rpb25zLCBHUElPX01FVEhPRF9HRVRfUElOKSwKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiR1BJTyIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19ncGlvX3N0YXRpY19mdW5jc1tdID0gewogICAgSlNfUFJPUF9JTlQzMl9ERUYoIklOUFVUIiwgMCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJPVVRQVVQiLCAxLCBKU19QUk9QX0VOVU1FUkFCTEUpLAoKfTsKCmludApqc19ncGlvX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX2dwaW9fY2xhc3NfaWQgPT0gMCkgewogICAgSlNfTmV3Q2xhc3NJRCgmanNfZ3Bpb19jbGFzc19pZCk7CiAgICBKU19OZXdDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIGpzX2dwaW9fY2xhc3NfaWQsICZqc19ncGlvX2NsYXNzKTsKCiAgICBncGlvX2N0b3IgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwganNfZ3Bpb19jb25zdHJ1Y3RvciwgIkdQSU8iLCAxLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICBncGlvX3Byb3RvID0gSlNfTmV3T2JqZWN0KGN0eCk7CgogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBncGlvX3Byb3RvLCBqc19ncGlvX2Z1bmNzLCBjb3VudG9mKGpzX2dwaW9fZnVuY3MpKTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgZ3Bpb19jdG9yLCBqc19ncGlvX3N0YXRpY19mdW5jcywgY291bnRvZihqc19ncGlvX3N0YXRpY19mdW5jcykpOwogICAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIGpzX2dwaW9fY2xhc3NfaWQsIGdwaW9fcHJvdG8pOwogIH0KCiAgaWYobSkgewogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIkdQSU8iLCBncGlvX2N0b3IpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCiNpZmRlZiBKU19TSEFSRURfTElCUkFSWQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfZ3BpbwojZW5kaWYKClZJU0lCTEUgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIGlmKCEobSA9IEpTX05ld0NNb2R1bGUoY3R4LCBtb2R1bGVfbmFtZSwgJmpzX2dwaW9faW5pdCkpKQogICAgcmV0dXJuIG07CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIkdQSU8iKTsKICByZXR1cm4gbTsKfQoAAAAAAAAAAPYTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAwAAAAAAACMDAAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"cut",
					null,
					"AQAAAJoPAAAAAAAAmg8AAAAAAABvAAAAICAgIEpTX1BST1BfSU5UMzJfREVGKCJJTlBVVCIsIDAsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiT1VUUFVUIiwgMSwgSlNfUFJPUF9FTlVNRVJBQkxFKSwK",
					"AQAAAAAAAAABAAAAmg8AAAAAAAAJEAAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					2,
					"paste",
					null,
					"AgAAAJoPAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAB4EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmg8AAAAAAACaDwAAAAAAAAAAAAAAAPC/"
				],
				[
					531,
					1,
					"insert",
					{
						"characters": "HIGJH"
					},
					"BgAAACAQAAAAAAAAIRAAAAAAAAAAAAAAIRAAAAAAAAAhEAAAAAAAAAUAAABJTlBVVCEQAAAAAAAAIhAAAAAAAAAAAAAAIhAAAAAAAAAjEAAAAAAAAAAAAAAjEAAAAAAAACQQAAAAAAAAAAAAACQQAAAAAAAAJRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBAAAAAAAAAlEAAAAAAAAAAAAAAAAPC/"
				],
				[
					532,
					2,
					"left_delete",
					null,
					"AgAAACQQAAAAAAAAJBAAAAAAAAABAAAASCMQAAAAAAAAIxAAAAAAAAABAAAASg",
					"AQAAAAAAAAABAAAAJRAAAAAAAAAlEAAAAAAAAAAAAAAAAPC/"
				],
				[
					535,
					1,
					"transpose",
					null,
					"AgAAACMQAAAAAAAAJBAAAAAAAAABAAAAIiIQAAAAAAAAIxAAAAAAAAABAAAARw",
					"AQAAAAAAAAABAAAAIxAAAAAAAAAjEAAAAAAAAAAAAAAAAPC/"
				],
				[
					536,
					5,
					"left_delete",
					null,
					"BQAAACMQAAAAAAAAIxAAAAAAAAABAAAARyIQAAAAAAAAIhAAAAAAAAABAAAAIiEQAAAAAAAAIRAAAAAAAAABAAAASSAQAAAAAAAAIBAAAAAAAAABAAAASB8QAAAAAAAAHxAAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAJBAAAAAAAAAkEAAAAAAAAAAAAAAAAPC/"
				],
				[
					537,
					1,
					"insert",
					{
						"characters": "\"LOW\""
					},
					"BQAAAB8QAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAhEAAAAAAAAAAAAAAhEAAAAAAAACIQAAAAAAAAAAAAACIQAAAAAAAAIxAAAAAAAAAAAAAAIxAAAAAAAAAkEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxAAAAAAAAAfEAAAAAAAAAAAAAAAAPC/"
				],
				[
					541,
					6,
					"left_delete",
					null,
					"BgAAAFoQAAAAAAAAWhAAAAAAAAABAAAAVFkQAAAAAAAAWRAAAAAAAAABAAAAVVgQAAAAAAAAWBAAAAAAAAABAAAAUFcQAAAAAAAAVxAAAAAAAAABAAAAVFYQAAAAAAAAVhAAAAAAAAABAAAAVVUQAAAAAAAAVRAAAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAAWxAAAAAAAABbEAAAAAAAAAAAAAAAAPC/"
				],
				[
					542,
					1,
					"insert",
					{
						"characters": "HIGH"
					},
					"BAAAAFUQAAAAAAAAVhAAAAAAAAAAAAAAVhAAAAAAAABXEAAAAAAAAAAAAABXEAAAAAAAAFgQAAAAAAAAAAAAAFgQAAAAAAAAWRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVRAAAAAAAABVEAAAAAAAAAAAAAAAAPC/"
				],
				[
					547,
					1,
					"left_delete",
					null,
					"AQAAAHMQAAAAAAAAcxAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAdBAAAAAAAAB0EAAAAAAAAAAAAAAAAPC/"
				],
				[
					619,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGQMAAAAAAAAZQwAAAAAAAAAAAAAZQwAAAAAAABmDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAwAAAAAAABkDAAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					1,
					"insert",
					{
						"characters": "gpio_open"
					},
					"CQAAAGUMAAAAAAAAZgwAAAAAAAAAAAAAZgwAAAAAAABnDAAAAAAAAAAAAABnDAAAAAAAAGgMAAAAAAAAAAAAAGgMAAAAAAAAaQwAAAAAAAAAAAAAaQwAAAAAAABqDAAAAAAAAAAAAABqDAAAAAAAAGsMAAAAAAAAAAAAAGsMAAAAAAAAbAwAAAAAAAAAAAAAbAwAAAAAAABtDAAAAAAAAAAAAABtDAAAAAAAAG4MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQwAAAAAAABlDAAAAAAAAAAAAAAAAAAA"
				],
				[
					622,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAG4MAAAAAAAAcAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgwAAAAAAABuDAAAAAAAAAAAAAAAAPC/"
				],
				[
					623,
					1,
					"insert",
					{
						"characters": "gpio"
					},
					"BAAAAG8MAAAAAAAAcAwAAAAAAAAAAAAAcAwAAAAAAABxDAAAAAAAAAAAAABxDAAAAAAAAHIMAAAAAAAAAAAAAHIMAAAAAAAAcwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwwAAAAAAABvDAAAAAAAAAAAAAAAAPC/"
				],
				[
					625,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHQMAAAAAAAAdQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAwAAAAAAAB0DAAAAAAAAAAAAAAAAPC/"
				],
				[
					628,
					1,
					"insert",
					{
						"characters": "if("
					},
					"AwAAAGUMAAAAAAAAZgwAAAAAAAAAAAAAZgwAAAAAAABnDAAAAAAAAAAAAABnDAAAAAAAAGgMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQwAAAAAAABlDAAAAAAAAAAAAAAAAAAA"
				],
				[
					630,
					1,
					"left_delete",
					null,
					"AQAAAHcMAAAAAAAAdwwAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAeAwAAAAAAAB4DAAAAAAAAP///////+9/"
				],
				[
					631,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAHcMAAAAAAAAeAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwwAAAAAAAB3DAAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": "\nJS_Thro"
					},
					"CQAAAHgMAAAAAAAAeQwAAAAAAAAAAAAAeQwAAAAAAAB7DAAAAAAAAAAAAAB7DAAAAAAAAHwMAAAAAAAAAAAAAHwMAAAAAAAAfQwAAAAAAAAAAAAAfQwAAAAAAAB+DAAAAAAAAAAAAAB+DAAAAAAAAH8MAAAAAAAAAAAAAH8MAAAAAAAAgAwAAAAAAAAAAAAAgAwAAAAAAACBDAAAAAAAAAAAAACBDAAAAAAAAIIMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAwAAAAAAAB4DAAAAAAAAAAAAAAAAPC/"
				],
				[
					633,
					1,
					"insert_completion",
					{
						"completion": "JS_ThrowInternalError",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JS_ThrowInternalError"
					},
					"AgAAAHsMAAAAAAAAewwAAAAAAAAHAAAASlNfVGhyb3sMAAAAAAAAkAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggwAAAAAAACCDAAAAAAAAAAAAAAAAPC/"
				],
				[
					634,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJAMAAAAAAAAkgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAwAAAAAAACQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					635,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAJEMAAAAAAAAkgwAAAAAAAAAAAAAkgwAAAAAAACTDAAAAAAAAAAAAACTDAAAAAAAAJQMAAAAAAAAAAAAAJQMAAAAAAAAlQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQwAAAAAAACRDAAAAAAAAAAAAAAAAPC/"
				],
				[
					636,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUMAAAAAAAAlgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQwAAAAAAACVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					637,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAJYMAAAAAAAAmAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgwAAAAAAACWDAAAAAAAAAAAAAAAAPC/"
				],
				[
					638,
					1,
					"insert",
					{
						"characters": "GPI"
					},
					"AwAAAJcMAAAAAAAAmAwAAAAAAAAAAAAAmAwAAAAAAACZDAAAAAAAAAAAAACZDAAAAAAAAJoMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwwAAAAAAACXDAAAAAAAAAAAAAAAAPC/"
				],
				[
					639,
					3,
					"left_delete",
					null,
					"AwAAAJkMAAAAAAAAmQwAAAAAAAABAAAASZgMAAAAAAAAmAwAAAAAAAABAAAAUJcMAAAAAAAAlwwAAAAAAAABAAAARw",
					"AQAAAAAAAAABAAAAmgwAAAAAAACaDAAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": "gpio_open"
					},
					"CQAAAJcMAAAAAAAAmAwAAAAAAAAAAAAAmAwAAAAAAACZDAAAAAAAAAAAAACZDAAAAAAAAJoMAAAAAAAAAAAAAJoMAAAAAAAAmwwAAAAAAAAAAAAAmwwAAAAAAACcDAAAAAAAAAAAAACcDAAAAAAAAJ0MAAAAAAAAAAAAAJ0MAAAAAAAAngwAAAAAAAAAAAAAngwAAAAAAACfDAAAAAAAAAAAAACfDAAAAAAAAKAMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwwAAAAAAACXDAAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAKAMAAAAAAAAoQwAAAAAAAAAAAAAoQwAAAAAAACiDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAwAAAAAAACgDAAAAAAAAAAAAAAAAPC/"
				],
				[
					642,
					1,
					"insert",
					{
						"characters": " failed"
					},
					"BwAAAKIMAAAAAAAAowwAAAAAAAAAAAAAowwAAAAAAACkDAAAAAAAAAAAAACkDAAAAAAAAKUMAAAAAAAAAAAAAKUMAAAAAAAApgwAAAAAAAAAAAAApgwAAAAAAACnDAAAAAAAAAAAAACnDAAAAAAAAKgMAAAAAAAAAAAAAKgMAAAAAAAAqQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogwAAAAAAACiDAAAAAAAAAAAAAAAAPC/"
				],
				[
					644,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAKoMAAAAAAAAqwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgwAAAAAAACqDAAAAAAAAAAAAAAAAPC/"
				],
				[
					646,
					2,
					"left_delete",
					null,
					"AgAAAKsMAAAAAAAAqwwAAAAAAAABAAAAKaoMAAAAAAAAqgwAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAArAwAAAAAAACsDAAAAAAAAAAAAAAAAPC/"
				],
				[
					647,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAKoMAAAAAAAAqwwAAAAAAAAAAAAAqwwAAAAAAACsDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgwAAAAAAACqDAAAAAAAAAAAAAAAAPC/"
				],
				[
					650,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAGgMAAAAAAAAaQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAwAAAAAAABoDAAAAAAAAAAAAAAAAPC/"
				],
				[
					653,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAHwMAAAAAAAAfQwAAAAAAAAAAAAAfQwAAAAAAAB+DAAAAAAAAAAAAAB+DAAAAAAAAH8MAAAAAAAAAAAAAH8MAAAAAAAAgAwAAAAAAAAAAAAAgAwAAAAAAACBDAAAAAAAAAAAAACBDAAAAAAAAIIMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAwAAAAAAAB8DAAAAAAAAAAAAAAAAPC/"
				],
				[
					654,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIIMAAAAAAAAgwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggwAAAAAAACCDAAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACxFAAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtZ3Bpby5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9LCBncGlvX2N0b3IgPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9OwoKZW51bSB7IEdQSU9fTUVUSE9EX0lOSVRfUElOLCBHUElPX01FVEhPRF9TRVRfUElOLCBHUElPX01FVEhPRF9HRVRfUElOIH07CgpzdHJ1Y3QgZ3BpbyoKanNfZ3Bpb19kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBncGlvID0gSlNfR2V0T3BhcXVlMihjdHgsIHZhbHVlLCBqc19ncGlvX2NsYXNzX2lkKTsKICByZXR1cm4gZ3BpbzsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb193cmFwX3Byb3RvKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvdG8sIHN0cnVjdCBncGlvKiBncGlvKSB7CiAgSlNWYWx1ZSBvYmo7CgogIGlmKGpzX2dwaW9fY2xhc3NfaWQgPT0gMCkKICAgIGpzX2dwaW9faW5pdChjdHgsIDApOwogIGlmKEpTX0lzTnVsbChwcm90bykgfHwgSlNfSXNVbmRlZmluZWQocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIGdwaW9fcHJvdG8pOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfZ3Bpb19jbGFzc19pZCk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgZ3Bpbyk7CgogIHJldHVybiBvYmo7CmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3dyYXAoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBncGlvKiBncGlvKSB7CiAgcmV0dXJuIGpzX2dwaW9fd3JhcF9wcm90byhjdHgsIGdwaW9fcHJvdG8sIGdwaW8pOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2Z1bmN0aW9ucyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHsKCiAgICBjYXNlIEdQSU9fTUVUSE9EX0lOSVRfUElOOiB7CiAgICAgIHVpbnQzMl90IHBpbiA9IDA7CiAgICAgIEJPT0wgb3V0cHV0ID0gSlNfVG9Cb29sKGN0eCwgYXJndlsxXSk7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBpbiwgYXJndlswXSk7CiAgICAgIGdwaW9faW5pdF9waW4oZ3BpbywgcGluLCBvdXRwdXQpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19NRVRIT0RfU0VUX1BJTjogewogICAgICB1aW50MzJfdCBwaW4gPSAwOwogICAgICBCT09MIHZhbHVlID0gSlNfVG9Cb29sKGN0eCwgYXJndlsxXSk7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBpbiwgYXJndlswXSk7CiAgICAgIGdwaW9fc2V0X3BpbihncGlvLCBwaW4sIHZhbHVlKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fTUVUSE9EX0dFVF9QSU46IHsKICAgICAgdWludDMyX3QgcGluID0gMDsKICAgICAgQk9PTCB2YWx1ZTsKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmcGluLCBhcmd2WzBdKTsKICAgICAgdmFsdWUgPSBncGlvX2dldF9waW4oZ3BpbywgcGluKTsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19nZXR0ZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19zZXR0ZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShncGlvID0ganNfZ3Bpb19kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiByZXQ7CgogIHN3aXRjaChtYWdpYykge30KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRCwgcHJvdG8gPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IGdwaW8pKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfZ3Bpb19jbGFzc19pZCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgppZighZ3Bpb19vcGVuKGdwaW8pKQogIHJldHVybiBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiZ3Bpb19vcGVuKCkgZmFpbGVkIik7CgogIEpTX1NldE9wYXF1ZShvYmosIGdwaW8pOwogIHJldHVybiBvYmo7CgpmYWlsOgogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIHZvaWQKanNfZ3Bpb19maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbyA9IEpTX0dldE9wYXF1ZSh2YWwsIGpzX2dwaW9fY2xhc3NfaWQpOwogIGlmKGdwaW8pIHsKICAgIGdwaW9fY2xvc2UoZ3Bpbyk7CiAgfQogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCB2YWwpOwp9CgpzdGF0aWMgSlNDbGFzc0RlZiBqc19ncGlvX2NsYXNzID0gewogICAgLmNsYXNzX25hbWUgPSAiR1BJTyIsCiAgICAuZmluYWxpemVyID0ganNfZ3Bpb19maW5hbGl6ZXIsCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfZ3Bpb19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpbml0UGluIiwgMiwganNfZ3Bpb19mdW5jdGlvbnMsIEdQSU9fTUVUSE9EX0lOSVRfUElOKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic2V0UGluZyIsIDIsIGpzX2dwaW9fZnVuY3Rpb25zLCBHUElPX01FVEhPRF9TRVRfUElOKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0UGluIiwgMSwganNfZ3Bpb19mdW5jdGlvbnMsIEdQSU9fTUVUSE9EX0dFVF9QSU4pLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJHUElPIiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2dwaW9fc3RhdGljX2Z1bmNzW10gPSB7CiAgICBKU19QUk9QX0lOVDMyX0RFRigiSU5QVVQiLCAwLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk9VVFBVVCIsIDEsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTE9XIiwgMCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJISUdIIiwgMSwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKfTsKCmludApqc19ncGlvX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX2dwaW9fY2xhc3NfaWQgPT0gMCkgewogICAgSlNfTmV3Q2xhc3NJRCgmanNfZ3Bpb19jbGFzc19pZCk7CiAgICBKU19OZXdDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIGpzX2dwaW9fY2xhc3NfaWQsICZqc19ncGlvX2NsYXNzKTsKCiAgICBncGlvX2N0b3IgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwganNfZ3Bpb19jb25zdHJ1Y3RvciwgIkdQSU8iLCAxLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICBncGlvX3Byb3RvID0gSlNfTmV3T2JqZWN0KGN0eCk7CgogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBncGlvX3Byb3RvLCBqc19ncGlvX2Z1bmNzLCBjb3VudG9mKGpzX2dwaW9fZnVuY3MpKTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgZ3Bpb19jdG9yLCBqc19ncGlvX3N0YXRpY19mdW5jcywgY291bnRvZihqc19ncGlvX3N0YXRpY19mdW5jcykpOwogICAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIGpzX2dwaW9fY2xhc3NfaWQsIGdwaW9fcHJvdG8pOwogIH0KCiAgaWYobSkgewogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIkdQSU8iLCBncGlvX2N0b3IpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCiNpZmRlZiBKU19TSEFSRURfTElCUkFSWQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfZ3BpbwojZW5kaWYKClZJU0lCTEUgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIGlmKCEobSA9IEpTX05ld0NNb2R1bGUoY3R4LCBtb2R1bGVfbmFtZSwgJmpzX2dwaW9faW5pdCkpKQogICAgcmV0dXJuIG07CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIkdQSU8iKTsKICByZXR1cm4gbTsKfQoAAAAAAAAAALUUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQwAAAAAAAC1DAAAAAAAAAAAAAAAAFJA"
				],
				[
					663,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1FAAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtZ3Bpby5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9LCBncGlvX2N0b3IgPSB7LnRhZyA9IEpTX1RBR19VTkRFRklORUR9OwoKZW51bSB7IEdQSU9fTUVUSE9EX0lOSVRfUElOLCBHUElPX01FVEhPRF9TRVRfUElOLCBHUElPX01FVEhPRF9HRVRfUElOIH07CgpzdHJ1Y3QgZ3BpbyoKanNfZ3Bpb19kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBncGlvID0gSlNfR2V0T3BhcXVlMihjdHgsIHZhbHVlLCBqc19ncGlvX2NsYXNzX2lkKTsKICByZXR1cm4gZ3BpbzsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb193cmFwX3Byb3RvKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvdG8sIHN0cnVjdCBncGlvKiBncGlvKSB7CiAgSlNWYWx1ZSBvYmo7CgogIGlmKGpzX2dwaW9fY2xhc3NfaWQgPT0gMCkKICAgIGpzX2dwaW9faW5pdChjdHgsIDApOwogIGlmKEpTX0lzTnVsbChwcm90bykgfHwgSlNfSXNVbmRlZmluZWQocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIGdwaW9fcHJvdG8pOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfZ3Bpb19jbGFzc19pZCk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgZ3Bpbyk7CgogIHJldHVybiBvYmo7CmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3dyYXAoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBncGlvKiBncGlvKSB7CiAgcmV0dXJuIGpzX2dwaW9fd3JhcF9wcm90byhjdHgsIGdwaW9fcHJvdG8sIGdwaW8pOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2Z1bmN0aW9ucyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHsKCiAgICBjYXNlIEdQSU9fTUVUSE9EX0lOSVRfUElOOiB7CiAgICAgIHVpbnQzMl90IHBpbiA9IDA7CiAgICAgIEJPT0wgb3V0cHV0ID0gSlNfVG9Cb29sKGN0eCwgYXJndlsxXSk7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBpbiwgYXJndlswXSk7CiAgICAgIGdwaW9faW5pdF9waW4oZ3BpbywgcGluLCBvdXRwdXQpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19NRVRIT0RfU0VUX1BJTjogewogICAgICB1aW50MzJfdCBwaW4gPSAwOwogICAgICBCT09MIHZhbHVlID0gSlNfVG9Cb29sKGN0eCwgYXJndlsxXSk7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBpbiwgYXJndlswXSk7CiAgICAgIGdwaW9fc2V0X3BpbihncGlvLCBwaW4sIHZhbHVlKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fTUVUSE9EX0dFVF9QSU46IHsKICAgICAgdWludDMyX3QgcGluID0gMDsKICAgICAgQk9PTCB2YWx1ZTsKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmcGluLCBhcmd2WzBdKTsKICAgICAgdmFsdWUgPSBncGlvX2dldF9waW4oZ3BpbywgcGluKTsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19nZXR0ZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19zZXR0ZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShncGlvID0ganNfZ3Bpb19kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiByZXQ7CgogIHN3aXRjaChtYWdpYykge30KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRCwgcHJvdG8gPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IGdwaW8pKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfZ3Bpb19jbGFzc19pZCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIGlmKCFncGlvX29wZW4oZ3BpbykpCiAgICByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImdwaW9fb3BlbigpIGZhaWxlZCIpOwoKICBKU19TZXRPcGFxdWUob2JqLCBncGlvKTsKICByZXR1cm4gb2JqOwoKZmFpbDoKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCnN0YXRpYyB2b2lkCmpzX2dwaW9fZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgc3RydWN0IGdwaW8qIGdwaW8gPSBKU19HZXRPcGFxdWUodmFsLCBqc19ncGlvX2NsYXNzX2lkKTsKICBpZihncGlvKSB7CiAgICBncGlvX2Nsb3NlKGdwaW8pOwogIH0KICBKU19GcmVlVmFsdWVSVChydCwgdmFsKTsKfQoKc3RhdGljIEpTQ2xhc3NEZWYganNfZ3Bpb19jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIkdQSU8iLAogICAgLmZpbmFsaXplciA9IGpzX2dwaW9fZmluYWxpemVyLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2dwaW9fZnVuY3NbXSA9IHsKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaW5pdFBpbiIsIDIsIGpzX2dwaW9fZnVuY3Rpb25zLCBHUElPX01FVEhPRF9JTklUX1BJTiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNldFBpbmciLCAyLCBqc19ncGlvX2Z1bmN0aW9ucywgR1BJT19NRVRIT0RfU0VUX1BJTiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFBpbiIsIDEsIGpzX2dwaW9fZnVuY3Rpb25zLCBHUElPX01FVEhPRF9HRVRfUElOKSwKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiR1BJTyIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19ncGlvX3N0YXRpY19mdW5jc1tdID0gewogICAgSlNfUFJPUF9JTlQzMl9ERUYoIklOUFVUIiwgMCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJPVVRQVVQiLCAxLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxPVyIsIDAsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSElHSCIsIDEsIEpTX1BST1BfRU5VTUVSQUJMRSksCn07CgppbnQKanNfZ3Bpb19pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBpZihqc19ncGlvX2NsYXNzX2lkID09IDApIHsKICAgIEpTX05ld0NsYXNzSUQoJmpzX2dwaW9fY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19ncGlvX2NsYXNzX2lkLCAmanNfZ3Bpb19jbGFzcyk7CgogICAgZ3Bpb19jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX2dwaW9fY29uc3RydWN0b3IsICJHUElPIiwgMSwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogICAgZ3Bpb19wcm90byA9IEpTX05ld09iamVjdChjdHgpOwoKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgZ3Bpb19wcm90bywganNfZ3Bpb19mdW5jcywgY291bnRvZihqc19ncGlvX2Z1bmNzKSk7CiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGdwaW9fY3RvciwganNfZ3Bpb19zdGF0aWNfZnVuY3MsIGNvdW50b2YoanNfZ3Bpb19zdGF0aWNfZnVuY3MpKTsKICAgIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19ncGlvX2NsYXNzX2lkLCBncGlvX3Byb3RvKTsKICB9CgogIGlmKG0pIHsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIiwgZ3Bpb19jdG9yKTsKICB9CgogIHJldHVybiAwOwp9CgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX2dwaW8KI2VuZGlmCgpWSVNJQkxFIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBpZighKG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19ncGlvX2luaXQpKSkKICAgIHJldHVybiBtOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIik7CiAgcmV0dXJuIG07Cn0KAAAAAAAAAACrFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQwAAAAAAAC1DAAAAAAAAAAAAAAAAPC/"
				],
				[
					670,
					1,
					"paste",
					null,
					"AQAAAMYSAAAAAAAAARMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxhIAAAAAAADGEgAAAAAAAAAAAAAAAPC/"
				],
				[
					673,
					1,
					"insert",
					{
						"characters": "gpio1"
					},
					"BgAAAN8SAAAAAAAA4BIAAAAAAAAAAAAA4BIAAAAAAADgEgAAAAAAAAkAAABwcmVkaWNhdGXgEgAAAAAAAOESAAAAAAAAAAAAAOESAAAAAAAA4hIAAAAAAAAAAAAA4hIAAAAAAADjEgAAAAAAAAAAAADjEgAAAAAAAOQSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xIAAAAAAADoEgAAAAAAAAAAAAAAAPC/"
				],
				[
					675,
					2,
					"left_delete",
					null,
					"AgAAAOQSAAAAAAAA5BIAAAAAAAABAAAAX+MSAAAAAAAA4xIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAA5RIAAAAAAADlEgAAAAAAAAAAAAAAAPC/"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAOMSAAAAAAAA5BIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4xIAAAAAAADjEgAAAAAAAAAAAAAAAPC/"
				],
				[
					678,
					1,
					"insert",
					{
						"characters": "gpio"
					},
					"BAAAAOoSAAAAAAAA6xIAAAAAAAAAAAAA6xIAAAAAAADsEgAAAAAAAAAAAADsEgAAAAAAAO0SAAAAAAAAAAAAAO0SAAAAAAAA7hIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hIAAAAAAADqEgAAAAAAAAAAAAAAAPC/"
				],
				[
					681,
					1,
					"left_delete",
					null,
					"AQAAAO4SAAAAAAAA7hIAAAAAAAAJAAAAcHJlZGljYXRl",
					"AQAAAAAAAAABAAAA7hIAAAAAAAD3EgAAAAAAAAAAAAAAAPC/"
				],
				[
					684,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAPoSAAAAAAAA+xIAAAAAAAAAAAAA+xIAAAAAAAD8EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hIAAAAAAAD6EgAAAAAAAAAAAAAAADhA"
				],
				[
					689,
					1,
					"right_delete",
					null,
					"AQAAANkOAAAAAAAA2Q4AAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAA2Q4AAAAAAADZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					695,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdFAAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtZ3Bpby5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7ICBKU19UQUdfVU5ERUZJTkVEfSwgZ3Bpb19jdG9yID0geyAgSlNfVEFHX1VOREVGSU5FRH07CgplbnVtIHsgR1BJT19NRVRIT0RfSU5JVF9QSU4sIEdQSU9fTUVUSE9EX1NFVF9QSU4sIEdQSU9fTUVUSE9EX0dFVF9QSU4gfTsKCnN0cnVjdCBncGlvKgpqc19ncGlvX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHN0cnVjdCBncGlvKiBncGlvOwogIGdwaW8gPSBKU19HZXRPcGFxdWUyKGN0eCwgdmFsdWUsIGpzX2dwaW9fY2xhc3NfaWQpOwogIHJldHVybiBncGlvOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3dyYXBfcHJvdG8oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBwcm90bywgc3RydWN0IGdwaW8qIGdwaW8pIHsKICBKU1ZhbHVlIG9iajsKCiAgaWYoanNfZ3Bpb19jbGFzc19pZCA9PSAwKQogICAganNfZ3Bpb19pbml0KGN0eCwgMCk7CiAgaWYoSlNfSXNOdWxsKHByb3RvKSB8fCBKU19Jc1VuZGVmaW5lZChwcm90bykpCiAgICBwcm90byA9IEpTX0R1cFZhbHVlKGN0eCwgZ3Bpb19wcm90byk7CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBqc19ncGlvX2NsYXNzX2lkKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwoKICBKU19TZXRPcGFxdWUob2JqLCBncGlvKTsKCiAgcmV0dXJuIG9iajsKZmFpbDoKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fd3JhcChKU0NvbnRleHQqIGN0eCwgc3RydWN0IGdwaW8qIGdwaW8pIHsKICByZXR1cm4ganNfZ3Bpb193cmFwX3Byb3RvKGN0eCwgZ3Bpb19wcm90bywgZ3Bpbyk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fZnVuY3Rpb25zKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShncGlvID0ganNfZ3Bpb19kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiByZXQ7CgogIHN3aXRjaChtYWdpYykgewoKICAgIGNhc2UgR1BJT19NRVRIT0RfSU5JVF9QSU46IHsKICAgICAgdWludDMyX3QgcGluID0gMDsKICAgICAgQk9PTCBvdXRwdXQgPSBKU19Ub0Jvb2woY3R4LCBhcmd2WzFdKTsKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmcGluLCBhcmd2WzBdKTsKICAgICAgZ3Bpb19pbml0X3BpbihncGlvLCBwaW4sIG91dHB1dCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHUElPX01FVEhPRF9TRVRfUElOOiB7CiAgICAgIHVpbnQzMl90IHBpbiA9IDA7CiAgICAgIEJPT0wgdmFsdWUgPSBKU19Ub0Jvb2woY3R4LCBhcmd2WzFdKTsKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmcGluLCBhcmd2WzBdKTsKICAgICAgZ3Bpb19zZXRfcGluKGdwaW8sIHBpbiwgdmFsdWUpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgR1BJT19NRVRIT0RfR0VUX1BJTjogewogICAgICB1aW50MzJfdCBwaW4gPSAwOwogICAgICBCT09MIHZhbHVlOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZwaW4sIGFyZ3ZbMF0pOwogICAgICB2YWx1ZSA9IGdwaW9fZ2V0X3BpbihncGlvLCBwaW4pOwogICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHZhbHVlKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX2dldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbzsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShncGlvID0ganNfZ3Bpb19kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiByZXQ7CgogIHN3aXRjaChtYWdpYykge30KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19ncGlvX3NldHRlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGludCBtYWdpYykgewogIHN0cnVjdCBncGlvKiBncGlvOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGdwaW8gPSBqc19ncGlvX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKCiAgc3dpdGNoKG1hZ2ljKSB7fQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHN0cnVjdCBncGlvKiBncGlvOwogIEpTVmFsdWUgb2JqID0gSlNfVU5ERUZJTkVELCBwcm90byA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShncGlvID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgZ3BpbykpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBnb3RvIGZhaWw7CiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBqc19ncGlvX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgaWYoIWdwaW9fb3BlbihncGlvKSkKICAgIHJldHVybiBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiZ3Bpb19vcGVuKCkgZmFpbGVkIik7CgogIEpTX1NldE9wYXF1ZShvYmosIGdwaW8pOwogIHJldHVybiBvYmo7CgpmYWlsOgogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIHZvaWQKanNfZ3Bpb19maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBzdHJ1Y3QgZ3BpbyogZ3BpbyA9IEpTX0dldE9wYXF1ZSh2YWwsIGpzX2dwaW9fY2xhc3NfaWQpOwogIGlmKGdwaW8pIHsKICAgIGdwaW9fY2xvc2UoZ3Bpbyk7CiAgfQogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCB2YWwpOwp9CgpzdGF0aWMgSlNDbGFzc0RlZiBqc19ncGlvX2NsYXNzID0gewogICAgLmNsYXNzX25hbWUgPSAiR1BJTyIsCiAgICAuZmluYWxpemVyID0ganNfZ3Bpb19maW5hbGl6ZXIsCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfZ3Bpb19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpbml0UGluIiwgMiwganNfZ3Bpb19mdW5jdGlvbnMsIEdQSU9fTUVUSE9EX0lOSVRfUElOKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic2V0UGluIiwgMiwganNfZ3Bpb19mdW5jdGlvbnMsIEdQSU9fTUVUSE9EX1NFVF9QSU4pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRQaW4iLCAxLCBqc19ncGlvX2Z1bmN0aW9ucywgR1BJT19NRVRIT0RfR0VUX1BJTiksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIkdQSU8iLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfZ3Bpb19zdGF0aWNfZnVuY3NbXSA9IHsKICAgIEpTX1BST1BfSU5UMzJfREVGKCJJTlBVVCIsIDAsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiT1VUUFVUIiwgMSwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJMT1ciLCAwLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhJR0giLCAxLCBKU19QUk9QX0VOVU1FUkFCTEUpLAp9OwoKaW50CmpzX2dwaW9faW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKCiAgaWYoanNfZ3Bpb19jbGFzc19pZCA9PSAwKSB7CiAgICBKU19OZXdDbGFzc0lEKCZqc19ncGlvX2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfZ3Bpb19jbGFzc19pZCwgJmpzX2dwaW9fY2xhc3MpOwoKICAgIGdwaW9fY3RvciA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19ncGlvX2NvbnN0cnVjdG9yLCAiR1BJTyIsIDEsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKICAgIGdwaW9fcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGdwaW9fcHJvdG8sIGpzX2dwaW9fZnVuY3MsIGNvdW50b2YoanNfZ3Bpb19mdW5jcykpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBncGlvX2N0b3IsIGpzX2dwaW9fc3RhdGljX2Z1bmNzLCBjb3VudG9mKGpzX2dwaW9fc3RhdGljX2Z1bmNzKSk7CiAgIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgZ3Bpb19jdG9yLCBncGlvX3Byb3RvKTsKICAgLy9KU19TZXRDbGFzc1Byb3RvKGN0eCwganNfZ3Bpb19jbGFzc19pZCwgZ3Bpb19wcm90byk7CiAgfQoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiR1BJTyIsIGdwaW9fY3Rvcik7CiAgfQoKICByZXR1cm4gMDsKfQoKI2lmZGVmIEpTX1NIQVJFRF9MSUJSQVJZCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9ncGlvCiNlbmRpZgoKVklTSUJMRSBKU01vZHVsZURlZioKSlNfSU5JVF9NT0RVTEUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKSB7CiAgSlNNb2R1bGVEZWYqIG07CiAgaWYoIShtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfZ3Bpb19pbml0KSkpCiAgICByZXR1cm4gbTsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiR1BJTyIpOwogIHJldHVybiBtOwp9CgAAAAAAAAAA3BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+w0AAAAAAAD7DQAAAAAAAAAAAAAAAPC/"
				],
				[
					696,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADcFAAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgImdwaW8uaCIKI2luY2x1ZGUgPHRocmVhZHMuaD4KI2luY2x1ZGUgInF1aWNranMtZ3Bpby5oIgojaW5jbHVkZSAidXRpbHMuaCIKCiNkZWZpbmUgbWF4KGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfZ3Bpb19jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIGdwaW9fcHJvdG8gPSB7SlNfVEFHX1VOREVGSU5FRH0sIGdwaW9fY3RvciA9IHtKU19UQUdfVU5ERUZJTkVEfTsKCmVudW0geyBHUElPX01FVEhPRF9JTklUX1BJTiwgR1BJT19NRVRIT0RfU0VUX1BJTiwgR1BJT19NRVRIT0RfR0VUX1BJTiB9OwoKc3RydWN0IGdwaW8qCmpzX2dwaW9fZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgZ3BpbyA9IEpTX0dldE9wYXF1ZTIoY3R4LCB2YWx1ZSwganNfZ3Bpb19jbGFzc19pZCk7CiAgcmV0dXJuIGdwaW87Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fd3JhcF9wcm90byhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHByb3RvLCBzdHJ1Y3QgZ3BpbyogZ3BpbykgewogIEpTVmFsdWUgb2JqOwoKICBpZihqc19ncGlvX2NsYXNzX2lkID09IDApCiAgICBqc19ncGlvX2luaXQoY3R4LCAwKTsKICBpZihKU19Jc051bGwocHJvdG8pIHx8IEpTX0lzVW5kZWZpbmVkKHByb3RvKSkKICAgIHByb3RvID0gSlNfRHVwVmFsdWUoY3R4LCBncGlvX3Byb3RvKTsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX2dwaW9fY2xhc3NfaWQpOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIGdwaW8pOwoKICByZXR1cm4gb2JqOwpmYWlsOgogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb193cmFwKEpTQ29udGV4dCogY3R4LCBzdHJ1Y3QgZ3BpbyogZ3BpbykgewogIHJldHVybiBqc19ncGlvX3dyYXBfcHJvdG8oY3R4LCBncGlvX3Byb3RvLCBncGlvKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19mdW5jdGlvbnMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIHN0cnVjdCBncGlvKiBncGlvOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGdwaW8gPSBqc19ncGlvX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKCiAgc3dpdGNoKG1hZ2ljKSB7CgogICAgY2FzZSBHUElPX01FVEhPRF9JTklUX1BJTjogewogICAgICB1aW50MzJfdCBwaW4gPSAwOwogICAgICBCT09MIG91dHB1dCA9IEpTX1RvQm9vbChjdHgsIGFyZ3ZbMV0pOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZwaW4sIGFyZ3ZbMF0pOwogICAgICBncGlvX2luaXRfcGluKGdwaW8sIHBpbiwgb3V0cHV0KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEdQSU9fTUVUSE9EX1NFVF9QSU46IHsKICAgICAgdWludDMyX3QgcGluID0gMDsKICAgICAgQk9PTCB2YWx1ZSA9IEpTX1RvQm9vbChjdHgsIGFyZ3ZbMV0pOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZwaW4sIGFyZ3ZbMF0pOwogICAgICBncGlvX3NldF9waW4oZ3BpbywgcGluLCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBHUElPX01FVEhPRF9HRVRfUElOOiB7CiAgICAgIHVpbnQzMl90IHBpbiA9IDA7CiAgICAgIEJPT0wgdmFsdWU7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBpbiwgYXJndlswXSk7CiAgICAgIHZhbHVlID0gZ3Bpb19nZXRfcGluKGdwaW8sIHBpbik7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgdmFsdWUpOwogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fZ2V0dGVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIHN0cnVjdCBncGlvKiBncGlvOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGdwaW8gPSBqc19ncGlvX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIHJldDsKCiAgc3dpdGNoKG1hZ2ljKSB7fQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2dwaW9fc2V0dGVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIEpTVmFsdWVDb25zdCB2YWx1ZSwgaW50IG1hZ2ljKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZ3BpbyA9IGpzX2dwaW9fZGF0YShjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gcmV0OwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfZ3Bpb19jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgc3RydWN0IGdwaW8qIGdwaW87CiAgSlNWYWx1ZSBvYmogPSBKU19VTkRFRklORUQsIHByb3RvID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGdwaW8gPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBncGlvKSkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgbmV3X3RhcmdldCwgInByb3RvdHlwZSIpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHByb3RvKSkKICAgIGdvdG8gZmFpbDsKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX2dwaW9fY2xhc3NfaWQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHByb3RvKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwoKICBpZighZ3Bpb19vcGVuKGdwaW8pKQogICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJncGlvX29wZW4oKSBmYWlsZWQiKTsKCiAgSlNfU2V0T3BhcXVlKG9iaiwgZ3Bpbyk7CiAgcmV0dXJuIG9iajsKCmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgdm9pZApqc19ncGlvX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIHN0cnVjdCBncGlvKiBncGlvID0gSlNfR2V0T3BhcXVlKHZhbCwganNfZ3Bpb19jbGFzc19pZCk7CiAgaWYoZ3BpbykgewogICAgZ3Bpb19jbG9zZShncGlvKTsKICB9CiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbCk7Cn0KCnN0YXRpYyBKU0NsYXNzRGVmIGpzX2dwaW9fY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJHUElPIiwKICAgIC5maW5hbGl6ZXIgPSBqc19ncGlvX2ZpbmFsaXplciwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19ncGlvX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImluaXRQaW4iLCAyLCBqc19ncGlvX2Z1bmN0aW9ucywgR1BJT19NRVRIT0RfSU5JVF9QSU4pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzZXRQaW4iLCAyLCBqc19ncGlvX2Z1bmN0aW9ucywgR1BJT19NRVRIT0RfU0VUX1BJTiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFBpbiIsIDEsIGpzX2dwaW9fZnVuY3Rpb25zLCBHUElPX01FVEhPRF9HRVRfUElOKSwKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiR1BJTyIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19ncGlvX3N0YXRpY19mdW5jc1tdID0gewogICAgSlNfUFJPUF9JTlQzMl9ERUYoIklOUFVUIiwgMCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJPVVRQVVQiLCAxLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxPVyIsIDAsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSElHSCIsIDEsIEpTX1BST1BfRU5VTUVSQUJMRSksCn07CgppbnQKanNfZ3Bpb19pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBpZihqc19ncGlvX2NsYXNzX2lkID09IDApIHsKICAgIEpTX05ld0NsYXNzSUQoJmpzX2dwaW9fY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19ncGlvX2NsYXNzX2lkLCAmanNfZ3Bpb19jbGFzcyk7CgogICAgZ3Bpb19jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX2dwaW9fY29uc3RydWN0b3IsICJHUElPIiwgMSwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogICAgZ3Bpb19wcm90byA9IEpTX05ld09iamVjdChjdHgpOwoKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgZ3Bpb19wcm90bywganNfZ3Bpb19mdW5jcywgY291bnRvZihqc19ncGlvX2Z1bmNzKSk7CiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGdwaW9fY3RvciwganNfZ3Bpb19zdGF0aWNfZnVuY3MsIGNvdW50b2YoanNfZ3Bpb19zdGF0aWNfZnVuY3MpKTsKICAgIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgZ3Bpb19jdG9yLCBncGlvX3Byb3RvKTsKICAgIC8vIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19ncGlvX2NsYXNzX2lkLCBncGlvX3Byb3RvKTsKICB9CgogIGlmKG0pIHsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIiwgZ3Bpb19jdG9yKTsKICB9CgogIHJldHVybiAwOwp9CgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX2dwaW8KI2VuZGlmCgpWSVNJQkxFIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBpZighKG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19ncGlvX2luaXQpKSkKICAgIHJldHVybiBtOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJHUElPIik7CiAgcmV0dXJuIG07Cn0KAAAAAAAAAADcFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+w0AAAAAAAD7DQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "cmake/QuickJSModule.cmake",
			"settings":
			{
				"buffer_size": 2804,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					29,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAJkGAAAAAAAAmgYAAAAAAAAAAAAAmgYAAAAAAACcBgAAAAAAAAAAAACcBgAAAAAAAJ0GAAAAAAAAAAAAAJ0GAAAAAAAAnwYAAAAAAAAAAAAAmgYAAAAAAACaBgAAAAAAAAIAAAAgIJ0GAAAAAAAAngYAAAAAAAAAAAAAngYAAAAAAACfBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQYAAAAAAACZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ8GAAAAAAAAoQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwYAAAAAAACfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAKAGAAAAAAAAogYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAYAAAAAAACgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "${CMAKE_SYSROOT"
					},
					"DwAAAKEGAAAAAAAAogYAAAAAAAAAAAAAogYAAAAAAACjBgAAAAAAAAAAAACjBgAAAAAAAKQGAAAAAAAAAAAAAKQGAAAAAAAApQYAAAAAAAAAAAAApQYAAAAAAACmBgAAAAAAAAAAAACmBgAAAAAAAKcGAAAAAAAAAAAAAKcGAAAAAAAAqAYAAAAAAAAAAAAAqAYAAAAAAACpBgAAAAAAAAAAAACpBgAAAAAAAKoGAAAAAAAAAAAAAKoGAAAAAAAAqwYAAAAAAAAAAAAAqwYAAAAAAACsBgAAAAAAAAAAAACsBgAAAAAAAK0GAAAAAAAAAAAAAK0GAAAAAAAArgYAAAAAAAAAAAAArgYAAAAAAACvBgAAAAAAAAAAAACvBgAAAAAAALAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQYAAAAAAAChBgAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAALAGAAAAAAAAsQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAYAAAAAAACwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " SR"
					},
					"AwAAALIGAAAAAAAAswYAAAAAAAAAAAAAswYAAAAAAAC0BgAAAAAAAAAAAAC0BgAAAAAAALUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgYAAAAAAACyBgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAALQGAAAAAAAAtAYAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAtQYAAAAAAAC1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "R"
					},
					"AQAAALQGAAAAAAAAtQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAYAAAAAAAC0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"left_delete",
					null,
					"AQAAALQGAAAAAAAAtAYAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAtQYAAAAAAAC1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "TREQUAL"
					},
					"BwAAALQGAAAAAAAAtQYAAAAAAAAAAAAAtQYAAAAAAAC2BgAAAAAAAAAAAAC2BgAAAAAAALcGAAAAAAAAAAAAALcGAAAAAAAAuAYAAAAAAAAAAAAAuAYAAAAAAAC5BgAAAAAAAAAAAAC5BgAAAAAAALoGAAAAAAAAAAAAALoGAAAAAAAAuwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAYAAAAAAAC0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALsGAAAAAAAAvAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwYAAAAAAAC7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAALwGAAAAAAAAvgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAYAAAAAAAC8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAAKAGAAAAAAAAoQYAAAAAAAAAAAAAoQYAAAAAAACiBgAAAAAAAAAAAACiBgAAAAAAAKMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAYAAAAAAACgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKMGAAAAAAAApAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowYAAAAAAACjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"cut",
					null,
					"AQAAAJ0GAAAAAAAAnQYAAAAAAAAnAAAAaWYoTk9UICIke0NNQUtFX1NZU1JPT1R9IiBTVFJFUVVBTCAiIikK",
					"AQAAAAAAAAABAAAAnQYAAAAAAADEBgAAAAAAAAAAAAAAADBA"
				],
				[
					50,
					2,
					"paste",
					null,
					"AgAAAJ0GAAAAAAAAxAYAAAAAAAAAAAAAxAYAAAAAAADrBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQYAAAAAAACdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "end"
					},
					"AwAAAMQGAAAAAAAAxQYAAAAAAAAAAAAAxQYAAAAAAADGBgAAAAAAAAAAAADGBgAAAAAAAMcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAYAAAAAAADEBgAAAAAAAAAAAAAAAAAA"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "\nstring"
					},
					"CQAAAMMGAAAAAAAAxAYAAAAAAAAAAAAAxAYAAAAAAADGBgAAAAAAAAAAAADGBgAAAAAAAMgGAAAAAAAAAAAAAMgGAAAAAAAAyQYAAAAAAAAAAAAAyQYAAAAAAADKBgAAAAAAAAAAAADKBgAAAAAAAMsGAAAAAAAAAAAAAMsGAAAAAAAAzAYAAAAAAAAAAAAAzAYAAAAAAADNBgAAAAAAAAAAAADNBgAAAAAAAM4GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwYAAAAAAADDBgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM4GAAAAAAAAzwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgYAAAAAAADOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAAM4GAAAAAAAAzgYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAzwYAAAAAAADPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM4GAAAAAAAA0AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgYAAAAAAADOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "REG"
					},
					"AwAAAM8GAAAAAAAA0AYAAAAAAAAAAAAA0AYAAAAAAADRBgAAAAAAAAAAAADRBgAAAAAAANIGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwYAAAAAAADPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					3,
					"left_delete",
					null,
					"AwAAANEGAAAAAAAA0QYAAAAAAAABAAAAR9AGAAAAAAAA0AYAAAAAAAABAAAARc8GAAAAAAAAzwYAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAA0gYAAAAAAADSBgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "R"
					},
					"AQAAAM8GAAAAAAAA0AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwYAAAAAAADPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"left_delete",
					null,
					"AQAAAM8GAAAAAAAAzwYAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAA0AYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "R"
					},
					"AQAAAM8GAAAAAAAA0AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwYAAAAAAADPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"left_delete",
					null,
					"AQAAAM8GAAAAAAAAzwYAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAA0AYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "REPLACE"
					},
					"BwAAAM8GAAAAAAAA0AYAAAAAAAAAAAAA0AYAAAAAAADRBgAAAAAAAAAAAADRBgAAAAAAANIGAAAAAAAAAAAAANIGAAAAAAAA0wYAAAAAAAAAAAAA0wYAAAAAAADUBgAAAAAAAAAAAADUBgAAAAAAANUGAAAAAAAAAAAAANUGAAAAAAAA1gYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwYAAAAAAADPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYGAAAAAAAA1wYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gYAAAAAAADWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAANcGAAAAAAAA2QYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wYAAAAAAADXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "${CMAKE_SYSROOT"
					},
					"DwAAANgGAAAAAAAA2QYAAAAAAAAAAAAA2QYAAAAAAADaBgAAAAAAAAAAAADaBgAAAAAAANsGAAAAAAAAAAAAANsGAAAAAAAA3AYAAAAAAAAAAAAA3AYAAAAAAADdBgAAAAAAAAAAAADdBgAAAAAAAN4GAAAAAAAAAAAAAN4GAAAAAAAA3wYAAAAAAAAAAAAA3wYAAAAAAADgBgAAAAAAAAAAAADgBgAAAAAAAOEGAAAAAAAAAAAAAOEGAAAAAAAA4gYAAAAAAAAAAAAA4gYAAAAAAADjBgAAAAAAAAAAAADjBgAAAAAAAOQGAAAAAAAAAAAAAOQGAAAAAAAA5QYAAAAAAAAAAAAA5QYAAAAAAADmBgAAAAAAAAAAAADmBgAAAAAAAOcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AYAAAAAAADYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAOcGAAAAAAAA6AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wYAAAAAAADnBgAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOkGAAAAAAAA6gYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QYAAAAAAADpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"left_delete",
					null,
					"AQAAAOkGAAAAAAAA6QYAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA6gYAAAAAAADqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOkGAAAAAAAA6gYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QYAAAAAAADpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAOoGAAAAAAAA7AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gYAAAAAAADqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOwGAAAAAAAA7QYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AYAAAAAAADsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "QUICKJS_"
					},
					"CAAAAO0GAAAAAAAA7gYAAAAAAAAAAAAA7gYAAAAAAADvBgAAAAAAAAAAAADvBgAAAAAAAPAGAAAAAAAAAAAAAPAGAAAAAAAA8QYAAAAAAAAAAAAA8QYAAAAAAADyBgAAAAAAAAAAAADyBgAAAAAAAPMGAAAAAAAAAAAAAPMGAAAAAAAA9AYAAAAAAAAAAAAA9AYAAAAAAAD1BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QYAAAAAAADtBgAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "PREFIX"
					},
					"BgAAAPUGAAAAAAAA9gYAAAAAAAAAAAAA9gYAAAAAAAD3BgAAAAAAAAAAAAD3BgAAAAAAAPgGAAAAAAAAAAAAAPgGAAAAAAAA+QYAAAAAAAAAAAAA+QYAAAAAAAD6BgAAAAAAAAAAAAD6BgAAAAAAAPsGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QYAAAAAAAD1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPsGAAAAAAAA/AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wYAAAAAAAD7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAPwGAAAAAAAA/gYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AYAAAAAAAD8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "${QUICKJS_PREFI"
					},
					"DwAAAP0GAAAAAAAA/gYAAAAAAAAAAAAA/gYAAAAAAAD/BgAAAAAAAAAAAAD/BgAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAQcAAAAAAAAAAAAAAQcAAAAAAAACBwAAAAAAAAAAAAACBwAAAAAAAAMHAAAAAAAAAAAAAAMHAAAAAAAABAcAAAAAAAAAAAAABAcAAAAAAAAFBwAAAAAAAAAAAAAFBwAAAAAAAAYHAAAAAAAAAAAAAAYHAAAAAAAABwcAAAAAAAAAAAAABwcAAAAAAAAIBwAAAAAAAAAAAAAIBwAAAAAAAAkHAAAAAAAAAAAAAAkHAAAAAAAACgcAAAAAAAAAAAAACgcAAAAAAAALBwAAAAAAAAAAAAALBwAAAAAAAAwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QYAAAAAAAD9BgAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "X}"
					},
					"AgAAAAwHAAAAAAAADQcAAAAAAAAAAAAADQcAAAAAAAAOBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAcAAAAAAAAMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "IJNS"
					},
					"BQAAAPUGAAAAAAAA9gYAAAAAAAAAAAAA9gYAAAAAAAD2BgAAAAAAAAYAAABQUkVGSVj2BgAAAAAAAPcGAAAAAAAAAAAAAPcGAAAAAAAA+AYAAAAAAAAAAAAA+AYAAAAAAAD5BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QYAAAAAAAD7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					3,
					"left_delete",
					null,
					"AwAAAPgGAAAAAAAA+AYAAAAAAAABAAAAU/cGAAAAAAAA9wYAAAAAAAABAAAATvYGAAAAAAAA9gYAAAAAAAABAAAASg",
					"AQAAAAAAAAABAAAA+QYAAAAAAAD5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "NTA"
					},
					"AwAAAPYGAAAAAAAA9wYAAAAAAAAAAAAA9wYAAAAAAAD4BgAAAAAAAAAAAAD4BgAAAAAAAPkGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gYAAAAAAAD2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					2,
					"left_delete",
					null,
					"AgAAAPgGAAAAAAAA+AYAAAAAAAABAAAAQfcGAAAAAAAA9wYAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAA+QYAAAAAAAD5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "STALL_DIR"
					},
					"CQAAAPcGAAAAAAAA+AYAAAAAAAAAAAAA+AYAAAAAAAD5BgAAAAAAAAAAAAD5BgAAAAAAAPoGAAAAAAAAAAAAAPoGAAAAAAAA+wYAAAAAAAAAAAAA+wYAAAAAAAD8BgAAAAAAAAAAAAD8BgAAAAAAAP0GAAAAAAAAAAAAAP0GAAAAAAAA/gYAAAAAAAAAAAAA/gYAAAAAAAD/BgAAAAAAAAAAAAD/BgAAAAAAAAAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wYAAAAAAAD3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"paste",
					null,
					"AgAAAJ0HAAAAAAAAsAcAAAAAAAAAAAAAsAcAAAAAAACwBwAAAAAAAA4AAABRVUlDS0pTX1BSRUZJWA",
					"AQAAAAAAAAABAAAAnQcAAAAAAACrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"paste",
					null,
					"AgAAALgHAAAAAAAAywcAAAAAAAAAAAAAywcAAAAAAADLBwAAAAAAAA4AAABRVUlDS0pTX1BSRUZJWA",
					"AQAAAAAAAAABAAAAxgcAAAAAAAC4BwAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"paste",
					null,
					"AgAAAHgJAAAAAAAAiwkAAAAAAAAAAAAAiwkAAAAAAACLCQAAAAAAAA4AAABRVUlDS0pTX1BSRUZJWA",
					"AQAAAAAAAAABAAAAeAkAAAAAAACGCQAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"paste",
					null,
					"AgAAAPAJAAAAAAAAAwoAAAAAAAAAAAAAAwoAAAAAAAADCgAAAAAAAA4AAABRVUlDS0pTX1BSRUZJWA",
					"AQAAAAAAAAABAAAA/gkAAAAAAADwCQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAABYHAAAAAAAAFwcAAAAAAAAAAAAAFwcAAAAAAAAYBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgcAAAAAAAAWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "\n\nump"
					},
					"CAAAAEEHAAAAAAAAQgcAAAAAAAAAAAAAQgcAAAAAAABEBwAAAAAAAAAAAABEBwAAAAAAAEUHAAAAAAAAAAAAAEUHAAAAAAAARwcAAAAAAAAAAAAAQgcAAAAAAABCBwAAAAAAAAIAAAAgIEUHAAAAAAAARgcAAAAAAAAAAAAARgcAAAAAAABHBwAAAAAAAAAAAABHBwAAAAAAAEgHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQcAAAAAAABBBwAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					3,
					"left_delete",
					null,
					"AwAAAEcHAAAAAAAARwcAAAAAAAABAAAAcEYHAAAAAAAARgcAAAAAAAABAAAAbUUHAAAAAAAARQcAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAASAcAAAAAAABIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "dump_"
					},
					"BQAAAEUHAAAAAAAARgcAAAAAAAAAAAAARgcAAAAAAABHBwAAAAAAAAAAAABHBwAAAAAAAEgHAAAAAAAAAAAAAEgHAAAAAAAASQcAAAAAAAAAAAAASQcAAAAAAABKBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQcAAAAAAABFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"left_delete",
					null,
					"AQAAAEkHAAAAAAAASQcAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAASgcAAAAAAABKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEkHAAAAAAAASwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQcAAAAAAABJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "CMAKE_"
					},
					"BgAAAEoHAAAAAAAASwcAAAAAAAAAAAAASwcAAAAAAABMBwAAAAAAAAAAAABMBwAAAAAAAE0HAAAAAAAAAAAAAE0HAAAAAAAATgcAAAAAAAAAAAAATgcAAAAAAABPBwAAAAAAAAAAAABPBwAAAAAAAFAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgcAAAAAAABKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					5,
					"left_delete",
					null,
					"BQAAAE8HAAAAAAAATwcAAAAAAAABAAAAX04HAAAAAAAATgcAAAAAAAABAAAARU0HAAAAAAAATQcAAAAAAAABAAAAS0wHAAAAAAAATAcAAAAAAAABAAAAQUsHAAAAAAAASwcAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAUAcAAAAAAABQBwAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "Q"
					},
					"AQAAAEsHAAAAAAAATAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwcAAAAAAABLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					2,
					"left_delete",
					null,
					"AgAAAEsHAAAAAAAASwcAAAAAAAABAAAAUUoHAAAAAAAASgcAAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAATAcAAAAAAABMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "QUICKJS_IN"
					},
					"CgAAAEoHAAAAAAAASwcAAAAAAAAAAAAASwcAAAAAAABMBwAAAAAAAAAAAABMBwAAAAAAAE0HAAAAAAAAAAAAAE0HAAAAAAAATgcAAAAAAAAAAAAATgcAAAAAAABPBwAAAAAAAAAAAABPBwAAAAAAAFAHAAAAAAAAAAAAAFAHAAAAAAAAUQcAAAAAAAAAAAAAUQcAAAAAAABSBwAAAAAAAAAAAABSBwAAAAAAAFMHAAAAAAAAAAAAAFMHAAAAAAAAVAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgcAAAAAAABKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert_completion",
					{
						"completion": "QUICKJS_INSTALL_DIR",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "QUICKJS_INSTALL_DIR"
					},
					"AgAAAEoHAAAAAAAASgcAAAAAAAAKAAAAUVVJQ0tKU19JTkoHAAAAAAAAXQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAcAAAAAAABUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"cut",
					null,
					"AQAAAEMHAAAAAAAAQwcAAAAAAAAcAAAAICBkdW1wKFFVSUNLSlNfSU5TVEFMTF9ESVIpCg",
					"AQAAAAAAAAABAAAAXwcAAAAAAABDBwAAAAAAAAAAAAAAAAAA"
				],
				[
					155,
					2,
					"paste",
					null,
					"AgAAAEMHAAAAAAAAXwcAAAAAAAAAAAAAXwcAAAAAAAB7BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwcAAAAAAABDBwAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"paste",
					null,
					"AgAAAEoHAAAAAAAAVwcAAAAAAAAAAAAAVwcAAAAAAABXBwAAAAAAABMAAABRVUlDS0pTX0lOU1RBTExfRElS",
					"AQAAAAAAAAABAAAASgcAAAAAAABdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"cut",
					null,
					"AQAAAFkHAAAAAAAAWQcAAAAAAAAcAAAAICBkdW1wKFFVSUNLSlNfSU5TVEFMTF9ESVIpCg",
					"AQAAAAAAAAABAAAAWQcAAAAAAAB1BwAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					2,
					"paste",
					null,
					"AgAAAFkHAAAAAAAAdQcAAAAAAAAAAAAAdQcAAAAAAACRBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQcAAAAAAABZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"paste",
					null,
					"AgAAAGAHAAAAAAAAbgcAAAAAAAAAAAAAbgcAAAAAAABuBwAAAAAAABMAAABRVUlDS0pTX0lOU1RBTExfRElS",
					"AQAAAAAAAAABAAAAYAcAAAAAAABzBwAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"cut",
					null,
					"AQAAAJoGAAAAAAAAmgYAAAAAAADxAAAACiAgaWYoTk9UICIke0NNQUtFX1NZU1JPT1R9IiBTVFJFUVVBTCAiIikKICAgIHN0cmluZyhSRVBMQUNFICIke0NNQUtFX1NZU1JPT1R9IiAiIiBRVUlDS0pTX0lOU1RBTExfRElSICIke1FVSUNLSlNfUFJFRklYfSIpCiAgZW5kaWYoTk9UICIke0NNQUtFX1NZU1JPT1R9IiBTVFJFUVVBTCAiIikKCiAgZHVtcChDTUFLRV9TWVNST09UKQogIGR1bXAoUVVJQ0tKU19QUkVGSVgpCiAgZHVtcChRVUlDS0pTX0lOU1RBTExfRElSKQ",
					"AQAAAAAAAAABAAAAmgYAAAAAAACLBwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "cmake/FindQuickJS.cmake",
			"settings":
			{
				"buffer_size": 5095,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAABAEAAAAAAAAEQQAAAAAAAAAAAAAEQQAAAAAAAATBAAAAAAAAAAAAAATBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAFgQAAAAAAAAAAAAAEQQAAAAAAAARBAAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"paste",
					null,
					"AQAAABQEAAAAAAAABQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAQAAAAAAAAUBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Searching 186 files for \"CONFIG_PREFIX\" (regex, case sensitive)\n\n/home/roman/Sources/plot-cv/quickjs/modules/CMakeLists.txt:\n  205    set_target_properties(qjsm PROPERTIES LINK_OPTIONS \"${LINK_EXPORT}\" COMPILE_FLAGS \"-w\" RPATH \"${CMAKE_INSTALL_PREFIX}/lib/quickjs\")\n  206  \n  207:   target_compile_definitions(qjsm PRIVATE CONFIG_VERSION=\"${QUICKJS_VERSION}\" _GNU_SOURCE=1 CONFIG_PREFIX=\"${CMAKE_INSTALL_PREFIX}\" CONFIG_BIGNUM=1)\n  208    install(TARGETS qjsm DESTINATION bin)\n  209  \n\n/home/roman/Sources/plot-cv/quickjs/modules/qjsm.c:\n  372  \n  373  const char jsm_default_module_path[] = \".\"\n  374: #ifdef CONFIG_PREFIX\n  375:                                        \":\" CONFIG_PREFIX \"/lib/quickjs\"\n  376  #endif\n  377      ;\n\n/home/roman/Sources/plot-cv/quickjs/modules/cmake/QuickJSModule.cmake:\n   46    set_target_properties(${TARGET_NAME} PROPERTIES PREFIX \"\" RPATH \"${OPENCV_LIBRARY_DIRS}:${QUICKJS_INSTALL_DIR}/lib:${QUICKJS_INSTALL_DIR}/lib/quickjs\" OUTPUT_NAME \"${VNAME}\" BUILD_RPATH \"${CMAKE_CURRENT_BINARY_DIR}:${CMAKE_CURRENT_BINARY_DIR}:${CMAKE_CURRENT_BINARY_DIR}/quickjs:${CMAKE_CURRENT_BINARY_DIR}/quickjs\" COMPILE_FLAGS \"${MODULE_COMPILE_FLAGS}\")\n   47    set_target_properties(${TARGET_NAME}-static PROPERTIES OUTPUT_NAME \"${VNAME}\" COMPILE_FLAGS \"\")\n   48:   target_compile_definitions(${TARGET_NAME} PRIVATE JS_SHARED_LIBRARY=1 JS_${UNAME}_MODULE=1 CONFIG_PREFIX=\"${QUICKJS_INSTALL_DIR}\")\n   49:   target_compile_definitions(${TARGET_NAME}-static PRIVATE JS_${UNAME}_MODULE=1 CONFIG_PREFIX=\"${QUICKJS_INSTALL_DIR}\")\n   50  \n   51    set(LIBRARIES ${${VNAME}_LIBRARIES})\n\n5 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 1620,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/home/roman/Sources/plot-cv/quickjs/modules/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 9056,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"paste",
					null,
					"AgAAAEwiAAAAAAAAXyIAAAAAAAAAAAAAXyIAAAAAAABfIgAAAAAAABQAAABDTUFLRV9JTlNUQUxMX1BSRUZJWA",
					"AQAAAAAAAAABAAAATCIAAAAAAABgIgAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"paste",
					null,
					"AgAAALohAAAAAAAAzSEAAAAAAAAAAAAAzSEAAAAAAADNIQAAAAAAABQAAABDTUFLRV9JTlNUQUxMX1BSRUZJWA",
					"AQAAAAAAAAABAAAAuiEAAAAAAADOIQAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAzSEAAAAAAADNIQAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAzSEAAAAAAADNIQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgIwAAcHJvamVjdChtb2R1bGVzIEMpCgpjbWFrZV9taW5pbXVtX3JlcXVpcmVkKFZFUlNJT04gMy4yKQoKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvZnVuY3Rpb25zLmNtYWtlKQppbmNsdWRlKCR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9jbWFrZS9jaGVjay1mbGFncy5jbWFrZSkKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvUXVpY2tKU01vZHVsZS5jbWFrZSkKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvRmluZFF1aWNrSlMuY21ha2UpCmluY2x1ZGUoJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2NtYWtlL0ZpbmRwaWdwaW8uY21ha2UpCgpmaW5kX3F1aWNranMoKQoKaW5jbHVkZShGaW5kTGliQXJjaGl2ZSkKCmxpbmtfZGlyZWN0b3JpZXMoJHtDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVJ9KQoKaWYoTk9UIExpYkFyY2hpdmVfRk9VTkQpCiAgbWVzc2FnZShFUlJPUiAibGliYXJjaGl2ZSBub3QgZm91bmQiKQplbmRpZihOT1QgTGliQXJjaGl2ZV9GT1VORCkKCnNldChRVUlDS0pTX01PRFVMRVMgYXJjaGl2ZSBianNvbiBjaGlsZC1wcm9jZXNzIGRlZXAgZ3BpbyBsZXhlciBtaXNjIG1tYXAgcGF0aCBwb2ludGVyIHByZWRpY2F0ZSByZXBlYXRlciBzb2NrZXRzIGluc3BlY3QgdHJlZS13YWxrZXIgeG1sKQoKaWYoRVhJU1RTICIke1FVSUNLSlNfSH0iKQoKICBzZXQoQ09NTU9OX0hFQURFUlMgJHtDVVRJTFNfSH0gJHtRVUlDS0pTX0h9KQplbmRpZigpCnNldChjaGlsZF9wcm9jZXNzX1NPVVJDRVMgY2hpbGQtcHJvY2Vzcy5jIGNoaWxkLXByb2Nlc3MuaCBwcm9wZXJ0eS1lbnVtZXJhdGlvbi5jIHByb3BlcnR5LWVudW1lcmF0aW9uLmggdXRpbHMuYyB1dGlscy5oIHZlY3Rvci5jIHZlY3Rvci5oIHFzb3J0X3IuYykKc2V0KGRlZXBfU09VUkNFUyB2ZWN0b3IuYyB2ZWN0b3IuaCBwb2ludGVyLmMgdmlydHVhbC1wcm9wZXJ0aWVzLmMgcHJvcGVydHktZW51bWVyYXRpb24uYyBwcm9wZXJ0eS1lbnVtZXJhdGlvbi5oIHV0aWxzLmMgdXRpbHMuaCBwcmVkaWNhdGUuYyBwcmVkaWNhdGUuaCBwb2ludGVyLmggdmlydHVhbC1wcm9wZXJ0aWVzLmggcXNvcnRfci5jKQojIHNldChkZWVwX0xJQlJBUklFUyBxanMtcG9pbnRlciBxanMtcHJlZGljYXRlKQpzZXQoaW5zcGVjdF9TT1VSQ0VTIHZlY3Rvci5jIHZlY3Rvci5oIGl0ZXJhdGlvbi5oIHV0aWxzLmMgdXRpbHMuaCBwcm9wZXJ0eS1lbnVtZXJhdGlvbi5jIHByb3BlcnR5LWVudW1lcmF0aW9uLmggcXVpY2tqcy1pbnRlcm5hbC5oIHFzb3J0X3IuYykKc2V0KHRyZWVfd2Fsa2VyX1NPVVJDRVMgdmVjdG9yLmMgdmVjdG9yLmggcHJvcGVydHktZW51bWVyYXRpb24uYyBwcm9wZXJ0eS1lbnVtZXJhdGlvbi5oIHV0aWxzLmMgdXRpbHMuaCkKc2V0KHhtbF9TT1VSQ0VTIHZlY3Rvci5jIHZlY3Rvci5oIHByb3BlcnR5LWVudW1lcmF0aW9uLmMgcHJvcGVydHktZW51bWVyYXRpb24uaCB1dGlscy5jIHV0aWxzLmggcXNvcnRfci5jKQpzZXQocGF0aF9TT1VSQ0VTIHBhdGguYyBwYXRoLmggdXRpbHMuYyB1dGlscy5oKQpzZXQocHJlZGljYXRlX1NPVVJDRVMgcHJlZGljYXRlLmMgcHJlZGljYXRlLmggdmVjdG9yLmMgdmVjdG9yLmggdXRpbHMuYyB1dGlscy5oKQpzZXQocG9pbnRlcl9TT1VSQ0VTIHBvaW50ZXIuYyBwb2ludGVyLmggdXRpbHMuYyB1dGlscy5oKQpzZXQobGV4ZXJfU09VUkNFUyBxdWlja2pzLWxleGVyLmggbG9jYXRpb24uYyBsb2NhdGlvbi5oIHV0aWxzLmMgdXRpbHMuaCB2ZWN0b3IuYyB2ZWN0b3IuaCBsZXhlci5jIGxleGVyLmgpCiMgc2V0KGxleGVyX0xJQlJBUklFUyBxdWlja2pzLXByZWRpY2F0ZSkKc2V0KG1tYXBfU09VUkNFUyB1dGlscy5jIHV0aWxzLmgpCnNldChyZXBlYXRlcl9TT1VSQ0VTIHV0aWxzLmMgdXRpbHMuaCkKc2V0KHV0aWxfU09VUkNFUyB1dGlscy5jIHV0aWxzLmggcXVpY2tqcy1pbnNwZWN0LmMpCnNldChsb2NhdGlvbl9TT1VSQ0VTIGxvY2F0aW9uLmMgbG9jYXRpb24uaCBxdWlja2pzLWxvY2F0aW9uLmMgcXVpY2tqcy1sb2NhdGlvbi5oKQpzZXQobWlzY19TT1VSQ0VTIGJhc2U2NC5jIGJhc2U2NC5oIHF1aWNranMtaW50ZXJuYWwuYyBxdWlja2pzLWludGVybmFsLmggJHtMT0NBVElPTl9TT1VSQ0VTfSkKc2V0KGdwaW9fU09VUkNFUyBncGlvLmMgZ3Bpby5oKQppZihwaWdwaW9fTElCUkFSWSkKICBzZXQoZ3Bpb19MSUJSQVJJRVMgJHtwaWdwaW9fTElCUkFSWX0pCmVuZGlmKHBpZ3Bpb19MSUJSQVJZKQoKaW5jbHVkZV9kaXJlY3Rvcmllcygke0xpYkFyY2hpdmVfSU5DTFVERV9ESVJTfSkKc2V0KGFyY2hpdmVfTElCUkFSSUVTICR7TGliQXJjaGl2ZV9MSUJSQVJJRVN9KQoKc2V0KFFKU01fRVhUUkFfU09VUkNFUyAke2xvY2F0aW9uX1NPVVJDRVN9KQoKc2V0X3Byb3BlcnR5KENBQ0hFIENNQUtFX0JVSUxEX1RZUEUgUFJPUEVSVFkgU1RSSU5HUyBEZWJ1ZyBSZWxlYXNlIE1pblNpemVSZWwgUmVsV2l0aERlYkluZm8pCgptZXNzYWdlKAogICJRdWlja0pTCiAgaW5zdGFsbAogIGRpcmVjdG9yeToKICAke1FVSUNLSlNfUFJFRklYfSIpCgpzZXQoQ01BS0VfUkVRVUlSRURfUVVJRVQgVFJVRSkKCmNoZWNrX2ZsYWcoIi1mdmlzaWJpbGl0eT1oaWRkZW4iIFZJU0lCSUxJVFlfSElEREVOIE1PRFVMRV9DT01QSUxFX0ZMQUdTKQoKIyBkdW1wKFZJU0lCSUxJVFlfSElEREVOKSBkdW1wKE1PRFVMRV9DT01QSUxFX0ZMQUdTKQoKY2hlY2tfZmxhZ3MoIi1XYWxsOy1Xbm8tdW51c2VkLXBhcmFtZXRlcjstV25vLXVudXNlZC12YXJpYWJsZTstV25vLXVudXNlZC1idXQtc2V0LXZhcmlhYmxlOy1Xbm8tdW51c2VkLWZ1bmN0aW9uOy1Xbm8tY2FzdC1mdW5jdGlvbi10eXBlIiBDTUFLRV9DX0ZMQUdTKQoKaWYoQ01BS0VfQlVJTERfVFlQRSBTVFJFUVVBTCAiRGVidWciKQogIGNoZWNrX2NfY29tcGlsZXJfZmxhZygiLU8wIiBPX09QVF9OT05FKQogIGlmKE9fT1BUX05PTkUpCiAgICBpZihOT1QgIiR7Q01BS0VfQ19GTEFHU19ERUJVR30iIE1BVENIRVMgIi1PMCIpCiAgICAgIHNldChDTUFLRV9DX0ZMQUdTX0RFQlVHICIke0NNQUtFX0NfRkxBR1NfREVCVUd9IC1PMCIgQ0FDSEUgU1RSSU5HICJDIGNvbXBpbGVyIG9wdGlvbnMiIEZPUkNFKQogICAgZW5kaWYoTk9UICIke0NNQUtFX0NfRkxBR1NfREVCVUd9IiBNQVRDSEVTICItTzAiKQogIGVuZGlmKE9fT1BUX05PTkUpCiAgY2hlY2tfY19jb21waWxlcl9mbGFnKCItZ2dkYiIgR19PUFRfR0RCKQogIGlmKEdfT1BUX0dEQikKICAgIGlmKE5PVCAiJHtDTUFLRV9DX0ZMQUdTX0RFQlVHfSIgTUFUQ0hFUyAiLWdnZGIiKQogICAgICBzZXQoQ01BS0VfQ19GTEFHU19ERUJVRyAiJHtDTUFLRV9DX0ZMQUdTX0RFQlVHfSAtZ2dkYiIgQ0FDSEUgU1RSSU5HICJDIGNvbXBpbGVyIG9wdGlvbnMiIEZPUkNFKQogICAgZW5kaWYoTk9UICIke0NNQUtFX0NfRkxBR1NfREVCVUd9IiBNQVRDSEVTICItZ2dkYiIpCiAgZW5kaWYoR19PUFRfR0RCKQogIGNoZWNrX2NfY29tcGlsZXJfZmxhZygiLVdleHRyYSIgR19XQVJOX0VYVFJBKQogIGlmKEdfV0FSTl9FWFRSQSkKICAgIGlmKE5PVCAiJHtDTUFLRV9DX0ZMQUdTX0RFQlVHfSIgTUFUQ0hFUyAiLVdleHRyYSIpCiAgICAgIHNldChDTUFLRV9DX0ZMQUdTX0RFQlVHICIke0NNQUtFX0NfRkxBR1NfREVCVUd9IC1XZXh0cmEiIENBQ0hFIFNUUklORyAiQyBjb21waWxlciBvcHRpb25zIiBGT1JDRSkKICAgIGVuZGlmKE5PVCAiJHtDTUFLRV9DX0ZMQUdTX0RFQlVHfSIgTUFUQ0hFUyAiLVdleHRyYSIpCiAgZW5kaWYoR19XQVJOX0VYVFJBKQplbmRpZihDTUFLRV9CVUlMRF9UWVBFIFNUUkVRVUFMICJEZWJ1ZyIpCgppbmNsdWRlKENoZWNrRnVuY3Rpb25FeGlzdHMpCgppbmNsdWRlKENoZWNrQ1NvdXJjZVJ1bnMpCgpzZXQoQ01BS0VfUkVRVUlSRURfUVVJRVQgT0ZGKQpjaGVja19pbmNsdWRlX2ZpbGUoc3Bhd24uaCBIQVZFX1NQQVdOX0gpCgppZihIQVZFX1NQQVdOX0gpCiAgbGlzdChBUFBFTkQgQ01BS0VfUkVRVUlSRURfSU5DTFVERVMgc3Bhd24uaCkKCiAgY2hlY2tfZnVuY3Rpb25fZXhpc3RzKHBvc2l4X3NwYXducCBIQVZFX1BPU0lYX1NQQVdOUCkKICBtZXNzYWdlKFNUQVRVUyAiSEFWRV9QT1NJWF9TUEFXTlA6ICR7SEFWRV9QT1NJWF9TUEFXTlB9IikKCiAgaWYoSEFWRV9QT1NJWF9TUEFXTlApCiAgICBhZGRfZGVmaW5pdGlvbnMoLURQT1NJWF9TUEFXTj0xKQogIGVuZGlmKEhBVkVfUE9TSVhfU1BBV05QKQoKZW5kaWYoSEFWRV9TUEFXTl9IKQoKZmlsZShHTE9CIFRFU1RTIHRlc3RzL3Rlc3RfKi5qcykKCnJlbGF0aXZlX3BhdGgoVEVTVFMgIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfSIgJHtURVNUU30pCgppZihET19URVNUUykKICBpbmNsdWRlKENUZXN0KQoKICBmb3JlYWNoKFRFU1QgJHtURVNUU30pCiAgICBiYXNlbmFtZShCQVNFICIke1RFU1R9IikKICAgIHN0cmluZyhSRVBMQUNFICJ0ZXN0XyIgIiIgTkFNRSAiJHtCQVNFfSIpCiAgICBhZGRfdGVzdChOQU1FICIke0JBU0V9IiBDT01NQU5EIGVudiBRVUlDS0pTX01PRFVMRV9QQVRIPSR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfToke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn0gIiR7UUpTfSIgLS1iaWdudW0gIiR7VEVTVH0iIFdPUktJTkdfRElSRUNUT1JZICIke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0iKQogICAgYWRkX2N1c3RvbV90YXJnZXQoIiR7QkFTRX0iIEFMTCBDT01NQU5EIGVudiBRVUlDS0pTX01PRFVMRV9QQVRIPSR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfToke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn0gIiR7UUpTQ30iIC1mYmlnbnVtIC1NIHN0ZCAtTSBvcyAtTSAke05BTUV9IC1vICIke0JBU0V9IiAiJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9LyR7VEVTVH0iIFdPUktJTkdfRElSRUNUT1JZICIke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn0iIFNPVVJDRVMgIiR7VEVTVH0iKQogIGVuZGZvcmVhY2goVEVTVCAke1RFU1RTfSkKZW5kaWYoRE9fVEVTVFMpCgpjaGVja19jX3NvdXJjZV9ydW5zKAogICIgIyBpbmNsdWRlIDxzdGRib29sLmg+XG5ib29sIGZvbyhpbnQgYSwgaW50IGIsIGludCAqYykge1xuICAgcmV0dXJuIF9fYnVpbHRpbl9tdWxfb3ZlcmZsb3coYSwgYiwKICAgICMgYyk7XG59XG5pbnQgbWFpbigpIHtcbiAgIGludCBvdXQ7XG4gICBpZiAoZm9vKDEsIDIsICZvdXQpKSB7XG4gICAgICAgcmV0dXJuIDA7XG4gICB9XG4gcmV0dXJuCiAgICAjIDA7XG59IiBIQVZFX19CVUlMVElOX01VTF9PVkVSRkxPVykKaWYoSEFWRV9fQlVJTFRJTl9NVUxfT1ZFUkZMT1cpCiAgYWRkX2RlZmluaXRpb25zKC1ESEFWRV9fQlVJTFRJTl9NVUxfT1ZFUkZMT1cpCmVuZGlmKEhBVkVfX0JVSUxUSU5fTVVMX09WRVJGTE9XKQoKYWRkcHJlZml4KFNIQVJFRF9UQVJHRVRTICJxanMtIiAke1FVSUNLSlNfTU9EVUxFU30pCmFkZHN1ZmZpeChTVEFUSUNfVEFSR0VUUyAiLXN0YXRpYyIgJHtTSEFSRURfVEFSR0VUU30pCgojIGR1bXAoU1RBVElDX1RBUkdFVFMpCnVuc2V0KFFKU01fTERBREQpCgpzZXQoUUpTTV9MSUJESVIgIiR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfSIpCgpmb3JlYWNoKEpTX01PRFVMRSAke1FVSUNLSlNfTU9EVUxFU30pCiAgbWFrZV9tb2R1bGUoJHtKU19NT0RVTEV9KQogIHN0cmluZyhSRUdFWCBSRVBMQUNFICItIiAiXyIgUUpTTV9NT0RVTEUgIiR7SlNfTU9EVUxFfSIpCiAgbGlzdChBUFBFTkQgUUpTTV9MREFERCAiJHtRSlNNX01PRFVMRX0uYSIpCmVuZGZvcmVhY2goSlNfTU9EVUxFICR7UVVJQ0tKU19NT0RVTEVTfSkKCmR1bXAoUUpTTV9MREFERCBRSlNNX0xJQkRJUikKCnRhcmdldF9saW5rX2xpYnJhcmllcyhxanMtZGVlcCBxanMtcHJlZGljYXRlKQp0YXJnZXRfbGlua19saWJyYXJpZXMocWpzLWxleGVyIHFqcy1wcmVkaWNhdGUpCmFkZF9kZXBlbmRlbmNpZXMocWpzLWxleGVyIHFqcy1wcmVkaWNhdGUpCgpmaWxlKEdMT0IgVEVTVFNfU09VUkNFUyB0ZXN0cy90ZXN0XyouanMpCmxpc3QoRklMVEVSIFRFU1RTX1NPVVJDRVMgRVhDTFVERSBSRUdFWCAidGVzdF9sZXhlci5qcyIpCnNvdXJjZV9ncm91cChURVNUU19HUk9VUCBGSUxFUyAke1RFU1RTX1NPVVJDRVN9KQoKaW5jbHVkZShDVGVzdCkKCmZvcmVhY2goVEVTVF9TT1VSQ0UgJHtURVNUU19TT1VSQ0VTfSkKICBmaWxlKFJFTEFUSVZFX1BBVEggVEVTVF9TT1VSQ0UgIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfSIgIiR7VEVTVF9TT1VSQ0V9IikKICBiYXNlbmFtZShURVNUX05BTUUgJHtURVNUX1NPVVJDRX0gLmpzKQogIGFkZF90ZXN0KE5BTUUgIiR7VEVTVF9OQU1FfSIgQ09NTUFORCBxanNtIC0tYmlnbnVtICIke1RFU1RfU09VUkNFfSIgV09SS0lOR19ESVJFQ1RPUlkgIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfSIpCgplbmRmb3JlYWNoKFRFU1RfU09VUkNFICR7VEVTVFNfU09VUkNFU30pCgpmaWxlKEdMT0IgTElCSlMgIiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9saWIvKi5qcyIpCmxpc3QoRklMVEVSIExJQkpTIEVYQ0xVREUgUkVHRVggImxpYi9yZXF1aXJlLmpzfGxpYi9mcy5qcyIpCgppbnN0YWxsKEZJTEVTICR7TElCSlN9IERFU1RJTkFUSU9OICIke1FVSUNLSlNfTElCUkFSWV9ESVJ9L3F1aWNranMiKQoKc2V0KExJQl9NT0RVTEVTIGNvbnNvbGUgZXZlbnRzIGZzIHBlcmZfaG9va3MgcHJvY2VzcyByZXBsIHJlcXVpcmUgdHR5IHV0aWwpCgpzdHJpbmcoUkVHRVggUkVQTEFDRSAiW15BLVphLXowLTlfXSIgIjsiIEJVSUxUSU5fTElCUyAiJHtMSUJfTU9EVUxFU30iKQoKIyB0YXJnZXRfY29tcGlsZV9kZWZpbml0aW9ucyhxanNtIC1EQlVJTFRJTl9NT0RVTEVTPVxcXCIke0JVSUxUSU5fTElCU31cXFwiKSBtZXNzYWdlKCIke0JVSUxUSU5fTElCU30iCgpsaXN0KEFQUEVORCBDTUFLRV9GSU5EX0xJQlJBUllfUFJFRklYRVMgIiIpCgpmb3JlYWNoKExJQl9NT0RVTEUgJHtMSUJfTU9EVUxFU30pCiAgIyBtZXNzYWdlKCJDb21waWxlIE1vZHVsZTogJHtMSUJfTU9EVUxFfSIpCiAgY29tcGlsZV9tb2R1bGUobGliLyR7TElCX01PRFVMRX0uanMpCmVuZGZvcmVhY2goTElCX01PRFVMRSAke0xJQl9NT0RVTEVTfSkKCmlmKEVYSVNUUyAke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vLi4vZGVmcy5jbWFrZSkKICBzZXQoUVVJQ0tKU19TT1VSQ0VTX1JPT1QgJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9Ly4uKQoKICBpbmNsdWRlKCR7UVVJQ0tKU19TT1VSQ0VTX1JPT1R9L2RlZnMuY21ha2UpCiAgaW5jbHVkZSgke1FVSUNLSlNfU09VUkNFU19ST09UfS9jbWFrZS9jaGVjay1saWJyYXJpZXMuY21ha2UpCgogIGFkZF9jdXN0b21fY29tbWFuZChPVVRQVVQgJHtNT0RVTEVTX0RJUn0vcWpzY2FsYy5jIENPTU1BTkQgJHtRSlNDfSAtZmJpZ251bSAtYyAtbyAke01PRFVMRVNfRElSfS9xanNjYWxjLmMgLW0gJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9Ly4uL3Fqc2NhbGMuanMgREVQRU5EUyAke1FKU0NfREVQU30gV09SS0lOR19ESVJFQ1RPUlkgJHtDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVJ9IENPTU1FTlQgIkdlbmVyYXRlIGZyb20gcWpzY2FsYy5qcyB1c2luZyBxanMgY29tcGlsZXIiIFNPVVJDRVMgJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9Ly4uL3Fqc2NhbGMuanMpCgogIHNldChRSlNNX1NPVVJDRVMgcWpzbS5jIHZlY3Rvci5jICR7TU9EVUxFU19ESVJ9L3JlcGwuYyAke01PRFVMRVNfRElSfS9xanNjYWxjLmMgJHtNT0RVTEVTX0RJUn0vY29uc29sZS5jICR7TU9EVUxFU19ESVJ9L2V2ZW50cy5jICR7TU9EVUxFU19ESVJ9L3JlcXVpcmUuYyAke01PRFVMRVNfRElSfS9mcy5jICR7TU9EVUxFU19ESVJ9L3BlcmZfaG9va3MuYyAke01PRFVMRVNfRElSfS9wcm9jZXNzLmMgJHtNT0RVTEVTX0RJUn0vdHR5LmMgJHtNT0RVTEVTX0RJUn0vdXRpbC5jICR7UUpTTV9FWFRSQV9TT1VSQ0VTfSkKCiAgaWYoRVhJU1RTICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8uLi9xdWlja2pzLWRlYnVnZ2VyLmMpCiAgICBpZihRVUlDS0pTX0RFQlVHR0VSKQogICAgICBzZXQoUUpTTV9TT1VSQ0VTICR7UUpTTV9TT1VSQ0VTfSAke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vLi4vcXVpY2tqcy1kZWJ1Z2dlci5jICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8uLi9xdWlja2pzLWRlYnVnZ2VyLXRyYW5zcG9ydC0ke1RSQU5TUE9SVF9QTEFURk9STX0uYykKICAgIGVuZGlmKFFVSUNLSlNfREVCVUdHRVIpCiAgZW5kaWYoRVhJU1RTICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8uLi9xdWlja2pzLWRlYnVnZ2VyLmMpCgogIGR1bXAoUUpTTV9TT1VSQ0VTKQogIGFkZF9leGVjdXRhYmxlKHFqc20gJHtRSlNNX1NPVVJDRVN9KQoKICBpZihRSlNfTU9EVUxFU19TVEFUSUMpCiAgICBhZGRfZGVwZW5kZW5jaWVzKHFqc20gJHtRSlNfTU9EVUxFU19TVEFUSUN9KQogIGVuZGlmKFFKU19NT0RVTEVTX1NUQVRJQykKCiAgIyB0YXJnZXRfbGlua19saWJyYXJpZXMocWpzICR7UVVJQ0tKU19MSUJSQVJZfSkKICB0YXJnZXRfbGlua19kaXJlY3RvcmllcyhxanNtIFBVQkxJQyAke1FKU01fTElCRElSfSAke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn0pCiAgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKHFqc20gcXVpY2tqcyAke1FKU01fTERBRER9ICR7TElCUFRIUkVBRH0gJHtMSUJNfSAke0xJQkRMfSAke0xJQldTMl8zMn0pCiAgc2V0X3RhcmdldF9wcm9wZXJ0aWVzKHFqc20gUFJPUEVSVElFUyBMSU5LX09QVElPTlMgIiR7TElOS19FWFBPUlR9IiBDT01QSUxFX0ZMQUdTICItdyIgUlBBVEggIiR7UVVJQ0tKU19JTlNUQUxMX0RJUn0vbGliL3F1aWNranMiKQoKICB0YXJnZXRfY29tcGlsZV9kZWZpbml0aW9ucyhxanNtIFBSSVZBVEUgQ09ORklHX1ZFUlNJT049IiR7UVVJQ0tKU19WRVJTSU9OfSIgX0dOVV9TT1VSQ0U9MSBDT05GSUdfUFJFRklYPSIke1FVSUNLSlNfSU5TVEFMTF9ESVJ9IiBDT05GSUdfQklHTlVNPTEpCiAgaW5zdGFsbChUQVJHRVRTIHFqc20gREVTVElOQVRJT04gYmluKQoKZW5kaWYoRVhJU1RTICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8uLi9kZWZzLmNtYWtlKQoAAAAAAAAAAGAjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzSEAAAAAAADNIQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "cmake/Findpigpio.cmake",
			"settings":
			{
				"buffer_size": 1077,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "cmake/functions.cmake",
			"settings":
			{
				"buffer_size": 1841,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs-repeater.c",
			"settings":
			{
				"buffer_size": 4679,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC5AAAAAAAAAAYAAAAudGFnID0",
					"AQAAAAAAAAABAAAAuAAAAAAAAAC+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADfAAAAAAAAAAYAAAAudGFnID0",
					"AQAAAAAAAAABAAAA3gAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABLEgAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxzdHJpbmcuaD4KCnRocmVhZF9sb2NhbCBWSVNJQkxFIEpTQ2xhc3NJRCBqc19yZXBlYXRlcl9jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIHJlcGVhdGVyX3Byb3RvID0geyAgSlNfVEFHX1VOREVGSU5FRH0sIHJlcGVhdGVyX2N0b3IgPSB7ICBKU19UQUdfVU5ERUZJTkVEfTsKCmVudW0gcmVwZWF0ZXJfZnVuY3Rpb25zIHsgU1RBVElDX1JBQ0UgPSAwLCBTVEFUSUNfTUVSR0UsIFNUQVRJQ19aSVAgfTsKZW51bSByZXBlYXRlcl9nZXR0ZXJzIHsgUFJPUF9MRU5HVEggPSAwLCBQUk9QX1BBVEggfTsKCnR5cGVkZWYgdW5pb24gewogIEpTVmFsdWUgcHJvbWlzZTsKICBKU1ZhbHVlIHB1c2gsIHN0b3A7Cn0gUmVwZWF0ZXI7CgpzdGF0aWMgSlNWYWx1ZQpqc19yZXBlYXRlcl9wdXNoKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMsIEpTVmFsdWUqIGZ1bmNfZGF0YSkgewogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3JlcGVhdGVyX3N0b3AoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYywgSlNWYWx1ZSogZnVuY19kYXRhKSB7CiAgcmV0dXJuIEpTX1VOREVGSU5FRDsKfQoKSlNWYWx1ZQpqc19yZXBlYXRlcl9uZXcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBwcm90bywgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgUmVwZWF0ZXIqIHJwdDsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRDsKICBpZighKHJwdCA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoUmVwZWF0ZXIpKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX3JlcGVhdGVyX2NsYXNzX2lkKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwogIEpTX1NldE9wYXF1ZShvYmosIHJwdCk7CgogIHJwdC0+cHJvbWlzZSA9IEpTX1VOREVGSU5FRDsKICBycHQtPnB1c2ggPSBKU19OZXdDRnVuY3Rpb25EYXRhKGN0eCwgJmpzX3JlcGVhdGVyX3B1c2gsIDAsIDAsIDEsIChKU1ZhbHVlQ29uc3QqKSZvYmopOwogIHJwdC0+c3RvcCA9IEpTX05ld0NGdW5jdGlvbkRhdGEoY3R4LCAmanNfcmVwZWF0ZXJfc3RvcCwgMCwgMCwgMSwgKEpTVmFsdWVDb25zdCopJm9iaik7CgogIHJldHVybiBvYmo7CmZhaWw6CiAganNfZnJlZShjdHgsIHJwdCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpKU1ZhbHVlCmpzX3JlcGVhdGVyX3dyYXAoSlNDb250ZXh0KiBjdHgsIFJlcGVhdGVyKiBycHQpIHsKICBKU1ZhbHVlIG9iajsKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcmVwZWF0ZXJfcHJvdG8sIGpzX3JlcGVhdGVyX2NsYXNzX2lkKTsKICBKU19TZXRPcGFxdWUob2JqLCBycHQpOwogIHJldHVybiBvYmo7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3JlcGVhdGVyX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHByb3RvOwogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBwcm90byA9IEpTX0R1cFZhbHVlKGN0eCwgcmVwZWF0ZXJfcHJvdG8pOwoKICByZXR1cm4ganNfcmVwZWF0ZXJfbmV3KGN0eCwgcHJvdG8sIGFyZ2MgPiAwID8gYXJndlswXSA6IEpTX1VOREVGSU5FRCk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3JlcGVhdGVyX25leHQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIEJPT0wqIHBkb25lLCBpbnQgbWFnaWMpIHsKICBSZXBlYXRlciogcnB0OwoKICBpZighKHJwdCA9IEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmVwZWF0ZXJfY2xhc3NfaWQpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3JlcGVhdGVyX2Z1bmNzKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBSZXBlYXRlciogcnB0OwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKHJwdCA9IEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmVwZWF0ZXJfY2xhc3NfaWQpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBTVEFUSUNfUkFDRTogYnJlYWs7CiAgICBjYXNlIFNUQVRJQ19NRVJHRTogYnJlYWs7CiAgICBjYXNlIFNUQVRJQ19aSVA6IGJyZWFrOwogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgdm9pZApqc19yZXBlYXRlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBSZXBlYXRlciogcnB0OwoKICBpZigocnB0ID0gSlNfR2V0T3BhcXVlKHZhbCwganNfcmVwZWF0ZXJfY2xhc3NfaWQpKSkgewoKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBycHQtPnByb21pc2UpOwogICAgSlNfRnJlZVZhbHVlUlQocnQsIHJwdC0+cHVzaCk7CiAgICBKU19GcmVlVmFsdWVSVChydCwgcnB0LT5zdG9wKTsKCiAgICBqc19mcmVlX3J0KHJ0LCBycHQpOwogIH0KICBKU19GcmVlVmFsdWVSVChydCwgdmFsKTsKfQoKc3RhdGljIEpTQ2xhc3NEZWYganNfcmVwZWF0ZXJfY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJSZXBlYXRlciIsCiAgICAuZmluYWxpemVyID0ganNfcmVwZWF0ZXJfZmluYWxpemVyLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX3JlcGVhdGVyX3Byb3RvX2Z1bmNzW10gPSB7CiAgICBKU19JVEVSQVRPUl9ORVhUX0RFRigibmV4dCIsIDAsIGpzX3JlcGVhdGVyX25leHQsIDApLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJSZXBlYXRlciIsIEpTX1BST1BfQ19XX0UpLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX3JlcGVhdGVyX3N0YXRpY19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyYWNlIiwgMSwganNfcmVwZWF0ZXJfZnVuY3MsIFNUQVRJQ19SQUNFKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigibWVyZ2UiLCAxLCBqc19yZXBlYXRlcl9mdW5jcywgU1RBVElDX01FUkdFKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiemlwIiwgMSwganNfcmVwZWF0ZXJfZnVuY3MsIFNUQVRJQ19aSVApLAp9OwoKc3RhdGljIGludApqc19yZXBlYXRlcl9pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBKU19OZXdDbGFzc0lEKCZqc19yZXBlYXRlcl9jbGFzc19pZCk7CiAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19yZXBlYXRlcl9jbGFzc19pZCwgJmpzX3JlcGVhdGVyX2NsYXNzKTsKCiAgcmVwZWF0ZXJfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIHJlcGVhdGVyX3Byb3RvLCBqc19yZXBlYXRlcl9wcm90b19mdW5jcywgY291bnRvZihqc19yZXBlYXRlcl9wcm90b19mdW5jcykpOwogIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19yZXBlYXRlcl9jbGFzc19pZCwgcmVwZWF0ZXJfcHJvdG8pOwoKICByZXBlYXRlcl9jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX3JlcGVhdGVyX2NvbnN0cnVjdG9yLCAiUmVwZWF0ZXIiLCAxLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CgogIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgcmVwZWF0ZXJfY3RvciwgcmVwZWF0ZXJfcHJvdG8pOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgcmVwZWF0ZXJfY3RvciwganNfcmVwZWF0ZXJfc3RhdGljX2Z1bmNzLCBjb3VudG9mKGpzX3JlcGVhdGVyX3N0YXRpY19mdW5jcykpOwoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUmVwZWF0ZXIiLCByZXBlYXRlcl9jdG9yKTsKICB9CgogIHJldHVybiAwOwp9CgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX3JlcGVhdGVyCiNlbmRpZgoKVklTSUJMRSBKU01vZHVsZURlZioKSlNfSU5JVF9NT0RVTEUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKSB7CiAgSlNNb2R1bGVEZWYqIG07CiAgbSA9IEpTX05ld0NNb2R1bGUoY3R4LCBtb2R1bGVfbmFtZSwgJmpzX3JlcGVhdGVyX2luaXQpOwogIGlmKCFtKQogICAgcmV0dXJuIE5VTEw7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlJlcGVhdGVyIik7CiAgcmV0dXJuIG07Cn0KAAAAAAAAAABLEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wAAAAAAAADfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABLEgAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxzdHJpbmcuaD4KCnRocmVhZF9sb2NhbCBWSVNJQkxFIEpTQ2xhc3NJRCBqc19yZXBlYXRlcl9jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIHJlcGVhdGVyX3Byb3RvID0geyAgSlNfVEFHX1VOREVGSU5FRH0sIHJlcGVhdGVyX2N0b3IgPSB7ICBKU19UQUdfVU5ERUZJTkVEfTsKCmVudW0gcmVwZWF0ZXJfZnVuY3Rpb25zIHsgU1RBVElDX1JBQ0UgPSAwLCBTVEFUSUNfTUVSR0UsIFNUQVRJQ19aSVAgfTsKZW51bSByZXBlYXRlcl9nZXR0ZXJzIHsgUFJPUF9MRU5HVEggPSAwLCBQUk9QX1BBVEggfTsKCnR5cGVkZWYgdW5pb24gewogIEpTVmFsdWUgcHJvbWlzZTsKICBKU1ZhbHVlIHB1c2gsIHN0b3A7Cn0gUmVwZWF0ZXI7CgpzdGF0aWMgSlNWYWx1ZQpqc19yZXBlYXRlcl9wdXNoKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMsIEpTVmFsdWUqIGZ1bmNfZGF0YSkgewogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3JlcGVhdGVyX3N0b3AoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYywgSlNWYWx1ZSogZnVuY19kYXRhKSB7CiAgcmV0dXJuIEpTX1VOREVGSU5FRDsKfQoKSlNWYWx1ZQpqc19yZXBlYXRlcl9uZXcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBwcm90bywgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgUmVwZWF0ZXIqIHJwdDsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRDsKICBpZighKHJwdCA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoUmVwZWF0ZXIpKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX3JlcGVhdGVyX2NsYXNzX2lkKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwogIEpTX1NldE9wYXF1ZShvYmosIHJwdCk7CgogIHJwdC0+cHJvbWlzZSA9IEpTX1VOREVGSU5FRDsKICBycHQtPnB1c2ggPSBKU19OZXdDRnVuY3Rpb25EYXRhKGN0eCwgJmpzX3JlcGVhdGVyX3B1c2gsIDAsIDAsIDEsIChKU1ZhbHVlQ29uc3QqKSZvYmopOwogIHJwdC0+c3RvcCA9IEpTX05ld0NGdW5jdGlvbkRhdGEoY3R4LCAmanNfcmVwZWF0ZXJfc3RvcCwgMCwgMCwgMSwgKEpTVmFsdWVDb25zdCopJm9iaik7CgogIHJldHVybiBvYmo7CmZhaWw6CiAganNfZnJlZShjdHgsIHJwdCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpKU1ZhbHVlCmpzX3JlcGVhdGVyX3dyYXAoSlNDb250ZXh0KiBjdHgsIFJlcGVhdGVyKiBycHQpIHsKICBKU1ZhbHVlIG9iajsKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcmVwZWF0ZXJfcHJvdG8sIGpzX3JlcGVhdGVyX2NsYXNzX2lkKTsKICBKU19TZXRPcGFxdWUob2JqLCBycHQpOwogIHJldHVybiBvYmo7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3JlcGVhdGVyX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHByb3RvOwogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBwcm90byA9IEpTX0R1cFZhbHVlKGN0eCwgcmVwZWF0ZXJfcHJvdG8pOwoKICByZXR1cm4ganNfcmVwZWF0ZXJfbmV3KGN0eCwgcHJvdG8sIGFyZ2MgPiAwID8gYXJndlswXSA6IEpTX1VOREVGSU5FRCk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3JlcGVhdGVyX25leHQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIEJPT0wqIHBkb25lLCBpbnQgbWFnaWMpIHsKICBSZXBlYXRlciogcnB0OwoKICBpZighKHJwdCA9IEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmVwZWF0ZXJfY2xhc3NfaWQpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3JlcGVhdGVyX2Z1bmNzKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBSZXBlYXRlciogcnB0OwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKHJwdCA9IEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmVwZWF0ZXJfY2xhc3NfaWQpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBTVEFUSUNfUkFDRTogYnJlYWs7CiAgICBjYXNlIFNUQVRJQ19NRVJHRTogYnJlYWs7CiAgICBjYXNlIFNUQVRJQ19aSVA6IGJyZWFrOwogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgdm9pZApqc19yZXBlYXRlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBSZXBlYXRlciogcnB0OwoKICBpZigocnB0ID0gSlNfR2V0T3BhcXVlKHZhbCwganNfcmVwZWF0ZXJfY2xhc3NfaWQpKSkgewoKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBycHQtPnByb21pc2UpOwogICAgSlNfRnJlZVZhbHVlUlQocnQsIHJwdC0+cHVzaCk7CiAgICBKU19GcmVlVmFsdWVSVChydCwgcnB0LT5zdG9wKTsKCiAgICBqc19mcmVlX3J0KHJ0LCBycHQpOwogIH0KICBKU19GcmVlVmFsdWVSVChydCwgdmFsKTsKfQoKc3RhdGljIEpTQ2xhc3NEZWYganNfcmVwZWF0ZXJfY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJSZXBlYXRlciIsCiAgICAuZmluYWxpemVyID0ganNfcmVwZWF0ZXJfZmluYWxpemVyLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX3JlcGVhdGVyX3Byb3RvX2Z1bmNzW10gPSB7CiAgICBKU19JVEVSQVRPUl9ORVhUX0RFRigibmV4dCIsIDAsIGpzX3JlcGVhdGVyX25leHQsIDApLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJSZXBlYXRlciIsIEpTX1BST1BfQ19XX0UpLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX3JlcGVhdGVyX3N0YXRpY19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyYWNlIiwgMSwganNfcmVwZWF0ZXJfZnVuY3MsIFNUQVRJQ19SQUNFKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigibWVyZ2UiLCAxLCBqc19yZXBlYXRlcl9mdW5jcywgU1RBVElDX01FUkdFKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiemlwIiwgMSwganNfcmVwZWF0ZXJfZnVuY3MsIFNUQVRJQ19aSVApLAp9OwoKc3RhdGljIGludApqc19yZXBlYXRlcl9pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBKU19OZXdDbGFzc0lEKCZqc19yZXBlYXRlcl9jbGFzc19pZCk7CiAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19yZXBlYXRlcl9jbGFzc19pZCwgJmpzX3JlcGVhdGVyX2NsYXNzKTsKCiAgcmVwZWF0ZXJfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIHJlcGVhdGVyX3Byb3RvLCBqc19yZXBlYXRlcl9wcm90b19mdW5jcywgY291bnRvZihqc19yZXBlYXRlcl9wcm90b19mdW5jcykpOwogIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19yZXBlYXRlcl9jbGFzc19pZCwgcmVwZWF0ZXJfcHJvdG8pOwoKICByZXBlYXRlcl9jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX3JlcGVhdGVyX2NvbnN0cnVjdG9yLCAiUmVwZWF0ZXIiLCAxLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CgogIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgcmVwZWF0ZXJfY3RvciwgcmVwZWF0ZXJfcHJvdG8pOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgcmVwZWF0ZXJfY3RvciwganNfcmVwZWF0ZXJfc3RhdGljX2Z1bmNzLCBjb3VudG9mKGpzX3JlcGVhdGVyX3N0YXRpY19mdW5jcykpOwoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUmVwZWF0ZXIiLCByZXBlYXRlcl9jdG9yKTsKICB9CgogIHJldHVybiAwOwp9CgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX3JlcGVhdGVyCiNlbmRpZgoKVklTSUJMRSBKU01vZHVsZURlZioKSlNfSU5JVF9NT0RVTEUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKSB7CiAgSlNNb2R1bGVEZWYqIG07CiAgbSA9IEpTX05ld0NNb2R1bGUoY3R4LCBtb2R1bGVfbmFtZSwgJmpzX3JlcGVhdGVyX2luaXQpOwogIGlmKCFtKQogICAgcmV0dXJuIE5VTEw7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlJlcGVhdGVyIik7CiAgcmV0dXJuIG07Cn0KAAAAAAAAAABHEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wAAAAAAAADfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABHEgAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxzdHJpbmcuaD4KCnRocmVhZF9sb2NhbCBWSVNJQkxFIEpTQ2xhc3NJRCBqc19yZXBlYXRlcl9jbGFzc19pZCA9IDA7CnRocmVhZF9sb2NhbCBKU1ZhbHVlIHJlcGVhdGVyX3Byb3RvID0ge0pTX1RBR19VTkRFRklORUR9LCByZXBlYXRlcl9jdG9yID0ge0pTX1RBR19VTkRFRklORUR9OwoKZW51bSByZXBlYXRlcl9mdW5jdGlvbnMgeyBTVEFUSUNfUkFDRSA9IDAsIFNUQVRJQ19NRVJHRSwgU1RBVElDX1pJUCB9OwplbnVtIHJlcGVhdGVyX2dldHRlcnMgeyBQUk9QX0xFTkdUSCA9IDAsIFBST1BfUEFUSCB9OwoKdHlwZWRlZiB1bmlvbiB7CiAgSlNWYWx1ZSBwcm9taXNlOwogIEpTVmFsdWUgcHVzaCwgc3RvcDsKfSBSZXBlYXRlcjsKCnN0YXRpYyBKU1ZhbHVlCmpzX3JlcGVhdGVyX3B1c2goSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYywgSlNWYWx1ZSogZnVuY19kYXRhKSB7CiAgcmV0dXJuIEpTX1VOREVGSU5FRDsKfQoKc3RhdGljIEpTVmFsdWUKanNfcmVwZWF0ZXJfc3RvcChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlKiBmdW5jX2RhdGEpIHsKICByZXR1cm4gSlNfVU5ERUZJTkVEOwp9CgpKU1ZhbHVlCmpzX3JlcGVhdGVyX25ldyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHByb3RvLCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBSZXBlYXRlciogcnB0OwogIEpTVmFsdWUgb2JqID0gSlNfVU5ERUZJTkVEOwogIGlmKCEocnB0ID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihSZXBlYXRlcikpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfcmVwZWF0ZXJfY2xhc3NfaWQpOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CiAgSlNfU2V0T3BhcXVlKG9iaiwgcnB0KTsKCiAgcnB0LT5wcm9taXNlID0gSlNfVU5ERUZJTkVEOwogIHJwdC0+cHVzaCA9IEpTX05ld0NGdW5jdGlvbkRhdGEoY3R4LCAmanNfcmVwZWF0ZXJfcHVzaCwgMCwgMCwgMSwgKEpTVmFsdWVDb25zdCopJm9iaik7CiAgcnB0LT5zdG9wID0gSlNfTmV3Q0Z1bmN0aW9uRGF0YShjdHgsICZqc19yZXBlYXRlcl9zdG9wLCAwLCAwLCAxLCAoSlNWYWx1ZUNvbnN0Kikmb2JqKTsKCiAgcmV0dXJuIG9iajsKZmFpbDoKICBqc19mcmVlKGN0eCwgcnB0KTsKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCkpTVmFsdWUKanNfcmVwZWF0ZXJfd3JhcChKU0NvbnRleHQqIGN0eCwgUmVwZWF0ZXIqIHJwdCkgewogIEpTVmFsdWUgb2JqOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCByZXBlYXRlcl9wcm90bywganNfcmVwZWF0ZXJfY2xhc3NfaWQpOwogIEpTX1NldE9wYXF1ZShvYmosIHJwdCk7CiAgcmV0dXJuIG9iajsKfQoKc3RhdGljIEpTVmFsdWUKanNfcmVwZWF0ZXJfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcHJvdG87CiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgbmV3X3RhcmdldCwgInByb3RvdHlwZSIpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHByb3RvKSkKICAgIHByb3RvID0gSlNfRHVwVmFsdWUoY3R4LCByZXBlYXRlcl9wcm90byk7CgogIHJldHVybiBqc19yZXBlYXRlcl9uZXcoY3R4LCBwcm90bywgYXJnYyA+IDAgPyBhcmd2WzBdIDogSlNfVU5ERUZJTkVEKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfcmVwZWF0ZXJfbmV4dChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgQk9PTCogcGRvbmUsIGludCBtYWdpYykgewogIFJlcGVhdGVyKiBycHQ7CgogIGlmKCEocnB0ID0gSlNfR2V0T3BhcXVlMihjdHgsIHRoaXNfdmFsLCBqc19yZXBlYXRlcl9jbGFzc19pZCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgcmV0dXJuIEpTX1VOREVGSU5FRDsKfQoKc3RhdGljIEpTVmFsdWUKanNfcmVwZWF0ZXJfZnVuY3MoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIFJlcGVhdGVyKiBycHQ7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEocnB0ID0gSlNfR2V0T3BhcXVlMihjdHgsIHRoaXNfdmFsLCBqc19yZXBlYXRlcl9jbGFzc19pZCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFNUQVRJQ19SQUNFOiBicmVhazsKICAgIGNhc2UgU1RBVElDX01FUkdFOiBicmVhazsKICAgIGNhc2UgU1RBVElDX1pJUDogYnJlYWs7CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyB2b2lkCmpzX3JlcGVhdGVyX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIFJlcGVhdGVyKiBycHQ7CgogIGlmKChycHQgPSBKU19HZXRPcGFxdWUodmFsLCBqc19yZXBlYXRlcl9jbGFzc19pZCkpKSB7CgogICAgSlNfRnJlZVZhbHVlUlQocnQsIHJwdC0+cHJvbWlzZSk7CiAgICBKU19GcmVlVmFsdWVSVChydCwgcnB0LT5wdXNoKTsKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBycHQtPnN0b3ApOwoKICAgIGpzX2ZyZWVfcnQocnQsIHJwdCk7CiAgfQogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCB2YWwpOwp9CgpzdGF0aWMgSlNDbGFzc0RlZiBqc19yZXBlYXRlcl9jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIlJlcGVhdGVyIiwKICAgIC5maW5hbGl6ZXIgPSBqc19yZXBlYXRlcl9maW5hbGl6ZXIsCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfcmVwZWF0ZXJfcHJvdG9fZnVuY3NbXSA9IHsKICAgIEpTX0lURVJBVE9SX05FWFRfREVGKCJuZXh0IiwgMCwganNfcmVwZWF0ZXJfbmV4dCwgMCksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIlJlcGVhdGVyIiwgSlNfUFJPUF9DX1dfRSksCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfcmVwZWF0ZXJfc3RhdGljX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInJhY2UiLCAxLCBqc19yZXBlYXRlcl9mdW5jcywgU1RBVElDX1JBQ0UpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJtZXJnZSIsIDEsIGpzX3JlcGVhdGVyX2Z1bmNzLCBTVEFUSUNfTUVSR0UpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ6aXAiLCAxLCBqc19yZXBlYXRlcl9mdW5jcywgU1RBVElDX1pJUCksCn07CgpzdGF0aWMgaW50CmpzX3JlcGVhdGVyX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIEpTX05ld0NsYXNzSUQoJmpzX3JlcGVhdGVyX2NsYXNzX2lkKTsKICBKU19OZXdDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIGpzX3JlcGVhdGVyX2NsYXNzX2lkLCAmanNfcmVwZWF0ZXJfY2xhc3MpOwoKICByZXBlYXRlcl9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgcmVwZWF0ZXJfcHJvdG8sIGpzX3JlcGVhdGVyX3Byb3RvX2Z1bmNzLCBjb3VudG9mKGpzX3JlcGVhdGVyX3Byb3RvX2Z1bmNzKSk7CiAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIGpzX3JlcGVhdGVyX2NsYXNzX2lkLCByZXBlYXRlcl9wcm90byk7CgogIHJlcGVhdGVyX2N0b3IgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwganNfcmVwZWF0ZXJfY29uc3RydWN0b3IsICJSZXBlYXRlciIsIDEsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKCiAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCByZXBlYXRlcl9jdG9yLCByZXBlYXRlcl9wcm90byk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCByZXBlYXRlcl9jdG9yLCBqc19yZXBlYXRlcl9zdGF0aWNfZnVuY3MsIGNvdW50b2YoanNfcmVwZWF0ZXJfc3RhdGljX2Z1bmNzKSk7CgogIGlmKG0pIHsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJSZXBlYXRlciIsIHJlcGVhdGVyX2N0b3IpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCiNpZmRlZiBKU19TSEFSRURfTElCUkFSWQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfcmVwZWF0ZXIKI2VuZGlmCgpWSVNJQkxFIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfcmVwZWF0ZXJfaW5pdCk7CiAgaWYoIW0pCiAgICByZXR1cm4gTlVMTDsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUmVwZWF0ZXIiKTsKICByZXR1cm4gbTsKfQoAAAAAAAAAAEcSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wAAAAAAAADfAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-path.c",
			"settings":
			{
				"buffer_size": 12571,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					2,
					"left_delete",
					null,
					"AgAAAM4AAAAAAAAAzgAAAAAAAAADAAAAdGFnzQAAAAAAAADNAAAAAAAAAAEAAAAu",
					"AQAAAAAAAAABAAAAzgAAAAAAAADRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					2,
					"right_delete",
					null,
					"AgAAAM0AAAAAAAAAzQAAAAAAAAABAAAAIM0AAAAAAAAAzQAAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAzQAAAAAAAADNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAzQAAAAAAAADNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAzQAAAAAAAADNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAzQAAAAAAAADNAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-predicate.c",
			"settings":
			{
				"buffer_size": 27908,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					14,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAANQoAAAAAAACaCgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAXmIAAAAAAACZYgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAEbQAAI2lmbmRlZiBfR05VX1NPVVJDRQojZGVmaW5lIF9HTlVfU09VUkNFCiNlbmRpZgoKI2luY2x1ZGUgInF1aWNranMuaCIKI2luY2x1ZGUgInF1aWNranMtcHJlZGljYXRlLmgiCgp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfcHJlZGljYXRlX2NsYXNzX2lkID0gMDsKdGhyZWFkX2xvY2FsIEpTVmFsdWUgcHJlZGljYXRlX3Byb3RvID0ge0pTX1RBR19VTkRFRklORUR9LCBwcmVkaWNhdGVfY3RvciA9IHtKU19UQUdfVU5ERUZJTkVEfTsKCmVudW0gewogIE1FVEhPRF9FVkFMID0gMCwKfTsKCmVudW0gewogIE9QRVJBVE9SX1BMVVMgPSAwLAogIE9QRVJBVE9SX01JTlVTLAogIE9QRVJBVE9SX01VTCwKICBPUEVSQVRPUl9ESVYsCiAgT1BFUkFUT1JfTU9ELAogIE9QRVJBVE9SX0JPUiwKICBPUEVSQVRPUl9CQU5ELAogIE9QRVJBVE9SX1BPVywKfTsKCmVudW0gewogIFBST1BfSUQgPSAwLAogIFBST1BfVkFMVUVTLAogIFBST1BfQVJHUywKfTsKCnN0YXRpYyBKU1ZhbHVlCnByZWRpY2F0ZV9jb25zdGFudChjb25zdCBQcmVkaWNhdGUqIHByLCBKU0NvbnRleHQqIGN0eCwgQk9PTCBjb2xvcikgewogIER5bkJ1ZiBkYnVmID0gezB9OwogIGRidWZfaW5pdDIoJmRidWYsIDAsIDApOwogIC8vIGpzX2RidWZfaW5pdChjdHgsICZkYnVmKTsKCiAgZGJ1Zl9wdXRzdHIoJmRidWYsIGNvbG9yID8gIlByZWRpY2F0ZSIgQ09MT1JfTElHSFRNQVJJTkUgOiAiUHJlZGljYXRlIik7CiAgZGJ1Zl9wdXRzdHIoJmRidWYsIGNvbG9yID8gIi4iIENPTE9SX0xJR0hUWUVMTE9XIDogIi4iKTsKICBkYnVmX3B1dHN0cigmZGJ1ZiwgcHJlZGljYXRlX3R5cGVuYW1lKHByKSk7CiAgZGJ1Zl9wdXRzdHIoJmRidWYsIGNvbG9yID8gQ09MT1JfTk9ORSA6ICIiKTsKCiAgcmV0dXJuIGRidWZfdG9zdHJpbmdfZnJlZSgmZGJ1ZiwgY3R4KTsKfQoKc3RhdGljIEpTVmFsdWUKcHJlZGljYXRlX2R1cGFyZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgaWYoanNfaXNfbnVsbF9vcl91bmRlZmluZWQodmFsdWUpKQogICAgcmV0dXJuIEpTX1VOREVGSU5FRDsKCiAgcmV0dXJuIEpTX0R1cFZhbHVlKGN0eCwgdmFsdWUpOwp9CgpzdGF0aWMgSlNWYWx1ZQpwcmVkaWNhdGVfbmV4dGFyZyhKU0NvbnRleHQqIGN0eCwgSlNBcmd1bWVudHMqIGFyZ3MpIHsKICBKU1ZhbHVlIGFyZyA9IGpzX2FyZ3VtZW50c19zaGlmdChhcmdzKTsKICByZXR1cm4gcHJlZGljYXRlX2R1cGFyZyhjdHgsIGFyZyk7Cn0KClZJU0lCTEUgUHJlZGljYXRlKgpqc19wcmVkaWNhdGVfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgdmFsdWUsIGpzX3ByZWRpY2F0ZV9jbGFzc19pZCk7Cn0KClZJU0lCTEUgUHJlZGljYXRlKgpqc19wcmVkaWNhdGVfZGF0YShKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKHZhbHVlLCBqc19wcmVkaWNhdGVfY2xhc3NfaWQpOwp9CgpKU1ZhbHVlCmpzX3ByZWRpY2F0ZV9uZXcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBwcm90bywgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgUHJlZGljYXRlKiBwcmVkOwogIEpTVmFsdWUgb2JqOwogIGlmKCEocHJlZCA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoUHJlZGljYXRlKSkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKICBwcmVkLT5pZCA9IC0xOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfcHJlZGljYXRlX2NsYXNzX2lkKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwogIEpTX1NldE9wYXF1ZShvYmosIHByZWQpOwogIHJldHVybiBvYmo7CmZhaWw6CiAganNfZnJlZShjdHgsIHByZWQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKSlNWYWx1ZQpqc19wcmVkaWNhdGVfd3JhcChKU0NvbnRleHQqIGN0eCwgUHJlZGljYXRlIHByZWQpIHsKICBKU1ZhbHVlIG9iajsKICBQcmVkaWNhdGUqIHJldDsKCiAgaWYoIShyZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKFByZWRpY2F0ZSkpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogICpyZXQgPSBwcmVkOwoKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJlZGljYXRlX3Byb3RvLCBqc19wcmVkaWNhdGVfY2xhc3NfaWQpOwogIEpTX1NldE9wYXF1ZShvYmosIHJldCk7CiAgcmV0dXJuIG9iajsKfQoKc3RhdGljIEpTVmFsdWUKanNfcHJlZGljYXRlX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBQcmVkaWNhdGUqIHByZWQ7CiAgSlNWYWx1ZSBvYmogPSBKU19VTkRFRklORUQsIHByb3RvID0gSlNfVU5ERUZJTkVEOwoKICBpZighKHByZWQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKFByZWRpY2F0ZSkpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBnb3RvIGZhaWw7CiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBqc19wcmVkaWNhdGVfY2xhc3NfaWQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHByb3RvKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwoKICBKU19TZXRPcGFxdWUob2JqLCBwcmVkKTsKCiAgaWYoYXJnYyA+IDAgJiYgSlNfSXNTdHJpbmcoYXJndlswXSkpIHsKICAgIHNpemVfdCBsZW4gPSAwOwogICAgY29uc3QgY2hhciogc3RyID0ganNfdG9zdHJpbmdsZW4oY3R4LCAmbGVuLCBhcmd2WzBdKTsKCiAgICAqcHJlZCA9IHByZWRpY2F0ZV9zdHJpbmcoc3RyLCBsZW4pOwoKICB9IGVsc2UgaWYoYXJnYyA+IDAgJiYganNfaXNfcmVnZXhwKGN0eCwgYXJndlswXSkpIHsKICAgIGFyZ2MrKzsKICAgIGFyZ3YtLTsKICAgIGdvdG8gcmVnZXhwOwoKICB9IGVsc2UgaWYoYXJnYyA+IDAgJiYgSlNfSXNOdW1iZXIoYXJndlswXSkpIHsKICAgIGludDMyX3QgaWQ7CiAgICBKU0FyZ3VtZW50cyBhcmdzID0ganNfYXJndW1lbnRzX25ldyhhcmdjLCBhcmd2KTsKICAgIEpTX1RvSW50MzIoY3R4LCAmaWQsIGpzX2FyZ3VtZW50c19zaGlmdCgmYXJncykpOwoKICAgIHN3aXRjaChpZCkgewogICAgICBjYXNlIFBSRURJQ0FURV9UWVBFOiB7CiAgICAgICAgaWQgPSAtMTsKICAgICAgICBKU19Ub0ludDMyKGN0eCwgJmlkLCBqc19hcmd1bWVudHNfc2hpZnQoJmFyZ3MpKTsKICAgICAgICAqcHJlZCA9IHByZWRpY2F0ZV90eXBlKGlkKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgY2FzZSBQUkVESUNBVEVfQ0hBUlNFVDogewogICAgICAgIHNpemVfdCBsZW4gPSAwOwogICAgICAgIEpTVmFsdWUgbGVudjsKICAgICAgICBjb25zdCBjaGFyKiBzdHIgPSBqc190b3N0cmluZ2xlbihjdHgsICZsZW4sIGpzX2FyZ3VtZW50c19zaGlmdCgmYXJncykpOwogICAgICAgIGlmKEpTX0lzTnVtYmVyKChsZW52ID0ganNfYXJndW1lbnRzX3NoaWZ0KCZhcmdzKSkpKQogICAgICAgICAganNfdmFsdWVfdG9zaXplKGN0eCwgJmxlbiwgbGVudik7CiAgICAgICAgKnByZWQgPSBwcmVkaWNhdGVfY2hhcnNldChzdHIsIGxlbik7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIGNhc2UgUFJFRElDQVRFX1NUUklORzogewogICAgICAgIHNpemVfdCBsZW4gPSAwOwogICAgICAgIGNvbnN0IGNoYXIqIHN0ciA9IGpzX3Rvc3RyaW5nbGVuKGN0eCwgJmxlbiwganNfYXJndW1lbnRzX3NoaWZ0KCZhcmdzKSk7CiAgICAgICAgKnByZWQgPSBwcmVkaWNhdGVfc3RyaW5nKHN0ciwgbGVuKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgY2FzZSBQUkVESUNBVEVfTk9UTk9UOiB7CiAgICAgICAgKnByZWQgPSBwcmVkaWNhdGVfbm90bm90KHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgY2FzZSBQUkVESUNBVEVfTk9UOiB7CiAgICAgICAgKnByZWQgPSBwcmVkaWNhdGVfbm90KHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgY2FzZSBQUkVESUNBVEVfQUREOiB7CiAgICAgICAgSlNWYWx1ZSBsZWZ0LCByaWdodDsKICAgICAgICBsZWZ0ID0gcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncyk7CiAgICAgICAgcmlnaHQgPSBwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKTsKICAgICAgICAqcHJlZCA9IHByZWRpY2F0ZV9hZGQobGVmdCwgcmlnaHQpOwogICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICBjYXNlIFBSRURJQ0FURV9TVUI6IHsKICAgICAgICBKU1ZhbHVlIGxlZnQsIHJpZ2h0OwogICAgICAgIGxlZnQgPSBwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKTsKICAgICAgICByaWdodCA9IHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpOwogICAgICAgICpwcmVkID0gcHJlZGljYXRlX3N1YihsZWZ0LCByaWdodCk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIGNhc2UgUFJFRElDQVRFX01VTDogewogICAgICAgIEpTVmFsdWUgbGVmdCwgcmlnaHQ7CiAgICAgICAgbGVmdCA9IHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpOwogICAgICAgIHJpZ2h0ID0gcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncyk7CiAgICAgICAgKnByZWQgPSBwcmVkaWNhdGVfbXVsKGxlZnQsIHJpZ2h0KTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgY2FzZSBQUkVESUNBVEVfRElWOiB7CiAgICAgICAgSlNWYWx1ZSBsZWZ0LCByaWdodDsKICAgICAgICBsZWZ0ID0gcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncyk7CiAgICAgICAgcmlnaHQgPSBwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKTsKICAgICAgICAqcHJlZCA9IHByZWRpY2F0ZV9kaXYobGVmdCwgcmlnaHQpOwogICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICBjYXNlIFBSRURJQ0FURV9NT0Q6IHsKICAgICAgICBKU1ZhbHVlIGxlZnQsIHJpZ2h0OwogICAgICAgIGxlZnQgPSBwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKTsKICAgICAgICByaWdodCA9IHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpOwogICAgICAgICpwcmVkID0gcHJlZGljYXRlX21vZChsZWZ0LCByaWdodCk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIGNhc2UgUFJFRElDQVRFX0JPUjogewogICAgICAgIEpTVmFsdWUgbGVmdCwgcmlnaHQ7CiAgICAgICAgbGVmdCA9IHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpOwogICAgICAgIHJpZ2h0ID0gcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncyk7CiAgICAgICAgKnByZWQgPSBwcmVkaWNhdGVfYm9yKGxlZnQsIHJpZ2h0KTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgY2FzZSBQUkVESUNBVEVfQkFORDogewogICAgICAgIEpTVmFsdWUgbGVmdCwgcmlnaHQ7CiAgICAgICAgbGVmdCA9IHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpOwogICAgICAgIHJpZ2h0ID0gcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncyk7CiAgICAgICAgKnByZWQgPSBwcmVkaWNhdGVfYmFuZChsZWZ0LCByaWdodCk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIGNhc2UgUFJFRElDQVRFX09SOiB7CiAgICAgICAgKnByZWQgPSBwcmVkaWNhdGVfb3IoYXJnYywganNfdmFsdWVzX2R1cChjdHgsIGFyZ2MsIGFyZ3YpKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgY2FzZSBQUkVESUNBVEVfQU5EOiB7CiAgICAgICAgKnByZWQgPSBwcmVkaWNhdGVfYW5kKGFyZ2MsIGpzX3ZhbHVlc19kdXAoY3R4LCBhcmdjLCBhcmd2KSk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIGNhc2UgUFJFRElDQVRFX1hPUjogewogICAgICAgICpwcmVkID0gcHJlZGljYXRlX3hvcihhcmdjLCBqc192YWx1ZXNfZHVwKGN0eCwgYXJnYywgYXJndikpOwogICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICBjYXNlIFBSRURJQ0FURV9SRUdFWFA6IHsKICAgICAgICBSZWdFeHAgZXhwcjsKICAgICAgcmVnZXhwOgogICAgICAgIGV4cHIgPSByZWdleHBfZnJvbV9hcmd2KGFyZ2MgLSAxLCBhcmd2ICsgMSwgY3R4KTsKICAgICAgICAqcHJlZCA9IHByZWRpY2F0ZV9yZWdleHAoZXhwci5zb3VyY2UsIGV4cHIubGVuLCBleHByLmZsYWdzKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgY2FzZSBQUkVESUNBVEVfSU5TVEFOQ0VPRjogewogICAgICAgICpwcmVkID0gcHJlZGljYXRlX2luc3RhbmNlb2YocHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncykpOwogICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICBjYXNlIFBSRURJQ0FURV9QUk9UT1RZUEVJUzogewogICAgICAgICpwcmVkID0gcHJlZGljYXRlX3Byb3RvdHlwZShwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKSk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIGNhc2UgUFJFRElDQVRFX0VRVUFMOiB7CiAgICAgICAgKnByZWQgPSBwcmVkaWNhdGVfZXF1YWwocHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncykpOwogICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICBjYXNlIFBSRURJQ0FURV9QUk9QRVJUWTogewogICAgICAgIEpTQXRvbSBwcm9wID0gMDsKICAgICAgICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRDsKCiAgICAgICAgSlNWYWx1ZSBwcm9wdiwgb2JqdjsKCiAgICAgICAgaWYoIWpzX2lzX251bGxfb3JfdW5kZWZpbmVkKChwcm9wdiA9IGpzX2FyZ3VtZW50c19zaGlmdCgmYXJncykpKSkKICAgICAgICAgIHByb3AgPSBKU19WYWx1ZVRvQXRvbShjdHgsIHByb3B2KTsKICAgICAgICBpZighanNfaXNfbnVsbF9vcl91bmRlZmluZWQoKG9ianYgPSBqc19hcmd1bWVudHNfc2hpZnQoJmFyZ3MpKSkpCiAgICAgICAgICBvYmogPSBKU19EdXBWYWx1ZShjdHgsIG9ianYpOwoKICAgICAgICAqcHJlZCA9IHByZWRpY2F0ZV9wcm9wZXJ0eShwcm9wLCBvYmopOwogICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICBjYXNlIFBSRURJQ0FURV9TSElGVDogewogICAgICAgIGludDMyX3Qgc2hpZnQ7CiAgICAgICAgSlNfVG9JbnQzMihjdHgsICZzaGlmdCwganNfYXJndW1lbnRzX3NoaWZ0KCZhcmdzKSk7CiAgICAgICAgKnByZWQgPSBwcmVkaWNhdGVfc2hpZnQoc2hpZnQsIGpzX2FyZ3VtZW50c19zaGlmdCgmYXJncykpOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9CiAgfQogIHJldHVybiBvYmo7CmZhaWw6CiAganNfZnJlZShjdHgsIHByZWQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIEpTVmFsdWUKanNfcHJlZGljYXRlX21ldGhvZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgUHJlZGljYXRlKiBwcmVkOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKHByZWQgPSBqc19wcmVkaWNhdGVfZGF0YTIoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIE1FVEhPRF9FVkFMOiB7CiAgICAgIEpTQXJndW1lbnRzIGFyZ3MgPSBqc19hcmd1bWVudHNfbmV3KGFyZ2MsIGFyZ3YpOwogICAgICByZXQgPSBwcmVkaWNhdGVfZXZhbChwcmVkLCBjdHgsICZhcmdzKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3ByZWRpY2F0ZV9vcGVyYXRvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgSlNBcmd1bWVudHMgYXJncyA9IGpzX2FyZ3VtZW50c19uZXcoYXJnYywgYXJndik7CiAgSlNWYWx1ZSBsZWZ0LCByaWdodDsKICBsZWZ0ID0gcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncyk7CiAgcmlnaHQgPSBwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKTsKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgT1BFUkFUT1JfUExVUzogewogICAgICByZXQgPSBqc19wcmVkaWNhdGVfd3JhcChjdHgsIHByZWRpY2F0ZV9hZGQobGVmdCwgcmlnaHQpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE9QRVJBVE9SX01JTlVTOiB7CiAgICAgIHJldCA9IGpzX3ByZWRpY2F0ZV93cmFwKGN0eCwgcHJlZGljYXRlX3N1YihsZWZ0LCByaWdodCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgT1BFUkFUT1JfTVVMOiB7CiAgICAgIHJldCA9IGpzX3ByZWRpY2F0ZV93cmFwKGN0eCwgcHJlZGljYXRlX211bChsZWZ0LCByaWdodCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgT1BFUkFUT1JfRElWOiB7CiAgICAgIHJldCA9IGpzX3ByZWRpY2F0ZV93cmFwKGN0eCwgcHJlZGljYXRlX2RpdihsZWZ0LCByaWdodCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgT1BFUkFUT1JfTU9EOiB7CiAgICAgIHJldCA9IGpzX3ByZWRpY2F0ZV93cmFwKGN0eCwgcHJlZGljYXRlX21vZChsZWZ0LCByaWdodCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgT1BFUkFUT1JfQk9SOiB7CiAgICAgIHJldCA9IGpzX3ByZWRpY2F0ZV93cmFwKGN0eCwgcHJlZGljYXRlX2JvcihsZWZ0LCByaWdodCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgT1BFUkFUT1JfQkFORDogewogICAgICByZXQgPSBqc19wcmVkaWNhdGVfd3JhcChjdHgsIHByZWRpY2F0ZV9iYW5kKGxlZnQsIHJpZ2h0KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBPUEVSQVRPUl9QT1c6IHsKICAgICAgcmV0ID0ganNfcHJlZGljYXRlX3dyYXAoY3R4LCBwcmVkaWNhdGVfcG93KGxlZnQsIHJpZ2h0KSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19wcmVkaWNhdGVfdG9zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIER5bkJ1ZiBkYnVmID0gezB9OwogIFByZWRpY2F0ZSogcHJlZCA9IDA7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGpzX2RidWZfaW5pdChjdHgsICZkYnVmKTsKCiAgaWYoIShwcmVkID0ganNfcHJlZGljYXRlX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKG1hZ2ljKQogICAgcHJlZGljYXRlX3Rvc291cmNlKHByZWQsIGN0eCwgJmRidWYsIDApOwogIGVsc2UKICAgIHByZWRpY2F0ZV90b3N0cmluZyhwcmVkLCBjdHgsICZkYnVmKTsKCiAgcmV0ID0gSlNfTmV3U3RyaW5nTGVuKGN0eCwgKGNvbnN0IGNoYXIqKWRidWYuYnVmLCBkYnVmLnNpemUpOwogIGRidWZfZnJlZSgmZGJ1Zik7CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfcHJlZGljYXRlX2dldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBQcmVkaWNhdGUqIHByZWQ7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEocHJlZCA9IGpzX3ByZWRpY2F0ZV9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUFJPUF9JRDogewogICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHByZWQtPmlkKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUk9QX1ZBTFVFUzogewogICAgICByZXQgPSBwcmVkaWNhdGVfdmFsdWVzKHByZWQsIGN0eCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBQUk9QX0FSR1M6IHsKICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgcHJlZGljYXRlX3JlY3Vyc2l2ZV9udW1fYXJncyhwcmVkKSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19wcmVkaWNhdGVfZnVuY3Rpb24oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBKU0FyZ3VtZW50cyBhcmdzID0ganNfYXJndW1lbnRzX25ldyhhcmdjLCBhcmd2KTsKCiAgc3dpdGNoKG1hZ2ljKSB7CgogICAgY2FzZSBQUkVESUNBVEVfVFlQRTogewogICAgICBpbnQzMl90IHR5cGUgPSAwOwogICAgICBKU19Ub0ludDMyKGN0eCwgJnR5cGUsIGFyZ3ZbMF0pOwogICAgICByZXQgPSBqc19wcmVkaWNhdGVfd3JhcChjdHgsIHByZWRpY2F0ZV90eXBlKHR5cGUpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUkVESUNBVEVfQ0hBUlNFVDogewogICAgICBzaXplX3Qgc2l6ZSA9IDA7CiAgICAgIGNvbnN0IGNoYXIqIHN0ciA9IGpzX3Rvc3RyaW5nbGVuKGN0eCwgJnNpemUsIGFyZ3ZbMF0pOwogICAgICByZXQgPSBqc19wcmVkaWNhdGVfd3JhcChjdHgsIHByZWRpY2F0ZV9jaGFyc2V0KHN0ciwgc2l6ZSkpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBSRURJQ0FURV9TVFJJTkc6IHsKICAgICAgc2l6ZV90IHNpemUgPSAwOwogICAgICBjb25zdCBjaGFyKiBzdHIgPSBqc190b3N0cmluZ2xlbihjdHgsICZzaXplLCBhcmd2WzBdKTsKICAgICAgcmV0ID0ganNfcHJlZGljYXRlX3dyYXAoY3R4LCBwcmVkaWNhdGVfc3RyaW5nKHN0ciwgc2l6ZSkpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBSRURJQ0FURV9OT1ROT1Q6IHsKICAgICAgcmV0ID0ganNfcHJlZGljYXRlX3dyYXAoY3R4LCBwcmVkaWNhdGVfbm90bm90KEpTX0R1cFZhbHVlKGN0eCwgYXJndlswXSkpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUkVESUNBVEVfTk9UOiB7CiAgICAgIHJldCA9IGpzX3ByZWRpY2F0ZV93cmFwKGN0eCwgcHJlZGljYXRlX25vdChwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKSkpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBSRURJQ0FURV9BREQ6IHsKICAgICAgSlNWYWx1ZSBsZWZ0LCByaWdodDsKICAgICAgbGVmdCA9IHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpOwogICAgICByaWdodCA9IHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpOwogICAgICByZXQgPSBqc19wcmVkaWNhdGVfd3JhcChjdHgsIHByZWRpY2F0ZV9hZGQobGVmdCwgcmlnaHQpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUkVESUNBVEVfU1VCOiB7CiAgICAgIEpTVmFsdWUgbGVmdCwgcmlnaHQ7CiAgICAgIGxlZnQgPSBwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKTsKICAgICAgcmlnaHQgPSBwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKTsKICAgICAgcmV0ID0ganNfcHJlZGljYXRlX3dyYXAoY3R4LCBwcmVkaWNhdGVfc3ViKGxlZnQsIHJpZ2h0KSk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgUFJFRElDQVRFX01VTDogewogICAgICBKU1ZhbHVlIGxlZnQsIHJpZ2h0OwogICAgICBsZWZ0ID0gcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncyk7CiAgICAgIHJpZ2h0ID0gcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncyk7CiAgICAgIHJldCA9IGpzX3ByZWRpY2F0ZV93cmFwKGN0eCwgcHJlZGljYXRlX211bChsZWZ0LCByaWdodCkpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBSRURJQ0FURV9ESVY6IHsKICAgICAgSlNWYWx1ZSBsZWZ0LCByaWdodDsKICAgICAgbGVmdCA9IHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpOwogICAgICByaWdodCA9IHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpOwogICAgICByZXQgPSBqc19wcmVkaWNhdGVfd3JhcChjdHgsIHByZWRpY2F0ZV9kaXYobGVmdCwgcmlnaHQpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUkVESUNBVEVfTU9EOiB7CiAgICAgIEpTVmFsdWUgbGVmdCwgcmlnaHQ7CiAgICAgIGxlZnQgPSBwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKTsKICAgICAgcmlnaHQgPSBwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKTsKICAgICAgcmV0ID0ganNfcHJlZGljYXRlX3dyYXAoY3R4LCBwcmVkaWNhdGVfbW9kKGxlZnQsIHJpZ2h0KSk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgUFJFRElDQVRFX0JPUjogewogICAgICBKU1ZhbHVlIGxlZnQsIHJpZ2h0OwogICAgICBsZWZ0ID0gcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncyk7CiAgICAgIHJpZ2h0ID0gcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncyk7CiAgICAgIHJldCA9IGpzX3ByZWRpY2F0ZV93cmFwKGN0eCwgcHJlZGljYXRlX2JvcihsZWZ0LCByaWdodCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUFJFRElDQVRFX0JBTkQ6IHsKICAgICAgSlNWYWx1ZSBsZWZ0LCByaWdodDsKICAgICAgbGVmdCA9IHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpOwogICAgICByaWdodCA9IHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpOwogICAgICByZXQgPSBqc19wcmVkaWNhdGVfd3JhcChjdHgsIHByZWRpY2F0ZV9iYW5kKGxlZnQsIHJpZ2h0KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBQUkVESUNBVEVfUE9XOiB7CiAgICAgIEpTVmFsdWUgbGVmdCwgcmlnaHQ7CiAgICAgIGxlZnQgPSBwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKTsKICAgICAgcmlnaHQgPSBwcmVkaWNhdGVfbmV4dGFyZyhjdHgsICZhcmdzKTsKICAgICAgcmV0ID0ganNfcHJlZGljYXRlX3dyYXAoY3R4LCBwcmVkaWNhdGVfcG93KGxlZnQsIHJpZ2h0KSk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgUFJFRElDQVRFX09SOiB7CiAgICAgIHJldCA9IGpzX3ByZWRpY2F0ZV93cmFwKGN0eCwgcHJlZGljYXRlX29yKGFyZ2MsIGpzX3ZhbHVlc19kdXAoY3R4LCBhcmdjLCBhcmd2KSkpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBSRURJQ0FURV9BTkQ6IHsKICAgICAgcmV0ID0ganNfcHJlZGljYXRlX3dyYXAoY3R4LCBwcmVkaWNhdGVfYW5kKGFyZ2MsIGpzX3ZhbHVlc19kdXAoY3R4LCBhcmdjLCBhcmd2KSkpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBSRURJQ0FURV9YT1I6IHsKICAgICAgcmV0ID0ganNfcHJlZGljYXRlX3dyYXAoY3R4LCBwcmVkaWNhdGVfeG9yKGFyZ2MsIGpzX3ZhbHVlc19kdXAoY3R4LCBhcmdjLCBhcmd2KSkpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBSRURJQ0FURV9SRUdFWFA6IHsKICAgICAgUmVnRXhwIGV4cHIgPSByZWdleHBfZnJvbV9hcmd2KGFyZ2MsIGFyZ3YsIGN0eCk7CiAgICAgIFByZWRpY2F0ZSBwcmVkID0gcHJlZGljYXRlX3JlZ2V4cChleHByLnNvdXJjZSwgZXhwci5sZW4sIGV4cHIuZmxhZ3MpOwogICAgICByZXQgPSBqc19wcmVkaWNhdGVfd3JhcChjdHgsIHByZWQpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBSRURJQ0FURV9JTlNUQU5DRU9GOiB7CiAgICAgIHJldCA9IGpzX3ByZWRpY2F0ZV93cmFwKGN0eCwgcHJlZGljYXRlX2luc3RhbmNlb2YocHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncykpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUkVESUNBVEVfUFJPVE9UWVBFSVM6IHsKICAgICAgcmV0ID0ganNfcHJlZGljYXRlX3dyYXAoY3R4LCBwcmVkaWNhdGVfcHJvdG90eXBlKHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpKSk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgUFJFRElDQVRFX0VRVUFMOiB7CiAgICAgIHJldCA9IGpzX3ByZWRpY2F0ZV93cmFwKGN0eCwgcHJlZGljYXRlX2VxdWFsKHByZWRpY2F0ZV9uZXh0YXJnKGN0eCwgJmFyZ3MpKSk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgUFJFRElDQVRFX1BST1BFUlRZOiB7CiAgICAgIEpTQXRvbSBwcm9wID0gMDsKICAgICAgSlNWYWx1ZSBvYmogPSBKU19VTkRFRklORUQ7CgogICAgICBpZihhcmdjID49IDEgJiYgIUpTX0lzTnVsbChhcmd2WzBdKSAmJiAhSlNfSXNVbmRlZmluZWQoYXJndlswXSkpCiAgICAgICAgcHJvcCA9IEpTX1ZhbHVlVG9BdG9tKGN0eCwgYXJndlswXSk7CiAgICAgIGlmKGFyZ2MgPj0gMiAmJiAhSlNfSXNOdWxsKGFyZ3ZbMV0pICYmICFKU19Jc1VuZGVmaW5lZChhcmd2WzFdKSkKICAgICAgICBvYmogPSBKU19EdXBWYWx1ZShjdHgsIGFyZ3ZbMV0pOwoKICAgICAgcmV0ID0ganNfcHJlZGljYXRlX3dyYXAoY3R4LCBwcmVkaWNhdGVfcHJvcGVydHkocHJvcCwgb2JqKSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBQUkVESUNBVEVfU0hJRlQ6IHsKICAgICAgaW50MzJfdCBzaGlmdDsKICAgICAgSlNfVG9JbnQzMihjdHgsICZzaGlmdCwgcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncykpOwogICAgICByZXQgPSBqc19wcmVkaWNhdGVfd3JhcChjdHgsIHByZWRpY2F0ZV9zaGlmdChzaGlmdCwgcHJlZGljYXRlX25leHRhcmcoY3R4LCAmYXJncykpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKanNfcHJlZGljYXRlX2NhbGwoCiAgICBKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGZ1bmNfb2JqLCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgZmxhZ3MpIHsKICBQcmVkaWNhdGUqIHByZWQ7CiAgaW50MzJfdCByZXN1bHQ7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgSlNWYWx1ZUNvbnN0IGFyZyA9IGFyZ2MgPiAwID8gYXJndlswXSA6IEpTX1VOREVGSU5FRDsKCiAgaWYoIShwcmVkID0ganNfcHJlZGljYXRlX2RhdGEyKGN0eCwgZnVuY19vYmopKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKGpzX2lzX3Byb21pc2UoY3R4LCBhcmcpKSB7CiAgICBKU0F0b20gdGhlbiA9IEpTX05ld0F0b20oY3R4LCAidGhlbiIpOwogICAgcmV0ID0gSlNfSW52b2tlKGN0eCwgYXJnLCB0aGVuLCAxLCAmZnVuY19vYmopOwogICAgSlNfRnJlZUF0b20oY3R4LCB0aGVuKTsKICB9IGVsc2UgewogICAgSlNBcmd1bWVudHMgYXJncyA9IGpzX2FyZ3VtZW50c19uZXcoYXJnYywgYXJndik7CiAgICByZXQgPSBwcmVkaWNhdGVfZXZhbChwcmVkLCBjdHgsICZhcmdzKTsKICAgIC8qCiAgICAgICAgc3dpdGNoKHJlc3VsdCkgewogICAgICAgICAgY2FzZSAwOiByZXQgPSBKU19OZXdCb29sKGN0eCwgRkFMU0UpOyBicmVhazsKICAgICAgICAgIGNhc2UgMTogcmV0ID0gSlNfTmV3Qm9vbChjdHgsIFRSVUUpOyBicmVhazsKICAgICAgICAgIGRlZmF1bHQ6IHJldCA9IEpTX05ld0ludDMyKGN0eCwgcmVzdWx0KTsgYnJlYWs7CiAgICAgICAgfSovCiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3ByZWRpY2F0ZV9pbnNwZWN0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgUHJlZGljYXRlKiBwcmVkOwoKICBpZighKHByZWQgPSBqc19wcmVkaWNhdGVfZGF0YTIoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgSlNWYWx1ZSBvYmogPSAvKkpTX05ld09iamVjdFByb3RvKGN0eCwgcHJlZGljYXRlX3Byb3RvKSAqLyBKU19OZXdPYmplY3QoY3R4KTsKCiAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIG9iaiwgImlkIiwgSlNfTmV3SW50MzIoY3R4LCBwcmVkLT5pZCksIEpTX1BST1BfRU5VTUVSQUJMRSk7CgogIGpzX3NldF90b3N0cmluZ3RhZ192YWx1ZShjdHgsIG9iaiwgcHJlZGljYXRlX2NvbnN0YW50KHByZWQsIGN0eCwgVFJVRSkpOwoKICBzd2l0Y2gocHJlZC0+aWQpIHsKICAgIGNhc2UgUFJFRElDQVRFX1RZUEU6IHsKICAgICAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIG9iaiwgImZsYWdzIiwgSlNfTmV3SW50MzIoY3R4LCBwcmVkLT50eXBlLmZsYWdzKSwgSlNfUFJPUF9FTlVNRVJBQkxFKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFBSRURJQ0FURV9DSEFSU0VUOiB7CiAgICAgIEpTX0RlZmluZVByb3BlcnR5VmFsdWVTdHIoCiAgICAgICAgICBjdHgsIG9iaiwgInNldCIsIEpTX05ld1N0cmluZ0xlbihjdHgsIHByZWQtPmNoYXJzZXQuc2V0LCBwcmVkLT5jaGFyc2V0LmxlbiksIEpTX1BST1BfRU5VTUVSQUJMRSk7CiAgICAgIEpTX0RlZmluZVByb3BlcnR5VmFsdWVTdHIoY3R4LCBvYmosICJsZW4iLCBKU19OZXdVaW50MzIoY3R4LCBwcmVkLT5jaGFyc2V0LmxlbiksIEpTX1BST1BfRU5VTUVSQUJMRSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBQUkVESUNBVEVfU1RSSU5HOiB7CiAgICAgIEpTX0RlZmluZVByb3BlcnR5VmFsdWVTdHIoCiAgICAgICAgICBjdHgsIG9iaiwgInN0ciIsIEpTX05ld1N0cmluZ0xlbihjdHgsIHByZWQtPnN0cmluZy5zdHIsIHByZWQtPnN0cmluZy5sZW4pLCBKU19QUk9QX0VOVU1FUkFCTEUpOwogICAgICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAibGVuIiwgSlNfTmV3VWludDMyKGN0eCwgcHJlZC0+c3RyaW5nLmxlbiksIEpTX1BST1BfRU5VTUVSQUJMRSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBQUkVESUNBVEVfTk9UOgogICAgY2FzZSBQUkVESUNBVEVfTk9UTk9UOiB7CiAgICAgIEpTX0RlZmluZVByb3BlcnR5VmFsdWVTdHIoY3R4LCBvYmosICJwcmVkaWNhdGUiLCBKU19EdXBWYWx1ZShjdHgsIHByZWQtPnVuYXJ5LnByZWRpY2F0ZSksIEpTX1BST1BfRU5VTUVSQUJMRSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBQUkVESUNBVEVfQUREOgogICAgY2FzZSBQUkVESUNBVEVfU1VCOgogICAgY2FzZSBQUkVESUNBVEVfTVVMOgogICAgY2FzZSBQUkVESUNBVEVfRElWOgogICAgY2FzZSBQUkVESUNBVEVfTU9EOiB7CiAgICAgIEpTX0RlZmluZVByb3BlcnR5VmFsdWVTdHIoY3R4LCBvYmosICJsZWZ0IiwgSlNfRHVwVmFsdWUoY3R4LCBwcmVkLT5iaW5hcnkubGVmdCksIEpTX1BST1BfRU5VTUVSQUJMRSk7CiAgICAgIEpTX0RlZmluZVByb3BlcnR5VmFsdWVTdHIoY3R4LCBvYmosICJyaWdodCIsIEpTX0R1cFZhbHVlKGN0eCwgcHJlZC0+YmluYXJ5LnJpZ2h0KSwgSlNfUFJPUF9FTlVNRVJBQkxFKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFBSRURJQ0FURV9PUjoKICAgIGNhc2UgUFJFRElDQVRFX0FORDoKICAgIGNhc2UgUFJFRElDQVRFX1hPUjogewogICAgICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmosCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlcyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganNfdmFsdWVzX3RvYXJyYXkoY3R4LCBwcmVkLT5ib29sZWFuLm5wcmVkaWNhdGVzLCBwcmVkLT5ib29sZWFuLnByZWRpY2F0ZXMpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX1BST1BfRU5VTUVSQUJMRSk7CgogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUFJFRElDQVRFX1JFR0VYUDogewogICAgICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAiZXhwciIsIHJlZ2V4cF90b192YWx1ZShwcmVkLT5yZWdleHAuZXhwciwgY3R4KSwgSlNfUFJPUF9FTlVNRVJBQkxFKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFBSRURJQ0FURV9JTlNUQU5DRU9GOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBQUkVESUNBVEVfUFJPVE9UWVBFSVM6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFBSRURJQ0FURV9FUVVBTDogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUFJFRElDQVRFX1BST1BFUlRZOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBQUkVESUNBVEVfU0hJRlQ6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICByZXR1cm4gb2JqOwp9CgpzdGF0aWMgdm9pZApqc19wcmVkaWNhdGVfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgUHJlZGljYXRlKiBwcmVkOwoKICBpZigocHJlZCA9IEpTX0dldE9wYXF1ZSh2YWwsIGpzX3ByZWRpY2F0ZV9jbGFzc19pZCkpKSB7CgogICAgcHJlZGljYXRlX2ZyZWVfcnQocHJlZCwgcnQpOwoKICAgIC8vICAganNfZnJlZV9ydChydCwgcHJlZCk7CiAgfQogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCB2YWwpOwp9CgpzdGF0aWMgSlNDbGFzc0RlZiBqc19wcmVkaWNhdGVfY2xhc3MgPSB7LmNsYXNzX25hbWUgPSAiUHJlZGljYXRlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maW5hbGl6ZXIgPSBqc19wcmVkaWNhdGVfZmluYWxpemVyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNhbGwgPSBqc19wcmVkaWNhdGVfY2FsbH07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfcHJlZGljYXRlX29wZXJhdG9yX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19NQUdJQ19ERUYoIisiLCAyLCBqc19wcmVkaWNhdGVfb3BlcmF0b3IsIE9QRVJBVE9SX1BMVVMpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCItIiwgMiwganNfcHJlZGljYXRlX29wZXJhdG9yLCBPUEVSQVRPUl9NSU5VUyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoIioiLCAyLCBqc19wcmVkaWNhdGVfb3BlcmF0b3IsIE9QRVJBVE9SX01VTCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoIi8iLCAyLCBqc19wcmVkaWNhdGVfb3BlcmF0b3IsIE9QRVJBVE9SX0RJViksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoIiUiLCAyLCBqc19wcmVkaWNhdGVfb3BlcmF0b3IsIE9QRVJBVE9SX01PRCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInwiLCAyLCBqc19wcmVkaWNhdGVfb3BlcmF0b3IsIE9QRVJBVE9SX0JPUiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoIiYiLCAyLCBqc19wcmVkaWNhdGVfb3BlcmF0b3IsIE9QRVJBVE9SX0JBTkQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCIqKiIsIDIsIGpzX3ByZWRpY2F0ZV9vcGVyYXRvciwgT1BFUkFUT1JfUE9XKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19wcmVkaWNhdGVfcHJvdG9fZnVuY3NbXSA9IHsKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZXZhbCIsIDEsIGpzX3ByZWRpY2F0ZV9tZXRob2QsIE1FVEhPRF9FVkFMKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigidG9TdHJpbmciLCAwLCBqc19wcmVkaWNhdGVfdG9zdHJpbmcsIDApLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ0b1NvdXJjZSIsIDAsIGpzX3ByZWRpY2F0ZV90b3N0cmluZywgMSksCiAgICBKU19BTElBU19ERUYoImNhbGwiLCAiZXZhbCIpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImlkIiwganNfcHJlZGljYXRlX2dldCwgMCwgUFJPUF9JRCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigidmFsdWVzIiwganNfcHJlZGljYXRlX2dldCwgMCwgUFJPUF9WQUxVRVMpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImFyZ3MiLCBqc19wcmVkaWNhdGVfZ2V0LCAwLCBQUk9QX0FSR1MpLAogICAgLy8gSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJQcmVkaWNhdGUiLCBKU19QUk9QX0NfV19FKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19wcmVkaWNhdGVfZnVuY3NbXSA9IHsKICAgIEpTX0NGVU5DX01BR0lDX0RFRigidHlwZSIsIDEsIGpzX3ByZWRpY2F0ZV9mdW5jdGlvbiwgUFJFRElDQVRFX1RZUEUpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJjaGFyc2V0IiwgMSwganNfcHJlZGljYXRlX2Z1bmN0aW9uLCBQUkVESUNBVEVfQ0hBUlNFVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInN0cmluZyIsIDEsIGpzX3ByZWRpY2F0ZV9mdW5jdGlvbiwgUFJFRElDQVRFX1NUUklORyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoIm5vdCIsIDEsIGpzX3ByZWRpY2F0ZV9mdW5jdGlvbiwgUFJFRElDQVRFX05PVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoIm5vdG5vdCIsIDEsIGpzX3ByZWRpY2F0ZV9mdW5jdGlvbiwgUFJFRElDQVRFX05PVE5PVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImJub3QiLCAxLCBqc19wcmVkaWNhdGVfZnVuY3Rpb24sIFBSRURJQ0FURV9CTk9UKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3FydCIsIDEsIGpzX3ByZWRpY2F0ZV9mdW5jdGlvbiwgUFJFRElDQVRFX1NRUlQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJhZGQiLCAyLCBqc19wcmVkaWNhdGVfZnVuY3Rpb24sIFBSRURJQ0FURV9BREQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzdWIiLCAyLCBqc19wcmVkaWNhdGVfZnVuY3Rpb24sIFBSRURJQ0FURV9TVUIpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJtdWwiLCAyLCBqc19wcmVkaWNhdGVfZnVuY3Rpb24sIFBSRURJQ0FURV9NVUwpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJkaXYiLCAyLCBqc19wcmVkaWNhdGVfZnVuY3Rpb24sIFBSRURJQ0FURV9ESVYpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJtb2QiLCAyLCBqc19wcmVkaWNhdGVfZnVuY3Rpb24sIFBSRURJQ0FURV9NT0QpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJib3IiLCAyLCBqc19wcmVkaWNhdGVfZnVuY3Rpb24sIFBSRURJQ0FURV9CT1IpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJiYW5kIiwgMiwganNfcHJlZGljYXRlX2Z1bmN0aW9uLCBQUkVESUNBVEVfQkFORCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInBvdyIsIDIsIGpzX3ByZWRpY2F0ZV9mdW5jdGlvbiwgUFJFRElDQVRFX1BPVyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImF0YW4yIiwgMiwganNfcHJlZGljYXRlX2Z1bmN0aW9uLCBQUkVESUNBVEVfQVRBTjIpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJvciIsIDIsIGpzX3ByZWRpY2F0ZV9mdW5jdGlvbiwgUFJFRElDQVRFX09SKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiYW5kIiwgMiwganNfcHJlZGljYXRlX2Z1bmN0aW9uLCBQUkVESUNBVEVfQU5EKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigieG9yIiwgMiwganNfcHJlZGljYXRlX2Z1bmN0aW9uLCBQUkVESUNBVEVfWE9SKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigicmVnZXhwIiwgMSwganNfcHJlZGljYXRlX2Z1bmN0aW9uLCBQUkVESUNBVEVfUkVHRVhQKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaW5zdGFuY2VPZiIsIDEsIGpzX3ByZWRpY2F0ZV9mdW5jdGlvbiwgUFJFRElDQVRFX0lOU1RBTkNFT0YpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJwcm90b3R5cGVJcyIsIDEsIGpzX3ByZWRpY2F0ZV9mdW5jdGlvbiwgUFJFRElDQVRFX1BST1RPVFlQRUlTKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZXF1YWwiLCAxLCBqc19wcmVkaWNhdGVfZnVuY3Rpb24sIFBSRURJQ0FURV9FUVVBTCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInByb3BlcnR5IiwgMSwganNfcHJlZGljYXRlX2Z1bmN0aW9uLCBQUkVESUNBVEVfUFJPUEVSVFkpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzaGlmdCIsIDIsIGpzX3ByZWRpY2F0ZV9mdW5jdGlvbiwgUFJFRElDQVRFX1NISUZUKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19wcmVkaWNhdGVfaWRzW10gPSB7CiAgICBKU19QUk9QX0lOVDMyX0RFRigiVFlQRSIsIFBSRURJQ0FURV9UWVBFLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNIQVJTRVQiLCBQUkVESUNBVEVfQ0hBUlNFVCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJTVFJJTkciLCBQUkVESUNBVEVfU1RSSU5HLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk5PVE5PVCIsIFBSRURJQ0FURV9OT1ROT1QsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTk9UIiwgUFJFRElDQVRFX05PVCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJCTk9UIiwgUFJFRElDQVRFX0JOT1QsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiU1FSVCIsIFBSRURJQ0FURV9TUVJULCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFERCIsIFBSRURJQ0FURV9BREQsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiU1VCIiwgUFJFRElDQVRFX1NVQiwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJNVUwiLCBQUkVESUNBVEVfTVVMLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkRJViIsIFBSRURJQ0FURV9ESVYsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTU9EIiwgUFJFRElDQVRFX01PRCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJCT1IiLCBQUkVESUNBVEVfQk9SLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkJBTkQiLCBQUkVESUNBVEVfQkFORCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJQT1ciLCBQUkVESUNBVEVfUE9XLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFUQU4yIiwgUFJFRElDQVRFX0FUQU4yLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk9SIiwgUFJFRElDQVRFX09SLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkFORCIsIFBSRURJQ0FURV9BTkQsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiWE9SIiwgUFJFRElDQVRFX1hPUiwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJSRUdFWFAiLCBQUkVESUNBVEVfUkVHRVhQLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIklOU1RBTkNFT0YiLCBQUkVESUNBVEVfSU5TVEFOQ0VPRiwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJQUk9UT1RZUEVJUyIsIFBSRURJQ0FURV9QUk9UT1RZUEVJUywgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJFUVVBTCIsIFBSRURJQ0FURV9FUVVBTCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJQUk9QRVJUWSIsIFBSRURJQ0FURV9QUk9QRVJUWSwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJTSElGVCIsIFBSRURJQ0FURV9TSElGVCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19wcmVkaWNhdGVfdHlwZXNbXSA9IHsKICAgIEpTX1BST1BfSU5UMzJfREVGKCJUWVBFX1VOREVGSU5FRCIsIFRZUEVfVU5ERUZJTkVELCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlRZUEVfTlVMTCIsIFRZUEVfTlVMTCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJUWVBFX0JPT0wiLCBUWVBFX0JPT0wsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiVFlQRV9JTlQiLCBUWVBFX0lOVCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJUWVBFX09CSkVDVCIsIFRZUEVfT0JKRUNULCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlRZUEVfU1RSSU5HIiwgVFlQRV9TVFJJTkcsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiVFlQRV9TWU1CT0wiLCBUWVBFX1NZTUJPTCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJUWVBFX0JJR19GTE9BVCIsIFRZUEVfQklHX0ZMT0FULCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlRZUEVfQklHX0lOVCIsIFRZUEVfQklHX0lOVCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJUWVBFX0JJR19ERUNJTUFMIiwgVFlQRV9CSUdfREVDSU1BTCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJUWVBFX0ZMT0FUNjQiLCBUWVBFX0ZMT0FUNjQsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiVFlQRV9OVU1CRVIiLCBUWVBFX05VTUJFUiwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJUWVBFX1BSSU1JVElWRSIsIFRZUEVfUFJJTUlUSVZFLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlRZUEVfQUxMIiwgVFlQRV9BTEwsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiVFlQRV9GVU5DVElPTiIsIFRZUEVfRlVOQ1RJT04sIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiVFlQRV9BUlJBWSIsIFRZUEVfQVJSQVksIEpTX1BST1BfRU5VTUVSQUJMRSksCn07CgpzdGF0aWMgaW50CmpzX3ByZWRpY2F0ZV9pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBKU19OZXdDbGFzc0lEKCZqc19wcmVkaWNhdGVfY2xhc3NfaWQpOwogIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfcHJlZGljYXRlX2NsYXNzX2lkLCAmanNfcHJlZGljYXRlX2NsYXNzKTsKCiAgcHJlZGljYXRlX3Byb3RvID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBwcmVkaWNhdGVfcHJvdG8sIGpzX3ByZWRpY2F0ZV9wcm90b19mdW5jcywgY291bnRvZihqc19wcmVkaWNhdGVfcHJvdG9fZnVuY3MpKTsKICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfcHJlZGljYXRlX2NsYXNzX2lkLCBwcmVkaWNhdGVfcHJvdG8pOwoKICBwcmVkaWNhdGVfY3RvciA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19wcmVkaWNhdGVfY29uc3RydWN0b3IsICJQcmVkaWNhdGUiLCAxLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CgogIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgcHJlZGljYXRlX2N0b3IsIHByZWRpY2F0ZV9wcm90byk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBwcmVkaWNhdGVfY3RvciwganNfcHJlZGljYXRlX2Z1bmNzLCBjb3VudG9mKGpzX3ByZWRpY2F0ZV9mdW5jcykpOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgcHJlZGljYXRlX2N0b3IsIGpzX3ByZWRpY2F0ZV9pZHMsIGNvdW50b2YoanNfcHJlZGljYXRlX2lkcykpOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgcHJlZGljYXRlX2N0b3IsIGpzX3ByZWRpY2F0ZV90eXBlcywgY291bnRvZihqc19wcmVkaWNhdGVfdHlwZXMpKTsKCiAganNfc2V0X2luc3BlY3RfbWV0aG9kKGN0eCwgcHJlZGljYXRlX3Byb3RvLCBqc19wcmVkaWNhdGVfaW5zcGVjdCk7CgogIEpTVmFsdWUgb3BlcmF0b3JzLCBvcGVyYXRvcnNfY3JlYXRlOwogIEpTQXRvbSBvcGVyYXRvcnNfc2V0ID0ganNfc3ltYm9sX29wZXJhdG9yc2V0X2F0b20oY3R4KTsKCiAgb3BlcmF0b3JzX2NyZWF0ZSA9IGpzX29wZXJhdG9yc19jcmVhdGUoY3R4LCAmb3BlcmF0b3JzKTsKCiAgSlNWYWx1ZSBwcmVkaWNhdGVfb3BlcmF0b3JzID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZWRpY2F0ZV9vcGVyYXRvcnMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAganNfcHJlZGljYXRlX29wZXJhdG9yX2Z1bmNzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50b2YoanNfcHJlZGljYXRlX29wZXJhdG9yX2Z1bmNzKSk7CgogIEpTVmFsdWVDb25zdCBhcmdzWzNdID0ge3ByZWRpY2F0ZV9vcGVyYXRvcnMsIEpTX05ld09iamVjdChjdHgpLCBKU19OZXdPYmplY3QoY3R4KX07CgogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgYXJnc1sxXSwganNfcHJlZGljYXRlX29wZXJhdG9yX2Z1bmNzLCBjb3VudG9mKGpzX3ByZWRpY2F0ZV9vcGVyYXRvcl9mdW5jcykpOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIGFyZ3NbMV0sICJsZWZ0IiwganNfZ2xvYmFsX2dldChjdHgsICJOdW1iZXIiKSk7CgogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgYXJnc1syXSwganNfcHJlZGljYXRlX29wZXJhdG9yX2Z1bmNzLCBjb3VudG9mKGpzX3ByZWRpY2F0ZV9vcGVyYXRvcl9mdW5jcykpOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIGFyZ3NbMl0sICJyaWdodCIsIGpzX2dsb2JhbF9nZXQoY3R4LCAiTnVtYmVyIikpOwoKICBKU1ZhbHVlIHByZWRpY2F0ZV9vcGVyYXRvcnNldCA9IEpTX0NhbGwoY3R4LCBvcGVyYXRvcnNfY3JlYXRlLCBvcGVyYXRvcnMsIDMsIGFyZ3MpOwogIEpTX0RlZmluZVByb3BlcnR5VmFsdWUoCiAgICAgIGN0eCwgcHJlZGljYXRlX3Byb3RvLCBvcGVyYXRvcnNfc2V0LCBwcmVkaWNhdGVfb3BlcmF0b3JzZXQsIEpTX1BST1BfQ09ORklHVVJBQkxFIHwgSlNfUFJPUF9XUklUQUJMRSk7CgogIEpTX0ZyZWVWYWx1ZShjdHgsIG9wZXJhdG9ycyk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb3BlcmF0b3JzX2NyZWF0ZSk7CiAgLy8gSlNfRnJlZVZhbHVlKGN0eCwgcHJlZGljYXRlX29wZXJhdG9ycyk7CiAgSlNfRnJlZUF0b20oY3R4LCBvcGVyYXRvcnNfc2V0KTsKCiAgaWYobSkgewogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIlByZWRpY2F0ZSIsIHByZWRpY2F0ZV9jdG9yKTsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJQcmVkaWNhdGVPcGVyYXRvcnMiLCBwcmVkaWNhdGVfb3BlcmF0b3JzKTsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJQcmVkaWNhdGVPcGVyYXRvclNldCIsIHByZWRpY2F0ZV9vcGVyYXRvcnNldCk7CiAgICBKU19TZXRNb2R1bGVFeHBvcnRMaXN0KGN0eCwgbSwganNfcHJlZGljYXRlX2Z1bmNzLCBjb3VudG9mKGpzX3ByZWRpY2F0ZV9mdW5jcykpOwogICAgSlNfU2V0TW9kdWxlRXhwb3J0TGlzdChjdHgsIG0sIGpzX3ByZWRpY2F0ZV90eXBlcywgY291bnRvZihqc19wcmVkaWNhdGVfdHlwZXMpKTsKICB9CgogIHJldHVybiAwOwp9CgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX3ByZWRpY2F0ZQojZW5kaWYKClZJU0lCTEUgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19wcmVkaWNhdGVfaW5pdCk7CiAgaWYoIW0pCiAgICByZXR1cm4gTlVMTDsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUHJlZGljYXRlIik7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlByZWRpY2F0ZU9wZXJhdG9ycyIpOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJQcmVkaWNhdGVPcGVyYXRvclNldCIpOwogIEpTX0FkZE1vZHVsZUV4cG9ydExpc3QoY3R4LCBtLCBqc19wcmVkaWNhdGVfZnVuY3MsIGNvdW50b2YoanNfcHJlZGljYXRlX2Z1bmNzKSk7CiAgSlNfQWRkTW9kdWxlRXhwb3J0TGlzdChjdHgsIG0sIGpzX3ByZWRpY2F0ZV90eXBlcywgY291bnRvZihqc19wcmVkaWNhdGVfdHlwZXMpKTsKICByZXR1cm4gbTsKfQoAAAAAAAAAAARtAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXmIAAAAAAACZYgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-gpio.h",
			"settings":
			{
				"buffer_size": 361,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "#ifndef QUICKJS_GPIO_H"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAwQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"left_delete",
					null,
					"AQAAAJUAAAAAAAAAlQAAAAAAAAAXAAAALCBqc19ncGlvZW50cnlfY2xhc3NfaWQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAAAAAAAAAKwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"left_delete",
					null,
					"AQAAAM4AAAAAAAAAzgAAAAAAAABBAAAAc3RydWN0IGdwaW9fZW50cnkqIGpzX2dwaW9lbnRyeV9kYXRhKEpTQ29udGV4dCosIEpTVmFsdWUgdmFsdWUpOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOAAAAAAAAAA8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABpAQAAI2lmbmRlZiBRVUlDS0pTX0dQSU9fSAojZGVmaW5lIFFVSUNLSlNfR1BJT19ICgpzdHJ1Y3QgZ3BpbzsKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KCmV4dGVybiB0aHJlYWRfbG9jYWwgSlNDbGFzc0lEIGpzX2dwaW9fY2xhc3NfaWQ7CgpzdHJ1Y3QgZ3BpbyoganNfZ3Bpb19kYXRhKEpTQ29udGV4dCosIEpTVmFsdWUgdmFsdWUpOwppbnQganNfZ3Bpb19pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKiBtKTsKSlNNb2R1bGVEZWYqIGpzX2luaXRfbW9kdWxlX2dwaW8oSlNDb250ZXh0KiwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpOwoKI2VuZGlmIC8qIGRlZmluZWQoUVVJQ0tKU19HUElPX0gpICovCgAAAAAAAAAAaQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABpAQAAI2lmbmRlZiBRVUlDS0pTX0dQSU9fSAojZGVmaW5lIFFVSUNLSlNfR1BJT19ICgpzdHJ1Y3QgZ3BpbzsKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KCmV4dGVybiB0aHJlYWRfbG9jYWwgSlNDbGFzc0lEIGpzX2dwaW9fY2xhc3NfaWQ7CgpzdHJ1Y3QgZ3BpbyoganNfZ3Bpb19kYXRhKEpTQ29udGV4dCosIEpTVmFsdWUgdmFsdWUpOwppbnQganNfZ3Bpb19pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKiBtKTsKSlNNb2R1bGVEZWYqIGpzX2luaXRfbW9kdWxlX2dwaW8oSlNDb250ZXh0KiwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpOwoKI2VuZGlmIC8qIGRlZmluZWQoUVVJQ0tKU19HUElPX0gpICovCgAAAAAAAAAAaQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABpAQAAI2lmbmRlZiBRVUlDS0pTX0dQSU9fSAojZGVmaW5lIFFVSUNLSlNfR1BJT19ICgpzdHJ1Y3QgZ3BpbzsKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KCmV4dGVybiB0aHJlYWRfbG9jYWwgSlNDbGFzc0lEIGpzX2dwaW9fY2xhc3NfaWQ7CgpzdHJ1Y3QgZ3BpbyoganNfZ3Bpb19kYXRhKEpTQ29udGV4dCosIEpTVmFsdWUgdmFsdWUpOwppbnQganNfZ3Bpb19pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKiBtKTsKSlNNb2R1bGVEZWYqIGpzX2luaXRfbW9kdWxlX2dwaW8oSlNDb250ZXh0KiwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpOwoKI2VuZGlmIC8qIGRlZmluZWQoUVVJQ0tKU19HUElPX0gpICovCgAAAAAAAAAAaQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "gpio.h",
			"settings":
			{
				"buffer_size": 405,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n\ntr"
					},
					"BAAAAEcAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABJAAAAAAAAAAAAAABJAAAAAAAAAEoAAAAAAAAAAAAAAEoAAAAAAAAASwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHAAAAAAAAAEcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					2,
					"left_delete",
					null,
					"AgAAAEoAAAAAAAAASgAAAAAAAAABAAAAckkAAAAAAAAASQAAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLAAAAAAAAAEsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAE8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJAAAAAAAAAEkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " gp"
					},
					"AwAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPAAAAAAAAAE8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					2,
					"left_delete",
					null,
					"AgAAAFEAAAAAAAAAUQAAAAAAAAABAAAAcFAAAAAAAAAAUAAAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAAAAAAAAAFIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "GP"
					},
					"AgAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					2,
					"left_delete",
					null,
					"AgAAAFEAAAAAAAAAUQAAAAAAAAABAAAAUFAAAAAAAAAAUAAAAAAAAAABAAAARw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAAAAAAAAAFIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "gpio"
					},
					"BAAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAABSAAAAAAAAAFMAAAAAAAAAAAAAAFMAAAAAAAAAVAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUAAAAAAAAAFQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFUAAAAAAAAAVwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVAAAAAAAAAFUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABYAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWAAAAAAAAAFYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AgAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAVwAAAAAAAABXAAAAAAAAAAEAAAAJ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAAAAAAAAAFoAAAAAAAAAAAAAAAAAMEA"
				],
				[
					19,
					1,
					"paste",
					null,
					"AQAAAFcAAAAAAAAAjQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXAAAAAAAAAFcAAAAAAAAAAAAAAAAAMEA"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABYAAAAAAAAAAYAAABzdGF0aWM",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXAAAAAAAAAF0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					2,
					"left_delete",
					null,
					"AgAAAGMAAAAAAAAAYwAAAAAAAAALAAAAZ3BpbyA9IE5VTExiAAAAAAAAAGIAAAAAAAAAAQAAACA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAAAAAAAAAG4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " map"
					},
					"BAAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAGUAAAAAAAAAZgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAAAAAAAAAGIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "int"
					},
					"AwAAAGgAAAAAAAAAaQAAAAAAAAAAAAAAaQAAAAAAAABqAAAAAAAAAAAAAABqAAAAAAAAAGsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAAAAAAAAAGgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " fd="
					},
					"BAAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABtAAAAAAAAAAAAAABtAAAAAAAAAG4AAAAAAAAAAAAAAG4AAAAAAAAAbwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAAAAAAAAAGsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAG4AAAAAAAAAbgAAAAAAAAABAAAAPQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAAAAAAAAAG8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAG4AAAAAAAAAbwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAAAAAAAAAG4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"left_delete",
					null,
					"AQAAAG8AAAAAAAAAbwAAAAAAAAAYAAAAc3RhdGljIGludCBmZGdwaW8gPSAtMTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAAAAAAAAAIcAAAAAAAAAAAAAAAAATEA"
				],
				[
					39,
					1,
					"cut",
					null,
					"AQAAAGgAAAAAAAAAaAAAAAAAAAAIAAAAaW50IGZkOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAAAAAAAAAHAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					41,
					1,
					"paste",
					null,
					"AQAAAFcAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXAAAAAAAAAFcAAAAAAAAAAAAAAAAAAAA"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAAIMAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACFAAAAAAAAAAAAAACFAAAAAAAAAIYAAAAAAAAAAAAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAAAAAAAAAIMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " gpio*"
					},
					"BgAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACLAAAAAAAAAAAAAACLAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAACOAAAAAAAAAI8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAAAAAAAAAIkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChAAAAAAAAAKEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " gpio*"
					},
					"BgAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAACpAAAAAAAAAKoAAAAAAAAAAAAAAKoAAAAAAAAAqwAAAAAAAAAAAAAAqwAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAAK0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAAAAAAAAAKcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"paste",
					null,
					"AQAAAMMAAAAAAAAAzwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "k,"
					},
					"AgAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAAAAAAAAAM8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					2,
					"left_delete",
					null,
					"AgAAANAAAAAAAAAA0AAAAAAAAAABAAAALM8AAAAAAAAAzwAAAAAAAAABAAAAaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAAAAAAAAANEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAAAAAAAAAM8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"paste",
					null,
					"AQAAAAkBAAAAAAAAFgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAQAAAAAAAAkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"paste",
					null,
					"AQAAAE4BAAAAAAAAWwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOAQAAAAAAAE4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACBAQAAI2lmbmRlZiBHUElPX0gKI2RlZmluZSBHUElPX0gKCiNpbmNsdWRlIDxzdGRib29sLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KCnN0cnVjdCBncGlvIHsKaW50IGZkOwogIHVpbnQzMl90KiBtYXA7Cn07Cgpib29sIGdwaW9faW5pdChzdHJ1Y3QgZ3BpbyopOwp2b2lkIGdwaW9fZXhpdChzdHJ1Y3QgZ3BpbyopOwp2b2lkIGdwaW9faW5pdF9waW4oc3RydWN0IGdwaW8qLGNvbnN0IHVpbnQ4X3QgcGluLCBjb25zdCBib29sIG91dHB1dCk7CnZvaWQgZ3Bpb19zZXRfcGluKHN0cnVjdCBncGlvKixjb25zdCB1aW50OF90IHBpbiwgY29uc3QgYm9vbCB2YWx1ZSk7CmJvb2wgZ3Bpb19nZXRfcGluKHN0cnVjdCBncGlvKixjb25zdCB1aW50OF90IHBpbik7CgojZW5kaWYgLy8gR1BJT19ICgAAAAAAAAAAhgEAAAAAAAAAAAAAAAAAAAAAAACGAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbAQAAAAAAAFsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACGAQAAI2lmbmRlZiBHUElPX0gKI2RlZmluZSBHUElPX0gKCiNpbmNsdWRlIDxzdGRib29sLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KCnN0cnVjdCBncGlvIHsKICBpbnQgZmQ7CiAgdWludDMyX3QqIG1hcDsKfTsKCmJvb2wgZ3Bpb19pbml0KHN0cnVjdCBncGlvKik7CnZvaWQgZ3Bpb19leGl0KHN0cnVjdCBncGlvKik7CnZvaWQgZ3Bpb19pbml0X3BpbihzdHJ1Y3QgZ3BpbyosIGNvbnN0IHVpbnQ4X3QgcGluLCBjb25zdCBib29sIG91dHB1dCk7CnZvaWQgZ3Bpb19zZXRfcGluKHN0cnVjdCBncGlvKiwgY29uc3QgdWludDhfdCBwaW4sIGNvbnN0IGJvb2wgdmFsdWUpOwpib29sIGdwaW9fZ2V0X3BpbihzdHJ1Y3QgZ3BpbyosIGNvbnN0IHVpbnQ4X3QgcGluKTsKCiNlbmRpZiAvLyBHUElPX0gKAAAAAAAAAACHAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwEAAAAAAABbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\nbool"
					},
					"BgAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " debug;"
					},
					"BwAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAAAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACVAQAAI2lmbmRlZiBHUElPX0gKI2RlZmluZSBHUElPX0gKCiNpbmNsdWRlIDxzdGRib29sLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KCnN0cnVjdCBncGlvIHsKICBpbnQgZmQ7CiAgdWludDMyX3QqIG1hcDsKICBib29sIGRlYnVnOwp9OwoKYm9vbCBncGlvX29wZW4oc3RydWN0IGdwaW8qKTsKdm9pZCBncGlvX2Nsb3NlKHN0cnVjdCBncGlvKik7CnZvaWQgZ3Bpb19pbml0X3BpbihzdHJ1Y3QgZ3BpbyosIGNvbnN0IHVpbnQ4X3QgcGluLCBjb25zdCBib29sIG91dHB1dCk7CnZvaWQgZ3Bpb19zZXRfcGluKHN0cnVjdCBncGlvKiwgY29uc3QgdWludDhfdCBwaW4sIGNvbnN0IGJvb2wgdmFsdWUpOwpib29sIGdwaW9fZ2V0X3BpbihzdHJ1Y3QgZ3BpbyosIGNvbnN0IHVpbnQ4X3QgcGluKTsKCiNlbmRpZiAvLyBHUElPX0gKAAAAAAAAAACVAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "gpio.c",
			"settings":
			{
				"buffer_size": 3435,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"paste",
					null,
					"AQAAAA0HAAAAAAAAGgcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANBwAAAAAAAA0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAABkHAAAAAAAAGQcAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaBwAAAAAAABoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " gpio"
					},
					"BQAAABkHAAAAAAAAGgcAAAAAAAAAAAAAGgcAAAAAAAAbBwAAAAAAAAAAAAAbBwAAAAAAABwHAAAAAAAAAAAAABwHAAAAAAAAHQcAAAAAAAAAAAAAHQcAAAAAAAAeBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZBwAAAAAAABkHAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					2,
					"left_delete",
					null,
					"AgAAACkHAAAAAAAAKQcAAAAAAAABAAAAZCgHAAAAAAAAKAcAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqBwAAAAAAACoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "->fd"
					},
					"BAAAACwHAAAAAAAALQcAAAAAAAAAAAAALQcAAAAAAAAuBwAAAAAAAAAAAAAuBwAAAAAAAC8HAAAAAAAAAAAAAC8HAAAAAAAAMAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsBwAAAAAAACwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "-map"
					},
					"BAAAANkHAAAAAAAA2gcAAAAAAAAAAAAA2gcAAAAAAADbBwAAAAAAAAAAAADbBwAAAAAAANwHAAAAAAAAAAAAANwHAAAAAAAA3QcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZBwAAAAAAANkHAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					2,
					"left_delete",
					null,
					"AgAAANwHAAAAAAAA3AcAAAAAAAABAAAAcNsHAAAAAAAA2wcAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdBwAAAAAAAN0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAANsHAAAAAAAA3AcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbBwAAAAAAANsHAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					2,
					"left_delete",
					null,
					"AgAAANsHAAAAAAAA2wcAAAAAAAABAAAAPtoHAAAAAAAA2gcAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcBwAAAAAAANwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": ">map"
					},
					"BAAAANoHAAAAAAAA2wcAAAAAAAAAAAAA2wcAAAAAAADcBwAAAAAAAAAAAADcBwAAAAAAAN0HAAAAAAAAAAAAAN0HAAAAAAAA3gcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaBwAAAAAAANoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"paste",
					null,
					"AQAAAPMIAAAAAAAAAAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzCAAAAAAAAPMIAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAAP8IAAAAAAAA/wgAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAACQAAAAAAAAAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " gpio"
					},
					"BQAAAP8IAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAABCQAAAAAAAAAAAAABCQAAAAAAAAIJAAAAAAAAAAAAAAIJAAAAAAAAAwkAAAAAAAAAAAAAAwkAAAAAAAAECQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/CAAAAAAAAP8IAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "->map"
					},
					"BQAAABUJAAAAAAAAFgkAAAAAAAAAAAAAFgkAAAAAAAAXCQAAAAAAAAAAAAAXCQAAAAAAABgJAAAAAAAAAAAAABgJAAAAAAAAGQkAAAAAAAAAAAAAGQkAAAAAAAAaCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVCQAAAAAAABUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "-fd"
					},
					"AwAAADUJAAAAAAAANgkAAAAAAAAAAAAANgkAAAAAAAA3CQAAAAAAAAAAAAA3CQAAAAAAADgJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1CQAAAAAAADUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					2,
					"left_delete",
					null,
					"AgAAADcJAAAAAAAANwkAAAAAAAABAAAAZDYJAAAAAAAANgkAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4CQAAAAAAADgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "fd"
					},
					"AgAAADYJAAAAAAAANwkAAAAAAAAAAAAANwkAAAAAAAA4CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2CQAAAAAAADYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					2,
					"left_delete",
					null,
					"AgAAADcJAAAAAAAANwkAAAAAAAABAAAAZDYJAAAAAAAANgkAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4CQAAAAAAADgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": ">fd"
					},
					"AwAAADYJAAAAAAAANwkAAAAAAAAAAAAANwkAAAAAAAA4CQAAAAAAAAAAAAA4CQAAAAAAADkJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2CQAAAAAAADYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					2,
					"left_delete",
					null,
					"AgAAADAJAAAAAAAAMAkAAAAAAAABAAAAZC8JAAAAAAAALwkAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxCQAAAAAAADEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"paste",
					null,
					"AQAAAFAJAAAAAAAAXQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQCQAAAAAAAFAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"left_delete",
					null,
					"AQAAAFwJAAAAAAAAXAkAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdCQAAAAAAAF0JAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " gpio,"
					},
					"BgAAAFwJAAAAAAAAXQkAAAAAAAAAAAAAXQkAAAAAAABeCQAAAAAAAAAAAABeCQAAAAAAAF8JAAAAAAAAAAAAAF8JAAAAAAAAYAkAAAAAAAAAAAAAYAkAAAAAAABhCQAAAAAAAAAAAABhCQAAAAAAAGIJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcCQAAAAAAAFwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGIJAAAAAAAAYwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiCQAAAAAAAGIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"cut",
					null,
					"AQAAAFAJAAAAAAAAUAkAAAAAAAATAAAAc3RydWN0IGdwaW8qIGdwaW8sIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjCQAAAAAAAFAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"paste",
					null,
					"AQAAAFAJAAAAAAAAYwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQCQAAAAAAAFAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "->map"
					},
					"BQAAAJMJAAAAAAAAlAkAAAAAAAAAAAAAlAkAAAAAAACVCQAAAAAAAAAAAACVCQAAAAAAAJYJAAAAAAAAAAAAAJYJAAAAAAAAlwkAAAAAAAAAAAAAlwkAAAAAAACYCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTCQAAAAAAAJMJAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"paste",
					null,
					"AgAAAMMJAAAAAAAAdgwAAAAAAAAAAAAAdgwAAAAAAAB2DAAAAAAAAJUCAAAgKihncGlvICsgZnNlbFtwaW5dKSB8PSAob3V0cHV0IDw8IGZzZWxfc2hpZnRbcGluXSk7CgogIGZwcmludGYoc3Rkb3V0LCAiUGluICVkIHNldCB0byAlc1xuIiwgcGluLCBvdXRwdXQgPyAib3V0cHV0IiA6ICJpbnB1dCIpOwp9Cgp2b2lkCmdwaW9fc2V0X3Bpbihjb25zdCB1aW50OF90IHBpbiwgY29uc3QgYm9vbCB2YWx1ZSkgewogIGlmKHZhbHVlKSB7CiAgICAqKGdwaW8gKyBzZXRbcGluXSkgJj0gfigxIDw8IHNldF9zaGlmdFtwaW5dKTsKICAgICooZ3BpbyArIHNldFtwaW5dKSB8PSAoMSA8PCBzZXRfc2hpZnRbcGluXSk7CiAgfSBlbHNlIHsKICAgICooZ3BpbyArIGNscltwaW5dKSAmPSB+KDEgPDwgY2xyX3NoaWZ0W3Bpbl0pOwogICAgKihncGlvICsgY2xyW3Bpbl0pIHw9ICgxIDw8IGNscl9zaGlmdFtwaW5dKTsKICB9CgogIGZwcmludGYoc3Rkb3V0LCAiU2V0IHBpbiAlZCB0byB2YWx1ZSAlZFxuIiwgcGluLCB2YWx1ZSk7Cn0KCmJvb2wKZ3Bpb19nZXRfcGluKGNvbnN0IHVpbnQ4X3QgcGluKSB7CiAgY29uc3QgYm9vbCB2YWx1ZSA9ICooZ3BpbyArIGx2bFtwaW5dKSAmICgxIDw8IGx2bF9zaGlmdFtwaW5dKTsKCiAgZnByaW50ZihzdGRvdXQsICJHZXQgcGluICVkIGF0IHZhbHVlICVkXG4iLCBwaW4sIHZhbHVlKTsKCiAgcmV0dXJuIHZhbHVlOwp9",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDCQAAAAAAAFgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"paste",
					null,
					"AQAAAF4KAAAAAAAAcQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeCgAAAAAAAF4KAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"paste",
					null,
					"AQAAAOALAAAAAAAA8wsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgCwAAAAAAAOALAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACdDAAAI2luY2x1ZGUgPHN5cy9tbWFuLmg+CiNpbmNsdWRlIDxlcnJuby5oPgojaW5jbHVkZSA8ZmNudGwuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8c3RkaW8uaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgoKI2luY2x1ZGUgImdwaW8uaCIKCiNkZWZpbmUgUEVSSVBIRVJBTFNfQkFTRV9BRERSICgweDIwMjAwMDAwKQojZGVmaW5lIE1BUF9TSVpFICgweEEwKQoKc3RhdGljIHVpbnQzMl90KiBncGlvID0gTlVMTDsKc3RhdGljIGludCBmZGdwaW8gPSAtMTsKCnN0YXRpYyBjb25zdCBpbnQgZnNlbF9zaGlmdFtdID0gewogICAgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywKICAgIDAsIDMsIDYsIDksIDEyLCAxNSwgMTgsIDIxLCAyNCwgMjcsIDAsIDMsIDYsIDksIDEyLCAxNSwgMTgsIDIxLCAyNCwgMjcsIDAsIDMsIDYsIDksIDEyLCAxNSwgMTgsIDIxLCAyNCwgMjcsCn07CgpzdGF0aWMgY29uc3QgaW50IGZzZWxbXSA9IHsKICAgIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDEsIDEsIDEsIDEsIDEsIDEsIDEsIDEsIDEsIDEsIDIsIDIsIDIsIDIsIDIsIDIsIDIsIDIsIDIsIDIsCiAgICAzLCAzLCAzLCAzLCAzLCAzLCAzLCAzLCAzLCAzLCA0LCA0LCA0LCA0LCA0LCA0LCA0LCA0LCA0LCA0LCA1LCA1LCA1LCA1LCA1LCA1LCA1LCA1LCA1LCA1LAp9OwoKc3RhdGljIGNvbnN0IGludCBzZXRbXSA9IHsKICAgIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsIDcsCiAgICA3LCA3LCA3LCA3LCA3LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LCA4LAp9OwoKc3RhdGljIGNvbnN0IGludCBzZXRfc2hpZnRbXSA9IHsKICAgIDAsICAxLCAgMiwgIDMsICA0LCAgNSwgNiwgNywgOCwgOSwgMTAsIDExLCAxMiwgMTMsIDE0LCAxNSwgMTYsIDE3LCAxOCwgMTksIDIwLCAyMSwgMjIsIDIzLCAyNCwgMjUsIDI2LAogICAgMjcsIDI4LCAyOSwgMzAsIDMxLCAwLCAxLCAyLCAzLCA0LCA1LCAgNiwgIDcsICA4LCAgOSwgIDEwLCAxMSwgMTIsIDEzLCAxNCwgMTUsIDE2LCAxNywgMTgsIDE5LCAyMCwgMjEsCn07CgpzdGF0aWMgY29uc3QgaW50IGNscltdID0gewogICAgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwKICAgIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsCn07CgpzdGF0aWMgY29uc3QgaW50KiBjbHJfc2hpZnQgPSBzZXRfc2hpZnQ7CgpzdGF0aWMgY29uc3QgaW50IGx2bFtdID0gewogICAgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywKICAgIDEzLCAxMywgMTMsIDEzLCAxMywgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsCn07CgpzdGF0aWMgY29uc3QgaW50KiBsdmxfc2hpZnQgPSBzZXRfc2hpZnQ7Cgpib29sCmdwaW9faW5pdChzdHJ1Y3QgZ3BpbyogZ3BpbykgewogIGlmKChncGlvLT5mZCA9IG9wZW4oIi9kZXYvZ3Bpb21lbSIsIE9fUkRXUiB8IE9fU1lOQyB8IE9fQ0xPRVhFQykpIDwgMCkgewogICAgZnByaW50ZihzdGRlcnIsICJDb3VsZCBub3Qgb3BlbiAvZGV2L2dwaW9tZW06ICVzXG4iLCBzdHJlcnJvcihlcnJubykpOwogICAgcmV0dXJuIGZhbHNlOwogIH0KCiAgaWYoKGdwaW8tPm1hcCA9IG1tYXAoTlVMTCwgTUFQX1NJWkUsIFBST1RfUkVBRCB8IFBST1RfV1JJVEUsIE1BUF9TSEFSRUQsIGZkZ3BpbywgUEVSSVBIRVJBTFNfQkFTRV9BRERSKSkgPT0gTUFQX0ZBSUxFRCkgewogICAgZnByaW50ZihzdGRlcnIsICJDb3VsZCBub3QgbWFwIGdwaW8gbWVtb3J5OiAlc1xuIiwgc3RyZXJyb3IoZXJybm8pKTsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIGZwdXRzKCJHUElPIGluaXRpYWxpemVkXG4iLCBzdGRvdXQpOwogIHJldHVybiB0cnVlOwp9Cgp2b2lkCmdwaW9fZXhpdChzdHJ1Y3QgZ3BpbyogZ3BpbykgewogIG11bm1hcChncGlvLT5tYXAsIE1BUF9TSVpFKTsKICBjbG9zZShncGlvLT5mZCk7Cn0KCnZvaWQKZ3Bpb19pbml0X3BpbihzdHJ1Y3QgZ3BpbyogZ3BpbywgY29uc3QgdWludDhfdCBwaW4sIGNvbnN0IGJvb2wgb3V0cHV0KSB7CiAgKihncGlvLT5tYXAgKyBmc2VsW3Bpbl0pICY9IH4oMSA8PCBmc2VsX3NoaWZ0W3Bpbl0pOwogICooZ3Bpby0+bWFwICsgZnNlbFtwaW5dKSB8PSAob3V0cHV0IDw8IGZzZWxfc2hpZnRbcGluXSk7CgogIGZwcmludGYoc3Rkb3V0LCAiUGluICVkIHNldCB0byAlc1xuIiwgcGluLCBvdXRwdXQgPyAib3V0cHV0IiA6ICJpbnB1dCIpOwp9Cgp2b2lkCmdwaW9fc2V0X3BpbihzdHJ1Y3QgZ3BpbyogZ3BpbywgY29uc3QgdWludDhfdCBwaW4sIGNvbnN0IGJvb2wgdmFsdWUpIHsKICBpZih2YWx1ZSkgewogICAgKihncGlvLT5tYXAgKyBzZXRbcGluXSkgJj0gfigxIDw8IHNldF9zaGlmdFtwaW5dKTsKICAgICooZ3Bpby0+bWFwICsgc2V0W3Bpbl0pIHw9ICgxIDw8IHNldF9zaGlmdFtwaW5dKTsKICB9IGVsc2UgewogICAgKihncGlvLT5tYXAgKyBjbHJbcGluXSkgJj0gfigxIDw8IGNscl9zaGlmdFtwaW5dKTsKICAgICooZ3Bpby0+bWFwICsgY2xyW3Bpbl0pIHw9ICgxIDw8IGNscl9zaGlmdFtwaW5dKTsKICB9CgogIGZwcmludGYoc3Rkb3V0LCAiU2V0IHBpbiAlZCB0byB2YWx1ZSAlZFxuIiwgcGluLCB2YWx1ZSk7Cn0KCmJvb2wKZ3Bpb19nZXRfcGluKHN0cnVjdCBncGlvKiBncGlvLCBjb25zdCB1aW50OF90IHBpbikgewogIGNvbnN0IGJvb2wgdmFsdWUgPSAqKGdwaW8tPm1hcCArIGx2bFtwaW5dKSAmICgxIDw8IGx2bF9zaGlmdFtwaW5dKTsKCiAgZnByaW50ZihzdGRvdXQsICJHZXQgcGluICVkIGF0IHZhbHVlICVkXG4iLCBwaW4sIHZhbHVlKTsKCiAgcmV0dXJuIHZhbHVlOwp9CgAAAAAAAAAAogwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzCwAAAAAAAPMLAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADPAAAAAAAAADYAAAAKc3RhdGljIHVpbnQzMl90KiBncGlvID0gTlVMTDsKc3RhdGljIGludCBmZGdwaW8gPSAtMTs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEAQAAAAAAAM4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtDAAAI2luY2x1ZGUgPHN5cy9tbWFuLmg+CiNpbmNsdWRlIDxlcnJuby5oPgojaW5jbHVkZSA8ZmNudGwuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8c3RkaW8uaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgoKI2luY2x1ZGUgImdwaW8uaCIKCiNkZWZpbmUgUEVSSVBIRVJBTFNfQkFTRV9BRERSICgweDIwMjAwMDAwKQojZGVmaW5lIE1BUF9TSVpFICgweEEwKQogCgpzdGF0aWMgY29uc3QgaW50IGZzZWxfc2hpZnRbXSA9IHsKICAgIDAsIDMsIDYsIDksIDEyLCAxNSwgMTgsIDIxLCAyNCwgMjcsIDAsIDMsIDYsIDksIDEyLCAxNSwgMTgsIDIxLCAyNCwgMjcsIDAsIDMsIDYsIDksIDEyLCAxNSwgMTgsIDIxLCAyNCwgMjcsCiAgICAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LCAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LCAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LAp9OwoKc3RhdGljIGNvbnN0IGludCBmc2VsW10gPSB7CiAgICAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAxLCAxLCAxLCAxLCAxLCAxLCAxLCAxLCAxLCAxLCAyLCAyLCAyLCAyLCAyLCAyLCAyLCAyLCAyLCAyLAogICAgMywgMywgMywgMywgMywgMywgMywgMywgMywgMywgNCwgNCwgNCwgNCwgNCwgNCwgNCwgNCwgNCwgNCwgNSwgNSwgNSwgNSwgNSwgNSwgNSwgNSwgNSwgNSwKfTsKCnN0YXRpYyBjb25zdCBpbnQgc2V0W10gPSB7CiAgICA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3LAogICAgNywgNywgNywgNywgNywgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwgOCwKfTsKCnN0YXRpYyBjb25zdCBpbnQgc2V0X3NoaWZ0W10gPSB7CiAgICAwLCAgMSwgIDIsICAzLCAgNCwgIDUsIDYsIDcsIDgsIDksIDEwLCAxMSwgMTIsIDEzLCAxNCwgMTUsIDE2LCAxNywgMTgsIDE5LCAyMCwgMjEsIDIyLCAyMywgMjQsIDI1LCAyNiwKICAgIDI3LCAyOCwgMjksIDMwLCAzMSwgMCwgMSwgMiwgMywgNCwgNSwgIDYsICA3LCAgOCwgIDksICAxMCwgMTEsIDEyLCAxMywgMTQsIDE1LCAxNiwgMTcsIDE4LCAxOSwgMjAsIDIxLAp9OwoKc3RhdGljIGNvbnN0IGludCBjbHJbXSA9IHsKICAgIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsCiAgICAxMCwgMTAsIDEwLCAxMCwgMTAsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLAp9OwoKc3RhdGljIGNvbnN0IGludCogY2xyX3NoaWZ0ID0gc2V0X3NoaWZ0OwoKc3RhdGljIGNvbnN0IGludCBsdmxbXSA9IHsKICAgIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsCiAgICAxMywgMTMsIDEzLCAxMywgMTMsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LAp9OwoKc3RhdGljIGNvbnN0IGludCogbHZsX3NoaWZ0ID0gc2V0X3NoaWZ0OwoKYm9vbApncGlvX2luaXQoc3RydWN0IGdwaW8qIGdwaW8pIHsKICBpZigoZ3Bpby0+ZmQgPSBvcGVuKCIvZGV2L2dwaW9tZW0iLCBPX1JEV1IgfCBPX1NZTkMgfCBPX0NMT0VYRUMpKSA8IDApIHsKICAgIGZwcmludGYoc3RkZXJyLCAiQ291bGQgbm90IG9wZW4gL2Rldi9ncGlvbWVtOiAlc1xuIiwgc3RyZXJyb3IoZXJybm8pKTsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIGlmKChncGlvLT5tYXAgPSBtbWFwKE5VTEwsIE1BUF9TSVpFLCBQUk9UX1JFQUQgfCBQUk9UX1dSSVRFLCBNQVBfU0hBUkVELCBmZGdwaW8sIFBFUklQSEVSQUxTX0JBU0VfQUREUikpID09CiAgICAgTUFQX0ZBSUxFRCkgewogICAgZnByaW50ZihzdGRlcnIsICJDb3VsZCBub3QgbWFwIGdwaW8gbWVtb3J5OiAlc1xuIiwgc3RyZXJyb3IoZXJybm8pKTsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIGZwdXRzKCJHUElPIGluaXRpYWxpemVkXG4iLCBzdGRvdXQpOwogIHJldHVybiB0cnVlOwp9Cgp2b2lkCmdwaW9fZXhpdChzdHJ1Y3QgZ3BpbyogZ3BpbykgewogIG11bm1hcChncGlvLT5tYXAsIE1BUF9TSVpFKTsKICBjbG9zZShncGlvLT5mZCk7Cn0KCnZvaWQKZ3Bpb19pbml0X3BpbihzdHJ1Y3QgZ3BpbyogZ3BpbywgY29uc3QgdWludDhfdCBwaW4sIGNvbnN0IGJvb2wgb3V0cHV0KSB7CiAgKihncGlvLT5tYXAgKyBmc2VsW3Bpbl0pICY9IH4oMSA8PCBmc2VsX3NoaWZ0W3Bpbl0pOwogICooZ3Bpby0+bWFwICsgZnNlbFtwaW5dKSB8PSAob3V0cHV0IDw8IGZzZWxfc2hpZnRbcGluXSk7CgogIGZwcmludGYoc3Rkb3V0LCAiUGluICVkIHNldCB0byAlc1xuIiwgcGluLCBvdXRwdXQgPyAib3V0cHV0IiA6ICJpbnB1dCIpOwp9Cgp2b2lkCmdwaW9fc2V0X3BpbihzdHJ1Y3QgZ3BpbyogZ3BpbywgY29uc3QgdWludDhfdCBwaW4sIGNvbnN0IGJvb2wgdmFsdWUpIHsKICBpZih2YWx1ZSkgewogICAgKihncGlvLT5tYXAgKyBzZXRbcGluXSkgJj0gfigxIDw8IHNldF9zaGlmdFtwaW5dKTsKICAgICooZ3Bpby0+bWFwICsgc2V0W3Bpbl0pIHw9ICgxIDw8IHNldF9zaGlmdFtwaW5dKTsKICB9IGVsc2UgewogICAgKihncGlvLT5tYXAgKyBjbHJbcGluXSkgJj0gfigxIDw8IGNscl9zaGlmdFtwaW5dKTsKICAgICooZ3Bpby0+bWFwICsgY2xyW3Bpbl0pIHw9ICgxIDw8IGNscl9zaGlmdFtwaW5dKTsKICB9CgogIGZwcmludGYoc3Rkb3V0LCAiU2V0IHBpbiAlZCB0byB2YWx1ZSAlZFxuIiwgcGluLCB2YWx1ZSk7Cn0KCmJvb2wKZ3Bpb19nZXRfcGluKHN0cnVjdCBncGlvKiBncGlvLCBjb25zdCB1aW50OF90IHBpbikgewogIGNvbnN0IGJvb2wgdmFsdWUgPSAqKGdwaW8tPm1hcCArIGx2bFtwaW5dKSAmICgxIDw8IGx2bF9zaGlmdFtwaW5dKTsKCiAgZnByaW50ZihzdGRvdXQsICJHZXQgcGluICVkIGF0IHZhbHVlICVkXG4iLCBwaW4sIHZhbHVlKTsKCiAgcmV0dXJuIHZhbHVlOwp9CgAAAAAAAAAAawwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAAAAAAAAAM8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"paste",
					null,
					"AgAAAOMHAAAAAAAA6wcAAAAAAAAAAAAA6wcAAAAAAADrBwAAAAAAAAYAAABmZGdwaW8",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpBwAAAAAAAOMHAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtDAAAI2luY2x1ZGUgPHN5cy9tbWFuLmg+CiNpbmNsdWRlIDxlcnJuby5oPgojaW5jbHVkZSA8ZmNudGwuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8c3RkaW8uaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgoKI2luY2x1ZGUgImdwaW8uaCIKCiNkZWZpbmUgUEVSSVBIRVJBTFNfQkFTRV9BRERSICgweDIwMjAwMDAwKQojZGVmaW5lIE1BUF9TSVpFICgweEEwKQoKc3RhdGljIGNvbnN0IGludCBmc2VsX3NoaWZ0W10gPSB7CiAgICAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LCAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LCAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LAogICAgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywKfTsKCnN0YXRpYyBjb25zdCBpbnQgZnNlbFtdID0gewogICAgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMiwgMiwgMiwgMiwgMiwgMiwgMiwgMiwgMiwgMiwKICAgIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDUsIDUsIDUsIDUsIDUsIDUsIDUsIDUsIDUsIDUsCn07CgpzdGF0aWMgY29uc3QgaW50IHNldFtdID0gewogICAgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywKICAgIDcsIDcsIDcsIDcsIDcsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsCn07CgpzdGF0aWMgY29uc3QgaW50IHNldF9zaGlmdFtdID0gewogICAgMCwgIDEsICAyLCAgMywgIDQsICA1LCA2LCA3LCA4LCA5LCAxMCwgMTEsIDEyLCAxMywgMTQsIDE1LCAxNiwgMTcsIDE4LCAxOSwgMjAsIDIxLCAyMiwgMjMsIDI0LCAyNSwgMjYsCiAgICAyNywgMjgsIDI5LCAzMCwgMzEsIDAsIDEsIDIsIDMsIDQsIDUsICA2LCAgNywgIDgsICA5LCAgMTAsIDExLCAxMiwgMTMsIDE0LCAxNSwgMTYsIDE3LCAxOCwgMTksIDIwLCAyMSwKfTsKCnN0YXRpYyBjb25zdCBpbnQgY2xyW10gPSB7CiAgICAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLAogICAgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwKfTsKCnN0YXRpYyBjb25zdCBpbnQqIGNscl9zaGlmdCA9IHNldF9zaGlmdDsKCnN0YXRpYyBjb25zdCBpbnQgbHZsW10gPSB7CiAgICAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLAogICAgMTMsIDEzLCAxMywgMTMsIDEzLCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwKfTsKCnN0YXRpYyBjb25zdCBpbnQqIGx2bF9zaGlmdCA9IHNldF9zaGlmdDsKCmJvb2wKZ3Bpb19pbml0KHN0cnVjdCBncGlvKiBncGlvKSB7CiAgaWYoKGdwaW8tPmZkID0gb3BlbigiL2Rldi9ncGlvbWVtIiwgT19SRFdSIHwgT19TWU5DIHwgT19DTE9FWEVDKSkgPCAwKSB7CiAgICBmcHJpbnRmKHN0ZGVyciwgIkNvdWxkIG5vdCBvcGVuIC9kZXYvZ3Bpb21lbTogJXNcbiIsIHN0cmVycm9yKGVycm5vKSk7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICBpZigoZ3Bpby0+bWFwID0gbW1hcChOVUxMLCBNQVBfU0laRSwgUFJPVF9SRUFEIHwgUFJPVF9XUklURSwgTUFQX1NIQVJFRCwgZ3Bpby0+ZmQsIFBFUklQSEVSQUxTX0JBU0VfQUREUikpID09CiAgICAgTUFQX0ZBSUxFRCkgewogICAgZnByaW50ZihzdGRlcnIsICJDb3VsZCBub3QgbWFwIGdwaW8gbWVtb3J5OiAlc1xuIiwgc3RyZXJyb3IoZXJybm8pKTsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIGZwdXRzKCJHUElPIGluaXRpYWxpemVkXG4iLCBzdGRvdXQpOwogIHJldHVybiB0cnVlOwp9Cgp2b2lkCmdwaW9fZXhpdChzdHJ1Y3QgZ3BpbyogZ3BpbykgewogIG11bm1hcChncGlvLT5tYXAsIE1BUF9TSVpFKTsKICBjbG9zZShncGlvLT5mZCk7Cn0KCnZvaWQKZ3Bpb19pbml0X3BpbihzdHJ1Y3QgZ3BpbyogZ3BpbywgY29uc3QgdWludDhfdCBwaW4sIGNvbnN0IGJvb2wgb3V0cHV0KSB7CiAgKihncGlvLT5tYXAgKyBmc2VsW3Bpbl0pICY9IH4oMSA8PCBmc2VsX3NoaWZ0W3Bpbl0pOwogICooZ3Bpby0+bWFwICsgZnNlbFtwaW5dKSB8PSAob3V0cHV0IDw8IGZzZWxfc2hpZnRbcGluXSk7CgogIGZwcmludGYoc3Rkb3V0LCAiUGluICVkIHNldCB0byAlc1xuIiwgcGluLCBvdXRwdXQgPyAib3V0cHV0IiA6ICJpbnB1dCIpOwp9Cgp2b2lkCmdwaW9fc2V0X3BpbihzdHJ1Y3QgZ3BpbyogZ3BpbywgY29uc3QgdWludDhfdCBwaW4sIGNvbnN0IGJvb2wgdmFsdWUpIHsKICBpZih2YWx1ZSkgewogICAgKihncGlvLT5tYXAgKyBzZXRbcGluXSkgJj0gfigxIDw8IHNldF9zaGlmdFtwaW5dKTsKICAgICooZ3Bpby0+bWFwICsgc2V0W3Bpbl0pIHw9ICgxIDw8IHNldF9zaGlmdFtwaW5dKTsKICB9IGVsc2UgewogICAgKihncGlvLT5tYXAgKyBjbHJbcGluXSkgJj0gfigxIDw8IGNscl9zaGlmdFtwaW5dKTsKICAgICooZ3Bpby0+bWFwICsgY2xyW3Bpbl0pIHw9ICgxIDw8IGNscl9zaGlmdFtwaW5dKTsKICB9CgogIGZwcmludGYoc3Rkb3V0LCAiU2V0IHBpbiAlZCB0byB2YWx1ZSAlZFxuIiwgcGluLCB2YWx1ZSk7Cn0KCmJvb2wKZ3Bpb19nZXRfcGluKHN0cnVjdCBncGlvKiBncGlvLCBjb25zdCB1aW50OF90IHBpbikgewogIGNvbnN0IGJvb2wgdmFsdWUgPSAqKGdwaW8tPm1hcCArIGx2bFtwaW5dKSAmICgxIDw8IGx2bF9zaGlmdFtwaW5dKTsKCiAgZnByaW50ZihzdGRvdXQsICJHZXQgcGluICVkIGF0IHZhbHVlICVkXG4iLCBwaW4sIHZhbHVlKTsKCiAgcmV0dXJuIHZhbHVlOwp9CgAAAAAAAAAAbgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAYAAAAAAADVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " (%d9"
					},
					"BQAAAJQIAAAAAAAAlQgAAAAAAAAAAAAAlQgAAAAAAACWCAAAAAAAAAAAAACWCAAAAAAAAJcIAAAAAAAAAAAAAJcIAAAAAAAAmAgAAAAAAAAAAAAAmAgAAAAAAACZCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAgAAAAAAACUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"left_delete",
					null,
					"AQAAAJgIAAAAAAAAmAgAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAmQgAAAAAAACZCAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJgIAAAAAAAAmQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAgAAAAAAACYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJkIAAAAAAAAmggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQgAAAAAAACZCAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					2,
					"left_delete",
					null,
					"AgAAAJkIAAAAAAAAmQgAAAAAAAABAAAAIJgIAAAAAAAAmAgAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAmggAAAAAAACaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJgIAAAAAAAAmQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAgAAAAAAACYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " %p)"
					},
					"BAAAAJkIAAAAAAAAmggAAAAAAAAAAAAAmggAAAAAAACbCAAAAAAAAAAAAACbCAAAAAAAAJwIAAAAAAAAAAAAAJwIAAAAAAAAnQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQgAAAAAAACZCAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					3,
					"left_delete",
					null,
					"AwAAAIEIAAAAAAAAgQgAAAAAAAABAAAAc4AIAAAAAAAAgAgAAAAAAAABAAAAdH8IAAAAAAAAfwgAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAgggAAAAAAACCCAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "rintf"
					},
					"BQAAAH8IAAAAAAAAgAgAAAAAAAAAAAAAgAgAAAAAAACBCAAAAAAAAAAAAACBCAAAAAAAAIIIAAAAAAAAAAAAAIIIAAAAAAAAgwgAAAAAAAAAAAAAgwgAAAAAAACECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwgAAAAAAAB/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "stdout,"
					},
					"BwAAAIUIAAAAAAAAhggAAAAAAAAAAAAAhggAAAAAAACHCAAAAAAAAAAAAACHCAAAAAAAAIgIAAAAAAAAAAAAAIgIAAAAAAAAiQgAAAAAAAAAAAAAiQgAAAAAAACKCAAAAAAAAAAAAACKCAAAAAAAAIsIAAAAAAAAAAAAAIsIAAAAAAAAjAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQgAAAAAAACFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwIAAAAAAAAjQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					3,
					"left_delete",
					null,
					"AwAAAIoIAAAAAAAAiggAAAAAAAABAAAAdIkIAAAAAAAAiQgAAAAAAAABAAAAdYgIAAAAAAAAiAgAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAiwgAAAAAAACLCAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "out"
					},
					"AwAAAIgIAAAAAAAAiQgAAAAAAAAAAAAAiQgAAAAAAACKCAAAAAAAAAAAAACKCAAAAAAAAIsIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAgAAAAAAACICAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "gpio-fd"
					},
					"BwAAAKwIAAAAAAAArQgAAAAAAAAAAAAArQgAAAAAAACuCAAAAAAAAAAAAACuCAAAAAAAAK8IAAAAAAAAAAAAAK8IAAAAAAAAsAgAAAAAAAAAAAAAsAgAAAAAAACxCAAAAAAAAAAAAACxCAAAAAAAALIIAAAAAAAAAAAAALIIAAAAAAAAswgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAgAAAAAAACsCAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					2,
					"left_delete",
					null,
					"AgAAALIIAAAAAAAAsggAAAAAAAABAAAAZLEIAAAAAAAAsQgAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAswgAAAAAAACzCAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": ">fd,"
					},
					"BAAAALEIAAAAAAAAsggAAAAAAAAAAAAAsggAAAAAAACzCAAAAAAAAAAAAACzCAAAAAAAALQIAAAAAAAAAAAAALQIAAAAAAAAtQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQgAAAAAAACxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " gpio-ma"
					},
					"CAAAALUIAAAAAAAAtggAAAAAAAAAAAAAtggAAAAAAAC3CAAAAAAAAAAAAAC3CAAAAAAAALgIAAAAAAAAAAAAALgIAAAAAAAAuQgAAAAAAAAAAAAAuQgAAAAAAAC6CAAAAAAAAAAAAAC6CAAAAAAAALsIAAAAAAAAAAAAALsIAAAAAAAAvAgAAAAAAAAAAAAAvAgAAAAAAAC9CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQgAAAAAAAC1CAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					2,
					"left_delete",
					null,
					"AgAAALwIAAAAAAAAvAgAAAAAAAABAAAAYbsIAAAAAAAAuwgAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAvQgAAAAAAAC9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": ">map);"
					},
					"BgAAALsIAAAAAAAAvAgAAAAAAAAAAAAAvAgAAAAAAAC9CAAAAAAAAAAAAAC9CAAAAAAAAL4IAAAAAAAAAAAAAL4IAAAAAAAAvwgAAAAAAAAAAAAAvwgAAAAAAADACAAAAAAAAAAAAADACAAAAAAAAMEIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwgAAAAAAAC7CAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"left_delete",
					null,
					"AQAAAMEIAAAAAAAAwQgAAAAAAAAIAAAAc3Rkb3V0KTs",
					"AQAAAAAAAAABAAAAwQgAAAAAAADJCAAAAAAAAP///////+9/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAHkIAAAAAAAAeggAAAAAAAAAAAAAeggAAAAAAAB8CAAAAAAAAAAAAAB8CAAAAAAAAH0IAAAAAAAAAAAAAH0IAAAAAAAAfwgAAAAAAAAAAAAAeggAAAAAAAB6CAAAAAAAAAIAAAAgIH0IAAAAAAAAfggAAAAAAAAAAAAAfggAAAAAAAB/CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQgAAAAAAAB5CAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH8IAAAAAAAAgQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwgAAAAAAAB/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "strstr"
					},
					"BgAAAIAIAAAAAAAAgQgAAAAAAAAAAAAAgQgAAAAAAACCCAAAAAAAAAAAAACCCAAAAAAAAIMIAAAAAAAAAAAAAIMIAAAAAAAAhAgAAAAAAAAAAAAAhAgAAAAAAACFCAAAAAAAAAAAAACFCAAAAAAAAIYIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAgAAAAAAACACAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIYIAAAAAAAAiAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhggAAAAAAACGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"paste",
					null,
					"AQAAAIcIAAAAAAAAlggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwgAAAAAAACHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJYIAAAAAAAAlwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlggAAAAAAACWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"BgAAAHoIAAAAAAAAewgAAAAAAAAAAAAAewgAAAAAAAB8CAAAAAAAAAAAAAB8CAAAAAAAAH0IAAAAAAAAAAAAAH0IAAAAAAAAfggAAAAAAAAAAAAAfggAAAAAAAB/CAAAAAAAAAAAAAB/CAAAAAAAAIAIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeggAAAAAAAB6CAAAAAAAAAAAAAAAAGxA"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": " char*"
					},
					"BgAAAIAIAAAAAAAAgQgAAAAAAAAAAAAAgQgAAAAAAACCCAAAAAAAAAAAAACCCAAAAAAAAIMIAAAAAAAAAAAAAIMIAAAAAAAAhAgAAAAAAAAAAAAAhAgAAAAAAACFCAAAAAAAAAAAAACFCAAAAAAAAIYIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAgAAAAAAACACAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAIYIAAAAAAAAhwgAAAAAAAAAAAAAhwgAAAAAAACICAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhggAAAAAAACGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "nv"
					},
					"AgAAAIgIAAAAAAAAiQgAAAAAAAAAAAAAiQgAAAAAAACKCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAgAAAAAAACICAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIoIAAAAAAAAiwgAAAAAAAAAAAAAiwgAAAAAAACMCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiggAAAAAAACKCAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwIAAAAAAAAjQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					6,
					"left_delete",
					null,
					"BgAAAIwIAAAAAAAAjAgAAAAAAAABAAAAIIsIAAAAAAAAiwgAAAAAAAABAAAAPYoIAAAAAAAAiggAAAAAAAABAAAAIIkIAAAAAAAAiQgAAAAAAAABAAAAdogIAAAAAAAAiAgAAAAAAAABAAAAbocIAAAAAAAAhwgAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAjQgAAAAAAACNCAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "dbg"
					},
					"AwAAAIcIAAAAAAAAiAgAAAAAAAAAAAAAiAgAAAAAAACJCAAAAAAAAAAAAACJCAAAAAAAAIoIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwgAAAAAAACHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " =getenv"
					},
					"CAAAAIoIAAAAAAAAiwgAAAAAAAAAAAAAiwgAAAAAAACMCAAAAAAAAAAAAACMCAAAAAAAAI0IAAAAAAAAAAAAAI0IAAAAAAAAjggAAAAAAAAAAAAAjggAAAAAAACPCAAAAAAAAAAAAACPCAAAAAAAAJAIAAAAAAAAAAAAAJAIAAAAAAAAkQgAAAAAAAAAAAAAkQgAAAAAAACSCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiggAAAAAAACKCAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJIIAAAAAAAAlAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkggAAAAAAACSCAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAJMIAAAAAAAAlQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwgAAAAAAACTCAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "DEBUG"
					},
					"BQAAAJQIAAAAAAAAlQgAAAAAAAAAAAAAlQgAAAAAAACWCAAAAAAAAAAAAACWCAAAAAAAAJcIAAAAAAAAAAAAAJcIAAAAAAAAmAgAAAAAAAAAAAAAmAgAAAAAAACZCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAgAAAAAAACUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJsIAAAAAAAAnAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwgAAAAAAACbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJwIAAAAAAAAnQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAgAAAAAAACcCAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "dbg"
					},
					"AwAAAKMIAAAAAAAApAgAAAAAAAAAAAAApAgAAAAAAAClCAAAAAAAAAAAAAClCAAAAAAAAKYIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowgAAAAAAACjCAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAKYIAAAAAAAApwgAAAAAAAAAAAAApwgAAAAAAACoCAAAAAAAAAAAAACoCAAAAAAAAKkIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApggAAAAAAACmCAAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkIAAAAAAAAqggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQgAAAAAAACpCAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					18,
					"left_delete",
					null,
					"EgAAAMIIAAAAAAAAwggAAAAAAAABAAAAKcEIAAAAAAAAwQgAAAAAAAABAAAAKcAIAAAAAAAAwAgAAAAAAAABAAAALL8IAAAAAAAAvwgAAAAAAAABAAAAKb4IAAAAAAAAvggAAAAAAAABAAAAIr0IAAAAAAAAvQgAAAAAAAABAAAAR7wIAAAAAAAAvAgAAAAAAAABAAAAVbsIAAAAAAAAuwgAAAAAAAABAAAAQroIAAAAAAAAuggAAAAAAAABAAAARbkIAAAAAAAAuQgAAAAAAAABAAAARLgIAAAAAAAAuAgAAAAAAAABAAAAIrcIAAAAAAAAtwgAAAAAAAABAAAAKLYIAAAAAAAAtggAAAAAAAABAAAAdrUIAAAAAAAAtQgAAAAAAAABAAAAbrQIAAAAAAAAtAgAAAAAAAABAAAAZbMIAAAAAAAAswgAAAAAAAABAAAAdLIIAAAAAAAAsggAAAAAAAABAAAAZbEIAAAAAAAAsQgAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAwwgAAAAAAADDCAAAAAAAAP///////+9/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "dgb,"
					},
					"BAAAALEIAAAAAAAAsggAAAAAAAAAAAAAsggAAAAAAACzCAAAAAAAAAAAAACzCAAAAAAAALQIAAAAAAAAAAAAALQIAAAAAAAAtQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQgAAAAAAACxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALUIAAAAAAAAtggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQgAAAAAAAC1CAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAALYIAAAAAAAAuAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtggAAAAAAAC2CAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "gpio"
					},
					"BAAAALcIAAAAAAAAuAgAAAAAAAAAAAAAuAgAAAAAAAC5CAAAAAAAAAAAAAC5CAAAAAAAALoIAAAAAAAAAAAAALoIAAAAAAAAuwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwgAAAAAAAC3CAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "));"
					},
					"AwAAALwIAAAAAAAAvQgAAAAAAAAAAAAAvQgAAAAAAAC+CAAAAAAAAAAAAAC+CAAAAAAAAL8IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAgAAAAAAAC8CAAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"left_delete",
					null,
					"AQAAAL4IAAAAAAAAvggAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAvwgAAAAAAAC/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL4IAAAAAAAAvwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvggAAAAAAAC+CAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "\ngpio->debug"
					},
					"DwAAAL8IAAAAAAAAwAgAAAAAAAAAAAAAwAgAAAAAAADCCAAAAAAAAAAAAADACAAAAAAAAMAIAAAAAAAAAgAAACAgwAgAAAAAAADECAAAAAAAAAAAAADECAAAAAAAAMUIAAAAAAAAAAAAAMUIAAAAAAAAxggAAAAAAAAAAAAAxggAAAAAAADHCAAAAAAAAAAAAADHCAAAAAAAAMgIAAAAAAAAAAAAAMgIAAAAAAAAyQgAAAAAAAAAAAAAyQgAAAAAAADKCAAAAAAAAAAAAADKCAAAAAAAAMsIAAAAAAAAAAAAAMsIAAAAAAAAzAgAAAAAAAAAAAAAzAgAAAAAAADNCAAAAAAAAAAAAADNCAAAAAAAAM4IAAAAAAAAAAAAAM4IAAAAAAAAzwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwgAAAAAAAC/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAM8IAAAAAAAA0AgAAAAAAAAAAAAA0AgAAAAAAADRCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwgAAAAAAADPCAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAANEIAAAAAAAA0ggAAAAAAAAAAAAA0ggAAAAAAADTCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QgAAAAAAADRCAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"left_delete",
					null,
					"AQAAANIIAAAAAAAA0ggAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA0wgAAAAAAADTCAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "treu"
					},
					"BAAAANIIAAAAAAAA0wgAAAAAAAAAAAAA0wgAAAAAAADUCAAAAAAAAAAAAADUCAAAAAAAANUIAAAAAAAAAAAAANUIAAAAAAAA1ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0ggAAAAAAADSCAAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					2,
					"left_delete",
					null,
					"AgAAANUIAAAAAAAA1QgAAAAAAAABAAAAddQIAAAAAAAA1AgAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA1ggAAAAAAADWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "ue;"
					},
					"AwAAANQIAAAAAAAA1QgAAAAAAAAAAAAA1QgAAAAAAADWCAAAAAAAAAAAAADWCAAAAAAAANcIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AgAAAAAAADUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"cut",
					null,
					"AQAAAHoIAAAAAAAAeggAAAAAAABeAAAACmNvbnN0IGNoYXIqIGRiZyA9Z2V0ZW52KCJERUJVRyIpOwoKICBpZihkYmcgJiYgc3Ryc3RyKGRnYiwgImdwaW8iKSkgCiAgICBncGlvLT5kZWJ1ZyA9IHRydWU7Cg",
					"AQAAAAAAAAABAAAA2AgAAAAAAAB6CAAAAAAAAAAAAAAAAAAA"
				],
				[
					149,
					1,
					"paste",
					null,
					"AQAAAOsGAAAAAAAASQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wYAAAAAAADrBgAAAAAAAAAAAAAAAAAA"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEkHAAAAAAAASgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQcAAAAAAABJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"",
					null,
					"AQAAAJUHAAAAAAAAsAcAAAAAAAALAAAAICAgIGZwcmludGY",
					"AQAAAAAAAAABAAAAlQcAAAAAAACgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"",
					null,
					"AQAAAIoIAAAAAAAApQgAAAAAAAALAAAAICAgIGZwcmludGY",
					"AQAAAAAAAAABAAAAiggAAAAAAACVCAAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"",
					null,
					"AQAAAPkIAAAAAAAAEwkAAAAAAAAKAAAACiAgZnByaW50Zg",
					"AQAAAAAAAAABAAAA+QgAAAAAAAADCQAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"",
					null,
					"AQAAAH0KAAAAAAAAlwoAAAAAAAAKAAAACiAgZnByaW50Zg",
					"AQAAAAAAAAABAAAAfQoAAAAAAACHCgAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"",
					null,
					"AQAAAB8MAAAAAAAAOQwAAAAAAAAKAAAACiAgZnByaW50Zg",
					"AQAAAAAAAAABAAAAHwwAAAAAAAApDAAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"",
					null,
					"AQAAAO4MAAAAAAAACA0AAAAAAAAKAAAACiAgZnByaW50Zg",
					"AQAAAAAAAAABAAAA7gwAAAAAAAD4DAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNDQAAI2luY2x1ZGUgPHN5cy9tbWFuLmg+CiNpbmNsdWRlIDxlcnJuby5oPgojaW5jbHVkZSA8ZmNudGwuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8c3RkaW8uaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgoKI2luY2x1ZGUgImdwaW8uaCIKCiNkZWZpbmUgUEVSSVBIRVJBTFNfQkFTRV9BRERSICgweDIwMjAwMDAwKQojZGVmaW5lIE1BUF9TSVpFICgweEEwKQoKc3RhdGljIGNvbnN0IGludCBmc2VsX3NoaWZ0W10gPSB7CiAgICAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LCAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LCAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LAogICAgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywKfTsKCnN0YXRpYyBjb25zdCBpbnQgZnNlbFtdID0gewogICAgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMiwgMiwgMiwgMiwgMiwgMiwgMiwgMiwgMiwgMiwKICAgIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDUsIDUsIDUsIDUsIDUsIDUsIDUsIDUsIDUsIDUsCn07CgpzdGF0aWMgY29uc3QgaW50IHNldFtdID0gewogICAgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywKICAgIDcsIDcsIDcsIDcsIDcsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsCn07CgpzdGF0aWMgY29uc3QgaW50IHNldF9zaGlmdFtdID0gewogICAgMCwgIDEsICAyLCAgMywgIDQsICA1LCA2LCA3LCA4LCA5LCAxMCwgMTEsIDEyLCAxMywgMTQsIDE1LCAxNiwgMTcsIDE4LCAxOSwgMjAsIDIxLCAyMiwgMjMsIDI0LCAyNSwgMjYsCiAgICAyNywgMjgsIDI5LCAzMCwgMzEsIDAsIDEsIDIsIDMsIDQsIDUsICA2LCAgNywgIDgsICA5LCAgMTAsIDExLCAxMiwgMTMsIDE0LCAxNSwgMTYsIDE3LCAxOCwgMTksIDIwLCAyMSwKfTsKCnN0YXRpYyBjb25zdCBpbnQgY2xyW10gPSB7CiAgICAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLAogICAgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwKfTsKCnN0YXRpYyBjb25zdCBpbnQqIGNscl9zaGlmdCA9IHNldF9zaGlmdDsKCnN0YXRpYyBjb25zdCBpbnQgbHZsW10gPSB7CiAgICAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLAogICAgMTMsIDEzLCAxMywgMTMsIDEzLCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwKfTsKCnN0YXRpYyBjb25zdCBpbnQqIGx2bF9zaGlmdCA9IHNldF9zaGlmdDsKCmJvb2wKZ3Bpb19vcGVuKHN0cnVjdCBncGlvKiBncGlvKSB7Cgpjb25zdCBjaGFyKiBkYmcgPWdldGVudigiREVCVUciKTsKCiAgaWYoZGJnICYmIHN0cnN0cihkZ2IsICJncGlvIikpIAogICAgZ3Bpby0+ZGVidWcgPSB0cnVlOwoKICBpZigoZ3Bpby0+ZmQgPSBvcGVuKCIvZGV2L2dwaW9tZW0iLCBPX1JEV1IgfCBPX1NZTkMgfCBPX0NMT0VYRUMpKSA8IDApIHsKICAgIGlmKGdwaW8tPmRlYnVnKSBmcHJpbnRmKHN0ZGVyciwgIkNvdWxkIG5vdCBvcGVuIC9kZXYvZ3Bpb21lbTogJXNcbiIsIHN0cmVycm9yKGVycm5vKSk7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICBpZigoZ3Bpby0+bWFwID0gbW1hcChOVUxMLCBNQVBfU0laRSwgUFJPVF9SRUFEIHwgUFJPVF9XUklURSwgTUFQX1NIQVJFRCwgZ3Bpby0+ZmQsIFBFUklQSEVSQUxTX0JBU0VfQUREUikpID09CiAgICAgTUFQX0ZBSUxFRCkgewogICAgaWYoZ3Bpby0+ZGVidWcpIGZwcmludGYoc3RkZXJyLCAiQ291bGQgbm90IG1hcCBncGlvIG1lbW9yeTogJXNcbiIsIHN0cmVycm9yKGVycm5vKSk7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICBpZihncGlvLT5kZWJ1ZykgZnByaW50ZihzdGRvdXQsICJHUElPIGluaXRpYWxpemVkICglZCwgJXApXG4iLCBncGlvLT5mZCwgZ3Bpby0+bWFwKTsKICByZXR1cm4gdHJ1ZTsKfQoKdm9pZApncGlvX2Nsb3NlKHN0cnVjdCBncGlvKiBncGlvKSB7CiAgbXVubWFwKGdwaW8tPm1hcCwgTUFQX1NJWkUpOwogIGNsb3NlKGdwaW8tPmZkKTsKfQoKdm9pZApncGlvX2luaXRfcGluKHN0cnVjdCBncGlvKiBncGlvLCBjb25zdCB1aW50OF90IHBpbiwgY29uc3QgYm9vbCBvdXRwdXQpIHsKICAqKGdwaW8tPm1hcCArIGZzZWxbcGluXSkgJj0gfigxIDw8IGZzZWxfc2hpZnRbcGluXSk7CiAgKihncGlvLT5tYXAgKyBmc2VsW3Bpbl0pIHw9IChvdXRwdXQgPDwgZnNlbF9zaGlmdFtwaW5dKTsKCiAgaWYoZ3Bpby0+ZGVidWcpIGZwcmludGYoc3Rkb3V0LCAiUGluICVkIHNldCB0byAlc1xuIiwgcGluLCBvdXRwdXQgPyAib3V0cHV0IiA6ICJpbnB1dCIpOwp9Cgp2b2lkCmdwaW9fc2V0X3BpbihzdHJ1Y3QgZ3BpbyogZ3BpbywgY29uc3QgdWludDhfdCBwaW4sIGNvbnN0IGJvb2wgdmFsdWUpIHsKICBpZih2YWx1ZSkgewogICAgKihncGlvLT5tYXAgKyBzZXRbcGluXSkgJj0gfigxIDw8IHNldF9zaGlmdFtwaW5dKTsKICAgICooZ3Bpby0+bWFwICsgc2V0W3Bpbl0pIHw9ICgxIDw8IHNldF9zaGlmdFtwaW5dKTsKICB9IGVsc2UgewogICAgKihncGlvLT5tYXAgKyBjbHJbcGluXSkgJj0gfigxIDw8IGNscl9zaGlmdFtwaW5dKTsKICAgICooZ3Bpby0+bWFwICsgY2xyW3Bpbl0pIHw9ICgxIDw8IGNscl9zaGlmdFtwaW5dKTsKICB9CgogIGlmKGdwaW8tPmRlYnVnKSBmcHJpbnRmKHN0ZG91dCwgIlNldCBwaW4gJWQgdG8gdmFsdWUgJWRcbiIsIHBpbiwgdmFsdWUpOwp9Cgpib29sCmdwaW9fZ2V0X3BpbihzdHJ1Y3QgZ3BpbyogZ3BpbywgY29uc3QgdWludDhfdCBwaW4pIHsKICBjb25zdCBib29sIHZhbHVlID0gKihncGlvLT5tYXAgKyBsdmxbcGluXSkgJiAoMSA8PCBsdmxfc2hpZnRbcGluXSk7CgogIGlmKGdwaW8tPmRlYnVnKSBmcHJpbnRmKHN0ZG91dCwgIkdldCBwaW4gJWQgYXQgdmFsdWUgJWRcbiIsIHBpbiwgdmFsdWUpOwoKICByZXR1cm4gdmFsdWU7Cn0KAAAAAAAAAABrDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQ0AAAAAAABNDQAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"paste",
					null,
					"AgAAACUHAAAAAAAAKAcAAAAAAAAAAAAAKAcAAAAAAAAoBwAAAAAAAAMAAABkZ2I",
					"AQAAAAAAAAABAAAAJQcAAAAAAAAoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrDQAAI2luY2x1ZGUgPHN5cy9tbWFuLmg+CiNpbmNsdWRlIDxlcnJuby5oPgojaW5jbHVkZSA8ZmNudGwuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8c3RkaW8uaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgoKI2luY2x1ZGUgImdwaW8uaCIKCiNkZWZpbmUgUEVSSVBIRVJBTFNfQkFTRV9BRERSICgweDIwMjAwMDAwKQojZGVmaW5lIE1BUF9TSVpFICgweEEwKQoKc3RhdGljIGNvbnN0IGludCBmc2VsX3NoaWZ0W10gPSB7CiAgICAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LCAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LCAwLCAzLCA2LCA5LCAxMiwgMTUsIDE4LCAyMSwgMjQsIDI3LAogICAgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywgMCwgMywgNiwgOSwgMTIsIDE1LCAxOCwgMjEsIDI0LCAyNywKfTsKCnN0YXRpYyBjb25zdCBpbnQgZnNlbFtdID0gewogICAgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMSwgMiwgMiwgMiwgMiwgMiwgMiwgMiwgMiwgMiwgMiwKICAgIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDMsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDQsIDUsIDUsIDUsIDUsIDUsIDUsIDUsIDUsIDUsIDUsCn07CgpzdGF0aWMgY29uc3QgaW50IHNldFtdID0gewogICAgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywgNywKICAgIDcsIDcsIDcsIDcsIDcsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsIDgsCn07CgpzdGF0aWMgY29uc3QgaW50IHNldF9zaGlmdFtdID0gewogICAgMCwgIDEsICAyLCAgMywgIDQsICA1LCA2LCA3LCA4LCA5LCAxMCwgMTEsIDEyLCAxMywgMTQsIDE1LCAxNiwgMTcsIDE4LCAxOSwgMjAsIDIxLCAyMiwgMjMsIDI0LCAyNSwgMjYsCiAgICAyNywgMjgsIDI5LCAzMCwgMzEsIDAsIDEsIDIsIDMsIDQsIDUsICA2LCAgNywgIDgsICA5LCAgMTAsIDExLCAxMiwgMTMsIDE0LCAxNSwgMTYsIDE3LCAxOCwgMTksIDIwLCAyMSwKfTsKCnN0YXRpYyBjb25zdCBpbnQgY2xyW10gPSB7CiAgICAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLAogICAgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwKfTsKCnN0YXRpYyBjb25zdCBpbnQqIGNscl9zaGlmdCA9IHNldF9zaGlmdDsKCnN0YXRpYyBjb25zdCBpbnQgbHZsW10gPSB7CiAgICAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLAogICAgMTMsIDEzLCAxMywgMTMsIDEzLCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwKfTsKCnN0YXRpYyBjb25zdCBpbnQqIGx2bF9zaGlmdCA9IHNldF9zaGlmdDsKCmJvb2wKZ3Bpb19vcGVuKHN0cnVjdCBncGlvKiBncGlvKSB7CgogIGNvbnN0IGNoYXIqIGRiZyA9IGdldGVudigiREVCVUciKTsKCiAgaWYoZGJnICYmIHN0cnN0cihkYmcsICJncGlvIikpCiAgICBncGlvLT5kZWJ1ZyA9IHRydWU7CgogIGlmKChncGlvLT5mZCA9IG9wZW4oIi9kZXYvZ3Bpb21lbSIsIE9fUkRXUiB8IE9fU1lOQyB8IE9fQ0xPRVhFQykpIDwgMCkgewogICAgaWYoZ3Bpby0+ZGVidWcpCiAgICAgIGZwcmludGYoc3RkZXJyLCAiQ291bGQgbm90IG9wZW4gL2Rldi9ncGlvbWVtOiAlc1xuIiwgc3RyZXJyb3IoZXJybm8pKTsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIGlmKChncGlvLT5tYXAgPSBtbWFwKE5VTEwsIE1BUF9TSVpFLCBQUk9UX1JFQUQgfCBQUk9UX1dSSVRFLCBNQVBfU0hBUkVELCBncGlvLT5mZCwgUEVSSVBIRVJBTFNfQkFTRV9BRERSKSkgPT0KICAgICBNQVBfRkFJTEVEKSB7CiAgICBpZihncGlvLT5kZWJ1ZykKICAgICAgZnByaW50ZihzdGRlcnIsICJDb3VsZCBub3QgbWFwIGdwaW8gbWVtb3J5OiAlc1xuIiwgc3RyZXJyb3IoZXJybm8pKTsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIGlmKGdwaW8tPmRlYnVnKQogICAgZnByaW50ZihzdGRvdXQsICJHUElPIGluaXRpYWxpemVkICglZCwgJXApXG4iLCBncGlvLT5mZCwgZ3Bpby0+bWFwKTsKICByZXR1cm4gdHJ1ZTsKfQoKdm9pZApncGlvX2Nsb3NlKHN0cnVjdCBncGlvKiBncGlvKSB7CiAgbXVubWFwKGdwaW8tPm1hcCwgTUFQX1NJWkUpOwogIGNsb3NlKGdwaW8tPmZkKTsKfQoKdm9pZApncGlvX2luaXRfcGluKHN0cnVjdCBncGlvKiBncGlvLCBjb25zdCB1aW50OF90IHBpbiwgY29uc3QgYm9vbCBvdXRwdXQpIHsKICAqKGdwaW8tPm1hcCArIGZzZWxbcGluXSkgJj0gfigxIDw8IGZzZWxfc2hpZnRbcGluXSk7CiAgKihncGlvLT5tYXAgKyBmc2VsW3Bpbl0pIHw9IChvdXRwdXQgPDwgZnNlbF9zaGlmdFtwaW5dKTsKCiAgaWYoZ3Bpby0+ZGVidWcpCiAgICBmcHJpbnRmKHN0ZG91dCwgIlBpbiAlZCBzZXQgdG8gJXNcbiIsIHBpbiwgb3V0cHV0ID8gIm91dHB1dCIgOiAiaW5wdXQiKTsKfQoKdm9pZApncGlvX3NldF9waW4oc3RydWN0IGdwaW8qIGdwaW8sIGNvbnN0IHVpbnQ4X3QgcGluLCBjb25zdCBib29sIHZhbHVlKSB7CiAgaWYodmFsdWUpIHsKICAgICooZ3Bpby0+bWFwICsgc2V0W3Bpbl0pICY9IH4oMSA8PCBzZXRfc2hpZnRbcGluXSk7CiAgICAqKGdwaW8tPm1hcCArIHNldFtwaW5dKSB8PSAoMSA8PCBzZXRfc2hpZnRbcGluXSk7CiAgfSBlbHNlIHsKICAgICooZ3Bpby0+bWFwICsgY2xyW3Bpbl0pICY9IH4oMSA8PCBjbHJfc2hpZnRbcGluXSk7CiAgICAqKGdwaW8tPm1hcCArIGNscltwaW5dKSB8PSAoMSA8PCBjbHJfc2hpZnRbcGluXSk7CiAgfQoKICBpZihncGlvLT5kZWJ1ZykKICAgIGZwcmludGYoc3Rkb3V0LCAiU2V0IHBpbiAlZCB0byB2YWx1ZSAlZFxuIiwgcGluLCB2YWx1ZSk7Cn0KCmJvb2wKZ3Bpb19nZXRfcGluKHN0cnVjdCBncGlvKiBncGlvLCBjb25zdCB1aW50OF90IHBpbikgewogIGNvbnN0IGJvb2wgdmFsdWUgPSAqKGdwaW8tPm1hcCArIGx2bFtwaW5dKSAmICgxIDw8IGx2bF9zaGlmdFtwaW5dKTsKCiAgaWYoZ3Bpby0+ZGVidWcpCiAgICBmcHJpbnRmKHN0ZG91dCwgIkdldCBwaW4gJWQgYXQgdmFsdWUgJWRcbiIsIHBpbiwgdmFsdWUpOwoKICByZXR1cm4gdmFsdWU7Cn0KAAAAAAAAAABrDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwsAAAAAAABLCwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/roman/Projects/plot-cv/test-gpio.js",
			"settings":
			{
				"buffer_size": 733,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n\ngpio.initP"
					},
					"DwAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVwAAAAAAAAAAAAAAUgAAAAAAAABSAAAAAAAAAAIAAAAgIFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAABaAAAAAAAAAFsAAAAAAAAAAAAAAFsAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABdAAAAAAAAAAAAAABdAAAAAAAAAF4AAAAAAAAAAAAAAF4AAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAAF8AAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwAAAAAAAABfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGEAAAAAAAAAYwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAGIAAAAAAAAAYwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgAAAAAAAABiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGQAAAAAAAAAZQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGMAAAAAAAAAZAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " GPIO."
					},
					"BgAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABmAAAAAAAAAAAAAABmAAAAAAAAAGcAAAAAAAAAAAAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABpAAAAAAAAAAAAAABpAAAAAAAAAGoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "OUTPUT"
					},
					"BgAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\n\ngpio.setPi"
					},
					"DwAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAeAAAAAAAAAAAAAAAcwAAAAAAAABzAAAAAAAAAAIAAAAgIHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAB+AAAAAAAAAH8AAAAAAAAAAAAAAH8AAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAIAAAAAAAAAAgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIEAAAAAAAAAgwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "0,"
					},
					"AgAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIcAAAAAAAAAiAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAHIAAAAAAAAAcgAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAGRA"
				],
				[
					29,
					1,
					"cut",
					null,
					"AQAAAFIAAAAAAAAAUgAAAAAAAAA2AAAACiAgZ3Bpby5pbml0UGluKDAsIEdQSU8uT1VUUFVUKTsKICBncGlvLnNldFBpbigwLCAxKTsK",
					"AQAAAAAAAAABAAAAUgAAAAAAAACIAAAAAAAAAAAAAAAAAAAA"
				],
				[
					30,
					2,
					"paste",
					null,
					"AgAAAFIAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAAC+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACZAAAAAAAAAAEAAAAw",
					"AQAAAAAAAAABAAAAmAAAAAAAAACZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAALcAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC4AAAAAAAAAAEAAAAw",
					"AQAAAAAAAAABAAAAtwAAAAAAAAC4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "INPUT"
					},
					"BgAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAAChAAAAAAAAAAYAAABPVVRQVVShAAAAAAAAAKIAAAAAAAAAAAAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAAAAAAAAACmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQAAAAAAAACpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALEAAAAAAAAAAAAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAACzAAAAAAAAALQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALQAAAAAAAAAtQAAAAAAAAAAAAAAtQAAAAAAAAC2AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALYAAAAAAAAAtwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgAAAAAAAAC2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"left_delete",
					null,
					"AQAAAL0AAAAAAAAAvQAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAvgAAAAAAAAC+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAL0AAAAAAAAAvgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQAAAAAAAAC9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					3,
					"left_delete",
					null,
					"AwAAAMcAAAAAAAAAxwAAAAAAAAABAAAAMcYAAAAAAAAAxgAAAAAAAAABAAAAIMUAAAAAAAAAxQAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAyAAAAAAAAADIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAAMcAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADJAAAAAAAAAAAAAADJAAAAAAAAAMoAAAAAAAAAAAAAAMoAAAAAAAAAywAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAAM0AAAAAAAAAAAAAAM0AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAADPAAAAAAAAAAAAAADPAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAANMAAAAAAAAA1AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwAAAAAAAADHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANQAAAAAAAAA1gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAANUAAAAAAAAA1wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "Pin"
					},
					"AwAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gAAAAAAAADWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": " #1"
					},
					"AwAAANkAAAAAAAAA2gAAAAAAAAAAAAAA2gAAAAAAAADbAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QAAAAAAAADZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " value:"
					},
					"BwAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": ",value"
					},
					"BgAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wAAAAAAAADrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"paste",
					null,
					"AQAAAFIAAAAAAAAAdwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "gpiop"
					},
					"BgAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABhAAAAAAAAAA0AAABQaW4gIzEgdmFsdWU6YQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAAGQAAAAAAAAAZAAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAZQAAAAAAAABlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": ".initPin"
					},
					"CAAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABmAAAAAAAAAAAAAABmAAAAAAAAAGcAAAAAAAAAAAAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABpAAAAAAAAAAAAAABpAAAAAAAAAGoAAAAAAAAAAAAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"paste",
					null,
					"AgAAAG4AAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB6AAAAAAAAAAUAAAB2YWx1ZQ",
					"AQAAAAAAAAABAAAAbgAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADYAQAAaW1wb3J0IHsgR1BJTyB9IGZyb20gJ2dwaW8nOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgY29uc3QgZ3BpbyA9IG5ldyBHUElPKCk7CiBjb25zb2xlLmxvZygnZ3Bpby5pbml0UGluJyxncGlvLmluaXRQaW4pOwoKICBncGlvLmluaXRQaW4oMCwgR1BJTy5PVVRQVVQpOwogIGdwaW8uc2V0UGluKDAsIDEpOwoKICBncGlvLmluaXRQaW4oMSwgR1BJTy5JTlBVVCk7CiBjb25zdCB2YWx1ZSA9ICBncGlvLmdldFBpbigxKTsKIGNvbnNvbGUubG9nKCdQaW4gIzEgdmFsdWU6Jyx2YWx1ZSk7Cn0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIGNvbnNvbGUubG9nKGVycm9yKTsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvci5tZXNzYWdlfVxuJHtlcnJvci5zdGFja31gKTsKICBzdGQuZXhpdCgxKTsKfSBmaW5hbGx5IHsKICBjb25zb2xlLmxvZygnU1VDQ0VTUycpOwp9CgAAAAAAAAAA3AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADcAQAAaW1wb3J0IHsgR1BJTyB9IGZyb20gJ2dwaW8nOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgY29uc3QgZ3BpbyA9IG5ldyBHUElPKCk7CiAgY29uc29sZS5sb2coJ2dwaW8uaW5pdFBpbicsIGdwaW8uaW5pdFBpbik7CgogIGdwaW8uaW5pdFBpbigwLCBHUElPLk9VVFBVVCk7CiAgZ3Bpby5zZXRQaW4oMCwgMSk7CgogIGdwaW8uaW5pdFBpbigxLCBHUElPLklOUFVUKTsKICBjb25zdCB2YWx1ZSA9IGdwaW8uZ2V0UGluKDEpOwogIGNvbnNvbGUubG9nKCdQaW4gIzEgdmFsdWU6JywgdmFsdWUpOwp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhlcnJvcik7CiAgY29uc29sZS5sb2coYEZBSUw6ICR7ZXJyb3IubWVzc2FnZX1cbiR7ZXJyb3Iuc3RhY2t9YCk7CiAgc3RkLmV4aXQoMSk7Cn0gZmluYWxseSB7CiAgY29uc29sZS5sb2coJ1NVQ0NFU1MnKTsKfQoAAAAAAAAAAN0CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 9056,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": " gpio"
					},
					"BQAAAOkBAAAAAAAA6gEAAAAAAAAAAAAA6gEAAAAAAADrAQAAAAAAAAAAAADrAQAAAAAAAOwBAAAAAAAAAAAAAOwBAAAAAAAA7QEAAAAAAAAAAAAA7QEAAAAAAADuAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAQAAAAAAAOkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"cut",
					null,
					"AQAAAJgHAAAAAAAAmAcAAAAAAABeAAAAc2V0KG1pc2NfU09VUkNFUyBiYXNlNjQuYyBiYXNlNjQuaCBxdWlja2pzLWludGVybmFsLmMgcXVpY2tqcy1pbnRlcm5hbC5oICR7TE9DQVRJT05fU09VUkNFU30pCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2BwAAAAAAAJgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					2,
					"paste",
					null,
					"AgAAAJgHAAAAAAAA9gcAAAAAAAAAAAAA9gcAAAAAAABUCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYBwAAAAAAAJgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "gpio"
					},
					"BQAAAPoHAAAAAAAA+wcAAAAAAAAAAAAA+wcAAAAAAAD7BwAAAAAAAAQAAABtaXNj+wcAAAAAAAD8BwAAAAAAAAAAAAD8BwAAAAAAAP0HAAAAAAAAAAAAAP0HAAAAAAAA/gcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+BwAAAAAAAPoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "gpio.c"
					},
					"BgAAAAcIAAAAAAAACAgAAAAAAAAAAAAACAgAAAAAAAAJCAAAAAAAAAAAAAAJCAAAAAAAAAoIAAAAAAAAAAAAAAoIAAAAAAAACwgAAAAAAAAAAAAACwgAAAAAAAAMCAAAAAAAAAAAAAAMCAAAAAAAAA0IAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHCAAAAAAAAAcIAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " gpio.h)"
					},
					"CAAAAA0IAAAAAAAADggAAAAAAAAAAAAADggAAAAAAAAPCAAAAAAAAAAAAAAPCAAAAAAAABAIAAAAAAAAAAAAABAIAAAAAAAAEQgAAAAAAAAAAAAAEQgAAAAAAAASCAAAAAAAAAAAAAASCAAAAAAAABMIAAAAAAAAAAAAABMIAAAAAAAAFAgAAAAAAAAAAAAAFAgAAAAAAAAVCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANCAAAAAAAAA0IAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAABUIAAAAAAAAFQgAAAAAAABMAAAAYmFzZTY0LmMgYmFzZTY0LmggcXVpY2tqcy1pbnRlcm5hbC5jIHF1aWNranMtaW50ZXJuYWwuaCAke0xPQ0FUSU9OX1NPVVJDRVN9KQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVCAAAAAAAAGEIAAAAAAAA////////738"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAFQgAAAAAAAAVCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAFQgAAAAAAAAVCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAFQgAAAAAAAAVCAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"cut",
					null,
					"AQAAAPAAAAAAAAAA8AAAAAAAAAA9AAAAaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvRmluZFF1aWNrSlMuY21ha2UpCg",
					"AQAAAAAAAAABAAAA8AAAAAAAAAAtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					2,
					"paste",
					null,
					"AgAAAPAAAAAAAAAALQEAAAAAAAAAAAAALQEAAAAAAABqAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "Pid"
					},
					"BAAAAFsBAAAAAAAAXAEAAAAAAAAAAAAAXAEAAAAAAABcAQAAAAAAAAcAAABRdWlja0pTXAEAAAAAAABdAQAAAAAAAAAAAABdAQAAAAAAAF4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwEAAAAAAABiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"left_delete",
					null,
					"AQAAAF0BAAAAAAAAXQEAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAXgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAF0BAAAAAAAAXgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQEAAAAAAABdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					3,
					"left_delete",
					null,
					"AwAAAF0BAAAAAAAAXQEAAAAAAAABAAAAZ1wBAAAAAAAAXAEAAAAAAAABAAAAaVsBAAAAAAAAWwEAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAXgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "pidg"
					},
					"BAAAAFsBAAAAAAAAXAEAAAAAAAAAAAAAXAEAAAAAAABdAQAAAAAAAAAAAABdAQAAAAAAAF4BAAAAAAAAAAAAAF4BAAAAAAAAXwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwEAAAAAAABbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					2,
					"left_delete",
					null,
					"AgAAAF4BAAAAAAAAXgEAAAAAAAABAAAAZ10BAAAAAAAAXQEAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAXwEAAAAAAABfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "gpio"
					},
					"BAAAAF0BAAAAAAAAXgEAAAAAAAAAAAAAXgEAAAAAAABfAQAAAAAAAAAAAABfAQAAAAAAAGABAAAAAAAAAAAAAGABAAAAAAAAYQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQEAAAAAAABdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"cut",
					null,
					"AQAAAGEIAAAAAAAAYQgAAAAAAAAgAAAAc2V0KGdwaW9fU09VUkNFUyBncGlvLmMgZ3Bpby5oKQo",
					"AQAAAAAAAAABAAAAYQgAAAAAAACBCAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"paste",
					null,
					"AgAAAGEIAAAAAAAAgQgAAAAAAAAAAAAAgQgAAAAAAAChCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQgAAAAAAABhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "LIBRARIES"
					},
					"CgAAAIoIAAAAAAAAiwgAAAAAAAAAAAAAiwgAAAAAAACLCAAAAAAAABUAAABTT1VSQ0VTIGdwaW8uYyBncGlvLmiLCAAAAAAAAIwIAAAAAAAAAAAAAIwIAAAAAAAAjQgAAAAAAAAAAAAAjQgAAAAAAACOCAAAAAAAAAAAAACOCAAAAAAAAI8IAAAAAAAAAAAAAI8IAAAAAAAAkAgAAAAAAAAAAAAAkAgAAAAAAACRCAAAAAAAAAAAAACRCAAAAAAAAJIIAAAAAAAAAAAAAJIIAAAAAAAAkwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiggAAAAAAACfCAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJMIAAAAAAAAlAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwgAAAAAAACTCAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAAJQIAAAAAAAAlQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAgAAAAAAACUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJUIAAAAAAAAlwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQgAAAAAAACVCAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"paste",
					null,
					"AQAAAJYIAAAAAAAApAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlggAAAAAAACWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\nf"
					},
					"AgAAAIAIAAAAAAAAgQgAAAAAAAAAAAAAgQgAAAAAAACCCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAgAAAAAAACACAAAAAAAAAAAAAAAgHJA"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAAIEIAAAAAAAAgQgAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAgggAAAAAAACCCAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAIEIAAAAAAAAgggAAAAAAAAAAAAAgggAAAAAAACDCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQgAAAAAAACBCAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIMIAAAAAAAAhQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwgAAAAAAACDCAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"paste",
					null,
					"AQAAAIQIAAAAAAAAkggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAgAAAAAAACECAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "endif"
					},
					"BQAAALoIAAAAAAAAuwgAAAAAAAAAAAAAuwgAAAAAAAC8CAAAAAAAAAAAAAC8CAAAAAAAAL0IAAAAAAAAAAAAAL0IAAAAAAAAvggAAAAAAAAAAAAAvggAAAAAAAC/CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuggAAAAAAAC6CAAAAAAAAAAAAAAAAGJA"
				],
				[
					46,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAL8IAAAAAAAAwQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwgAAAAAAAC/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"paste",
					null,
					"AQAAAMAIAAAAAAAAzggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAgAAAAAAADACAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAJQIAAAAAAAAlggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAgAAAAAAACUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"AgAAANIIAAAAAAAA0wgAAAAAAAAAAAAA0wgAAAAAAADVCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0ggAAAAAAADSCAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"left_delete",
					null,
					"AQAAANMIAAAAAAAA0wgAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA1QgAAAAAAADVCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "pigpio/pigpio.h",
			"settings":
			{
				"buffer_size": 157578,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "pigpio/pigpiod_if2.h",
			"settings":
			{
				"buffer_size": 110052,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/fs.js",
			"settings":
			{
				"buffer_size": 10842,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "Sync"
					},
					"BAAAABcPAAAAAAAAGA8AAAAAAAAAAAAAGA8AAAAAAAAZDwAAAAAAAAAAAAAZDwAAAAAAABoPAAAAAAAAAAAAABoPAAAAAAAAGw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFw8AAAAAAAAXDwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "Sync"
					},
					"BAAAAOcGAAAAAAAA6AYAAAAAAAAAAAAA6AYAAAAAAADpBgAAAAAAAAAAAADpBgAAAAAAAOoGAAAAAAAAAAAAAOoGAAAAAAAA6wYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wYAAAAAAADnBgAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAeRAAAAAAAAB5EAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/console.js",
			"settings":
			{
				"buffer_size": 3440,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					21,
					1,
					"insert",
					{
						"characters": "function"
					},
					"CQAAALUMAAAAAAAAtgwAAAAAAAAAAAAAtgwAAAAAAAC2DAAAAAAAAAcAAABDb25zb2xltgwAAAAAAAC3DAAAAAAAAAAAAAC3DAAAAAAAALgMAAAAAAAAAAAAALgMAAAAAAAAuQwAAAAAAAAAAAAAuQwAAAAAAAC6DAAAAAAAAAAAAAC6DAAAAAAAALsMAAAAAAAAAAAAALsMAAAAAAAAvAwAAAAAAAAAAAAAvAwAAAAAAAC9DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQwAAAAAAAC8DAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " ConsoleSetup"
					},
					"DQAAAL0MAAAAAAAAvgwAAAAAAAAAAAAAvgwAAAAAAAC/DAAAAAAAAAAAAAC/DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAwQwAAAAAAAAAAAAAwQwAAAAAAADCDAAAAAAAAAAAAADCDAAAAAAAAMMMAAAAAAAAAAAAAMMMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADFDAAAAAAAAAAAAADFDAAAAAAAAMYMAAAAAAAAAAAAAMYMAAAAAAAAxwwAAAAAAAAAAAAAxwwAAAAAAADIDAAAAAAAAAAAAADIDAAAAAAAAMkMAAAAAAAAAAAAAMkMAAAAAAAAygwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQwAAAAAAAC9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMoMAAAAAAAAzAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygwAAAAAAADKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "options"
					},
					"BwAAAMsMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADNDAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANEMAAAAAAAAAAAAANEMAAAAAAAA0gwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywwAAAAAAADLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANMMAAAAAAAA1AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wwAAAAAAADTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					2,
					"left_delete",
					null,
					"AgAAANMMAAAAAAAA0wwAAAAAAAABAAAAINIMAAAAAAAA0gwAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA1AwAAAAAAADUDAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAANIMAAAAAAAA0wwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gwAAAAAAADSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " {})"
					},
					"BAAAANMMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADVDAAAAAAAAAAAAADVDAAAAAAAANYMAAAAAAAAAAAAANYMAAAAAAAA1wwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wwAAAAAAADTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAANcMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADZDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wwAAAAAAADXDAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANkMAAAAAAAA2gwAAAAAAAAAAAAA2gwAAAAAAADcDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QwAAAAAAADZDAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "callback"
					},
					"CQAAAMsMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADMDAAAAAAAAAcAAABvcHRpb25zzAwAAAAAAADNDAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANEMAAAAAAAAAAAAANEMAAAAAAAA0gwAAAAAAAAAAAAA0gwAAAAAAADTDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywwAAAAAAADSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANMMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADVDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wwAAAAAAADTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " ()"
					},
					"AwAAANUMAAAAAAAA1gwAAAAAAAAAAAAA1gwAAAAAAADXDAAAAAAAAAAAAADXDAAAAAAAANgMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QwAAAAAAADVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANgMAAAAAAAA2QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AwAAAAAAADYDAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					3,
					"left_delete",
					null,
					"AwAAANgMAAAAAAAA2AwAAAAAAAABAAAAINcMAAAAAAAA1wwAAAAAAAABAAAAKdYMAAAAAAAA1gwAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAA2QwAAAAAAADZDAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAANYMAAAAAAAA1wwAAAAAAAAAAAAA1wwAAAAAAADYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gwAAAAAAADWDAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAANgMAAAAAAAA2QwAAAAAAAAAAAAA2QwAAAAAAADaDAAAAAAAAAAAAADaDAAAAAAAANsMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AwAAAAAAADYDAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsMAAAAAAAA3AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wwAAAAAAADbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					2,
					"right_delete",
					null,
					"AgAAANwMAAAAAAAA3AwAAAAAAAABAAAAPdwMAAAAAAAA3AwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3AwAAAAAAADcDAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"left_delete",
					null,
					"AQAAAOQMAAAAAAAA5AwAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA5QwAAAAAAADlDAAAAAAAAAAAAAAAAHxA"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAOQMAAAAAAAA5QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AwAAAAAAADkDAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\n\nglobalThis.conso"
					},
					"FQAAAOEMAAAAAAAA4gwAAAAAAAAAAAAA4gwAAAAAAADkDAAAAAAAAAAAAADkDAAAAAAAAOUMAAAAAAAAAAAAAOUMAAAAAAAA5wwAAAAAAAAAAAAA4gwAAAAAAADiDAAAAAAAAAIAAAAgIOUMAAAAAAAA5gwAAAAAAAAAAAAA5gwAAAAAAADnDAAAAAAAAAAAAADnDAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA6QwAAAAAAAAAAAAA6QwAAAAAAADqDAAAAAAAAAAAAADqDAAAAAAAAOsMAAAAAAAAAAAAAOsMAAAAAAAA7AwAAAAAAAAAAAAA7AwAAAAAAADtDAAAAAAAAAAAAADtDAAAAAAAAO4MAAAAAAAAAAAAAO4MAAAAAAAA7wwAAAAAAAAAAAAA7wwAAAAAAADwDAAAAAAAAAAAAADwDAAAAAAAAPEMAAAAAAAAAAAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA8gwAAAAAAADzDAAAAAAAAAAAAADzDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA9QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QwAAAAAAADhDAAAAAAAAP///////+9/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "le"
					},
					"AgAAAPUMAAAAAAAA9gwAAAAAAAAAAAAA9gwAAAAAAAD3DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QwAAAAAAAD1DAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAPcMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD5DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wwAAAAAAAD3DAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAAPgMAAAAAAAA+AwAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA+QwAAAAAAAD5DAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAPgMAAAAAAAA+QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AwAAAAAAAD4DAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAPkMAAAAAAAA+gwAAAAAAAAAAAAA+gwAAAAAAAD7DAAAAAAAAAAAAAD7DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAAA/QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QwAAAAAAAD5DAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " Console"
					},
					"CAAAAP0MAAAAAAAA/gwAAAAAAAAAAAAA/gwAAAAAAAD/DAAAAAAAAAAAAAD/DAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAQ0AAAAAAAAAAAAAAQ0AAAAAAAACDQAAAAAAAAAAAAACDQAAAAAAAAMNAAAAAAAAAAAAAAMNAAAAAAAABA0AAAAAAAAAAAAABA0AAAAAAAAFDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QwAAAAAAAD9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "optiosn,"
					},
					"CAAAAMsMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADNDAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANEMAAAAAAAAAAAAANEMAAAAAAAA0gwAAAAAAAAAAAAA0gwAAAAAAADTDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywwAAAAAAADLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANMMAAAAAAAA1AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wwAAAAAAADTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					4,
					"left_delete",
					null,
					"BAAAANMMAAAAAAAA0wwAAAAAAAABAAAAINIMAAAAAAAA0gwAAAAAAAABAAAALNEMAAAAAAAA0QwAAAAAAAABAAAAbtAMAAAAAAAA0AwAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA1AwAAAAAAADUDAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "ns={},"
					},
					"BgAAANAMAAAAAAAA0QwAAAAAAAAAAAAA0QwAAAAAAADSDAAAAAAAAAAAAADSDAAAAAAAANMMAAAAAAAAAAAAANMMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADVDAAAAAAAAAAAAADVDAAAAAAAANYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AwAAAAAAADQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYMAAAAAAAA1wwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gwAAAAAAADWDAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABENAAAAAAAAEw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQ0AAAAAAAARDQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABINAAAAAAAAFA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEg0AAAAAAAASDQAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " inspect"
					},
					"CAAAABMNAAAAAAAAFA0AAAAAAAAAAAAAFA0AAAAAAAAVDQAAAAAAAAAAAAAVDQAAAAAAABYNAAAAAAAAAAAAABYNAAAAAAAAFw0AAAAAAAAAAAAAFw0AAAAAAAAYDQAAAAAAAAAAAAAYDQAAAAAAABkNAAAAAAAAAAAAABkNAAAAAAAAGg0AAAAAAAAAAAAAGg0AAAAAAAAbDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEw0AAAAAAAATDQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert_completion",
					{
						"completion": "inspectOptions",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "inspectOptions"
					},
					"AgAAABQNAAAAAAAAFA0AAAAAAAAHAAAAaW5zcGVjdBQNAAAAAAAAIg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGw0AAAAAAAAbDQAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAACINAAAAAAAAIw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIg0AAAAAAAAiDQAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " options"
					},
					"CAAAACMNAAAAAAAAJA0AAAAAAAAAAAAAJA0AAAAAAAAlDQAAAAAAAAAAAAAlDQAAAAAAACYNAAAAAAAAAAAAACYNAAAAAAAAJw0AAAAAAAAAAAAAJw0AAAAAAAAoDQAAAAAAAAAAAAAoDQAAAAAAACkNAAAAAAAAAAAAACkNAAAAAAAAKg0AAAAAAAAAAAAAKg0AAAAAAAArDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIw0AAAAAAAAjDQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACsNAAAAAAAALA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKw0AAAAAAAArDQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"paste",
					null,
					"AgAAAMsMAAAAAAAA2QwAAAAAAAAAAAAA2QwAAAAAAADZDAAAAAAAAAcAAABvcHRpb25z",
					"AQAAAAAAAAABAAAAywwAAAAAAADSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					3,
					"left_delete",
					null,
					"AwAAACsNAAAAAAAAKw0AAAAAAAAHAAAAb3B0aW9ucyoNAAAAAAAAKg0AAAAAAAABAAAAICkNAAAAAAAAKQ0AAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAMg0AAAAAAAArDQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACwNAAAAAAAALQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA0AAAAAAAAsDQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC0NAAAAAAAALg0AAAAAAAAAAAAALg0AAAAAAAAwDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQ0AAAAAAAAtDQAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AgAAAPQMAAAAAAAA9AwAAAAAAAABAAAACi0NAAAAAAAALQ0AAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA9QwAAAAAAAD1DAAAAAAAAAAAAAAAADBA"
				],
				[
					112,
					1,
					"cut",
					null,
					"AQAAAOcMAAAAAAAA5wwAAAAAAAAKAAAAPSAoKSA9PiB7fQ",
					"AQAAAAAAAAABAAAA5wwAAAAAAADxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAACMNAAAAAAAAJA0AAAAAAAAAAAAAJA0AAAAAAAAlDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIw0AAAAAAAAjDQAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACUNAAAAAAAAJw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQ0AAAAAAAAlDQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "callback"
					},
					"CAAAACYNAAAAAAAAJw0AAAAAAAAAAAAAJw0AAAAAAAAoDQAAAAAAAAAAAAAoDQAAAAAAACkNAAAAAAAAAAAAACkNAAAAAAAAKg0AAAAAAAAAAAAAKg0AAAAAAAArDQAAAAAAAAAAAAArDQAAAAAAACwNAAAAAAAAAAAAACwNAAAAAAAALQ0AAAAAAAAAAAAALQ0AAAAAAAAuDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJg0AAAAAAAAmDQAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "\ncallback"
					},
					"CgAAAC8NAAAAAAAAMA0AAAAAAAAAAAAAMA0AAAAAAAAyDQAAAAAAAAAAAAAyDQAAAAAAADMNAAAAAAAAAAAAADMNAAAAAAAANA0AAAAAAAAAAAAANA0AAAAAAAA1DQAAAAAAAAAAAAA1DQAAAAAAADYNAAAAAAAAAAAAADYNAAAAAAAANw0AAAAAAAAAAAAANw0AAAAAAAA4DQAAAAAAAAAAAAA4DQAAAAAAADkNAAAAAAAAAAAAADkNAAAAAAAAOg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALw0AAAAAAAAvDQAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADoNAAAAAAAAPA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOg0AAAAAAAA6DQAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "globalThis.console"
					},
					"EgAAADsNAAAAAAAAPA0AAAAAAAAAAAAAPA0AAAAAAAA9DQAAAAAAAAAAAAA9DQAAAAAAAD4NAAAAAAAAAAAAAD4NAAAAAAAAPw0AAAAAAAAAAAAAPw0AAAAAAABADQAAAAAAAAAAAABADQAAAAAAAEENAAAAAAAAAAAAAEENAAAAAAAAQg0AAAAAAAAAAAAAQg0AAAAAAABDDQAAAAAAAAAAAABDDQAAAAAAAEQNAAAAAAAAAAAAAEQNAAAAAAAARQ0AAAAAAAAAAAAARQ0AAAAAAABGDQAAAAAAAAAAAABGDQAAAAAAAEcNAAAAAAAAAAAAAEcNAAAAAAAASA0AAAAAAAAAAAAASA0AAAAAAABJDQAAAAAAAAAAAABJDQAAAAAAAEoNAAAAAAAAAAAAAEoNAAAAAAAASw0AAAAAAAAAAAAASw0AAAAAAABMDQAAAAAAAAAAAABMDQAAAAAAAE0NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOw0AAAAAAAA7DQAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAE4NAAAAAAAATw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATg0AAAAAAABODQAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAE8NAAAAAAAAUA0AAAAAAAAAAAAAUA0AAAAAAABSDQAAAAAAAAAAAABQDQAAAAAAAFANAAAAAAAAAgAAACAgUA0AAAAAAABQDQAAAAAAAAAAAABQDQAAAAAAAFENAAAAAAAAAAAAAFENAAAAAAAAUg0AAAAAAAAAAAAAUg0AAAAAAABTDQAAAAAAAAAAAABTDQAAAAAAAFQNAAAAAAAAAAAAAFQNAAAAAAAAVQ0AAAAAAAAAAAAAVQ0AAAAAAABWDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATw0AAAAAAABPDQAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " gloalT"
					},
					"BwAAAFYNAAAAAAAAVw0AAAAAAAAAAAAAVw0AAAAAAABYDQAAAAAAAAAAAABYDQAAAAAAAFkNAAAAAAAAAAAAAFkNAAAAAAAAWg0AAAAAAAAAAAAAWg0AAAAAAABbDQAAAAAAAAAAAABbDQAAAAAAAFwNAAAAAAAAAAAAAFwNAAAAAAAAXQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVg0AAAAAAABWDQAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					3,
					"left_delete",
					null,
					"AwAAAFwNAAAAAAAAXA0AAAAAAAABAAAAVFsNAAAAAAAAWw0AAAAAAAABAAAAbFoNAAAAAAAAWg0AAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAXQ0AAAAAAABdDQAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "balThis.consol"
					},
					"DgAAAFoNAAAAAAAAWw0AAAAAAAAAAAAAWw0AAAAAAABcDQAAAAAAAAAAAABcDQAAAAAAAF0NAAAAAAAAAAAAAF0NAAAAAAAAXg0AAAAAAAAAAAAAXg0AAAAAAABfDQAAAAAAAAAAAABfDQAAAAAAAGANAAAAAAAAAAAAAGANAAAAAAAAYQ0AAAAAAAAAAAAAYQ0AAAAAAABiDQAAAAAAAAAAAABiDQAAAAAAAGMNAAAAAAAAAAAAAGMNAAAAAAAAZA0AAAAAAAAAAAAAZA0AAAAAAABlDQAAAAAAAAAAAABlDQAAAAAAAGYNAAAAAAAAAAAAAGYNAAAAAAAAZw0AAAAAAAAAAAAAZw0AAAAAAABoDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWg0AAAAAAABaDQAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "e;"
					},
					"AgAAAGgNAAAAAAAAaQ0AAAAAAAAAAAAAaQ0AAAAAAABqDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaA0AAAAAAABoDQAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"left_delete",
					null,
					"AQAAAG4NAAAAAAAAbg0AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAbw0AAAAAAABvDQAAAAAAAAAAAAAAAAAA"
				],
				[
					136,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABuDQAAaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnOwppbXBvcnQgKiBhcyBzdGQgZnJvbSAnc3RkJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CgpleHBvcnQgZnVuY3Rpb24gQ29uc29sZShvcHRzID0ge30pIHsKICBsZXQgZW52ID0gc3RkLmdldGVudmlyb24oKTsKICBsZXQgc3RkaW9GZHMgPSBbc3RkLm91dCwgc3RkLmVyciwgc3RkLmluXS5tYXAoZiA9PiBmLmZpbGVubygpKTsKICBsZXQgdGVybUZkID0gc3RkaW9GZHMuZmluZChmZCA9PiBvcy5pc2F0dHkoZmQpKTsKICBpZih0eXBlb2YgdGVybUZkICE9ICdudW1iZXInKSB0ZXJtRmQgPSAxOwoKICBjb25zdCBjb25zb2xlV2lkdGggPSAoZmQgPSB0ZXJtRmQpID0+IHsKICAgIGxldCBzaXplOwogICAgdHJ5IHsKICAgICAgc2l6ZSA9IG9zLnR0eUdldFdpblNpemUoZmQpOwogICAgfSBjYXRjaChlcnIpIHt9CiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShzaXplKSA/IHNpemVbMF0gOiB1bmRlZmluZWQ7CiAgfTsKCiAgY29uc3QgaXNUZXJtaW5hbCA9IG9zLmlzYXR0eSh0ZXJtRmQpOwoKICBjb25zdCBkZWZhdWx0QnJlYWtMZW5ndGggPSAoaXNUZXJtaW5hbCAmJiBjb25zb2xlV2lkdGgoKSkgfHwgZW52LkNPTFVNTlMgfHwgSW5maW5pdHk7CiAgY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7CiAgICBkZXB0aDogMiwKICAgIGNvbG9yczogaXNUZXJtaW5hbCwKICAgIHN0cmluZ0JyZWFrTmV3bGluZTogZmFsc2UsCiAgICBtYXhBcnJheUxlbmd0aDogSW5maW5pdHksCiAgICBjb21wYWN0OiBmYWxzZSwKICAgIGN1c3RvbUluc3BlY3Q6IHRydWUKICB9OwogIGxldCBvcHRpb25zID0gewogICAgLi4uZGVmYXVsdE9wdGlvbnMsCiAgICAuLi4ob3B0cy5pbnNwZWN0T3B0aW9ucyA/PyB7fSkKICB9OwoKICBvcHRpb25zLmJyZWFrTGVuZ3RoID8/PSBkZWZhdWx0QnJlYWtMZW5ndGg7CgogIGxldCBjID0gZ2xvYmFsVGhpcy5jb25zb2xlOwoKICBsZXQgbG9nID0gYy5sb2c7CgogIGxldCBuZXdjb25zID0gT2JqZWN0LmNyZWF0ZShDb25zb2xlLnByb3RvdHlwZSk7CgogIGlmKGdsb2JhbFRoaXMuaW5zcGVjdCAhPT0gaW5zcGVjdCkgZ2xvYmFsVGhpcy5pbnNwZWN0ID0gaW5zcGVjdDsKCiAgaWYoIWdsb2JhbFRoaXMuaW5zcGVjdCkgZ2xvYmFsVGhpcy5pbnNwZWN0ID0gYXJnID0+IGFyZzsKCiAgY29uc3Qgb3V0cHV0RnVuY3Rpb24gPQogICAgb3V0ID0+CiAgICAoLi4uYXJncykgPT4KICAgICAgb3V0LnB1dHMoYXJncy5qb2luKCcgJykgKyAnXG4nKTsKCiAgY29uc3QgaW5zcGVjdEZ1bmN0aW9uID0gKC4uLmFyZ3MpID0+IHsKICAgIGxldCBbb2JqLCBvcHRzXSA9IGFyZ3M7CiAgICBpZihhcmdzLmxlbmd0aCA9PSAwKSBvYmogPSBuZXdjb25zOwogICAgcmV0dXJuIGluc3BlY3Qob2JqLCBDb25zb2xlT3B0aW9ucy5tZXJnZShuZXdjb25zLm9wdGlvbnMsIG9wdHMpKTsKICB9OwoKICBjb25zdCBsb2dGdW5jdGlvbiA9IG91dHB1dCA9PgogICAgZnVuY3Rpb24oLi4uYXJncykgewogICAgICBsZXQgdGVtcE9wdHMgPSBuZXcgQ29uc29sZU9wdGlvbnMobmV3Y29ucy5vcHRpb25zKTsKICAgICAgbGV0IGFjYyA9IHRlbXBPcHRzLnByZWZpeCA/IFt0ZW1wT3B0cy5wcmVmaXhdIDogW107CiAgICAgIGxldCBpID0gMDsKCiAgICAgIGZvcihsZXQgYXJnIG9mIGFyZ3MpIHsKICAgICAgICB0cnkgewogICAgICAgICAgaWYodHlwZW9mIGFyZyA9PSAnb2JqZWN0JykgewogICAgICAgICAgICBpZihhcmcgPT0gbnVsbCkgewogICAgICAgICAgICAgIGFjYy5wdXNoKCdudWxsJyk7CiAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0gZWxzZSBpZihhcmcubWVyZ2UgPT09IENvbnNvbGVPcHRpb25zLnByb3RvdHlwZS5tZXJnZSkgewogICAgICAgICAgICAgIHRlbXBPcHRzLm1lcmdlKGFyZyk7CiAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGlmKGkrKyA+PSAwKSB7CiAgICAgICAgICAgIGFjYy5wdXNoKHR5cGVvZiBhcmcgPT0gJ3N0cmluZycgPyBhcmcgOiBpbnNwZWN0RnVuY3Rpb24oYXJnLCB0ZW1wT3B0cykpOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgIH0KICAgICAgICAgIGFjYy5wdXNoKGFyZyk7CiAgICAgICAgfSBjYXRjaChlcnJvcikgewogICAgICAgICAgb3V0cHV0KCdlcnJvcjonLCBlcnJvcik7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gb3V0cHV0KC4uLmFjYyk7CiAgICB9OwoKICBuZXdjb25zLm9wdGlvbnMgPSBvcHRpb25zOwoKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXdjb25zOwoKICByZXR1cm4gYWRkTWlzc2luZ01ldGhvZHMobmV3Y29ucyk7CgogIGZ1bmN0aW9uIGFkZE1pc3NpbmdNZXRob2RzKGNvbnMpIHsKICAgIGxldCBmbnMgPSB7fTsKCiAgICBmb3IobGV0IFttZXRob2QsIG91dHB1dF0gb2YgWwogICAgICBbJ2xvZycsIHN0ZC5vdXRdLAogICAgICBbJ2luZm8nLCBzdGQub3V0XSwKICAgICAgWydlcnJvcicsIHN0ZC5lcnJdLAogICAgICBbJ3dhcm4nLCBzdGQuZXJyXSwKICAgICAgWydkZWJ1ZycsIHN0ZC5vdXRdCiAgICBdKSB7CiAgICAgIGlmKGNvbnNbbWV0aG9kXSA9PT0gdW5kZWZpbmVkKSBmbnNbbWV0aG9kXSA9IGxvZ0Z1bmN0aW9uKG91dHB1dEZ1bmN0aW9uKG91dHB1dCkpOwogICAgfQogICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oY29ucywgZm5zKTsKICB9Cn0KCkNvbnNvbGUucHJvdG90eXBlLmNvbmZpZyA9IGZ1bmN0aW9uIGNvbmZpZyhvYmogPSB7fSkgewogIHJldHVybiBuZXcgQ29uc29sZU9wdGlvbnMob2JqKTsKfTsKCmZ1bmN0aW9uIENvbnNvbGVPcHRpb25zKG9iaiA9IHt9KSB7CiAgbGV0IHsgbXVsdGlsaW5lID0gdHJ1ZSwgLi4ucmVzdCB9ID0gb2JqOwoKICBpZihtdWx0aWxpbmUgPT0gZmFsc2UpIHsKICAgIHJlc3QuYnJlYWtMZW5ndGggPSBJbmZpbml0eTsKICAgIHJlc3Quc3RyaW5nQnJlYWtOZXdsaW5lID0gZmFsc2U7CiAgfQogIE9iamVjdC5hc3NpZ24odGhpcywgcmVzdCk7Cn0KQ29uc29sZU9wdGlvbnMucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oLi4uYXJncykgewogIHJldHVybiBPYmplY3QuYXNzaWduKHRoaXMsIC4uLmFyZ3MpOwp9OwpDb25zb2xlT3B0aW9ucy5tZXJnZSA9IGZ1bmN0aW9uKG9wdHMsIC4uLmFyZ3MpIHsKICByZXR1cm4gbmV3IENvbnNvbGVPcHRpb25zKG9wdHMpLm1lcmdlKC4uLmFyZ3MpOwp9OwoKZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoKTsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvbnNvbGVTZXR1cChpbnNwZWN0T3B0aW9ucz17fSwgY2FsbGJhY2sgKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoeyBpbnNwZWN0T3B0aW9ucyB9KTsKaWYoY2FsbGJhY2spCiAgY2FsbGJhY2soZ2xvYmFsVGhpcy5jb25zb2xlKTsKcmV0dXJuIGdsb2JhbFRoaXMuY29uc29sZTsKICB9AAAAAAAAAABwDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QoAAAAAAADlCgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "qjsm.c",
			"settings":
			{
				"buffer_size": 40148,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					188,
					1,
					"insert",
					{
						"characters": "module_name"
					},
					"CwAAAP83AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAI4AAAAAAAAAAAAAAI4AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAAEOAAAAAAAAAAAAAAEOAAAAAAAAAU4AAAAAAAAAAAAAAU4AAAAAAAABjgAAAAAAAAAAAAABjgAAAAAAAAHOAAAAAAAAAAAAAAHOAAAAAAAAAg4AAAAAAAAAAAAAAg4AAAAAAAACTgAAAAAAAAAAAAACTgAAAAAAAAKOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/zcAAAAAAAD/NwAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAAAo4AAAAAAAACzgAAAAAAAAAAAAACzgAAAAAAAAMOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACjgAAAAAAAAKOAAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAw4AAAAAAAADTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADDgAAAAAAAAMOAAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					12,
					"right_delete",
					null,
					"DAAAABM4AAAAAAAAEzgAAAAAAAABAAAAIBM4AAAAAAAAEzgAAAAAAAABAAAAbRM4AAAAAAAAEzgAAAAAAAABAAAAbxM4AAAAAAAAEzgAAAAAAAABAAAAZBM4AAAAAAAAEzgAAAAAAAABAAAAdRM4AAAAAAAAEzgAAAAAAAABAAAAbBM4AAAAAAAAEzgAAAAAAAABAAAAZRM4AAAAAAAAEzgAAAAAAAABAAAAXxM4AAAAAAAAEzgAAAAAAAABAAAAbhM4AAAAAAAAEzgAAAAAAAABAAAAYRM4AAAAAAAAEzgAAAAAAAABAAAAbRM4AAAAAAAAEzgAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAEzgAAAAAAAATOAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"left_delete",
					null,
					"AQAAABI4AAAAAAAAEjgAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAEzgAAAAAAAATOAAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAEjgAAAAAAAASOAAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": "io"
					},
					"AgAAACo7AAAAAAAAKzsAAAAAAAAAAAAAKzsAAAAAAAAsOwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKjsAAAAAAAAqOwAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					2,
					"left_delete",
					null,
					"AgAAACs7AAAAAAAAKzsAAAAAAAABAAAAbyo7AAAAAAAAKjsAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAALDsAAAAAAAAsOwAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": "if(("
					},
					"BAAAADU7AAAAAAAANjsAAAAAAAAAAAAANjsAAAAAAAA3OwAAAAAAAAAAAAA3OwAAAAAAADg7AAAAAAAAAAAAADg7AAAAAAAAOTsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANTsAAAAAAAA1OwAAAAAAAAAAAAAAAFBA"
				],
				[
					317,
					1,
					"left_delete",
					null,
					"AQAAAGA7AAAAAAAAYDsAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAYTsAAAAAAABhOwAAAAAAAP///////+9/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGA7AAAAAAAAYTsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYDsAAAAAAABgOwAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAGE7AAAAAAAAYjsAAAAAAAAAAAAAYjsAAAAAAABjOwAAAAAAAAAAAABjOwAAAAAAAGQ7AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYTsAAAAAAABhOwAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": " 0)"
					},
					"AwAAAGQ7AAAAAAAAZTsAAAAAAAAAAAAAZTsAAAAAAABmOwAAAAAAAAAAAABmOwAAAAAAAGc7AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZDsAAAAAAABkOwAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					6,
					"left_delete",
					null,
					"BgAAAGY7AAAAAAAAZjsAAAAAAAABAAAAKWU7AAAAAAAAZTsAAAAAAAABAAAAMGQ7AAAAAAAAZDsAAAAAAAABAAAAIGM7AAAAAAAAYzsAAAAAAAABAAAAPWI7AAAAAAAAYjsAAAAAAAABAAAAPWE7AAAAAAAAYTsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAZzsAAAAAAABnOwAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAAGE7AAAAAAAAYjsAAAAAAAAAAAAAYjsAAAAAAABjOwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYTsAAAAAAABhOwAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"left_delete",
					null,
					"AQAAAGI7AAAAAAAAYjsAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAYzsAAAAAAABjOwAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": "\n\nbreak;"
					},
					"DQAAAGI7AAAAAAAAYzsAAAAAAAAAAAAAYzsAAAAAAABrOwAAAAAAAAAAAABjOwAAAAAAAGM7AAAAAAAACAAAACAgICAgICAgYzsAAAAAAABtOwAAAAAAAAAAAABtOwAAAAAAAG47AAAAAAAAAAAAAG47AAAAAAAAeDsAAAAAAAAAAAAAYzsAAAAAAABjOwAAAAAAAAoAAAAgICAgICAgICAgbjsAAAAAAABvOwAAAAAAAAAAAABvOwAAAAAAAHA7AAAAAAAAAAAAAHA7AAAAAAAAcTsAAAAAAAAAAAAAcTsAAAAAAAByOwAAAAAAAAAAAAByOwAAAAAAAHM7AAAAAAAAAAAAAHM7AAAAAAAAdDsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYjsAAAAAAABiOwAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAADw7AAAAAAAAPTsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPDsAAAAAAAA8OwAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"left_delete",
					null,
					"AQAAADw7AAAAAAAAPDsAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAPTsAAAAAAAA9OwAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAADk7AAAAAAAAOjsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOTsAAAAAAAA5OwAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"left_delete",
					null,
					"AQAAADk7AAAAAAAAOTsAAAAAAAABAAAAIQ",
					"AQAAAAAAAAABAAAAOjsAAAAAAAA6OwAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAADg7AAAAAAAAOTsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAODsAAAAAAAA4OwAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAOTsAAAAAAAA5OwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "utils.h",
			"settings":
			{
				"buffer_size": 38732,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA4SsAAAAAAADoKwAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/modules",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/test-archive.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-archive.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.c",
		"/usr/include/archive_entry.h",
		"/usr/include/archive.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry.h",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_acl.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_copy_bhfi.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_copy_stat.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_link_resolver.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_linkify.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_locale.h",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_misc.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_paths.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_perms.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_private.h",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_sparse.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_stat.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_stat.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_strmode.c",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_time.3",
		"/home/roman/Projects/zip-lib/libarchive/libarchive/archive_entry_xattr.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-deep.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Django (Smoothy).tmTheme",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Stark Contrast (rainglow).tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.h",
		"/home/raven/Sources/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/lib/stack.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/cmake/FindQuickJS.cmake",
		"/home/roman/Sources/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/raven/Sources/plot-cv/quickjs/modules/quickjs-xml.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/utils.h",
		"/home/raven/Sources/plot-cv/quickjs/modules/utils.c",
		"/home/raven/Sources/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/build/x86_64-linux-gnu/modules/repl.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_predicate.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_misc.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-path.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/test-minnet.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-repeater.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/lib/core-net/pollfd.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/build/x86_64-linux-gnu/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/READMEs/README.coding.md",
		"/home/roman/Projects/plot-cv/quickjs/modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/stack.js",
		"/home/roman/Sources/opencv/modules/core/include/opencv2/core/mat.inl.hpp",
		"/opt/opencv-4.5.0/include/opencv4/opencv2/core/mat.hpp",
		"/home/roman/.config/sublime-text/Packages/User/Themes/TronLegacy.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_qjsm.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_mmap.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/base64.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lexer.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-lexer.c"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"flushSync",
			"openSync",
			"fopen",
			"readF",
			"\\.so",
			"str_end",
			"debug_mod",
			"flushSync",
			"flush",
			"CONFIG_PREFIX",
			"^(\\s*)fprintf",
			"QUICKJS_PREFIX",
			"struct GPIO",
			"GPIO",
			"GPIO\\*",
			"entry",
			"JS_GetRuntime\\(ctx\\)",
			"JS_GetRuntime",
			"js_class_id",
			"^js_cstring_free",
			"cstring_free",
			"js_propertydescriptor_free",
			"js_get_propertydescriptor",
			"atom_to",
			"js_is_typedarray",
			"js_get_classid",
			"js_is_typedarray",
			"js_is_array",
			"js_get_classid",
			"js_is_typedarray",
			"is_array",
			"is_arraybuffer",
			"js_inspect_init",
			"vector_free",
			"^dbuf_put",
			"put_escaped",
			"^dbuf_put_escaped\\(",
			"dbuf_put_escaped",
			"escape_char_pred",
			"js_object_tostring",
			"js_inspect_arraybuffer",
			"js_value_tostring",
			"value_tostr",
			"_header",
			"header",
			"archive_next",
			"JS_NewString",
			"_close",
			"ARCHIVE_PROP_FILTERS",
			"JS_ThrowTypeError",
			"seek",
			"_seek\\(",
			"_seek",
			"SEEK_SET",
			"js_misc_resizearraybuffer",
			"js_misc_tostring",
			"arraybuffer",
			"archive_read_data",
			"ARCHIVE_PROP",
			"ARCHIVE_PROP_FILTERS",
			"archive_filter",
			"compression",
			"js_generator_next",
			"JS_ITERATOR_NEXT",
			"^-",
			"archiveentry_free",
			"_free",
			"dev_",
			"_link",
			"_utf8",
			"archive_entry_link",
			"js_archiveentry_init",
			"fflags",
			"archive_entry_fflags",
			"filetype",
			"__LA_MODE_T",
			"dev_is_set",
			"dev_is",
			"set_dev",
			"archive_entry_set_pathname_utf8",
			"pathname_utf8",
			"archive_read_next_header",
			"_LA_DECL struct",
			"_entry",
			"block size",
			"utf8",
			"_disk",
			"_all",
			"deep_LIB",
			"deep_LIB ",
			"_SOURCES",
			"}_SOURCES",
			"_filename",
			"_file",
			"js_is_archive",
			"_new",
			"js_lexer_next",
			"js_global_get",
			"js_global_gewt",
			"js_symbol_static_atom",
			"is_iterator",
			"iterator",
			"generator",
			"cstring_value",
			"input_buffer",
			"js_input_buffer",
			"Ctrl-C",
			"controlC",
			"formatNumber",
			"format",
			"formatWithOptionsInternal",
			"format\\(",
			"format =",
			"format",
			"\"Uint8Array",
			"Uint8Array",
			"Uint",
			"Uint8",
			"COLOR_",
			"readdi",
			"list_for_each",
			"util",
			"\"util",
			"setTimeout",
			"JSObjec",
			"js_iterator_next",
			"iterat",
			"\": "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\1if(gpio->debug) fprintf",
			"struct gpio",
			"struct GPIO",
			"struct GPIO*",
			"ctx->rt",
			"",
			": ",
			"\"",
			"ret = \\1;",
			"->errnum",
			"(",
			"error",
			"JS_NewInt32",
			"",
			",",
			"left, right",
			"predicate_nextarg(ctx, &args)",
			"predicate_nextarg(ctx, &args),predicate_nextarg(ctx, &args))",
			"predicate_argument_shift(ctx, &args)",
			"js_arguments_shift(&args)",
			"",
			"ret = PRECEDENCE_",
			"args",
			"",
			"dbuf",
			": left",
			"pred",
			"args->",
			"r",
			"predicate_value",
			"",
			"'x'",
			"0",
			"\\1this.last_cmd",
			"\\1this.cmd",
			"level",
			"cmd",
			"  ",
			"",
			"\\1this.prompt",
			"",
			" globalThis.",
			"evalAnd",
			"commands",
			"",
			"handlers",
			"events",
			"this.",
			"\\1",
			"listeners",
			"events",
			"\\1",
			"jsm_pending_signals",
			"jsm_module_native",
			"js_pointer_data(ctx, obj)",
			"ShiftPredicate",
			".buf",
			"\\1",
			"file.close",
			"std.open",
			"js_misc_free_arraybuffer",
			"JS_SetPropertyStr",
			"jsm_load_module",
			"",
			"_?",
			"sockets",
			"qjsc_perf_hooks",
			"output->",
			"output",
			"\\1//printf",
			"",
			"sizeSync",
			"CreateOperatorSet",
			"",
			"loc",
			"location",
			"loc->",
			"jsm_load_package_json",
			"tmp",
			"    ",
			"  ",
			"BOOL\\njs_is_",
			"GeneratorPrototype",
			"SetIteratorPrototype",
			"MapIteratorPrototype",
			"hasBuiltIn",
			"hbiTs",
			"sSl",
			"ccAt",
			"formatNumber(",
			"isObject(value) && ",
			"pointer_toarray( ptr, ctx)",
			"moduleStack.size",
			"require('${m}')",
			"globalThis.code ?? 'C'",
			"code",
			"fs.",
			"jsm_load_script",
			"jsm_load_file",
			"require.",
			"dirname",
			"dir",
			"script",
			"this.id",
			"jsm_std_dump_error",
			"if(",
			"",
			")",
			"",
			"break;\n    }\n    \n    case",
			"lexer_continue",
			" property-enumeration.c property-enumeration.h",
			" ",
			"*",
			"jslex",
			"this."
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 295,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": "/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									92,
									120
								],
								[
									1010,
									1017
								],
								[
									1469,
									1490
								],
								[
									1831,
									1845
								],
								[
									2336,
									2370
								],
								[
									2698,
									2750
								],
								[
									2791,
									2824
								],
								[
									3003,
									3053
								],
								[
									3098,
									3144
								],
								[
									3252,
									3304
								]
							],
							"symlist":
							[
								"Console(opts = {})",
								"Console",
								"\tfunction(...args)",
								"ConsoleOptions",
								"\taddMissingMethods(cons)",
								"Console.prototype.config = config(obj = {})",
								"ConsoleOptions(obj = {})",
								"ConsoleOptions.prototype.merge = function(...args)",
								"ConsoleOptions.merge = function(opts, ...args)",
								"ConsoleSetup(inspectOptions={}, callback )"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1628978854.42,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "quickjs-gpio.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5340,
						"regions":
						{
						},
						"selection":
						[
							[
								3579,
								3579
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628810306.48,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1980.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "cmake/QuickJSModule.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2804,
						"regions":
						{
						},
						"selection":
						[
							[
								1690,
								1690
							]
						],
						"settings":
						{
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628810255.91,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "cmake/FindQuickJS.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5095,
						"regions":
						{
						},
						"selection":
						[
							[
								1127,
								1146
							]
						],
						"settings":
						{
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628810322.94,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 106.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1620,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										373,
										386
									],
									[
										610,
										623
									],
									[
										674,
										687
									],
									[
										1373,
										1386
									],
									[
										1500,
										1513
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								381,
								381
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1628810316.03,
							"tabs_extra_last_activated_sheet_index": 3
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/roman/Sources/plot-cv/quickjs/modules/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9056,
						"regions":
						{
						},
						"selection":
						[
							[
								8653,
								8653
							]
						],
						"settings":
						{
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628810849.7,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2652.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "cmake/Findpigpio.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1077,
						"regions":
						{
						},
						"selection":
						[
							[
								385,
								399
							]
						],
						"settings":
						{
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1628810937.84,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "cmake/functions.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1841,
						"regions":
						{
						},
						"selection":
						[
							[
								5,
								5
							]
						],
						"settings":
						{
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628810256.59,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "quickjs-repeater.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4679,
						"regions":
						{
						},
						"selection":
						[
							[
								223,
								223
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628804121.03,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "quickjs-path.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12571,
						"regions":
						{
						},
						"selection":
						[
							[
								205,
								205
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628808876.69,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "quickjs-predicate.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27908,
						"regions":
						{
						},
						"selection":
						[
							[
								25182,
								25241
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628809038.83,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11645.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "quickjs-gpio.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 361,
						"regions":
						{
						},
						"selection":
						[
							[
								206,
								206
							]
						],
						"settings":
						{
							"auto_name": "#ifndef QUICKJS_GPIO_H",
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tabs_extra_last_activated": 1628809722.42,
							"tabs_extra_last_activated_sheet_index": 5
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "gpio.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 405,
						"regions":
						{
						},
						"selection":
						[
							[
								127,
								127
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628810082.71,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "gpio.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3435,
						"regions":
						{
						},
						"selection":
						[
							[
								2891,
								2891
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628810131.33,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 765.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/home/roman/Projects/plot-cv/test-gpio.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 733,
						"regions":
						{
						},
						"selection":
						[
							[
								122,
								122
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628803490.87,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9056,
						"regions":
						{
						},
						"selection":
						[
							[
								710,
								710
							]
						],
						"settings":
						{
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628811065.22,
							"tabs_extra_last_activated_sheet_index": 14,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "pigpio/pigpio.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 157578,
						"regions":
						{
						},
						"selection":
						[
							[
								25726,
								25739
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1628822290.49,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14465.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "pigpio/pigpiod_if2.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 110052,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628977722.32,
							"tabs_extra_last_activated_sheet_index": 16,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1260.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "lib/fs.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10842,
						"regions":
						{
						},
						"selection":
						[
							[
								4217,
								4217
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628979442.86,
							"tabs_extra_last_activated_sheet_index": 17,
							"tabs_extra_moving":
							[
								8,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2544.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "lib/console.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3440,
						"regions":
						{
						},
						"selection":
						[
							[
								2789,
								2789
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628979608.71,
							"tabs_extra_last_activated_sheet_index": 18,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1440.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "qjsm.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40148,
						"regions":
						{
						},
						"selection":
						[
							[
								15161,
								15161
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628979080.95,
							"tabs_extra_last_activated_sheet_index": 18,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7764.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38732,
						"regions":
						{
						},
						"selection":
						[
							[
								11234,
								11242
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1628978402.49,
							"tabs_extra_last_activated_sheet_index": 19,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5514.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"",
				"tests/test_qjsm.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"str.h",
				"lib/str.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			],
			[
				"source.h",
				"src/source.h"
			],
			[
				"fdtable",
				"src/fdtable.h"
			],
			[
				"fd.h",
				"src/fd.h"
			],
			[
				"eval",
				"src/eval.h"
			],
			[
				"ieee",
				"doc/posix/ieee-p1003.2-d11.2-s3.txt"
			],
			[
				"expand.h",
				"src/expand.h"
			],
			[
				"builtin_dum",
				"src/builtin/builtin_dump.c"
			],
			[
				"h_main",
				"src/sh/sh_main.c"
			],
			[
				"parse_cha",
				"src/parse/parse_chartable.c"
			],
			[
				"debug.h",
				"src/debug.h"
			],
			[
				"exec_c",
				"src/exec/exec_command.c"
			],
			[
				"eval.h",
				"src/eval.h"
			],
			[
				"test-op",
				"test-operators.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 251.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
