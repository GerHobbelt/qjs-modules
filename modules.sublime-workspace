{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyFunctionList"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"JS_New",
				"JS_NewCFunctionData"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Location\n  location_print\n  location_tostring\n  location_file\n  location_tovalue\n  location_init\n  location_zero\n  location_add\n  location_sub\n  location_release_rt\n  location_free_rt\n  location_count\n  location_copy\n  location_clone\n  location_new\n  location_release\n  location_free\n  location_isnull\n  location_dup",
			"settings":
			{
				"buffer_size": 316,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					253,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
						"symkeys":
						[
							[
								408,
								429
							],
							[
								458,
								475
							],
							[
								686,
								703
							],
							[
								961,
								986
							],
							[
								1851,
								1865
							],
							[
								2274,
								2293
							],
							[
								4974,
								4992
							],
							[
								6131,
								6149
							],
							[
								6556,
								6574
							],
							[
								6841,
								6862
							]
						],
						"symlist":
						[
							"child_process_sigchld",
							"child_process_get",
							"child_process_new",
							"child_process_environment",
							"argv_to_string",
							"child_process_spawn",
							"child_process_wait",
							"child_process_kill",
							"child_process_free",
							"child_process_free_rt"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPEgAAQ01BS0VfQ19TVEFOREFSRApDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApCVUlMRF9TSEFSRURfTElCUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUUpTCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRSlNDCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9SRVFVSVJFRF9RVUlFVApIQVZFX1BPU0lYX1NQQVdOUApIQVZFX1NQQVdOCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ19DT01QSUxFUgpDTUFLRV9TWVNST09UCkNNQUtFX1RPT0xDSEFJTl9GSUxFCkNNQUtFX1ZFUkJPU0VfTUFLRUZJTEUKQ01BS0VfQlVJTERfVFlQRQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfSU5DTFVERV9ESVJTClFVSUNLSlNfTElCUkFSWV9ESVIKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTCkxJQl9NT0RVTEVTClFVSUNLSlNfSApDT01NT05fSEVBREVSUwpDVVRJTFNfSApRVUlDS0pTX0gKICBidWZmZXJfdXRpbHNfU09VUkNFUwpDT01NT05fU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBjaGFyX3V0aWxzX1NPVVJDRVMKICBxdWV1ZV9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGNoYXJfdXRpbHNfU09VUkNFUwogIGpzX3V0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHN0cmVhbV9TT1VSQ0VTCiAgcXVldWVfU09VUkNFUwogIGpzX3V0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBwcmVkaWNhdGVfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdG9rZW5fU09VUkNFUwogIGxvY2F0aW9uX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBzeXNjYWxsZXJyb3JfU09VUkNFUwogIGNoaWxkX3Byb2Nlc3NfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIGRlZXBfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHByZWRpY2F0ZV9TT1VSQ0VTCiAgZGVlcF9MSUJSQVJJRVMKICBpbnNwZWN0X1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICB0cmVlX3dhbGtlcl9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgeG1sX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBsb2NhdGlvbl9TT1VSQ0VTCiAgaW5zcGVjdF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgcHJlZGljYXRlX1NPVVJDRVMKICB2ZWN0b3JfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBwb2ludGVyX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBsZXhlcl9TT1VSQ0VTCiAgbG9jYXRpb25fU09VUkNFUwogIHRva2VuX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBsZXhlcl9MSUJSQVJJRVMKICBtbWFwX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICByZXBlYXRlcl9TT1VSQ0VTCiAgcXVldWVfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHF1ZXVlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKICBzb2NrZXRzX1NPVVJDRVMKICBzb2NrZXRzX1NPVVJDRVMKICBzb2NrZXRzX1NPVVJDRVMKICBzb2NrZXRzX1NPVVJDRVMKICBzb2NrZXRzX0xJQlJBUklFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIGJsb2JfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHN0cmluZ2RlY29kZXJfU09VUkNFUwogIGJ1ZmZlcl91dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgbWlzY19TT1VSQ0VTCiAgcGF0aF9TT1VSQ0VTCiAgbG9jYXRpb25fU09VUkNFUwogIHZlY3Rvcl9TT1VSQ0VTCiAgZ3Bpb19TT1VSQ0VTCiAgc3lzY2FsbGVycm9yX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYnVmZmVyX3V0aWxzX1NPVVJDRVMKTGliQXJjaGl2ZV9JTkNMVURFX0RJUlMKICBhcmNoaXZlX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgYXJjaGl2ZV9MSUJSQVJJRVMKTGliQXJjaGl2ZV9MSUJSQVJJRVMKUUpTTV9FWFRSQV9TT1VSQ0VTCiAgdmVjdG9yX1NPVVJDRVMKICBidWZmZXJfdXRpbHNfU09VUkNFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKICBtbWFwX1NPVVJDRVMKICBtbWFwX1NPVVJDRVMKQ01BS0VfUkVRVUlSRURfUVVJRVQKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTClRFU1RTClRFU1QKQkFTRQpCQVNFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTClRFU1QKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTClFVSUNLSlNfTU9EVUxFUwpTSEFSRURfVEFSR0VUUwpRSlNNX0xJQkRJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfU1lTVEVNX05BTUUKQ01BS0VfSU1QT1JUX0xJQlJBUllfUFJFRklYCkNNQUtFX0lNUE9SVF9MSUJSQVJZX1NVRkZJWApDTUFLRV9TWVNURU1fTkFNRQpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRSlNNX0xJQkRJUgpMSUJSQVJZX1BSRUZJWApRSlNNX01PRFVMRQpMSUJSQVJZX1NVRkZJWApRVUlDS0pTX01PRFVMRVMKUUpTTV9MSUJESVIKICBwcmVkaWNhdGVfTElCUkFSSUVTCkxJQk0KICBzb2NrZXRzX0xJQlJBUklFUwogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9MSUJSQVJJRVMKICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FClFKU00KVEVTVF9TT1VSQ0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkxJQkpTClFVSUNLSlNfSlNfTU9EVUxFX0RJUgpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFUwpMSUJfTU9EVUxFCkxJQl9NT0RVTEVTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKUVVJQ0tKU19JTkNMVURFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVTX0RJUgpRSlNDCk1PRFVMRVNfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNDX0RFUFMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKTU9EVUxFU19ESVIKUUpTTV9FWFRSQV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTTV9TT1VSQ0VTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVFJBTlNQT1JUX1BMQVRGT1JNCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNX1NPVVJDRVMKUUpTX01PRFVMRVNfU1RBVElDCkNPTVBJTEVEX01PRFVMRVMKUUpTTV9MSUJESVIKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTClFKU01fTElCRElSCkxJTktfRVhQT1JUClFKU01fTElCRElSClFVSUNLSlNfSU5TVEFMTF9QUkVGSVgKUVVJQ0tKU19MSUJSQVJZX0RJUgpRVUlDS0pTX0xJQlJBUlkKUUpTTV9MREFERApMSUJQVEhSRUFECkxJQk0KTElCREwKTElCV1MyXzMyClFVSUNLSlNfVkVSU0lPTgpRVUlDS0pTX0lOU1RBTExfUFJFRklYClFVSUNLSlNfTU9EVUxFX1BBVEgKSU5TVEFMTF9TQ1JJUFRTAAAAAAAAAADZAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					254,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
						"symkeys":
						[
							[
								383,
								387
							],
							[
								537,
								558
							],
							[
								587,
								604
							],
							[
								815,
								832
							],
							[
								1090,
								1115
							],
							[
								1980,
								1994
							],
							[
								2403,
								2422
							],
							[
								5103,
								5121
							],
							[
								6260,
								6278
							],
							[
								6685,
								6703
							],
							[
								6970,
								6991
							]
						],
						"symlist":
						[
							"fork",
							"child_process_sigchld",
							"child_process_get",
							"child_process_new",
							"child_process_environment",
							"argv_to_string",
							"child_process_spawn",
							"child_process_wait",
							"child_process_kill",
							"child_process_free",
							"child_process_free_rt"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADZAAAAICBjaGlsZF9wcm9jZXNzX3NpZ2NobGQKICBjaGlsZF9wcm9jZXNzX2dldAogIGNoaWxkX3Byb2Nlc3NfbmV3CiAgY2hpbGRfcHJvY2Vzc19lbnZpcm9ubWVudAogIGFyZ3ZfdG9fc3RyaW5nCiAgY2hpbGRfcHJvY2Vzc19zcGF3bgogIGNoaWxkX3Byb2Nlc3Nfd2FpdAogIGNoaWxkX3Byb2Nlc3Nfa2lsbAogIGNoaWxkX3Byb2Nlc3NfZnJlZQogIGNoaWxkX3Byb2Nlc3NfZnJlZV9ydAAAAAAAAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAgIGZvcmsKICBjaGlsZF9wcm9jZXNzX3NpZ2NobGQKICBjaGlsZF9wcm9jZXNzX2dldAogIGNoaWxkX3Byb2Nlc3NfbmV3CiAgY2hpbGRfcHJvY2Vzc19lbnZpcm9ubWVudAogIGFyZ3ZfdG9fc3RyaW5nCiAgY2hpbGRfcHJvY2Vzc19zcGF3bgogIGNoaWxkX3Byb2Nlc3Nfd2FpdAogIGNoaWxkX3Byb2Nlc3Nfa2lsbAogIGNoaWxkX3Byb2Nlc3NfZnJlZQogIGNoaWxkX3Byb2Nlc3NfZnJlZV9ydAAAAAAAAAAA4AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					255,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
						"symkeys":
						[
							[
								380,
								384
							],
							[
								533,
								554
							],
							[
								583,
								600
							],
							[
								811,
								828
							],
							[
								1086,
								1111
							],
							[
								1976,
								1990
							],
							[
								2399,
								2418
							],
							[
								5101,
								5119
							],
							[
								6258,
								6276
							],
							[
								6683,
								6701
							],
							[
								6968,
								6989
							]
						],
						"symlist":
						[
							"fork",
							"child_process_sigchld",
							"child_process_get",
							"child_process_new",
							"child_process_environment",
							"argv_to_string",
							"child_process_spawn",
							"child_process_wait",
							"child_process_kill",
							"child_process_free",
							"child_process_free_rt"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAADgAAAAICBmb3JrCiAgY2hpbGRfcHJvY2Vzc19zaWdjaGxkCiAgY2hpbGRfcHJvY2Vzc19nZXQKICBjaGlsZF9wcm9jZXNzX25ldwogIGNoaWxkX3Byb2Nlc3NfZW52aXJvbm1lbnQKICBhcmd2X3RvX3N0cmluZwogIGNoaWxkX3Byb2Nlc3Nfc3Bhd24KICBjaGlsZF9wcm9jZXNzX3dhaXQKICBjaGlsZF9wcm9jZXNzX2tpbGwKICBjaGlsZF9wcm9jZXNzX2ZyZWUKICBjaGlsZF9wcm9jZXNzX2ZyZWVfcnQAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAAICBmb3JrCiAgY2hpbGRfcHJvY2Vzc19zaWdjaGxkCiAgY2hpbGRfcHJvY2Vzc19nZXQKICBjaGlsZF9wcm9jZXNzX25ldwogIGNoaWxkX3Byb2Nlc3NfZW52aXJvbm1lbnQKICBhcmd2X3RvX3N0cmluZwogIGNoaWxkX3Byb2Nlc3Nfc3Bhd24KICBjaGlsZF9wcm9jZXNzX3dhaXQKICBjaGlsZF9wcm9jZXNzX2tpbGwKICBjaGlsZF9wcm9jZXNzX2ZyZWUKICBjaGlsZF9wcm9jZXNzX2ZyZWVfcnQAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAAICBmb3JrCiAgY2hpbGRfcHJvY2Vzc19zaWdjaGxkCiAgY2hpbGRfcHJvY2Vzc19nZXQKICBjaGlsZF9wcm9jZXNzX25ldwogIGNoaWxkX3Byb2Nlc3NfZW52aXJvbm1lbnQKICBhcmd2X3RvX3N0cmluZwogIGNoaWxkX3Byb2Nlc3Nfc3Bhd24KICBjaGlsZF9wcm9jZXNzX3dhaXQKICBjaGlsZF9wcm9jZXNzX2tpbGwKICBjaGlsZF9wcm9jZXNzX2ZyZWUKICBjaGlsZF9wcm9jZXNzX2ZyZWVfcnQAAAAAAAAAAOAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					260,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
						"symkeys":
						[
							[
								379,
								383
							],
							[
								532,
								553
							],
							[
								582,
								599
							],
							[
								810,
								827
							],
							[
								1085,
								1110
							],
							[
								1975,
								1989
							],
							[
								2398,
								2417
							],
							[
								5100,
								5118
							],
							[
								6257,
								6275
							],
							[
								6682,
								6700
							],
							[
								6967,
								6988
							]
						],
						"symlist":
						[
							"fork",
							"child_process_sigchld",
							"child_process_get",
							"child_process_new",
							"child_process_environment",
							"argv_to_string",
							"child_process_spawn",
							"child_process_wait",
							"child_process_kill",
							"child_process_free",
							"child_process_free_rt"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADgAAAAICBmb3JrCiAgY2hpbGRfcHJvY2Vzc19zaWdjaGxkCiAgY2hpbGRfcHJvY2Vzc19nZXQKICBjaGlsZF9wcm9jZXNzX25ldwogIGNoaWxkX3Byb2Nlc3NfZW52aXJvbm1lbnQKICBhcmd2X3RvX3N0cmluZwogIGNoaWxkX3Byb2Nlc3Nfc3Bhd24KICBjaGlsZF9wcm9jZXNzX3dhaXQKICBjaGlsZF9wcm9jZXNzX2tpbGwKICBjaGlsZF9wcm9jZXNzX2ZyZWUKICBjaGlsZF9wcm9jZXNzX2ZyZWVfcnQAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAAICBmb3JrCiAgY2hpbGRfcHJvY2Vzc19zaWdjaGxkCiAgY2hpbGRfcHJvY2Vzc19nZXQKICBjaGlsZF9wcm9jZXNzX25ldwogIGNoaWxkX3Byb2Nlc3NfZW52aXJvbm1lbnQKICBhcmd2X3RvX3N0cmluZwogIGNoaWxkX3Byb2Nlc3Nfc3Bhd24KICBjaGlsZF9wcm9jZXNzX3dhaXQKICBjaGlsZF9wcm9jZXNzX2tpbGwKICBjaGlsZF9wcm9jZXNzX2ZyZWUKICBjaGlsZF9wcm9jZXNzX2ZyZWVfcnQAAAAAAAAAAOAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAAAAICBmb3JrCiAgY2hpbGRfcHJvY2Vzc19zaWdjaGxkCiAgY2hpbGRfcHJvY2Vzc19nZXQKICBjaGlsZF9wcm9jZXNzX25ldwogIGNoaWxkX3Byb2Nlc3NfZW52aXJvbm1lbnQKICBhcmd2X3RvX3N0cmluZwogIGNoaWxkX3Byb2Nlc3Nfc3Bhd24KICBjaGlsZF9wcm9jZXNzX3dhaXQKICBjaGlsZF9wcm9jZXNzX2tpbGwKICBjaGlsZF9wcm9jZXNzX2ZyZWUKICBjaGlsZF9wcm9jZXNzX2ZyZWVfcnQAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					262,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					263,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
						"symkeys":
						[
							[
								278,
								282
							],
							[
								891,
								912
							],
							[
								1009,
								1031
							],
							[
								1144,
								1165
							],
							[
								1360,
								1388
							],
							[
								2082,
								2106
							],
							[
								3268,
								3294
							],
							[
								3460,
								3481
							],
							[
								3617,
								3639
							],
							[
								6240,
								6260
							],
							[
								8117,
								8138
							],
							[
								8506,
								8527
							],
							[
								13134,
								13155
							],
							[
								14350,
								14364
							]
						],
						"symlist":
						[
							"pipe",
							"js_child_process_data",
							"js_child_process_data2",
							"js_child_process_wrap",
							"js_child_process_constructor",
							"js_child_process_inspect",
							"js_child_process_finalizer",
							"js_child_process_exec",
							"js_child_process_spawn",
							"js_child_process_get",
							"js_child_process_wait",
							"js_child_process_kill",
							"js_child_process_init",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAARQEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					264,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
						"symkeys":
						[
							[
								628,
								650
							],
							[
								2978,
								2990
							],
							[
								3097,
								3114
							],
							[
								3867,
								3907
							]
						],
						"symlist":
						[
							"function main(...args)",
							"(...args) =>",
							" (node, stack) =>",
							" function Recurse(node, fn, stack = [])"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABFAQAAICBwaXBlCiAganNfY2hpbGRfcHJvY2Vzc19kYXRhCiAganNfY2hpbGRfcHJvY2Vzc19kYXRhMgogIGpzX2NoaWxkX3Byb2Nlc3Nfd3JhcAogIGpzX2NoaWxkX3Byb2Nlc3NfY29uc3RydWN0b3IKICBqc19jaGlsZF9wcm9jZXNzX2luc3BlY3QKICBqc19jaGlsZF9wcm9jZXNzX2ZpbmFsaXplcgogIGpzX2NoaWxkX3Byb2Nlc3NfZXhlYwogIGpzX2NoaWxkX3Byb2Nlc3Nfc3Bhd24KICBqc19jaGlsZF9wcm9jZXNzX2dldAogIGpzX2NoaWxkX3Byb2Nlc3Nfd2FpdAogIGpzX2NoaWxkX3Byb2Nlc3Nfa2lsbAogIGpzX2NoaWxkX3Byb2Nlc3NfaW5pdApKU19JTklUX01PRFVMRQAAAAAAAAAATQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					265,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
						"symkeys":
						[
							[
								278,
								282
							],
							[
								891,
								912
							],
							[
								1009,
								1031
							],
							[
								1144,
								1165
							],
							[
								1360,
								1388
							],
							[
								2082,
								2106
							],
							[
								3268,
								3294
							],
							[
								3460,
								3481
							],
							[
								3617,
								3639
							],
							[
								6240,
								6260
							],
							[
								8117,
								8138
							],
							[
								8506,
								8527
							],
							[
								13134,
								13155
							],
							[
								14350,
								14364
							]
						],
						"symlist":
						[
							"pipe",
							"js_child_process_data",
							"js_child_process_data2",
							"js_child_process_wrap",
							"js_child_process_constructor",
							"js_child_process_inspect",
							"js_child_process_finalizer",
							"js_child_process_exec",
							"js_child_process_spawn",
							"js_child_process_get",
							"js_child_process_wait",
							"js_child_process_kill",
							"js_child_process_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBtYWluKC4uLmFyZ3MpCiguLi5hcmdzKSA9PgogIChub2RlLCBzdGFjaykgPT4KUmVjdXJzZShub2RlLCBmbiwgc3RhY2sgPSBbXSkAAAAAAAAAAEUBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					266,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
						"symkeys":
						[
							[
								813,
								836
							],
							[
								1181,
								1205
							],
							[
								1481,
								1487
							],
							[
								1492,
								1512
							],
							[
								1599,
								1603
							],
							[
								1608,
								1656
							],
							[
								2001,
								2017
							],
							[
								2078,
								2096
							],
							[
								2260,
								2279
							],
							[
								2362,
								2400
							],
							[
								2721,
								2742
							],
							[
								2800,
								2817
							],
							[
								2853,
								2880
							],
							[
								3361,
								3377
							],
							[
								3495,
								3514
							],
							[
								3636,
								3653
							],
							[
								3812,
								3833
							],
							[
								4284,
								4288
							],
							[
								4340,
								4344
							],
							[
								4386,
								4419
							],
							[
								4430,
								4433
							],
							[
								4478,
								4494
							],
							[
								4638,
								4672
							],
							[
								4683,
								4686
							],
							[
								4710,
								4716
							],
							[
								4738,
								4753
							],
							[
								4987,
								4995
							],
							[
								5000,
								5023
							],
							[
								5054,
								5073
							],
							[
								5126,
								5142
							],
							[
								5190,
								5220
							],
							[
								5449,
								5481
							],
							[
								5720,
								5763
							],
							[
								6015,
								6033
							],
							[
								6082,
								6089
							],
							[
								6790,
								6798
							],
							[
								6850,
								6860
							],
							[
								7315,
								7349
							],
							[
								7425,
								7441
							],
							[
								7490,
								7517
							],
							[
								7676,
								7708
							],
							[
								8190,
								8208
							],
							[
								8342,
								8354
							],
							[
								8392,
								8404
							],
							[
								8420,
								8430
							],
							[
								8527,
								8536
							],
							[
								8568,
								8586
							],
							[
								8685,
								8706
							],
							[
								8770,
								8788
							],
							[
								9262,
								9276
							],
							[
								9338,
								9345
							],
							[
								9363,
								9387
							],
							[
								9421,
								9440
							],
							[
								9566,
								9582
							],
							[
								9663,
								9677
							],
							[
								9718,
								9731
							],
							[
								9775,
								9790
							],
							[
								9821,
								9835
							],
							[
								9870,
								9880
							],
							[
								9918,
								9943
							],
							[
								10006,
								10027
							],
							[
								10589,
								10603
							],
							[
								10756,
								10779
							],
							[
								10837,
								10853
							],
							[
								11047,
								11062
							],
							[
								11272,
								11295
							],
							[
								11371,
								11375
							],
							[
								11468,
								11490
							],
							[
								11733,
								11748
							],
							[
								11835,
								11842
							],
							[
								11930,
								11938
							],
							[
								11959,
								11975
							],
							[
								11999,
								12007
							],
							[
								12027,
								12055
							],
							[
								12430,
								12438
							],
							[
								12528,
								12532
							],
							[
								12550,
								12573
							],
							[
								12737,
								12747
							],
							[
								12935,
								12953
							],
							[
								13003,
								13022
							],
							[
								13064,
								13074
							],
							[
								13137,
								13148
							],
							[
								13185,
								13196
							],
							[
								13267,
								13279
							],
							[
								13521,
								13525
							],
							[
								13616,
								13620
							],
							[
								13638,
								13661
							],
							[
								13870,
								13880
							],
							[
								13945,
								13956
							],
							[
								13999,
								14011
							],
							[
								14114,
								14124
							],
							[
								14354,
								14369
							],
							[
								14396,
								14400
							],
							[
								14423,
								14427
							],
							[
								14446,
								14450
							],
							[
								14544,
								14606
							],
							[
								14675,
								14707
							],
							[
								14799,
								14821
							],
							[
								14879,
								14922
							],
							[
								15090,
								15115
							],
							[
								15162,
								15192
							],
							[
								15210,
								15228
							],
							[
								16317,
								16352
							],
							[
								16475,
								16491
							],
							[
								16520,
								16541
							]
						],
						"symlist":
						[
							"keyOf = (obj, value) =>",
							"function checkNode(node)",
							"Parser",
							"parseFromString(str)",
							"Node",
							"constructor(obj, parent, proto = Node.prototype)",
							"static raw(node)",
							"static owner(node)",
							"static parent(node)",
							"static hier(node, pred = node => true)",
							"static document(node)",
							"({ nodeType }) =>",
							"static path(arg, path = [])",
							"get parentNode()",
							"get ownerDocument()",
							"get nextSibling()",
							"get previousSibling()",
							"Node",
							"Node",
							"function MakeCache(ctor, store = ",
							"())",
							" (k, ...args) =>",
							"function MakeCache2(ctor, store = ",
							"())",
							"key =>",
							" (id, owner) =>",
							"NodeList",
							"constructor(obj, owner)",
							"isElement = prop =>",
							"isList = prop =>",
							"wrapElement = (value, prop) =>",
							"get: (target, prop, receiver) =>",
							"getOwnPropertyDescriptor: (target, prop) =>",
							"ownKeys: target =>",
							"prop =>",
							"NodeList",
							"get path()",
							" function NamedNodeMap(obj, owner)",
							"isAttr = prop =>",
							"wrapAttr = (value, prop) =>",
							"get: (target, prop, receiver) =>",
							"ownKeys: target =>",
							"NamedNodeMap",
							"NamedNodeMap",
							"get path()",
							"item(key)",
							"setNamedItem(attr)",
							"removeNamedItem(name)",
							"getNamedItem(name)",
							"(acc, prop) =>",
							"Element",
							"constructor(obj, parent)",
							"get parentElement()",
							"get attributes()",
							"set tagName(v)",
							"get tagName()",
							"set nodeName(v)",
							"get nodeName()",
							"get path()",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get children()",
							"get childElementCount()",
							"get firstChild()",
							"get lastChild()",
							"get firstElementChild()",
							"n =>",
							"get lastElementChild()",
							"(obj, owner) =>",
							"Element",
							"Document",
							"constructor(obj)",
							"Document",
							"createAttribute(name, value)",
							"Document",
							"Attr",
							"constructor(raw, owner)",
							"get path()",
							"get ownerElement()",
							"get ownerDocument()",
							"get name()",
							"set name(v)",
							"get value()",
							"set value(v)",
							"Attr",
							"Text",
							"constructor(key, owner)",
							"get path()",
							"get value()",
							"set value(v)",
							"toString()",
							"(key, owner) =>",
							"Text",
							"Node",
							"Text",
							"function Membrane(instance, obj, proto, wrapProp, wrapElement)",
							"get: (target, prop, receiver) =>",
							"has: (target, prop) =>",
							"getOwnPropertyDescriptor: (target, prop) =>",
							"getPrototypeOf: target =>",
							"setPrototypeOf: (target, p) =>",
							"ownKeys: target =>",
							" function Factory(raw, owner, ctor)",
							"isArray = arg =>",
							"isAttributes = arg =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABFAQAAICBwaXBlCiAganNfY2hpbGRfcHJvY2Vzc19kYXRhCiAganNfY2hpbGRfcHJvY2Vzc19kYXRhMgogIGpzX2NoaWxkX3Byb2Nlc3Nfd3JhcAogIGpzX2NoaWxkX3Byb2Nlc3NfY29uc3RydWN0b3IKICBqc19jaGlsZF9wcm9jZXNzX2luc3BlY3QKICBqc19jaGlsZF9wcm9jZXNzX2ZpbmFsaXplcgogIGpzX2NoaWxkX3Byb2Nlc3NfZXhlYwogIGpzX2NoaWxkX3Byb2Nlc3Nfc3Bhd24KICBqc19jaGlsZF9wcm9jZXNzX2dldAogIGpzX2NoaWxkX3Byb2Nlc3Nfd2FpdAogIGpzX2NoaWxkX3Byb2Nlc3Nfa2lsbAogIGpzX2NoaWxkX3Byb2Nlc3NfaW5pdApKU19JTklUX01PRFVMRQAAAAAAAAAA7wcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					267,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADvBwAAICBrZXlPZiA9IChvYmosIHZhbHVlKSA9PgogIGNoZWNrTm9kZShub2RlKQpQYXJzZXIKICBwYXJzZUZyb21TdHJpbmcoc3RyKQpOb2RlCiAgY29uc3RydWN0b3Iob2JqLCBwYXJlbnQsIHByb3RvID0gTm9kZS5wcm90b3R5cGUpCiAgc3RhdGljIHJhdyhub2RlKQogIHN0YXRpYyBvd25lcihub2RlKQogIHN0YXRpYyBwYXJlbnQobm9kZSkKICBzdGF0aWMgaGllcihub2RlLCBwcmVkID0gbm9kZSA9PiB0cnVlKQogIHN0YXRpYyBkb2N1bWVudChub2RlKQooeyBub2RlVHlwZSB9KSA9PgogIHN0YXRpYyBwYXRoKGFyZywgcGF0aCA9IFtdKQogIGdldCBwYXJlbnROb2RlKCkKICBnZXQgb3duZXJEb2N1bWVudCgpCiAgZ2V0IG5leHRTaWJsaW5nKCkKICBnZXQgcHJldmlvdXNTaWJsaW5nKCkKTm9kZQpOb2RlCk1ha2VDYWNoZShjdG9yLCBzdG9yZSA9IAooKSkKICAoaywgLi4uYXJncykgPT4KTWFrZUNhY2hlMihjdG9yLCBzdG9yZSA9IAooKSkKICBrZXkgPT4KICAoaWQsIG93bmVyKSA9PgpOb2RlTGlzdAogIGNvbnN0cnVjdG9yKG9iaiwgb3duZXIpCiAgaXNFbGVtZW50ID0gcHJvcCA9PgogIGlzTGlzdCA9IHByb3AgPT4KICB3cmFwRWxlbWVudCA9ICh2YWx1ZSwgcHJvcCkgPT4KICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogKHRhcmdldCwgcHJvcCkgPT4KICBvd25LZXlzOiB0YXJnZXQgPT4KICBwcm9wID0+Ck5vZGVMaXN0CiAgZ2V0IHBhdGgoKQpOYW1lZE5vZGVNYXAob2JqLCBvd25lcikKICBpc0F0dHIgPSBwcm9wID0+CiAgd3JhcEF0dHIgPSAodmFsdWUsIHByb3ApID0+CiAgZ2V0OiAodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikgPT4KICBvd25LZXlzOiB0YXJnZXQgPT4KTmFtZWROb2RlTWFwCk5hbWVkTm9kZU1hcAogIGdldCBwYXRoKCkKICBpdGVtKGtleSkKICBzZXROYW1lZEl0ZW0oYXR0cikKICByZW1vdmVOYW1lZEl0ZW0obmFtZSkKICBnZXROYW1lZEl0ZW0obmFtZSkKKGFjYywgcHJvcCkgPT4KRWxlbWVudAogIGNvbnN0cnVjdG9yKG9iaiwgcGFyZW50KQogIGdldCBwYXJlbnRFbGVtZW50KCkKICBnZXQgYXR0cmlidXRlcygpCiAgc2V0IHRhZ05hbWUodikKICBnZXQgdGFnTmFtZSgpCiAgc2V0IG5vZGVOYW1lKHYpCiAgZ2V0IG5vZGVOYW1lKCkKICBnZXQgcGF0aCgpCiAgc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKQogIHJlbW92ZUF0dHJpYnV0ZShuYW1lKQogIGdldCBjaGlsZHJlbigpCiAgZ2V0IGNoaWxkRWxlbWVudENvdW50KCkKICBnZXQgZmlyc3RDaGlsZCgpCiAgZ2V0IGxhc3RDaGlsZCgpCiAgZ2V0IGZpcnN0RWxlbWVudENoaWxkKCkKICBuID0+CiAgZ2V0IGxhc3RFbGVtZW50Q2hpbGQoKQoob2JqLCBvd25lcikgPT4KRWxlbWVudApEb2N1bWVudAogIGNvbnN0cnVjdG9yKG9iaikKRG9jdW1lbnQKICBjcmVhdGVBdHRyaWJ1dGUobmFtZSwgdmFsdWUpCkRvY3VtZW50CkF0dHIKICBjb25zdHJ1Y3RvcihyYXcsIG93bmVyKQogIGdldCBwYXRoKCkKICBnZXQgb3duZXJFbGVtZW50KCkKICBnZXQgb3duZXJEb2N1bWVudCgpCiAgZ2V0IG5hbWUoKQogIHNldCBuYW1lKHYpCiAgZ2V0IHZhbHVlKCkKICBzZXQgdmFsdWUodikKQXR0cgpUZXh0CiAgY29uc3RydWN0b3Ioa2V5LCBvd25lcikKICBnZXQgcGF0aCgpCiAgZ2V0IHZhbHVlKCkKICBzZXQgdmFsdWUodikKICB0b1N0cmluZygpCihrZXksIG93bmVyKSA9PgpUZXh0Ck5vZGUKVGV4dApNZW1icmFuZShpbnN0YW5jZSwgb2JqLCBwcm90bywgd3JhcFByb3AsIHdyYXBFbGVtZW50KQogIGdldDogKHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpID0+CiAgaGFzOiAodGFyZ2V0LCBwcm9wKSA9PgogIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogKHRhcmdldCwgcHJvcCkgPT4KICBnZXRQcm90b3R5cGVPZjogdGFyZ2V0ID0+CiAgc2V0UHJvdG90eXBlT2Y6ICh0YXJnZXQsIHApID0+CiAgb3duS2V5czogdGFyZ2V0ID0+CkZhY3RvcnkocmF3LCBvd25lciwgY3RvcikKICBpc0FycmF5ID0gYXJnID0+CiAgaXNBdHRyaWJ1dGVzID0gYXJnID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					268,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								756,
								776
							],
							[
								966,
								982
							],
							[
								1036,
								1055
							],
							[
								1090,
								1106
							],
							[
								1148,
								1163
							],
							[
								1226,
								1260
							],
							[
								1283,
								1315
							],
							[
								1338,
								1381
							],
							[
								3210,
								3229
							],
							[
								3327,
								3343
							],
							[
								3405,
								3423
							],
							[
								3487,
								3506
							],
							[
								3571,
								3580
							],
							[
								3635,
								3652
							],
							[
								3715,
								3732
							],
							[
								3795,
								3809
							],
							[
								3869,
								3884
							],
							[
								3945,
								3960
							],
							[
								4021,
								4029
							],
							[
								4083,
								4095
							],
							[
								4153,
								4163
							],
							[
								4219,
								4230
							],
							[
								4287,
								4295
							],
							[
								4349,
								4371
							],
							[
								4439,
								4454
							],
							[
								4515,
								4537
							],
							[
								4605,
								4621
							],
							[
								4683,
								4699
							],
							[
								4761,
								4773
							],
							[
								4831,
								4843
							],
							[
								4901,
								4914
							],
							[
								4973,
								4991
							],
							[
								5049,
								5067
							],
							[
								5131,
								5153
							],
							[
								5221,
								5248
							],
							[
								5321,
								5338
							],
							[
								5395,
								5412
							],
							[
								5469,
								5486
							],
							[
								5533,
								5549
							],
							[
								5632,
								5648
							],
							[
								5720,
								5736
							],
							[
								5808,
								5825
							],
							[
								5882,
								5902
							],
							[
								5961,
								5981
							],
							[
								6140,
								6159
							],
							[
								6235,
								6242
							],
							[
								6271,
								6291
							],
							[
								6361,
								6376
							],
							[
								6437,
								6463
							],
							[
								6534,
								6550
							],
							[
								6606,
								6619
							],
							[
								6696,
								6714
							],
							[
								6796,
								6809
							],
							[
								6874,
								6888
							],
							[
								6990,
								7016
							],
							[
								7062,
								7087
							],
							[
								7172,
								7214
							],
							[
								7348,
								7388
							],
							[
								10317,
								10360
							],
							[
								10741,
								10776
							],
							[
								10932,
								10950
							],
							[
								10980,
								10985
							],
							[
								11075,
								11102
							],
							[
								11221,
								11256
							],
							[
								11317,
								11321
							],
							[
								11337,
								11341
							],
							[
								11368,
								11377
							],
							[
								11540,
								11573
							],
							[
								11627,
								11659
							],
							[
								11823,
								11847
							],
							[
								12003,
								12024
							],
							[
								12094,
								12100
							],
							[
								12117,
								12133
							],
							[
								12196,
								12202
							],
							[
								12215,
								12231
							],
							[
								12279,
								12309
							],
							[
								12541,
								12568
							],
							[
								12599,
								12626
							],
							[
								12725,
								12752
							],
							[
								12976,
								13000
							],
							[
								13050,
								13054
							],
							[
								13094,
								13121
							],
							[
								13351,
								13371
							],
							[
								13401,
								13412
							],
							[
								13511,
								13546
							],
							[
								13586,
								13604
							],
							[
								13791,
								13812
							],
							[
								13836,
								13846
							],
							[
								13885,
								13915
							],
							[
								14463,
								14497
							],
							[
								14798,
								14832
							],
							[
								15052,
								15086
							],
							[
								15152,
								15188
							],
							[
								15263,
								15280
							],
							[
								15439,
								15476
							],
							[
								15477,
								15491
							],
							[
								15497,
								15501
							],
							[
								15576,
								15608
							],
							[
								15636,
								15662
							],
							[
								15987,
								16009
							],
							[
								16047,
								16063
							],
							[
								16078,
								16085
							],
							[
								16107,
								16123
							],
							[
								16161,
								16189
							],
							[
								16408,
								16425
							],
							[
								16426,
								16435
							],
							[
								16487,
								16504
							],
							[
								16505,
								16514
							],
							[
								16574,
								16591
							],
							[
								16592,
								16615
							],
							[
								16671,
								16695
							],
							[
								19322,
								19350
							],
							[
								19781,
								19785
							],
							[
								19913,
								19926
							],
							[
								20242,
								20254
							],
							[
								20517,
								20530
							],
							[
								20635,
								20649
							],
							[
								21542,
								21570
							],
							[
								21686,
								21699
							],
							[
								21811,
								21837
							],
							[
								22032,
								22080
							],
							[
								22128,
								22240
							],
							[
								22345,
								22368
							],
							[
								22512,
								22564
							],
							[
								22658,
								22674
							],
							[
								22758,
								22769
							],
							[
								22882,
								22886
							],
							[
								23165,
								23198
							],
							[
								23312,
								23364
							],
							[
								23538,
								23574
							],
							[
								23731,
								23747
							],
							[
								23761,
								23783
							],
							[
								23896,
								23902
							],
							[
								25264,
								25306
							],
							[
								25501,
								25532
							],
							[
								25582,
								25624
							],
							[
								25744,
								25768
							],
							[
								25988,
								25998
							],
							[
								26051,
								26055
							],
							[
								26094,
								26121
							],
							[
								26168,
								26180
							],
							[
								26250,
								26262
							],
							[
								26325,
								26350
							],
							[
								26395,
								26426
							],
							[
								26437,
								26454
							],
							[
								26595,
								26630
							],
							[
								26678,
								26705
							],
							[
								26796,
								26834
							],
							[
								27043,
								27091
							],
							[
								27679,
								27706
							],
							[
								27909,
								27923
							],
							[
								27972,
								27978
							],
							[
								28019,
								28038
							],
							[
								28089,
								28097
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							"function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterable(v)",
							"isAsyncIterable(v)",
							"isIterator(v)",
							"isArrayLike(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function memoize(fn, cache = {})",
							" function Memoize(n, ...rest)",
							" function getset(target)",
							"GetSet = (...args) =>",
							"key =>",
							" (key, value) =>",
							"key =>",
							" (key, value) =>",
							" function gettersetter(target)",
							"gettersetter = (...args) =>",
							"gettersetter = (...args) =>",
							"gettersetter = (...args) =>",
							" function hasGetSet(obj)",
							"m =>",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function shorten(str, max = 40, suffix = '...')",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function mod(a, b)",
							"b : n =>"
						]
					},
					"AQAAAAAAAAAAAAAAdQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					269,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1DAAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzQ29uc3RydWN0b3IodikKICBpc0l0ZXJhYmxlKHYpCiAgaXNBc3luY0l0ZXJhYmxlKHYpCiAgaXNJdGVyYXRvcih2KQogIGlzQXJyYXlMaWtlKHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpCiAgY3RvcgogIGN0b3IKICBzdXBlckN0b3IKICBtZW1vaXplKGZuLCBjYWNoZSA9IHt9KQpNZW1vaXplKG4sIC4uLnJlc3QpCiAgZ2V0c2V0KHRhcmdldCkKR2V0U2V0ID0gKC4uLmFyZ3MpID0+CiAga2V5ID0+CiAgKGtleSwgdmFsdWUpID0+CiAga2V5ID0+CiAgKGtleSwgdmFsdWUpID0+CiAgZ2V0dGVyc2V0dGVyKHRhcmdldCkKICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBoYXNHZXRTZXQob2JqKQogIG0gPT4KICBtYXBPYmplY3QodGFyZ2V0KQogIHNldDogKGtleSwgdmFsdWUpID0+CiAgZ2V0OiBrZXkgPT4KICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCiAgZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHdlYWtBc3NpZ24ob2JqLCAuLi5hcmdzKQogIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgcHJlZCA9IChlbCwgaSkgPT4KICAoZiwgYXJyID0gW10sIGxlbmd0aCA9IGYubGVuZ3RoKSA9PgogICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAoZWwsIGksIGFycikgPT4KICBpdGVtID0+CiAgKGVsLCBpLCBhcnIpID0+CiAgZ2V0RnVuY3Rpb25Bcmd1bWVudHMgPSBmbiA9PgogIChvZmZzZXQgPSAwKSA9PgogIGNvZGUgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgZ2V0QW5zaVN0eWxlcygpCiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGMgPT4KICB2YWx1ZTogaGV4ID0+CiAgY2hhcmFjdGVyID0+CiAgdmFsdWU6IGhleCA9PgogIHZhbHVlOiBjb2RlID0+CiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIHZhbHVlOiBoZXggPT4KICByYW5kSW50KC4uLmFyZ3MpCiAgcmFuZEZsb2F0KG1pbiwgbWF4LCBybmcgPSBNYXRoLnJhbmRvbSkKICByYW5kU3RyKG4sIHNldCA9ICdfMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonLCBybmcgPSBNYXRoLnJhbmRvbSkKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogIGZ1bmN0aW9uKCkKICB2ID0+CiAgcmVwbGFjZVByb3BlcnR5KHZhbHVlKQogIGxhenlQcm9wZXJ0aWVzKG9iaiwgZ2V0dGVyc09iaiwgb3B0cyA9IHt9KQogIGdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGFyZyA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgb3B0ID0+CiAgdG9Vbml4VGltZShkYXRlT2JqLCB1dGMgPSBmYWxzZSkKICB1bml4VGltZSh1dGMgPSBmYWxzZSkKICBmcm9tVW5peFRpbWUoZXBvY2gsIHV0YyA9IGZhbHNlKQogIHJhbmdlKC4uLmFyZ3MpCiAgKHYsIGspID0+CiAgbiA9PgogIHJlcGVhdGVyKG4sIHdoYXQpCigpCigpCiAgcmVwZWF0KG4sIHdoYXQpCiAgY2h1bmtBcnJheShhcnIsIHNpemUpCiAgZm4gPSAoYSwgdiwgaSkgPT4KICBjYW1lbGl6ZShzdHIsIGRlbGltID0gJycpCiAgKG1hdGNoLCBwMSwgcDIsIG9mZnNldCkgPT4KICBkZWNhbWVsaXplKHN0ciwgZGVsaW0gPSAnLScpCiAgc2hvcnRlbihzdHIsIG1heCA9IDQwLCBzdWZmaXggPSAnLi4uJykKICBhcnJheXNJbkNvbW1vbihhKQooaXRtLCBpbmR4KSA9PgogIGFyciA9PgogIG1vZChhLCBiKQogIGIgOiBuID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					270,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					271,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					272,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					273,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					274,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								756,
								776
							],
							[
								966,
								982
							],
							[
								1036,
								1055
							],
							[
								1090,
								1106
							],
							[
								1148,
								1163
							],
							[
								1226,
								1260
							],
							[
								1283,
								1315
							],
							[
								1338,
								1381
							],
							[
								3210,
								3229
							],
							[
								3327,
								3343
							],
							[
								3405,
								3423
							],
							[
								3487,
								3506
							],
							[
								3571,
								3580
							],
							[
								3635,
								3652
							],
							[
								3715,
								3732
							],
							[
								3795,
								3809
							],
							[
								3869,
								3884
							],
							[
								3945,
								3960
							],
							[
								4021,
								4029
							],
							[
								4083,
								4095
							],
							[
								4153,
								4163
							],
							[
								4219,
								4230
							],
							[
								4287,
								4295
							],
							[
								4349,
								4371
							],
							[
								4439,
								4454
							],
							[
								4515,
								4537
							],
							[
								4605,
								4621
							],
							[
								4683,
								4699
							],
							[
								4761,
								4773
							],
							[
								4831,
								4843
							],
							[
								4901,
								4914
							],
							[
								4973,
								4991
							],
							[
								5049,
								5067
							],
							[
								5131,
								5153
							],
							[
								5221,
								5248
							],
							[
								5321,
								5338
							],
							[
								5395,
								5412
							],
							[
								5469,
								5486
							],
							[
								5533,
								5549
							],
							[
								5632,
								5648
							],
							[
								5720,
								5736
							],
							[
								5808,
								5825
							],
							[
								5882,
								5902
							],
							[
								5961,
								5981
							],
							[
								6140,
								6159
							],
							[
								6235,
								6242
							],
							[
								6271,
								6291
							],
							[
								6361,
								6376
							],
							[
								6437,
								6463
							],
							[
								6534,
								6550
							],
							[
								6606,
								6619
							],
							[
								6696,
								6714
							],
							[
								6796,
								6809
							],
							[
								6874,
								6888
							],
							[
								6990,
								7016
							],
							[
								7062,
								7087
							],
							[
								7172,
								7214
							],
							[
								7348,
								7388
							],
							[
								10317,
								10360
							],
							[
								10741,
								10776
							],
							[
								10932,
								10950
							],
							[
								10980,
								10985
							],
							[
								11075,
								11102
							],
							[
								11221,
								11256
							],
							[
								11317,
								11321
							],
							[
								11337,
								11341
							],
							[
								11368,
								11377
							],
							[
								11540,
								11573
							],
							[
								11627,
								11659
							],
							[
								11823,
								11847
							],
							[
								12003,
								12024
							],
							[
								12094,
								12100
							],
							[
								12117,
								12133
							],
							[
								12196,
								12202
							],
							[
								12215,
								12231
							],
							[
								12279,
								12309
							],
							[
								12541,
								12568
							],
							[
								12599,
								12626
							],
							[
								12725,
								12752
							],
							[
								12976,
								13000
							],
							[
								13050,
								13054
							],
							[
								13094,
								13121
							],
							[
								13351,
								13371
							],
							[
								13401,
								13412
							],
							[
								13511,
								13546
							],
							[
								13586,
								13604
							],
							[
								13791,
								13812
							],
							[
								13836,
								13846
							],
							[
								13885,
								13915
							],
							[
								14463,
								14497
							],
							[
								14798,
								14832
							],
							[
								15052,
								15086
							],
							[
								15152,
								15188
							],
							[
								15263,
								15280
							],
							[
								15439,
								15476
							],
							[
								15477,
								15491
							],
							[
								15497,
								15501
							],
							[
								15576,
								15608
							],
							[
								15636,
								15662
							],
							[
								15987,
								16009
							],
							[
								16047,
								16063
							],
							[
								16078,
								16085
							],
							[
								16107,
								16123
							],
							[
								16161,
								16189
							],
							[
								16408,
								16425
							],
							[
								16426,
								16435
							],
							[
								16487,
								16504
							],
							[
								16505,
								16514
							],
							[
								16574,
								16591
							],
							[
								16592,
								16615
							],
							[
								16671,
								16695
							],
							[
								19322,
								19350
							],
							[
								19781,
								19785
							],
							[
								19913,
								19926
							],
							[
								20242,
								20254
							],
							[
								20517,
								20530
							],
							[
								20635,
								20649
							],
							[
								21542,
								21570
							],
							[
								21686,
								21699
							],
							[
								21811,
								21837
							],
							[
								22032,
								22080
							],
							[
								22128,
								22240
							],
							[
								22345,
								22368
							],
							[
								22512,
								22564
							],
							[
								22658,
								22674
							],
							[
								22758,
								22769
							],
							[
								22882,
								22886
							],
							[
								23165,
								23198
							],
							[
								23312,
								23364
							],
							[
								23538,
								23574
							],
							[
								23731,
								23747
							],
							[
								23761,
								23783
							],
							[
								23896,
								23902
							],
							[
								25264,
								25306
							],
							[
								25501,
								25532
							],
							[
								25582,
								25624
							],
							[
								25744,
								25768
							],
							[
								25988,
								25998
							],
							[
								26051,
								26055
							],
							[
								26094,
								26121
							],
							[
								26168,
								26180
							],
							[
								26250,
								26262
							],
							[
								26325,
								26350
							],
							[
								26395,
								26426
							],
							[
								26437,
								26454
							],
							[
								26595,
								26630
							],
							[
								26678,
								26705
							],
							[
								26796,
								26834
							],
							[
								27043,
								27091
							],
							[
								27679,
								27706
							],
							[
								27909,
								27923
							],
							[
								27972,
								27978
							],
							[
								28019,
								28038
							],
							[
								28089,
								28097
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							"function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterable(v)",
							"isAsyncIterable(v)",
							"isIterator(v)",
							"isArrayLike(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function memoize(fn, cache = {})",
							" function Memoize(n, ...rest)",
							" function getset(target)",
							"GetSet = (...args) =>",
							"key =>",
							" (key, value) =>",
							"key =>",
							" (key, value) =>",
							" function gettersetter(target)",
							"gettersetter = (...args) =>",
							"gettersetter = (...args) =>",
							"gettersetter = (...args) =>",
							" function hasGetSet(obj)",
							"m =>",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function shorten(str, max = 40, suffix = '...')",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function mod(a, b)",
							"b : n =>"
						]
					},
					"AQAAAAAAAAAAAAAAdQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					275,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1DAAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzQ29uc3RydWN0b3IodikKICBpc0l0ZXJhYmxlKHYpCiAgaXNBc3luY0l0ZXJhYmxlKHYpCiAgaXNJdGVyYXRvcih2KQogIGlzQXJyYXlMaWtlKHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpCiAgY3RvcgogIGN0b3IKICBzdXBlckN0b3IKICBtZW1vaXplKGZuLCBjYWNoZSA9IHt9KQpNZW1vaXplKG4sIC4uLnJlc3QpCiAgZ2V0c2V0KHRhcmdldCkKR2V0U2V0ID0gKC4uLmFyZ3MpID0+CiAga2V5ID0+CiAgKGtleSwgdmFsdWUpID0+CiAga2V5ID0+CiAgKGtleSwgdmFsdWUpID0+CiAgZ2V0dGVyc2V0dGVyKHRhcmdldCkKICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBoYXNHZXRTZXQob2JqKQogIG0gPT4KICBtYXBPYmplY3QodGFyZ2V0KQogIHNldDogKGtleSwgdmFsdWUpID0+CiAgZ2V0OiBrZXkgPT4KICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCiAgZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHdlYWtBc3NpZ24ob2JqLCAuLi5hcmdzKQogIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgcHJlZCA9IChlbCwgaSkgPT4KICAoZiwgYXJyID0gW10sIGxlbmd0aCA9IGYubGVuZ3RoKSA9PgogICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAoZWwsIGksIGFycikgPT4KICBpdGVtID0+CiAgKGVsLCBpLCBhcnIpID0+CiAgZ2V0RnVuY3Rpb25Bcmd1bWVudHMgPSBmbiA9PgogIChvZmZzZXQgPSAwKSA9PgogIGNvZGUgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgZ2V0QW5zaVN0eWxlcygpCiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGMgPT4KICB2YWx1ZTogaGV4ID0+CiAgY2hhcmFjdGVyID0+CiAgdmFsdWU6IGhleCA9PgogIHZhbHVlOiBjb2RlID0+CiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIHZhbHVlOiBoZXggPT4KICByYW5kSW50KC4uLmFyZ3MpCiAgcmFuZEZsb2F0KG1pbiwgbWF4LCBybmcgPSBNYXRoLnJhbmRvbSkKICByYW5kU3RyKG4sIHNldCA9ICdfMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonLCBybmcgPSBNYXRoLnJhbmRvbSkKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogIGZ1bmN0aW9uKCkKICB2ID0+CiAgcmVwbGFjZVByb3BlcnR5KHZhbHVlKQogIGxhenlQcm9wZXJ0aWVzKG9iaiwgZ2V0dGVyc09iaiwgb3B0cyA9IHt9KQogIGdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGFyZyA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgb3B0ID0+CiAgdG9Vbml4VGltZShkYXRlT2JqLCB1dGMgPSBmYWxzZSkKICB1bml4VGltZSh1dGMgPSBmYWxzZSkKICBmcm9tVW5peFRpbWUoZXBvY2gsIHV0YyA9IGZhbHNlKQogIHJhbmdlKC4uLmFyZ3MpCiAgKHYsIGspID0+CiAgbiA9PgogIHJlcGVhdGVyKG4sIHdoYXQpCigpCigpCiAgcmVwZWF0KG4sIHdoYXQpCiAgY2h1bmtBcnJheShhcnIsIHNpemUpCiAgZm4gPSAoYSwgdiwgaSkgPT4KICBjYW1lbGl6ZShzdHIsIGRlbGltID0gJycpCiAgKG1hdGNoLCBwMSwgcDIsIG9mZnNldCkgPT4KICBkZWNhbWVsaXplKHN0ciwgZGVsaW0gPSAnLScpCiAgc2hvcnRlbihzdHIsIG1heCA9IDQwLCBzdWZmaXggPSAnLi4uJykKICBhcnJheXNJbkNvbW1vbihhKQooaXRtLCBpbmR4KSA9PgogIGFyciA9PgogIG1vZChhLCBiKQogIGIgOiBuID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					276,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
						"symkeys":
						[
							[
								813,
								836
							],
							[
								1181,
								1205
							],
							[
								1481,
								1487
							],
							[
								1492,
								1512
							],
							[
								1599,
								1603
							],
							[
								1608,
								1656
							],
							[
								2001,
								2017
							],
							[
								2078,
								2096
							],
							[
								2260,
								2279
							],
							[
								2362,
								2400
							],
							[
								2721,
								2742
							],
							[
								2800,
								2817
							],
							[
								2853,
								2880
							],
							[
								3361,
								3377
							],
							[
								3495,
								3514
							],
							[
								3636,
								3653
							],
							[
								3812,
								3833
							],
							[
								4284,
								4288
							],
							[
								4340,
								4344
							],
							[
								4386,
								4419
							],
							[
								4430,
								4433
							],
							[
								4478,
								4494
							],
							[
								4638,
								4672
							],
							[
								4683,
								4686
							],
							[
								4710,
								4716
							],
							[
								4738,
								4753
							],
							[
								4987,
								4995
							],
							[
								5000,
								5023
							],
							[
								5054,
								5073
							],
							[
								5126,
								5142
							],
							[
								5190,
								5220
							],
							[
								5449,
								5481
							],
							[
								5720,
								5763
							],
							[
								6015,
								6033
							],
							[
								6082,
								6089
							],
							[
								6791,
								6799
							],
							[
								6851,
								6861
							],
							[
								7316,
								7350
							],
							[
								7426,
								7442
							],
							[
								7491,
								7518
							],
							[
								7677,
								7709
							],
							[
								8191,
								8209
							],
							[
								8343,
								8355
							],
							[
								8393,
								8405
							],
							[
								8421,
								8431
							],
							[
								8528,
								8537
							],
							[
								8569,
								8587
							],
							[
								8686,
								8707
							],
							[
								8771,
								8789
							],
							[
								9263,
								9277
							],
							[
								9339,
								9346
							],
							[
								9364,
								9388
							],
							[
								9422,
								9441
							],
							[
								9567,
								9583
							],
							[
								9664,
								9678
							],
							[
								9719,
								9732
							],
							[
								9776,
								9791
							],
							[
								9822,
								9836
							],
							[
								9871,
								9881
							],
							[
								9919,
								9944
							],
							[
								10007,
								10028
							],
							[
								10590,
								10604
							],
							[
								10757,
								10780
							],
							[
								10838,
								10854
							],
							[
								11048,
								11063
							],
							[
								11273,
								11296
							],
							[
								11372,
								11376
							],
							[
								11469,
								11491
							],
							[
								11734,
								11749
							],
							[
								11836,
								11843
							],
							[
								11931,
								11939
							],
							[
								11960,
								11976
							],
							[
								12000,
								12008
							],
							[
								12028,
								12056
							],
							[
								12431,
								12439
							],
							[
								12529,
								12533
							],
							[
								12551,
								12574
							],
							[
								12738,
								12748
							],
							[
								12936,
								12954
							],
							[
								13004,
								13023
							],
							[
								13065,
								13075
							],
							[
								13138,
								13149
							],
							[
								13186,
								13197
							],
							[
								13268,
								13280
							],
							[
								13522,
								13526
							],
							[
								13617,
								13621
							],
							[
								13639,
								13662
							],
							[
								13871,
								13881
							],
							[
								13946,
								13957
							],
							[
								14000,
								14012
							],
							[
								14115,
								14125
							],
							[
								14355,
								14370
							],
							[
								14397,
								14401
							],
							[
								14424,
								14428
							],
							[
								14447,
								14451
							],
							[
								14545,
								14607
							],
							[
								14676,
								14708
							],
							[
								14800,
								14822
							],
							[
								14880,
								14923
							],
							[
								15091,
								15116
							],
							[
								15163,
								15193
							],
							[
								15211,
								15229
							],
							[
								16318,
								16353
							],
							[
								16476,
								16492
							],
							[
								16521,
								16542
							]
						],
						"symlist":
						[
							"keyOf = (obj, value) =>",
							"function checkNode(node)",
							"Parser",
							"parseFromString(str)",
							"Node",
							"constructor(obj, parent, proto = Node.prototype)",
							"static raw(node)",
							"static owner(node)",
							"static parent(node)",
							"static hier(node, pred = node => true)",
							"static document(node)",
							"({ nodeType }) =>",
							"static path(arg, path = [])",
							"get parentNode()",
							"get ownerDocument()",
							"get nextSibling()",
							"get previousSibling()",
							"Node",
							"Node",
							"function MakeCache(ctor, store = ",
							"())",
							" (k, ...args) =>",
							"function MakeCache2(ctor, store = ",
							"())",
							"key =>",
							" (id, owner) =>",
							"NodeList",
							"constructor(obj, owner)",
							"isElement = prop =>",
							"isList = prop =>",
							"wrapElement = (value, prop) =>",
							"get: (target, prop, receiver) =>",
							"getOwnPropertyDescriptor: (target, prop) =>",
							"ownKeys: target =>",
							"prop =>",
							"NodeList",
							"get path()",
							" function NamedNodeMap(obj, owner)",
							"isAttr = prop =>",
							"wrapAttr = (value, prop) =>",
							"get: (target, prop, receiver) =>",
							"ownKeys: target =>",
							"NamedNodeMap",
							"NamedNodeMap",
							"get path()",
							"item(key)",
							"setNamedItem(attr)",
							"removeNamedItem(name)",
							"getNamedItem(name)",
							"(acc, prop) =>",
							"Element",
							"constructor(obj, parent)",
							"get parentElement()",
							"get attributes()",
							"set tagName(v)",
							"get tagName()",
							"set nodeName(v)",
							"get nodeName()",
							"get path()",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get children()",
							"get childElementCount()",
							"get firstChild()",
							"get lastChild()",
							"get firstElementChild()",
							"n =>",
							"get lastElementChild()",
							"(obj, owner) =>",
							"Element",
							"Document",
							"constructor(obj)",
							"Document",
							"createAttribute(name, value)",
							"Document",
							"Attr",
							"constructor(raw, owner)",
							"get path()",
							"get ownerElement()",
							"get ownerDocument()",
							"get name()",
							"set name(v)",
							"get value()",
							"set value(v)",
							"Attr",
							"Text",
							"constructor(key, owner)",
							"get path()",
							"get value()",
							"set value(v)",
							"toString()",
							"(key, owner) =>",
							"Text",
							"Node",
							"Text",
							"function Membrane(instance, obj, proto, wrapProp, wrapElement)",
							"get: (target, prop, receiver) =>",
							"has: (target, prop) =>",
							"getOwnPropertyDescriptor: (target, prop) =>",
							"getPrototypeOf: target =>",
							"setPrototypeOf: (target, p) =>",
							"ownKeys: target =>",
							" function Factory(raw, owner, ctor)",
							"isArray = arg =>",
							"isAttributes = arg =>"
						]
					},
					"AQAAAAAAAAAAAAAA7wcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					277,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
						"symkeys":
						[
							[
								278,
								282
							],
							[
								891,
								912
							],
							[
								1009,
								1031
							],
							[
								1144,
								1165
							],
							[
								1360,
								1388
							],
							[
								2082,
								2106
							],
							[
								3268,
								3294
							],
							[
								3460,
								3481
							],
							[
								3617,
								3639
							],
							[
								6240,
								6260
							],
							[
								8117,
								8138
							],
							[
								8506,
								8527
							],
							[
								13134,
								13155
							],
							[
								14350,
								14364
							]
						],
						"symlist":
						[
							"pipe",
							"js_child_process_data",
							"js_child_process_data2",
							"js_child_process_wrap",
							"js_child_process_constructor",
							"js_child_process_inspect",
							"js_child_process_finalizer",
							"js_child_process_exec",
							"js_child_process_spawn",
							"js_child_process_get",
							"js_child_process_wait",
							"js_child_process_kill",
							"js_child_process_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADvBwAAICBrZXlPZiA9IChvYmosIHZhbHVlKSA9PgogIGNoZWNrTm9kZShub2RlKQpQYXJzZXIKICBwYXJzZUZyb21TdHJpbmcoc3RyKQpOb2RlCiAgY29uc3RydWN0b3Iob2JqLCBwYXJlbnQsIHByb3RvID0gTm9kZS5wcm90b3R5cGUpCiAgc3RhdGljIHJhdyhub2RlKQogIHN0YXRpYyBvd25lcihub2RlKQogIHN0YXRpYyBwYXJlbnQobm9kZSkKICBzdGF0aWMgaGllcihub2RlLCBwcmVkID0gbm9kZSA9PiB0cnVlKQogIHN0YXRpYyBkb2N1bWVudChub2RlKQooeyBub2RlVHlwZSB9KSA9PgogIHN0YXRpYyBwYXRoKGFyZywgcGF0aCA9IFtdKQogIGdldCBwYXJlbnROb2RlKCkKICBnZXQgb3duZXJEb2N1bWVudCgpCiAgZ2V0IG5leHRTaWJsaW5nKCkKICBnZXQgcHJldmlvdXNTaWJsaW5nKCkKTm9kZQpOb2RlCk1ha2VDYWNoZShjdG9yLCBzdG9yZSA9IAooKSkKICAoaywgLi4uYXJncykgPT4KTWFrZUNhY2hlMihjdG9yLCBzdG9yZSA9IAooKSkKICBrZXkgPT4KICAoaWQsIG93bmVyKSA9PgpOb2RlTGlzdAogIGNvbnN0cnVjdG9yKG9iaiwgb3duZXIpCiAgaXNFbGVtZW50ID0gcHJvcCA9PgogIGlzTGlzdCA9IHByb3AgPT4KICB3cmFwRWxlbWVudCA9ICh2YWx1ZSwgcHJvcCkgPT4KICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogKHRhcmdldCwgcHJvcCkgPT4KICBvd25LZXlzOiB0YXJnZXQgPT4KICBwcm9wID0+Ck5vZGVMaXN0CiAgZ2V0IHBhdGgoKQpOYW1lZE5vZGVNYXAob2JqLCBvd25lcikKICBpc0F0dHIgPSBwcm9wID0+CiAgd3JhcEF0dHIgPSAodmFsdWUsIHByb3ApID0+CiAgZ2V0OiAodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikgPT4KICBvd25LZXlzOiB0YXJnZXQgPT4KTmFtZWROb2RlTWFwCk5hbWVkTm9kZU1hcAogIGdldCBwYXRoKCkKICBpdGVtKGtleSkKICBzZXROYW1lZEl0ZW0oYXR0cikKICByZW1vdmVOYW1lZEl0ZW0obmFtZSkKICBnZXROYW1lZEl0ZW0obmFtZSkKKGFjYywgcHJvcCkgPT4KRWxlbWVudAogIGNvbnN0cnVjdG9yKG9iaiwgcGFyZW50KQogIGdldCBwYXJlbnRFbGVtZW50KCkKICBnZXQgYXR0cmlidXRlcygpCiAgc2V0IHRhZ05hbWUodikKICBnZXQgdGFnTmFtZSgpCiAgc2V0IG5vZGVOYW1lKHYpCiAgZ2V0IG5vZGVOYW1lKCkKICBnZXQgcGF0aCgpCiAgc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKQogIHJlbW92ZUF0dHJpYnV0ZShuYW1lKQogIGdldCBjaGlsZHJlbigpCiAgZ2V0IGNoaWxkRWxlbWVudENvdW50KCkKICBnZXQgZmlyc3RDaGlsZCgpCiAgZ2V0IGxhc3RDaGlsZCgpCiAgZ2V0IGZpcnN0RWxlbWVudENoaWxkKCkKICBuID0+CiAgZ2V0IGxhc3RFbGVtZW50Q2hpbGQoKQoob2JqLCBvd25lcikgPT4KRWxlbWVudApEb2N1bWVudAogIGNvbnN0cnVjdG9yKG9iaikKRG9jdW1lbnQKICBjcmVhdGVBdHRyaWJ1dGUobmFtZSwgdmFsdWUpCkRvY3VtZW50CkF0dHIKICBjb25zdHJ1Y3RvcihyYXcsIG93bmVyKQogIGdldCBwYXRoKCkKICBnZXQgb3duZXJFbGVtZW50KCkKICBnZXQgb3duZXJEb2N1bWVudCgpCiAgZ2V0IG5hbWUoKQogIHNldCBuYW1lKHYpCiAgZ2V0IHZhbHVlKCkKICBzZXQgdmFsdWUodikKQXR0cgpUZXh0CiAgY29uc3RydWN0b3Ioa2V5LCBvd25lcikKICBnZXQgcGF0aCgpCiAgZ2V0IHZhbHVlKCkKICBzZXQgdmFsdWUodikKICB0b1N0cmluZygpCihrZXksIG93bmVyKSA9PgpUZXh0Ck5vZGUKVGV4dApNZW1icmFuZShpbnN0YW5jZSwgb2JqLCBwcm90bywgd3JhcFByb3AsIHdyYXBFbGVtZW50KQogIGdldDogKHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpID0+CiAgaGFzOiAodGFyZ2V0LCBwcm9wKSA9PgogIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogKHRhcmdldCwgcHJvcCkgPT4KICBnZXRQcm90b3R5cGVPZjogdGFyZ2V0ID0+CiAgc2V0UHJvdG90eXBlT2Y6ICh0YXJnZXQsIHApID0+CiAgb3duS2V5czogdGFyZ2V0ID0+CkZhY3RvcnkocmF3LCBvd25lciwgY3RvcikKICBpc0FycmF5ID0gYXJnID0+CiAgaXNBdHRyaWJ1dGVzID0gYXJnID0+AAAAAAAAAABFAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					278,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								756,
								776
							],
							[
								966,
								982
							],
							[
								1036,
								1055
							],
							[
								1090,
								1106
							],
							[
								1148,
								1163
							],
							[
								1226,
								1260
							],
							[
								1283,
								1315
							],
							[
								1338,
								1381
							],
							[
								3210,
								3229
							],
							[
								3327,
								3343
							],
							[
								3405,
								3423
							],
							[
								3487,
								3506
							],
							[
								3571,
								3580
							],
							[
								3635,
								3652
							],
							[
								3715,
								3732
							],
							[
								3795,
								3809
							],
							[
								3869,
								3884
							],
							[
								3945,
								3960
							],
							[
								4021,
								4029
							],
							[
								4083,
								4095
							],
							[
								4153,
								4163
							],
							[
								4219,
								4230
							],
							[
								4287,
								4295
							],
							[
								4349,
								4371
							],
							[
								4439,
								4454
							],
							[
								4515,
								4537
							],
							[
								4605,
								4621
							],
							[
								4683,
								4699
							],
							[
								4761,
								4773
							],
							[
								4831,
								4843
							],
							[
								4901,
								4914
							],
							[
								4973,
								4991
							],
							[
								5049,
								5067
							],
							[
								5131,
								5153
							],
							[
								5221,
								5248
							],
							[
								5321,
								5338
							],
							[
								5395,
								5412
							],
							[
								5469,
								5486
							],
							[
								5533,
								5549
							],
							[
								5632,
								5648
							],
							[
								5720,
								5736
							],
							[
								5808,
								5825
							],
							[
								5882,
								5902
							],
							[
								5961,
								5981
							],
							[
								6140,
								6159
							],
							[
								6235,
								6242
							],
							[
								6271,
								6291
							],
							[
								6361,
								6376
							],
							[
								6437,
								6463
							],
							[
								6534,
								6550
							],
							[
								6606,
								6619
							],
							[
								6696,
								6714
							],
							[
								6796,
								6809
							],
							[
								6874,
								6888
							],
							[
								6990,
								7016
							],
							[
								7062,
								7087
							],
							[
								7172,
								7214
							],
							[
								7348,
								7388
							],
							[
								10317,
								10360
							],
							[
								10741,
								10776
							],
							[
								10932,
								10950
							],
							[
								10980,
								10985
							],
							[
								11075,
								11102
							],
							[
								11221,
								11256
							],
							[
								11317,
								11321
							],
							[
								11337,
								11341
							],
							[
								11368,
								11377
							],
							[
								11540,
								11573
							],
							[
								11627,
								11659
							],
							[
								11823,
								11847
							],
							[
								12003,
								12024
							],
							[
								12094,
								12100
							],
							[
								12117,
								12133
							],
							[
								12196,
								12202
							],
							[
								12215,
								12231
							],
							[
								12279,
								12309
							],
							[
								12541,
								12568
							],
							[
								12599,
								12626
							],
							[
								12725,
								12752
							],
							[
								12976,
								13000
							],
							[
								13050,
								13054
							],
							[
								13094,
								13121
							],
							[
								13351,
								13371
							],
							[
								13401,
								13412
							],
							[
								13511,
								13546
							],
							[
								13586,
								13604
							],
							[
								13791,
								13812
							],
							[
								13836,
								13846
							],
							[
								13885,
								13915
							],
							[
								14463,
								14497
							],
							[
								14798,
								14832
							],
							[
								15052,
								15086
							],
							[
								15152,
								15188
							],
							[
								15263,
								15280
							],
							[
								15439,
								15476
							],
							[
								15477,
								15491
							],
							[
								15497,
								15501
							],
							[
								15576,
								15608
							],
							[
								15636,
								15662
							],
							[
								15987,
								16009
							],
							[
								16047,
								16063
							],
							[
								16078,
								16085
							],
							[
								16107,
								16123
							],
							[
								16161,
								16189
							],
							[
								16408,
								16425
							],
							[
								16426,
								16435
							],
							[
								16487,
								16504
							],
							[
								16505,
								16514
							],
							[
								16574,
								16591
							],
							[
								16592,
								16615
							],
							[
								16671,
								16695
							],
							[
								19322,
								19350
							],
							[
								19781,
								19785
							],
							[
								19913,
								19926
							],
							[
								20242,
								20254
							],
							[
								20517,
								20530
							],
							[
								20635,
								20649
							],
							[
								21542,
								21570
							],
							[
								21686,
								21699
							],
							[
								21811,
								21837
							],
							[
								22032,
								22080
							],
							[
								22128,
								22240
							],
							[
								22345,
								22368
							],
							[
								22512,
								22564
							],
							[
								22658,
								22674
							],
							[
								22758,
								22769
							],
							[
								22882,
								22886
							],
							[
								23165,
								23198
							],
							[
								23312,
								23364
							],
							[
								23538,
								23574
							],
							[
								23731,
								23747
							],
							[
								23761,
								23783
							],
							[
								23896,
								23902
							],
							[
								25264,
								25306
							],
							[
								25501,
								25532
							],
							[
								25582,
								25624
							],
							[
								25744,
								25768
							],
							[
								25988,
								25998
							],
							[
								26051,
								26055
							],
							[
								26094,
								26121
							],
							[
								26168,
								26180
							],
							[
								26250,
								26262
							],
							[
								26325,
								26350
							],
							[
								26395,
								26426
							],
							[
								26437,
								26454
							],
							[
								26595,
								26630
							],
							[
								26678,
								26705
							],
							[
								26796,
								26834
							],
							[
								27043,
								27091
							],
							[
								27679,
								27706
							],
							[
								27909,
								27923
							],
							[
								27972,
								27978
							],
							[
								28019,
								28038
							],
							[
								28089,
								28097
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							"function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterable(v)",
							"isAsyncIterable(v)",
							"isIterator(v)",
							"isArrayLike(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function memoize(fn, cache = {})",
							" function Memoize(n, ...rest)",
							" function getset(target)",
							"GetSet = (...args) =>",
							"key =>",
							" (key, value) =>",
							"key =>",
							" (key, value) =>",
							" function gettersetter(target)",
							"gettersetter = (...args) =>",
							"gettersetter = (...args) =>",
							"gettersetter = (...args) =>",
							" function hasGetSet(obj)",
							"m =>",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function shorten(str, max = 40, suffix = '...')",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function mod(a, b)",
							"b : n =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABFAQAAICBwaXBlCiAganNfY2hpbGRfcHJvY2Vzc19kYXRhCiAganNfY2hpbGRfcHJvY2Vzc19kYXRhMgogIGpzX2NoaWxkX3Byb2Nlc3Nfd3JhcAogIGpzX2NoaWxkX3Byb2Nlc3NfY29uc3RydWN0b3IKICBqc19jaGlsZF9wcm9jZXNzX2luc3BlY3QKICBqc19jaGlsZF9wcm9jZXNzX2ZpbmFsaXplcgogIGpzX2NoaWxkX3Byb2Nlc3NfZXhlYwogIGpzX2NoaWxkX3Byb2Nlc3Nfc3Bhd24KICBqc19jaGlsZF9wcm9jZXNzX2dldAogIGpzX2NoaWxkX3Byb2Nlc3Nfd2FpdAogIGpzX2NoaWxkX3Byb2Nlc3Nfa2lsbAogIGpzX2NoaWxkX3Byb2Nlc3NfaW5pdApKU19JTklUX01PRFVMRQAAAAAAAAAAdQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					279,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
						"symkeys":
						[
							[
								813,
								836
							],
							[
								1181,
								1205
							],
							[
								1481,
								1487
							],
							[
								1492,
								1512
							],
							[
								1599,
								1603
							],
							[
								1608,
								1656
							],
							[
								2001,
								2017
							],
							[
								2078,
								2096
							],
							[
								2260,
								2279
							],
							[
								2362,
								2400
							],
							[
								2721,
								2742
							],
							[
								2800,
								2817
							],
							[
								2853,
								2880
							],
							[
								3361,
								3377
							],
							[
								3495,
								3514
							],
							[
								3636,
								3653
							],
							[
								3812,
								3833
							],
							[
								4284,
								4288
							],
							[
								4340,
								4344
							],
							[
								4386,
								4419
							],
							[
								4430,
								4433
							],
							[
								4478,
								4494
							],
							[
								4638,
								4672
							],
							[
								4683,
								4686
							],
							[
								4710,
								4716
							],
							[
								4738,
								4753
							],
							[
								4987,
								4995
							],
							[
								5000,
								5023
							],
							[
								5054,
								5073
							],
							[
								5126,
								5142
							],
							[
								5190,
								5220
							],
							[
								5449,
								5481
							],
							[
								5720,
								5763
							],
							[
								6015,
								6033
							],
							[
								6082,
								6089
							],
							[
								6791,
								6799
							],
							[
								6851,
								6861
							],
							[
								7316,
								7350
							],
							[
								7426,
								7442
							],
							[
								7491,
								7518
							],
							[
								7677,
								7709
							],
							[
								8191,
								8209
							],
							[
								8343,
								8355
							],
							[
								8393,
								8405
							],
							[
								8421,
								8431
							],
							[
								8528,
								8537
							],
							[
								8569,
								8587
							],
							[
								8686,
								8707
							],
							[
								8771,
								8789
							],
							[
								9263,
								9277
							],
							[
								9339,
								9346
							],
							[
								9364,
								9388
							],
							[
								9422,
								9441
							],
							[
								9567,
								9583
							],
							[
								9664,
								9678
							],
							[
								9719,
								9732
							],
							[
								9776,
								9791
							],
							[
								9822,
								9836
							],
							[
								9871,
								9881
							],
							[
								9919,
								9944
							],
							[
								10007,
								10028
							],
							[
								10590,
								10604
							],
							[
								10757,
								10780
							],
							[
								10838,
								10854
							],
							[
								11048,
								11063
							],
							[
								11273,
								11296
							],
							[
								11372,
								11376
							],
							[
								11469,
								11491
							],
							[
								11734,
								11749
							],
							[
								11836,
								11843
							],
							[
								11931,
								11939
							],
							[
								11960,
								11976
							],
							[
								12000,
								12008
							],
							[
								12028,
								12056
							],
							[
								12431,
								12439
							],
							[
								12529,
								12533
							],
							[
								12551,
								12574
							],
							[
								12738,
								12748
							],
							[
								12936,
								12954
							],
							[
								13004,
								13023
							],
							[
								13065,
								13075
							],
							[
								13138,
								13149
							],
							[
								13186,
								13197
							],
							[
								13268,
								13280
							],
							[
								13522,
								13526
							],
							[
								13617,
								13621
							],
							[
								13639,
								13662
							],
							[
								13871,
								13881
							],
							[
								13946,
								13957
							],
							[
								14000,
								14012
							],
							[
								14115,
								14125
							],
							[
								14355,
								14370
							],
							[
								14397,
								14401
							],
							[
								14424,
								14428
							],
							[
								14447,
								14451
							],
							[
								14545,
								14607
							],
							[
								14676,
								14708
							],
							[
								14800,
								14822
							],
							[
								14880,
								14923
							],
							[
								15091,
								15116
							],
							[
								15163,
								15193
							],
							[
								15211,
								15229
							],
							[
								16318,
								16353
							],
							[
								16476,
								16492
							],
							[
								16521,
								16542
							]
						],
						"symlist":
						[
							"keyOf = (obj, value) =>",
							"function checkNode(node)",
							"Parser",
							"parseFromString(str)",
							"Node",
							"constructor(obj, parent, proto = Node.prototype)",
							"static raw(node)",
							"static owner(node)",
							"static parent(node)",
							"static hier(node, pred = node => true)",
							"static document(node)",
							"({ nodeType }) =>",
							"static path(arg, path = [])",
							"get parentNode()",
							"get ownerDocument()",
							"get nextSibling()",
							"get previousSibling()",
							"Node",
							"Node",
							"function MakeCache(ctor, store = ",
							"())",
							" (k, ...args) =>",
							"function MakeCache2(ctor, store = ",
							"())",
							"key =>",
							" (id, owner) =>",
							"NodeList",
							"constructor(obj, owner)",
							"isElement = prop =>",
							"isList = prop =>",
							"wrapElement = (value, prop) =>",
							"get: (target, prop, receiver) =>",
							"getOwnPropertyDescriptor: (target, prop) =>",
							"ownKeys: target =>",
							"prop =>",
							"NodeList",
							"get path()",
							" function NamedNodeMap(obj, owner)",
							"isAttr = prop =>",
							"wrapAttr = (value, prop) =>",
							"get: (target, prop, receiver) =>",
							"ownKeys: target =>",
							"NamedNodeMap",
							"NamedNodeMap",
							"get path()",
							"item(key)",
							"setNamedItem(attr)",
							"removeNamedItem(name)",
							"getNamedItem(name)",
							"(acc, prop) =>",
							"Element",
							"constructor(obj, parent)",
							"get parentElement()",
							"get attributes()",
							"set tagName(v)",
							"get tagName()",
							"set nodeName(v)",
							"get nodeName()",
							"get path()",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get children()",
							"get childElementCount()",
							"get firstChild()",
							"get lastChild()",
							"get firstElementChild()",
							"n =>",
							"get lastElementChild()",
							"(obj, owner) =>",
							"Element",
							"Document",
							"constructor(obj)",
							"Document",
							"createAttribute(name, value)",
							"Document",
							"Attr",
							"constructor(raw, owner)",
							"get path()",
							"get ownerElement()",
							"get ownerDocument()",
							"get name()",
							"set name(v)",
							"get value()",
							"set value(v)",
							"Attr",
							"Text",
							"constructor(key, owner)",
							"get path()",
							"get value()",
							"set value(v)",
							"toString()",
							"(key, owner) =>",
							"Text",
							"Node",
							"Text",
							"function Membrane(instance, obj, proto, wrapProp, wrapElement)",
							"get: (target, prop, receiver) =>",
							"has: (target, prop) =>",
							"getOwnPropertyDescriptor: (target, prop) =>",
							"getPrototypeOf: target =>",
							"setPrototypeOf: (target, p) =>",
							"ownKeys: target =>",
							" function Factory(raw, owner, ctor)",
							"isArray = arg =>",
							"isAttributes = arg =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1DAAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzQ29uc3RydWN0b3IodikKICBpc0l0ZXJhYmxlKHYpCiAgaXNBc3luY0l0ZXJhYmxlKHYpCiAgaXNJdGVyYXRvcih2KQogIGlzQXJyYXlMaWtlKHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpCiAgY3RvcgogIGN0b3IKICBzdXBlckN0b3IKICBtZW1vaXplKGZuLCBjYWNoZSA9IHt9KQpNZW1vaXplKG4sIC4uLnJlc3QpCiAgZ2V0c2V0KHRhcmdldCkKR2V0U2V0ID0gKC4uLmFyZ3MpID0+CiAga2V5ID0+CiAgKGtleSwgdmFsdWUpID0+CiAga2V5ID0+CiAgKGtleSwgdmFsdWUpID0+CiAgZ2V0dGVyc2V0dGVyKHRhcmdldCkKICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBnZXR0ZXJzZXR0ZXIgPSAoLi4uYXJncykgPT4KICBoYXNHZXRTZXQob2JqKQogIG0gPT4KICBtYXBPYmplY3QodGFyZ2V0KQogIHNldDogKGtleSwgdmFsdWUpID0+CiAgZ2V0OiBrZXkgPT4KICBvbmNlKGZuLCB0aGlzQXJnLCBtZW1vRm4pCiAgZnVuY3Rpb24oLi4uYXJncykKICB3YWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHdlYWtBc3NpZ24ob2JqLCAuLi5hcmdzKQogIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgcHJlZCA9IChlbCwgaSkgPT4KICAoZiwgYXJyID0gW10sIGxlbmd0aCA9IGYubGVuZ3RoKSA9PgogICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAoZWwsIGksIGFycikgPT4KICBpdGVtID0+CiAgKGVsLCBpLCBhcnIpID0+CiAgZ2V0RnVuY3Rpb25Bcmd1bWVudHMgPSBmbiA9PgogIChvZmZzZXQgPSAwKSA9PgogIGNvZGUgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgZ2V0QW5zaVN0eWxlcygpCiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGMgPT4KICB2YWx1ZTogaGV4ID0+CiAgY2hhcmFjdGVyID0+CiAgdmFsdWU6IGhleCA9PgogIHZhbHVlOiBjb2RlID0+CiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIHZhbHVlOiBoZXggPT4KICByYW5kSW50KC4uLmFyZ3MpCiAgcmFuZEZsb2F0KG1pbiwgbWF4LCBybmcgPSBNYXRoLnJhbmRvbSkKICByYW5kU3RyKG4sIHNldCA9ICdfMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonLCBybmcgPSBNYXRoLnJhbmRvbSkKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogIGZ1bmN0aW9uKCkKICB2ID0+CiAgcmVwbGFjZVByb3BlcnR5KHZhbHVlKQogIGxhenlQcm9wZXJ0aWVzKG9iaiwgZ2V0dGVyc09iaiwgb3B0cyA9IHt9KQogIGdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGFyZyA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgb3B0ID0+CiAgdG9Vbml4VGltZShkYXRlT2JqLCB1dGMgPSBmYWxzZSkKICB1bml4VGltZSh1dGMgPSBmYWxzZSkKICBmcm9tVW5peFRpbWUoZXBvY2gsIHV0YyA9IGZhbHNlKQogIHJhbmdlKC4uLmFyZ3MpCiAgKHYsIGspID0+CiAgbiA9PgogIHJlcGVhdGVyKG4sIHdoYXQpCigpCigpCiAgcmVwZWF0KG4sIHdoYXQpCiAgY2h1bmtBcnJheShhcnIsIHNpemUpCiAgZm4gPSAoYSwgdiwgaSkgPT4KICBjYW1lbGl6ZShzdHIsIGRlbGltID0gJycpCiAgKG1hdGNoLCBwMSwgcDIsIG9mZnNldCkgPT4KICBkZWNhbWVsaXplKHN0ciwgZGVsaW0gPSAnLScpCiAgc2hvcnRlbihzdHIsIG1heCA9IDQwLCBzdWZmaXggPSAnLi4uJykKICBhcnJheXNJbkNvbW1vbihhKQooaXRtLCBpbmR4KSA9PgogIGFyciA9PgogIG1vZChhLCBiKQogIGIgOiBuID0+AAAAAAAAAADvBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					280,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADvBwAAICBrZXlPZiA9IChvYmosIHZhbHVlKSA9PgogIGNoZWNrTm9kZShub2RlKQpQYXJzZXIKICBwYXJzZUZyb21TdHJpbmcoc3RyKQpOb2RlCiAgY29uc3RydWN0b3Iob2JqLCBwYXJlbnQsIHByb3RvID0gTm9kZS5wcm90b3R5cGUpCiAgc3RhdGljIHJhdyhub2RlKQogIHN0YXRpYyBvd25lcihub2RlKQogIHN0YXRpYyBwYXJlbnQobm9kZSkKICBzdGF0aWMgaGllcihub2RlLCBwcmVkID0gbm9kZSA9PiB0cnVlKQogIHN0YXRpYyBkb2N1bWVudChub2RlKQooeyBub2RlVHlwZSB9KSA9PgogIHN0YXRpYyBwYXRoKGFyZywgcGF0aCA9IFtdKQogIGdldCBwYXJlbnROb2RlKCkKICBnZXQgb3duZXJEb2N1bWVudCgpCiAgZ2V0IG5leHRTaWJsaW5nKCkKICBnZXQgcHJldmlvdXNTaWJsaW5nKCkKTm9kZQpOb2RlCk1ha2VDYWNoZShjdG9yLCBzdG9yZSA9IAooKSkKICAoaywgLi4uYXJncykgPT4KTWFrZUNhY2hlMihjdG9yLCBzdG9yZSA9IAooKSkKICBrZXkgPT4KICAoaWQsIG93bmVyKSA9PgpOb2RlTGlzdAogIGNvbnN0cnVjdG9yKG9iaiwgb3duZXIpCiAgaXNFbGVtZW50ID0gcHJvcCA9PgogIGlzTGlzdCA9IHByb3AgPT4KICB3cmFwRWxlbWVudCA9ICh2YWx1ZSwgcHJvcCkgPT4KICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogKHRhcmdldCwgcHJvcCkgPT4KICBvd25LZXlzOiB0YXJnZXQgPT4KICBwcm9wID0+Ck5vZGVMaXN0CiAgZ2V0IHBhdGgoKQpOYW1lZE5vZGVNYXAob2JqLCBvd25lcikKICBpc0F0dHIgPSBwcm9wID0+CiAgd3JhcEF0dHIgPSAodmFsdWUsIHByb3ApID0+CiAgZ2V0OiAodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikgPT4KICBvd25LZXlzOiB0YXJnZXQgPT4KTmFtZWROb2RlTWFwCk5hbWVkTm9kZU1hcAogIGdldCBwYXRoKCkKICBpdGVtKGtleSkKICBzZXROYW1lZEl0ZW0oYXR0cikKICByZW1vdmVOYW1lZEl0ZW0obmFtZSkKICBnZXROYW1lZEl0ZW0obmFtZSkKKGFjYywgcHJvcCkgPT4KRWxlbWVudAogIGNvbnN0cnVjdG9yKG9iaiwgcGFyZW50KQogIGdldCBwYXJlbnRFbGVtZW50KCkKICBnZXQgYXR0cmlidXRlcygpCiAgc2V0IHRhZ05hbWUodikKICBnZXQgdGFnTmFtZSgpCiAgc2V0IG5vZGVOYW1lKHYpCiAgZ2V0IG5vZGVOYW1lKCkKICBnZXQgcGF0aCgpCiAgc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKQogIHJlbW92ZUF0dHJpYnV0ZShuYW1lKQogIGdldCBjaGlsZHJlbigpCiAgZ2V0IGNoaWxkRWxlbWVudENvdW50KCkKICBnZXQgZmlyc3RDaGlsZCgpCiAgZ2V0IGxhc3RDaGlsZCgpCiAgZ2V0IGZpcnN0RWxlbWVudENoaWxkKCkKICBuID0+CiAgZ2V0IGxhc3RFbGVtZW50Q2hpbGQoKQoob2JqLCBvd25lcikgPT4KRWxlbWVudApEb2N1bWVudAogIGNvbnN0cnVjdG9yKG9iaikKRG9jdW1lbnQKICBjcmVhdGVBdHRyaWJ1dGUobmFtZSwgdmFsdWUpCkRvY3VtZW50CkF0dHIKICBjb25zdHJ1Y3RvcihyYXcsIG93bmVyKQogIGdldCBwYXRoKCkKICBnZXQgb3duZXJFbGVtZW50KCkKICBnZXQgb3duZXJEb2N1bWVudCgpCiAgZ2V0IG5hbWUoKQogIHNldCBuYW1lKHYpCiAgZ2V0IHZhbHVlKCkKICBzZXQgdmFsdWUodikKQXR0cgpUZXh0CiAgY29uc3RydWN0b3Ioa2V5LCBvd25lcikKICBnZXQgcGF0aCgpCiAgZ2V0IHZhbHVlKCkKICBzZXQgdmFsdWUodikKICB0b1N0cmluZygpCihrZXksIG93bmVyKSA9PgpUZXh0Ck5vZGUKVGV4dApNZW1icmFuZShpbnN0YW5jZSwgb2JqLCBwcm90bywgd3JhcFByb3AsIHdyYXBFbGVtZW50KQogIGdldDogKHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpID0+CiAgaGFzOiAodGFyZ2V0LCBwcm9wKSA9PgogIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogKHRhcmdldCwgcHJvcCkgPT4KICBnZXRQcm90b3R5cGVPZjogdGFyZ2V0ID0+CiAgc2V0UHJvdG90eXBlT2Y6ICh0YXJnZXQsIHApID0+CiAgb3duS2V5czogdGFyZ2V0ID0+CkZhY3RvcnkocmF3LCBvd25lciwgY3RvcikKICBpc0FycmF5ID0gYXJnID0+CiAgaXNBdHRyaWJ1dGVzID0gYXJnID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					281,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
						"symkeys":
						[
							[
								813,
								836
							],
							[
								1181,
								1205
							],
							[
								1481,
								1487
							],
							[
								1492,
								1512
							],
							[
								1599,
								1603
							],
							[
								1608,
								1656
							],
							[
								2001,
								2017
							],
							[
								2078,
								2096
							],
							[
								2260,
								2279
							],
							[
								2362,
								2400
							],
							[
								2721,
								2742
							],
							[
								2800,
								2817
							],
							[
								2853,
								2880
							],
							[
								3361,
								3377
							],
							[
								3495,
								3514
							],
							[
								3636,
								3653
							],
							[
								3812,
								3833
							],
							[
								4284,
								4288
							],
							[
								4340,
								4344
							],
							[
								4386,
								4419
							],
							[
								4430,
								4433
							],
							[
								4478,
								4494
							],
							[
								4638,
								4672
							],
							[
								4683,
								4686
							],
							[
								4710,
								4716
							],
							[
								4738,
								4753
							],
							[
								4987,
								4995
							],
							[
								5000,
								5023
							],
							[
								5054,
								5073
							],
							[
								5126,
								5142
							],
							[
								5190,
								5220
							],
							[
								5449,
								5481
							],
							[
								5720,
								5763
							],
							[
								6015,
								6033
							],
							[
								6082,
								6089
							],
							[
								6791,
								6799
							],
							[
								6851,
								6861
							],
							[
								7316,
								7350
							],
							[
								7426,
								7442
							],
							[
								7491,
								7518
							],
							[
								7677,
								7709
							],
							[
								8191,
								8209
							],
							[
								8343,
								8355
							],
							[
								8393,
								8405
							],
							[
								8421,
								8431
							],
							[
								8528,
								8537
							],
							[
								8569,
								8587
							],
							[
								8686,
								8707
							],
							[
								8771,
								8789
							],
							[
								9263,
								9277
							],
							[
								9339,
								9346
							],
							[
								9364,
								9388
							],
							[
								9422,
								9441
							],
							[
								9567,
								9583
							],
							[
								9664,
								9678
							],
							[
								9719,
								9732
							],
							[
								9776,
								9791
							],
							[
								9822,
								9836
							],
							[
								9871,
								9881
							],
							[
								9919,
								9944
							],
							[
								10007,
								10028
							],
							[
								10590,
								10604
							],
							[
								10757,
								10780
							],
							[
								10838,
								10854
							],
							[
								11048,
								11063
							],
							[
								11273,
								11296
							],
							[
								11372,
								11376
							],
							[
								11469,
								11491
							],
							[
								11734,
								11749
							],
							[
								11836,
								11843
							],
							[
								11931,
								11939
							],
							[
								11960,
								11976
							],
							[
								12000,
								12008
							],
							[
								12028,
								12056
							],
							[
								12431,
								12439
							],
							[
								12529,
								12533
							],
							[
								12551,
								12574
							],
							[
								12738,
								12748
							],
							[
								12936,
								12954
							],
							[
								13004,
								13023
							],
							[
								13065,
								13075
							],
							[
								13138,
								13149
							],
							[
								13186,
								13197
							],
							[
								13268,
								13280
							],
							[
								13522,
								13526
							],
							[
								13617,
								13621
							],
							[
								13639,
								13662
							],
							[
								13871,
								13881
							],
							[
								13946,
								13957
							],
							[
								14000,
								14012
							],
							[
								14115,
								14125
							],
							[
								14355,
								14370
							],
							[
								14397,
								14401
							],
							[
								14424,
								14428
							],
							[
								14447,
								14451
							],
							[
								14545,
								14607
							],
							[
								14676,
								14708
							],
							[
								14800,
								14822
							],
							[
								14880,
								14923
							],
							[
								15091,
								15116
							],
							[
								15163,
								15193
							],
							[
								15211,
								15229
							],
							[
								16318,
								16353
							],
							[
								16476,
								16492
							],
							[
								16521,
								16542
							]
						],
						"symlist":
						[
							"keyOf = (obj, value) =>",
							"function checkNode(node)",
							"Parser",
							"parseFromString(str)",
							"Node",
							"constructor(obj, parent, proto = Node.prototype)",
							"static raw(node)",
							"static owner(node)",
							"static parent(node)",
							"static hier(node, pred = node => true)",
							"static document(node)",
							"({ nodeType }) =>",
							"static path(arg, path = [])",
							"get parentNode()",
							"get ownerDocument()",
							"get nextSibling()",
							"get previousSibling()",
							"Node",
							"Node",
							"function MakeCache(ctor, store = ",
							"())",
							" (k, ...args) =>",
							"function MakeCache2(ctor, store = ",
							"())",
							"key =>",
							" (id, owner) =>",
							"NodeList",
							"constructor(obj, owner)",
							"isElement = prop =>",
							"isList = prop =>",
							"wrapElement = (value, prop) =>",
							"get: (target, prop, receiver) =>",
							"getOwnPropertyDescriptor: (target, prop) =>",
							"ownKeys: target =>",
							"prop =>",
							"NodeList",
							"get path()",
							" function NamedNodeMap(obj, owner)",
							"isAttr = prop =>",
							"wrapAttr = (value, prop) =>",
							"get: (target, prop, receiver) =>",
							"ownKeys: target =>",
							"NamedNodeMap",
							"NamedNodeMap",
							"get path()",
							"item(key)",
							"setNamedItem(attr)",
							"removeNamedItem(name)",
							"getNamedItem(name)",
							"(acc, prop) =>",
							"Element",
							"constructor(obj, parent)",
							"get parentElement()",
							"get attributes()",
							"set tagName(v)",
							"get tagName()",
							"set nodeName(v)",
							"get nodeName()",
							"get path()",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get children()",
							"get childElementCount()",
							"get firstChild()",
							"get lastChild()",
							"get firstElementChild()",
							"n =>",
							"get lastElementChild()",
							"(obj, owner) =>",
							"Element",
							"Document",
							"constructor(obj)",
							"Document",
							"createAttribute(name, value)",
							"Document",
							"Attr",
							"constructor(raw, owner)",
							"get path()",
							"get ownerElement()",
							"get ownerDocument()",
							"get name()",
							"set name(v)",
							"get value()",
							"set value(v)",
							"Attr",
							"Text",
							"constructor(key, owner)",
							"get path()",
							"get value()",
							"set value(v)",
							"toString()",
							"(key, owner) =>",
							"Text",
							"Node",
							"Text",
							"function Membrane(instance, obj, proto, wrapProp, wrapElement)",
							"get: (target, prop, receiver) =>",
							"has: (target, prop) =>",
							"getOwnPropertyDescriptor: (target, prop) =>",
							"getPrototypeOf: target =>",
							"setPrototypeOf: (target, p) =>",
							"ownKeys: target =>",
							" function Factory(raw, owner, ctor)",
							"isArray = arg =>",
							"isAttributes = arg =>"
						]
					},
					"AQAAAAAAAAAAAAAA7wcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								230,
								249
							],
							[
								730,
								741
							],
							[
								749,
								771
							],
							[
								1064,
								1074
							],
							[
								1351,
								1360
							],
							[
								1687,
								1697
							],
							[
								1832,
								1844
							],
							[
								2121,
								2131
							],
							[
								2187,
								2197
							],
							[
								2334,
								2345
							],
							[
								2380,
								2395
							],
							[
								2432,
								2440
							],
							[
								2494,
								2502
							],
							[
								2866,
								2882
							],
							[
								3172,
								3190
							],
							[
								3424,
								3442
							],
							[
								3713,
								3733
							],
							[
								4635,
								4651
							],
							[
								4740,
								4756
							],
							[
								5396,
								5410
							],
							[
								5884,
								5901
							],
							[
								7594,
								7611
							],
							[
								8226,
								8246
							],
							[
								9371,
								9383
							],
							[
								15054,
								15065
							],
							[
								15865,
								15882
							],
							[
								17184,
								17201
							],
							[
								18802,
								18814
							],
							[
								20029,
								20040
							],
							[
								20331,
								20345
							]
						],
						"symlist":
						[
							"js_inspect_tostring",
							"OutputValue",
							"character_classes_init",
							"yield_push",
							"yield_pop",
							"yield_next",
							"yield_return",
							"parse_getc",
							"parse_skip",
							"parse_until",
							"parse_skipspace",
							"parse_is",
							"find_tag",
							"xml_num_children",
							"xml_set_attr_value",
							"xml_set_attr_bytes",
							"xml_write_attributes",
							"xml_write_indent",
							"xml_write_string",
							"xml_write_text",
							"xml_write_element",
							"xml_close_element",
							"xml_enumeration_next",
							"js_xml_parse",
							"js_xml_read",
							"js_xml_write_tree",
							"js_xml_write_list",
							"js_xml_write",
							"js_xml_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADvBwAAICBrZXlPZiA9IChvYmosIHZhbHVlKSA9PgogIGNoZWNrTm9kZShub2RlKQpQYXJzZXIKICBwYXJzZUZyb21TdHJpbmcoc3RyKQpOb2RlCiAgY29uc3RydWN0b3Iob2JqLCBwYXJlbnQsIHByb3RvID0gTm9kZS5wcm90b3R5cGUpCiAgc3RhdGljIHJhdyhub2RlKQogIHN0YXRpYyBvd25lcihub2RlKQogIHN0YXRpYyBwYXJlbnQobm9kZSkKICBzdGF0aWMgaGllcihub2RlLCBwcmVkID0gbm9kZSA9PiB0cnVlKQogIHN0YXRpYyBkb2N1bWVudChub2RlKQooeyBub2RlVHlwZSB9KSA9PgogIHN0YXRpYyBwYXRoKGFyZywgcGF0aCA9IFtdKQogIGdldCBwYXJlbnROb2RlKCkKICBnZXQgb3duZXJEb2N1bWVudCgpCiAgZ2V0IG5leHRTaWJsaW5nKCkKICBnZXQgcHJldmlvdXNTaWJsaW5nKCkKTm9kZQpOb2RlCk1ha2VDYWNoZShjdG9yLCBzdG9yZSA9IAooKSkKICAoaywgLi4uYXJncykgPT4KTWFrZUNhY2hlMihjdG9yLCBzdG9yZSA9IAooKSkKICBrZXkgPT4KICAoaWQsIG93bmVyKSA9PgpOb2RlTGlzdAogIGNvbnN0cnVjdG9yKG9iaiwgb3duZXIpCiAgaXNFbGVtZW50ID0gcHJvcCA9PgogIGlzTGlzdCA9IHByb3AgPT4KICB3cmFwRWxlbWVudCA9ICh2YWx1ZSwgcHJvcCkgPT4KICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogKHRhcmdldCwgcHJvcCkgPT4KICBvd25LZXlzOiB0YXJnZXQgPT4KICBwcm9wID0+Ck5vZGVMaXN0CiAgZ2V0IHBhdGgoKQpOYW1lZE5vZGVNYXAob2JqLCBvd25lcikKICBpc0F0dHIgPSBwcm9wID0+CiAgd3JhcEF0dHIgPSAodmFsdWUsIHByb3ApID0+CiAgZ2V0OiAodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikgPT4KICBvd25LZXlzOiB0YXJnZXQgPT4KTmFtZWROb2RlTWFwCk5hbWVkTm9kZU1hcAogIGdldCBwYXRoKCkKICBpdGVtKGtleSkKICBzZXROYW1lZEl0ZW0oYXR0cikKICByZW1vdmVOYW1lZEl0ZW0obmFtZSkKICBnZXROYW1lZEl0ZW0obmFtZSkKKGFjYywgcHJvcCkgPT4KRWxlbWVudAogIGNvbnN0cnVjdG9yKG9iaiwgcGFyZW50KQogIGdldCBwYXJlbnRFbGVtZW50KCkKICBnZXQgYXR0cmlidXRlcygpCiAgc2V0IHRhZ05hbWUodikKICBnZXQgdGFnTmFtZSgpCiAgc2V0IG5vZGVOYW1lKHYpCiAgZ2V0IG5vZGVOYW1lKCkKICBnZXQgcGF0aCgpCiAgc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKQogIHJlbW92ZUF0dHJpYnV0ZShuYW1lKQogIGdldCBjaGlsZHJlbigpCiAgZ2V0IGNoaWxkRWxlbWVudENvdW50KCkKICBnZXQgZmlyc3RDaGlsZCgpCiAgZ2V0IGxhc3RDaGlsZCgpCiAgZ2V0IGZpcnN0RWxlbWVudENoaWxkKCkKICBuID0+CiAgZ2V0IGxhc3RFbGVtZW50Q2hpbGQoKQoob2JqLCBvd25lcikgPT4KRWxlbWVudApEb2N1bWVudAogIGNvbnN0cnVjdG9yKG9iaikKRG9jdW1lbnQKICBjcmVhdGVBdHRyaWJ1dGUobmFtZSwgdmFsdWUpCkRvY3VtZW50CkF0dHIKICBjb25zdHJ1Y3RvcihyYXcsIG93bmVyKQogIGdldCBwYXRoKCkKICBnZXQgb3duZXJFbGVtZW50KCkKICBnZXQgb3duZXJEb2N1bWVudCgpCiAgZ2V0IG5hbWUoKQogIHNldCBuYW1lKHYpCiAgZ2V0IHZhbHVlKCkKICBzZXQgdmFsdWUodikKQXR0cgpUZXh0CiAgY29uc3RydWN0b3Ioa2V5LCBvd25lcikKICBnZXQgcGF0aCgpCiAgZ2V0IHZhbHVlKCkKICBzZXQgdmFsdWUodikKICB0b1N0cmluZygpCihrZXksIG93bmVyKSA9PgpUZXh0Ck5vZGUKVGV4dApNZW1icmFuZShpbnN0YW5jZSwgb2JqLCBwcm90bywgd3JhcFByb3AsIHdyYXBFbGVtZW50KQogIGdldDogKHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpID0+CiAgaGFzOiAodGFyZ2V0LCBwcm9wKSA9PgogIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogKHRhcmdldCwgcHJvcCkgPT4KICBnZXRQcm90b3R5cGVPZjogdGFyZ2V0ID0+CiAgc2V0UHJvdG90eXBlT2Y6ICh0YXJnZXQsIHApID0+CiAgb3duS2V5czogdGFyZ2V0ID0+CkZhY3RvcnkocmF3LCBvd25lciwgY3RvcikKICBpc0FycmF5ID0gYXJnID0+CiAgaXNBdHRyaWJ1dGVzID0gYXJnID0+AAAAAAAAAAD6AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAQAAAAAAAI0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					8,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					9,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								230,
								249
							],
							[
								730,
								741
							],
							[
								749,
								771
							],
							[
								1064,
								1074
							],
							[
								1351,
								1360
							],
							[
								1687,
								1697
							],
							[
								1832,
								1844
							],
							[
								2121,
								2131
							],
							[
								2187,
								2197
							],
							[
								2334,
								2345
							],
							[
								2380,
								2395
							],
							[
								2432,
								2440
							],
							[
								2494,
								2502
							],
							[
								2866,
								2882
							],
							[
								3172,
								3190
							],
							[
								3424,
								3442
							],
							[
								3713,
								3733
							],
							[
								4635,
								4651
							],
							[
								4740,
								4756
							],
							[
								5396,
								5410
							],
							[
								5884,
								5901
							],
							[
								7594,
								7611
							],
							[
								8226,
								8246
							],
							[
								9371,
								9383
							],
							[
								15054,
								15065
							],
							[
								15865,
								15882
							],
							[
								17184,
								17201
							],
							[
								18802,
								18814
							],
							[
								20029,
								20040
							],
							[
								20331,
								20345
							]
						],
						"symlist":
						[
							"js_inspect_tostring",
							"OutputValue",
							"character_classes_init",
							"yield_push",
							"yield_pop",
							"yield_next",
							"yield_return",
							"parse_getc",
							"parse_skip",
							"parse_until",
							"parse_skipspace",
							"parse_is",
							"find_tag",
							"xml_num_children",
							"xml_set_attr_value",
							"xml_set_attr_bytes",
							"xml_write_attributes",
							"xml_write_indent",
							"xml_write_string",
							"xml_write_text",
							"xml_write_element",
							"xml_close_element",
							"xml_enumeration_next",
							"js_xml_parse",
							"js_xml_read",
							"js_xml_write_tree",
							"js_xml_write_list",
							"js_xml_write",
							"js_xml_init",
							"JS_INIT_MODULE"
						]
					},
					"AwAAAAAAAAAAAAAA+gEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPoBAAAgIGpzX2luc3BlY3RfdG9zdHJpbmcKT3V0cHV0VmFsdWUKICBjaGFyYWN0ZXJfY2xhc3Nlc19pbml0CiAgeWllbGRfcHVzaAogIHlpZWxkX3BvcAogIHlpZWxkX25leHQKICB5aWVsZF9yZXR1cm4KICBwYXJzZV9nZXRjCiAgcGFyc2Vfc2tpcAogIHBhcnNlX3VudGlsCiAgcGFyc2Vfc2tpcHNwYWNlCiAgcGFyc2VfaXMKICBmaW5kX3RhZwogIHhtbF9udW1fY2hpbGRyZW4KICB4bWxfc2V0X2F0dHJfdmFsdWUKICB4bWxfc2V0X2F0dHJfYnl0ZXMKICB4bWxfd3JpdGVfYXR0cmlidXRlcwogIHhtbF93cml0ZV9pbmRlbnQKICB4bWxfd3JpdGVfc3RyaW5nCiAgeG1sX3dyaXRlX3RleHQKICB4bWxfd3JpdGVfZWxlbWVudAogIHhtbF9jbG9zZV9lbGVtZW50CiAgeG1sX2VudW1lcmF0aW9uX25leHQKICBqc194bWxfcGFyc2UKICBqc194bWxfcmVhZAogIGpzX3htbF93cml0ZV90cmVlCiAganNfeG1sX3dyaXRlX2xpc3QKICBqc194bWxfd3JpdGUKICBqc194bWxfaW5pdApKU19JTklUX01PRFVMRQAAAAAAAAAA+gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					14,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjAQAAAAAAAKMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
						"symkeys":
						[
							[
								131,
								145
							],
							[
								483,
								500
							],
							[
								672,
								685
							],
							[
								905,
								921
							],
							[
								1095,
								1108
							],
							[
								1212,
								1225
							],
							[
								1335,
								1347
							],
							[
								1540,
								1552
							],
							[
								1745,
								1764
							],
							[
								2126,
								2142
							],
							[
								2299,
								2313
							],
							[
								2602,
								2615
							],
							[
								2954,
								2968
							],
							[
								3353,
								3365
							]
						],
						"symlist":
						[
							"location_print",
							"location_tostring",
							"location_file",
							"location_tovalue",
							"location_init",
							"location_zero",
							"location_add",
							"location_sub",
							"location_release_rt",
							"location_free_rt",
							"location_count",
							"location_copy",
							"location_clone",
							"location_new"
						]
					},
					"AQAAAAAAAAAAAAAA7wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								230,
								249
							],
							[
								730,
								741
							],
							[
								749,
								771
							],
							[
								1064,
								1074
							],
							[
								1351,
								1360
							],
							[
								1687,
								1697
							],
							[
								1832,
								1844
							],
							[
								2121,
								2131
							],
							[
								2187,
								2197
							],
							[
								2334,
								2345
							],
							[
								2380,
								2395
							],
							[
								2432,
								2440
							],
							[
								2494,
								2502
							],
							[
								2866,
								2882
							],
							[
								3172,
								3190
							],
							[
								3424,
								3442
							],
							[
								3713,
								3733
							],
							[
								4635,
								4651
							],
							[
								4740,
								4756
							],
							[
								5396,
								5410
							],
							[
								5884,
								5901
							],
							[
								7594,
								7611
							],
							[
								8226,
								8246
							],
							[
								9371,
								9383
							],
							[
								15054,
								15065
							],
							[
								15865,
								15882
							],
							[
								17184,
								17201
							],
							[
								18802,
								18814
							],
							[
								20029,
								20040
							],
							[
								20331,
								20345
							]
						],
						"symlist":
						[
							"js_inspect_tostring",
							"OutputValue",
							"character_classes_init",
							"yield_push",
							"yield_pop",
							"yield_next",
							"yield_return",
							"parse_getc",
							"parse_skip",
							"parse_until",
							"parse_skipspace",
							"parse_is",
							"find_tag",
							"xml_num_children",
							"xml_set_attr_value",
							"xml_set_attr_bytes",
							"xml_write_attributes",
							"xml_write_indent",
							"xml_write_string",
							"xml_write_text",
							"xml_write_element",
							"xml_close_element",
							"xml_enumeration_next",
							"js_xml_parse",
							"js_xml_read",
							"js_xml_write_tree",
							"js_xml_write_list",
							"js_xml_write",
							"js_xml_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADvAAAAICBsb2NhdGlvbl9wcmludAogIGxvY2F0aW9uX3Rvc3RyaW5nCiAgbG9jYXRpb25fZmlsZQogIGxvY2F0aW9uX3RvdmFsdWUKICBsb2NhdGlvbl9pbml0CiAgbG9jYXRpb25femVybwogIGxvY2F0aW9uX2FkZAogIGxvY2F0aW9uX3N1YgogIGxvY2F0aW9uX3JlbGVhc2VfcnQKICBsb2NhdGlvbl9mcmVlX3J0CiAgbG9jYXRpb25fY291bnQKICBsb2NhdGlvbl9jb3B5CiAgbG9jYXRpb25fY2xvbmUKICBsb2NhdGlvbl9uZXcAAAAAAAAAAPoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					17,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								230,
								249
							],
							[
								730,
								741
							],
							[
								749,
								771
							],
							[
								1064,
								1074
							],
							[
								1351,
								1360
							],
							[
								1687,
								1697
							],
							[
								1832,
								1844
							],
							[
								2121,
								2131
							],
							[
								2187,
								2197
							],
							[
								2334,
								2345
							],
							[
								2380,
								2395
							],
							[
								2432,
								2440
							],
							[
								2494,
								2502
							],
							[
								2866,
								2882
							],
							[
								3172,
								3190
							],
							[
								3424,
								3442
							],
							[
								3713,
								3733
							],
							[
								4635,
								4651
							],
							[
								4740,
								4756
							],
							[
								5396,
								5410
							],
							[
								5884,
								5901
							],
							[
								7594,
								7611
							],
							[
								8226,
								8246
							],
							[
								9371,
								9383
							],
							[
								15073,
								15084
							],
							[
								15884,
								15901
							],
							[
								17203,
								17220
							],
							[
								18821,
								18833
							],
							[
								20048,
								20059
							],
							[
								20350,
								20364
							]
						],
						"symlist":
						[
							"js_inspect_tostring",
							"OutputValue",
							"character_classes_init",
							"yield_push",
							"yield_pop",
							"yield_next",
							"yield_return",
							"parse_getc",
							"parse_skip",
							"parse_until",
							"parse_skipspace",
							"parse_is",
							"find_tag",
							"xml_num_children",
							"xml_set_attr_value",
							"xml_set_attr_bytes",
							"xml_write_attributes",
							"xml_write_indent",
							"xml_write_string",
							"xml_write_text",
							"xml_write_element",
							"xml_close_element",
							"xml_enumeration_next",
							"js_xml_parse",
							"js_xml_read",
							"js_xml_write_tree",
							"js_xml_write_list",
							"js_xml_write",
							"js_xml_init",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAPoBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAPoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					18,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								230,
								249
							],
							[
								730,
								741
							],
							[
								749,
								771
							],
							[
								1064,
								1074
							],
							[
								1351,
								1360
							],
							[
								1687,
								1697
							],
							[
								1832,
								1844
							],
							[
								2121,
								2131
							],
							[
								2187,
								2197
							],
							[
								2334,
								2345
							],
							[
								2380,
								2395
							],
							[
								2432,
								2440
							],
							[
								2494,
								2502
							],
							[
								2866,
								2882
							],
							[
								3172,
								3190
							],
							[
								3424,
								3442
							],
							[
								3713,
								3733
							],
							[
								4635,
								4651
							],
							[
								4740,
								4756
							],
							[
								5396,
								5410
							],
							[
								5884,
								5901
							],
							[
								7594,
								7611
							],
							[
								8226,
								8246
							],
							[
								9371,
								9383
							],
							[
								15076,
								15087
							],
							[
								15887,
								15904
							],
							[
								17206,
								17223
							],
							[
								18824,
								18836
							],
							[
								20051,
								20062
							],
							[
								20353,
								20367
							]
						],
						"symlist":
						[
							"js_inspect_tostring",
							"OutputValue",
							"character_classes_init",
							"yield_push",
							"yield_pop",
							"yield_next",
							"yield_return",
							"parse_getc",
							"parse_skip",
							"parse_until",
							"parse_skipspace",
							"parse_is",
							"find_tag",
							"xml_num_children",
							"xml_set_attr_value",
							"xml_set_attr_bytes",
							"xml_write_attributes",
							"xml_write_indent",
							"xml_write_string",
							"xml_write_text",
							"xml_write_element",
							"xml_close_element",
							"xml_enumeration_next",
							"js_xml_parse",
							"js_xml_read",
							"js_xml_write_tree",
							"js_xml_write_list",
							"js_xml_write",
							"js_xml_init",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAPoBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAPoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								230,
								249
							],
							[
								730,
								741
							],
							[
								749,
								771
							],
							[
								1064,
								1074
							],
							[
								1351,
								1360
							],
							[
								1687,
								1697
							],
							[
								1832,
								1844
							],
							[
								2121,
								2131
							],
							[
								2187,
								2197
							],
							[
								2334,
								2345
							],
							[
								2380,
								2395
							],
							[
								2432,
								2440
							],
							[
								2494,
								2502
							],
							[
								2866,
								2882
							],
							[
								3172,
								3190
							],
							[
								3424,
								3442
							],
							[
								3713,
								3733
							],
							[
								4635,
								4651
							],
							[
								4740,
								4756
							],
							[
								5396,
								5410
							],
							[
								5884,
								5901
							],
							[
								7594,
								7611
							],
							[
								8226,
								8246
							],
							[
								9371,
								9383
							],
							[
								15080,
								15091
							],
							[
								15891,
								15908
							],
							[
								17210,
								17227
							],
							[
								18828,
								18840
							],
							[
								20055,
								20066
							],
							[
								20357,
								20371
							]
						],
						"symlist":
						[
							"js_inspect_tostring",
							"OutputValue",
							"character_classes_init",
							"yield_push",
							"yield_pop",
							"yield_next",
							"yield_return",
							"parse_getc",
							"parse_skip",
							"parse_until",
							"parse_skipspace",
							"parse_is",
							"find_tag",
							"xml_num_children",
							"xml_set_attr_value",
							"xml_set_attr_bytes",
							"xml_write_attributes",
							"xml_write_indent",
							"xml_write_string",
							"xml_write_text",
							"xml_write_element",
							"xml_close_element",
							"xml_enumeration_next",
							"js_xml_parse",
							"js_xml_read",
							"js_xml_write_tree",
							"js_xml_write_list",
							"js_xml_write",
							"js_xml_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAPoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
						"symkeys":
						[
							[
								304,
								312
							],
							[
								320,
								334
							],
							[
								380,
								397
							],
							[
								434,
								447
							],
							[
								486,
								502
							],
							[
								538,
								551
							],
							[
								569,
								582
							],
							[
								600,
								612
							],
							[
								647,
								659
							],
							[
								694,
								713
							],
							[
								748,
								764
							],
							[
								795,
								809
							],
							[
								853,
								866
							],
							[
								918,
								932
							],
							[
								973,
								985
							],
							[
								1019,
								1035
							],
							[
								1151,
								1164
							],
							[
								1271,
								1286
							],
							[
								1414,
								1426
							]
						],
						"symlist":
						[
							"Location",
							"location_print",
							"location_tostring",
							"location_file",
							"location_tovalue",
							"location_init",
							"location_zero",
							"location_add",
							"location_sub",
							"location_release_rt",
							"location_free_rt",
							"location_count",
							"location_copy",
							"location_clone",
							"location_new",
							"location_release",
							"location_free",
							"location_isnull",
							"location_dup"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAADwBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								230,
								249
							],
							[
								730,
								741
							],
							[
								749,
								771
							],
							[
								1064,
								1074
							],
							[
								1351,
								1360
							],
							[
								1687,
								1697
							],
							[
								1832,
								1844
							],
							[
								2121,
								2131
							],
							[
								2187,
								2197
							],
							[
								2334,
								2345
							],
							[
								2380,
								2395
							],
							[
								2432,
								2440
							],
							[
								2494,
								2502
							],
							[
								2866,
								2882
							],
							[
								3172,
								3190
							],
							[
								3424,
								3442
							],
							[
								3713,
								3733
							],
							[
								4635,
								4651
							],
							[
								4740,
								4756
							],
							[
								5396,
								5410
							],
							[
								5884,
								5901
							],
							[
								7594,
								7611
							],
							[
								8226,
								8246
							],
							[
								9371,
								9383
							],
							[
								15080,
								15091
							],
							[
								15891,
								15908
							],
							[
								17210,
								17227
							],
							[
								18828,
								18840
							],
							[
								20055,
								20066
							],
							[
								20357,
								20371
							]
						],
						"symlist":
						[
							"js_inspect_tostring",
							"OutputValue",
							"character_classes_init",
							"yield_push",
							"yield_pop",
							"yield_next",
							"yield_return",
							"parse_getc",
							"parse_skip",
							"parse_until",
							"parse_skipspace",
							"parse_is",
							"find_tag",
							"xml_num_children",
							"xml_set_attr_value",
							"xml_set_attr_bytes",
							"xml_write_attributes",
							"xml_write_indent",
							"xml_write_string",
							"xml_write_text",
							"xml_write_element",
							"xml_close_element",
							"xml_enumeration_next",
							"js_xml_parse",
							"js_xml_read",
							"js_xml_write_tree",
							"js_xml_write_list",
							"js_xml_write",
							"js_xml_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA8AQAATG9jYXRpb24KICBsb2NhdGlvbl9wcmludAogIGxvY2F0aW9uX3Rvc3RyaW5nCiAgbG9jYXRpb25fZmlsZQogIGxvY2F0aW9uX3RvdmFsdWUKICBsb2NhdGlvbl9pbml0CiAgbG9jYXRpb25femVybwogIGxvY2F0aW9uX2FkZAogIGxvY2F0aW9uX3N1YgogIGxvY2F0aW9uX3JlbGVhc2VfcnQKICBsb2NhdGlvbl9mcmVlX3J0CiAgbG9jYXRpb25fY291bnQKICBsb2NhdGlvbl9jb3B5CiAgbG9jYXRpb25fY2xvbmUKICBsb2NhdGlvbl9uZXcKICBsb2NhdGlvbl9yZWxlYXNlCiAgbG9jYXRpb25fZnJlZQogIGxvY2F0aW9uX2lzbnVsbAogIGxvY2F0aW9uX2R1cAAAAAAAAAAA+gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								230,
								249
							],
							[
								730,
								741
							],
							[
								749,
								771
							],
							[
								1064,
								1074
							],
							[
								1351,
								1360
							],
							[
								1687,
								1697
							],
							[
								1832,
								1844
							],
							[
								2121,
								2131
							],
							[
								2187,
								2197
							],
							[
								2334,
								2345
							],
							[
								2380,
								2395
							],
							[
								2432,
								2440
							],
							[
								2494,
								2502
							],
							[
								2866,
								2882
							],
							[
								3172,
								3190
							],
							[
								3424,
								3442
							],
							[
								3713,
								3733
							],
							[
								4635,
								4651
							],
							[
								4740,
								4756
							],
							[
								5396,
								5410
							],
							[
								5884,
								5901
							],
							[
								7594,
								7611
							],
							[
								8226,
								8246
							],
							[
								9371,
								9383
							],
							[
								15085,
								15096
							],
							[
								15896,
								15913
							],
							[
								17215,
								17232
							],
							[
								18833,
								18845
							],
							[
								20060,
								20071
							],
							[
								20362,
								20376
							]
						],
						"symlist":
						[
							"js_inspect_tostring",
							"OutputValue",
							"character_classes_init",
							"yield_push",
							"yield_pop",
							"yield_next",
							"yield_return",
							"parse_getc",
							"parse_skip",
							"parse_until",
							"parse_skipspace",
							"parse_is",
							"find_tag",
							"xml_num_children",
							"xml_set_attr_value",
							"xml_set_attr_bytes",
							"xml_write_attributes",
							"xml_write_indent",
							"xml_write_string",
							"xml_write_text",
							"xml_write_element",
							"xml_close_element",
							"xml_enumeration_next",
							"js_xml_parse",
							"js_xml_read",
							"js_xml_write_tree",
							"js_xml_write_list",
							"js_xml_write",
							"js_xml_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAPoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					23,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								230,
								249
							],
							[
								730,
								741
							],
							[
								749,
								771
							],
							[
								1064,
								1074
							],
							[
								1351,
								1360
							],
							[
								1687,
								1697
							],
							[
								1832,
								1844
							],
							[
								2121,
								2131
							],
							[
								2187,
								2197
							],
							[
								2334,
								2345
							],
							[
								2380,
								2395
							],
							[
								2432,
								2440
							],
							[
								2494,
								2502
							],
							[
								2866,
								2882
							],
							[
								3172,
								3190
							],
							[
								3424,
								3442
							],
							[
								3713,
								3733
							],
							[
								4635,
								4651
							],
							[
								4740,
								4756
							],
							[
								5396,
								5410
							],
							[
								5884,
								5901
							],
							[
								7594,
								7611
							],
							[
								8226,
								8246
							],
							[
								9371,
								9383
							],
							[
								15109,
								15120
							],
							[
								15920,
								15937
							],
							[
								17239,
								17256
							],
							[
								18857,
								18869
							],
							[
								20084,
								20095
							],
							[
								20386,
								20400
							]
						],
						"symlist":
						[
							"js_inspect_tostring",
							"OutputValue",
							"character_classes_init",
							"yield_push",
							"yield_pop",
							"yield_next",
							"yield_return",
							"parse_getc",
							"parse_skip",
							"parse_until",
							"parse_skipspace",
							"parse_is",
							"find_tag",
							"xml_num_children",
							"xml_set_attr_value",
							"xml_set_attr_bytes",
							"xml_write_attributes",
							"xml_write_indent",
							"xml_write_string",
							"xml_write_text",
							"xml_write_element",
							"xml_close_element",
							"xml_enumeration_next",
							"js_xml_parse",
							"js_xml_read",
							"js_xml_write_tree",
							"js_xml_write_list",
							"js_xml_write",
							"js_xml_init",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAPoBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAPoBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAPoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
						"symkeys":
						[
							[
								230,
								249
							],
							[
								730,
								741
							],
							[
								749,
								771
							],
							[
								1064,
								1074
							],
							[
								1351,
								1360
							],
							[
								1687,
								1697
							],
							[
								1832,
								1844
							],
							[
								2121,
								2131
							],
							[
								2187,
								2197
							],
							[
								2334,
								2345
							],
							[
								2380,
								2395
							],
							[
								2432,
								2440
							],
							[
								2494,
								2502
							],
							[
								2866,
								2882
							],
							[
								3172,
								3190
							],
							[
								3424,
								3442
							],
							[
								3713,
								3733
							],
							[
								4635,
								4651
							],
							[
								4740,
								4756
							],
							[
								5396,
								5410
							],
							[
								5884,
								5901
							],
							[
								7594,
								7611
							],
							[
								8226,
								8246
							],
							[
								9371,
								9383
							],
							[
								15109,
								15120
							],
							[
								15920,
								15937
							],
							[
								17239,
								17256
							],
							[
								18857,
								18869
							],
							[
								20084,
								20095
							],
							[
								20386,
								20400
							]
						],
						"symlist":
						[
							"js_inspect_tostring",
							"OutputValue",
							"character_classes_init",
							"yield_push",
							"yield_pop",
							"yield_next",
							"yield_return",
							"parse_getc",
							"parse_skip",
							"parse_until",
							"parse_skipspace",
							"parse_is",
							"find_tag",
							"xml_num_children",
							"xml_set_attr_value",
							"xml_set_attr_bytes",
							"xml_write_attributes",
							"xml_write_indent",
							"xml_write_string",
							"xml_write_text",
							"xml_write_element",
							"xml_close_element",
							"xml_enumeration_next",
							"js_xml_parse",
							"js_xml_read",
							"js_xml_write_tree",
							"js_xml_write_list",
							"js_xml_write",
							"js_xml_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAPoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6AQAAICBqc19pbnNwZWN0X3Rvc3RyaW5nCk91dHB1dFZhbHVlCiAgY2hhcmFjdGVyX2NsYXNzZXNfaW5pdAogIHlpZWxkX3B1c2gKICB5aWVsZF9wb3AKICB5aWVsZF9uZXh0CiAgeWllbGRfcmV0dXJuCiAgcGFyc2VfZ2V0YwogIHBhcnNlX3NraXAKICBwYXJzZV91bnRpbAogIHBhcnNlX3NraXBzcGFjZQogIHBhcnNlX2lzCiAgZmluZF90YWcKICB4bWxfbnVtX2NoaWxkcmVuCiAgeG1sX3NldF9hdHRyX3ZhbHVlCiAgeG1sX3NldF9hdHRyX2J5dGVzCiAgeG1sX3dyaXRlX2F0dHJpYnV0ZXMKICB4bWxfd3JpdGVfaW5kZW50CiAgeG1sX3dyaXRlX3N0cmluZwogIHhtbF93cml0ZV90ZXh0CiAgeG1sX3dyaXRlX2VsZW1lbnQKICB4bWxfY2xvc2VfZWxlbWVudAogIHhtbF9lbnVtZXJhdGlvbl9uZXh0CiAganNfeG1sX3BhcnNlCiAganNfeG1sX3JlYWQKICBqc194bWxfd3JpdGVfdHJlZQogIGpzX3htbF93cml0ZV9saXN0CiAganNfeG1sX3dyaXRlCiAganNfeG1sX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeAQAAAAAAAJ4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					35,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					36,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					37,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
						"symkeys":
						[
							[
								304,
								312
							],
							[
								320,
								334
							],
							[
								380,
								397
							],
							[
								434,
								447
							],
							[
								486,
								502
							],
							[
								538,
								551
							],
							[
								569,
								582
							],
							[
								600,
								612
							],
							[
								647,
								659
							],
							[
								694,
								713
							],
							[
								748,
								764
							],
							[
								795,
								809
							],
							[
								853,
								866
							],
							[
								918,
								932
							],
							[
								973,
								985
							],
							[
								1019,
								1035
							],
							[
								1151,
								1164
							],
							[
								1271,
								1286
							],
							[
								1414,
								1426
							]
						],
						"symlist":
						[
							"Location",
							"location_print",
							"location_tostring",
							"location_file",
							"location_tovalue",
							"location_init",
							"location_zero",
							"location_add",
							"location_sub",
							"location_release_rt",
							"location_free_rt",
							"location_count",
							"location_copy",
							"location_clone",
							"location_new",
							"location_release",
							"location_free",
							"location_isnull",
							"location_dup"
						]
					},
					"AQAAAAAAAAAAAAAAPAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "//import { Pointer } from 'pointer';\nimport * as deep from 'deep';\nimport inspect from 'inspect';\nimport { isObject, define, escape, quote, range, assert, memoize, getClassName, getClassID, mapObject, getset, gettersetter } from './util.js';\nimport * as xml from 'xml';\n\n//const Path = Pointer;\n\nconst inspectSymbol = Symbol.inspect ?? Symbol.for('quickjs.inspect.custom');\n\nconst rawNode = new WeakMap();\nconst parentNode = new Map();\nconst ownerElement = new Map();\n\nconst ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\n\nconst keyOf = (obj, value) => {\n  for(let key in obj) if(obj[key] === value) return key;\n  return -1;\n};\n\nexport const nodeTypes = [, 'ELEMENT_NODE', 'ATTRIBUTE_NODE', 'TEXT_NODE', 'CDATA_SECTION_NODE', 'ENTITY_REFERENCE_NODE', 'ENTITY_NODE', 'PROCESSING_INSTRUCTION_NODE', 'COMMENT_NODE', 'DOCUMENT_NODE', 'DOCUMENT_TYPE_NODE', 'DOCUMENT_FRAGMENT_NODE', 'NOTATION_NODE'];\n\nfunction checkNode(node) {\n  if(!isObject(node)) throw new TypeError('node is not an object');\n  if(!node[Symbol.toStringTag]) throw new TypeError('node does not have [Symbol.toStringTag]');\n  if(Object.getPrototypeOf(node) == Object.prototype) throw new TypeError('node is Object');\n}\n\nexport class Parser {\n  parseFromString(str) {\n    let data = xml.read(str);\n    return new Document(data[0]);\n  }\n}\n\nexport class Node {\n  constructor(obj, parent, proto = Node.prototype) {\n    if(isObject(proto)) assert(Object.getPrototypeOf(this) instanceof Node, true, 'proto');\n    assert(this instanceof Node, true, 'instanceof Node');\n\n    //if(!isObject(obj)) console.log('Node.constructor', { obj });\n    if(isObject(obj)) rawNode.set(this, obj);\n\n    parentNode.set(this, parent);\n    //parentNode.set(obj, parent);\n  }\n\n  static raw(node) {\n    checkNode(node);\n    return rawNode.get(node);\n  }\n\n  static owner(node) {\n    checkNode(node);\n    let owner;\n    if((owner = ownerElement.get(node))) return owner;\n\n    node = Node.raw(node);\n    return ownerElement.get(node);\n  }\n\n  static parent(node) {\n    checkNode(node);\n    let ret = parentNode.get(node);\n    return ret;\n  }\n\n  static hier(node, pred = node => true) {\n    const r = [];\n    checkNode(node);\n    let next;\n    do {\n      if(pred(node)) r.unshift(node);\n      next = ({ NodeList: Node.owner, NamedNodeMap: Node.owner, Element: Node.owner, Text: Node.owner }[node.constructor.name] ?? Node.parent).call(Node, node);\n    } while(next && (node = next));\n    return r;\n  }\n\n  static document(node) {\n    const hier = Node.hier(node);\n    return hier.find(({ nodeType }) => nodeType == DOCUMENT_NODE);\n  }\n\n  static path(arg, path = []) {\n    if(arg.ownerElement) return Node.path(arg.ownerElement).concat({ NodeList: ['children'], NamedNodeMap: ['attributes'], Attr: ['attributes', arg.name] }[arg.constructor.name]);\n    const hier = Node.hier(arg);\n\n    while(hier.length >= 2) {\n      let index = keyOf(Node.raw(hier[0]), Node.raw(hier[1]));\n      if(index == -1) index = keyOf(hier[0], hier[1]);\n\n      if(!isNaN(+index)) index = +index;\n      path.push(index);\n      hier.shift();\n    }\n    return path;\n  }\n\n  get parentNode() {\n    let r = Node.parent(this);\n    if(isObject(r) && !(r instanceof Node)) r = Node.owner(r);\n    return r;\n  }\n\n  get ownerDocument() {\n    let node = this;\n    while(node && node.nodeType != DOCUMENT_NODE) node = node.parentNode;\n    return node;\n  }\n\n  get nextSibling() {\n    let parent;\n    if((parent = Node.parent(this))) {\n      let index = parent.indexOf(this);\n      if(index != -1) return parent[index + 1];\n    }\n  }\n\n  get previousSibling() {\n    let parent;\n    if((parent = Node.parent(this))) {\n      let index = parent.indexOf(this);\n      if(index != -1) return parent[index - 1];\n    }\n  }\n}\n\nNode.types = nodeTypes;\nconst NODE_TYPES = {\n  ATTRIBUTE_NODE,\n  CDATA_SECTION_NODE,\n  COMMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_TYPE_NODE,\n  ELEMENT_NODE,\n  ENTITY_NODE,\n  ENTITY_REFERENCE_NODE,\n  NOTATION_NODE,\n  PROCESSING_INSTRUCTION_NODE,\n  TEXT_NODE\n};\ndefine(Node.prototype, NODE_TYPES);\ndefine(Node, NODE_TYPES);\n\nNode.prototype[Symbol.toStringTag] = 'Node';\n\nfunction MakeCache(ctor, store = new WeakMap()) {\n  let [get, set] = getset(store);\n  return (k, ...args) => {\n    let v;\n    if(!(v = get(k))) {\n      v = ctor(k, ...args);\n      set(k, v);\n    }\n    ownerElement.set(v, args[0]);\n    return v;\n  };\n}\nfunction MakeCache2(ctor, store = new WeakMap()) {\n  let mkch = memoize(key => [], store);\n\n  return (id, owner) => {\n    // console.log('Cache2',{id,owner });\n    if(!isNaN(+id)) id = +id;\n    let textList = mkch(owner);\n    textList[id] ??= ctor(id, owner);\n    // console.log('Cache2',{ textList });\n    return textList[id];\n  };\n}\n\nexport class NodeList {\n  constructor(obj, owner) {\n    let nodeList;\n    const isElement = prop => typeof prop == 'string' && !isNaN(+prop);\n    const isList = prop => isElement(prop) || prop == 'length';\n    const wrapElement = (value, prop) => (typeof value == 'string' ? Text.cache(prop, nodeList) : Element.cache(value, nodeList));\n\n    rawNode.set(this, obj);\n    //parentNode.set(obj, owner);\n    ownerElement.set(this, owner);\n\n    nodeList = new Proxy(this, {\n      get: (target, prop, receiver) => {\n        if(isList(prop)) {\n          if(prop == 'length') return obj.length;\n          if(prop >= 0 && prop < obj.length) return wrapElement(obj[prop], prop);\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n      getOwnPropertyDescriptor: (target, prop) => {\n        if(isList(prop)) {\n          if(prop == 'length' || (prop >= 0 && prop < obj.length)) return { configurable: true, enumerable: true, value: obj[prop] };\n        }\n        return Reflect.getOwnPropertyDescriptor(target, prop);\n      },\n      ownKeys: target =>\n        range(0, obj.length - 1)\n          .map(prop => prop + '')\n          .concat(['length'])\n      //    getPrototypeOf: target => NodeList.prototype\n    });\n\n    rawNode.set(nodeList, obj);\n    ownerElement.set(nodeList, owner);\n\n    return nodeList;\n  }\n\n  [inspectSymbol](depth, opts) {\n    /*  let elements= [...this].map((element) => inspect(element, depth +2, { ...opts, customInspect: true }));\n  \n    return elements.join('\\n'+'  ');*/\n\n    let str = inspect([...this], depth + 1, { ...opts, customInspect: true }); //.map(el => el[inspectSymbol](depth-1, opts)).join(', ');\n\n    let indexes = [str.indexOf('[') + 1, str.lastIndexOf(']')];\n\n    return str.substrin g(...indexes);\n  }\n}\n\n//NodeList.prototype.__proto__ = Array.prototype;\n\ndefine(NodeList.prototype, {\n  [Symbol.toStringTag]: 'NodeList',\n  get path() {\n    let owner = Node.owner(this);\n    return Node.path(owner).concat(['children']);\n  },\n\n  /*  [inspectSymbol](depth, opts) {\n    const raw = Node.raw(this);\n    return util\n      .range(0, raw.length - 1)\n      .map(n => inspect(this[n], depth-1,opts)) \n      .join(',\\n  ');\n  },*/\n\n  *[Symbol.iterator]() {\n    const raw = Node.raw(this);\n    for(let node of raw) yield Factory(node, this, typeof node == 'string' ? Text : Element);\n  }\n});\n\nexport function NamedNodeMap(obj, owner) {\n  if(!this) return new NamedNodeMap(obj, owner);\n\n  let nodeMap;\n  const isAttr = prop => typeof prop == 'string' && prop in obj;\n  const wrapAttr = (value, prop) => new Attr([obj, prop], nodeMap);\n\n  rawNode.set(this, obj);\n  //parentNode.set(obj,owner);\n  ownerElement.set(this, owner);\n\n  nodeMap = new Proxy(this, {\n    get: (target, prop, receiver) => {\n      //  if(prop == 'item') return i => isNaN(+i) ? obj[i] : obj[Object.keys(obj)[+i]];\n      if(prop == 'length') return Object.keys(obj).length;\n      if(typeof prop == 'string') {\n        if(!isNaN(+prop)) {\n          let keys = Object.keys(obj);\n          if(prop >= 0 && prop < keys.length) return wrapAttr(obj[keys[+prop]], keys[+prop]);\n        } else if(prop in obj) return wrapAttr(obj[prop], prop);\n      }\n      return Reflect.get(target, prop, receiver);\n    },\n    ownKeys: target => Object.keys(obj)\n  });\n\n  rawNode.set(nodeMap, obj);\n  ownerElement.set(nodeMap, owner);\n\n  return nodeMap;\n}\n\nObject.setPrototypeOf(NamedNodeMap.prototype, Array.prototype);\n\ndefine(NamedNodeMap.prototype, {\n  get path() {\n    let owner = Node.owner(this);\n    return Node.path(owner).concat(['attributes']);\n  },\n\n  item(key) {\n    return this[key];\n  },\n  setNamedItem(attr) {\n    const raw = Node.raw(this);\n    const { name, value } = attr;\n    raw[name] = value;\n  },\n  removeNamedItem(name) {\n    const raw = Node.raw(this);\n    delete raw[name];\n  },\n  getNamedItem(name) {\n    const raw = Node.raw(this);\n    return raw[name];\n  },\n\n  *[Symbol.iterator]() {\n    const { length } = this;\n    for(let i = 0; i < length; i++) yield this.item(i);\n  },\n  [Symbol.toStringTag]: 'NamedNodeMap',\n  [inspectSymbol]() {\n    const raw = Node.raw(this);\n    let s = '';\n    for(let attr in raw) {\n      s += ' \\x1b[1;35m' + attr + '\\x1b[1;36m=\"' + raw[attr] + '\"\\x1b[0m';\n    }\n    return '{' + s + ' }';\n    return Object.getOwnPropertyNames(this).reduce((acc, prop) => ({ ...acc, [prop]: this[prop] }), {});\n  }\n});\n\nexport class Element extends Node {\n  constructor(obj, parent) {\n    super(obj, parent);\n  }\n\n  get parentElement() {\n    let obj = this;\n    while(isObject(obj) && obj.nodeType != ELEMENT_NODE) obj = Node.parent(obj);\n    return obj;\n  }\n  get attributes() {\n    return new NamedNodeMap((Node.raw(this).attributes ??= {}), this);\n  }\n\n  set tagName(v) {\n    Node.raw(this).tagName = v;\n  }\n  get tagName() {\n    return Node.raw(this).tagName;\n  }\n  set nodeName(v) {\n    this.tagName = v;\n  }\n  get nodeName() {\n    return this.tagName;\n  }\n\n  get path() {\n    return Node.path(this);\n  }\n\n  setAttribute(name, value) {\n    (Node.raw(this).attributes ??= {})[name] = value;\n  }\n  removeAttribute(name) {\n    delete (Node.raw(this).attributes ??= {})[name];\n  }\n\n  [inspectSymbol](depth, opts) {\n    const { tagName, attributes, children } = this;\n    const a = attributes[inspectSymbol](depth + 1, opts)\n      .slice(1, -1)\n      .trim();\n\n    const c = children[inspectSymbol](depth + 1, opts); /*.slice(1, -1)*/\n    let s = `<${tagName}`;\n    if(a) {\n      s += ' ';\n      s += a;\n    }\n    s += '>';\n    if(c) {\n      s += c; //c.endsWith('  ') ? c.slice(0,-2) :c;\n      //console.log('tagName',tagName);\n      s += `</${tagName}>`;\n    }\n    return s;\n  }\n\n  get children() {\n    const raw = Node.raw(this);\n    // console.log('raw',inspect(raw, {depth: 0}));\n    return Factory((raw.children ??= []), this, NodeList);\n  }\n\n  get childElementCount() {\n    return Node.raw(this).children?.length ?? 0;\n  }\n  get firstChild() {\n    const { children } = Node.raw(this);\n    if(children?.length) {\n      let [first] = children;\n      return { object: Element, string: Text }[typeof first].cache(first, this);\n    }\n  }\n  get lastChild() {\n    const { children } = Node.raw(this);\n    if(children?.length) {\n      let last = children[children.length - 1];\n      return { object: Element, string: Text }[typeof last].cache(last, this);\n    }\n  }\n  get firstElementChild() {\n    const { children } = Node.raw(this);\n    let element = children.find(n => isObject(n) && 'tagName' in n);\n    if(element) return Element.cache(element, this);\n  }\n\n  get lastElementChild() {\n    const { children } = Node.raw(this);\n    if(children?.length) for(let i = children.length - 1; i >= 0; i--) if (isObject(children[i]) && 'tagName' in children[i]) return Element.cache(children[i], this);\n  }\n\n  static cache = MakeCache((obj, owner) => new Element(obj, owner));\n}\n\n//define(Element, { cache: MakeCache(Element) });\ndefine(Element.prototype, { [Symbol.toStringTag]: 'Element', nodeType: ELEMENT_NODE });\n\nexport class Document extends Element {\n  constructor(obj) {\n    super(obj, null, Document.prototype);\n  }\n\n  createAttribute(name, value) {\n    return new Attr([null, name], null);\n  }\n\n  /*  [inspectSymbol](depth, opts) {\n    const { tagName, attributes, children } = this;\n    console.log('Document.inspect')\n    return `\\x1b[1;31mDocument\\x1b[0m ${tagName} attributes: ${attributes[inspectSymbol](depth + 1, opts)} children: ${inspect(children.map(c => c[inspectSymbol](depth + 2, opts)))}>`;\n  }*/\n}\n\ndefine(Document.prototype, { [Symbol.toStringTag]: 'Document', nodeType: DOCUMENT_NODE });\n\nexport class Attr extends Node {\n  constructor(raw, owner) {\n    // console.log('Attr', { raw, owner });\n    super(raw, owner);\n\n    rawNode.set(this, raw);\n    ownerElement.set(this, owner);\n\n    define(this, {});\n  }\n\n  get path() {\n    let { ownerElement } = this;\n    let [obj, name] = Node.raw(this);\n    //console.log('path',{owner,parent});\n    return Node.path(ownerElement).concat(['attributes', name]);\n  }\n\n  get ownerElement() {\n    return Node.owner(Node.owner(this));\n  }\n  get ownerDocument() {\n    return Node.document(this);\n  }\n\n  get name() {\n    const [, name] = Node.raw(this);\n    return name;\n  }\n  set name(v) {\n    Node.raw(this)[1] = v;\n  }\n\n  get value() {\n    const [obj, name] = Node.raw(this);\n    return obj[name];\n  }\n  set value(v) {\n    const [obj, name] = Node.raw(this);\n    obj[name] = v;\n  }\n\n  [inspectSymbol]() {\n    const [obj, name] = Node.raw(this);\n    const value = obj[name];\n    return `\\x1b[1;35m${name}\\x1b[1;34m=${quote(value, '\"')}\\x1b[0m`;\n  }\n}\n\ndefine(Attr.prototype, {\n  nodeType: ATTRIBUTE_NODE,\n  [Symbol.toStringTag]: 'Attr'\n});\n\nexport class Text extends Node {\n  constructor(key, owner) {\n    let raw = Node.raw(owner);\n    if(key in raw) {\n    } else if(raw.indexOf(key) != -1) {\n      key = raw.indexOf(key);\n    }\n    const value = raw[key];\n\n    super(key, owner);\n\n    define(this, {\n      get path() {\n        return Node.path(owner).concat([key]);\n      },\n      get value() {\n        return raw[key];\n      },\n      set value(v) {\n        raw[key] = v;\n      }\n    });\n\n    //console.log('Text', { key, value }, this.path);\n  }\n\n  toString() {\n    return this.value;\n  }\n\n  [inspectSymbol](depth, opts) {\n    const { value } = this;\n    return `\\x1b[1;31m${this[Symbol.toStringTag]}\\x1b[0m \\x1b[38;2;192;255;0m'${escape(value)}'\\x1b[0m`;\n  }\n\n  static cache = MakeCache2((key, owner) => new Text(key, owner));\n}\n\nText.prototype.__proto__ = Node.prototype;\ndefine(Text.prototype, {\n  nodeType: TEXT_NODE,\n  nodeName: '#text',\n  [Symbol.toStringTag]: 'Text'\n});\n\nfunction Membrane(instance, obj, proto, wrapProp, wrapElement) {\n  throw new Error('Membrane');\n  return new Proxy(instance, {\n    get: (target, prop, receiver) => (wrapProp(prop) ? wrapElement(obj[prop], prop) : Reflect.get(target, prop, receiver)),\n    has: (target, prop) => (wrapProp(prop) ? true : Reflect.has(target, prop)),\n    getOwnPropertyDescriptor: (target, prop) => (wrapProp(prop) ? { configurable: true, enumerable: true, writable: true, value: wrapElement(obj[prop], prop) } : Reflect.getOwnPropertyDescriptor(target, prop)),\n    getPrototypeOf: target => proto ?? Object.getPrototypeOf(instance),\n    setPrototypeOf: (target, p) => (proto = p),\n    ownKeys: target => [...Reflect.ownKeys(target)]\n  });\n}\n\n/*export function MakeFactory() {\n  const memo = memoize((raw, owner, ctor) => {\n    const isArray = ctor == NodeList || owner.children == raw;\n    const isElement = ctor == Element || (owner.children != raw && owner.attributes != raw); \n    console.log('\\x1b[38;2;112;112;252mMemoize\\x1b[0m', { isArray, isElement, raw });\n\n    if(Symbol.toStringTag in owner) owner = Node.raw(owner);\n    const key = isArray ? 'children' : !isElement ? 'attributes' : keyOf(owner, raw);\n    const list = owner[key];\n    ctor ??= owner.attributes == raw ? NamedNodeMap : owner.children == raw ? NodeList : Element;\n    let ret = new ctor(raw, owner, ctor);\n    //console.log('\\x1b[38;2;112;112;252mMemoize\\x1b[0m', { key, ctor, ret });\n    return ret;\n  });\n\n  return define(\n    (raw, owner, ctor) => {\n      let ret;\n      if((ret = memo.get(raw))) {\n        ret instanceof Node ? parentNode.set(raw, owner) : ownerNode.set(raw, owner);\n        return ret;\n      }\n      return memo(raw, owner, ctor);\n    },\n    { memo }\n  );\n}*/\n\nlet map = new WeakMap();\n\nexport function Factory(raw, owner, ctor) {\n  let obj;\n  if(isObject(raw) && (obj = map.get(raw))) {\n    ownerElement.set(obj, owner);\n    return obj;\n  }\n\n  const isArray = arg => Array.isArray(arg);\n  const isAttributes = arg => isObject(arg) && !isArray(arg) && !('tagName' in arg);\n\n  ctor ??= isArray(raw) ? NodeList : isAttributes(raw) ? NamedNodeMap : typeof raw == 'string' ? Text : Element;\n\n  obj = new ctor(raw, owner);\n  return obj;\n}\n",
			"file": "lib/dom.js",
			"file_size": 16757,
			"file_write_time": 132892634354851626,
			"settings":
			{
				"buffer_size": 16759,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					2,
					"paste",
					null,
					"AgAAAGIAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAACCAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYgAAAAAAAABiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "read,write"
					},
					"CwAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAD8AAAAAAAAAHIAAABpc09iamVjdCwgZGVmaW5lLCBlc2NhcGUsIHF1b3RlLCByYW5nZSwgYXNzZXJ0LCBtZW1vaXplLCBnZXRDbGFzc05hbWUsIGdldENsYXNzSUQsIG1hcE9iamVjdCwgZ2V0c2V0LCBnZXR0ZXJzZXR0ZXL8AAAAAAAAAP0AAAAAAAAAAAAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA/gAAAAAAAAD/AAAAAAAAAAAAAAD/AAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAQEAAAAAAAAAAAAAAQEAAAAAAAACAQAAAAAAAAAAAAACAQAAAAAAAAMBAAAAAAAAAAAAAAMBAAAAAAAABAEAAAAAAAAAAAAABAEAAAAAAAAFAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+wAAAAAAAABtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+QAAAAAAAAD5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAP0AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+gAAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " xml"
					},
					"BAAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA/gAAAAAAAAD/AAAAAAAAAAAAAAD/AAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAQEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/QAAAAAAAAD9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BgAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAACAQAAAAAAACAAAAB7IHJlYWQsd3JpdGUgfSBmcm9tICcuL3V0aWwuanMnOwIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAUBAAAAAAAAAAAAAAUBAAAAAAAABgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQEAAAAAAAAhAQAAAAAAAP///////+9/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYBAAAAAAAABwEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAAcBAAAAAAAACQEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABwEAAAAAAAAHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "xml"
					},
					"AwAAAAgBAAAAAAAACQEAAAAAAAAAAAAACQEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAAsBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACAEAAAAAAAAIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAwBAAAAAAAADQEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADAEAAAAAAAAMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAA0BAAAAAAAADgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADQEAAAAAAAANAQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"left_delete",
					null,
					"AQAAAA0BAAAAAAAADQEAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADgEAAAAAAAAOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "\n\nexport"
					},
					"CAAAALoFAAAAAAAAuwUAAAAAAAAAAAAAuwUAAAAAAAC8BQAAAAAAAAAAAAC8BQAAAAAAAL0FAAAAAAAAAAAAAL0FAAAAAAAAvgUAAAAAAAAAAAAAvgUAAAAAAAC/BQAAAAAAAAAAAAC/BQAAAAAAAMAFAAAAAAAAAAAAAMAFAAAAAAAAwQUAAAAAAAAAAAAAwQUAAAAAAADCBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAugUAAAAAAAC6BQAAAAAAAP///////+9/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " class"
					},
					"BgAAAMIFAAAAAAAAwwUAAAAAAAAAAAAAwwUAAAAAAADEBQAAAAAAAAAAAADEBQAAAAAAAMUFAAAAAAAAAAAAAMUFAAAAAAAAxgUAAAAAAAAAAAAAxgUAAAAAAADHBQAAAAAAAAAAAADHBQAAAAAAAMgFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwgUAAAAAAADCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " Parser"
					},
					"BwAAAMgFAAAAAAAAyQUAAAAAAAAAAAAAyQUAAAAAAADKBQAAAAAAAAAAAADKBQAAAAAAAMsFAAAAAAAAAAAAAMsFAAAAAAAAzAUAAAAAAAAAAAAAzAUAAAAAAADNBQAAAAAAAAAAAADNBQAAAAAAAM4FAAAAAAAAAAAAAM4FAAAAAAAAzwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyAUAAAAAAADIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM8FAAAAAAAA0AUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzwUAAAAAAADPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANAFAAAAAAAA0gUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0AUAAAAAAADQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAANEFAAAAAAAA0gUAAAAAAAAAAAAA0gUAAAAAAADTBQAAAAAAAAAAAADSBQAAAAAAANQFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0QUAAAAAAADRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "constructor"
					},
					"CwAAANQFAAAAAAAA1QUAAAAAAAAAAAAA1QUAAAAAAADWBQAAAAAAAAAAAADWBQAAAAAAANcFAAAAAAAAAAAAANcFAAAAAAAA2AUAAAAAAAAAAAAA2AUAAAAAAADZBQAAAAAAAAAAAADZBQAAAAAAANoFAAAAAAAAAAAAANoFAAAAAAAA2wUAAAAAAAAAAAAA2wUAAAAAAADcBQAAAAAAAAAAAADcBQAAAAAAAN0FAAAAAAAAAAAAAN0FAAAAAAAA3gUAAAAAAAAAAAAA3gUAAAAAAADfBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1AUAAAAAAADUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN8FAAAAAAAA4QUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3wUAAAAAAADfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOEFAAAAAAAA4gUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QUAAAAAAADhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOIFAAAAAAAA5AUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gUAAAAAAADiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAOMFAAAAAAAA5AUAAAAAAAAAAAAA5AUAAAAAAADmBQAAAAAAAAAAAADmBQAAAAAAAOcFAAAAAAAAAAAAAOcFAAAAAAAA6QUAAAAAAAAAAAAA5AUAAAAAAADkBQAAAAAAAAIAAAAgIOQFAAAAAAAA6AUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4wUAAAAAAADjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BgAAAOwFAAAAAAAA7QUAAAAAAAAAAAAA7QUAAAAAAADvBQAAAAAAAAAAAADkBQAAAAAAAOQFAAAAAAAABAAAACAgICDrBQAAAAAAAOwFAAAAAAAAAAAAAOwFAAAAAAAA7gUAAAAAAAAAAAAA6QUAAAAAAADpBQAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AUAAAAAAADsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"paste",
					null,
					"AQAAAOwFAAAAAAAA+wUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AUAAAAAAADsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPsFAAAAAAAA/QUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+wUAAAAAAAD7BQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP0FAAAAAAAA/gUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/QUAAAAAAAD9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAP4FAAAAAAAAAAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/gUAAAAAAAD+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAP8FAAAAAAAAAQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/wUAAAAAAAD/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAAAGAAAAAAAAAQYAAAAAAAAAAAAAAQYAAAAAAAADBgAAAAAAAAAAAAABBgAAAAAAAAEGAAAAAAAAAgAAACAgAQYAAAAAAAAFBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					3,
					"left_delete",
					null,
					"AwAAAAMGAAAAAAAAAwYAAAAAAAACAAAAICABBgAAAAAAAAEGAAAAAAAAAgAAACAgAAYAAAAAAAAABgAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					2,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"BAAAAP8FAAAAAAAA/wUAAAAAAAABAAAAW/8FAAAAAAAA/wUAAAAAAAABAAAAXf4FAAAAAAAA/gUAAAAAAAABAAAAe/4FAAAAAAAA/gUAAAAAAAABAAAAfQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					2,
					"left_delete",
					null,
					"AgAAAP0FAAAAAAAA/QUAAAAAAAABAAAAIPwFAAAAAAAA/AUAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/gUAAAAAAAD+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "str)"
					},
					"BAAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA/QUAAAAAAAD+BQAAAAAAAAAAAAD+BQAAAAAAAP8FAAAAAAAAAAAAAP8FAAAAAAAAAAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/AUAAAAAAAD8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAAGAAAAAAAAAQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAEGAAAAAAAAAwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQYAAAAAAAABBgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAAIGAAAAAAAAAwYAAAAAAAAAAAAAAwYAAAAAAAAFBgAAAAAAAAAAAAAFBgAAAAAAAAYGAAAAAAAAAAAAAAYGAAAAAAAACAYAAAAAAAAAAAAAAwYAAAAAAAADBgAAAAAAAAIAAAAgIAMGAAAAAAAABwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgYAAAAAAAACBgAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAAcGAAAAAAAACAYAAAAAAAAAAAAACAYAAAAAAAAJBgAAAAAAAAAAAAAJBgAAAAAAAAoGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABwYAAAAAAAAHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAAAoGAAAAAAAACwYAAAAAAAAAAAAACwYAAAAAAAAMBgAAAAAAAAAAAAAMBgAAAAAAAA0GAAAAAAAAAAAAAA0GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAPBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACgYAAAAAAAAKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAA8GAAAAAAAAEAYAAAAAAAAAAAAAEAYAAAAAAAARBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADwYAAAAAAAAPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " xml.read"
					},
					"CQAAABEGAAAAAAAAEgYAAAAAAAAAAAAAEgYAAAAAAAATBgAAAAAAAAAAAAATBgAAAAAAABQGAAAAAAAAAAAAABQGAAAAAAAAFQYAAAAAAAAAAAAAFQYAAAAAAAAWBgAAAAAAAAAAAAAWBgAAAAAAABcGAAAAAAAAAAAAABcGAAAAAAAAGAYAAAAAAAAAAAAAGAYAAAAAAAAZBgAAAAAAAAAAAAAZBgAAAAAAABoGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEQYAAAAAAAARBgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABoGAAAAAAAAHAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGgYAAAAAAAAaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "str"
					},
					"AwAAABsGAAAAAAAAHAYAAAAAAAAAAAAAHAYAAAAAAAAdBgAAAAAAAAAAAAAdBgAAAAAAAB4GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGwYAAAAAAAAbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAB8GAAAAAAAAIAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHwYAAAAAAAAfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACAGAAAAAAAAIQYAAAAAAAAAAAAAIQYAAAAAAAAlBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIAYAAAAAAAAgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAACUGAAAAAAAAJgYAAAAAAAAAAAAAJgYAAAAAAAAqBgAAAAAAAAAAAAAhBgAAAAAAACEGAAAAAAAABAAAACAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJQYAAAAAAAAlBgAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"paste",
					null,
					"AQAAACYGAAAAAAAAPwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJgYAAAAAAAAmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BQAAADQGAAAAAAAANQYAAAAAAAAAAAAANQYAAAAAAAA1BgAAAAAAAAYAAAByZXN1bHQ1BgAAAAAAADYGAAAAAAAAAAAAADYGAAAAAAAANwYAAAAAAAAAAAAANwYAAAAAAAA4BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANAYAAAAAAAA6BgAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAACYGAAAAAAAAJwYAAAAAAAAAAAAAJwYAAAAAAAAoBgAAAAAAAAAAAAAoBgAAAAAAACkGAAAAAAAAAAAAACkGAAAAAAAAKgYAAAAAAAAAAAAAKgYAAAAAAAArBgAAAAAAAAAAAAArBgAAAAAAACwGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJgYAAAAAAAAmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACwGAAAAAAAALQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAYAAAAAAAAsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAACwGAAAAAAAALAYAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALQYAAAAAAAAtBgAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"left_delete",
					null,
					"AQAAACAGAAAAAAAAIAYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIQYAAAAAAAAhBgAAAAAAAAAAAAAAgFtA"
				],
				[
					101,
					1,
					"left_delete",
					null,
					"AQAAAOMFAAAAAAAA4wUAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5AUAAAAAAADkBQAAAAAAAAAAAAAAAAAA"
				],
				[
					105,
					1,
					"left_delete",
					null,
					"AQAAANIFAAAAAAAA0gUAAAAAAAAXAAAAICBjb25zdHJ1Y3RvcigpIHsKICB9Cgo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0gUAAAAAAADpBQAAAAAAAAAAAAAAAAAA"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": " ¬∞+"
					},
					"BAAAAOQmAAAAAAAA5SYAAAAAAAAAAAAA5SYAAAAAAADlJgAAAAAAAAIAAAAgLeUmAAAAAAAA5iYAAAAAAAAAAAAA5iYAAAAAAADnJgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5CYAAAAAAADmJgAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					2,
					"left_delete",
					null,
					"AgAAAOYmAAAAAAAA5iYAAAAAAAABAAAAK+UmAAAAAAAA5SYAAAAAAAACAAAAwrA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5yYAAAAAAADnJgAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAOUmAAAAAAAA5iYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5SYAAAAAAADlJgAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAAEAnAAAAAAAAQCcAAAAAAAABAAAALQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQScAAAAAAABBJwAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAEAnAAAAAAAAQScAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQCcAAAAAAABAJwAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"left_delete",
					null,
					"AQAAAEAnAAAAAAAAQCcAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQScAAAAAAABBJwAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAEAnAAAAAAAAQScAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQCcAAAAAAABAJwAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"reindent",
					null,
					"AQAAABMnAAAAAAAAGScAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEycAAAAAAAATJwAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPknAAAAAAAA+icAAAAAAAAAAAAAEycAAAAAAAATJwAAAAAAAAYAAAAgICAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+ScAAAAAAAD5JwAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"insert",
					{
						"characters": "conso.le"
					},
					"CAAAAPMnAAAAAAAA9CcAAAAAAAAAAAAA9CcAAAAAAAD1JwAAAAAAAAAAAAD1JwAAAAAAAPYnAAAAAAAAAAAAAPYnAAAAAAAA9ycAAAAAAAAAAAAA9ycAAAAAAAD4JwAAAAAAAAAAAAD4JwAAAAAAAPknAAAAAAAAAAAAAPknAAAAAAAA+icAAAAAAAAAAAAA+icAAAAAAAD7JwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8ycAAAAAAADzJwAAAAAAAAAAAAAAAAAA"
				],
				[
					252,
					3,
					"left_delete",
					null,
					"AwAAAPonAAAAAAAA+icAAAAAAAABAAAAZfknAAAAAAAA+ScAAAAAAAABAAAAbPgnAAAAAAAA+CcAAAAAAAABAAAALg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+ycAAAAAAAD7JwAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					1,
					"insert",
					{
						"characters": "le.log"
					},
					"BgAAAPgnAAAAAAAA+ScAAAAAAAAAAAAA+ScAAAAAAAD6JwAAAAAAAAAAAAD6JwAAAAAAAPsnAAAAAAAAAAAAAPsnAAAAAAAA/CcAAAAAAAAAAAAA/CcAAAAAAAD9JwAAAAAAAAAAAAD9JwAAAAAAAP4nAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+CcAAAAAAAD4JwAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP4nAAAAAAAAACgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/icAAAAAAAD+JwAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAP8nAAAAAAAAASgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/ycAAAAAAAD/JwAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": "tagn"
					},
					"BAAAAAAoAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAACKAAAAAAAAAAAAAACKAAAAAAAAAMoAAAAAAAAAAAAAAMoAAAAAAAABCgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAPC/"
				],
				[
					257,
					1,
					"left_delete",
					null,
					"AQAAAAMoAAAAAAAAAygAAAAAAAABAAAAbg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABCgAAAAAAAAEKAAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "Name"
					},
					"BAAAAAMoAAAAAAAABCgAAAAAAAAAAAAABCgAAAAAAAAFKAAAAAAAAAAAAAAFKAAAAAAAAAYoAAAAAAAAAAAAAAYoAAAAAAAABygAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAygAAAAAAAADKAAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": ",tagName"
					},
					"CAAAAAgoAAAAAAAACSgAAAAAAAAAAAAACSgAAAAAAAAKKAAAAAAAAAAAAAAKKAAAAAAAAAsoAAAAAAAAAAAAAAsoAAAAAAAADCgAAAAAAAAAAAAADCgAAAAAAAANKAAAAAAAAAAAAAANKAAAAAAAAA4oAAAAAAAAAAAAAA4oAAAAAAAADygAAAAAAAAAAAAADygAAAAAAAAQKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACCgAAAAAAAAIKAAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABEoAAAAAAAAEigAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAESgAAAAAAAARKAAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAABIoAAAAAAAAEygAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEigAAAAAAAASKAAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAPMnAAAAAAAA9CcAAAAAAAAAAAAA9CcAAAAAAAD1JwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8ycAAAAAAADzJwAAAAAAAAAAAAAAAAAA"
				],
				[
					279,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFcnAAAAAAAAWScAAAAAAAAAAAAASicAAAAAAABMJwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASicAAAAAAABXJwAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"cut",
					null,
					"AQAAALgYAAAAAAAAuBgAAAAAAACHAAAAICAgIHJldHVybiBpbnNwZWN0KFsuLi50aGlzXSwgZGVwdGggKyAxLCB7IC4uLm9wdHMsIGN1c3RvbUluc3BlY3Q6IHRydWUgfSk7IC8vLm1hcChlbCA9PiBlbFtpbnNwZWN0U3ltYm9sXShkZXB0aC0xLCBvcHRzKSkuam9pbignLCAnKTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPxkAAAAAAAC4GAAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					2,
					"paste",
					null,
					"AgAAALgYAAAAAAAAPxkAAAAAAAAAAAAAPxkAAAAAAADGGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAALcYAAAAAAAAuBgAAAAAAAAAAAAAuBgAAAAAAAC6GAAAAAAAAAAAAAC6GAAAAAAAALwYAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtxgAAAAAAAC3GAAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAALwYAAAAAAAAvhgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvBgAAAAAAAC8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "...this"
					},
					"BwAAAL0YAAAAAAAAvhgAAAAAAAAAAAAAvhgAAAAAAAC/GAAAAAAAAAAAAAC/GAAAAAAAAMAYAAAAAAAAAAAAAMAYAAAAAAAAwRgAAAAAAAAAAAAAwRgAAAAAAADCGAAAAAAAAAAAAADCGAAAAAAAAMMYAAAAAAAAAAAAAMMYAAAAAAAAxBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvRgAAAAAAAC9GAAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": ".map"
					},
					"BAAAAMUYAAAAAAAAxhgAAAAAAAAAAAAAxhgAAAAAAADHGAAAAAAAAAAAAADHGAAAAAAAAMgYAAAAAAAAAAAAAMgYAAAAAAAAyRgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxRgAAAAAAADFGAAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMkYAAAAAAAAyxgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyRgAAAAAAADJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMkYAAAAAAAAyRgAAAAAAAABAAAAKMkYAAAAAAAAyRgAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyhgAAAAAAADKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					3,
					"left_delete",
					null,
					"AwAAAMgYAAAAAAAAyBgAAAAAAAABAAAAcMcYAAAAAAAAxxgAAAAAAAABAAAAYcYYAAAAAAAAxhgAAAAAAAABAAAAbQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyRgAAAAAAADJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": "reduce"
					},
					"BgAAAMYYAAAAAAAAxxgAAAAAAAAAAAAAxxgAAAAAAADIGAAAAAAAAAAAAADIGAAAAAAAAMkYAAAAAAAAAAAAAMkYAAAAAAAAyhgAAAAAAAAAAAAAyhgAAAAAAADLGAAAAAAAAAAAAADLGAAAAAAAAMwYAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxhgAAAAAAADGGAAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMwYAAAAAAAAzhgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzBgAAAAAAADMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAM0YAAAAAAAAzhgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzRgAAAAAAADNGAAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"left_delete",
					null,
					"AQAAAM0YAAAAAAAAzRgAAAAAAAABAAAAYw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzhgAAAAAAADOGAAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "element"
					},
					"BwAAAM0YAAAAAAAAzhgAAAAAAAAAAAAAzhgAAAAAAADPGAAAAAAAAAAAAADPGAAAAAAAANAYAAAAAAAAAAAAANAYAAAAAAAA0RgAAAAAAAAAAAAA0RgAAAAAAADSGAAAAAAAAAAAAADSGAAAAAAAANMYAAAAAAAAAAAAANMYAAAAAAAA1BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzRgAAAAAAADNGAAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAANQYAAAAAAAA1RgAAAAAAAAAAAAA1RgAAAAAAADWGAAAAAAAAAAAAADWGAAAAAAAANcYAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1BgAAAAAAADUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": " inspecT"
					},
					"CAAAANcYAAAAAAAA2BgAAAAAAAAAAAAA2BgAAAAAAADZGAAAAAAAAAAAAADZGAAAAAAAANoYAAAAAAAAAAAAANoYAAAAAAAA2xgAAAAAAAAAAAAA2xgAAAAAAADcGAAAAAAAAAAAAADcGAAAAAAAAN0YAAAAAAAAAAAAAN0YAAAAAAAA3hgAAAAAAAAAAAAA3hgAAAAAAADfGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1xgAAAAAAADXGAAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN8YAAAAAAAA4RgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "element,"
					},
					"CAAAAOAYAAAAAAAA4RgAAAAAAAAAAAAA4RgAAAAAAADiGAAAAAAAAAAAAADiGAAAAAAAAOMYAAAAAAAAAAAAAOMYAAAAAAAA5BgAAAAAAAAAAAAA5BgAAAAAAADlGAAAAAAAAAAAAADlGAAAAAAAAOYYAAAAAAAAAAAAAOYYAAAAAAAA5xgAAAAAAAAAAAAA5xgAAAAAAADoGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4BgAAAAAAADgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOgYAAAAAAAA6RgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOkYAAAAAAAA6hgAAAAAAAAAAAAA6hgAAAAAAADqGAAAAAAAAB8AAAApKQogICAgcmV0dXJuIGluc3BlY3QoWy4uLnRoaXNd",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6RgAAAAAAAAIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"right_delete",
					null,
					"AQAAAOoYAAAAAAAA6hgAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6hgAAAAAAADqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AgAAAN4YAAAAAAAA3xgAAAAAAAAAAAAA3xgAAAAAAADfGAAAAAAAAAEAAABU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3hgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"left_delete",
					null,
					"AQAAABcZAAAAAAAAFxkAAAAAAAABAAAAOw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGBkAAAAAAAAYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAABcZAAAAAAAAGBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFxkAAAAAAAAXGQAAAAAAAAAAAAAAAPC/"
				],
				[
					360,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAABgZAAAAAAAAGhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGBkAAAAAAAAYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": "\\n"
					},
					"AgAAABkZAAAAAAAAGhkAAAAAAAAAAAAAGhkAAAAAAAAbGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGRkAAAAAAAAZGQAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAABwZAAAAAAAAHRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHBkAAAAAAAAcGQAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"left_delete",
					null,
					"AQAAABwZAAAAAAAAHBkAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHRkAAAAAAAAdGQAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABwZAAAAAAAAHRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHBkAAAAAAAAcGQAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB0ZAAAAAAAAHhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHRkAAAAAAAAdGQAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAB4ZAAAAAAAAIBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHhkAAAAAAAAeGQAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAACAZAAAAAAAAIRkAAAAAAAAAAAAAIRkAAAAAAAAiGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIBkAAAAAAAAgGQAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"cut",
					null,
					"AQAAACIZAAAAAAAAIhkAAAAAAAA7AAAAIC8vLm1hcChlbCA9PiBlbFtpbnNwZWN0U3ltYm9sXShkZXB0aC0xLCBvcHRzKSkuam9pbignLCAnKTs",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIhkAAAAAAABdGQAAAAAAAP///////+9/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": "(acc,"
					},
					"BQAAAM0YAAAAAAAAzhgAAAAAAAAAAAAAzhgAAAAAAADPGAAAAAAAAAAAAADPGAAAAAAAANAYAAAAAAAAAAAAANAYAAAAAAAA0RgAAAAAAAAAAAAA0RgAAAAAAADSGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzRgAAAAAAADNGAAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANkYAAAAAAAA2hgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2RgAAAAAAADZGAAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": "ac"
					},
					"AgAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA4BgAAAAAAADhGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					2,
					"left_delete",
					null,
					"AgAAAOAYAAAAAAAA4BgAAAAAAAABAAAAY98YAAAAAAAA3xgAAAAAAAABAAAAYQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4RgAAAAAAADhGAAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": "acc+"
					},
					"BAAAAN4YAAAAAAAA3xgAAAAAAAAAAAAA3xgAAAAAAADgGAAAAAAAAAAAAADgGAAAAAAAAOEYAAAAAAAAAAAAAOEYAAAAAAAA4hgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3hgAAAAAAADeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": "retzur"
					},
					"BgAAALwYAAAAAAAAvRgAAAAAAAAAAAAAvRgAAAAAAAC+GAAAAAAAAAAAAAC+GAAAAAAAAL8YAAAAAAAAAAAAAL8YAAAAAAAAwBgAAAAAAAAAAAAAwBgAAAAAAADBGAAAAAAAAAAAAADBGAAAAAAAAMIYAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvBgAAAAAAAC8GAAAAAAAAAAAAAAAAEZA"
				],
				[
					387,
					3,
					"left_delete",
					null,
					"AwAAAMEYAAAAAAAAwRgAAAAAAAABAAAAcsAYAAAAAAAAwBgAAAAAAAABAAAAdb8YAAAAAAAAvxgAAAAAAAABAAAAeg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwhgAAAAAAADCGAAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"insert",
					{
						"characters": "urn"
					},
					"AwAAAL8YAAAAAAAAwBgAAAAAAAAAAAAAwBgAAAAAAADBGAAAAAAAAAAAAADBGAAAAAAAAMIYAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvxgAAAAAAAC/GAAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMIYAAAAAAAAwxgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwhgAAAAAAADCGAAAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADMZAAAAAAAANBkAAAAAAAAAAAAANBkAAAAAAAA4GQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMxkAAAAAAAAzGQAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": "('"
					},
					"AwAAAOkYAAAAAAAA6hgAAAAAAAAAAAAANRkAAAAAAAA1GQAAAAAAAAQAAAAgICAg6hgAAAAAAADrGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6RgAAAAAAADpGAAAAAAAAAAAAAAAAPC/"
				],
				[
					413,
					1,
					"insert",
					{
						"characters": " '"
					},
					"AgAAAOsYAAAAAAAA7BgAAAAAAAAAAAAA7BgAAAAAAADtGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6xgAAAAAAADrGAAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": ".,d"
					},
					"AwAAAO0YAAAAAAAA7hgAAAAAAAAAAAAA7hgAAAAAAADvGAAAAAAAAAAAAADvGAAAAAAAAPAYAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7RgAAAAAAADtGAAAAAAAAAAAAAAAAPC/"
				],
				[
					415,
					3,
					"left_delete",
					null,
					"AwAAAO8YAAAAAAAA7xgAAAAAAAABAAAAZO4YAAAAAAAA7hgAAAAAAAABAAAALO0YAAAAAAAA7RgAAAAAAAABAAAALg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8BgAAAAAAADwGAAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": ".repeat("
					},
					"CAAAAO0YAAAAAAAA7hgAAAAAAAAAAAAA7hgAAAAAAADvGAAAAAAAAAAAAADvGAAAAAAAAPAYAAAAAAAAAAAAAPAYAAAAAAAA8RgAAAAAAAAAAAAA8RgAAAAAAADyGAAAAAAAAAAAAADyGAAAAAAAAPMYAAAAAAAAAAAAAPMYAAAAAAAA9BgAAAAAAAAAAAAA9BgAAAAAAAD1GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7RgAAAAAAADtGAAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"paste",
					null,
					"AQAAAPUYAAAAAAAA+hgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9RgAAAAAAAD1GAAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAPoYAAAAAAAA+xgAAAAAAAAAAAAA+xgAAAAAAAD8GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+hgAAAAAAAD6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					2,
					"left_delete",
					null,
					"AgAAAPsYAAAAAAAA+xgAAAAAAAABAAAAKfoYAAAAAAAA+hgAAAAAAAABAAAAKA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/BgAAAAAAAD8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"insert",
					{
						"characters": ")'"
					},
					"AgAAAPoYAAAAAAAA+xgAAAAAAAAAAAAA+xgAAAAAAAD8GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+hgAAAAAAAD6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					421,
					1,
					"left_delete",
					null,
					"AQAAAPsYAAAAAAAA+xgAAAAAAAABAAAAJw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/BgAAAAAAAD8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": ")+"
					},
					"AgAAAPsYAAAAAAAA/BgAAAAAAAAAAAAA/BgAAAAAAAD9GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+xgAAAAAAAD7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"cut",
					null,
					"AQAAAOkYAAAAAAAA6RgAAAAAAAAUAAAAKCcgJy5yZXBlYXQoZGVwdGgpKSs",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6RgAAAAAAAD9GAAAAAAAAAAAAAAAAPC/"
				],
				[
					461,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BgAAALcYAAAAAAAAuBgAAAAAAAAAAAAAuBgAAAAAAAC6GAAAAAAAAAAAAAC6GAAAAAAAALwYAAAAAAAAAAAAALwYAAAAAAAAvRgAAAAAAAAAAAAAvRgAAAAAAAC+GAAAAAAAAAAAAAC+GAAAAAAAAL8YAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtxgAAAAAAAC3GAAAAAAAAAAAAAAA2IBA"
				],
				[
					462,
					1,
					"insert",
					{
						"characters": " indent"
					},
					"BwAAAL8YAAAAAAAAwBgAAAAAAAAAAAAAwBgAAAAAAADBGAAAAAAAAAAAAADBGAAAAAAAAMIYAAAAAAAAAAAAAMIYAAAAAAAAwxgAAAAAAAAAAAAAwxgAAAAAAADEGAAAAAAAAAAAAADEGAAAAAAAAMUYAAAAAAAAAAAAAMUYAAAAAAAAxhgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvxgAAAAAAAC/GAAAAAAAAAAAAAAAAPC/"
				],
				[
					463,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMYYAAAAAAAAxxgAAAAAAAAAAAAAxxgAAAAAAADIGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxhgAAAAAAADGGAAAAAAAAAAAAAAAAPC/"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMgYAAAAAAAAyRgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyBgAAAAAAADIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMkYAAAAAAAAyxgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyRgAAAAAAADJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					1,
					"insert",
					{
						"characters": "depth"
					},
					"BQAAAMoYAAAAAAAAyxgAAAAAAAAAAAAAyxgAAAAAAADMGAAAAAAAAAAAAADMGAAAAAAAAM0YAAAAAAAAAAAAAM0YAAAAAAAAzhgAAAAAAAAAAAAAzhgAAAAAAADPGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyhgAAAAAAADKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAAM8YAAAAAAAA0BgAAAAAAAAAAAAA0BgAAAAAAADRGAAAAAAAAAAAAADRGAAAAAAAANIYAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzxgAAAAAAADPGAAAAAAAAAAAAAAAAPC/"
				],
				[
					468,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAANIYAAAAAAAA0xgAAAAAAAAAAAAA0xgAAAAAAADUGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0hgAAAAAAADSGAAAAAAAAAAAAAAAAPC/"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": ".repeat"
					},
					"BwAAANUYAAAAAAAA1hgAAAAAAAAAAAAA1hgAAAAAAADXGAAAAAAAAAAAAADXGAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA2RgAAAAAAAAAAAAA2RgAAAAAAADaGAAAAAAAAAAAAADaGAAAAAAAANsYAAAAAAAAAAAAANsYAAAAAAAA3BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1RgAAAAAAADVGAAAAAAAAAAAAAAAAPC/"
				],
				[
					471,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANwYAAAAAAAA3hgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3BgAAAAAAADcGAAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"cut",
					null,
					"AQAAAMkYAAAAAAAAyRgAAAAAAAAMAAAAKGRlcHRoID8/IDAp",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1RgAAAAAAADJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAMkYAAAAAAAAyhgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyRgAAAAAAADJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": "  '"
					},
					"AwAAAMoYAAAAAAAAyxgAAAAAAAAAAAAAyxgAAAAAAADMGAAAAAAAAAAAAADMGAAAAAAAAM0YAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyhgAAAAAAADKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					1,
					"paste",
					null,
					"AQAAANUYAAAAAAAA4RgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1RgAAAAAAADVGAAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					2,
					"left_delete",
					null,
					"AgAAAOEYAAAAAAAA4RgAAAAAAAABAAAAKeAYAAAAAAAA4BgAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4hgAAAAAAADiGAAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAOAYAAAAAAAA4RgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4BgAAAAAAADgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					487,
					1,
					"left_delete",
					null,
					"AQAAANUYAAAAAAAA1RgAAAAAAAABAAAAKA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1hgAAAAAAADWGAAAAAAAAAAAAAAAAPC/"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOAYAAAAAAAA4RgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4BgAAAAAAADgGAAAAAAAAP///////+9/"
				],
				[
					490,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOEYAAAAAAAA4hgAAAAAAAAAAAAA4hgAAAAAAADmGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4RgAAAAAAADhGAAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAGIZAAAAAAAAYxkAAAAAAAAAAAAAYxkAAAAAAABnGQAAAAAAAAAAAADiGAAAAAAAAOIYAAAAAAAABAAAACAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYhkAAAAAAABiGQAAAAAAAP///////+9/"
				],
				[
					583,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AwAAALwYAAAAAAAAvRgAAAAAAAAAAAAAYBkAAAAAAABgGQAAAAAAAAQAAAAgICAgvRgAAAAAAAC+GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvBgAAAAAAAC8GAAAAAAAAAAAAAAAAEZA"
				],
				[
					601,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAABYZAAAAAAAAFxkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFhkAAAAAAAAWGQAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": "  '+"
					},
					"BAAAABcZAAAAAAAAGBkAAAAAAAAAAAAAGBkAAAAAAAAZGQAAAAAAAAAAAAAZGQAAAAAAABoZAAAAAAAAAAAAABoZAAAAAAAAGxkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFxkAAAAAAAAXGQAAAAAAAAAAAAAAAPC/"
				],
				[
					611,
					2,
					"left_delete",
					null,
					"AgAAAL0YAAAAAAAAvRgAAAAAAAABAAAAL7wYAAAAAAAAvBgAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvhgAAAAAAAC+GAAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "indent"
					},
					"BwAAABQZAAAAAAAAFRkAAAAAAAAAAAAAFRkAAAAAAAAVGQAAAAAAAAQAAAAnICAnFRkAAAAAAAAWGQAAAAAAAAAAAAAWGQAAAAAAABcZAAAAAAAAAAAAABcZAAAAAAAAGBkAAAAAAAAAAAAAGBkAAAAAAAAZGQAAAAAAAAAAAAAZGQAAAAAAABoZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFBkAAAAAAAAYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"insert",
					{
						"characters": "''+'"
					},
					"BAAAABQZAAAAAAAAFRkAAAAAAAAAAAAAFRkAAAAAAAAWGQAAAAAAAAAAAAAWGQAAAAAAABcZAAAAAAAAAAAAABcZAAAAAAAAGBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFBkAAAAAAAAUGQAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					1,
					"left_delete",
					null,
					"AQAAABcZAAAAAAAAFxkAAAAAAAABAAAAJw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGBkAAAAAAAAYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					633,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAMkYAAAAAAAAyhgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyRgAAAAAAADJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					636,
					1,
					"insert",
					{
						"characters": ")+''"
					},
					"BAAAAOEYAAAAAAAA4hgAAAAAAAAAAAAA4hgAAAAAAADjGAAAAAAAAAAAAADjGAAAAAAAAOQYAAAAAAAAAAAAAOQYAAAAAAAA5RgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4RgAAAAAAADhGAAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": "\nconsole.√∂o"
					},
					"CwAAAOcYAAAAAAAA6BgAAAAAAAAAAAAA6BgAAAAAAADpGAAAAAAAAAAAAADpGAAAAAAAAOoYAAAAAAAAAAAAAOoYAAAAAAAA6xgAAAAAAAAAAAAA6xgAAAAAAADsGAAAAAAAAAAAAADsGAAAAAAAAO0YAAAAAAAAAAAAAO0YAAAAAAAA7hgAAAAAAAAAAAAA7hgAAAAAAADvGAAAAAAAAAAAAADvGAAAAAAAAPAYAAAAAAAAAAAAAPAYAAAAAAAA8RgAAAAAAAAAAAAA8RgAAAAAAADyGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5xgAAAAAAADnGAAAAAAAAAAAAAAA8H5A"
				],
				[
					641,
					2,
					"left_delete",
					null,
					"AgAAAPEYAAAAAAAA8RgAAAAAAAABAAAAb/AYAAAAAAAA8BgAAAAAAAACAAAAw7Y",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8hgAAAAAAADyGAAAAAAAAAAAAAAAAPC/"
				],
				[
					642,
					1,
					"insert",
					{
						"characters": "log"
					},
					"AwAAAPAYAAAAAAAA8RgAAAAAAAAAAAAA8RgAAAAAAADyGAAAAAAAAAAAAADyGAAAAAAAAPMYAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8BgAAAAAAADwGAAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPMYAAAAAAAA9RgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8xgAAAAAAADzGAAAAAAAAAAAAAAAAPC/"
				],
				[
					644,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAPQYAAAAAAAA9hgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9BgAAAAAAAD0GAAAAAAAAAAAAAAAAPC/"
				],
				[
					645,
					1,
					"insert",
					{
						"characters": "indent,"
					},
					"BwAAAPUYAAAAAAAA9hgAAAAAAAAAAAAA9hgAAAAAAAD3GAAAAAAAAAAAAAD3GAAAAAAAAPgYAAAAAAAAAAAAAPgYAAAAAAAA+RgAAAAAAAAAAAAA+RgAAAAAAAD6GAAAAAAAAAAAAAD6GAAAAAAAAPsYAAAAAAAAAAAAAPsYAAAAAAAA/BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9RgAAAAAAAD1GAAAAAAAAAAAAAAAAPC/"
				],
				[
					646,
					1,
					"left_delete",
					null,
					"AQAAAPsYAAAAAAAA+xgAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/BgAAAAAAAD8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					648,
					1,
					"insert",
					{
						"characters": ",indewnt"
					},
					"CAAAAPwYAAAAAAAA/RgAAAAAAAAAAAAA/RgAAAAAAAD+GAAAAAAAAAAAAAD+GAAAAAAAAP8YAAAAAAAAAAAAAP8YAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAABGQAAAAAAAAAAAAABGQAAAAAAAAIZAAAAAAAAAAAAAAIZAAAAAAAAAxkAAAAAAAAAAAAAAxkAAAAAAAAEGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/BgAAAAAAAD8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					649,
					3,
					"left_delete",
					null,
					"AwAAAAMZAAAAAAAAAxkAAAAAAAABAAAAdAIZAAAAAAAAAhkAAAAAAAABAAAAbgEZAAAAAAAAARkAAAAAAAABAAAAdw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABBkAAAAAAAAEGQAAAAAAAAAAAAAAAPC/"
				],
				[
					650,
					1,
					"insert",
					{
						"characters": "nt"
					},
					"AgAAAAEZAAAAAAAAAhkAAAAAAAAAAAAAAhkAAAAAAAADGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAARkAAAAAAAABGQAAAAAAAAAAAAAAAPC/"
				],
				[
					652,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAQZAAAAAAAABRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABBkAAAAAAAAEGQAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAALgYAAAAAAAAuRgAAAAAAAAAAAAAuRgAAAAAAAC6GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAAAAA"
				],
				[
					663,
					1,
					"insert",
					{
						"characters": "Z"
					},
					"AQAAAOoYAAAAAAAA6xgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6hgAAAAAAADqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					664,
					1,
					"left_delete",
					null,
					"AQAAAOoYAAAAAAAA6hgAAAAAAAABAAAAWg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6xgAAAAAAADrGAAAAAAAAAAAAAAAAPC/"
				],
				[
					665,
					1,
					"insert",
					{
						"characters": "&/"
					},
					"AgAAAOoYAAAAAAAA6xgAAAAAAAAAAAAA6xgAAAAAAADsGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6hgAAAAAAADqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					666,
					2,
					"left_delete",
					null,
					"AgAAAOsYAAAAAAAA6xgAAAAAAAABAAAAL+oYAAAAAAAA6hgAAAAAAAABAAAAJg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7BgAAAAAAADsGAAAAAAAAAAAAAAAAPC/"
				],
				[
					667,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAOoYAAAAAAAA6xgAAAAAAAAAAAAA6xgAAAAAAADsGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6hgAAAAAAADqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					676,
					1,
					"insert_snippet",
					{
						"contents": "\"${0:$SELECTION}\""
					},
					"AgAAAMwYAAAAAAAAzBgAAAAAAAAEAAAAJyAgJ8wYAAAAAAAA0hgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzBgAAAAAAADQGAAAAAAAAAAAAAAAAPC/"
				],
				[
					677,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAM0YAAAAAAAAzhgAAAAAAAAAAAAAzhgAAAAAAADOGAAAAAAAAAQAAAAnICAn",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzRgAAAAAAADRGAAAAAAAAAAAAAAAAPC/"
				],
				[
					679,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAM8YAAAAAAAA0BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzxgAAAAAAADPGAAAAAAAAAAAAAAAAPC/"
				],
				[
					682,
					4,
					"left_delete",
					null,
					"BAAAAOYYAAAAAAAA5hgAAAAAAAABAAAAJ+UYAAAAAAAA5RgAAAAAAAABAAAAJ+QYAAAAAAAA5BgAAAAAAAABAAAAK+MYAAAAAAAA4xgAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5xgAAAAAAADnGAAAAAAAAAAAAAAAAPC/"
				],
				[
					684,
					2,
					"right_delete",
					null,
					"AgAAAN4YAAAAAAAA3hgAAAAAAAABAAAAP94YAAAAAAAA3hgAAAAAAAABAAAAPw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3hgAAAAAAADeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					685,
					1,
					"insert",
					{
						"characters": "|"
					},
					"AQAAAN4YAAAAAAAA3xgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3hgAAAAAAADeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					2,
					"right_delete",
					null,
					"AgAAALgYAAAAAAAAuBgAAAAAAAABAAAAL7gYAAAAAAAAuBgAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAAAAA"
				],
				[
					689,
					5,
					"right_delete",
					null,
					"BQAAAMEYAAAAAAAAwRgAAAAAAAABAAAAbsEYAAAAAAAAwRgAAAAAAAABAAAAZMEYAAAAAAAAwRgAAAAAAAABAAAAZcEYAAAAAAAAwRgAAAAAAAABAAAAbsEYAAAAAAAAwRgAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwRgAAAAAAADBGAAAAAAAAAAAAAAAAPC/"
				],
				[
					690,
					1,
					"left_delete",
					null,
					"AQAAAMAYAAAAAAAAwBgAAAAAAAABAAAAaQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwRgAAAAAAADBGAAAAAAAAAAAAAAAAPC/"
				],
				[
					691,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAMAYAAAAAAAAwRgAAAAAAAAAAAAAwRgAAAAAAADCGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwBgAAAAAAADAGAAAAAAAAAAAAAAAAPC/"
				],
				[
					703,
					1,
					"paste",
					null,
					"AgAAAPYYAAAAAAAA+BgAAAAAAAAAAAAA+BgAAAAAAAD4GAAAAAAAAAYAAABpbmRlbnQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9hgAAAAAAAD8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					708,
					1,
					"paste",
					null,
					"AgAAAC8ZAAAAAAAAMRkAAAAAAAAAAAAAMRkAAAAAAAAxGQAAAAAAAAYAAABpbmRlbnQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALxkAAAAAAAA1GQAAAAAAAAAAAAAAAPC/"
				],
				[
					711,
					6,
					"left_delete",
					null,
					"BgAAADAZAAAAAAAAMBkAAAAAAAABAAAAcy8ZAAAAAAAALxkAAAAAAAABAAAAdy4ZAAAAAAAALhkAAAAAAAABAAAAKy0ZAAAAAAAALRkAAAAAAAABAAAAJywZAAAAAAAALBkAAAAAAAABAAAAJysZAAAAAAAAKxkAAAAAAAABAAAAKw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMRkAAAAAAAAxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					718,
					1,
					"left_delete",
					null,
					"AQAAACgZAAAAAAAAKBkAAAAAAAAEAAAAYWNjKw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKBkAAAAAAAAsGQAAAAAAAAAAAAAAAPC/"
				],
				[
					720,
					5,
					"left_delete",
					null,
					"BQAAABsZAAAAAAAAGxkAAAAAAAABAAAALBoZAAAAAAAAGhkAAAAAAAABAAAAYxkZAAAAAAAAGRkAAAAAAAABAAAAYxgZAAAAAAAAGBkAAAAAAAABAAAAYRcZAAAAAAAAFxkAAAAAAAABAAAAKA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHBkAAAAAAAAcGQAAAAAAAAAAAAAAAPC/"
				],
				[
					721,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAABcZAAAAAAAAGBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFxkAAAAAAAAXGQAAAAAAAAAAAAAAAPC/"
				],
				[
					723,
					6,
					"left_delete",
					null,
					"BgAAABUZAAAAAAAAFRkAAAAAAAABAAAAZRQZAAAAAAAAFBkAAAAAAAABAAAAYxMZAAAAAAAAExkAAAAAAAABAAAAdRIZAAAAAAAAEhkAAAAAAAABAAAAZBEZAAAAAAAAERkAAAAAAAABAAAAZRAZAAAAAAAAEBkAAAAAAAABAAAAcg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFhkAAAAAAAAWGQAAAAAAAAAAAAAAAPC/"
				],
				[
					724,
					1,
					"insert",
					{
						"characters": "mat"
					},
					"AwAAABAZAAAAAAAAERkAAAAAAAAAAAAAERkAAAAAAAASGQAAAAAAAAAAAAASGQAAAAAAABMZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEBkAAAAAAAAQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					725,
					1,
					"left_delete",
					null,
					"AQAAABIZAAAAAAAAEhkAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAExkAAAAAAAATGQAAAAAAAAAAAAAAAPC/"
				],
				[
					726,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAABIZAAAAAAAAExkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEhkAAAAAAAASGQAAAAAAAAAAAAAAAPC/"
				],
				[
					729,
					5,
					"left_delete",
					null,
					"BQAAAGQZAAAAAAAAZBkAAAAAAAABAAAAJ2MZAAAAAAAAYxkAAAAAAAABAAAAbmIZAAAAAAAAYhkAAAAAAAABAAAAXGEZAAAAAAAAYRkAAAAAAAABAAAAJ2AZAAAAAAAAYBkAAAAAAAABAAAAKw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZRkAAAAAAABlGQAAAAAAAAAAAAAAAPC/"
				],
				[
					733,
					1,
					"paste",
					null,
					"AgAAAP8YAAAAAAAAARkAAAAAAAAAAAAAARkAAAAAAAABGQAAAAAAAAYAAAByZXR1cm4",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABRkAAAAAAAD/GAAAAAAAAAAAAAAAAEZA"
				],
				[
					734,
					2,
					"left_delete",
					null,
					"AgAAAAAZAAAAAAAAABkAAAAAAAABAAAAc/8YAAAAAAAA/xgAAAAAAAABAAAAdw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAARkAAAAAAAABGQAAAAAAAAAAAAAAAPC/"
				],
				[
					735,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAP8YAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAABGQAAAAAAAAAAAAABGQAAAAAAAAIZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/xgAAAAAAAD/GAAAAAAAAAAAAAAAAPC/"
				],
				[
					736,
					1,
					"insert",
					{
						"characters": " items="
					},
					"BwAAAAIZAAAAAAAAAxkAAAAAAAAAAAAAAxkAAAAAAAAEGQAAAAAAAAAAAAAEGQAAAAAAAAUZAAAAAAAAAAAAAAUZAAAAAAAABhkAAAAAAAAAAAAABhkAAAAAAAAHGQAAAAAAAAAAAAAHGQAAAAAAAAgZAAAAAAAAAAAAAAgZAAAAAAAACRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAhkAAAAAAAACGQAAAAAAAAAAAAAAAPC/"
				],
				[
					737,
					6,
					"left_delete",
					null,
					"BgAAAAgZAAAAAAAACBkAAAAAAAABAAAAPQcZAAAAAAAABxkAAAAAAAABAAAAcwYZAAAAAAAABhkAAAAAAAABAAAAbQUZAAAAAAAABRkAAAAAAAABAAAAZQQZAAAAAAAABBkAAAAAAAABAAAAdAMZAAAAAAAAAxkAAAAAAAABAAAAaQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACRkAAAAAAAAJGQAAAAAAAAAAAAAAAPC/"
				],
				[
					738,
					1,
					"insert",
					{
						"characters": "elements="
					},
					"CQAAAAMZAAAAAAAABBkAAAAAAAAAAAAABBkAAAAAAAAFGQAAAAAAAAAAAAAFGQAAAAAAAAYZAAAAAAAAAAAAAAYZAAAAAAAABxkAAAAAAAAAAAAABxkAAAAAAAAIGQAAAAAAAAAAAAAIGQAAAAAAAAkZAAAAAAAAAAAAAAkZAAAAAAAAChkAAAAAAAAAAAAAChkAAAAAAAALGQAAAAAAAAAAAAALGQAAAAAAAAwZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAxkAAAAAAAADGQAAAAAAAAAAAAAAAPC/"
				],
				[
					740,
					1,
					"insert",
					{
						"characters": "\n\nreturn"
					},
					"CwAAAG0ZAAAAAAAAbhkAAAAAAAAAAAAAbhkAAAAAAAByGQAAAAAAAAAAAAByGQAAAAAAAHMZAAAAAAAAAAAAAHMZAAAAAAAAdxkAAAAAAAAAAAAAbhkAAAAAAABuGQAAAAAAAAQAAAAgICAgcxkAAAAAAAB0GQAAAAAAAAAAAAB0GQAAAAAAAHUZAAAAAAAAAAAAAHUZAAAAAAAAdhkAAAAAAAAAAAAAdhkAAAAAAAB3GQAAAAAAAAAAAAB3GQAAAAAAAHgZAAAAAAAAAAAAAHgZAAAAAAAAeRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbRkAAAAAAABtGQAAAAAAAP///////+9/"
				],
				[
					741,
					1,
					"insert",
					{
						"characters": " elmen"
					},
					"BgAAAHkZAAAAAAAAehkAAAAAAAAAAAAAehkAAAAAAAB7GQAAAAAAAAAAAAB7GQAAAAAAAHwZAAAAAAAAAAAAAHwZAAAAAAAAfRkAAAAAAAAAAAAAfRkAAAAAAAB+GQAAAAAAAAAAAAB+GQAAAAAAAH8ZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeRkAAAAAAAB5GQAAAAAAAAAAAAAAAPC/"
				],
				[
					742,
					3,
					"left_delete",
					null,
					"AwAAAH4ZAAAAAAAAfhkAAAAAAAABAAAAbn0ZAAAAAAAAfRkAAAAAAAABAAAAZXwZAAAAAAAAfBkAAAAAAAABAAAAbQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfxkAAAAAAAB/GQAAAAAAAAAAAAAAAPC/"
				],
				[
					743,
					1,
					"insert",
					{
						"characters": "ements.join"
					},
					"CwAAAHwZAAAAAAAAfRkAAAAAAAAAAAAAfRkAAAAAAAB+GQAAAAAAAAAAAAB+GQAAAAAAAH8ZAAAAAAAAAAAAAH8ZAAAAAAAAgBkAAAAAAAAAAAAAgBkAAAAAAACBGQAAAAAAAAAAAACBGQAAAAAAAIIZAAAAAAAAAAAAAIIZAAAAAAAAgxkAAAAAAAAAAAAAgxkAAAAAAACEGQAAAAAAAAAAAACEGQAAAAAAAIUZAAAAAAAAAAAAAIUZAAAAAAAAhhkAAAAAAAAAAAAAhhkAAAAAAACHGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfBkAAAAAAAB8GQAAAAAAAAAAAAAAAPC/"
				],
				[
					744,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIcZAAAAAAAAiRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhxkAAAAAAACHGQAAAAAAAAAAAAAAAPC/"
				],
				[
					745,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAIgZAAAAAAAAihkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiBkAAAAAAACIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					746,
					1,
					"insert",
					{
						"characters": "\\n"
					},
					"AgAAAIkZAAAAAAAAihkAAAAAAAAAAAAAihkAAAAAAACLGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiRkAAAAAAACJGQAAAAAAAAAAAAAAAPC/"
				],
				[
					748,
					1,
					"insert",
					{
						"characters": "+ws"
					},
					"AwAAAIwZAAAAAAAAjRkAAAAAAAAAAAAAjRkAAAAAAACOGQAAAAAAAAAAAACOGQAAAAAAAI8ZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjBkAAAAAAACMGQAAAAAAAAAAAAAAAPC/"
				],
				[
					750,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJAZAAAAAAAAkRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkBkAAAAAAACQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					763,
					4,
					"left_delete",
					null,
					"BAAAAGoZAAAAAAAAahkAAAAAAAABAAAAJ2kZAAAAAAAAaRkAAAAAAAABAAAAJ2gZAAAAAAAAaBkAAAAAAAABAAAAIGcZAAAAAAAAZxkAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaxkAAAAAAABrGQAAAAAAAAAAAAAAAPC/"
				],
				[
					778,
					2,
					"left_delete",
					null,
					"AgAAADkZAAAAAAAAORkAAAAAAAABAAAAIDgZAAAAAAAAOBkAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOhkAAAAAAAA6GQAAAAAAAAAAAAAAAPC/"
				],
				[
					787,
					1,
					"left_delete",
					null,
					"AQAAAEAZAAAAAAAAQBkAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQRkAAAAAAABBGQAAAAAAAAAAAAAAAPC/"
				],
				[
					788,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAEAZAAAAAAAAQRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQBkAAAAAAABAGQAAAAAAAAAAAAAAAPC/"
				],
				[
					789,
					1,
					"right_delete",
					null,
					"AQAAAEEZAAAAAAAAQRkAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQRkAAAAAAABBGQAAAAAAAAAAAAAAAPC/"
				],
				[
					800,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAIkZAAAAAAAAixkAAAAAAAAAAAAAexkAAAAAAAB9GQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiRkAAAAAAAB7GQAAAAAAAAAAAAAAAPC/"
				],
				[
					815,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA4BgAAAAAAADgGAAAAAAAAAIAAAAvLw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4RgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					822,
					1,
					"cut",
					null,
					"AQAAAN8YAAAAAAAA3xgAAAAAAAAbAAAAIGNvbnNvbGUubG9nKCdpbmRlbnQnLHdzKTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3xgAAAAAAAD6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					823,
					1,
					"paste",
					null,
					"AQAAAN8YAAAAAAAA+hgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					826,
					1,
					"paste",
					null,
					"AQAAAGYZAAAAAAAAgRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZhkAAAAAAABmGQAAAAAAAAAAAAAAAPC/"
				],
				[
					836,
					1,
					"paste",
					null,
					"AgAAAHQZAAAAAAAAfBkAAAAAAAAAAAAAfBkAAAAAAAB8GQAAAAAAAAYAAABpbmRlbnQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdBkAAAAAAAB6GQAAAAAAAAAAAAAAAPC/"
				],
				[
					841,
					1,
					"paste",
					null,
					"AgAAAH4ZAAAAAAAAhhkAAAAAAAAAAAAAhhkAAAAAAACGGQAAAAAAAAIAAAB3cw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfhkAAAAAAACAGQAAAAAAAAAAAAAAAPC/"
				],
				[
					851,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIgZAAAAAAAAiRkAAAAAAAAAAAAAiRkAAAAAAACKGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiBkAAAAAAACIGQAAAAAAAP///////+9/"
				],
				[
					854,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAGcZAAAAAAAAaBkAAAAAAAAAAAAAaBkAAAAAAABpGQAAAAAAAAAAAACLGQAAAAAAAIsZAAAAAAAAAQAAACA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZxkAAAAAAABnGQAAAAAAAAAAAAAAACZA"
				],
				[
					856,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPsYAAAAAAAA/BgAAAAAAAAAAAAA/BgAAAAAAAD9GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+xgAAAAAAAD7GAAAAAAAAAAAAAAAACZA"
				],
				[
					861,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAPoYAAAAAAAA/BgAAAAAAAAAAAAAuBgAAAAAAAC6GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuBgAAAAAAAD6GAAAAAAAAAAAAAAAAAAA"
				],
				[
					868,
					1,
					"insert",
					{
						"characters": "/√ß"
					},
					"AgAAAOEYAAAAAAAA4hgAAAAAAAAAAAAA4hgAAAAAAADjGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4RgAAAAAAADhGAAAAAAAAAAAAAAAAAAA"
				],
				[
					871,
					1,
					"left_delete",
					null,
					"AQAAAOIYAAAAAAAA4hgAAAAAAAACAAAAw6c",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4xgAAAAAAADjGAAAAAAAAAAAAAAAADZA"
				],
				[
					872,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAOIYAAAAAAAA4xgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4hgAAAAAAADiGAAAAAAAAAAAAAAAAPC/"
				],
				[
					875,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAHEZAAAAAAAAchkAAAAAAAAAAAAAchkAAAAAAABzGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcRkAAAAAAABxGQAAAAAAAAAAAAAAACZA"
				],
				[
					877,
					3,
					"left_delete",
					null,
					"AwAAALoYAAAAAAAAuhgAAAAAAAABAAAAILkYAAAAAAAAuRgAAAAAAAABAAAAKrgYAAAAAAAAuBgAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuxgAAAAAAAC7GAAAAAAAAAAAAAAAgEBA"
				],
				[
					882,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAALgYAAAAAAAAuRgAAAAAAAAAAAAAuRgAAAAAAAC6GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAAPC/"
				],
				[
					891,
					1,
					"left_delete",
					null,
					"AQAAALgYAAAAAAAAuBgAAAAAAABJAAAALy8gICBsZXQgd3MgPSAoIiAiKS5yZXBlYXQoZGVwdGggfCAwKTsKCi8qIGNvbnNvbGUubG9nKCdpbmRlbnQnLHdzKTsKKi8gCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuBgAAAAAAAABGQAAAAAAAAAAAAAAAAAA"
				],
				[
					894,
					1,
					"left_delete",
					null,
					"AQAAACYZAAAAAAAAJhkAAAAAAAAnAAAAIC8vY29uc29sZS5sb2coJ2VsZW1lbnRzJyxlbGVtZW50cyk7CgoK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJhkAAAAAAABNGQAAAAAAAAAAAAAAAAAA"
				],
				[
					897,
					4,
					"left_delete",
					null,
					"BAAAAEcZAAAAAAAARxkAAAAAAAABAAAAc0YZAAAAAAAARhkAAAAAAAABAAAAd0UZAAAAAAAARRkAAAAAAAABAAAAK0QZAAAAAAAARBkAAAAAAAABAAAAJw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASBkAAAAAAABIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAEQZAAAAAAAARRkAAAAAAAAAAAAARRkAAAAAAABGGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARBkAAAAAAABEGQAAAAAAAAAAAAAAAPC/"
				],
				[
					899,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAEYZAAAAAAAASBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARhkAAAAAAABGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					900,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAEcZAAAAAAAASBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARxkAAAAAAABHGQAAAAAAAAAAAAAAAPC/"
				],
				[
					901,
					1,
					"left_delete",
					null,
					"AQAAAEcZAAAAAAAARxkAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASBkAAAAAAABIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					902,
					1,
					"right_delete",
					null,
					"AQAAAEcZAAAAAAAARxkAAAAAAAABAAAAJw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARxkAAAAAAABHGQAAAAAAAAAAAAAAAPC/"
				],
				[
					905,
					2,
					"left_delete",
					null,
					"AgAAAEkZAAAAAAAASRkAAAAAAAABAAAAL0gZAAAAAAAASBkAAAAAAAABAAAAKg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAShkAAAAAAABKGQAAAAAAAAAAAAAAAPC/"
				],
				[
					907,
					2,
					"left_delete",
					null,
					"AgAAADoZAAAAAAAAOhkAAAAAAAABAAAAKjkZAAAAAAAAORkAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOxkAAAAAAAA7GQAAAAAAAAAAAAAAAPC/"
				],
				[
					912,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEIZAAAAAAAAQxkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQhkAAAAAAABCGQAAAAAAAAAAAAAAAPC/"
				],
				[
					913,
					1,
					"left_delete",
					null,
					"AQAAAEIZAAAAAAAAQhkAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQxkAAAAAAABDGQAAAAAAAAAAAAAAAPC/"
				],
				[
					914,
					1,
					"insert",
					{
						"characters": "'+"
					},
					"AgAAAEIZAAAAAAAAQxkAAAAAAAAAAAAAQxkAAAAAAABEGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQhkAAAAAAABCGQAAAAAAAAAAAAAAAPC/"
				],
				[
					915,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEQZAAAAAAAARhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARBkAAAAAAABEGQAAAAAAAAAAAAAAAPC/"
				],
				[
					916,
					3,
					"right_delete",
					null,
					"AwAAAEUZAAAAAAAARRkAAAAAAAABAAAAKUUZAAAAAAAARRkAAAAAAAABAAAAIEUZAAAAAAAARRkAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARRkAAAAAAABFGQAAAAAAAAAAAAAAAPC/"
				],
				[
					917,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAEUZAAAAAAAARhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARRkAAAAAAABFGQAAAAAAAAAAAAAAAPC/"
				],
				[
					918,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEYZAAAAAAAARxkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARhkAAAAAAABGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					919,
					2,
					"left_delete",
					null,
					"AgAAAEYZAAAAAAAARhkAAAAAAAABAAAAIEUZAAAAAAAARRkAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARxkAAAAAAABHGQAAAAAAAAAAAAAAAPC/"
				],
				[
					920,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAEUZAAAAAAAARhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARRkAAAAAAABFGQAAAAAAAAAAAAAAAPC/"
				],
				[
					921,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAEYZAAAAAAAARxkAAAAAAAAAAAAARxkAAAAAAABIGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARhkAAAAAAABGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					923,
					1,
					"insert",
					{
						"characters": ".repeat"
					},
					"BwAAAEkZAAAAAAAAShkAAAAAAAAAAAAAShkAAAAAAABLGQAAAAAAAAAAAABLGQAAAAAAAEwZAAAAAAAAAAAAAEwZAAAAAAAATRkAAAAAAAAAAAAATRkAAAAAAABOGQAAAAAAAAAAAABOGQAAAAAAAE8ZAAAAAAAAAAAAAE8ZAAAAAAAAUBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASRkAAAAAAABJGQAAAAAAAAAAAAAAAPC/"
				],
				[
					924,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFAZAAAAAAAAUhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUBkAAAAAAABQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					925,
					1,
					"insert",
					{
						"characters": "depth|1"
					},
					"BwAAAFEZAAAAAAAAUhkAAAAAAAAAAAAAUhkAAAAAAABTGQAAAAAAAAAAAABTGQAAAAAAAFQZAAAAAAAAAAAAAFQZAAAAAAAAVRkAAAAAAAAAAAAAVRkAAAAAAABWGQAAAAAAAAAAAABWGQAAAAAAAFcZAAAAAAAAAAAAAFcZAAAAAAAAWBkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAURkAAAAAAABRGQAAAAAAAAAAAAAAAPC/"
				],
				[
					927,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAFoZAAAAAAAAWxkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWhkAAAAAAABaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					936,
					1,
					"insert_snippet",
					{
						"contents": "'${0:$SELECTION}'"
					},
					"AgAAAEQZAAAAAAAARBkAAAAAAAAVAAAAKCcgICcucmVwZWF0KGRlcHRofDEpRBkAAAAAAABbGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARBkAAAAAAABZGQAAAAAAAAAAAAAAAPC/"
				],
				[
					937,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AwAAAEUZAAAAAAAARhkAAAAAAAAAAAAARhkAAAAAAABGGQAAAAAAABUAAAAoJyAgJy5yZXBlYXQoZGVwdGh8MSlGGQAAAAAAAEcZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARRkAAAAAAABaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					939,
					1,
					"right_delete",
					null,
					"AQAAAEgZAAAAAAAASBkAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASBkAAAAAAABIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					983,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAEoZAAAAAAAATBkAAAAAAAAAAAAAuhgAAAAAAAC8GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuhgAAAAAAABKGQAAAAAAAAAAAAAAAPC/"
				],
				[
					989,
					1,
					"insert",
					{
						"characters": "let"
					},
					"BAAAAFUZAAAAAAAAVhkAAAAAAAAAAAAAVhkAAAAAAABWGQAAAAAAAAcAAAByZXR1cm4gVhkAAAAAAABXGQAAAAAAAAAAAABXGQAAAAAAAFgZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXBkAAAAAAABVGQAAAAAAAAAAAAAAAEZA"
				],
				[
					990,
					1,
					"insert",
					{
						"characters": " str0"
					},
					"BQAAAFgZAAAAAAAAWRkAAAAAAAAAAAAAWRkAAAAAAABaGQAAAAAAAAAAAABaGQAAAAAAAFsZAAAAAAAAAAAAAFsZAAAAAAAAXBkAAAAAAAAAAAAAXBkAAAAAAABdGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWBkAAAAAAABYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					991,
					1,
					"left_delete",
					null,
					"AQAAAFwZAAAAAAAAXBkAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXRkAAAAAAABdGQAAAAAAAAAAAAAAAPC/"
				],
				[
					992,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAFwZAAAAAAAAXRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXBkAAAAAAABcGQAAAAAAAAAAAAAAAPC/"
				],
				[
					994,
					1,
					"insert",
					{
						"characters": "$$"
					},
					"AgAAANgZAAAAAAAA2RkAAAAAAAAAAAAA2RkAAAAAAADaGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2BkAAAAAAADYGQAAAAAAAP///////+9/"
				],
				[
					995,
					2,
					"left_delete",
					null,
					"AgAAANkZAAAAAAAA2RkAAAAAAAABAAAAJNgZAAAAAAAA2BkAAAAAAAABAAAAJA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2hkAAAAAAADaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					996,
					1,
					"insert",
					{
						"characters": "\n\nstr.repla"
					},
					"DgAAANgZAAAAAAAA2RkAAAAAAAAAAAAA2RkAAAAAAADdGQAAAAAAAAAAAADdGQAAAAAAAN4ZAAAAAAAAAAAAAN4ZAAAAAAAA4hkAAAAAAAAAAAAA2RkAAAAAAADZGQAAAAAAAAQAAAAgICAg3hkAAAAAAADfGQAAAAAAAAAAAADfGQAAAAAAAOAZAAAAAAAAAAAAAOAZAAAAAAAA4RkAAAAAAAAAAAAA4RkAAAAAAADiGQAAAAAAAAAAAADiGQAAAAAAAOMZAAAAAAAAAAAAAOMZAAAAAAAA5BkAAAAAAAAAAAAA5BkAAAAAAADlGQAAAAAAAAAAAADlGQAAAAAAAOYZAAAAAAAAAAAAAOYZAAAAAAAA5xkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2BkAAAAAAADYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					997,
					1,
					"insert",
					{
						"characters": "ce"
					},
					"AgAAAOcZAAAAAAAA6BkAAAAAAAAAAAAA6BkAAAAAAADpGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5xkAAAAAAADnGQAAAAAAAAAAAAAAAPC/"
				],
				[
					998,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOkZAAAAAAAA6xkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6RkAAAAAAADpGQAAAAAAAAAAAAAAAPC/"
				],
				[
					999,
					1,
					"insert",
					{
						"characters": "&/"
					},
					"AgAAAOoZAAAAAAAA6xkAAAAAAAAAAAAA6xkAAAAAAADsGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6hkAAAAAAADqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1000,
					2,
					"left_delete",
					null,
					"AgAAAOsZAAAAAAAA6xkAAAAAAAABAAAAL+oZAAAAAAAA6hkAAAAAAAABAAAAJg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7BkAAAAAAADsGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1001,
					1,
					"insert",
					{
						"characters": "/.*\\"
					},
					"BAAAAOoZAAAAAAAA6xkAAAAAAAAAAAAA6xkAAAAAAADsGQAAAAAAAAAAAADsGQAAAAAAAO0ZAAAAAAAAAAAAAO0ZAAAAAAAA7hkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6hkAAAAAAADqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1002,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAO4ZAAAAAAAA8BkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7hkAAAAAAADuGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1003,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAO8ZAAAAAAAA8BkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7xkAAAAAAADvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1004,
					1,
					"left_delete",
					null,
					"AQAAAO8ZAAAAAAAA7xkAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8BkAAAAAAADwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1005,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAO8ZAAAAAAAA8RkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7xkAAAAAAADvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1006,
					1,
					"insert",
					{
						"characters": ".*\\"
					},
					"AwAAAPAZAAAAAAAA8RkAAAAAAAAAAAAA8RkAAAAAAADyGQAAAAAAAAAAAADyGQAAAAAAAPMZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8BkAAAAAAADwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1008,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAAPQZAAAAAAAA9RkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9BkAAAAAAAD0GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1010,
					1,
					"insert",
					{
						"characters": ".*"
					},
					"AgAAAPYZAAAAAAAA9xkAAAAAAAAAAAAA9xkAAAAAAAD4GQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9hkAAAAAAAD2GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1011,
					2,
					"left_delete",
					null,
					"AgAAAPcZAAAAAAAA9xkAAAAAAAABAAAAKvYZAAAAAAAA9hkAAAAAAAABAAAALg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+BkAAAAAAAD4GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1012,
					1,
					"insert",
					{
						"characters": "\\s*$/,"
					},
					"BgAAAPYZAAAAAAAA9xkAAAAAAAAAAAAA9xkAAAAAAAD4GQAAAAAAAAAAAAD4GQAAAAAAAPkZAAAAAAAAAAAAAPkZAAAAAAAA+hkAAAAAAAAAAAAA+hkAAAAAAAD7GQAAAAAAAAAAAAD7GQAAAAAAAPwZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9hkAAAAAAAD2GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1013,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPwZAAAAAAAA/RkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/BkAAAAAAAD8GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1014,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAP0ZAAAAAAAA/xkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/RkAAAAAAAD9GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1015,
					1,
					"insert",
					{
						"characters": "$1"
					},
					"AgAAAP4ZAAAAAAAA/xkAAAAAAAAAAAAA/xkAAAAAAAAAGgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/hkAAAAAAAD+GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1018,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAPsZAAAAAAAA/BkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+xkAAAAAAAD7GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1020,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAMaAAAAAAAABBoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAxoAAAAAAAADGgAAAAAAAP///////+9/"
				],
				[
					1022,
					1,
					"insert",
					{
						"characters": "ewruen"
					},
					"BgAAAN4ZAAAAAAAA3xkAAAAAAAAAAAAA3xkAAAAAAADgGQAAAAAAAAAAAADgGQAAAAAAAOEZAAAAAAAAAAAAAOEZAAAAAAAA4hkAAAAAAAAAAAAA4hkAAAAAAADjGQAAAAAAAAAAAADjGQAAAAAAAOQZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3hkAAAAAAADeGQAAAAAAAAAAAAAAAEZA"
				],
				[
					1023,
					6,
					"left_delete",
					null,
					"BgAAAOMZAAAAAAAA4xkAAAAAAAABAAAAbuIZAAAAAAAA4hkAAAAAAAABAAAAZeEZAAAAAAAA4RkAAAAAAAABAAAAdeAZAAAAAAAA4BkAAAAAAAABAAAAct8ZAAAAAAAA3xkAAAAAAAABAAAAd94ZAAAAAAAA3hkAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5BkAAAAAAADkGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1024,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAN4ZAAAAAAAA3xkAAAAAAAAAAAAA3xkAAAAAAADgGQAAAAAAAAAAAADgGQAAAAAAAOEZAAAAAAAAAAAAAOEZAAAAAAAA4hkAAAAAAAAAAAAA4hkAAAAAAADjGQAAAAAAAAAAAADjGQAAAAAAAOQZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3hkAAAAAAADeGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1025,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOQZAAAAAAAA5RkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5BkAAAAAAADkGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1030,
					1,
					"left_delete",
					null,
					"AQAAAAgaAAAAAAAACBoAAAAAAAABAAAAIg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACRoAAAAAAAAJGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1031,
					1,
					"insert",
					{
						"characters": "'0"
					},
					"AgAAAAgaAAAAAAAACRoAAAAAAAAAAAAACRoAAAAAAAAKGgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACBoAAAAAAAAIGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1032,
					1,
					"left_delete",
					null,
					"AQAAAAkaAAAAAAAACRoAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAChoAAAAAAAAKGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1034,
					1,
					"left_delete",
					null,
					"AQAAAAUaAAAAAAAABRoAAAAAAAABAAAAIg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABhoAAAAAAAAGGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1035,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAAUaAAAAAAAABhoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABRoAAAAAAAAFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1037,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAAsaAAAAAAAADBoAAAAAAAAAAAAADBoAAAAAAAAQGgAAAAAAAAAAAAAMGgAAAAAAAAwaAAAAAAAABAAAACAgICAMGgAAAAAAABIaAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACxoAAAAAAAALGgAAAAAAAP///////+9/"
				],
				[
					1042,
					1,
					"left_delete",
					null,
					"AgAAAPkZAAAAAAAA+RkAAAAAAAABAAAAXAsaAAAAAAAACxoAAAAAAAAGAAAAICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+hkAAAAAAAD6GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1049,
					1,
					"left_delete",
					null,
					"AQAAAAoaAAAAAAAAChoAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACxoAAAAAAAALGgAAAAAAAP///////+9/"
				],
				[
					1053,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAANkZAAAAAAAA2hkAAAAAAAAAAAAA2hkAAAAAAADbGQAAAAAAAAAAAADbGQAAAAAAANwZAAAAAAAAAAAAANwZAAAAAAAA3RkAAAAAAAAAAAAA3RkAAAAAAADeGQAAAAAAAAAAAADeGQAAAAAAAN8ZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2RkAAAAAAADZGQAAAAAAAAAAAAAAgIBA"
				],
				[
					1054,
					1,
					"insert",
					{
						"characters": " str;"
					},
					"BQAAAN8ZAAAAAAAA4BkAAAAAAAAAAAAA4BkAAAAAAADhGQAAAAAAAAAAAADhGQAAAAAAAOIZAAAAAAAAAAAAAOIZAAAAAAAA4xkAAAAAAAAAAAAA4xkAAAAAAADkGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3xkAAAAAAADfGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1056,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAOUZAAAAAAAA5hkAAAAAAAAAAAAA5hkAAAAAAADnGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5RkAAAAAAADlGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1064,
					1,
					"insert",
					{
						"characters": "q"
					},
					"AQAAAOAZAAAAAAAA4RkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4BkAAAAAAADgGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1065,
					1,
					"left_delete",
					null,
					"AQAAAOAZAAAAAAAA4BkAAAAAAAABAAAAcQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4RkAAAAAAADhGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1066,
					1,
					"insert",
					{
						"characters": "quote("
					},
					"BgAAAOAZAAAAAAAA4RkAAAAAAAAAAAAA4RkAAAAAAADiGQAAAAAAAAAAAADiGQAAAAAAAOMZAAAAAAAAAAAAAOMZAAAAAAAA5BkAAAAAAAAAAAAA5BkAAAAAAADlGQAAAAAAAAAAAADlGQAAAAAAAOYZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4BkAAAAAAADgGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1069,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOkZAAAAAAAA6xkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6RkAAAAAAADpGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1071,
					2,
					"left_delete",
					null,
					"AgAAAOoZAAAAAAAA6hkAAAAAAAABAAAAKekZAAAAAAAA6RkAAAAAAAABAAAAKA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6xkAAAAAAADrGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1072,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAOkZAAAAAAAA6hkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6RkAAAAAAADpGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1076,
					5,
					"left_delete",
					null,
					"BQAAAOQZAAAAAAAA5BkAAAAAAAABAAAAZeMZAAAAAAAA4xkAAAAAAAABAAAAdOIZAAAAAAAA4hkAAAAAAAABAAAAb+EZAAAAAAAA4RkAAAAAAAABAAAAdeAZAAAAAAAA4BkAAAAAAAABAAAAcQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5RkAAAAAAADlGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1077,
					1,
					"insert",
					{
						"characters": "escape"
					},
					"BgAAAOAZAAAAAAAA4RkAAAAAAAAAAAAA4RkAAAAAAADiGQAAAAAAAAAAAADiGQAAAAAAAOMZAAAAAAAAAAAAAOMZAAAAAAAA5BkAAAAAAAAAAAAA5BkAAAAAAADlGQAAAAAAAAAAAADlGQAAAAAAAOYZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4BkAAAAAAADgGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1080,
					6,
					"left_delete",
					null,
					"BgAAAOUZAAAAAAAA5RkAAAAAAAABAAAAZeQZAAAAAAAA5BkAAAAAAAABAAAAcOMZAAAAAAAA4xkAAAAAAAABAAAAYeIZAAAAAAAA4hkAAAAAAAABAAAAY+EZAAAAAAAA4RkAAAAAAAABAAAAc+AZAAAAAAAA4BkAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5hkAAAAAAADmGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1081,
					1,
					"insert",
					{
						"characters": "quote"
					},
					"BQAAAOAZAAAAAAAA4RkAAAAAAAAAAAAA4RkAAAAAAADiGQAAAAAAAAAAAADiGQAAAAAAAOMZAAAAAAAAAAAAAOMZAAAAAAAA5BkAAAAAAAAAAAAA5BkAAAAAAADlGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4BkAAAAAAADgGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1084,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOkZAAAAAAAA6hkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6RkAAAAAAADpGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1085,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOoZAAAAAAAA7BkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6hkAAAAAAADqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1086,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAOsZAAAAAAAA7BkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6xkAAAAAAADrGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1109,
					1,
					"insert",
					{
						"characters": "str"
					},
					"AwAAANkZAAAAAAAA2hkAAAAAAAAAAAAA2hkAAAAAAADbGQAAAAAAAAAAAADbGQAAAAAAANwZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2RkAAAAAAADZGQAAAAAAAAAAAAAAAAAA"
				],
				[
					1110,
					6,
					"right_delete",
					null,
					"BgAAANwZAAAAAAAA3BkAAAAAAAABAAAActwZAAAAAAAA3BkAAAAAAAABAAAAZdwZAAAAAAAA3BkAAAAAAAABAAAAdNwZAAAAAAAA3BkAAAAAAAABAAAAddwZAAAAAAAA3BkAAAAAAAABAAAActwZAAAAAAAA3BkAAAAAAAABAAAAbg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3BkAAAAAAADcGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1111,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAANwZAAAAAAAA3RkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3BkAAAAAAADcGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1113,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAO0ZAAAAAAAA7hkAAAAAAAAAAAAA7hkAAAAAAADvGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7RkAAAAAAADtGQAAAAAAAP///////+9/"
				],
				[
					1115,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BAAAAO4ZAAAAAAAA7xkAAAAAAAAAAAAA7xkAAAAAAADwGQAAAAAAAAAAAADwGQAAAAAAAPEZAAAAAAAAAAAAAPEZAAAAAAAA8hkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7hkAAAAAAADuGQAAAAAAAAAAAAAAAAAA"
				],
				[
					1116,
					1,
					"insert",
					{
						"characters": " inde"
					},
					"BQAAAPIZAAAAAAAA8xkAAAAAAAAAAAAA8xkAAAAAAAD0GQAAAAAAAAAAAAD0GQAAAAAAAPUZAAAAAAAAAAAAAPUZAAAAAAAA9hkAAAAAAAAAAAAA9hkAAAAAAAD3GQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8hkAAAAAAADyGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1117,
					1,
					"insert",
					{
						"characters": "xce"
					},
					"AwAAAPcZAAAAAAAA+BkAAAAAAAAAAAAA+BkAAAAAAAD5GQAAAAAAAAAAAAD5GQAAAAAAAPoZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9xkAAAAAAAD3GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1118,
					2,
					"left_delete",
					null,
					"AgAAAPkZAAAAAAAA+RkAAAAAAAABAAAAZfgZAAAAAAAA+BkAAAAAAAABAAAAYw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+hkAAAAAAAD6GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1119,
					1,
					"insert",
					{
						"characters": "es="
					},
					"AwAAAPgZAAAAAAAA+RkAAAAAAAAAAAAA+RkAAAAAAAD6GQAAAAAAAAAAAAD6GQAAAAAAAPsZAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+BkAAAAAAAD4GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1120,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPsZAAAAAAAA/RkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+xkAAAAAAAD7GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1121,
					1,
					"insert",
					{
						"characters": "str.indew"
					},
					"CQAAAPwZAAAAAAAA/RkAAAAAAAAAAAAA/RkAAAAAAAD+GQAAAAAAAAAAAAD+GQAAAAAAAP8ZAAAAAAAAAAAAAP8ZAAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAABGgAAAAAAAAAAAAABGgAAAAAAAAIaAAAAAAAAAAAAAAIaAAAAAAAAAxoAAAAAAAAAAAAAAxoAAAAAAAAEGgAAAAAAAAAAAAAEGgAAAAAAAAUaAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/BkAAAAAAAD8GQAAAAAAAAAAAAAAAPC/"
				],
				[
					1122,
					2,
					"left_delete",
					null,
					"AgAAAAQaAAAAAAAABBoAAAAAAAABAAAAdwMaAAAAAAAAAxoAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABRoAAAAAAAAFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1123,
					1,
					"insert",
					{
						"characters": "exOf"
					},
					"BAAAAAMaAAAAAAAABBoAAAAAAAAAAAAABBoAAAAAAAAFGgAAAAAAAAAAAAAFGgAAAAAAAAYaAAAAAAAAAAAAAAYaAAAAAAAABxoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAxoAAAAAAAADGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1124,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAcaAAAAAAAACRoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABxoAAAAAAAAHGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1125,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAAgaAAAAAAAAChoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACBoAAAAAAAAIGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1126,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAAkaAAAAAAAAChoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACRoAAAAAAAAJGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1127,
					1,
					"left_delete",
					null,
					"AQAAAAkaAAAAAAAACRoAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAChoAAAAAAAAKGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1128,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAAkaAAAAAAAAChoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACRoAAAAAAAAJGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1130,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAwaAAAAAAAADRoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADBoAAAAAAAAMGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1131,
					1,
					"insert",
					{
						"characters": " str.√∂la"
					},
					"CAAAAA0aAAAAAAAADhoAAAAAAAAAAAAADhoAAAAAAAAPGgAAAAAAAAAAAAAPGgAAAAAAABAaAAAAAAAAAAAAABAaAAAAAAAAERoAAAAAAAAAAAAAERoAAAAAAAASGgAAAAAAAAAAAAASGgAAAAAAABMaAAAAAAAAAAAAABMaAAAAAAAAFBoAAAAAAAAAAAAAFBoAAAAAAAAVGgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADRoAAAAAAAANGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1132,
					3,
					"left_delete",
					null,
					"AwAAABQaAAAAAAAAFBoAAAAAAAABAAAAYRMaAAAAAAAAExoAAAAAAAABAAAAbBIaAAAAAAAAEhoAAAAAAAACAAAAw7Y",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFRoAAAAAAAAVGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1133,
					1,
					"insert",
					{
						"characters": "lastIndexOf"
					},
					"CwAAABIaAAAAAAAAExoAAAAAAAAAAAAAExoAAAAAAAAUGgAAAAAAAAAAAAAUGgAAAAAAABUaAAAAAAAAAAAAABUaAAAAAAAAFhoAAAAAAAAAAAAAFhoAAAAAAAAXGgAAAAAAAAAAAAAXGgAAAAAAABgaAAAAAAAAAAAAABgaAAAAAAAAGRoAAAAAAAAAAAAAGRoAAAAAAAAaGgAAAAAAAAAAAAAaGgAAAAAAABsaAAAAAAAAAAAAABsaAAAAAAAAHBoAAAAAAAAAAAAAHBoAAAAAAAAdGgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEhoAAAAAAAASGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1134,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAB0aAAAAAAAAHxoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHRoAAAAAAAAdGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1135,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAB4aAAAAAAAAIBoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHhoAAAAAAAAeGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1136,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAB8aAAAAAAAAIBoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHxoAAAAAAAAfGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1138,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACMaAAAAAAAAJBoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIxoAAAAAAAAjGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1139,
					1,
					"insert",
					{
						"characters": "\n\nreturn"
					},
					"CAAAACQaAAAAAAAAJRoAAAAAAAAAAAAAJRoAAAAAAAAmGgAAAAAAAAAAAAAmGgAAAAAAACcaAAAAAAAAAAAAACcaAAAAAAAAKBoAAAAAAAAAAAAAKBoAAAAAAAApGgAAAAAAAAAAAAApGgAAAAAAACoaAAAAAAAAAAAAACoaAAAAAAAAKxoAAAAAAAAAAAAAKxoAAAAAAAAsGgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJBoAAAAAAAAkGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1140,
					1,
					"insert",
					{
						"characters": " str;"
					},
					"BQAAACwaAAAAAAAALRoAAAAAAAAAAAAALRoAAAAAAAAuGgAAAAAAAAAAAAAuGgAAAAAAAC8aAAAAAAAAAAAAAC8aAAAAAAAAMBoAAAAAAAAAAAAAMBoAAAAAAAAxGgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALBoAAAAAAAAsGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1143,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANkZAAAAAAAA2hkAAAAAAAAAAAAA2hkAAAAAAADbGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2RkAAAAAAADZGQAAAAAAAAAAAAAAAAAA"
				],
				[
					1155,
					1,
					"insert",
					{
						"characters": ".substring"
					},
					"CgAAADIaAAAAAAAAMxoAAAAAAAAAAAAAMxoAAAAAAAA0GgAAAAAAAAAAAAA0GgAAAAAAADUaAAAAAAAAAAAAADUaAAAAAAAANhoAAAAAAAAAAAAANhoAAAAAAAA3GgAAAAAAAAAAAAA3GgAAAAAAADgaAAAAAAAAAAAAADgaAAAAAAAAORoAAAAAAAAAAAAAORoAAAAAAAA6GgAAAAAAAAAAAAA6GgAAAAAAADsaAAAAAAAAAAAAADsaAAAAAAAAPBoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMhoAAAAAAAAyGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1156,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADwaAAAAAAAAPhoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPBoAAAAAAAA8GgAAAAAAAAAAAAAAAPC/"
				],
				[
					1157,
					1,
					"insert",
					{
						"characters": "...indew"
					},
					"CAAAAD0aAAAAAAAAPhoAAAAAAAAAAAAAPhoAAAAAAAA/GgAAAAAAAAAAAAA/GgAAAAAAAEAaAAAAAAAAAAAAAEAaAAAAAAAAQRoAAAAAAAAAAAAAQRoAAAAAAABCGgAAAAAAAAAAAABCGgAAAAAAAEMaAAAAAAAAAAAAAEMaAAAAAAAARBoAAAAAAAAAAAAARBoAAAAAAABFGgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPRoAAAAAAAA9GgAAAAAAAAAAAAAAAPC/"
				],
				[
					1158,
					2,
					"left_delete",
					null,
					"AgAAAEQaAAAAAAAARBoAAAAAAAABAAAAd0MaAAAAAAAAQxoAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARRoAAAAAAABFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1159,
					1,
					"insert",
					{
						"characters": "exes"
					},
					"BAAAAEMaAAAAAAAARBoAAAAAAAAAAAAARBoAAAAAAABFGgAAAAAAAAAAAABFGgAAAAAAAEYaAAAAAAAAAAAAAEYaAAAAAAAARxoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQxoAAAAAAABDGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1163,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAEgaAAAAAAAAShoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASBoAAAAAAABIGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1168,
					1,
					"insert",
					{
						"characters": "+1"
					},
					"AgAAAA4aAAAAAAAADxoAAAAAAAAAAAAADxoAAAAAAAAQGgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADhoAAAAAAAAOGgAAAAAAAAAAAAAA8HNA"
				],
				[
					1171,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAACUaAAAAAAAAJhoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJRoAAAAAAAAlGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1174,
					1,
					"left_delete",
					null,
					"AQAAACUaAAAAAAAAJRoAAAAAAAABAAAAKw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJhoAAAAAAAAmGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1193,
					1,
					"left_delete",
					null,
					"AQAAANkZAAAAAAAA2RkAAAAAAAAXAAAALy9zdHI9IHF1b3RlKHN0ciwnIicpOwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2RkAAAAAAADwGQAAAAAAAAAAAAAAAAAA"
				],
				[
					1223,
					2,
					"left_delete",
					null,
					"AgAAADQaAAAAAAAANBoAAAAAAAABAAAAIDMaAAAAAAAAMxoAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANRoAAAAAAAA1GgAAAAAAAAAAAAAAAPC/"
				],
				[
					1226,
					1,
					"left_delete",
					null,
					"AQAAADUaAAAAAAAANRoAAAAAAAA0AAAACi8vICAgIHJldHVybiBzdHIucmVwbGFjZSgvLipcWyguKilcXVxzKiQvZywgJyQxJyk7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANRoAAAAAAABpGgAAAAAAAAAAAAAAAAAA"
				],
				[
					1231,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANRoAAAAAAAA1GgAAAAAAAAAAAAAAAPC/"
				],
				[
					1233,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADUaAAAAAAAANhoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANRoAAAAAAAA1GgAAAAAAAAAAAAAAAPC/"
				],
				[
					1241,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAACkZAAAAAAAAKhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKRkAAAAAAAApGQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-xml.c",
			"settings":
			{
				"buffer_size": 20625,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					55,
					1,
					"insert",
					{
						"characters": " (offsaet"
					},
					"CQAAAH4sAAAAAAAAfywAAAAAAAAAAAAAfywAAAAAAACALAAAAAAAAAAAAACALAAAAAAAAIEsAAAAAAAAAAAAAIEsAAAAAAAAgiwAAAAAAAAAAAAAgiwAAAAAAACDLAAAAAAAAAAAAACDLAAAAAAAAIQsAAAAAAAAAAAAAIQsAAAAAAAAhSwAAAAAAAAAAAAAhSwAAAAAAACGLAAAAAAAAAAAAACGLAAAAAAAAIcsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+LAAAAAAAAH4sAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIcsAAAAAAAAiCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHLAAAAAAAAIcsAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					4,
					"left_delete",
					null,
					"BAAAAIcsAAAAAAAAhywAAAAAAAABAAAAIIYsAAAAAAAAhiwAAAAAAAABAAAAdIUsAAAAAAAAhSwAAAAAAAABAAAAZYQsAAAAAAAAhCwAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACILAAAAAAAAIgsAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "et"
					},
					"AgAAAIQsAAAAAAAAhSwAAAAAAAAAAAAAhSwAAAAAAACGLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACELAAAAAAAAIQsAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " %zu)"
					},
					"BQAAAIYsAAAAAAAAhywAAAAAAAAAAAAAhywAAAAAAACILAAAAAAAAAAAAACILAAAAAAAAIksAAAAAAAAAAAAAIksAAAAAAAAiiwAAAAAAAAAAAAAiiwAAAAAAACLLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGLAAAAAAAAIYsAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"right_delete",
					null,
					"AQAAAIssAAAAAAAAiywAAAAAAAABAAAAIg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLLAAAAAAAAIssAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAIssAAAAAAAAjCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLLAAAAAAAAIssAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALwsAAAAAAAAvSwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8LAAAAAAAALwsAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " loc.pos"
					},
					"CAAAAL0sAAAAAAAAviwAAAAAAAAAAAAAviwAAAAAAAC/LAAAAAAAAAAAAAC/LAAAAAAAAMAsAAAAAAAAAAAAAMAsAAAAAAAAwSwAAAAAAAAAAAAAwSwAAAAAAADCLAAAAAAAAAAAAADCLAAAAAAAAMMsAAAAAAAAAAAAAMMsAAAAAAAAxCwAAAAAAAAAAAAAxCwAAAAAAADFLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9LAAAAAAAAL0sAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					3,
					"left_delete",
					null,
					"AwAAAFksAAAAAAAAWSwAAAAAAAABAAAAIFgsAAAAAAAAWCwAAAAAAAABAAAAL1csAAAAAAAAVywAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaLAAAAAAAAFosAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "offset"
					},
					"BwAAAL8sAAAAAAAAwCwAAAAAAAAAAAAAwCwAAAAAAADALAAAAAAAAAMAAABwb3PALAAAAAAAAMEsAAAAAAAAAAAAAMEsAAAAAAAAwiwAAAAAAAAAAAAAwiwAAAAAAADDLAAAAAAAAAAAAADDLAAAAAAAAMQsAAAAAAAAAAAAAMQsAAAAAAAAxSwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/LAAAAAAAAMIsAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "+1"
					},
					"AgAAALksAAAAAAAAuiwAAAAAAAAAAAAAuiwAAAAAAAC7LAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5LAAAAAAAALksAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "+1"
					},
					"AgAAAK0sAAAAAAAAriwAAAAAAAAAAAAAriwAAAAAAACvLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtLAAAAAAAAK0sAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"paste",
					null,
					"AgAAAMMsAAAAAAAAziwAAAAAAAAAAAAAziwAAAAAAADOLAAAAAAAAAYAAABvZmZzZXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDLAAAAAAAAMksAAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					2,
					"right_delete",
					null,
					"AgAAAH0sAAAAAAAAfSwAAAAAAAAGAAAAb2Zmc2V0fSwAAAAAAAB9LAAAAAAAAAEAAAAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9LAAAAAAAAIMsAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "byte"
					},
					"BAAAAH0sAAAAAAAAfiwAAAAAAAAAAAAAfiwAAAAAAAB/LAAAAAAAAAAAAAB/LAAAAAAAAIAsAAAAAAAAAAAAAIAsAAAAAAAAgSwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9LAAAAAAAAH0sAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIEsAAAAAAAAgiwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBLAAAAAAAAIEsAAAAAAAAAAAAAAAA8L8"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAAIUsAAAAAAAAhiwAAAAAAAAAAAAAhiwAAAAAAACHLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFLAAAAAAAAIUsAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					2,
					"left_delete",
					null,
					"AgAAAIYsAAAAAAAAhiwAAAAAAAABAAAAL4UsAAAAAAAAhSwAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHLAAAAAAAAIcsAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "/chjar"
					},
					"BgAAAIUsAAAAAAAAhiwAAAAAAAAAAAAAhiwAAAAAAACHLAAAAAAAAAAAAACHLAAAAAAAAIgsAAAAAAAAAAAAAIgsAAAAAAAAiSwAAAAAAAAAAAAAiSwAAAAAAACKLAAAAAAAAAAAAACKLAAAAAAAAIssAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFLAAAAAAAAIUsAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					3,
					"left_delete",
					null,
					"AwAAAIosAAAAAAAAiiwAAAAAAAABAAAAcoksAAAAAAAAiSwAAAAAAAABAAAAYYgsAAAAAAAAiCwAAAAAAAABAAAAag",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLLAAAAAAAAIssAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "ar"
					},
					"AgAAAIgsAAAAAAAAiSwAAAAAAAAAAAAAiSwAAAAAAACKLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACILAAAAAAAAIgsAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": " %zu"
					},
					"BAAAAIosAAAAAAAAiywAAAAAAAAAAAAAiywAAAAAAACMLAAAAAAAAAAAAACMLAAAAAAAAI0sAAAAAAAAAAAAAI0sAAAAAAAAjiwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKLAAAAAAAAIosAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANUsAAAAAAAA1iwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVLAAAAAAAANUsAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " loc.char_offse"
					},
					"DwAAANYsAAAAAAAA1ywAAAAAAAAAAAAA1ywAAAAAAADYLAAAAAAAAAAAAADYLAAAAAAAANksAAAAAAAAAAAAANksAAAAAAAA2iwAAAAAAAAAAAAA2iwAAAAAAADbLAAAAAAAAAAAAADbLAAAAAAAANwsAAAAAAAAAAAAANwsAAAAAAAA3SwAAAAAAAAAAAAA3SwAAAAAAADeLAAAAAAAAAAAAADeLAAAAAAAAN8sAAAAAAAAAAAAAN8sAAAAAAAA4CwAAAAAAAAAAAAA4CwAAAAAAADhLAAAAAAAAAAAAADhLAAAAAAAAOIsAAAAAAAAAAAAAOIsAAAAAAAA4ywAAAAAAAAAAAAA4ywAAAAAAADkLAAAAAAAAAAAAADkLAAAAAAAAOUsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWLAAAAAAAANYsAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAOUsAAAAAAAA5iwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlLAAAAAAAAOUsAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "location.h",
			"settings":
			{
				"buffer_size": 1528,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 30597,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 19680,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					38,
					1,
					"cut",
					null,
					"AQAAAEQJAAAAAAAARAkAAAAAAAAsAAAAICBvcHRpb24oVVNFX1NQQVdOICJVc2UgUE9TSVggc3Bhd24oKSIgT0ZGKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARAkAAAAAAABwCQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"paste",
					null,
					"AQAAAEQJAAAAAAAAcAkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARAkAAAAAAABECQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKoJAAAAAAAArAkAAAAAAAAAAAAAOAkAAAAAAAA7CQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgkAAAAAAAA4CQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"paste",
					null,
					"AQAAADABAAAAAAAAXAEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMAEAAAAAAAAwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "HAVE"
					},
					"BQAAAAAMAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABDAAAAAAAAAMAAABVU0UBDAAAAAAAAAIMAAAAAAAAAAAAAAIMAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAAEDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAwAAAAAAAADDAAAAAAAAAAAAAAAoGRA"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "HAVE_SPAWN"
					},
					"CgAAAJ8MAAAAAAAAoAwAAAAAAAAAAAAAoAwAAAAAAAChDAAAAAAAAAAAAAChDAAAAAAAAKIMAAAAAAAAAAAAAKIMAAAAAAAAowwAAAAAAAAAAAAAowwAAAAAAACkDAAAAAAAAAAAAACkDAAAAAAAAKUMAAAAAAAAAAAAAKUMAAAAAAAApgwAAAAAAAAAAAAApgwAAAAAAACnDAAAAAAAAAAAAACnDAAAAAAAAKgMAAAAAAAAAAAAAKgMAAAAAAAAqQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwwAAAAAAACfDAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " AND"
					},
					"BAAAAKkMAAAAAAAAqgwAAAAAAAAAAAAAqgwAAAAAAACrDAAAAAAAAAAAAACrDAAAAAAAAKwMAAAAAAAAAAAAAKwMAAAAAAAArQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqQwAAAAAAACpDAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK0MAAAAAAAArgwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQwAAAAAAACtDAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "HAVE_SPAWN"
					},
					"CgAAAOIMAAAAAAAA4wwAAAAAAAAAAAAA4wwAAAAAAADkDAAAAAAAAAAAAADkDAAAAAAAAOUMAAAAAAAAAAAAAOUMAAAAAAAA5gwAAAAAAAAAAAAA5gwAAAAAAADnDAAAAAAAAAAAAADnDAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA6QwAAAAAAAAAAAAA6QwAAAAAAADqDAAAAAAAAAAAAADqDAAAAAAAAOsMAAAAAAAAAAAAAOsMAAAAAAAA7AwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gwAAAAAAADiDAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": " A"
					},
					"AgAAAOwMAAAAAAAA7QwAAAAAAAAAAAAA7QwAAAAAAADuDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AwAAAAAAADsDAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " ND"
					},
					"AwAAAO4MAAAAAAAA7wwAAAAAAAAAAAAA7wwAAAAAAADwDAAAAAAAAAAAAADwDAAAAAAAAPEMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7gwAAAAAAADuDAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8QwAAAAAAADxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					4,
					"left_delete",
					null,
					"BAAAAPEMAAAAAAAA8QwAAAAAAAABAAAAIPAMAAAAAAAA8AwAAAAAAAABAAAARO8MAAAAAAAA7wwAAAAAAAABAAAATu4MAAAAAAAA7gwAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8gwAAAAAAADyDAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "ND"
					},
					"AgAAAO4MAAAAAAAA7wwAAAAAAAAAAAAA7wwAAAAAAADwDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7gwAAAAAAADuDAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPAMAAAAAAAA8QwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8AwAAAAAAADwDAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"paste",
					null,
					"AgAAAK0KAAAAAAAAtwoAAAAAAAAAAAAAtwoAAAAAAAC3CgAAAAAAAAkAAABVU0VfU1BBV04",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQoAAAAAAAC2CgAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"paste",
					null,
					"AgAAAIAMAAAAAAAAigwAAAAAAAAAAAAAigwAAAAAAACKDAAAAAAAAAkAAABVU0VfU1BBV04",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAwAAAAAAACJDAAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "vfprl"
					},
					"BQAAANwIAAAAAAAA3QgAAAAAAAAAAAAA3QgAAAAAAADeCAAAAAAAAAAAAADeCAAAAAAAAN8IAAAAAAAAAAAAAN8IAAAAAAAA4AgAAAAAAAAAAAAA4AgAAAAAAADhCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3AgAAAAAAADcCAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOEIAAAAAAAA4ggAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QgAAAAAAADhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					6,
					"left_delete",
					null,
					"BgAAAOEIAAAAAAAA4QgAAAAAAAABAAAAIOAIAAAAAAAA4AgAAAAAAAABAAAAbN8IAAAAAAAA3wgAAAAAAAABAAAAct4IAAAAAAAA3ggAAAAAAAABAAAAcN0IAAAAAAAA3QgAAAAAAAABAAAAZtwIAAAAAAAA3AgAAAAAAAABAAAAdg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4ggAAAAAAADiCAAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "fork"
					},
					"BAAAANwIAAAAAAAA3QgAAAAAAAAAAAAA3QgAAAAAAADeCAAAAAAAAAAAAADeCAAAAAAAAN8IAAAAAAAAAAAAAN8IAAAAAAAA4AgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3AgAAAAAAADcCAAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": " vfork"
					},
					"BgAAAOAIAAAAAAAA4QgAAAAAAAAAAAAA4QgAAAAAAADiCAAAAAAAAAAAAADiCAAAAAAAAOMIAAAAAAAAAAAAAOMIAAAAAAAA5AgAAAAAAAAAAAAA5AgAAAAAAADlCAAAAAAAAAAAAADlCAAAAAAAAOYIAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4AgAAAAAAADgCAAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOYIAAAAAAAA5wgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5ggAAAAAAADmCAAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAPcIAAAAAAAA+AgAAAAAAAAAAAAA+AgAAAAAAAD5CAAAAAAAAAAAAAD5CAAAAAAAAPoIAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wgAAAAAAAD3CAAAAAAAAP///////+9/"
				],
				[
					222,
					1,
					"left_delete",
					null,
					"AQAAAPgIAAAAAAAA+AgAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+QgAAAAAAAD5CAAAAAAAAAAAAAAAAAAA"
				],
				[
					229,
					5,
					"right_delete",
					null,
					"BQAAANwIAAAAAAAA3AgAAAAAAAABAAAAZtwIAAAAAAAA3AgAAAAAAAABAAAAb9wIAAAAAAAA3AgAAAAAAAABAAAActwIAAAAAAAA3AgAAAAAAAABAAAAa9wIAAAAAAAA3AgAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3AgAAAAAAADcCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "child-process.c",
			"settings":
			{
				"buffer_size": 7696,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFAEAAAAAAAAUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"paste",
					null,
					"AQAAABYBAAAAAAAA0QEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgEAAAAAAAAWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"right_delete",
					null,
					"AQAAAGgBAAAAAAAAaAEAAAAAAAAZAAAAIC8qIFNpbmNlIGdsaWJjIDIuMTk6ICovIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaAEAAAAAAACBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"cut",
					null,
					"AQAAAI0BAAAAAAAAjQEAAAAAAAAeAAAAIC8qIEdsaWJjIHZlcnNpb25zIDw9IDIuMTk6ICov",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQEAAAAAAACrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					2,
					"join_lines",
					null,
					"BgAAAFIBAAAAAAAAUgEAAAAAAAABAAAAClIBAAAAAAAAUgEAAAAAAAATAAAAICAgICAgICAgICAgICAgICAgIFIBAAAAAAAAUwEAAAAAAAAAAAAAZAEAAAAAAABkAQAAAAAAAAEAAAAKZAEAAAAAAABkAQAAAAAAABMAAAAgICAgICAgICAgICAgICAgICAgZAEAAAAAAABlAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKwEAAAAAAAArAQAAAAAAAAAAAAAA4GxA"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAABYBAAAAAAAAFwEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgEAAAAAAAAWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAABYBAAAAAAAAFgEAAAAAAAABAAAAaQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "#if"
					},
					"AwAAABYBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABkBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgEAAAAAAAAWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "\n#endif"
					},
					"BwAAAHYBAAAAAAAAdwEAAAAAAAAAAAAAdwEAAAAAAAB4AQAAAAAAAAAAAAB4AQAAAAAAAHkBAAAAAAAAAAAAAHkBAAAAAAAAegEAAAAAAAAAAAAAegEAAAAAAAB7AQAAAAAAAAAAAAB7AQAAAAAAAHwBAAAAAAAAAAAAAHwBAAAAAAAAfQEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgEAAAAAAAB2AQAAAAAAAP///////+9/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "\n#define"
					},
					"CAAAAHYBAAAAAAAAdwEAAAAAAAAAAAAAdwEAAAAAAAB4AQAAAAAAAAAAAAB4AQAAAAAAAHkBAAAAAAAAAAAAAHkBAAAAAAAAegEAAAAAAAAAAAAAegEAAAAAAAB7AQAAAAAAAAAAAAB7AQAAAAAAAHwBAAAAAAAAAAAAAHwBAAAAAAAAfQEAAAAAAAAAAAAAfQEAAAAAAAB+AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgEAAAAAAAB2AQAAAAAAAP///////+9/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " v"
					},
					"AgAAAH4BAAAAAAAAfwEAAAAAAAAAAAAAfwEAAAAAAACAAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfgEAAAAAAAB+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"left_delete",
					null,
					"AQAAAH8BAAAAAAAAfwEAAAAAAAABAAAAdg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAEAAAAAAACAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "fork"
					},
					"BAAAAH8BAAAAAAAAgAEAAAAAAAAAAAAAgAEAAAAAAACBAQAAAAAAAAAAAACBAQAAAAAAAIIBAAAAAAAAAAAAAIIBAAAAAAAAgwEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfwEAAAAAAAB/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIMBAAAAAAAAhQEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwEAAAAAAACDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " vfork"
					},
					"BgAAAIUBAAAAAAAAhgEAAAAAAAAAAAAAhgEAAAAAAACHAQAAAAAAAAAAAACHAQAAAAAAAIgBAAAAAAAAAAAAAIgBAAAAAAAAiQEAAAAAAAAAAAAAiQEAAAAAAACKAQAAAAAAAAAAAACKAQAAAAAAAIsBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhQEAAAAAAACFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIsBAAAAAAAAjQEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQEAAAAAAACNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABkBAAAAAAAAGgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGQEAAAAAAAAZAQAAAAAAAAAAAAAAgEBA"
				],
				[
					52,
					1,
					"right_delete",
					null,
					"AQAAAC8BAAAAAAAALwEAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALwEAAAAAAAAvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAHIBAAAAAAAAcwEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcgEAAAAAAAByAQAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQQAAAAAAACtBAAAAAAAAAAAAAAA+I9A"
				]
			]
		},
		{
			"file": "quickjs-child-process.c",
			"settings":
			{
				"buffer_size": 14721,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/test_dom.js",
			"settings":
			{
				"buffer_size": 4759,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"insert",
					{
						"characters": " Parser,"
					},
					"CAAAAJUBAAAAAAAAlgEAAAAAAAAAAAAAlgEAAAAAAACXAQAAAAAAAAAAAACXAQAAAAAAAJgBAAAAAAAAAAAAAJgBAAAAAAAAmQEAAAAAAAAAAAAAmQEAAAAAAACaAQAAAAAAAAAAAACaAQAAAAAAAJsBAAAAAAAAAAAAAJsBAAAAAAAAnAEAAAAAAAAAAAAAnAEAAAAAAACdAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlQEAAAAAAACVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"cut",
					null,
					"AQAAAPcFAAAAAAAA9wUAAAAAAAAuAAAAICBsZXQgcmVzdWx0ID0geG1sLnJlYWQoZGF0YSwgZmlsZSwgZmFsc2UpOwogIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wUAAAAAAAAlBgAAAAAAAAAAAAAAADZA"
				],
				[
					34,
					1,
					"paste",
					null,
					"AQAAAFQGAAAAAAAAggYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVAYAAAAAAABUBgAAAAAAAAAAAAAAAAAA"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFYGAAAAAAAAVwYAAAAAAAAAAAAAVwYAAAAAAABZBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAADZA"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAFYGAAAAAAAAVwYAAAAAAAAAAAAAVwYAAAAAAABZBgAAAAAAAAAAAABZBgAAAAAAAFoGAAAAAAAAAAAAAFoGAAAAAAAAWwYAAAAAAAAAAAAAWwYAAAAAAABcBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAADZA"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " parser"
					},
					"BwAAAFwGAAAAAAAAXQYAAAAAAAAAAAAAXQYAAAAAAABeBgAAAAAAAAAAAABeBgAAAAAAAF8GAAAAAAAAAAAAAF8GAAAAAAAAYAYAAAAAAAAAAAAAYAYAAAAAAABhBgAAAAAAAAAAAABhBgAAAAAAAGIGAAAAAAAAAAAAAGIGAAAAAAAAYwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXAYAAAAAAABcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGMGAAAAAAAAZAYAAAAAAAAAAAAAZAYAAAAAAABlBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwYAAAAAAABjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAGUGAAAAAAAAZgYAAAAAAAAAAAAAZgYAAAAAAABnBgAAAAAAAAAAAABnBgAAAAAAAGgGAAAAAAAAAAAAAGgGAAAAAAAAaQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZQYAAAAAAABlBgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " Parser"
					},
					"BwAAAGkGAAAAAAAAagYAAAAAAAAAAAAAagYAAAAAAABrBgAAAAAAAAAAAABrBgAAAAAAAGwGAAAAAAAAAAAAAGwGAAAAAAAAbQYAAAAAAAAAAAAAbQYAAAAAAABuBgAAAAAAAAAAAABuBgAAAAAAAG8GAAAAAAAAAAAAAG8GAAAAAAAAcAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaQYAAAAAAABpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHAGAAAAAAAAcgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcAYAAAAAAABwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHIGAAAAAAAAcwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcgYAAAAAAAByBgAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "parser"
					},
					"BgAAAK4GAAAAAAAArwYAAAAAAAAAAAAArwYAAAAAAACwBgAAAAAAAAAAAACwBgAAAAAAALEGAAAAAAAAAAAAALEGAAAAAAAAsgYAAAAAAAAAAAAAsgYAAAAAAACzBgAAAAAAAAAAAACzBgAAAAAAALQGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgYAAAAAAACuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALQGAAAAAAAAtQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtAYAAAAAAAC0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"left_delete",
					null,
					"AQAAALQGAAAAAAAAtAYAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQYAAAAAAAC1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ",p"
					},
					"AgAAALQGAAAAAAAAtQYAAAAAAAAAAAAAtQYAAAAAAAC2BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtAYAAAAAAAC0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					2,
					"left_delete",
					null,
					"AgAAALUGAAAAAAAAtQYAAAAAAAABAAAAcLQGAAAAAAAAtAYAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtgYAAAAAAAC2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAALQGAAAAAAAAtQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtAYAAAAAAAC0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"paste",
					null,
					"AQAAALUGAAAAAAAAxAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQYAAAAAAAC1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "/("
					},
					"AgAAAMQGAAAAAAAAxQYAAAAAAAAAAAAAxQYAAAAAAADGBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxAYAAAAAAADEBgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					2,
					"left_delete",
					null,
					"AgAAAMUGAAAAAAAAxQYAAAAAAAABAAAAKMQGAAAAAAAAxAYAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxgYAAAAAAADGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAMQGAAAAAAAAxQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxAYAAAAAAADEBgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "darta"
					},
					"BQAAAMUGAAAAAAAAxgYAAAAAAAAAAAAAxgYAAAAAAADHBgAAAAAAAAAAAADHBgAAAAAAAMgGAAAAAAAAAAAAAMgGAAAAAAAAyQYAAAAAAAAAAAAAyQYAAAAAAADKBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxQYAAAAAAADFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					3,
					"left_delete",
					null,
					"AwAAAMkGAAAAAAAAyQYAAAAAAAABAAAAYcgGAAAAAAAAyAYAAAAAAAABAAAAdMcGAAAAAAAAxwYAAAAAAAABAAAAcg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAygYAAAAAAADKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "ta);"
					},
					"BAAAAMcGAAAAAAAAyAYAAAAAAAAAAAAAyAYAAAAAAADJBgAAAAAAAAAAAADJBgAAAAAAAMoGAAAAAAAAAAAAAMoGAAAAAAAAywYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxwYAAAAAAADHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " //"
					},
					"AwAAAMsGAAAAAAAAzAYAAAAAAAAAAAAAzAYAAAAAAADNBgAAAAAAAAAAAADNBgAAAAAAAM4GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAywYAAAAAAADLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					3,
					"left_delete",
					null,
					"AwAAAM0GAAAAAAAAzQYAAAAAAAABAAAAL8wGAAAAAAAAzAYAAAAAAAABAAAAL8sGAAAAAAAAywYAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzgYAAAAAAADOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"cut",
					null,
					"AQAAAMsGAAAAAAAAywYAAAAAAAAYAAAAbmV3IERvY3VtZW50KHJlc3VsdFswXSk7",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAywYAAAAAAADjBgAAAAAAAP///////+9/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAJ8GAAAAAAAAoAYAAAAAAAAAAAAAoAYAAAAAAACiBgAAAAAAAAAAAACiBgAAAAAAAKMGAAAAAAAAAAAAAKMGAAAAAAAApAYAAAAAAAAAAAAApAYAAAAAAAClBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwYAAAAAAACfBgAAAAAAAAAAAAAAkH1A"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " doc"
					},
					"BAAAAKUGAAAAAAAApgYAAAAAAAAAAAAApgYAAAAAAACnBgAAAAAAAAAAAACnBgAAAAAAAKgGAAAAAAAAAAAAAKgGAAAAAAAAqQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApQYAAAAAAAClBgAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAKkGAAAAAAAAqgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqQYAAAAAAACpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"paste",
					null,
					"AQAAAKoGAAAAAAAAwgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgYAAAAAAACqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"cut",
					null,
					"AQAAAFcGAAAAAAAAVwYAAAAAAAAdAAAAICBsZXQgcGFyc2VyID0gbmV3IFBhcnNlcigpOwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVwYAAAAAAAB0BgAAAAAAAAAAAAAAAAAA"
				],
				[
					88,
					1,
					"paste",
					null,
					"AQAAAKYGAAAAAAAAwwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApgYAAAAAAACmBgAAAAAAAAAAAAAAAAAA"
				],
				[
					93,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKUGAAAAAAAApwYAAAAAAAAAAAAAVwYAAAAAAABZBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApQYAAAAAAABXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIoHAAAAAAAAiwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAigcAAAAAAACKBwAAAAAAAAAAAAAAQHNA"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIsHAAAAAAAAjAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiwcAAAAAAACLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					2,
					"left_delete",
					null,
					"AgAAAIsHAAAAAAAAiwcAAAAAAAABAAAACooHAAAAAAAAigcAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjAcAAAAAAACMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPMGAAAAAAAA9AYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wYAAAAAAADzBgAAAAAAAAAAAAAAAAAA"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "\nO"
					},
					"AgAAAPMGAAAAAAAA9AYAAAAAAAAAAAAA9AYAAAAAAAD1BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wYAAAAAAADzBgAAAAAAAAAAAAAAAAAA"
				],
				[
					115,
					2,
					"left_delete",
					null,
					"AgAAAPQGAAAAAAAA9AYAAAAAAAABAAAAT/MGAAAAAAAA8wYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9QYAAAAAAAD1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"left_delete",
					null,
					"AQAAAPIGAAAAAAAA8gYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wYAAAAAAADzBgAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKkGAAAAAAAAqgYAAAAAAAAAAAAAqgYAAAAAAACsBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqQYAAAAAAACpBgAAAAAAAAAAAAAAkH1A"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AwAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABGAwAAAAAAAAEAAAAyqgYAAAAAAACqBgAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARQMAAAAAAABGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"left_delete",
					null,
					"AQAAAPMCAAAAAAAA8wIAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9AIAAAAAAAD0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "Infinity"
					},
					"CAAAAPMCAAAAAAAA9AIAAAAAAAAAAAAA9AIAAAAAAAD1AgAAAAAAAAAAAAD1AgAAAAAAAPYCAAAAAAAAAAAAAPYCAAAAAAAA9wIAAAAAAAAAAAAA9wIAAAAAAAD4AgAAAAAAAAAAAAD4AgAAAAAAAPkCAAAAAAAAAAAAAPkCAAAAAAAA+gIAAAAAAAAAAAAA+gIAAAAAAAD7AgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wIAAAAAAADzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AgAAAPMCAAAAAAAA9AIAAAAAAAAAAAAA9AIAAAAAAAD0AgAAAAAAAAgAAABJbmZpbml0eQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+wIAAAAAAADzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"left_delete",
					null,
					"AQAAAEUDAAAAAAAARQMAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgMAAAAAAABGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "false"
					},
					"BQAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAABHAwAAAAAAAEgDAAAAAAAAAAAAAEgDAAAAAAAASQMAAAAAAAAAAAAASQMAAAAAAABKAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARQMAAAAAAABFAwAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAACIMAAAAAAAAIwwAAAAAAAAAAAAAIwwAAAAAAAAkDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIgwAAAAAAAAiDAAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "once("
					},
					"BQAAAPMLAAAAAAAA9AsAAAAAAAAAAAAA9AsAAAAAAAD1CwAAAAAAAAAAAAD1CwAAAAAAAPYLAAAAAAAAAAAAAPYLAAAAAAAA9wsAAAAAAAAAAAAA9wsAAAAAAAD4CwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wsAAAAAAADzCwAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAABUMAAAAAAAAFgwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFQwAAAAAAAAVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "once,"
					},
					"BQAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAOELAAAAAAAA4gsAAAAAAAAAAAAA4gsAAAAAAADjCwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QsAAAAAAADhCwAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": "repl.show"
					},
					"CgAAAB4SAAAAAAAAHxIAAAAAAAAAAAAAHxIAAAAAAAAfEgAAAAAAAAsAAABjb25zb2xlLmxvZx8SAAAAAAAAIBIAAAAAAAAAAAAAIBIAAAAAAAAhEgAAAAAAAAAAAAAhEgAAAAAAACISAAAAAAAAAAAAACISAAAAAAAAIxIAAAAAAAAAAAAAIxIAAAAAAAAkEgAAAAAAAAAAAAAkEgAAAAAAACUSAAAAAAAAAAAAACUSAAAAAAAAJhIAAAAAAAAAAAAAJhIAAAAAAAAnEgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKRIAAAAAAAAeEgAAAAAAAAAAAAAAADZA"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "Status"
					},
					"BgAAACcSAAAAAAAAKBIAAAAAAAAAAAAAKBIAAAAAAAApEgAAAAAAAAAAAAApEgAAAAAAACoSAAAAAAAAAAAAACoSAAAAAAAAKxIAAAAAAAAAAAAAKxIAAAAAAAAsEgAAAAAAAAAAAAAsEgAAAAAAAC0SAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJxIAAAAAAAAnEgAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAC0SAAAAAAAALhIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALRIAAAAAAAAtEgAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					11,
					"left_delete",
					null,
					"CwAAAC0SAAAAAAAALRIAAAAAAAABAAAAICwSAAAAAAAALBIAAAAAAAABAAAAcysSAAAAAAAAKxIAAAAAAAABAAAAdSoSAAAAAAAAKhIAAAAAAAABAAAAdCkSAAAAAAAAKRIAAAAAAAABAAAAYSgSAAAAAAAAKBIAAAAAAAABAAAAdCcSAAAAAAAAJxIAAAAAAAABAAAAUyYSAAAAAAAAJhIAAAAAAAABAAAAdyUSAAAAAAAAJRIAAAAAAAABAAAAbyQSAAAAAAAAJBIAAAAAAAABAAAAaCMSAAAAAAAAIxIAAAAAAAABAAAAcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALhIAAAAAAAAuEgAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "printStrat"
					},
					"CgAAACMSAAAAAAAAJBIAAAAAAAAAAAAAJBIAAAAAAAAlEgAAAAAAAAAAAAAlEgAAAAAAACYSAAAAAAAAAAAAACYSAAAAAAAAJxIAAAAAAAAAAAAAJxIAAAAAAAAoEgAAAAAAAAAAAAAoEgAAAAAAACkSAAAAAAAAAAAAACkSAAAAAAAAKhIAAAAAAAAAAAAAKhIAAAAAAAArEgAAAAAAAAAAAAArEgAAAAAAACwSAAAAAAAAAAAAACwSAAAAAAAALRIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIxIAAAAAAAAjEgAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					3,
					"left_delete",
					null,
					"AwAAACwSAAAAAAAALBIAAAAAAAABAAAAdCsSAAAAAAAAKxIAAAAAAAABAAAAYSoSAAAAAAAAKhIAAAAAAAABAAAAcg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALRIAAAAAAAAtEgAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": "atus"
					},
					"BAAAACoSAAAAAAAAKxIAAAAAAAAAAAAAKxIAAAAAAAAsEgAAAAAAAAAAAAAsEgAAAAAAAC0SAAAAAAAAAAAAAC0SAAAAAAAALhIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKhIAAAAAAAAqEgAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAFwMAAAAAAAAXQwAAAAAAAAAAAAAXQwAAAAAAABeDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXAwAAAAAAABcDAAAAAAAAAAAAAAAAAAA"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": ",false"
					},
					"BgAAAH0LAAAAAAAAfgsAAAAAAAAAAAAAfgsAAAAAAAB/CwAAAAAAAAAAAAB/CwAAAAAAAIALAAAAAAAAAAAAAIALAAAAAAAAgQsAAAAAAAAAAAAAgQsAAAAAAACCCwAAAAAAAAAAAACCCwAAAAAAAIMLAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfQsAAAAAAAB9CwAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"left_delete",
					null,
					"AQAAAOULAAAAAAAA5QsAAAAAAABAAAAAICAvL3JlcGwuYWRkQ2xlYW51cEhhbmRsZXIob25jZSgoKSA9PiByZXBsLmhpc3RvcnlTYXZlKGhpc3QpKSk7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QsAAAAAAAAlDAAAAAAAAAAAAAAAAAAA"
				],
				[
					290,
					1,
					"left_delete",
					null,
					"AQAAAPMLAAAAAAAA8wsAAAAAAAAcAAAAICAvL3JlcGwuaGlzdG9yeVNhdmUoaGlzdCk7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wsAAAAAAAAPDAAAAAAAAAAAAAAAAAAA"
				],
				[
					296,
					2,
					"right_delete",
					null,
					"AgAAAAYMAAAAAAAABgwAAAAAAAABAAAALwYMAAAAAAAABgwAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABgwAAAAAAAAGDAAAAAAAAAAAAAAAAAAA"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAE0HAAAAAAAATgcAAAAAAAAAAAAATgcAAAAAAABPBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQcAAAAAAABNBwAAAAAAAAAAAAAAADZA"
				],
				[
					309,
					2,
					"left_delete",
					null,
					"AgAAAE4HAAAAAAAATgcAAAAAAAABAAAAL00HAAAAAAAATQcAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATwcAAAAAAABPBwAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AgAAAHYHAAAAAAAAdwcAAAAAAAAAAAAAdwcAAAAAAAB3BwAAAAAAAAgAAABJbmZpbml0eQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgcAAAAAAAB+BwAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"right_delete",
					null,
					"AQAAAHYHAAAAAAAAdgcAAAAAAAABAAAAOA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgcAAAAAAAB2BwAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAHYHAAAAAAAAdwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgcAAAAAAAB2BwAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"left_delete",
					null,
					"AQAAAHYHAAAAAAAAdgcAAAAAAAABAAAAMw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwcAAAAAAAB3BwAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAHYHAAAAAAAAdwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgcAAAAAAAB2BwAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"left_delete",
					null,
					"AQAAAHYHAAAAAAAAdgcAAAAAAAABAAAAMg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwcAAAAAAAB3BwAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAHYHAAAAAAAAdwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgcAAAAAAAB2BwAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"revert",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAACVEgAAaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnOwppbXBvcnQgKiBhcyBzdGQgZnJvbSAnc3RkJzsKaW1wb3J0IHsgZXNjYXBlLCBxdW90ZSwgaXNPYmplY3QsIGRlZmluZSwgZ2V0Q2xhc3NOYW1lLCBtYXBPYmplY3QsIGdldHNldCwgZ2V0dGVyc2V0dGVyLG9uY2UsIG1lbW9pemUgfSBmcm9tICcuLi9saWIvdXRpbC5qcyc7CmltcG9ydCBpbnNwZWN0IGZyb20gJ2luc3BlY3QnOwppbXBvcnQgKiBhcyB4bWwgZnJvbSAneG1sJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnOwppbXBvcnQgeyBQb2ludGVyIH0gZnJvbSAncG9pbnRlcic7CmltcG9ydCAqIGFzIGRlZXAgZnJvbSAnZGVlcCc7CmltcG9ydCBDb25zb2xlIGZyb20gJy4uL2xpYi9jb25zb2xlLmpzJzsKaW1wb3J0IHsgUGFyc2VyLCBEb2N1bWVudCwgRWxlbWVudCwgTm9kZSwgQXR0ciwgRmFjdG9yeSwgTmFtZWROb2RlTWFwIH0gZnJvbSAnLi4vbGliL2RvbS5qcyc7CmltcG9ydCB7IEltbXV0YWJsZVhQYXRoLCBNdXRhYmxlWFBhdGgsIGJ1aWxkWFBhdGgsIHBhcnNlWFBhdGgsIFhQYXRoIH0gZnJvbSAnLi4vbGliL3hwYXRoLmpzJzsKaW1wb3J0IFJFUEwgZnJvbSAnLi4vbGliL3JlcGwuanMnOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUocHJvY2Vzcy5zdGRvdXQsIHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgZGVwdGg6IDQsCiAgICAgIC8vc3RyaW5nQnJlYWtOZXdsaW5lOiBmYWxzZSwKICAgICAgbWF4QXJyYXlMZW5ndGg6IDEwMDAwLAogICAgICBjb21wYWN0OiBmYWxzZSwKICAgICAgbWF4U3RyaW5nTGVuZ3RoOiA2MCwKICAgICAgY3VzdG9tSW5zcGVjdDogdHJ1ZSAvKiwKICAgICAgaGlkZUtleXM6IFtTeW1ib2wuaXRlcmF0b3IsIFN5bWJvbC5mb3IoJ3F1aWNranMuaW5zcGVjdC5jdXN0b20nKSwgU3ltYm9sLmluc3BlY3RdKi8KICAgIH0KICB9KTsKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsKICAgIG9zLAogICAgc3RkLAogICAgLi4ueyBlc2NhcGUsIHF1b3RlLCBpc09iamVjdCwgZGVmaW5lLCBnZXRDbGFzc05hbWUsIG1hcE9iamVjdCwgZ2V0c2V0LCBnZXR0ZXJzZXR0ZXIsIG1lbW9pemUgfSwKICAgIHhtbCwKICAgIHBhdGgsCiAgICBQb2ludGVyLAogICAgZGVlcCwKICAgIC4uLnsgRG9jdW1lbnQsIEVsZW1lbnQsIE5vZGUsIEF0dHIsIEZhY3RvcnksIE5hbWVkTm9kZU1hcCB9LAogICAgLi4ueyBJbW11dGFibGVYUGF0aCwgTXV0YWJsZVhQYXRoLCBidWlsZFhQYXRoLCBwYXJzZVhQYXRoLCBYUGF0aCB9CiAgfSk7CgogIGxldCBmaWxlID0gYXJnc1swXSA/PyAnLi4vLi4vLi4vYW4tdHJvbmljcy9lYWdsZS81NTUtT3NjaWxsYXRvci5zY2gnOwoKICBsZXQgYmFzZSA9IHBhdGguYmFzZW5hbWUoZmlsZSwgcGF0aC5leHRuYW1lKGZpbGUpKTsKCiAgbGV0IGRhdGEgPSBzdGQubG9hZEZpbGUoZmlsZSwgJ3V0Zi04Jyk7CiAgbGV0IHN0YXJ0ID0gRGF0ZS5ub3coKTsKbGV0IGVuZCA9IERhdGUubm93KCk7CiAgY29uc29sZS5sb2coYHBhcnNpbmcgdG9vayAke2VuZCAtIHN0YXJ0fW1zYCk7CgogIHN0YXJ0ID0gRGF0ZS5ub3coKTsKICAKLyogIGxldCByZXN1bHQgPSB4bWwucmVhZChkYXRhLCBmaWxlLCBmYWxzZSk7CiAgbGV0IGRvYz1uZXcgRG9jdW1lbnQocmVzdWx0WzBdKTsqLwoKICBsZXQgcGFyc2VyID0gbmV3IFBhcnNlcigpOwogICAgbGV0IGRvYyA9IHBhcnNlci5wYXJzZUZyb21TdHJpbmcoZGF0YSk7CgogIGxldCByYXdEb2MgPSBOb2RlLnJhdyhkb2MpOwogIE9iamVjdC5hc3NpZ24oZ2xvYmFsVGhpcywgeyByYXdEb2MsIGRvYyB9KTsKCiAgY29uc29sZS5sb2coJ2RvYycsIGluc3BlY3QoZG9jLCB7IGRlcHRoOiA0LCBjb21wYWN0OiBmYWxzZSB9KSk7CgogIC8qICBmb3IobGV0IHZhbHVlIG9mIGRlZXAuaXRlcmF0ZShkb2MsIGRlZXAuUkVUVVJOX1ZBTFVFKSkgewogICAgY29uc29sZS5sb2coJ3ZhbHVlJywgdmFsdWUpOwogIH0KKi8KCiAgLyogIGxldCBbbGlicmFyaWVzLCBscF0gPSBkZWVwLmZpbmQocmF3RG9jLCBlID0+IGUudGFnTmFtZSA9PSAnbGlicmFyaWVzJywgZGVlcC5SRVRVUk5fVkFMVUVfUEFUSCk7CiAgICBjb25zb2xlLmxvZygnbHAnLCBscCk7CiAgICBsZXQgbGlicyA9IGRlZXAuZ2V0KHJhd0RvYywgbHApOwogICAgbGV0IHJlc3VsdHMgPSBkZWVwLnNlbGVjdChyYXdEb2MsIGUgPT4gZS50YWdOYW1lID09ICdsaWJyYXJ5JywgZGVlcC5SRVRVUk5fVkFMVUUpOwogICAgY29uc29sZS5sb2coJ3Jlc3VsdHMnLCByZXN1bHRzKTsKICAgIGNvbnNvbGUubG9nKCdsaWJzJywgbGlicyk7CgogICAgbGV0IGZsYXR0ZW5lZCA9IGRlZXAuZmxhdHRlbihsaWJyYXJpZXMsIFtdKS5maWx0ZXIoKFtwLCBuXSkgPT4gaXNPYmplY3QobikgJiYgJ3RhZ05hbWUnIGluIG4pOwogICAgZmxhdHRlbmVkID0gbmV3IE1hcChmbGF0dGVuZWQpOwogICAgT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7IGZsYXR0ZW5lZCwgbGlicmFyaWVzLCBscCwgcmVzdWx0cyB9KTsqLwoKICAvKiAgZm9yKGxldCBbcCwgbl0gb2YgZmxhdHRlbmVkKSB7CiAgICAgIGxldCBwdHIgPSBuZXcgUG9pbnRlcihwKTsKICAgICAgY29uc29sZS5sb2coJ3B0ci9wYXRoJywgeyBwdHIsIHBhdGg6IFsuLi5wdHJdIH0pOwogICAgICBsZXQgbm9kZSA9IFsuLi5wdHJdLnJlZHVjZSgobywgcCkgPT4gb1twXSwgbGlicyk7CgogICAgICBjb25zb2xlLmxvZygncC9uJywgeyBwLCBuIH0pOwogICAgICBjb25zb2xlLmxvZygncC9uJywgeyBub2RlIH0pOwogICAgICBjb25zb2xlLmxvZygncHRyLmhpZXInLCBwdHIuaGllcigpKTsKICAgIH0KKi8KICBsZXQgaGlzdDsKICBnbG9iYWxUaGlzLmZzID0gZnM7CiAgbGV0IHJlcGwgPSBuZXcgUkVQTChudWxsLGZhbHNlKTsKICByZXBsLnNob3cgPSByZXBsLnByaW50RnVuY3Rpb24oKC4uLmFyZ3MpID0+IGNvbnNvbGUubG9nKC4uLmFyZ3MpKTsKICByZXBsLmhpc3RvcnlMb2FkKGhpc3QpOwogIHJlcGwucnVuKCk7CgogIGxldCBjb3VudCA9IDA7CgogIGlmKDApCiAgICBSZWN1cnNlKGRvYywgKG5vZGUsIHN0YWNrKSA9PiB7CiAgICAgIGNvbnN0IHJhdyA9IE5vZGUucmF3KG5vZGUpOwogICAgICBjb3VudCsrOwogICAgICBpZihub2RlLm5vZGVUeXBlICE9IG5vZGUuRUxFTUVOVF9OT0RFICYmIG5vZGUubm9kZVR5cGUgIT0gbm9kZS5ET0NVTUVOVF9OT0RFKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGlmKHJhdy5jaGlsZHJlbikgewogICAgICAgIGxldCBjbCA9IG5vZGUuY2hpbGRyZW47CiAgICAgICAgaWYocmF3LmNoaWxkcmVuWzBdKSB7CiAgICAgICAgICBsZXQgeSA9IGNsLnBhdGg7CiAgICAgICAgICBsZXQgZWxtID0gY2xbMF07CiAgICAgICAgICBpZihjbC5sZW5ndGgpIHsKICAgICAgICAgICAgaWYoZWxtKSB7CiAgICAgICAgICAgICAgLyogIGlmKGlzT2JqZWN0KGVsbSkgJiYgJ3RhZ05hbWUnIGluIGVsbSkgY29uc29sZS5sb2coJ2VsbScsIGVsbS50YWdOYW1lLCBlbG0ucGF0aCk7IGVsc2UgKi8KICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdlbG0nLCBlbG0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIGlmKHJhdy5hdHRyaWJ1dGVzKSB7CiAgICAgICAgbGV0IGFsID0gbm9kZS5hdHRyaWJ1dGVzOwogICAgICAgIGxldCB6ID0gYWwucGF0aDsKICAgICAgICBsZXQgYXQgPSBhbFtPYmplY3Qua2V5cyhyYXcuYXR0cmlidXRlcylbMF1dOwogICAgICAgIGlmKGF0KSB7CiAgICAgICAgICBsZXQgeCA9IGF0LnBhdGg7CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKCiAgZnVuY3Rpb24gUmVjdXJzZShub2RlLCBmbiwgc3RhY2sgPSBbXSkgewogICAgaWYoaXNPYmplY3Qobm9kZSkpIHsKICAgICAgaWYoaXNPYmplY3Qobm9kZS5jaGlsZHJlbikpCiAgICAgICAgZm9yKGxldCBjaGlsZCBvZiBub2RlLmNoaWxkcmVuKSB7CiAgICAgICAgICBSZWN1cnNlKGNoaWxkLCBmbiwgWy4uLnN0YWNrLCBub2RlXSk7CiAgICAgICAgfQogICAgICBpZihpc09iamVjdChub2RlLmF0dHJpYnV0ZXMpKSB7CiAgICAgICAgY29uc3QgYXR0cmlidXRlcyA9IC8qTm9kZS5yYXcobm9kZSk/LmF0dHJpYnV0ZXMgPz8qLyBub2RlLmF0dHJpYnV0ZXM7CiAgICAgICAgZm9yKGxldCBhdHRyIG9mIC8qTm9kZS5yYXcobm9kZSkuKi8gYXR0cmlidXRlcykgewogICAgICAgICAgUmVjdXJzZShhdHRyLCBmbiwgWy4uLnN0YWNrLCBub2RlXSk7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdBdHRyJywgYXR0ciwgTm9kZS5wYXRoKGF0dHIpKTsKICAgICAgICB9IC8vUmVjdXJzZSh7IG5hbWU6IGF0dHIsIHZhbHVlOmF0dHJpYnV0ZXNbYXR0cl0sW1N5bWJvbC50b1N0cmluZ1RhZ106ICdBdHRyJywgX19wcm90b19fOiBBdHRyLnByb3RvdHlwZSB9LCBmbiwgWy4uLnN0YWNrLCBub2RlXSk7CiAgICAgIH0KICAgIH0KICAgIGZuKG5vZGUsIHN0YWNrKTsKICB9CiAgZW5kID0gRGF0ZS5ub3coKTsKCiAgcmVwbC5wcmludFN0YXR1cyhgd2Fsa2luZyB0b29rICR7ZW5kIC0gc3RhcnR9bXMgKCR7Y291bnR9IG5vZGVzKWApOwogIHN0ZC5nYygpOwp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvci5tZXNzYWdlfVxuJHtlcnJvci5zdGFja31gKTsKICBzdGQuZXhpdCgxKTsKfQoAAAAAAAAAAJcSAAAAAAAAAAAAAAAAAAAAAAAAlxIAAAAAAAAAAAAAAAAAAAAAAACXEgAAAAAAAAAAAAAAAAAAAAAAAJcSAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQEAAAAAAACyAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/xpath.js",
			"settings":
			{
				"buffer_size": 4587,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					19,
					1,
					"insert",
					{
						"characters": "define(/"
					},
					"CAAAAD8GAAAAAAAAQAYAAAAAAAAAAAAAQAYAAAAAAABBBgAAAAAAAAAAAABBBgAAAAAAAEIGAAAAAAAAAAAAAEIGAAAAAAAAQwYAAAAAAAAAAAAAQwYAAAAAAABEBgAAAAAAAAAAAABEBgAAAAAAAEUGAAAAAAAAAAAAAEUGAAAAAAAARgYAAAAAAAAAAAAARgYAAAAAAABHBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPwYAAAAAAAA/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAEYGAAAAAAAARgYAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARwYAAAAAAABHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFUGAAAAAAAAVgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVQYAAAAAAABVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAFYGAAAAAAAAVwYAAAAAAAAAAAAAVwYAAAAAAABYBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFgGAAAAAAAAWQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWAYAAAAAAABYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHgGAAAAAAAAeQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeAYAAAAAAAB4BgAAAAAAAP///////+9/"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAAHgGAAAAAAAAeAYAAAAAAAABAAAAIHcGAAAAAAAAdwYAAAAAAAABAAAAOw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " });"
					},
					"BAAAAHcGAAAAAAAAeAYAAAAAAAAAAAAAeAYAAAAAAAB5BgAAAAAAAAAAAAB5BgAAAAAAAHoGAAAAAAAAAAAAAHoGAAAAAAAAewYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwYAAAAAAAB3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					3,
					"left_delete",
					null,
					"AwAAAG8GAAAAAAAAbwYAAAAAAAABAAAAIG4GAAAAAAAAbgYAAAAAAAABAAAAPW0GAAAAAAAAbQYAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcAYAAAAAAABwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAG0GAAAAAAAAbgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQYAAAAAAABtBgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4GAAAAAAAAbwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgYAAAAAAABuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "define,"
					},
					"BwAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"revert",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAADqEQAAaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJ3BvaW50ZXInOwppbXBvcnQgeyBQcmVkaWNhdGUgfSBmcm9tICdwcmVkaWNhdGUnOwppbXBvcnQge2RlZmluZSwgaXNPYmplY3QsIGlzRnVuY3Rpb24sIGV4dGVuZEFycmF5LCBnZXRDbGFzc05hbWUgfSBmcm9tICcuL3V0aWwuanMnOwppbXBvcnQgeyBOb2RlIH0gZnJvbSAnLi9kb20uanMnOwppbXBvcnQgKiBhcyBkZWVwIGZyb20gJ2RlZXAnOwppbXBvcnQgaW5zcGVjdCBmcm9tICdpbnNwZWN0JzsKCmV4cG9ydCBjbGFzcyBYUGF0aCBleHRlbmRzIFBvaW50ZXIgewogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHsKICAgIHN1cGVyKCk7CgogICAgaWYoYXJncy5sZW5ndGggPT0gMSkgewogICAgICBpZih0eXBlb2YgYXJnc1swXSA9PSAnc3RyaW5nJykgYXJncyA9IGFyZ3NbMF0uc3BsaXQoL1wvL2cpOwogICAgICBlbHNlIGlmKEFycmF5LmlzQXJyYXkoYXJnc1swXSkpIGFyZ3MgPSBhcmdzWzBdOwogICAgfQoKICAgIGlmKGFyZ3MubGVuZ3RoID4gMSAmJiBhcmdzWzBdID09PSAnJykgYXJncy5zaGlmdCgpOwoKICAgIGZvcihsZXQgYXJnIG9mIGFyZ3MpIHsKICAgICAgaWYodHlwZW9mIGFyZyA9PSAnc3RyaW5nJykgewogICAgICAgIGlmKGFyZyAhPSAnY2hpbGRyZW4nICYmIGFyZyAhPSAnYXR0cmlidXRlcycpIHsKICAgICAgICAgIGxldCBtID0gL14oW0EtWmEtel1bLVx3XSopKFxbWzAtOV0rXF18KSQvLmV4ZWMoYXJnKTsKICAgICAgICAgIGlmKG0pIHsKICAgICAgICAgICAgbSA9IFsuLi5tXS5zbGljZSgxLCBtWzJdID09PSAnJyA/IDIgOiAzKTsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnbScsIG0pOwogICAgICAgICAgICBpZihtLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgICAgICAgYXJnID0gUHJlZGljYXRlLnByb3BlcnR5KCd0YWdOYW1lJywgLypzID0+IHMgPT0gbVswXSA/PyovIFByZWRpY2F0ZS5zdHJpbmcobVswXSkpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZihtLmxlbmd0aCA+PSAyKSB7CiAgICAgICAgICAgICAgbGV0IG51bSA9ICttWzFdLnNsaWNlKDEsIC0xKTsKICAgICAgICAgICAgICBhcmcgPSBQcmVkaWNhdGUuYW5kKGFyZywgUHJlZGljYXRlLmVxdWFsKG51bSkpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhcmcnLCBhcmcpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLnB1c2goYXJnKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdYUGF0aC5jb25zdHJ1Y3RvcicsIHRoaXMpOwogIH0KCiAgW1N5bWJvbC5pbnNwZWN0XShkZXB0aCwgb3B0cyA9IHt9KSB7CiAgICBsZXQgb2JqID0gWy4uLnRoaXNdLm1hcChHZXRLZXkpOwogICAgLy9jb25zb2xlLmxvZygnb2JqJywgb2JqKTsKICAgIHJldHVybiBgXHgxYlsxOzMxbSR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lID8/IHV0aWwuZ2V0Q2xhc3NOYW1lKHRoaXMpfVx4MWJbMG0gYCArIGluc3BlY3Qob2JqID8/IHsgX19wcm90b19fOiB7IFtTeW1ib2wudG9TdHJpbmdUYWddOiAnWFBhdGgnIH0sIC4uLm9iaiB9LCB7IC4uLm9wdHMsIGN1c3RvbUluc3BlY3Q6IHRydWUgfSk7CiAgfQoKICBzdGF0aWMgZnJvbSA9IGJ1aWxkWFBhdGg7Cn0KCmRlZmluZShYUGF0aC5wcm90b3R5cGUsIHsgW1N5bWJvbC50b1N0cmluZ1RhZ106ICdYUGF0aCcgfSk7CgpleHBvcnQgY29uc3QgSW1tdXRhYmxlWFBhdGggPSBYUGF0aDsKZXhwb3J0IGNvbnN0IE11dGFibGVYUGF0aCA9IFhQYXRoOwoKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlWFBhdGgoc3RyKSB7fQoKZXhwb3J0IGZ1bmN0aW9uIGdldFNpYmxpbmdzKHB0ciwgcm9vdCkge30KCmV4cG9ydCBmdW5jdGlvbiBidWlsZFhQYXRoKHB0ciwgcm9vdCkgewogIGxldCBub2RlID0gcm9vdCwKICAgIHBhcmVudCwKICAgIHByZXZLZXksCiAgICBpID0gMCwKICAgIHBhcnRzID0gW10sCiAgICBzaWJsaW5ncywKICAgIHNpYmxpbmdTYW1lLAogICAga2V5cywKICAgIHR5cGUsCiAgICBzYW1lLAogICAgaGllciA9IFtdOwogIGZvcihsZXQga2V5IG9mIHB0cikgewogICAgaWYodHlwZW9mIGtleSA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIGlmKGlzT2JqZWN0KG5vZGUpICYmICdsZW5ndGgnIGluIG5vZGUpIHsKICAgICAgICBsZXQgYSA9IEFycmF5LmZyb20obm9kZSksCiAgICAgICAgICBmbiA9IGtleTsKCiAgICAgICAga2V5ID0gYS5maW5kSW5kZXgoZm4pOwogICAgICB9CiAgICB9CgogICAgdHlwZSA9IGtleSA9PSAnY2hpbGRyZW4nID8gJ29iamVjdCcgOiBOb2RlVHlwZShub2RlKTsKCiAgICAvLyAgY29uc29sZS5sb2coJ3BhcmVudCcscGFyZW50KTsKCiAgICBpZihwYXJlbnQgJiYgJ2NoaWxkcmVuJyBpbiBwYXJlbnQpIHsKICAgICAgc2libGluZ3MgPSBbLi4ucGFyZW50LmNoaWxkcmVuXTsKICAgICAgLy9jb25zb2xlLmxvZygnc2libGluZ3MnLHNpYmxpbmdzKTsKICAgICAgc2libGluZ1NhbWUgPSBzaWJsaW5ncy5yZWR1Y2UoKGFjYywgbiwgaSkgPT4gewogICAgICAgIGlmKGlzT2JqZWN0KG4pICYmIGlzT2JqZWN0KG5vZGVba2V5XSkpIGlmIChuLnRhZ05hbWUgPT0gbm9kZVtrZXldLnRhZ05hbWUpIGFjYy5wdXNoKFtpLCBuLnRhZ05hbWVdKTsKICAgICAgICByZXR1cm4gYWNjOwogICAgICB9LCBbXSk7CiAgICB9IGVsc2UgewogICAgICBzaWJsaW5ncyA9IFtdOwogICAgICBzaWJsaW5nU2FtZSA9IFtdOwogICAgfQogICAgLy9pZihzaWJsaW5ncy5sZW5ndGggPj0gMikgY29uc29sZS5sb2coJ3NpYmxpbmdzU2FtZScsc2libGluZ1NhbWUpOwoKICAgIGtleXMgPSBpc09iamVjdChub2RlKSA/IE9iamVjdC5rZXlzKG5vZGUpIDogW107CgogICAgaWYoa2V5ID09ICdjaGlsZHJlbicpIHsKICAgICAgLy9wYXJ0cy5wdXNoKCcvJyk7CiAgICB9IGVsc2UgewogICAgICBzYW1lID0gc2libGluZ1NhbWUubGVuZ3RoOwoKICAgICAgLy8gY29uc29sZS5sb2coJ3NhbWUnLHNhbWUpCgogICAgICBsZXQgcGFydCA9IEFkZEtleShub2RlW2tleV0sIGtleSwgaSwgc2FtZSk7CgogICAgICBwYXJ0cy5wdXNoKHBhcnQpOwogICAgfQoKICAgIGlmKCFpc09iamVjdChub2RlKSkgdGhyb3cgbmV3IEVycm9yKGBFcnJvciBpbmRleGluZyA8JHt0eXBlb2Ygbm9kZX0+IHdpdGggPCR7a2V5fT4gWyR7aGllci5qb2luKCcsICcpfV06ICR7cGFydHMubWFwKEdldEtleSkuam9pbignIC0+ICcpfWApOwoKICAgIHBhcmVudCA9IG5vZGU7CiAgICBub2RlID0gbm9kZVtrZXldOwogICAgaGllci5wdXNoKGtleSk7CiAgICBwcmV2S2V5ID0ga2V5OwogICAgaSsrOwogIH0KCiAgZnVuY3Rpb24gQWRkS2V5KG5vZGUsIGssIGksIHNhbWUpIHsKICAgIGxldCBzID0gJyc7CgogICAgaWYoaXNPYmplY3Qobm9kZSkgJiYgJ3RhZ05hbWUnIGluIG5vZGUpIHMgPSBub2RlLnRhZ05hbWU7CgogICAgaWYodHlwZW9mIGsgPT0gJ251bWJlcicpIHsKICAgICAgaWYoc2FtZSA+IDEpIHMgKz0gYFske2t9XWA7CiAgICB9IGVsc2UgaWYodHlwZW9mIGsgPT0gJ3N0cmluZycpIHsKICAgIH0KICAgIGlmKHMgPT09ICcnKSBzID0geyBjaGlsZHJlbjogJy8nIH1ba10gPz8gayA/PyAnLyc7CiAgICByZXR1cm4gczsKICB9CgogIGZ1bmN0aW9uIE5vZGVUeXBlKG5vZGUpIHsKICAgIHJldHVybiBpc09iamVjdChub2RlKSA/ICgnbGVuZ3RoJyBpbiBub2RlICYmIHR5cGVvZiBub2RlLmxlbmd0aCA9PSAnbnVtYmVyJyA/ICdhcnJheScgOiBnZXRDbGFzc05hbWUobm9kZSkudG9Mb3dlckNhc2UoKSkgOiB0eXBlb2Ygbm9kZTsKICB9CiAgLy9jb25zb2xlLmxvZygnYnVpbGRYUGF0aCcsIHBhcnRzKTsKICByZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKHBhcnRzLCBYUGF0aC5wcm90b3R5cGUpOwp9CgpmdW5jdGlvbiBHZXRLZXkocCkgewogIGxldCBrOwogIGlmKChpc09iamVjdChwKSB8fCBpc0Z1bmN0aW9uKHApKSAmJiBwIGluc3RhbmNlb2YgUHJlZGljYXRlKSB7CiAgICBpZihwLmlkID09IFByZWRpY2F0ZS5QUk9QRVJUWSkgewogICAgICBjb25zdCBzdHIgPSBwLnZhbHVlcygpWzFdOwogICAgICBrID0gc3RyLnZhbHVlcygpWzBdOwogICAgfQogIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnb2JqZWN0JyAmJiBbJ3RhZ05hbWUnLCAnY2hpbGRyZW4nLCAnYXR0cmlidXRlcyddLnNvbWUocHJvcCA9PiBwcm9wIGluIHApKSB7CiAgICBrID0gcC50YWdOYW1lOwogIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnZnVuY3Rpb24nIC8qICYmICEocCBpbnN0YW5jZW9mIFByZWRpY2F0ZSkqLykgewogICAgaWYoL3RhZ05hbWVccyo9PS8udGVzdChwICsgJycpKSBrID0gKHAgKyAnJykucmVwbGFjZSgvLionKC4qKSckLywgJyQxJyk7CiAgICBlbHNlIGsgPSBwOwogIH0gZWxzZSBpZih0eXBlb2YgcCA9PSAnbnVtYmVyJyB8fCB0eXBlb2YgcCA9PSAnc3RyaW5nJykgewogICAgayA9IHA7CiAgfSBlbHNlIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBwYXJ0ICgke3V0aWwuZ2V0VHlwZVN0cihwKX0gJHt0eXBlb2YgcH0pOiAke2luc3BlY3QocCwgeyBjb2xvcnM6IHRydWUgfSl9YCk7CiAgcmV0dXJuIGsgPz8gcDsKfQoKZXh0ZW5kQXJyYXkoWFBhdGgucHJvdG90eXBlKTsKCmV4cG9ydCBkZWZhdWx0IFhQYXRoOwoAAAAAAAAAAOsRAAAAAAAAAAAAAAAAAAAAAAAA6xEAAAAAAAAAAAAAAAAAAAAAAADrEQAAAAAAAAAAAAAAAAAAAAAAAOsRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/doc"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/usr/lib/gcc/x86_64-linux-gnu/11/include/stdatomic.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debug.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debug.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/flexbox-intrinsic-sizing-horiz-1-ref.json",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/usr/i686-w64-mingw32/include/io.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/Makefile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/util.es",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/readlink.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/perf_hooks.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/bnflexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stack.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/stack.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/usr/include/zlib.h",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Niji.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_mmap.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/csv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/wasmedge-quickjs/example_js/es6_module_demo/c.",
		"/home/roman/.config/sublime-text/Packages/User/Themes/ES6 Next.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_deep.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_path.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/socklen_t.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.c.structs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/blah.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c"
	],
	"find":
	{
		"height": 33.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"\"mismatch",
			"check_func",
			"fork",
			"USE_SPAWN",
			"class NodeList",
			"NodeList",
			"class Element",
			"new REPL",
			"took",
			"historySave",
			"once",
			"history",
			"inspect",
			"waitRead",
			"setReadHa",
			"function read",
			"read\\(",
			"js_readable_callback",
			"writable_unlock",
			"js_writable_(start|write|close|abort)",
			"GET_READER:",
			"\"getRead",
			"FUNC_GET_WRITER",
			"FUNC_CLOSE",
			"writable_close",
			"writable_size",
			"reader_passthrough",
			"readable_close",
			"readable_enqueue",
			"writable_write",
			"struct streamreader",
			"js_input",
			"chunk_arraybuf",
			"JS_NewObjectProtoClass",
			"READER_CLOSED",
			"readable_abort",
			"READABLE_CANCEL",
			"READABLE_CLOSE",
			"writer_abort",
			"stream_",
			"stream_lock_rd",
			"stream_unlock_..",
			"js_stream_data",
			"writable_get_writeer",
			"readable_at",
			"writable_get_writer",
			"writable_(un|)lock_..",
			"Writer\\* rd",
			"Writer\\*",
			"FUNC_",
			"read",
			"FUNC_CLEAR",
			"js_reader_methods",
			"js_writer_methods",
			"js_stream_funcs",
			"PROP_LOCKED",
			"WRITER_CLOSED",
			"free_rt",
			"77",
			"writer_new",
			"->locked",
			"reader_free",
			"\"Reader",
			"StreamReader",
			"stream_unlock",
			"stream_lock",
			"FUNC_",
			"FUNC_READ",
			"\nstatic JSValue\nstreamreader_signal(StreamReader* srdr, StreamEvent event, JSValueConst arg, JSContext* ctx) {\nJSValue ret;\n\n  assert(event <= EVENT_READ);\n  assert(event >= EVENT_CLOSE);\n\nret = promise_resolve(ctx, &srdr->events[event], arg);\n\n  return ret;\n}\n",
			"funcs",
			"funcs\\.funcs",
			"js_resolvingfunctions",
			"promise_resolve",
			"funcs->reject",
			"funcs->resolve",
			"js_resolving_functions_done",
			"\nstatic BOOL\nstream_unlock(Stream* strm) {\n  static const BOOL expected = TRUE;\n  if(!atomic_compare_exchange_weak(&strm->locked, &expected, FALSE))\n    return FALSE;\n\n  return TRUE;\n}\n",
			"    \n",
			"FUNC_",
			"FUNC_READ",
			"JS_NewPromise",
			"  \n",
			"JS_HasProperty",
			"^js_proxy_get",
			"js_proxy_get",
			"\\.get_property",
			"js_string_get_own_property",
			"\\.get_own_property",
			"\\.get_property",
			"get_property",
			"stream->n",
			"queue_read",
			"assert",
			"js_input_chars",
			"js_input_chars\\(",
			"js_input_chars",
			"js_stream_write",
			"_funcs",
			"FUNC_",
			"struct block",
			"allocated",
			"js_input_chars",
			"quickjs-",
			"_SOURCES",
			"footer export",
			"ExportName",
			"name",
			"tokens =",
			"def",
			"footer",
			"header",
			"of header",
			"main",
			"header\\.",
			"header",
			"class FileMap",
			"replaceRange",
			" \n",
			"NormalizePath",
			"path.normalize.*replace",
			"NormalizePath",
			"path.normalize.*replace",
			"Lexer",
			"BufferFile",
			"bufferMap",
			"BufferFile.*\\?\\?",
			"BufferFile",
			"GetSet"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"WRITABLE_GET_WRITER",
			"WRITABLE_CLOSE",
			"struct stream_reader",
			"readable_cancel",
			"READABLE_CANCEL",
			"readable_unlock",
			"writable_get_writer",
			"writable_\\1lock",
			"READABLE_",
			"writ",
			"FUNC_CLOSE",
			"js_reader_method",
			"js_writer_method",
			"js_stream_method",
			"STREAM_LOCKED",
			"->reader",
			"\"StreamReader",
			"Reader",
			"METHOD_",
			"array",
			"funcs.array",
			"js_resolve_functions",
			"js_resolvefunctions",
			"funcs[1]",
			"funcs[0]",
			"js_resolvingfunctions_free",
			"js_resolvingfunctions_ree",
			"length",
			"Chunk",
			"loc",
			"prevLength",
			"prevOffset",
			"compact(\\1)",
			"js_location_create",
			"lexer_token(",
			"token_lex(",
			"LOCATION_PROP_CHAROFFSET",
			"loc->",
			"\\1_release",
			"token",
			"ALLOC_PTR",
			"ALLOC_BLOCK(p)",
			"ALLOC_BLOCK_SIZE",
			"",
			"const char* str\\1",
			"void* p,",
			"size_t size)",
			"JSRuntime* rt,",
			"JSContext\\* ctx,",
			";",
			" &(((struct alloc_block*)p)[-1]);",
			"add_to_list",
			"",
			"DEFINES_H",
			"int",
			"log",
			"out",
			"array_",
			"[%p]",
			"pthread_self()",
			"js_token_data2(ctx,",
			"js_lexer_data2(ctx,",
			"\\1//console",
			"inspectSymbol",
			"parent",
			"gettersetter",
			"ELEMENT_NODE",
			"parent",
			"attributes",
			"Node.prototype.",
			"\\1static \\2 = \\3;",
			"const raw = Node.raw(this);",
			"\\1.set\\(\\2\\)",
			"\\1.get\\(this\\)",
			"ownerElement.get\\(this\\)",
			"rawNode.get\\(this\\)",
			"inspectSymbol",
			"CSV",
			"\\1//",
			"args->c",
			"args->",
			"\\1//\\2",
			"METHOD_VALUES",
			"pr->",
			"property",
			"size[0]",
			"s->",
			"(sock)->",
			", s,",
			"(sock).",
			", *s,",
			"s->",
			"obj",
			"js_socket_data(",
			"obj",
			"loc",
			"YIELD_",
			"if",
			"\\1//\\2",
			"",
			"\\1//\\2",
			"js_pointer_free_func",
			"BITFIELD_SET",
			"fd",
			"misc.IN_",
			"fd",
			"wd",
			"JSValueConst\\1",
			"s",
			"queue_alloc(",
			"queue_alloc",
			"rpt",
			"js_return_",
			"tmp",
			"repeater_execute",
			"queue_item",
			"linked_item",
			"queue_",
			"rpt",
			"Repeater",
			"resolvable_item",
			"resolvable_",
			"js_resolvable_",
			"repeater_push",
			"COLOR_NONE",
			"COLOR_CYAN",
			"COLOR_RED",
			"COLOR_LIGHTRED"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 316,
						"regions":
						{
						},
						"selection":
						[
							[
								172,
								172
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
							"function_name_status_row": 10,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									304,
									312
								],
								[
									320,
									334
								],
								[
									380,
									397
								],
								[
									434,
									447
								],
								[
									486,
									502
								],
								[
									538,
									551
								],
								[
									569,
									582
								],
								[
									600,
									612
								],
								[
									647,
									659
								],
								[
									694,
									713
								],
								[
									748,
									764
								],
								[
									795,
									809
								],
								[
									853,
									866
								],
								[
									918,
									932
								],
								[
									973,
									985
								],
								[
									1019,
									1035
								],
								[
									1151,
									1164
								],
								[
									1271,
									1286
								],
								[
									1414,
									1426
								]
							],
							"symlist":
							[
								"Location",
								"  location_print",
								"  location_tostring",
								"  location_file",
								"  location_tovalue",
								"  location_init",
								"  location_zero",
								"  location_add",
								"  location_sub",
								"  location_release_rt",
								"  location_free_rt",
								"  location_count",
								"  location_copy",
								"  location_clone",
								"  location_new",
								"  location_release",
								"  location_free",
								"  location_isnull",
								"  location_dup"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1644881746.73,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/dom.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16759,
						"regions":
						{
						},
						"selection":
						[
							[
								6442,
								6442
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 224,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1644874089.65,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5023.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "quickjs-xml.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20625,
						"regions":
						{
						},
						"selection":
						[
							[
								15703,
								15704
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 551,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1644881305.5,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12585.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "location.h",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1528,
						"regions":
						{
						},
						"selection":
						[
							[
								748,
								764
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": -1,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1644884873.79,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 267.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30597,
						"regions":
						{
						},
						"selection":
						[
							[
								1549,
								1549
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 25,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1644852074.47,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19680,
						"regions":
						{
						},
						"selection":
						[
							[
								2250,
								2250
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 69,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1644795190.34,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1078.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "child-process.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7696,
						"regions":
						{
						},
						"selection":
						[
							[
								4264,
								4305
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 190,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1644795548.62,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3262.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "quickjs-child-process.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14721,
						"regions":
						{
						},
						"selection":
						[
							[
								8079,
								8079
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 292,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1644852073.98,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6559.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "tests/test_dom.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4759,
						"regions":
						{
						},
						"selection":
						[
							[
								429,
								434
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 10,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1644795582.17,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/xpath.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4587,
						"regions":
						{
						},
						"selection":
						[
							[
								89,
								89
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1644788887.44,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 33.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139713493134064)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752673856)":
	{
		"height": 0.0
	},
	"output.Protocol(140156677514432)":
	{
		"height": 0.0
	},
	"output.Protocol(140190208797904)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873537696)":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"util.js",
				"lib/util.js"
			],
			[
				"quickjs-child",
				"quickjs-child-process.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"CMakeLi",
				"CMakeLists.txt"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"js-u",
				"js-utils.h"
			],
			[
				"defines.h",
				"defines.h"
			],
			[
				"queue.c",
				"queue.c"
			],
			[
				"extend",
				"lib/extendArray.js"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"path.c",
				"path.c"
			],
			[
				"quickjs-sockets",
				"quickjs-sockets.c"
			],
			[
				"lexer",
				"quickjs-lexer.c"
			],
			[
				"buffer-ut",
				"buffer-utils.h"
			],
			[
				"ringbuf",
				"ringbuffer.h"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"debug.h",
				"debug.h"
			],
			[
				"debug.c",
				"debug.c"
			],
			[
				"quickjs-lexer.c",
				"quickjs-lexer.c"
			],
			[
				"quickjs-loc",
				"quickjs-location.c"
			],
			[
				"xml.c",
				"quickjs-xml.c"
			],
			[
				"test-dia",
				"build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"resol",
				"resolve-imports.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"quickjs-mis",
				"quickjs-misc.c"
			],
			[
				"location.c",
				"quickjs-location.c"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"extra",
				"extract-structs.js"
			],
			[
				"-inspe",
				"quickjs-inspect.c"
			],
			[
				"proper",
				"property-enumeration.h"
			],
			[
				"vector",
				"vector.h"
			],
			[
				"dom.j",
				"lib/dom.js"
			],
			[
				"res",
				"resolve-imports.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"lexre",
				"lexer.c"
			],
			[
				"lexer.c",
				"quickjs-lexer.c"
			],
			[
				"pointer",
				"pointer.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"archive",
				"quickjs-archive.c"
			],
			[
				"pointer.c",
				"quickjs-pointer.c"
			],
			[
				"spect.c",
				"quickjs-inspect.c"
			],
			[
				"blob.c",
				"quickjs-blob.c"
			],
			[
				"repea",
				"quickjs-repeater.c"
			],
			[
				"loca",
				"quickjs-location.c"
			],
			[
				"bjson.c",
				"quickjs-bjson.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"char-u",
				"char-utils.h"
			],
			[
				"buffer",
				"buffer-utils.h"
			],
			[
				"predi",
				"predicate.h"
			],
			[
				"virtua",
				"virtual-properties.c"
			],
			[
				"pointre",
				"pointer.c"
			],
			[
				"deep.c",
				"quickjs-deep.c"
			],
			[
				"child-",
				"child-process.c"
			],
			[
				"child-pro",
				"quickjs-child-process.c"
			],
			[
				"gpio.c",
				"quickjs-gpio.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"ointer.h",
				"pointer.h"
			],
			[
				"defin",
				"defines.h"
			],
			[
				"defines",
				"defines.h"
			],
			[
				"cutils.h",
				"char-utils.h"
			],
			[
				"debu",
				"debug.h"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"test_dom",
				"tests/test_dom.js"
			],
			[
				"test_le",
				"tests/test_lexer.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"test",
				"tests/test_stack.js"
			],
			[
				"jsutils",
				"CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d"
			],
			[
				"jslexe",
				"lib/jslexer.js"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"xpath.j",
				"lib/xpath.js"
			],
			[
				"predicate.h",
				"predicate.h"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"list.h",
				"~/Projects/plot-cv/quickjs/list.h"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"queue",
				"queue.c"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"test_wa",
				"tests/test_watch.js"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"tree-wa",
				"quickjs-tree-walker.c"
			],
			[
				"quick",
				"quickjs-xml.c"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"cmakelis",
				"CMakeLists.txt"
			],
			[
				"",
				"tests/test_xml.js"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"doxy",
				"Doxyfile"
			],
			[
				"Doxyfile",
				"Doxyfile"
			],
			[
				"interna",
				"quickjs-internal.h"
			],
			[
				"console.js",
				"lib/console.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"child",
				"child-process.c"
			],
			[
				"qsort_r",
				"qsort_r.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"quicksj-misc",
				"quickjs-misc.c"
			],
			[
				"process.js",
				"lib/process.js"
			],
			[
				"quickjs-mm",
				"quickjs-mmap.c"
			],
			[
				"quickjs-m",
				"quickjs-misc.c"
			],
			[
				"redicate.c",
				"predicate.c"
			],
			[
				"sockets.h",
				"quickjs-sockets.h"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"char-",
				"char-utils.h"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"conso",
				"lib/console.js"
			],
			[
				"clang-f",
				".clang-format"
			],
			[
				"test_mi",
				"tests/test_misc.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 294.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
