{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "REPL\n  constructor(name)\n  abort()\n  acceptLine()\n  alert()\n  backwardChar()\n  backwardDeleteChar()\n  backwardKillLine()\n  backwardKillWord()\n  backwardWord()\n  beginningOfLine()\n  bigfloatToString(a, radix)\n  bigintToString(a, radix)\n  cmdReadlineStart()\n  cmdStart()\n  colorizeJs(str)\n  pushState(c)\n  lastState(c)\n  popState(c)\n  parseBlockComment()\n  parseLineComment()\n  parseString(delim)\n  parseRegex()\n  parseNumber()\n  parseIdentifier()\n  setStyle(from, to)\n  completion()\n  controlC()\n  controlD()\n  deleteChar()\n  deleteCharDir(dir)\n  downcaseWord()\n  dupstr(str, count)\n  endOfLine()\n  printStatus(fn)\n  evalAndPrint(expr)\n  extractDirective(a)\n  forwardChar()\n  forwardWord()\n  getCompletions(line, pos)\n  symcmp(a, b)\n  getContextObject(line, pos)\n  getContextWord(line, pos)\n  handleByte(c)\n  handleChar(c1)\n  handleCmd(expr)\n  handleDirective(cmd, expr)\n  handleKey(keys)\n  help()\n  sel(n)\n  historyAdd(str)\n  historySearch(dir)\n  historySearchBackward()\n  historySearchForward()\n  insert(str)\n  killLine()\n  killRegion(start, end, dir)\n  killWord()\n  moveCursor(delta)\n  nextHistory()\n  numberToString(a, radix)\n  previousHistory()\n  print(a)\n  printRec(a)\n  quotedInsert()\n  readlineHandleCmd(expr)\n  readlinePrintPrompt()\n  readlineStart(defstr, cb)\n  reset()\n  runSync(name)\n  sigintHandler()\n  skipWordBackward(pos)\n  skipWordForward(pos)\n  termInit()\n  termReadHandler()\n  transposeChars()\n  transposeWords()\n  upcaseWord()\n  update()\n  yank()\n  isAlpha(c)\n  isDigit(c)\n  isWord(c)\n  ucsLength(str)\n  isTrailingSurrogate(c)\n  isBalanced(a, b)\n  printColorText(str, start, style_names)\n  printCsi(n, code)",
			"settings":
			{
				"buffer_size": 1626,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					927,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16928,
								16943
							],
							[
								17040,
								17053
							],
							[
								17152,
								17162
							],
							[
								17293,
								17311
							],
							[
								18170,
								18189
							],
							[
								18366,
								18379
							],
							[
								18550,
								18563
							],
							[
								18634,
								18659
							],
							[
								19488,
								19515
							],
							[
								20015,
								20042
							],
							[
								20983,
								21008
							],
							[
								21138,
								21151
							],
							[
								21614,
								21628
							],
							[
								22552,
								22567
							],
							[
								23419,
								23445
							],
							[
								26533,
								26548
							],
							[
								27554,
								27560
							],
							[
								27563,
								27582
							],
							[
								28646,
								28661
							],
							[
								28757,
								28775
							],
							[
								29123,
								29146
							],
							[
								29191,
								29213
							],
							[
								29257,
								29268
							],
							[
								29436,
								29446
							],
							[
								29514,
								29541
							],
							[
								29974,
								29984
							],
							[
								30074,
								30091
							],
							[
								30932,
								30945
							],
							[
								31126,
								31150
							],
							[
								31665,
								31682
							],
							[
								31935,
								31943
							],
							[
								31967,
								31991
							],
							[
								34317,
								34331
							],
							[
								34369,
								34392
							],
							[
								34457,
								34478
							],
							[
								34626,
								34651
							],
							[
								35359,
								35366
							],
							[
								35420,
								35433
							],
							[
								35500,
								35506
							],
							[
								35539,
								35554
							],
							[
								35622,
								35643
							],
							[
								35794,
								35814
							],
							[
								35985,
								35995
							],
							[
								36588,
								36605
							],
							[
								36777,
								36793
							],
							[
								37135,
								37151
							],
							[
								37622,
								37634
							],
							[
								37853,
								37861
							],
							[
								39478,
								39484
							],
							[
								39523,
								39542
							],
							[
								39634,
								39653
							],
							[
								39715,
								39733
							],
							[
								39825,
								39848
							],
							[
								40249,
								40280
							],
							[
								40437,
								40462
							],
							[
								40571,
								40619
							],
							[
								40907,
								40933
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					928,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16928,
								16943
							],
							[
								16997,
								17010
							],
							[
								17109,
								17119
							],
							[
								17271,
								17289
							],
							[
								18148,
								18167
							],
							[
								18344,
								18357
							],
							[
								18528,
								18541
							],
							[
								18612,
								18637
							],
							[
								19466,
								19493
							],
							[
								19993,
								20020
							],
							[
								20961,
								20986
							],
							[
								21116,
								21129
							],
							[
								21592,
								21606
							],
							[
								22530,
								22545
							],
							[
								23397,
								23423
							],
							[
								26511,
								26526
							],
							[
								27532,
								27538
							],
							[
								27541,
								27560
							],
							[
								28624,
								28639
							],
							[
								28735,
								28753
							],
							[
								29101,
								29124
							],
							[
								29169,
								29191
							],
							[
								29235,
								29246
							],
							[
								29414,
								29424
							],
							[
								29492,
								29519
							],
							[
								29952,
								29962
							],
							[
								30052,
								30069
							],
							[
								30910,
								30923
							],
							[
								31104,
								31128
							],
							[
								31643,
								31660
							],
							[
								31913,
								31921
							],
							[
								31945,
								31969
							],
							[
								34295,
								34309
							],
							[
								34347,
								34370
							],
							[
								34435,
								34456
							],
							[
								34604,
								34629
							],
							[
								35337,
								35344
							],
							[
								35398,
								35411
							],
							[
								35478,
								35484
							],
							[
								35517,
								35532
							],
							[
								35600,
								35621
							],
							[
								35772,
								35792
							],
							[
								35963,
								35973
							],
							[
								36566,
								36583
							],
							[
								36755,
								36771
							],
							[
								37113,
								37129
							],
							[
								37600,
								37612
							],
							[
								37831,
								37839
							],
							[
								39456,
								39462
							],
							[
								39501,
								39520
							],
							[
								39612,
								39631
							],
							[
								39693,
								39711
							],
							[
								39803,
								39826
							],
							[
								40227,
								40258
							],
							[
								40415,
								40440
							],
							[
								40549,
								40597
							],
							[
								40885,
								40911
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					929,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16928,
								16943
							],
							[
								16997,
								17010
							],
							[
								17109,
								17119
							],
							[
								17267,
								17285
							],
							[
								18144,
								18163
							],
							[
								18340,
								18353
							],
							[
								18524,
								18537
							],
							[
								18608,
								18633
							],
							[
								19462,
								19489
							],
							[
								19989,
								20016
							],
							[
								20957,
								20982
							],
							[
								21112,
								21125
							],
							[
								21588,
								21602
							],
							[
								22526,
								22541
							],
							[
								23393,
								23419
							],
							[
								26507,
								26522
							],
							[
								27528,
								27534
							],
							[
								27537,
								27556
							],
							[
								28620,
								28635
							],
							[
								28731,
								28749
							],
							[
								29097,
								29120
							],
							[
								29165,
								29187
							],
							[
								29231,
								29242
							],
							[
								29410,
								29420
							],
							[
								29488,
								29515
							],
							[
								29948,
								29958
							],
							[
								30048,
								30065
							],
							[
								30906,
								30919
							],
							[
								31100,
								31124
							],
							[
								31639,
								31656
							],
							[
								31909,
								31917
							],
							[
								31941,
								31965
							],
							[
								34291,
								34305
							],
							[
								34343,
								34366
							],
							[
								34431,
								34452
							],
							[
								34600,
								34625
							],
							[
								35333,
								35340
							],
							[
								35394,
								35407
							],
							[
								35474,
								35480
							],
							[
								35513,
								35528
							],
							[
								35596,
								35617
							],
							[
								35768,
								35788
							],
							[
								35959,
								35969
							],
							[
								36562,
								36579
							],
							[
								36751,
								36767
							],
							[
								37109,
								37125
							],
							[
								37596,
								37608
							],
							[
								37827,
								37835
							],
							[
								39452,
								39458
							],
							[
								39497,
								39516
							],
							[
								39608,
								39627
							],
							[
								39689,
								39707
							],
							[
								39799,
								39822
							],
							[
								40223,
								40254
							],
							[
								40411,
								40436
							],
							[
								40545,
								40593
							],
							[
								40881,
								40907
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					930,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16931,
								16946
							],
							[
								17000,
								17013
							],
							[
								17112,
								17122
							],
							[
								17265,
								17283
							],
							[
								18142,
								18161
							],
							[
								18338,
								18351
							],
							[
								18522,
								18535
							],
							[
								18606,
								18631
							],
							[
								19460,
								19487
							],
							[
								19987,
								20014
							],
							[
								20955,
								20980
							],
							[
								21110,
								21123
							],
							[
								21586,
								21600
							],
							[
								22524,
								22539
							],
							[
								23391,
								23417
							],
							[
								26505,
								26520
							],
							[
								27526,
								27532
							],
							[
								27535,
								27554
							],
							[
								28618,
								28633
							],
							[
								28729,
								28747
							],
							[
								29095,
								29118
							],
							[
								29163,
								29185
							],
							[
								29229,
								29240
							],
							[
								29408,
								29418
							],
							[
								29486,
								29513
							],
							[
								29946,
								29956
							],
							[
								30046,
								30063
							],
							[
								30904,
								30917
							],
							[
								31098,
								31122
							],
							[
								31637,
								31654
							],
							[
								31907,
								31915
							],
							[
								31939,
								31963
							],
							[
								34289,
								34303
							],
							[
								34341,
								34364
							],
							[
								34429,
								34450
							],
							[
								34598,
								34623
							],
							[
								35331,
								35338
							],
							[
								35392,
								35405
							],
							[
								35472,
								35478
							],
							[
								35511,
								35526
							],
							[
								35594,
								35615
							],
							[
								35766,
								35786
							],
							[
								35957,
								35967
							],
							[
								36560,
								36577
							],
							[
								36749,
								36765
							],
							[
								37107,
								37123
							],
							[
								37594,
								37606
							],
							[
								37825,
								37833
							],
							[
								39450,
								39456
							],
							[
								39495,
								39514
							],
							[
								39606,
								39625
							],
							[
								39687,
								39705
							],
							[
								39797,
								39820
							],
							[
								40221,
								40252
							],
							[
								40409,
								40434
							],
							[
								40543,
								40591
							],
							[
								40879,
								40905
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					931,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16998,
								17011
							],
							[
								17113,
								17123
							],
							[
								17267,
								17285
							],
							[
								18144,
								18163
							],
							[
								18340,
								18353
							],
							[
								18524,
								18537
							],
							[
								18608,
								18633
							],
							[
								19462,
								19489
							],
							[
								19989,
								20016
							],
							[
								20957,
								20982
							],
							[
								21112,
								21125
							],
							[
								21588,
								21602
							],
							[
								22526,
								22541
							],
							[
								23393,
								23419
							],
							[
								26507,
								26522
							],
							[
								27528,
								27534
							],
							[
								27537,
								27556
							],
							[
								28620,
								28635
							],
							[
								28731,
								28749
							],
							[
								29097,
								29120
							],
							[
								29165,
								29187
							],
							[
								29231,
								29242
							],
							[
								29410,
								29420
							],
							[
								29488,
								29515
							],
							[
								29948,
								29958
							],
							[
								30048,
								30065
							],
							[
								30906,
								30919
							],
							[
								31100,
								31124
							],
							[
								31639,
								31656
							],
							[
								31909,
								31917
							],
							[
								31941,
								31965
							],
							[
								34291,
								34305
							],
							[
								34343,
								34366
							],
							[
								34431,
								34452
							],
							[
								34600,
								34625
							],
							[
								35333,
								35340
							],
							[
								35394,
								35407
							],
							[
								35474,
								35480
							],
							[
								35513,
								35528
							],
							[
								35596,
								35617
							],
							[
								35768,
								35788
							],
							[
								35959,
								35969
							],
							[
								36562,
								36579
							],
							[
								36751,
								36767
							],
							[
								37109,
								37125
							],
							[
								37596,
								37608
							],
							[
								37827,
								37835
							],
							[
								39452,
								39458
							],
							[
								39497,
								39516
							],
							[
								39608,
								39627
							],
							[
								39689,
								39707
							],
							[
								39799,
								39822
							],
							[
								40223,
								40254
							],
							[
								40411,
								40436
							],
							[
								40545,
								40593
							],
							[
								40881,
								40907
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					932,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16998,
								17011
							],
							[
								17113,
								17123
							],
							[
								17271,
								17289
							],
							[
								18148,
								18167
							],
							[
								18344,
								18357
							],
							[
								18528,
								18541
							],
							[
								18612,
								18637
							],
							[
								19466,
								19493
							],
							[
								19993,
								20020
							],
							[
								20961,
								20986
							],
							[
								21116,
								21129
							],
							[
								21592,
								21606
							],
							[
								22530,
								22545
							],
							[
								23397,
								23423
							],
							[
								26511,
								26526
							],
							[
								27532,
								27538
							],
							[
								27541,
								27560
							],
							[
								28624,
								28639
							],
							[
								28735,
								28753
							],
							[
								29101,
								29124
							],
							[
								29169,
								29191
							],
							[
								29235,
								29246
							],
							[
								29414,
								29424
							],
							[
								29492,
								29519
							],
							[
								29952,
								29962
							],
							[
								30052,
								30069
							],
							[
								30910,
								30923
							],
							[
								31104,
								31128
							],
							[
								31643,
								31660
							],
							[
								31913,
								31921
							],
							[
								31945,
								31969
							],
							[
								34295,
								34309
							],
							[
								34347,
								34370
							],
							[
								34435,
								34456
							],
							[
								34604,
								34629
							],
							[
								35337,
								35344
							],
							[
								35398,
								35411
							],
							[
								35478,
								35484
							],
							[
								35517,
								35532
							],
							[
								35600,
								35621
							],
							[
								35772,
								35792
							],
							[
								35963,
								35973
							],
							[
								36566,
								36583
							],
							[
								36755,
								36771
							],
							[
								37113,
								37129
							],
							[
								37600,
								37612
							],
							[
								37831,
								37839
							],
							[
								39456,
								39462
							],
							[
								39501,
								39520
							],
							[
								39612,
								39631
							],
							[
								39693,
								39711
							],
							[
								39803,
								39826
							],
							[
								40227,
								40258
							],
							[
								40415,
								40440
							],
							[
								40549,
								40597
							],
							[
								40885,
								40911
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					933,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17338,
								17356
							],
							[
								18215,
								18234
							],
							[
								18411,
								18424
							],
							[
								18595,
								18608
							],
							[
								18679,
								18704
							],
							[
								19533,
								19560
							],
							[
								20060,
								20087
							],
							[
								21028,
								21053
							],
							[
								21183,
								21196
							],
							[
								21659,
								21673
							],
							[
								22597,
								22612
							],
							[
								23464,
								23490
							],
							[
								26578,
								26593
							],
							[
								27599,
								27605
							],
							[
								27608,
								27627
							],
							[
								28691,
								28706
							],
							[
								28802,
								28820
							],
							[
								29168,
								29191
							],
							[
								29236,
								29258
							],
							[
								29302,
								29313
							],
							[
								29481,
								29491
							],
							[
								29559,
								29586
							],
							[
								30019,
								30029
							],
							[
								30119,
								30136
							],
							[
								30977,
								30990
							],
							[
								31171,
								31195
							],
							[
								31710,
								31727
							],
							[
								31980,
								31988
							],
							[
								32012,
								32036
							],
							[
								34361,
								34375
							],
							[
								34413,
								34436
							],
							[
								34501,
								34522
							],
							[
								34670,
								34695
							],
							[
								35403,
								35410
							],
							[
								35464,
								35477
							],
							[
								35544,
								35550
							],
							[
								35583,
								35598
							],
							[
								35666,
								35687
							],
							[
								35838,
								35858
							],
							[
								36029,
								36039
							],
							[
								36632,
								36649
							],
							[
								36821,
								36837
							],
							[
								37179,
								37195
							],
							[
								37666,
								37678
							],
							[
								37897,
								37905
							],
							[
								39522,
								39528
							],
							[
								39567,
								39586
							],
							[
								39678,
								39697
							],
							[
								39759,
								39777
							],
							[
								39869,
								39892
							],
							[
								40293,
								40324
							],
							[
								40481,
								40506
							],
							[
								40615,
								40663
							],
							[
								40951,
								40977
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					934,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17338,
								17356
							],
							[
								18215,
								18234
							],
							[
								18411,
								18424
							],
							[
								18595,
								18608
							],
							[
								18679,
								18704
							],
							[
								19533,
								19560
							],
							[
								20060,
								20087
							],
							[
								21028,
								21053
							],
							[
								21183,
								21196
							],
							[
								21659,
								21673
							],
							[
								22597,
								22612
							],
							[
								23464,
								23490
							],
							[
								26578,
								26593
							],
							[
								27599,
								27605
							],
							[
								27608,
								27627
							],
							[
								28691,
								28706
							],
							[
								28802,
								28820
							],
							[
								29168,
								29191
							],
							[
								29236,
								29258
							],
							[
								29302,
								29313
							],
							[
								29481,
								29491
							],
							[
								29559,
								29586
							],
							[
								30019,
								30029
							],
							[
								30119,
								30136
							],
							[
								30977,
								30990
							],
							[
								31171,
								31195
							],
							[
								31710,
								31727
							],
							[
								31980,
								31988
							],
							[
								32012,
								32036
							],
							[
								34361,
								34375
							],
							[
								34413,
								34436
							],
							[
								34501,
								34522
							],
							[
								34670,
								34695
							],
							[
								35403,
								35410
							],
							[
								35464,
								35477
							],
							[
								35544,
								35550
							],
							[
								35583,
								35598
							],
							[
								35666,
								35687
							],
							[
								35838,
								35858
							],
							[
								36029,
								36039
							],
							[
								36632,
								36649
							],
							[
								36821,
								36837
							],
							[
								37179,
								37195
							],
							[
								37666,
								37678
							],
							[
								37897,
								37905
							],
							[
								39522,
								39528
							],
							[
								39567,
								39586
							],
							[
								39678,
								39697
							],
							[
								39759,
								39777
							],
							[
								39869,
								39892
							],
							[
								40293,
								40324
							],
							[
								40481,
								40506
							],
							[
								40615,
								40663
							],
							[
								40951,
								40977
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWgYAAFJFUEwKICBjb25zdHJ1Y3RvcihuYW1lKQogIGFib3J0KCkKICBhY2NlcHRMaW5lKCkKICBhbGVydCgpCiAgYmFja3dhcmRDaGFyKCkKICBiYWNrd2FyZERlbGV0ZUNoYXIoKQogIGJhY2t3YXJkS2lsbExpbmUoKQogIGJhY2t3YXJkS2lsbFdvcmQoKQogIGJhY2t3YXJkV29yZCgpCiAgYmVnaW5uaW5nT2ZMaW5lKCkKICBiaWdmbG9hdFRvU3RyaW5nKGEsIHJhZGl4KQogIGJpZ2ludFRvU3RyaW5nKGEsIHJhZGl4KQogIGNtZFJlYWRsaW5lU3RhcnQoKQogIGNtZFN0YXJ0KCkKICBjb2xvcml6ZUpzKHN0cikKICBwdXNoU3RhdGUoYykKICBsYXN0U3RhdGUoYykKICBwb3BTdGF0ZShjKQogIHBhcnNlQmxvY2tDb21tZW50KCkKICBwYXJzZUxpbmVDb21tZW50KCkKICBwYXJzZVN0cmluZyhkZWxpbSkKICBwYXJzZVJlZ2V4KCkKICBwYXJzZU51bWJlcigpCiAgcGFyc2VJZGVudGlmaWVyKCkKICBzZXRTdHlsZShmcm9tLCB0bykKICBjb21wbGV0aW9uKCkKICBjb250cm9sQygpCiAgY29udHJvbEQoKQogIGRlbGV0ZUNoYXIoKQogIGRlbGV0ZUNoYXJEaXIoZGlyKQogIGRvd25jYXNlV29yZCgpCiAgZHVwc3RyKHN0ciwgY291bnQpCiAgZW5kT2ZMaW5lKCkKICBwcmludFN0YXR1cyhmbikKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZUNtZChleHByKQogIGhhbmRsZURpcmVjdGl2ZShjbWQsIGV4cHIpCiAgaGFuZGxlS2V5KGtleXMpCiAgaGVscCgpCiAgc2VsKG4pCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHF1b3RlZEluc2VydCgpCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1blN5bmMobmFtZSkKICBzaWdpbnRIYW5kbGVyKCkKICBza2lwV29yZEJhY2t3YXJkKHBvcykKICBza2lwV29yZEZvcndhcmQocG9zKQogIHRlcm1Jbml0KCkKICB0ZXJtUmVhZEhhbmRsZXIoKQogIHRyYW5zcG9zZUNoYXJzKCkKICB0cmFuc3Bvc2VXb3JkcygpCiAgdXBjYXNlV29yZCgpCiAgdXBkYXRlKCkKICB5YW5rKCkKICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgaXNUcmFpbGluZ1N1cnJvZ2F0ZShjKQogIGlzQmFsYW5jZWQoYSwgYikKICBwcmludENvbG9yVGV4dChzdHIsIHN0YXJ0LCBzdHlsZV9uYW1lcykKICBwcmludENzaShuLCBjb2RlKQAAAAAAAAAAWgYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					935,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17338,
								17356
							],
							[
								18215,
								18234
							],
							[
								18411,
								18424
							],
							[
								18595,
								18608
							],
							[
								18679,
								18704
							],
							[
								19533,
								19560
							],
							[
								20060,
								20087
							],
							[
								21028,
								21053
							],
							[
								21183,
								21196
							],
							[
								21659,
								21673
							],
							[
								22597,
								22612
							],
							[
								23464,
								23490
							],
							[
								26578,
								26593
							],
							[
								27599,
								27605
							],
							[
								27608,
								27627
							],
							[
								28691,
								28706
							],
							[
								28802,
								28820
							],
							[
								29168,
								29191
							],
							[
								29236,
								29258
							],
							[
								29302,
								29313
							],
							[
								29481,
								29491
							],
							[
								29559,
								29586
							],
							[
								30019,
								30029
							],
							[
								30119,
								30136
							],
							[
								30977,
								30990
							],
							[
								31171,
								31195
							],
							[
								31710,
								31727
							],
							[
								31980,
								31988
							],
							[
								32012,
								32036
							],
							[
								34361,
								34375
							],
							[
								34413,
								34436
							],
							[
								34501,
								34522
							],
							[
								34670,
								34695
							],
							[
								35403,
								35410
							],
							[
								35464,
								35477
							],
							[
								35544,
								35550
							],
							[
								35583,
								35598
							],
							[
								35666,
								35687
							],
							[
								35838,
								35858
							],
							[
								36029,
								36039
							],
							[
								36632,
								36649
							],
							[
								36821,
								36837
							],
							[
								37179,
								37195
							],
							[
								37666,
								37678
							],
							[
								37897,
								37905
							],
							[
								39522,
								39528
							],
							[
								39567,
								39586
							],
							[
								39678,
								39697
							],
							[
								39759,
								39777
							],
							[
								39869,
								39892
							],
							[
								40293,
								40324
							],
							[
								40481,
								40506
							],
							[
								40615,
								40663
							],
							[
								40951,
								40977
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					936,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/test-repl.js",
						"symkeys":
						[
							[
								401,
								431
							],
							[
								496,
								509
							],
							[
								734,
								742
							],
							[
								779,
								787
							],
							[
								821,
								848
							],
							[
								1010,
								1041
							],
							[
								1258,
								1269
							],
							[
								1416,
								1423
							],
							[
								1501,
								1547
							],
							[
								1721,
								1743
							],
							[
								2068,
								2081
							],
							[
								2117,
								2131
							],
							[
								2212,
								2228
							],
							[
								2309,
								2324
							],
							[
								2416,
								2424
							],
							[
								2465,
								2473
							]
						],
						"symlist":
						[
							"function LoadHistory(filename)",
							"parse = () =>",
							"entry =>",
							"entry =>",
							"function ReadJSON(filename)",
							"function ReadFile(name, binary)",
							"value(node)",
							"value()",
							"function WriteFile(name, data, verbose = true)",
							"function main(...args)",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAACNAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					937,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
						"symkeys":
						[
							[
								160,
								180
							],
							[
								225,
								241
							],
							[
								295,
								314
							],
							[
								349,
								365
							],
							[
								421,
								437
							],
							[
								500,
								534
							],
							[
								557,
								589
							],
							[
								612,
								655
							],
							[
								896,
								908
							],
							[
								943,
								962
							],
							[
								1060,
								1076
							],
							[
								1138,
								1156
							],
							[
								1220,
								1239
							],
							[
								1304,
								1313
							],
							[
								1368,
								1385
							],
							[
								1448,
								1465
							],
							[
								1528,
								1542
							],
							[
								1602,
								1617
							],
							[
								1678,
								1693
							],
							[
								1754,
								1762
							],
							[
								1816,
								1828
							],
							[
								1886,
								1896
							],
							[
								1952,
								1963
							],
							[
								2020,
								2028
							],
							[
								2082,
								2104
							],
							[
								2172,
								2187
							],
							[
								2248,
								2270
							],
							[
								2338,
								2354
							],
							[
								2416,
								2432
							],
							[
								2494,
								2506
							],
							[
								2564,
								2576
							],
							[
								2634,
								2647
							],
							[
								2706,
								2724
							],
							[
								2782,
								2800
							],
							[
								2864,
								2886
							],
							[
								2954,
								2981
							],
							[
								3054,
								3071
							],
							[
								3128,
								3145
							],
							[
								3202,
								3219
							],
							[
								3266,
								3282
							],
							[
								3365,
								3381
							],
							[
								3453,
								3469
							],
							[
								3541,
								3558
							],
							[
								3615,
								3635
							],
							[
								3694,
								3714
							],
							[
								3873,
								3892
							],
							[
								3968,
								3975
							],
							[
								4004,
								4024
							],
							[
								4094,
								4109
							],
							[
								4170,
								4196
							],
							[
								4274,
								4295
							],
							[
								4373,
								4399
							],
							[
								4445,
								4470
							],
							[
								4535,
								4577
							],
							[
								4711,
								4751
							],
							[
								7190,
								7233
							],
							[
								7686,
								7721
							],
							[
								7877,
								7895
							],
							[
								7925,
								7930
							],
							[
								8020,
								8047
							],
							[
								8166,
								8187
							],
							[
								8216,
								8232
							],
							[
								8325,
								8355
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function define(obj, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACNAAAATG9hZEhpc3RvcnkoZmlsZW5hbWUpClJlYWRKU09OKGZpbGVuYW1lKQpSZWFkRmlsZShuYW1lLCBiaW5hcnkpCiAgdmFsdWUobm9kZSkKICB2YWx1ZSgpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABZBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					938,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17338,
								17356
							],
							[
								18278,
								18297
							],
							[
								18474,
								18487
							],
							[
								18658,
								18671
							],
							[
								18742,
								18767
							],
							[
								19596,
								19623
							],
							[
								20123,
								20150
							],
							[
								21091,
								21116
							],
							[
								21246,
								21259
							],
							[
								21722,
								21736
							],
							[
								22660,
								22675
							],
							[
								23527,
								23553
							],
							[
								26641,
								26656
							],
							[
								27662,
								27668
							],
							[
								27671,
								27690
							],
							[
								28754,
								28769
							],
							[
								28865,
								28883
							],
							[
								29231,
								29254
							],
							[
								29299,
								29321
							],
							[
								29365,
								29376
							],
							[
								29544,
								29554
							],
							[
								29622,
								29649
							],
							[
								30082,
								30092
							],
							[
								30182,
								30199
							],
							[
								31040,
								31053
							],
							[
								31234,
								31258
							],
							[
								31773,
								31790
							],
							[
								32043,
								32051
							],
							[
								32075,
								32099
							],
							[
								34424,
								34438
							],
							[
								34476,
								34499
							],
							[
								34564,
								34585
							],
							[
								34733,
								34758
							],
							[
								35466,
								35473
							],
							[
								35527,
								35540
							],
							[
								35607,
								35613
							],
							[
								35646,
								35661
							],
							[
								35729,
								35750
							],
							[
								35901,
								35921
							],
							[
								36092,
								36102
							],
							[
								36695,
								36712
							],
							[
								36884,
								36900
							],
							[
								37242,
								37258
							],
							[
								37729,
								37741
							],
							[
								37960,
								37968
							],
							[
								39585,
								39591
							],
							[
								39630,
								39649
							],
							[
								39741,
								39760
							],
							[
								39822,
								39840
							],
							[
								39932,
								39955
							],
							[
								40356,
								40387
							],
							[
								40544,
								40569
							],
							[
								40678,
								40726
							],
							[
								41014,
								41040
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZBAAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9ICooKQpBc3luY0dlbmVyYXRvckZ1bmN0aW9uID0gKigpCiooKQogIGlzQW55QXJyYXlCdWZmZXIodikKICBpc0FycmF5QnVmZmVyKHYpCiAgaXNCaWdJbnQ2NEFycmF5KHYpCiAgaXNCaWdVaW50NjRBcnJheSh2KQogIGlzRGF0ZSh2KQogIGlzRmxvYXQzMkFycmF5KHYpCiAgaXNGbG9hdDY0QXJyYXkodikKICBpc0ludDhBcnJheSh2KQogIGlzSW50MTZBcnJheSh2KQogIGlzSW50MzJBcnJheSh2KQogIGlzTWFwKHYpCiAgaXNQcm9taXNlKHYpCiAgaXNQcm94eSh2KQogIGlzUmVnRXhwKHYpCiAgaXNTZXQodikKICBpc1NoYXJlZEFycmF5QnVmZmVyKHYpCiAgaXNVaW50OEFycmF5KHYpCiAgaXNVaW50OENsYW1wZWRBcnJheSh2KQogIGlzVWludDE2QXJyYXkodikKICBpc1VpbnQzMkFycmF5KHYpCiAgaXNXZWFrTWFwKHYpCiAgaXNXZWFrU2V0KHYpCiAgaXNEYXRhVmlldyh2KQogIGlzQm9vbGVhbk9iamVjdCh2KQogIGlzQXN5bmNGdW5jdGlvbih2KQogIGlzR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24odikKICBpc051bWJlck9iamVjdCh2KQogIGlzQmlnSW50T2JqZWN0KHYpCiAgaXNTeW1ib2xPYmplY3QodikKICBpc05hdGl2ZUVycm9yKHYpCiAgaXNNYXBJdGVyYXRvcih2KQogIGlzU2V0SXRlcmF0b3IodikKICBpc1N0cmluZ09iamVjdCh2KQogIGlzQXJyYXlCdWZmZXJWaWV3KHYpCiAgaXNBcmd1bWVudHNPYmplY3QodikKICBpc0JveGVkUHJpbWl0aXZlKHYpCiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogIGRlZmluZShvYmosIC4uLmFyZ3MpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					939,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17338,
								17356
							],
							[
								18422,
								18441
							],
							[
								18618,
								18631
							],
							[
								18802,
								18815
							],
							[
								18886,
								18911
							],
							[
								19740,
								19767
							],
							[
								20267,
								20294
							],
							[
								21235,
								21260
							],
							[
								21390,
								21403
							],
							[
								21866,
								21880
							],
							[
								22804,
								22819
							],
							[
								23671,
								23697
							],
							[
								26785,
								26800
							],
							[
								27806,
								27812
							],
							[
								27815,
								27834
							],
							[
								28898,
								28913
							],
							[
								29009,
								29027
							],
							[
								29375,
								29398
							],
							[
								29443,
								29465
							],
							[
								29509,
								29520
							],
							[
								29688,
								29698
							],
							[
								29766,
								29793
							],
							[
								30226,
								30236
							],
							[
								30326,
								30343
							],
							[
								31184,
								31197
							],
							[
								31378,
								31402
							],
							[
								31917,
								31934
							],
							[
								32187,
								32195
							],
							[
								32219,
								32243
							],
							[
								34568,
								34582
							],
							[
								34620,
								34643
							],
							[
								34708,
								34729
							],
							[
								34877,
								34902
							],
							[
								35610,
								35617
							],
							[
								35671,
								35684
							],
							[
								35751,
								35757
							],
							[
								35790,
								35805
							],
							[
								35873,
								35894
							],
							[
								36045,
								36065
							],
							[
								36236,
								36246
							],
							[
								36839,
								36856
							],
							[
								37028,
								37044
							],
							[
								37386,
								37402
							],
							[
								37873,
								37885
							],
							[
								38104,
								38112
							],
							[
								39729,
								39735
							],
							[
								39774,
								39793
							],
							[
								39885,
								39904
							],
							[
								39966,
								39984
							],
							[
								40076,
								40099
							],
							[
								40500,
								40531
							],
							[
								40688,
								40713
							],
							[
								40822,
								40870
							],
							[
								41158,
								41184
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWgYAAFJFUEwKICBjb25zdHJ1Y3RvcihuYW1lKQogIGFib3J0KCkKICBhY2NlcHRMaW5lKCkKICBhbGVydCgpCiAgYmFja3dhcmRDaGFyKCkKICBiYWNrd2FyZERlbGV0ZUNoYXIoKQogIGJhY2t3YXJkS2lsbExpbmUoKQogIGJhY2t3YXJkS2lsbFdvcmQoKQogIGJhY2t3YXJkV29yZCgpCiAgYmVnaW5uaW5nT2ZMaW5lKCkKICBiaWdmbG9hdFRvU3RyaW5nKGEsIHJhZGl4KQogIGJpZ2ludFRvU3RyaW5nKGEsIHJhZGl4KQogIGNtZFJlYWRsaW5lU3RhcnQoKQogIGNtZFN0YXJ0KCkKICBjb2xvcml6ZUpzKHN0cikKICBwdXNoU3RhdGUoYykKICBsYXN0U3RhdGUoYykKICBwb3BTdGF0ZShjKQogIHBhcnNlQmxvY2tDb21tZW50KCkKICBwYXJzZUxpbmVDb21tZW50KCkKICBwYXJzZVN0cmluZyhkZWxpbSkKICBwYXJzZVJlZ2V4KCkKICBwYXJzZU51bWJlcigpCiAgcGFyc2VJZGVudGlmaWVyKCkKICBzZXRTdHlsZShmcm9tLCB0bykKICBjb21wbGV0aW9uKCkKICBjb250cm9sQygpCiAgY29udHJvbEQoKQogIGRlbGV0ZUNoYXIoKQogIGRlbGV0ZUNoYXJEaXIoZGlyKQogIGRvd25jYXNlV29yZCgpCiAgZHVwc3RyKHN0ciwgY291bnQpCiAgZW5kT2ZMaW5lKCkKICBwcmludFN0YXR1cyhmbikKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZUNtZChleHByKQogIGhhbmRsZURpcmVjdGl2ZShjbWQsIGV4cHIpCiAgaGFuZGxlS2V5KGtleXMpCiAgaGVscCgpCiAgc2VsKG4pCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHF1b3RlZEluc2VydCgpCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1blN5bmMobmFtZSkKICBzaWdpbnRIYW5kbGVyKCkKICBza2lwV29yZEJhY2t3YXJkKHBvcykKICBza2lwV29yZEZvcndhcmQocG9zKQogIHRlcm1Jbml0KCkKICB0ZXJtUmVhZEhhbmRsZXIoKQogIHRyYW5zcG9zZUNoYXJzKCkKICB0cmFuc3Bvc2VXb3JkcygpCiAgdXBjYXNlV29yZCgpCiAgdXBkYXRlKCkKICB5YW5rKCkKICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgaXNUcmFpbGluZ1N1cnJvZ2F0ZShjKQogIGlzQmFsYW5jZWQoYSwgYikKICBwcmludENvbG9yVGV4dChzdHIsIHN0YXJ0LCBzdHlsZV9uYW1lcykKICBwcmludENzaShuLCBjb2RlKQAAAAAAAAAAWgYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					940,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17338,
								17356
							],
							[
								18423,
								18442
							],
							[
								18619,
								18632
							],
							[
								18803,
								18816
							],
							[
								18887,
								18912
							],
							[
								19741,
								19768
							],
							[
								20268,
								20295
							],
							[
								21236,
								21261
							],
							[
								21391,
								21404
							],
							[
								21867,
								21881
							],
							[
								22805,
								22820
							],
							[
								23672,
								23698
							],
							[
								26786,
								26801
							],
							[
								27807,
								27813
							],
							[
								27816,
								27835
							],
							[
								28899,
								28914
							],
							[
								29010,
								29028
							],
							[
								29376,
								29399
							],
							[
								29444,
								29466
							],
							[
								29510,
								29521
							],
							[
								29689,
								29699
							],
							[
								29767,
								29794
							],
							[
								30227,
								30237
							],
							[
								30327,
								30344
							],
							[
								31185,
								31198
							],
							[
								31379,
								31403
							],
							[
								31918,
								31935
							],
							[
								32188,
								32196
							],
							[
								32220,
								32244
							],
							[
								34569,
								34583
							],
							[
								34621,
								34644
							],
							[
								34709,
								34730
							],
							[
								34878,
								34903
							],
							[
								35611,
								35618
							],
							[
								35672,
								35685
							],
							[
								35752,
								35758
							],
							[
								35791,
								35806
							],
							[
								35874,
								35895
							],
							[
								36046,
								36066
							],
							[
								36237,
								36247
							],
							[
								36840,
								36857
							],
							[
								37029,
								37045
							],
							[
								37387,
								37403
							],
							[
								37874,
								37886
							],
							[
								38105,
								38113
							],
							[
								39730,
								39736
							],
							[
								39775,
								39794
							],
							[
								39886,
								39905
							],
							[
								39967,
								39985
							],
							[
								40077,
								40100
							],
							[
								40501,
								40532
							],
							[
								40689,
								40714
							],
							[
								40823,
								40871
							],
							[
								41159,
								41185
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					941,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17338,
								17356
							],
							[
								18440,
								18459
							],
							[
								18636,
								18649
							],
							[
								18820,
								18833
							],
							[
								18904,
								18929
							],
							[
								19758,
								19785
							],
							[
								20285,
								20312
							],
							[
								21253,
								21278
							],
							[
								21408,
								21421
							],
							[
								21884,
								21898
							],
							[
								22822,
								22837
							],
							[
								23689,
								23715
							],
							[
								26803,
								26818
							],
							[
								27824,
								27830
							],
							[
								27833,
								27852
							],
							[
								28916,
								28931
							],
							[
								29027,
								29045
							],
							[
								29393,
								29416
							],
							[
								29461,
								29483
							],
							[
								29527,
								29538
							],
							[
								29706,
								29716
							],
							[
								29784,
								29811
							],
							[
								30244,
								30254
							],
							[
								30344,
								30361
							],
							[
								31202,
								31215
							],
							[
								31396,
								31420
							],
							[
								31935,
								31952
							],
							[
								32205,
								32213
							],
							[
								32237,
								32261
							],
							[
								34586,
								34600
							],
							[
								34638,
								34661
							],
							[
								34726,
								34747
							],
							[
								34895,
								34920
							],
							[
								35628,
								35635
							],
							[
								35689,
								35702
							],
							[
								35769,
								35775
							],
							[
								35808,
								35823
							],
							[
								35891,
								35912
							],
							[
								36063,
								36083
							],
							[
								36254,
								36264
							],
							[
								36857,
								36874
							],
							[
								37046,
								37062
							],
							[
								37404,
								37420
							],
							[
								37891,
								37903
							],
							[
								38122,
								38130
							],
							[
								39747,
								39753
							],
							[
								39792,
								39811
							],
							[
								39903,
								39922
							],
							[
								39984,
								40002
							],
							[
								40094,
								40117
							],
							[
								40518,
								40549
							],
							[
								40706,
								40731
							],
							[
								40840,
								40888
							],
							[
								41176,
								41202
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWgYAAFJFUEwKICBjb25zdHJ1Y3RvcihuYW1lKQogIGFib3J0KCkKICBhY2NlcHRMaW5lKCkKICBhbGVydCgpCiAgYmFja3dhcmRDaGFyKCkKICBiYWNrd2FyZERlbGV0ZUNoYXIoKQogIGJhY2t3YXJkS2lsbExpbmUoKQogIGJhY2t3YXJkS2lsbFdvcmQoKQogIGJhY2t3YXJkV29yZCgpCiAgYmVnaW5uaW5nT2ZMaW5lKCkKICBiaWdmbG9hdFRvU3RyaW5nKGEsIHJhZGl4KQogIGJpZ2ludFRvU3RyaW5nKGEsIHJhZGl4KQogIGNtZFJlYWRsaW5lU3RhcnQoKQogIGNtZFN0YXJ0KCkKICBjb2xvcml6ZUpzKHN0cikKICBwdXNoU3RhdGUoYykKICBsYXN0U3RhdGUoYykKICBwb3BTdGF0ZShjKQogIHBhcnNlQmxvY2tDb21tZW50KCkKICBwYXJzZUxpbmVDb21tZW50KCkKICBwYXJzZVN0cmluZyhkZWxpbSkKICBwYXJzZVJlZ2V4KCkKICBwYXJzZU51bWJlcigpCiAgcGFyc2VJZGVudGlmaWVyKCkKICBzZXRTdHlsZShmcm9tLCB0bykKICBjb21wbGV0aW9uKCkKICBjb250cm9sQygpCiAgY29udHJvbEQoKQogIGRlbGV0ZUNoYXIoKQogIGRlbGV0ZUNoYXJEaXIoZGlyKQogIGRvd25jYXNlV29yZCgpCiAgZHVwc3RyKHN0ciwgY291bnQpCiAgZW5kT2ZMaW5lKCkKICBwcmludFN0YXR1cyhmbikKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZUNtZChleHByKQogIGhhbmRsZURpcmVjdGl2ZShjbWQsIGV4cHIpCiAgaGFuZGxlS2V5KGtleXMpCiAgaGVscCgpCiAgc2VsKG4pCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHF1b3RlZEluc2VydCgpCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1blN5bmMobmFtZSkKICBzaWdpbnRIYW5kbGVyKCkKICBza2lwV29yZEJhY2t3YXJkKHBvcykKICBza2lwV29yZEZvcndhcmQocG9zKQogIHRlcm1Jbml0KCkKICB0ZXJtUmVhZEhhbmRsZXIoKQogIHRyYW5zcG9zZUNoYXJzKCkKICB0cmFuc3Bvc2VXb3JkcygpCiAgdXBjYXNlV29yZCgpCiAgdXBkYXRlKCkKICB5YW5rKCkKICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgaXNUcmFpbGluZ1N1cnJvZ2F0ZShjKQogIGlzQmFsYW5jZWQoYSwgYikKICBwcmludENvbG9yVGV4dChzdHIsIHN0YXJ0LCBzdHlsZV9uYW1lcykKICBwcmludENzaShuLCBjb2RlKQAAAAAAAAAAWgYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					942,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17343,
								17361
							],
							[
								18445,
								18464
							],
							[
								18641,
								18654
							],
							[
								18825,
								18838
							],
							[
								18909,
								18934
							],
							[
								19763,
								19790
							],
							[
								20290,
								20317
							],
							[
								21258,
								21283
							],
							[
								21413,
								21426
							],
							[
								21889,
								21903
							],
							[
								22827,
								22842
							],
							[
								23694,
								23720
							],
							[
								26808,
								26823
							],
							[
								27829,
								27835
							],
							[
								27838,
								27857
							],
							[
								28921,
								28936
							],
							[
								29032,
								29050
							],
							[
								29398,
								29421
							],
							[
								29466,
								29488
							],
							[
								29532,
								29543
							],
							[
								29711,
								29721
							],
							[
								29789,
								29816
							],
							[
								30249,
								30259
							],
							[
								30349,
								30366
							],
							[
								31207,
								31220
							],
							[
								31401,
								31425
							],
							[
								31940,
								31957
							],
							[
								32210,
								32218
							],
							[
								32242,
								32266
							],
							[
								34591,
								34605
							],
							[
								34643,
								34666
							],
							[
								34731,
								34752
							],
							[
								34900,
								34925
							],
							[
								35633,
								35640
							],
							[
								35694,
								35707
							],
							[
								35774,
								35780
							],
							[
								35813,
								35828
							],
							[
								35896,
								35917
							],
							[
								36068,
								36088
							],
							[
								36259,
								36269
							],
							[
								36862,
								36879
							],
							[
								37051,
								37067
							],
							[
								37409,
								37425
							],
							[
								37896,
								37908
							],
							[
								38127,
								38135
							],
							[
								39752,
								39758
							],
							[
								39797,
								39816
							],
							[
								39908,
								39927
							],
							[
								39989,
								40007
							],
							[
								40099,
								40122
							],
							[
								40523,
								40554
							],
							[
								40711,
								40736
							],
							[
								40845,
								40893
							],
							[
								41181,
								41207
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					943,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17339,
								17357
							],
							[
								18441,
								18460
							],
							[
								18637,
								18650
							],
							[
								18821,
								18834
							],
							[
								18905,
								18930
							],
							[
								19759,
								19786
							],
							[
								20286,
								20313
							],
							[
								21254,
								21279
							],
							[
								21409,
								21422
							],
							[
								21885,
								21899
							],
							[
								22823,
								22838
							],
							[
								23690,
								23716
							],
							[
								26804,
								26819
							],
							[
								27825,
								27831
							],
							[
								27834,
								27853
							],
							[
								28917,
								28932
							],
							[
								29028,
								29046
							],
							[
								29394,
								29417
							],
							[
								29462,
								29484
							],
							[
								29528,
								29539
							],
							[
								29707,
								29717
							],
							[
								29785,
								29812
							],
							[
								30245,
								30255
							],
							[
								30345,
								30362
							],
							[
								31203,
								31216
							],
							[
								31397,
								31421
							],
							[
								31936,
								31953
							],
							[
								32206,
								32214
							],
							[
								32238,
								32262
							],
							[
								34587,
								34601
							],
							[
								34639,
								34662
							],
							[
								34727,
								34748
							],
							[
								34896,
								34921
							],
							[
								35629,
								35636
							],
							[
								35690,
								35703
							],
							[
								35770,
								35776
							],
							[
								35809,
								35824
							],
							[
								35892,
								35913
							],
							[
								36064,
								36084
							],
							[
								36255,
								36265
							],
							[
								36858,
								36875
							],
							[
								37047,
								37063
							],
							[
								37405,
								37421
							],
							[
								37892,
								37904
							],
							[
								38123,
								38131
							],
							[
								39748,
								39754
							],
							[
								39793,
								39812
							],
							[
								39904,
								39923
							],
							[
								39985,
								40003
							],
							[
								40095,
								40118
							],
							[
								40519,
								40550
							],
							[
								40707,
								40732
							],
							[
								40841,
								40889
							],
							[
								41177,
								41203
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					944,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17339,
								17357
							],
							[
								18469,
								18488
							],
							[
								18665,
								18678
							],
							[
								18849,
								18862
							],
							[
								18933,
								18958
							],
							[
								19787,
								19814
							],
							[
								20314,
								20341
							],
							[
								21282,
								21307
							],
							[
								21437,
								21450
							],
							[
								21913,
								21927
							],
							[
								22851,
								22866
							],
							[
								23718,
								23744
							],
							[
								26832,
								26847
							],
							[
								27853,
								27859
							],
							[
								27862,
								27881
							],
							[
								28945,
								28960
							],
							[
								29056,
								29074
							],
							[
								29422,
								29445
							],
							[
								29490,
								29512
							],
							[
								29556,
								29567
							],
							[
								29735,
								29745
							],
							[
								29813,
								29840
							],
							[
								30273,
								30283
							],
							[
								30373,
								30390
							],
							[
								31231,
								31244
							],
							[
								31425,
								31449
							],
							[
								31964,
								31981
							],
							[
								32234,
								32242
							],
							[
								32266,
								32290
							],
							[
								34615,
								34629
							],
							[
								34667,
								34690
							],
							[
								34755,
								34776
							],
							[
								34924,
								34949
							],
							[
								35657,
								35664
							],
							[
								35718,
								35731
							],
							[
								35798,
								35804
							],
							[
								35837,
								35852
							],
							[
								35920,
								35941
							],
							[
								36092,
								36112
							],
							[
								36283,
								36293
							],
							[
								36886,
								36903
							],
							[
								37075,
								37091
							],
							[
								37433,
								37449
							],
							[
								37920,
								37932
							],
							[
								38151,
								38159
							],
							[
								39776,
								39782
							],
							[
								39821,
								39840
							],
							[
								39932,
								39951
							],
							[
								40013,
								40031
							],
							[
								40123,
								40146
							],
							[
								40547,
								40578
							],
							[
								40735,
								40760
							],
							[
								40869,
								40917
							],
							[
								41205,
								41231
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					945,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17339,
								17357
							],
							[
								18470,
								18489
							],
							[
								18666,
								18679
							],
							[
								18850,
								18863
							],
							[
								18934,
								18959
							],
							[
								19788,
								19815
							],
							[
								20315,
								20342
							],
							[
								21283,
								21308
							],
							[
								21438,
								21451
							],
							[
								21914,
								21928
							],
							[
								22852,
								22867
							],
							[
								23719,
								23745
							],
							[
								26833,
								26848
							],
							[
								27854,
								27860
							],
							[
								27863,
								27882
							],
							[
								28946,
								28961
							],
							[
								29057,
								29075
							],
							[
								29423,
								29446
							],
							[
								29491,
								29513
							],
							[
								29557,
								29568
							],
							[
								29736,
								29746
							],
							[
								29814,
								29841
							],
							[
								30274,
								30284
							],
							[
								30374,
								30391
							],
							[
								31232,
								31245
							],
							[
								31426,
								31450
							],
							[
								31965,
								31982
							],
							[
								32235,
								32243
							],
							[
								32267,
								32291
							],
							[
								34616,
								34630
							],
							[
								34668,
								34691
							],
							[
								34756,
								34777
							],
							[
								34925,
								34950
							],
							[
								35658,
								35665
							],
							[
								35719,
								35732
							],
							[
								35799,
								35805
							],
							[
								35838,
								35853
							],
							[
								35921,
								35942
							],
							[
								36093,
								36113
							],
							[
								36284,
								36294
							],
							[
								36887,
								36904
							],
							[
								37076,
								37092
							],
							[
								37434,
								37450
							],
							[
								37921,
								37933
							],
							[
								38152,
								38160
							],
							[
								39777,
								39783
							],
							[
								39822,
								39841
							],
							[
								39933,
								39952
							],
							[
								40014,
								40032
							],
							[
								40124,
								40147
							],
							[
								40548,
								40579
							],
							[
								40736,
								40761
							],
							[
								40870,
								40918
							],
							[
								41206,
								41232
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					946,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17339,
								17357
							],
							[
								18465,
								18484
							],
							[
								18661,
								18674
							],
							[
								18845,
								18858
							],
							[
								18929,
								18954
							],
							[
								19783,
								19810
							],
							[
								20310,
								20337
							],
							[
								21278,
								21303
							],
							[
								21433,
								21446
							],
							[
								21909,
								21923
							],
							[
								22847,
								22862
							],
							[
								23714,
								23740
							],
							[
								26828,
								26843
							],
							[
								27849,
								27855
							],
							[
								27858,
								27877
							],
							[
								28941,
								28956
							],
							[
								29052,
								29070
							],
							[
								29418,
								29441
							],
							[
								29486,
								29508
							],
							[
								29552,
								29563
							],
							[
								29731,
								29741
							],
							[
								29809,
								29836
							],
							[
								30269,
								30279
							],
							[
								30369,
								30386
							],
							[
								31227,
								31240
							],
							[
								31421,
								31445
							],
							[
								31960,
								31977
							],
							[
								32230,
								32238
							],
							[
								32262,
								32286
							],
							[
								34611,
								34625
							],
							[
								34663,
								34686
							],
							[
								34751,
								34772
							],
							[
								34920,
								34945
							],
							[
								35653,
								35660
							],
							[
								35714,
								35727
							],
							[
								35794,
								35800
							],
							[
								35833,
								35848
							],
							[
								35916,
								35937
							],
							[
								36088,
								36108
							],
							[
								36279,
								36289
							],
							[
								36882,
								36899
							],
							[
								37071,
								37087
							],
							[
								37429,
								37445
							],
							[
								37916,
								37928
							],
							[
								38147,
								38155
							],
							[
								39772,
								39778
							],
							[
								39817,
								39836
							],
							[
								39928,
								39947
							],
							[
								40009,
								40027
							],
							[
								40119,
								40142
							],
							[
								40543,
								40574
							],
							[
								40731,
								40756
							],
							[
								40865,
								40913
							],
							[
								41201,
								41227
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWgYAAFJFUEwKICBjb25zdHJ1Y3RvcihuYW1lKQogIGFib3J0KCkKICBhY2NlcHRMaW5lKCkKICBhbGVydCgpCiAgYmFja3dhcmRDaGFyKCkKICBiYWNrd2FyZERlbGV0ZUNoYXIoKQogIGJhY2t3YXJkS2lsbExpbmUoKQogIGJhY2t3YXJkS2lsbFdvcmQoKQogIGJhY2t3YXJkV29yZCgpCiAgYmVnaW5uaW5nT2ZMaW5lKCkKICBiaWdmbG9hdFRvU3RyaW5nKGEsIHJhZGl4KQogIGJpZ2ludFRvU3RyaW5nKGEsIHJhZGl4KQogIGNtZFJlYWRsaW5lU3RhcnQoKQogIGNtZFN0YXJ0KCkKICBjb2xvcml6ZUpzKHN0cikKICBwdXNoU3RhdGUoYykKICBsYXN0U3RhdGUoYykKICBwb3BTdGF0ZShjKQogIHBhcnNlQmxvY2tDb21tZW50KCkKICBwYXJzZUxpbmVDb21tZW50KCkKICBwYXJzZVN0cmluZyhkZWxpbSkKICBwYXJzZVJlZ2V4KCkKICBwYXJzZU51bWJlcigpCiAgcGFyc2VJZGVudGlmaWVyKCkKICBzZXRTdHlsZShmcm9tLCB0bykKICBjb21wbGV0aW9uKCkKICBjb250cm9sQygpCiAgY29udHJvbEQoKQogIGRlbGV0ZUNoYXIoKQogIGRlbGV0ZUNoYXJEaXIoZGlyKQogIGRvd25jYXNlV29yZCgpCiAgZHVwc3RyKHN0ciwgY291bnQpCiAgZW5kT2ZMaW5lKCkKICBwcmludFN0YXR1cyhmbikKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZUNtZChleHByKQogIGhhbmRsZURpcmVjdGl2ZShjbWQsIGV4cHIpCiAgaGFuZGxlS2V5KGtleXMpCiAgaGVscCgpCiAgc2VsKG4pCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHF1b3RlZEluc2VydCgpCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1blN5bmMobmFtZSkKICBzaWdpbnRIYW5kbGVyKCkKICBza2lwV29yZEJhY2t3YXJkKHBvcykKICBza2lwV29yZEZvcndhcmQocG9zKQogIHRlcm1Jbml0KCkKICB0ZXJtUmVhZEhhbmRsZXIoKQogIHRyYW5zcG9zZUNoYXJzKCkKICB0cmFuc3Bvc2VXb3JkcygpCiAgdXBjYXNlV29yZCgpCiAgdXBkYXRlKCkKICB5YW5rKCkKICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgaXNUcmFpbGluZ1N1cnJvZ2F0ZShjKQogIGlzQmFsYW5jZWQoYSwgYikKICBwcmludENvbG9yVGV4dChzdHIsIHN0YXJ0LCBzdHlsZV9uYW1lcykKICBwcmludENzaShuLCBjb2RlKQAAAAAAAAAAWgYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					947,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17339,
								17357
							],
							[
								18465,
								18484
							],
							[
								18661,
								18674
							],
							[
								18845,
								18858
							],
							[
								18929,
								18954
							],
							[
								19783,
								19810
							],
							[
								20310,
								20337
							],
							[
								21278,
								21303
							],
							[
								21433,
								21446
							],
							[
								21909,
								21923
							],
							[
								22847,
								22862
							],
							[
								23714,
								23740
							],
							[
								26828,
								26843
							],
							[
								27849,
								27855
							],
							[
								27858,
								27877
							],
							[
								28941,
								28956
							],
							[
								29052,
								29070
							],
							[
								29418,
								29441
							],
							[
								29486,
								29508
							],
							[
								29552,
								29563
							],
							[
								29731,
								29741
							],
							[
								29809,
								29836
							],
							[
								30269,
								30279
							],
							[
								30369,
								30386
							],
							[
								31227,
								31240
							],
							[
								31421,
								31445
							],
							[
								31960,
								31977
							],
							[
								32230,
								32238
							],
							[
								32262,
								32286
							],
							[
								34611,
								34625
							],
							[
								34663,
								34686
							],
							[
								34751,
								34772
							],
							[
								34920,
								34945
							],
							[
								35653,
								35660
							],
							[
								35714,
								35727
							],
							[
								35794,
								35800
							],
							[
								35833,
								35848
							],
							[
								35916,
								35937
							],
							[
								36088,
								36108
							],
							[
								36279,
								36289
							],
							[
								36882,
								36899
							],
							[
								37071,
								37087
							],
							[
								37429,
								37445
							],
							[
								37916,
								37928
							],
							[
								38147,
								38155
							],
							[
								39772,
								39778
							],
							[
								39817,
								39836
							],
							[
								39928,
								39947
							],
							[
								40009,
								40027
							],
							[
								40119,
								40142
							],
							[
								40543,
								40574
							],
							[
								40731,
								40756
							],
							[
								40865,
								40913
							],
							[
								41201,
								41227
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					948,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
						"symkeys":
						[
							[
								2704,
								2708
							],
							[
								3045,
								3062
							],
							[
								5995,
								6002
							],
							[
								6071,
								6083
							],
							[
								6159,
								6166
							],
							[
								6173,
								6187
							],
							[
								6344,
								6364
							],
							[
								6402,
								6420
							],
							[
								6475,
								6493
							],
							[
								6585,
								6599
							],
							[
								6671,
								6688
							],
							[
								6723,
								6749
							],
							[
								7731,
								7755
							],
							[
								8044,
								8062
							],
							[
								8153,
								8163
							],
							[
								8649,
								8664
							],
							[
								8827,
								8852
							],
							[
								8879,
								8904
							],
							[
								8961,
								8985
							],
							[
								9090,
								9122
							],
							[
								9339,
								9370
							],
							[
								9498,
								9529
							],
							[
								9867,
								9892
							],
							[
								10607,
								10633
							],
							[
								11362,
								11392
							],
							[
								11954,
								11985
							],
							[
								13782,
								13794
							],
							[
								15530,
								15540
							],
							[
								15764,
								15774
							],
							[
								15939,
								15951
							],
							[
								15988,
								16006
							],
							[
								16539,
								16553
							],
							[
								16772,
								16790
							],
							[
								16869,
								16880
							],
							[
								16929,
								16944
							],
							[
								16957,
								16970
							],
							[
								17043,
								17053
							],
							[
								17173,
								17183
							],
							[
								17339,
								17357
							],
							[
								18465,
								18484
							],
							[
								18661,
								18674
							],
							[
								18845,
								18858
							],
							[
								18929,
								18954
							],
							[
								19783,
								19810
							],
							[
								20310,
								20337
							],
							[
								21278,
								21303
							],
							[
								21433,
								21446
							],
							[
								21909,
								21923
							],
							[
								22847,
								22862
							],
							[
								23714,
								23740
							],
							[
								26828,
								26843
							],
							[
								27849,
								27855
							],
							[
								27858,
								27877
							],
							[
								28941,
								28956
							],
							[
								29052,
								29070
							],
							[
								29418,
								29441
							],
							[
								29486,
								29508
							],
							[
								29552,
								29563
							],
							[
								29731,
								29741
							],
							[
								29809,
								29836
							],
							[
								30269,
								30279
							],
							[
								30369,
								30386
							],
							[
								31227,
								31240
							],
							[
								31421,
								31445
							],
							[
								31960,
								31977
							],
							[
								32230,
								32238
							],
							[
								32262,
								32286
							],
							[
								34611,
								34625
							],
							[
								34663,
								34686
							],
							[
								34751,
								34772
							],
							[
								34920,
								34945
							],
							[
								35653,
								35660
							],
							[
								35714,
								35727
							],
							[
								35794,
								35800
							],
							[
								35833,
								35848
							],
							[
								35916,
								35937
							],
							[
								36088,
								36108
							],
							[
								36279,
								36289
							],
							[
								36882,
								36899
							],
							[
								37071,
								37087
							],
							[
								37429,
								37445
							],
							[
								37916,
								37928
							],
							[
								38147,
								38155
							],
							[
								39772,
								39778
							],
							[
								39817,
								39836
							],
							[
								39928,
								39947
							],
							[
								40009,
								40027
							],
							[
								40119,
								40142
							],
							[
								40543,
								40574
							],
							[
								40731,
								40756
							],
							[
								40865,
								40913
							],
							[
								41201,
								41227
							]
						],
						"symlist":
						[
							"REPL",
							"constructor(name)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart()",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"printStatus(fn)",
							"show = arg =>",
							"fn = () =>",
							"fn = () =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"quotedInsert()",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"runSync(name)",
							" () =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaBgAAUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUpCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHByaW50U3RhdHVzKGZuKQogIGV2YWxBbmRQcmludChleHByKQogIGV4dHJhY3REaXJlY3RpdmUoYSkKICBmb3J3YXJkQ2hhcigpCiAgZm9yd2FyZFdvcmQoKQogIGdldENvbXBsZXRpb25zKGxpbmUsIHBvcykKICBzeW1jbXAoYSwgYikKICBnZXRDb250ZXh0T2JqZWN0KGxpbmUsIHBvcykKICBnZXRDb250ZXh0V29yZChsaW5lLCBwb3MpCiAgaGFuZGxlQnl0ZShjKQogIGhhbmRsZUNoYXIoYzEpCiAgaGFuZGxlQ21kKGV4cHIpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwobikKICBoaXN0b3J5QWRkKHN0cikKICBoaXN0b3J5U2VhcmNoKGRpcikKICBoaXN0b3J5U2VhcmNoQmFja3dhcmQoKQogIGhpc3RvcnlTZWFyY2hGb3J3YXJkKCkKICBpbnNlcnQoc3RyKQogIGtpbGxMaW5lKCkKICBraWxsUmVnaW9uKHN0YXJ0LCBlbmQsIGRpcikKICBraWxsV29yZCgpCiAgbW92ZUN1cnNvcihkZWx0YSkKICBuZXh0SGlzdG9yeSgpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJldmlvdXNIaXN0b3J5KCkKICBwcmludChhKQogIHByaW50UmVjKGEpCiAgcXVvdGVkSW5zZXJ0KCkKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuU3luYyhuYW1lKQogIHNpZ2ludEhhbmRsZXIoKQogIHNraXBXb3JkQmFja3dhcmQocG9zKQogIHNraXBXb3JkRm9yd2FyZChwb3MpCiAgdGVybUluaXQoKQogIHRlcm1SZWFkSGFuZGxlcigpCiAgdHJhbnNwb3NlQ2hhcnMoKQogIHRyYW5zcG9zZVdvcmRzKCkKICB1cGNhc2VXb3JkKCkKICB1cGRhdGUoKQogIHlhbmsoKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpAAAAAAAAAABaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/extendArray.js",
			"settings":
			{
				"buffer_size": 1313,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"paste",
					null,
					"AQAAAF0AAAAAAAAAlwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": ";:"
					},
					"AgAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgAAAAAAAABmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					2,
					"left_delete",
					null,
					"AgAAAGcAAAAAAAAAZwAAAAAAAAABAAAAOmYAAAAAAAAAZgAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAGYAAAAAAAAAZwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgAAAAAAAABmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " {value"
					},
					"BwAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABpAAAAAAAAAAAAAABpAAAAAAAAAGoAAAAAAAAAAAAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "},"
					},
					"AgAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " configurable"
					},
					"DQAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAACiAAAAAAAAAKMAAAAAAAAAAAAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAClAAAAAAAAAKYAAAAAAAAAAAAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAArQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAK0AAAAAAAAArgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQAAAAAAAACtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " true"
					},
					"BQAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALEAAAAAAAAAAAAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAADBQAAZXhwb3J0IGZ1bmN0aW9uIGV4dGVuZEFycmF5KHByb3RvID0gQXJyYXkucHJvdG90eXBlKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMocHJvdG8sIHsKICAgIGNvbnRhaW5zOiB7dmFsdWUoaXRlbSkgewogICAgcmV0dXJuIHRoaXMuaW5kZXhPZihpdGVtKSAhPSAtMTsKICB9LCBjb25maWd1cmFibGU6IHRydWUgfSxsYXN0OiB7CiAgICAgIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpc1t0aGlzLmxlbmd0aCAtIDFdOwogICAgICB9LAogICAgICBjb25maWd1cmFibGU6IHRydWUKICAgIH0sCiAgICBhdDogewogICAgICB2YWx1ZShpbmRleCkgewogICAgICAgIGNvbnN0IHsgbGVuZ3RoIH0gPSB0aGlzOwogICAgICAgIHJldHVybiB0aGlzWygoaW5kZXggJSBsZW5ndGgpICsgbGVuZ3RoKSAlIGxlbmd0aF07CiAgICAgIH0sCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZQogICAgfSwKICAgIGNsZWFyOiB7CiAgICAgIHZhbHVlKCkgewogICAgICAgIHRoaXMuc3BsaWNlKDAsIHRoaXMubGVuZ3RoKTsKICAgICAgfSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9LAogICAgZmluZExhc3RJbmRleDogewogICAgICB2YWx1ZShwcmVkaWNhdGUpIHsKICAgICAgICBmb3IobGV0IGkgPSB0aGlzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7CiAgICAgICAgICBjb25zdCB4ID0gdGhpc1tpXTsKICAgICAgICAgIGlmKHByZWRpY2F0ZSh4LCBpLCB0aGlzKSkgcmV0dXJuIGk7CiAgICAgICAgfQogICAgICAgIHJldHVybiAtMTsKICAgICAgfSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9LAogICAgZmluZExhc3Q6IHsKICAgICAgdmFsdWUocHJlZGljYXRlKSB7CiAgICAgICAgbGV0IGk7CiAgICAgICAgaWYoKGkgPSB0aGlzLmZpbmRMYXN0SW5kZXgocHJlZGljYXRlKSkgPT0gLTEpIHJldHVybiBudWxsOwogICAgICAgIHJldHVybiB0aGlzW2ldOwogICAgICB9LAogICAgICBjb25maWd1cmFibGU6IHRydWUKICAgIH0sCiAgICB1bmlxdWU6IHsKICAgICAgdmFsdWUoKSB7CiAgICAgICAgcmV0dXJuIFsuLi5uZXcgU2V0KHRoaXMpXTsKICAgICAgfSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9LAogICAgcHVzaFVuaXF1ZTogewogICAgICB2YWx1ZSguLi5hcmdzKSB7CiAgICAgICAgZm9yKGxldCBhcmcgb2YgYXJncykgaWYodGhpcy5pbmRleE9mKGFyZykgPT09IC0xKSB0aGlzLnB1c2goYXJnKTsKICAgICAgfSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9CiAgfSk7Cn0KCmV4cG9ydCBkZWZhdWx0IGV4dGVuZEFycmF5OwoAAAAAAAAAACEFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswAAAAAAAACzAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "test-repl.js",
			"settings":
			{
				"buffer_size": 3412,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AgAAAFUMAAAAAAAA/gwAAAAAAAAAAAAA/gwAAAAAAAD+DAAAAAAAABsAAABVdGlsLmNhbGxNYWluKG1haW4sIHRydWUpOwo",
					"AQAAAAAAAAABAAAAcAwAAAAAAABVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAAK8AAAAAAAAArwAAAAAAAAAiAAAAaW1wb3J0IFV0aWwgZnJvbSAnLi9saWIvdXRpbC5qcyc7Cg",
					"AQAAAAAAAAABAAAArwAAAAAAAADRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "fs"
					},
					"AwAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAABzAAAAAAAAABMAAAAuL2xpYi9maWxlc3lzdGVtLmpzcwAAAAAAAAB0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "ee"
					},
					"AgAAAFkAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAABbAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					14,
					"left_delete",
					null,
					"DgAAAFoAAAAAAAAAWgAAAAAAAAABAAAAZVkAAAAAAAAAWQAAAAAAAAABAAAAZVgAAAAAAAAAWAAAAAAAAAABAAAAalcAAAAAAAAAVwAAAAAAAAABAAAALlYAAAAAAAAAVgAAAAAAAAABAAAAcFUAAAAAAAAAVQAAAAAAAAABAAAAZVQAAAAAAAAAVAAAAAAAAAABAAAAZVMAAAAAAAAAUwAAAAAAAAABAAAAZFIAAAAAAAAAUgAAAAAAAAABAAAAL1EAAAAAAAAAUQAAAAAAAAABAAAAYlAAAAAAAAAAUAAAAAAAAAABAAAAaU8AAAAAAAAATwAAAAAAAAABAAAAbE4AAAAAAAAATgAAAAAAAAABAAAAL00AAAAAAAAATQAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAWwAAAAAAAABbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "deep"
					},
					"BAAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAUQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"right_delete",
					null,
					"AQAAAFEAAAAAAAAAUQAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					6,
					"left_delete",
					null,
					"BgAAAIoAAAAAAAAAigAAAAAAAAABAAAAL4kAAAAAAAAAiQAAAAAAAAABAAAAYogAAAAAAAAAiAAAAAAAAAABAAAAaYcAAAAAAAAAhwAAAAAAAAABAAAAbIYAAAAAAAAAhgAAAAAAAAABAAAAL4UAAAAAAAAAhQAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					4,
					"right_delete",
					null,
					"BAAAAIkAAAAAAAAAiQAAAAAAAAABAAAALokAAAAAAAAAiQAAAAAAAAABAAAAaokAAAAAAAAAiQAAAAAAAAABAAAAc4kAAAAAAAAAiQAAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAIkAAAAAAAAAigAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "inspect'0"
					},
					"CQAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAADlAAAAAAAAAOYAAAAAAAAAAAAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOkAAAAAAAAAAAAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAADrAAAAAAAAAOwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wAAAAAAAADjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAOsAAAAAAAAA6wAAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wAAAAAAAADrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAAO0AAAAAAAAA7QAAAAAAAAAZAAAALi9saWIvb2JqZWN0SW5zcGVjdC5qcyc7Cg",
					"AQAAAAAAAAABAAAA7QAAAAAAAAAGAQAAAAAAAAAAAAAAAAAA"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "öob"
					},
					"AwAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					3,
					"left_delete",
					null,
					"AwAAAMYAAAAAAAAAxgAAAAAAAAABAAAAYsUAAAAAAAAAxQAAAAAAAAABAAAAb8QAAAAAAAAAxAAAAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAAxwAAAAAAAADHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "öob"
					},
					"AwAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					3,
					"left_delete",
					null,
					"AwAAAMYAAAAAAAAAxgAAAAAAAAABAAAAYsUAAAAAAAAAxQAAAAAAAAABAAAAb8QAAAAAAAAAxAAAAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAAxwAAAAAAAADHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "lib/"
					},
					"BAAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAMcAAAAAAAAAyAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QAAAAAAAADxAAAAAAAAAAAAAAAAAAAA"
				],
				[
					54,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACwDAAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CiBpbXBvcnQgUkVQTCBmcm9tICcuL2xpYi9yZXBsLmpzJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7Ci8vaW1wb3J0ICogYXMgVGVybWluYWwgZnJvbSAnLi90ZXJtaW5hbC5qcyc7Cgpjb25zdCBiYXNlID0gcGF0aC5iYXNlbmFtZShVdGlsLmdldEFyZ3YoKVswXSwgL1wuW2Etel0qJC8pOwpjb25zdCBjbWRoaXN0ID0gYC5oaXN0b3J5LSR7YmFzZX1gOwoKVXRpbC5kZWZpbmUoQXJyYXkucHJvdG90eXBlLCB7CiAgY29udGFpbnMoaXRlbSkgewogICAgcmV0dXJuIHRoaXMuaW5kZXhPZihpdGVtKSAhPSAtMTsKICB9Cn0pOwoKZnVuY3Rpb24gTG9hZEhpc3RvcnkoZmlsZW5hbWUpIHsKICBsZXQgY29udGVudHMgPSBzdGQubG9hZEZpbGUoZmlsZW5hbWUpOwogIGxldCBkYXRhOwoKICBjb25zdCBwYXJzZSA9ICgpID0+IHsKICAgIHRyeSB7CiAgICAgIGRhdGEgPSBKU09OLnBhcnNlKGNvbnRlbnRzKTsKICAgIH0gY2F0Y2goZSkge30KICAgIGlmKGRhdGEpIHJldHVybiBkYXRhOwogICAgdHJ5IHsKICAgICAgZGF0YSA9IGNvbnRlbnRzLnNwbGl0KC9cbi9nKTsKICAgIH0gY2F0Y2goZSkge30KICAgIGlmKGRhdGEpIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiAocGFyc2UoKSA/PyBbXSkKICAgIC5maWx0ZXIoZW50cnkgPT4gKGVudHJ5ICsgJycpLnRyaW0oKSAhPSAnJykKICAgIC5tYXAoZW50cnkgPT4gZW50cnkucmVwbGFjZSgvXFxuL2csICdcbicpKTsKfQoKZnVuY3Rpb24gUmVhZEpTT04oZmlsZW5hbWUpIHsKICBsZXQgZGF0YSA9IHN0ZC5sb2FkRmlsZShmaWxlbmFtZSk7CgogIGlmKGRhdGEpIGNvbnNvbGUubG9nKGBSZWFkSlNPTignJHtmaWxlbmFtZX0nKSAke2RhdGEubGVuZ3RofSBieXRlcyByZWFkYCk7CiAgcmV0dXJuIGRhdGEgPyBKU09OLnBhcnNlKGRhdGEpIDogbnVsbDsKfQoKYXN5bmMgZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoewogICAgaW5zcGVjdE9wdGlvbnM6IHsKICAgICAgY29sb3JzOiB0cnVlLAogICAgICBkZXB0aDogSW5maW5pdHksCiAgICAgIG1heEFycmF5TGVuZ3RoOiAxMDAsCiAgICAgIGJyZWFrTGVuZ3RoOiAxMDAwMCwKICAgICAgY29tcGFjdDogMiAvKiwKICAgICAgY3VzdG9tSW5zcGVjdDogdHJ1ZSovCiAgICB9CiAgfSk7CiAgY29uc29sZS5sb2coJ2NvbnNvbGUub3B0aW9ucycsIGNvbnNvbGUub3B0aW9ucyk7CiAgbGV0IHBhcmFtcyA9IFV0aWwuZ2V0T3B0KAogICAgewogICAgICBsaXN0ZW46IFtmYWxzZSwgbnVsbCwgJ2wnXSwKICAgICAgZGVidWc6IFtmYWxzZSwgbnVsbCwgJ3gnXSwKICAgICAgYWRkcmVzczogW3RydWUsIG51bGwsICdjJ10sCiAgICAgIHBvcnQ6IFt0cnVlLCBudWxsLCAncCddLAogICAgICAnQCc6ICdhZGRyZXNzLHBvcnQnCiAgICB9LAogICAgYXJncwogICk7CiAgY29uc3QgeyBsaXN0ZW4gfSA9IHBhcmFtczsKCiAgY29uc3QgW2FkZHJlc3MgPSAnMTI3LjAuMC4xJywgcG9ydCA9IDkwMDBdID0gYXJnczsKCiAgbGV0IG5hbWUgPSBVdGlsLmdldEFyZ3MoKVswXTsKICBuYW1lID0gbmFtZQogICAgLnJlcGxhY2UoLy4qXC8vLCAnJykKICAgIC5yZXBsYWNlKC8tL2csICcgJykKICAgIC5yZXBsYWNlKC9cLlteXC8uXSokLywgJycpOwogIGxldCByZXBsID0gbmV3IFJFUEwobmFtZSk7CiAgY29uc29sZS5sb2coJ3JlcGwnLCByZXBsKTsKICByZXBsLmhlbHAgPSAoKSA9PiB7fTsKICAvL3JlcGwuZGVidWcgPSAoLi4uYXJncykgPT4gY29uc29sZS5kZWJ1ZygiUkVQTCIsIC4uLmFyZ3MpOwogIGxldCB7IGxvZyB9ID0gY29uc29sZTsKICByZXBsLnNob3cgPSBhcmcgPT4gc3RkLnB1dHModHlwZW9mIGFyZyA9PSAnc3RyaW5nJyA/IGFyZyA6IGluc3BlY3QoYXJnLCB7IGNvbG9yczogdHJ1ZSB9KSk7CgogIHJlcGwuY2xlYW51cCA9ICgpID0+IHsKICAgIFRlcm1pbmFsLm1vdXNldHJhY2tpbmdEaXNhYmxlKCk7CiAgICBsZXQgaGlzdCA9IHJlcGwuaGlzdG9yeV9nZXQoKS5maWx0ZXIoKGl0ZW0sIGksIGEpID0+IGEubGFzdEluZGV4T2YoaXRlbSkgPT0gaSk7CiAgICBmcy53cml0ZUZpbGVTeW5jKAogICAgICBjbWRoaXN0LAogICAgICBoaXN0CiAgICAgICAgLmZpbHRlcihlbnRyeSA9PiAoZW50cnkgKyAnJykudHJpbSgpICE9ICcnKQogICAgICAgIC5tYXAoZW50cnkgPT4gZW50cnkucmVwbGFjZSgvXG4vZywgJ1xcbicpICsgJ1xuJykKICAgICAgICAuam9pbignJykKICAgICk7CiAgICBjb25zb2xlLmxvZyhgRVhJVCAod3JvdGUgJHtoaXN0Lmxlbmd0aH0gaGlzdG9yeSBlbnRyaWVzKWApOwogICAgc3RkLmV4aXQoMCk7CiAgfTsKICBsZXQgZGVidWdMb2cgPSBmcy5mb3BlbignZGVidWcubG9nJywgJ2EnKTsKICByZXBsLmRlYnVnTG9nID0gZGVidWdMb2c7CiAgY29uc29sZS5sb2cgPSByZXBsLndyYXBQcmludEZ1bmN0aW9uKGxvZywgY29uc29sZSk7CgogIC8qb3MudHR5U2V0UmF3KDAsIHRydWUpOwogIG9zLnNldFJlYWRIYW5kbGVyKDAsICgpID0+IHJlcGwudGVybV9yZWFkX2hhbmRsZXIoKSk7CiovCiAgY29uc29sZS5sb2coJ3JlcGwucnVuKCknLCByZXBsLnJ1blN5bmMoKSk7CgovKiAgbGV0IGNsaWVudCA9IG5ldyBycGMuU29ja2V0KCk7CiAgY2xpZW50LmxvZyA9IHJlcGwud3JhcFByaW50RnVuY3Rpb24obG9nLCBjb25zb2xlKTsKCiAgaW1wb3J0KCdvcycpLnRoZW4ob3MgPT4KICAgIGltcG9ydCgnbmV0JykudGhlbigoeyBjbGllbnQgfSkgPT4KICAgICAgY2xpZW50LmNvbm5lY3QoKHVybCwgY2FsbGJhY2tzKSA9PiBjbGllbnQoeyAuLi51cmwsIC4uLmNhbGxiYWNrcyB9KSwgb3MpCiAgICApCiAgKTsKICBjb25zb2xlLmxvZygnY2xpZW50JywgY2xpZW50KTsqLwoKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsgcmVwbCwgICBVdGlsIH0pOwp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBzdGQuZXJyLnB1dHMoYEZBSUw6ICR7ZXJyb3IubWVzc2FnZX1cbiR7ZXJyb3Iuc3RhY2t9YCk7CiAgc3RkLmV4aXQoMSk7Cn0gZmluYWxseSB7CiAgY29uc29sZS5sb2coJ1NVQ0NFU1MnKTsKfQoAAAAAAAAAAK4MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wAAAAAAAADzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"paste",
					null,
					"AgAAAPEAAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAVAQAAAAAAAC0AAAAvL2ltcG9ydCAqIGFzIFRlcm1pbmFsIGZyb20gJy4vdGVybWluYWwuanMnOwo",
					"AQAAAAAAAAABAAAAHgEAAAAAAADxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"paste",
					null,
					"AgAAAHIBAAAAAAAAkAEAAAAAAAAAAAAAkAEAAAAAAACQAQAAAAAAAGIAAAAKT2JqZWN0LmFzc2lnbihBcnJheS5wcm90b3R5cGUsIHsKICBjb250YWlucyhpdGVtKSB7CiAgICByZXR1cm4gdGhpcy5pbmRleE9mKGl0ZW0pICE9IC0xOwogIH0KfSk7Cg",
					"AQAAAAAAAAABAAAAcgEAAAAAAADUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAI8BAAAAAAAAkAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwEAAAAAAACPAQAAAAAAAP///////+9/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHIBAAAAAAAAcwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgEAAAAAAAByAQAAAAAAAAAAAAAAAAAA"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABgHAAAAAAAAGQcAAAAAAAAAAAAAGQcAAAAAAAAZBwAAAAAAAD4AAAAgIC8vcmVwbC5kZWJ1ZyA9ICguLi5hcmdzKSA9PiBjb25zb2xlLmRlYnVnKCJSRVBMIiwgLi4uYXJncyk7Cg",
					"AQAAAAAAAAABAAAAGAcAAAAAAABWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOsEAAAAAAAA7AQAAAAAAAAAAAAA7AQAAAAAAADsBAAAAAAAADMAAAAgIGNvbnNvbGUubG9nKCdjb25zb2xlLm9wdGlvbnMnLCBjb25zb2xlLm9wdGlvbnMpOwo",
					"AQAAAAAAAAABAAAA6wQAAAAAAAAeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOwEAAAAAAAA7QQAAAAAAAAAAAAA7QQAAAAAAADtBAAAAAAAAKcBAAAgIGxldCBwYXJhbXMgPSBVdGlsLmdldE9wdCgKICAgIHsKICAgICAgbGlzdGVuOiBbZmFsc2UsIG51bGwsICdsJ10sCiAgICAgIGRlYnVnOiBbZmFsc2UsIG51bGwsICd4J10sCiAgICAgIGFkZHJlc3M6IFt0cnVlLCBudWxsLCAnYyddLAogICAgICBwb3J0OiBbdHJ1ZSwgbnVsbCwgJ3AnXSwKICAgICAgJ0AnOiAnYWRkcmVzcyxwb3J0JwogICAgfSwKICAgIGFyZ3MKICApOwogIGNvbnN0IHsgbGlzdGVuIH0gPSBwYXJhbXM7CgogIGNvbnN0IFthZGRyZXNzID0gJzEyNy4wLjAuMScsIHBvcnQgPSA5MDAwXSA9IGFyZ3M7CgogIGxldCBuYW1lID0gVXRpbC5nZXRBcmdzKClbMF07CiAgbmFtZSA9IG5hbWUKICAgIC5yZXBsYWNlKC8uKlwvLywgJycpCiAgICAucmVwbGFjZSgvLS9nLCAnICcpCiAgICAucmVwbGFjZSgvXC5bXlwvLl0qJC8sICcnKTs",
					"AQAAAAAAAAABAAAA7AQAAAAAAACTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKEHAAAAAAAAogcAAAAAAAAAAAAAogcAAAAAAACjBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQcAAAAAAAChBwAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPQDAAAAAAAA9QMAAAAAAAAAAAAA9QMAAAAAAAD1AwAAAAAAAAUAAABhc3luYw",
					"AQAAAAAAAAABAAAA9AMAAAAAAAD5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "scriptArgs"
					},
					"CwAAAAAFAAAAAAAAAQUAAAAAAAAAAAAAAQUAAAAAAAABBQAAAAAAAAQAAABuYW1lAQUAAAAAAAACBQAAAAAAAAAAAAACBQAAAAAAAAMFAAAAAAAAAAAAAAMFAAAAAAAABAUAAAAAAAAAAAAABAUAAAAAAAAFBQAAAAAAAAAAAAAFBQAAAAAAAAYFAAAAAAAAAAAAAAYFAAAAAAAABwUAAAAAAAAAAAAABwUAAAAAAAAIBQAAAAAAAAAAAAAIBQAAAAAAAAkFAAAAAAAAAAAAAAkFAAAAAAAACgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAUAAAAAAAAABQAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAoFAAAAAAAADAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgUAAAAAAAAKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAAsFAAAAAAAADAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwUAAAAAAAALBQAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"cut",
					null,
					"AQAAAAAFAAAAAAAAAAUAAAAAAAANAAAAc2NyaXB0QXJnc1swXQ",
					"AQAAAAAAAAABAAAAAAUAAAAAAAANBQAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAOkEAAAAAAAA6gQAAAAAAAAAAAAA6gQAAAAAAADrBAAAAAAAAAAAAADrBAAAAAAAAOwEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QQAAAAAAADpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " name"
					},
					"BQAAAOwEAAAAAAAA7QQAAAAAAAAAAAAA7QQAAAAAAADuBAAAAAAAAAAAAADuBAAAAAAAAO8EAAAAAAAAAAAAAO8EAAAAAAAA8AQAAAAAAAAAAAAA8AQAAAAAAADxBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AQAAAAAAADsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " =?"
					},
					"AwAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA8gQAAAAAAADzBAAAAAAAAAAAAADzBAAAAAAAAPQEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QQAAAAAAADxBAAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQEAAAAAAAA9QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AQAAAAAAAD0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					2,
					"left_delete",
					null,
					"AgAAAPQEAAAAAAAA9AQAAAAAAAABAAAAIPMEAAAAAAAA8wQAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAA9QQAAAAAAAD1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": " path.basename"
					},
					"DgAAAPMEAAAAAAAA9AQAAAAAAAAAAAAA9AQAAAAAAAD1BAAAAAAAAAAAAAD1BAAAAAAAAPYEAAAAAAAAAAAAAPYEAAAAAAAA9wQAAAAAAAAAAAAA9wQAAAAAAAD4BAAAAAAAAAAAAAD4BAAAAAAAAPkEAAAAAAAAAAAAAPkEAAAAAAAA+gQAAAAAAAAAAAAA+gQAAAAAAAD7BAAAAAAAAAAAAAD7BAAAAAAAAPwEAAAAAAAAAAAAAPwEAAAAAAAA/QQAAAAAAAAAAAAA/QQAAAAAAAD+BAAAAAAAAAAAAAD+BAAAAAAAAP8EAAAAAAAAAAAAAP8EAAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAABBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wQAAAAAAADzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAEFAAAAAAAAAwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQUAAAAAAAABBQAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"paste",
					null,
					"AQAAAAIFAAAAAAAADwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgUAAAAAAAACBQAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA8FAAAAAAAAEAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwUAAAAAAAAPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABAFAAAAAAAAEQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAUAAAAAAAAQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAABEFAAAAAAAAEwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQUAAAAAAAARBQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": ".js"
					},
					"AwAAABIFAAAAAAAAEwUAAAAAAAAAAAAAEwUAAAAAAAAUBQAAAAAAAAAAAAAUBQAAAAAAABUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgUAAAAAAAASBQAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABcFAAAAAAAAGAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwUAAAAAAAAXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BAAAAC8FAAAAAAAAMAUAAAAAAAAAAAAAMAUAAAAAAAAxBQAAAAAAAAAAAAAxBQAAAAAAADIFAAAAAAAAAAAAADIFAAAAAAAAMwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwUAAAAAAAAvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BAAAAIQIAAAAAAAAhQgAAAAAAAAAAAAAhQgAAAAAAACGCAAAAAAAAAAAAACGCAAAAAAAAIcIAAAAAAAAAAAAAIcIAAAAAAAAiAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAgAAAAAAACECAAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					5,
					"left_delete",
					null,
					"BQAAAMsJAAAAAAAAywkAAAAAAAAEAAAAVXRpbMoJAAAAAAAAygkAAAAAAAABAAAAIMkJAAAAAAAAyQkAAAAAAAABAAAAIMgJAAAAAAAAyAkAAAAAAAABAAAAIMcJAAAAAAAAxwkAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAywkAAAAAAADPCQAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"paste",
					null,
					"AQAAAPMDAAAAAAAAlwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wMAAAAAAADzAwAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BQAAAB0EAAAAAAAAHgQAAAAAAAAAAAAAHgQAAAAAAAAeBAAAAAAAAAMAAAByZXQeBAAAAAAAAB8EAAAAAAAAAAAAAB8EAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAhBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQQAAAAAAAAgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAJIEAAAAAAAAkgQAAAAAAAADAAAAcmV0kgQAAAAAAACXBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgQAAAAAAACVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "ðata"
					},
					"BQAAAJMEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACUBAAAAAAAAAMAAAByZXSUBAAAAAAAAJUEAAAAAAAAAAAAAJUEAAAAAAAAlgQAAAAAAAAAAAAAlgQAAAAAAACXBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwQAAAAAAACWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					4,
					"left_delete",
					null,
					"BAAAAJYEAAAAAAAAlgQAAAAAAAABAAAAYZUEAAAAAAAAlQQAAAAAAAABAAAAdJQEAAAAAAAAlAQAAAAAAAABAAAAYZMEAAAAAAAAkwQAAAAAAAACAAAAw7A",
					"AQAAAAAAAAABAAAAlwQAAAAAAACXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": "data,"
					},
					"BQAAAJMEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACVBAAAAAAAAAAAAACVBAAAAAAAAJYEAAAAAAAAAAAAAJYEAAAAAAAAlwQAAAAAAAAAAAAAlwQAAAAAAACYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwQAAAAAAACTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "get<"
					},
					"BAAAAJgEAAAAAAAAmQQAAAAAAAAAAAAAmQQAAAAAAACaBAAAAAAAAAAAAACaBAAAAAAAAJsEAAAAAAAAAAAAAJsEAAAAAAAAnAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAQAAAAAAACYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"left_delete",
					null,
					"AQAAAJsEAAAAAAAAmwQAAAAAAAABAAAAPA",
					"AQAAAAAAAAABAAAAnAQAAAAAAACcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": "Node"
					},
					"BAAAAJsEAAAAAAAAnAQAAAAAAAAAAAAAnAQAAAAAAACdBAAAAAAAAAAAAACdBAAAAAAAAJ4EAAAAAAAAAAAAAJ4EAAAAAAAAnwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwQAAAAAAACbBAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ8EAAAAAAAAoQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwQAAAAAAACfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": "node"
					},
					"BAAAAKAEAAAAAAAAoQQAAAAAAAAAAAAAoQQAAAAAAACiBAAAAAAAAAAAAACiBAAAAAAAAKMEAAAAAAAAAAAAAKMEAAAAAAAApAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAQAAAAAAACgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKUEAAAAAAAApgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQQAAAAAAAClBAAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKYEAAAAAAAAqAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgQAAAAAAACmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAKcEAAAAAAAAqAQAAAAAAAAAAAAAqAQAAAAAAACqBAAAAAAAAAAAAACqBAAAAAAAAKsEAAAAAAAAAAAAAKsEAAAAAAAArQQAAAAAAAAAAAAAqAQAAAAAAACoBAAAAAAAAAIAAAAgIKgEAAAAAAAArAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwQAAAAAAACnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAKwEAAAAAAAArQQAAAAAAAAAAAAArQQAAAAAAACuBAAAAAAAAAAAAACuBAAAAAAAAK8EAAAAAAAAAAAAAK8EAAAAAAAAsAQAAAAAAAAAAAAAsAQAAAAAAACxBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAQAAAAAAACsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALEEAAAAAAAAswQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQQAAAAAAACxBAAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "str"
					},
					"AwAAALIEAAAAAAAAswQAAAAAAAAAAAAAswQAAAAAAAC0BAAAAAAAAAAAAAC0BAAAAAAAALUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgQAAAAAAACyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"left_delete",
					null,
					"AQAAALQEAAAAAAAAtAQAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAtQQAAAAAAAC1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": "art,"
					},
					"BAAAALQEAAAAAAAAtQQAAAAAAAAAAAAAtQQAAAAAAAC2BAAAAAAAAAAAAAC2BAAAAAAAALcEAAAAAAAAAAAAALcEAAAAAAAAuAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAQAAAAAAAC0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "end"
					},
					"AwAAALgEAAAAAAAAuQQAAAAAAAAAAAAAuQQAAAAAAAC6BAAAAAAAAAAAAAC6BAAAAAAAALsEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAQAAAAAAAC4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "=node;"
					},
					"BgAAALwEAAAAAAAAvQQAAAAAAAAAAAAAvQQAAAAAAAC+BAAAAAAAAAAAAAC+BAAAAAAAAL8EAAAAAAAAAAAAAL8EAAAAAAAAwAQAAAAAAAAAAAAAwAQAAAAAAADBBAAAAAAAAAAAAADBBAAAAAAAAMIEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAQAAAAAAAC8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAMIEAAAAAAAAwwQAAAAAAAAAAAAAwwQAAAAAAADHBAAAAAAAAAAAAADHBAAAAAAAAMgEAAAAAAAAAAAAAMgEAAAAAAAAyQQAAAAAAAAAAAAAyQQAAAAAAADKBAAAAAAAAAAAAADKBAAAAAAAAMsEAAAAAAAAAAAAAMsEAAAAAAAAzAQAAAAAAAAAAAAAzAQAAAAAAADNBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgQAAAAAAADCBAAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": " this.data.slice"
					},
					"EAAAAM0EAAAAAAAAzgQAAAAAAAAAAAAAzgQAAAAAAADPBAAAAAAAAAAAAADPBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA0QQAAAAAAAAAAAAA0QQAAAAAAADSBAAAAAAAAAAAAADSBAAAAAAAANMEAAAAAAAAAAAAANMEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADVBAAAAAAAAAAAAADVBAAAAAAAANYEAAAAAAAAAAAAANYEAAAAAAAA1wQAAAAAAAAAAAAA1wQAAAAAAADYBAAAAAAAAAAAAADYBAAAAAAAANkEAAAAAAAAAAAAANkEAAAAAAAA2gQAAAAAAAAAAAAA2gQAAAAAAADbBAAAAAAAAAAAAADbBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA3QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQQAAAAAAADNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN0EAAAAAAAA3wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QQAAAAAAADdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "start,end9;"
					},
					"CwAAAN4EAAAAAAAA3wQAAAAAAAAAAAAA3wQAAAAAAADgBAAAAAAAAAAAAADgBAAAAAAAAOEEAAAAAAAAAAAAAOEEAAAAAAAA4gQAAAAAAAAAAAAA4gQAAAAAAADjBAAAAAAAAAAAAADjBAAAAAAAAOQEAAAAAAAAAAAAAOQEAAAAAAAA5QQAAAAAAAAAAAAA5QQAAAAAAADmBAAAAAAAAAAAAADmBAAAAAAAAOcEAAAAAAAAAAAAAOcEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADpBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gQAAAAAAADeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					2,
					"left_delete",
					null,
					"AgAAAOgEAAAAAAAA6AQAAAAAAAABAAAAO+cEAAAAAAAA5wQAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAA6QQAAAAAAADpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOgEAAAAAAAA6QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AQAAAAAAADoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": ",m"
					},
					"AgAAAO0EAAAAAAAA7gQAAAAAAAAAAAAA7gQAAAAAAADvBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QQAAAAAAADtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					2,
					"left_delete",
					null,
					"AgAAAO4EAAAAAAAA7gQAAAAAAAABAAAAbe0EAAAAAAAA7QQAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA7wQAAAAAAADvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": ",toString8"
					},
					"CgAAAO0EAAAAAAAA7gQAAAAAAAAAAAAA7gQAAAAAAADvBAAAAAAAAAAAAADvBAAAAAAAAPAEAAAAAAAAAAAAAPAEAAAAAAAA8QQAAAAAAAAAAAAA8QQAAAAAAADyBAAAAAAAAAAAAADyBAAAAAAAAPMEAAAAAAAAAAAAAPMEAAAAAAAA9AQAAAAAAAAAAAAA9AQAAAAAAAD1BAAAAAAAAAAAAAD1BAAAAAAAAPYEAAAAAAAAAAAAAPYEAAAAAAAA9wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QQAAAAAAADtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"left_delete",
					null,
					"AQAAAPYEAAAAAAAA9gQAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAA9wQAAAAAAAD3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPYEAAAAAAAA+AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gQAAAAAAAD2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPgEAAAAAAAA+QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPkEAAAAAAAA+wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QQAAAAAAAD5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAPoEAAAAAAAA+wQAAAAAAAAAAAAA+wQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAP0EAAAAAAAAAAAAAP0EAAAAAAAA/gQAAAAAAAAAAAAA/gQAAAAAAAD/BAAAAAAAAAAAAAD/BAAAAAAAAAAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gQAAAAAAAD6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": " this.data,"
					},
					"CwAAAAAFAAAAAAAAAQUAAAAAAAAAAAAAAQUAAAAAAAACBQAAAAAAAAAAAAACBQAAAAAAAAMFAAAAAAAAAAAAAAMFAAAAAAAABAUAAAAAAAAAAAAABAUAAAAAAAAFBQAAAAAAAAAAAAAFBQAAAAAAAAYFAAAAAAAAAAAAAAYFAAAAAAAABwUAAAAAAAAAAAAABwUAAAAAAAAIBQAAAAAAAAAAAAAIBQAAAAAAAAkFAAAAAAAAAAAAAAkFAAAAAAAACgUAAAAAAAAAAAAACgUAAAAAAAALBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsFAAAAAAAADAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwUAAAAAAAALBQAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					2,
					"left_delete",
					null,
					"AgAAAAsFAAAAAAAACwUAAAAAAAABAAAAIAoFAAAAAAAACgUAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAADAUAAAAAAAAMBQAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAoFAAAAAAAACwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgUAAAAAAAAKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsFAAAAAAAADAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwUAAAAAAAALBQAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACVCwAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CiBpbXBvcnQgUkVQTCBmcm9tICcuL2xpYi9yZXBsLmpzJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7CmltcG9ydCB7IGV4dGVuZEFycmF5IH0gZnJvbSAndXRpbCc7Cgpjb25zdCBiYXNlID0gcGF0aC5iYXNlbmFtZShzY3JpcHRBcmdzWzBdLCAvXC5bYS16XSokLyk7CmNvbnN0IGNtZGhpc3QgPSBgLmhpc3RvcnktJHtiYXNlfWA7CgpleHRlbmRBcnJheShBcnJheS5wcm90b3R5cGUpOwoKCmZ1bmN0aW9uIExvYWRIaXN0b3J5KGZpbGVuYW1lKSB7CiAgbGV0IGNvbnRlbnRzID0gc3RkLmxvYWRGaWxlKGZpbGVuYW1lKTsKICBsZXQgZGF0YTsKCiAgY29uc3QgcGFyc2UgPSAoKSA9PiB7CiAgICB0cnkgewogICAgICBkYXRhID0gSlNPTi5wYXJzZShjb250ZW50cyk7CiAgICB9IGNhdGNoKGUpIHt9CiAgICBpZihkYXRhKSByZXR1cm4gZGF0YTsKICAgIHRyeSB7CiAgICAgIGRhdGEgPSBjb250ZW50cy5zcGxpdCgvXG4vZyk7CiAgICB9IGNhdGNoKGUpIHt9CiAgICBpZihkYXRhKSByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gKHBhcnNlKCkgPz8gW10pCiAgICAuZmlsdGVyKGVudHJ5ID0+IChlbnRyeSArICcnKS50cmltKCkgIT0gJycpCiAgICAubWFwKGVudHJ5ID0+IGVudHJ5LnJlcGxhY2UoL1xcbi9nLCAnXG4nKSk7Cn0KCmZ1bmN0aW9uIFJlYWRKU09OKGZpbGVuYW1lKSB7CiAgbGV0IGRhdGEgPSBzdGQubG9hZEZpbGUoZmlsZW5hbWUpOwoKICBpZihkYXRhKSBjb25zb2xlLmxvZyhgUmVhZEpTT04oJyR7ZmlsZW5hbWV9JykgJHtkYXRhLmxlbmd0aH0gYnl0ZXMgcmVhZGApOwogIHJldHVybiBkYXRhID8gSlNPTi5wYXJzZShkYXRhKSA6IG51bGw7Cn0KCgpmdW5jdGlvbiBSZWFkRmlsZShuYW1lLCBiaW5hcnkpIHsKICBsZXQgZGF0YSA9IGZzLnJlYWRGaWxlU3luYyhuYW1lLCBiaW5hcnkgPyBudWxsIDogJ3V0Zi04Jyk7CgogIGNvbnNvbGUubG9nKGBSZWFkICR7bmFtZX06ICR7cmV0Lmxlbmd0aH0gYnl0ZXNgKTsKICByZXR1cm4ge2RhdGEsZ2V0Tm9kZShub2RlKSB7CiAgICBjb25zdHtzdGFydCxlbmR9PW5vZGU7CiAgICByZXR1cm4gdGhpcy5kYXRhLnNsaWNlKHN0YXJ0LGVuZCk7CiAgfSx0b1N0cmluZygpIHtyZXR1cm4gdGhpcy5kYXRhOyB9fTsKfQogIGZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgZGVwdGg6IEluZmluaXR5LAogICAgICBtYXhBcnJheUxlbmd0aDogMTAwLAogICAgICBicmVha0xlbmd0aDogMTAwMDAsCiAgICAgIGNvbXBhY3Q6IDIgLyosCiAgICAgIGN1c3RvbUluc3BlY3Q6IHRydWUqLwogICAgfQogIH0pOwogIGxldCBuYW1lID0gcGF0aC5iYXNlbmFtZShzY3JpcHRBcmdzWzBdLCAnLmpzJyk7CiAgbGV0IHJlcGwgPSBuZXcgUkVQTChuYW1lKTsKICBjb25zb2xlLmxvZygncmVwbCcsIHJlcGwpOwogIHJlcGwuaGVscCA9ICgpID0+IHt9OwogICBsZXQgeyBsb2cgfSA9IGNvbnNvbGU7CiAgcmVwbC5zaG93ID0gYXJnID0+IHN0ZC5wdXRzKHR5cGVvZiBhcmcgPT0gJ3N0cmluZycgPyBhcmcgOiBpbnNwZWN0KGFyZywgeyBjb2xvcnM6IHRydWUgfSkpOwoKICByZXBsLmNsZWFudXAgPSAoKSA9PiB7CiAgICBUZXJtaW5hbC5tb3VzZXRyYWNraW5nRGlzYWJsZSgpOwogICAgbGV0IGhpc3QgPSByZXBsLmhpc3RvcnlfZ2V0KCkuZmlsdGVyKChpdGVtLCBpLCBhKSA9PiBhLmxhc3RJbmRleE9mKGl0ZW0pID09IGkpOwogICAgZnMud3JpdGVGaWxlU3luYygKICAgICAgY21kaGlzdCwKICAgICAgaGlzdAogICAgICAgIC5maWx0ZXIoZW50cnkgPT4gKGVudHJ5ICsgJycpLnRyaW0oKSAhPSAnJykKICAgICAgICAubWFwKGVudHJ5ID0+IGVudHJ5LnJlcGxhY2UoL1xuL2csICdcXG4nKSArICdcbicpCiAgICAgICAgLmpvaW4oJycpCiAgICApOwogICAgY29uc29sZS5sb2coYEVYSVQgKHdyb3RlICR7aGlzdC5sZW5ndGh9IGhpc3RvcnkgZW50cmllcylgKTsKICAgIHN0ZC5leGl0KDApOwogIH07CiAgbGV0IGRlYnVnTG9nID0gZnMuZm9wZW4oJ2RlYnVnLmxvZycsICdhJyk7CiAgcmVwbC5kZWJ1Z0xvZyA9IGRlYnVnTG9nOwovLyAgY29uc29sZS5sb2cgPSByZXBsLndyYXBQcmludEZ1bmN0aW9uKGxvZywgY29uc29sZSk7CgogIC8qb3MudHR5U2V0UmF3KDAsIHRydWUpOwogIG9zLnNldFJlYWRIYW5kbGVyKDAsICgpID0+IHJlcGwudGVybV9yZWFkX2hhbmRsZXIoKSk7CiovCiAgY29uc29sZS5sb2coJ3JlcGwucnVuKCknLCByZXBsLnJ1blN5bmMobmFtZSkpOwoKLyogIGxldCBjbGllbnQgPSBuZXcgcnBjLlNvY2tldCgpOwogIGNsaWVudC5sb2cgPSByZXBsLndyYXBQcmludEZ1bmN0aW9uKGxvZywgY29uc29sZSk7CgogIGltcG9ydCgnb3MnKS50aGVuKG9zID0+CiAgICBpbXBvcnQoJ25ldCcpLnRoZW4oKHsgY2xpZW50IH0pID0+CiAgICAgIGNsaWVudC5jb25uZWN0KCh1cmwsIGNhbGxiYWNrcykgPT4gY2xpZW50KHsgLi4udXJsLCAuLi5jYWxsYmFja3MgfSksIG9zKQogICAgKQogICk7CiAgY29uc29sZS5sb2coJ2NsaWVudCcsIGNsaWVudCk7Ki8KCiAgT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7IHJlcGwgfSk7Cn0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIHN0ZC5lcnIucHV0cyhgRkFJTDogJHtlcnJvci5tZXNzYWdlfVxuJHtlcnJvci5zdGFja31gKTsKICBzdGQuZXhpdCgxKTsKfSBmaW5hbGx5IHsKICBjb25zb2xlLmxvZygnU1VDQ0VTUycpOwp9CgAAAAAAAAAAvQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQUAAAAAAAANBQAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA0LAAAAAAAADgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQsAAAAAAAANCwAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4LAAAAAAAADwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgsAAAAAAAAOCwAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"paste",
					null,
					"AQAAAA8LAAAAAAAAFwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwsAAAAAAAAPCwAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": " ReadJSON"
					},
					"CQAAABcLAAAAAAAAGAsAAAAAAAAAAAAAGAsAAAAAAAAZCwAAAAAAAAAAAAAZCwAAAAAAABoLAAAAAAAAAAAAABoLAAAAAAAAGwsAAAAAAAAAAAAAGwsAAAAAAAAcCwAAAAAAAAAAAAAcCwAAAAAAAB0LAAAAAAAAAAAAAB0LAAAAAAAAHgsAAAAAAAAAAAAAHgsAAAAAAAAfCwAAAAAAAAAAAAAfCwAAAAAAACALAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwsAAAAAAAAXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABcLAAAAAAAAGAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwsAAAAAAAAXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BQAAAHEEAAAAAAAAcgQAAAAAAAAAAAAAcgQAAAAAAAByBAAAAAAAAAMAAAByZXRyBAAAAAAAAHMEAAAAAAAAAAAAAHMEAAAAAAAAdAQAAAAAAAAAAAAAdAQAAAAAAAB1BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQQAAAAAAAB0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": "\nmaxStringLen"
					},
					"DgAAANMFAAAAAAAA1AUAAAAAAAAAAAAA1AUAAAAAAADaBQAAAAAAAAAAAADaBQAAAAAAANsFAAAAAAAAAAAAANsFAAAAAAAA3AUAAAAAAAAAAAAA3AUAAAAAAADdBQAAAAAAAAAAAADdBQAAAAAAAN4FAAAAAAAAAAAAAN4FAAAAAAAA3wUAAAAAAAAAAAAA3wUAAAAAAADgBQAAAAAAAAAAAADgBQAAAAAAAOEFAAAAAAAAAAAAAOEFAAAAAAAA4gUAAAAAAAAAAAAA4gUAAAAAAADjBQAAAAAAAAAAAADjBQAAAAAAAOQFAAAAAAAAAAAAAOQFAAAAAAAA5QUAAAAAAAAAAAAA5QUAAAAAAADmBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wUAAAAAAADTBQAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": "gth:"
					},
					"BAAAAOYFAAAAAAAA5wUAAAAAAAAAAAAA5wUAAAAAAADoBQAAAAAAAAAAAADoBQAAAAAAAOkFAAAAAAAAAAAAAOkFAAAAAAAA6gUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gUAAAAAAADmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": " 100,"
					},
					"BQAAAOoFAAAAAAAA6wUAAAAAAAAAAAAA6wUAAAAAAADsBQAAAAAAAAAAAADsBQAAAAAAAO0FAAAAAAAAAAAAAO0FAAAAAAAA7gUAAAAAAAAAAAAA7gUAAAAAAADvBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gUAAAAAAADqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					5,
					"left_delete",
					null,
					"BQAAAAcGAAAAAAAABwYAAAAAAAABAAAAMAYGAAAAAAAABgYAAAAAAAABAAAAMAUGAAAAAAAABQYAAAAAAAABAAAAMAQGAAAAAAAABAYAAAAAAAABAAAAMAMGAAAAAAAAAwYAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAACAYAAAAAAAAIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "Infiniy"
					},
					"BwAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAFBgAAAAAAAAAAAAAFBgAAAAAAAAYGAAAAAAAAAAAAAAYGAAAAAAAABwYAAAAAAAAAAAAABwYAAAAAAAAIBgAAAAAAAAAAAAAIBgAAAAAAAAkGAAAAAAAAAAAAAAkGAAAAAAAACgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwYAAAAAAAADBgAAAAAAAAAAAAAAAPC/"
				],
				[
					360,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAAoGAAAAAAAACwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgYAAAAAAAAKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					2,
					"left_delete",
					null,
					"AgAAAAoGAAAAAAAACgYAAAAAAAABAAAAdAkGAAAAAAAACQYAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAACwYAAAAAAAALBgAAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "ty"
					},
					"AgAAAAkGAAAAAAAACgYAAAAAAAAAAAAACgYAAAAAAAALBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQYAAAAAAAAJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					8,
					"left_delete",
					null,
					"CAAAALYFAAAAAAAAtgUAAAAAAAABAAAAebUFAAAAAAAAtQUAAAAAAAABAAAAdLQFAAAAAAAAtAUAAAAAAAABAAAAabMFAAAAAAAAswUAAAAAAAABAAAAbrIFAAAAAAAAsgUAAAAAAAABAAAAabEFAAAAAAAAsQUAAAAAAAABAAAAZrAFAAAAAAAAsAUAAAAAAAABAAAAbq8FAAAAAAAArwUAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAtwUAAAAAAAC3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAK8FAAAAAAAAsAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwUAAAAAAACvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIYEAAAAAAAAhwQAAAAAAAAAAAAAhwQAAAAAAACJBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgQAAAAAAACGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": "Object.create"
					},
					"DgAAAJMEAAAAAAAAlAQAAAAAAAAAAAAAhwQAAAAAAACHBAAAAAAAAAIAAAAgIJIEAAAAAAAAkwQAAAAAAAAAAAAAkwQAAAAAAACUBAAAAAAAAAAAAACUBAAAAAAAAJUEAAAAAAAAAAAAAJUEAAAAAAAAlgQAAAAAAAAAAAAAlgQAAAAAAACXBAAAAAAAAAAAAACXBAAAAAAAAJgEAAAAAAAAAAAAAJgEAAAAAAAAmQQAAAAAAAAAAAAAmQQAAAAAAACaBAAAAAAAAAAAAACaBAAAAAAAAJsEAAAAAAAAAAAAAJsEAAAAAAAAnAQAAAAAAAAAAAAAnAQAAAAAAACdBAAAAAAAAAAAAACdBAAAAAAAAJ4EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwQAAAAAAACTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": "(null,"
					},
					"BgAAAJ4EAAAAAAAAnwQAAAAAAAAAAAAAnwQAAAAAAACgBAAAAAAAAAAAAACgBAAAAAAAAKEEAAAAAAAAAAAAAKEEAAAAAAAAogQAAAAAAAAAAAAAogQAAAAAAACjBAAAAAAAAAAAAACjBAAAAAAAAKQEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngQAAAAAAACeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQEAAAAAAAApQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAQAAAAAAACkBAAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAK8EAAAAAAAAsAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwQAAAAAAACvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": " {value:"
					},
					"CAAAALAEAAAAAAAAsQQAAAAAAAAAAAAAsQQAAAAAAACyBAAAAAAAAAAAAACyBAAAAAAAALMEAAAAAAAAAAAAALMEAAAAAAAAtAQAAAAAAAAAAAAAtAQAAAAAAAC1BAAAAAAAAAAAAAC1BAAAAAAAALYEAAAAAAAAAAAAALYEAAAAAAAAtwQAAAAAAAAAAAAAtwQAAAAAAAC4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAQAAAAAAACwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					1,
					"insert",
					{
						"characters": " data}"
					},
					"BgAAALgEAAAAAAAAuQQAAAAAAAAAAAAAuQQAAAAAAAC6BAAAAAAAAAAAAAC6BAAAAAAAALsEAAAAAAAAAAAAALsEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAAC9BAAAAAAAAAAAAAC9BAAAAAAAAL4EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAQAAAAAAAC4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"insert",
					{
						"characters": ",enumerable"
					},
					"CwAAAL0EAAAAAAAAvgQAAAAAAAAAAAAAvgQAAAAAAAC/BAAAAAAAAAAAAAC/BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAwQQAAAAAAAAAAAAAwQQAAAAAAADCBAAAAAAAAAAAAADCBAAAAAAAAMMEAAAAAAAAAAAAAMMEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADFBAAAAAAAAAAAAADFBAAAAAAAAMYEAAAAAAAAAAAAAMYEAAAAAAAAxwQAAAAAAAAAAAAAxwQAAAAAAADIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQQAAAAAAAC9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"insert",
					{
						"characters": ":false"
					},
					"BgAAAMgEAAAAAAAAyQQAAAAAAAAAAAAAyQQAAAAAAADKBAAAAAAAAAAAAADKBAAAAAAAAMsEAAAAAAAAAAAAAMsEAAAAAAAAzAQAAAAAAAAAAAAAzAQAAAAAAADNBAAAAAAAAAAAAADNBAAAAAAAAM4EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAQAAAAAAADIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANwEAAAAAAAA3QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AQAAAAAAADcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN0EAAAAAAAA3gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QQAAAAAAADdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					2,
					"left_delete",
					null,
					"AgAAAN0EAAAAAAAA3QQAAAAAAAABAAAAINwEAAAAAAAA3AQAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA3gQAAAAAAADeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAANwEAAAAAAAA3QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AQAAAAAAADcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": " {value"
					},
					"BwAAAN0EAAAAAAAA3gQAAAAAAAAAAAAA3gQAAAAAAADfBAAAAAAAAAAAAADfBAAAAAAAAOAEAAAAAAAAAAAAAOAEAAAAAAAA4QQAAAAAAAAAAAAA4QQAAAAAAADiBAAAAAAAAAAAAADiBAAAAAAAAOMEAAAAAAAAAAAAAOMEAAAAAAAA5AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QQAAAAAAADdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAD8FAAAAAAAAQAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwUAAAAAAAA/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": " configurable"
					},
					"DQAAAEAFAAAAAAAAQQUAAAAAAAAAAAAAQQUAAAAAAABCBQAAAAAAAAAAAABCBQAAAAAAAEMFAAAAAAAAAAAAAEMFAAAAAAAARAUAAAAAAAAAAAAARAUAAAAAAABFBQAAAAAAAAAAAABFBQAAAAAAAEYFAAAAAAAAAAAAAEYFAAAAAAAARwUAAAAAAAAAAAAARwUAAAAAAABIBQAAAAAAAAAAAABIBQAAAAAAAEkFAAAAAAAAAAAAAEkFAAAAAAAASgUAAAAAAAAAAAAASgUAAAAAAABLBQAAAAAAAAAAAABLBQAAAAAAAEwFAAAAAAAAAAAAAEwFAAAAAAAATQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAUAAAAAAABABQAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": ":true}"
					},
					"BgAAAE0FAAAAAAAATgUAAAAAAAAAAAAATgUAAAAAAABPBQAAAAAAAAAAAABPBQAAAAAAAFAFAAAAAAAAAAAAAFAFAAAAAAAAUQUAAAAAAAAAAAAAUQUAAAAAAABSBQAAAAAAAAAAAABSBQAAAAAAAFMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQUAAAAAAABNBQAAAAAAAAAAAAAAAPC/"
				],
				[
					404,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGEFAAAAAAAAYgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQUAAAAAAABhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					405,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGIFAAAAAAAAYwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgUAAAAAAABiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					406,
					2,
					"left_delete",
					null,
					"AgAAAGIFAAAAAAAAYgUAAAAAAAABAAAAIGEFAAAAAAAAYQUAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAYwUAAAAAAABjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAGEFAAAAAAAAYgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQUAAAAAAABhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					408,
					1,
					"insert",
					{
						"characters": " {value"
					},
					"BwAAAGIFAAAAAAAAYwUAAAAAAAAAAAAAYwUAAAAAAABkBQAAAAAAAAAAAABkBQAAAAAAAGUFAAAAAAAAAAAAAGUFAAAAAAAAZgUAAAAAAAAAAAAAZgUAAAAAAABnBQAAAAAAAAAAAABnBQAAAAAAAGgFAAAAAAAAAAAAAGgFAAAAAAAAaQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgUAAAAAAABiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": ",configurable"
					},
					"DQAAAIsFAAAAAAAAjAUAAAAAAAAAAAAAjAUAAAAAAACNBQAAAAAAAAAAAACNBQAAAAAAAI4FAAAAAAAAAAAAAI4FAAAAAAAAjwUAAAAAAAAAAAAAjwUAAAAAAACQBQAAAAAAAAAAAACQBQAAAAAAAJEFAAAAAAAAAAAAAJEFAAAAAAAAkgUAAAAAAAAAAAAAkgUAAAAAAACTBQAAAAAAAAAAAACTBQAAAAAAAJQFAAAAAAAAAAAAAJQFAAAAAAAAlQUAAAAAAAAAAAAAlQUAAAAAAACWBQAAAAAAAAAAAACWBQAAAAAAAJcFAAAAAAAAAAAAAJcFAAAAAAAAmAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwUAAAAAAACLBQAAAAAAAAAAAAAAgGZA"
				],
				[
					411,
					1,
					"insert",
					{
						"characters": ":true}"
					},
					"BgAAAJgFAAAAAAAAmQUAAAAAAAAAAAAAmQUAAAAAAACaBQAAAAAAAAAAAACaBQAAAAAAAJsFAAAAAAAAAAAAAJsFAAAAAAAAnAUAAAAAAAAAAAAAnAUAAAAAAACdBQAAAAAAAAAAAACdBQAAAAAAAJ4FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAUAAAAAAACYBQAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAKIFAAAAAAAAowUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogUAAAAAAACiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					415,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABXDAAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCBSRVBMIGZyb20gJy4vbGliL3JlcGwuanMnOwppbXBvcnQgaW5zcGVjdCBmcm9tICdpbnNwZWN0JzsKaW1wb3J0IHsgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKCmNvbnN0IGJhc2UgPSBwYXRoLmJhc2VuYW1lKHNjcmlwdEFyZ3NbMF0sIC9cLlthLXpdKiQvKTsKY29uc3QgY21kaGlzdCA9IGAuaGlzdG9yeS0ke2Jhc2V9YDsKCmV4dGVuZEFycmF5KEFycmF5LnByb3RvdHlwZSk7CgpmdW5jdGlvbiBMb2FkSGlzdG9yeShmaWxlbmFtZSkgewogIGxldCBjb250ZW50cyA9IHN0ZC5sb2FkRmlsZShmaWxlbmFtZSk7CiAgbGV0IGRhdGE7CgogIGNvbnN0IHBhcnNlID0gKCkgPT4gewogICAgdHJ5IHsKICAgICAgZGF0YSA9IEpTT04ucGFyc2UoY29udGVudHMpOwogICAgfSBjYXRjaChlKSB7fQogICAgaWYoZGF0YSkgcmV0dXJuIGRhdGE7CiAgICB0cnkgewogICAgICBkYXRhID0gY29udGVudHMuc3BsaXQoL1xuL2cpOwogICAgfSBjYXRjaChlKSB7fQogICAgaWYoZGF0YSkgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIChwYXJzZSgpID8/IFtdKQogICAgLmZpbHRlcihlbnRyeSA9PiAoZW50cnkgKyAnJykudHJpbSgpICE9ICcnKQogICAgLm1hcChlbnRyeSA9PiBlbnRyeS5yZXBsYWNlKC9cXG4vZywgJ1xuJykpOwp9CgpmdW5jdGlvbiBSZWFkSlNPTihmaWxlbmFtZSkgewogIGxldCBkYXRhID0gc3RkLmxvYWRGaWxlKGZpbGVuYW1lKTsKCiAgaWYoZGF0YSkgY29uc29sZS5sb2coYFJlYWRKU09OKCcke2ZpbGVuYW1lfScpICR7ZGF0YS5sZW5ndGh9IGJ5dGVzIHJlYWRgKTsKICByZXR1cm4gZGF0YSA/IEpTT04ucGFyc2UoZGF0YSkgOiBudWxsOwp9CgpmdW5jdGlvbiBSZWFkRmlsZShuYW1lLCBiaW5hcnkpIHsKICBsZXQgZGF0YSA9IGZzLnJlYWRGaWxlU3luYyhuYW1lLCBiaW5hcnkgPyBudWxsIDogJ3V0Zi04Jyk7CgogIGNvbnNvbGUubG9nKGBSZWFkICR7bmFtZX06ICR7ZGF0YS5sZW5ndGh9IGJ5dGVzYCk7CgogIHJldHVybiBPYmplY3QuY3JlYXRlKG51bGwsIHsKICAgIGRhdGE6IHt2YWx1ZTogZGF0YSxlbnVtZXJhYmxlOmZhbHNlfSwKICAgIGdldE5vZGU6IHt2YWx1ZShub2RlKSB7CiAgICAgIGNvbnN0IHsgc3RhcnQsIGVuZCB9ID0gbm9kZTsKICAgICAgcmV0dXJuIHRoaXMuZGF0YS5zbGljZShzdGFydCwgZW5kKTsKICAgIH0sIGNvbmZpZ3VyYWJsZTp0cnVlfSwKICAgIHRvU3RyaW5nOiB7dmFsdWUoKSB7CiAgICAgIHJldHVybiB0aGlzLmRhdGE7CiAgICB9LGNvbmZpZ3VyYWJsZTp0cnVlfQogIH0pOwp9CmZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgZGVwdGg6IDIsCiAgICAgIG1heEFycmF5TGVuZ3RoOiAxMDAsCiAgICAgIG1heFN0cmluZ0xlbmd0aDogMTAwLAogICAgICBicmVha0xlbmd0aDogSW5maW5pdHksCiAgICAgIGNvbXBhY3Q6IDIgLyosCiAgICAgIGN1c3RvbUluc3BlY3Q6IHRydWUqLwogICAgfQogIH0pOwogIGxldCBuYW1lID0gcGF0aC5iYXNlbmFtZShzY3JpcHRBcmdzWzBdLCAnLmpzJyk7CiAgbGV0IHJlcGwgPSBuZXcgUkVQTChuYW1lKTsKICBjb25zb2xlLmxvZygncmVwbCcsIHJlcGwpOwogIHJlcGwuaGVscCA9ICgpID0+IHt9OwogIGxldCB7IGxvZyB9ID0gY29uc29sZTsKICByZXBsLnNob3cgPSBhcmcgPT4gc3RkLnB1dHModHlwZW9mIGFyZyA9PSAnc3RyaW5nJyA/IGFyZyA6IGluc3BlY3QoYXJnLCB7IGNvbG9yczogdHJ1ZSB9KSk7CgogIHJlcGwuY2xlYW51cCA9ICgpID0+IHsKICAgIFRlcm1pbmFsLm1vdXNldHJhY2tpbmdEaXNhYmxlKCk7CiAgICBsZXQgaGlzdCA9IHJlcGwuaGlzdG9yeV9nZXQoKS5maWx0ZXIoKGl0ZW0sIGksIGEpID0+IGEubGFzdEluZGV4T2YoaXRlbSkgPT0gaSk7CiAgICBmcy53cml0ZUZpbGVTeW5jKAogICAgICBjbWRoaXN0LAogICAgICBoaXN0CiAgICAgICAgLmZpbHRlcihlbnRyeSA9PiAoZW50cnkgKyAnJykudHJpbSgpICE9ICcnKQogICAgICAgIC5tYXAoZW50cnkgPT4gZW50cnkucmVwbGFjZSgvXG4vZywgJ1xcbicpICsgJ1xuJykKICAgICAgICAuam9pbignJykKICAgICk7CiAgICBjb25zb2xlLmxvZyhgRVhJVCAod3JvdGUgJHtoaXN0Lmxlbmd0aH0gaGlzdG9yeSBlbnRyaWVzKWApOwogICAgc3RkLmV4aXQoMCk7CiAgfTsKICBsZXQgZGVidWdMb2cgPSBmcy5mb3BlbignZGVidWcubG9nJywgJ2EnKTsKICByZXBsLmRlYnVnTG9nID0gZGVidWdMb2c7CiAgLy8gIGNvbnNvbGUubG9nID0gcmVwbC53cmFwUHJpbnRGdW5jdGlvbihsb2csIGNvbnNvbGUpOwoKICAvKm9zLnR0eVNldFJhdygwLCB0cnVlKTsKICBvcy5zZXRSZWFkSGFuZGxlcigwLCAoKSA9PiByZXBsLnRlcm1fcmVhZF9oYW5kbGVyKCkpOwoqLwogIGNvbnNvbGUubG9nKCdyZXBsLnJ1bigpJywgcmVwbC5ydW5TeW5jKG5hbWUpKTsKCiAgLyogIGxldCBjbGllbnQgPSBuZXcgcnBjLlNvY2tldCgpOwogIGNsaWVudC5sb2cgPSByZXBsLndyYXBQcmludEZ1bmN0aW9uKGxvZywgY29uc29sZSk7CgogIGltcG9ydCgnb3MnKS50aGVuKG9zID0+CiAgICBpbXBvcnQoJ25ldCcpLnRoZW4oKHsgY2xpZW50IH0pID0+CiAgICAgIGNsaWVudC5jb25uZWN0KCh1cmwsIGNhbGxiYWNrcykgPT4gY2xpZW50KHsgLi4udXJsLCAuLi5jYWxsYmFja3MgfSksIG9zKQogICAgKQogICk7CiAgY29uc29sZS5sb2coJ2NsaWVudCcsIGNsaWVudCk7Ki8KCiAgT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7IHJlcGwsIFJlYWRGaWxlLCBSZWFkSlNPTiB9KTsKfQoKdHJ5IHsKICBtYWluKC4uLnNjcmlwdEFyZ3Muc2xpY2UoMSkpOwp9IGNhdGNoKGVycm9yKSB7CiAgc3RkLmVyci5wdXRzKGBGQUlMOiAke2Vycm9yLm1lc3NhZ2V9XG4ke2Vycm9yLnN0YWNrfWApOwogIHN0ZC5leGl0KDEpOwp9IGZpbmFsbHkgewogIGNvbnNvbGUubG9nKCdTVUNDRVNTJyk7Cn0KAAAAAAAAAACMDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowUAAAAAAACjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"left_delete",
					null,
					"AQAAANcGAAAAAAAA1wYAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA2AYAAAAAAADYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					446,
					2,
					"left_delete",
					null,
					"AgAAALoGAAAAAAAAugYAAAAAAAABAAAAKrkGAAAAAAAAuQYAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAuwYAAAAAAAC7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"left_delete",
					null,
					"AQAAANQGAAAAAAAA1AYAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAA1QYAAAAAAADVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					460,
					1,
					"cut",
					{
						"event":
						{
							"x": 372.687744141,
							"y": 175.72164917
						}
					},
					"AQAAAIsGAAAAAAAAiwYAAAAAAAAdAAAAICAgICAgYnJlYWtMZW5ndGg6IEluZmluaXR5LAo",
					"AQAAAAAAAAABAAAAiwYAAAAAAACoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"insert",
					{
						"characters": "\nbrewak"
					},
					"CAAAAJ0GAAAAAAAAngYAAAAAAAAAAAAAngYAAAAAAACkBgAAAAAAAAAAAACkBgAAAAAAAKUGAAAAAAAAAAAAAKUGAAAAAAAApgYAAAAAAAAAAAAApgYAAAAAAACnBgAAAAAAAAAAAACnBgAAAAAAAKgGAAAAAAAAAAAAAKgGAAAAAAAAqQYAAAAAAAAAAAAAqQYAAAAAAACqBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQYAAAAAAACdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					3,
					"left_delete",
					null,
					"AwAAAKkGAAAAAAAAqQYAAAAAAAABAAAAa6gGAAAAAAAAqAYAAAAAAAABAAAAYacGAAAAAAAApwYAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAqgYAAAAAAACqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					1,
					"insert",
					{
						"characters": "ak"
					},
					"AgAAAKcGAAAAAAAAqAYAAAAAAAAAAAAAqAYAAAAAAACpBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwYAAAAAAACnBgAAAAAAAAAAAAAAAPC/"
				],
				[
					469,
					1,
					"insert_completion",
					{
						"completion": "stringBreakNewline",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "stringBreakNewline"
					},
					"AgAAAKQGAAAAAAAApAYAAAAAAAAFAAAAYnJlYWukBgAAAAAAALYGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQYAAAAAAACpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": ":false,"
					},
					"BwAAALYGAAAAAAAAtwYAAAAAAAAAAAAAtwYAAAAAAAC4BgAAAAAAAAAAAAC4BgAAAAAAALkGAAAAAAAAAAAAALkGAAAAAAAAugYAAAAAAAAAAAAAugYAAAAAAAC7BgAAAAAAAAAAAAC7BgAAAAAAALwGAAAAAAAAAAAAALwGAAAAAAAAvQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgYAAAAAAAC2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					471,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACLDAAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCBSRVBMIGZyb20gJy4vbGliL3JlcGwuanMnOwppbXBvcnQgaW5zcGVjdCBmcm9tICdpbnNwZWN0JzsKaW1wb3J0IHsgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKCmNvbnN0IGJhc2UgPSBwYXRoLmJhc2VuYW1lKHNjcmlwdEFyZ3NbMF0sIC9cLlthLXpdKiQvKTsKY29uc3QgY21kaGlzdCA9IGAuaGlzdG9yeS0ke2Jhc2V9YDsKCmV4dGVuZEFycmF5KEFycmF5LnByb3RvdHlwZSk7CgpmdW5jdGlvbiBMb2FkSGlzdG9yeShmaWxlbmFtZSkgewogIGxldCBjb250ZW50cyA9IHN0ZC5sb2FkRmlsZShmaWxlbmFtZSk7CiAgbGV0IGRhdGE7CgogIGNvbnN0IHBhcnNlID0gKCkgPT4gewogICAgdHJ5IHsKICAgICAgZGF0YSA9IEpTT04ucGFyc2UoY29udGVudHMpOwogICAgfSBjYXRjaChlKSB7fQogICAgaWYoZGF0YSkgcmV0dXJuIGRhdGE7CiAgICB0cnkgewogICAgICBkYXRhID0gY29udGVudHMuc3BsaXQoL1xuL2cpOwogICAgfSBjYXRjaChlKSB7fQogICAgaWYoZGF0YSkgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIChwYXJzZSgpID8/IFtdKQogICAgLmZpbHRlcihlbnRyeSA9PiAoZW50cnkgKyAnJykudHJpbSgpICE9ICcnKQogICAgLm1hcChlbnRyeSA9PiBlbnRyeS5yZXBsYWNlKC9cXG4vZywgJ1xuJykpOwp9CgpmdW5jdGlvbiBSZWFkSlNPTihmaWxlbmFtZSkgewogIGxldCBkYXRhID0gc3RkLmxvYWRGaWxlKGZpbGVuYW1lKTsKCiAgaWYoZGF0YSkgY29uc29sZS5sb2coYFJlYWRKU09OKCcke2ZpbGVuYW1lfScpICR7ZGF0YS5sZW5ndGh9IGJ5dGVzIHJlYWRgKTsKICByZXR1cm4gZGF0YSA/IEpTT04ucGFyc2UoZGF0YSkgOiBudWxsOwp9CgpmdW5jdGlvbiBSZWFkRmlsZShuYW1lLCBiaW5hcnkpIHsKICBsZXQgZGF0YSA9IGZzLnJlYWRGaWxlU3luYyhuYW1lLCBiaW5hcnkgPyBudWxsIDogJ3V0Zi04Jyk7CgogIGNvbnNvbGUubG9nKGBSZWFkICR7bmFtZX06ICR7ZGF0YS5sZW5ndGh9IGJ5dGVzYCk7CgogIHJldHVybiBPYmplY3QuY3JlYXRlKG51bGwsIHsKICAgIGRhdGE6IHsgdmFsdWU6IGRhdGEsIGVudW1lcmFibGU6IGZhbHNlIH0sCiAgICBnZXROb2RlOiB7CiAgICAgIHZhbHVlKG5vZGUpIHsKICAgICAgICBjb25zdCB7IHN0YXJ0LCBlbmQgfSA9IG5vZGU7CiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS5zbGljZShzdGFydCwgZW5kKTsKICAgICAgfSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9LAogICAgdG9TdHJpbmc6IHsKICAgICAgdmFsdWUoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YTsKICAgICAgfSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9CiAgfSk7Cn0KZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoewogICAgaW5zcGVjdE9wdGlvbnM6IHsKICAgICAgY29sb3JzOiB0cnVlLAogICAgICBkZXB0aDogMiwKICAgICAgbWF4QXJyYXlMZW5ndGg6IDEwMCwKICAgICAgbWF4U3RyaW5nTGVuZ3RoOiAxMDAsCiAgICAgIGNvbXBhY3Q6IDIgLAogICAgICBzdHJpbmdCcmVha05ld2xpbmU6ZmFsc2UsCiAgICAgIGN1c3RvbUluc3BlY3Q6IHRydWUKICAgIH0KICB9KTsKICBsZXQgbmFtZSA9IHBhdGguYmFzZW5hbWUoc2NyaXB0QXJnc1swXSwgJy5qcycpOwogIGxldCByZXBsID0gbmV3IFJFUEwobmFtZSk7CiAgY29uc29sZS5sb2coJ3JlcGwnLCByZXBsKTsKICByZXBsLmhlbHAgPSAoKSA9PiB7fTsKICBsZXQgeyBsb2cgfSA9IGNvbnNvbGU7CiAgcmVwbC5zaG93ID0gYXJnID0+IHN0ZC5wdXRzKHR5cGVvZiBhcmcgPT0gJ3N0cmluZycgPyBhcmcgOiBpbnNwZWN0KGFyZywgeyBjb2xvcnM6IHRydWUgfSkpOwoKICByZXBsLmNsZWFudXAgPSAoKSA9PiB7CiAgICBUZXJtaW5hbC5tb3VzZXRyYWNraW5nRGlzYWJsZSgpOwogICAgbGV0IGhpc3QgPSByZXBsLmhpc3RvcnlfZ2V0KCkuZmlsdGVyKChpdGVtLCBpLCBhKSA9PiBhLmxhc3RJbmRleE9mKGl0ZW0pID09IGkpOwogICAgZnMud3JpdGVGaWxlU3luYygKICAgICAgY21kaGlzdCwKICAgICAgaGlzdAogICAgICAgIC5maWx0ZXIoZW50cnkgPT4gKGVudHJ5ICsgJycpLnRyaW0oKSAhPSAnJykKICAgICAgICAubWFwKGVudHJ5ID0+IGVudHJ5LnJlcGxhY2UoL1xuL2csICdcXG4nKSArICdcbicpCiAgICAgICAgLmpvaW4oJycpCiAgICApOwogICAgY29uc29sZS5sb2coYEVYSVQgKHdyb3RlICR7aGlzdC5sZW5ndGh9IGhpc3RvcnkgZW50cmllcylgKTsKICAgIHN0ZC5leGl0KDApOwogIH07CiAgbGV0IGRlYnVnTG9nID0gZnMuZm9wZW4oJ2RlYnVnLmxvZycsICdhJyk7CiAgcmVwbC5kZWJ1Z0xvZyA9IGRlYnVnTG9nOwogIC8vICBjb25zb2xlLmxvZyA9IHJlcGwud3JhcFByaW50RnVuY3Rpb24obG9nLCBjb25zb2xlKTsKCiAgLypvcy50dHlTZXRSYXcoMCwgdHJ1ZSk7CiAgb3Muc2V0UmVhZEhhbmRsZXIoMCwgKCkgPT4gcmVwbC50ZXJtX3JlYWRfaGFuZGxlcigpKTsKKi8KICBjb25zb2xlLmxvZygncmVwbC5ydW4oKScsIHJlcGwucnVuU3luYyhuYW1lKSk7CgogIC8qICBsZXQgY2xpZW50ID0gbmV3IHJwYy5Tb2NrZXQoKTsKICBjbGllbnQubG9nID0gcmVwbC53cmFwUHJpbnRGdW5jdGlvbihsb2csIGNvbnNvbGUpOwoKICBpbXBvcnQoJ29zJykudGhlbihvcyA9PgogICAgaW1wb3J0KCduZXQnKS50aGVuKCh7IGNsaWVudCB9KSA9PgogICAgICBjbGllbnQuY29ubmVjdCgodXJsLCBjYWxsYmFja3MpID0+IGNsaWVudCh7IC4uLnVybCwgLi4uY2FsbGJhY2tzIH0pLCBvcykKICAgICkKICApOwogIGNvbnNvbGUubG9nKCdjbGllbnQnLCBjbGllbnQpOyovCgogIE9iamVjdC5hc3NpZ24oZ2xvYmFsVGhpcywgeyByZXBsLCBSZWFkRmlsZSwgUmVhZEpTT04gfSk7Cn0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIHN0ZC5lcnIucHV0cyhgRkFJTDogJHtlcnJvci5tZXNzYWdlfVxuJHtlcnJvci5zdGFja31gKTsKICBzdGQuZXhpdCgxKTsKfSBmaW5hbGx5IHsKICBjb25zb2xlLmxvZygnU1VDQ0VTUycpOwp9CgAAAAAAAAAAiwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQYAAAAAAAC9BgAAAAAAAAAAAAAAAPC/"
				],
				[
					474,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANsFAAAAAAAA3AUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wUAAAAAAADbBQAAAAAAAAAAAAAAAPC/"
				],
				[
					475,
					1,
					"paste",
					null,
					"AQAAANwFAAAAAAAAQAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AUAAAAAAADcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"cut",
					null,
					"AQAAAA8GAAAAAAAADwYAAAAAAACGAQAAIGlmKFV0aWwuaXNHZW5lcmF0b3IoZGF0YSkpIHsKICAgIGxldCBmZCA9IGZzLm9wZW5TeW5jKG5hbWUsIG9zLk9fV1JPTkxZIHwgb3MuT19UUlVOQyB8IG9zLk9fQ1JFQVQsIDB4MWE0KTsKICAgIGxldCByID0gMDsKICAgIGZvcihsZXQgaXRlbSBvZiBkYXRhKSB7CiAgICAgIHIgKz0gZnMud3JpdGVTeW5jKGZkLCB0b0FycmF5QnVmZmVyKGl0ZW0gKyAnJykpOwogICAgfQogICAgZnMuY2xvc2VTeW5jKGZkKTsKICAgIGxldCBzdGF0ID0gZnMuc3RhdFN5bmMobmFtZSk7CiAgICByZXR1cm4gc3RhdD8uc2l6ZTsKICB9CiAgaWYoVXRpbC5pc0l0ZXJhdG9yKGRhdGEpKSBkYXRhID0gWy4uLmRhdGFdOwogIGlmKFV0aWwuaXNBcnJheShkYXRhKSkgZGF0YSA9IGRhdGEuam9pbignXG4nKTsK",
					"AQAAAAAAAAABAAAADwYAAAAAAACVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"paste",
					null,
					"AQAAAKgMAAAAAAAAsQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAwAAAAAAACoDAAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALEMAAAAAAAAsgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQwAAAAAAACxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIMAAAAAAAAswwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgwAAAAAAACyDAAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1DQAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCBSRVBMIGZyb20gJy4vbGliL3JlcGwuanMnOwppbXBvcnQgaW5zcGVjdCBmcm9tICdpbnNwZWN0JzsKaW1wb3J0IHsgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKCmNvbnN0IGJhc2UgPSBwYXRoLmJhc2VuYW1lKHNjcmlwdEFyZ3NbMF0sIC9cLlthLXpdKiQvKTsKY29uc3QgY21kaGlzdCA9IGAuaGlzdG9yeS0ke2Jhc2V9YDsKCmV4dGVuZEFycmF5KEFycmF5LnByb3RvdHlwZSk7CgpmdW5jdGlvbiBMb2FkSGlzdG9yeShmaWxlbmFtZSkgewogIGxldCBjb250ZW50cyA9IHN0ZC5sb2FkRmlsZShmaWxlbmFtZSk7CiAgbGV0IGRhdGE7CgogIGNvbnN0IHBhcnNlID0gKCkgPT4gewogICAgdHJ5IHsKICAgICAgZGF0YSA9IEpTT04ucGFyc2UoY29udGVudHMpOwogICAgfSBjYXRjaChlKSB7fQogICAgaWYoZGF0YSkgcmV0dXJuIGRhdGE7CiAgICB0cnkgewogICAgICBkYXRhID0gY29udGVudHMuc3BsaXQoL1xuL2cpOwogICAgfSBjYXRjaChlKSB7fQogICAgaWYoZGF0YSkgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIChwYXJzZSgpID8/IFtdKQogICAgLmZpbHRlcihlbnRyeSA9PiAoZW50cnkgKyAnJykudHJpbSgpICE9ICcnKQogICAgLm1hcChlbnRyeSA9PiBlbnRyeS5yZXBsYWNlKC9cXG4vZywgJ1xuJykpOwp9CgpmdW5jdGlvbiBSZWFkSlNPTihmaWxlbmFtZSkgewogIGxldCBkYXRhID0gc3RkLmxvYWRGaWxlKGZpbGVuYW1lKTsKCiAgaWYoZGF0YSkgY29uc29sZS5sb2coYFJlYWRKU09OKCcke2ZpbGVuYW1lfScpICR7ZGF0YS5sZW5ndGh9IGJ5dGVzIHJlYWRgKTsKICByZXR1cm4gZGF0YSA/IEpTT04ucGFyc2UoZGF0YSkgOiBudWxsOwp9CgpmdW5jdGlvbiBSZWFkRmlsZShuYW1lLCBiaW5hcnkpIHsKICBsZXQgZGF0YSA9IGZzLnJlYWRGaWxlU3luYyhuYW1lLCBiaW5hcnkgPyBudWxsIDogJ3V0Zi04Jyk7CgogIGNvbnNvbGUubG9nKGBSZWFkICR7bmFtZX06ICR7ZGF0YS5sZW5ndGh9IGJ5dGVzYCk7CgogIHJldHVybiBPYmplY3QuY3JlYXRlKG51bGwsIHsKICAgIGRhdGE6IHsgdmFsdWU6IGRhdGEsIGVudW1lcmFibGU6IGZhbHNlIH0sCiAgICBnZXROb2RlOiB7CiAgICAgIHZhbHVlKG5vZGUpIHsKICAgICAgICBjb25zdCB7IHN0YXJ0LCBlbmQgfSA9IG5vZGU7CiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS5zbGljZShzdGFydCwgZW5kKTsKICAgICAgfSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9LAogICAgdG9TdHJpbmc6IHsKICAgICAgdmFsdWUoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YTsKICAgICAgfSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIFdyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkgewogCiAgaWYodHlwZW9mIGRhdGEgPT0gJ3N0cmluZycgJiYgIWRhdGEuZW5kc1dpdGgoJ1xuJykpIGRhdGEgKz0gJ1xuJzsKICBsZXQgcmV0ID0gZnMud3JpdGVGaWxlU3luYyhuYW1lLCBkYXRhKTsKCiAgaWYodmVyYm9zZSkgY29uc29sZS5sb2coYFdyb3RlICR7bmFtZX06ICR7cmV0fSBieXRlc2ApOwp9CmZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgZGVwdGg6IDIsCiAgICAgIG1heEFycmF5TGVuZ3RoOiAxMDAsCiAgICAgIG1heFN0cmluZ0xlbmd0aDogMTAwLAogICAgICBjb21wYWN0OiAyLAogICAgICBzdHJpbmdCcmVha05ld2xpbmU6IGZhbHNlLAogICAgICBjdXN0b21JbnNwZWN0OiB0cnVlCiAgICB9CiAgfSk7CiAgbGV0IG5hbWUgPSBwYXRoLmJhc2VuYW1lKHNjcmlwdEFyZ3NbMF0sICcuanMnKTsKICBsZXQgcmVwbCA9IG5ldyBSRVBMKG5hbWUpOwogIGNvbnNvbGUubG9nKCdyZXBsJywgcmVwbCk7CiAgcmVwbC5oZWxwID0gKCkgPT4ge307CiAgbGV0IHsgbG9nIH0gPSBjb25zb2xlOwogIHJlcGwuc2hvdyA9IGFyZyA9PiBzdGQucHV0cyh0eXBlb2YgYXJnID09ICdzdHJpbmcnID8gYXJnIDogaW5zcGVjdChhcmcsIHsgY29sb3JzOiB0cnVlIH0pKTsKCiAgcmVwbC5jbGVhbnVwID0gKCkgPT4gewogICAgVGVybWluYWwubW91c2V0cmFja2luZ0Rpc2FibGUoKTsKICAgIGxldCBoaXN0ID0gcmVwbC5oaXN0b3J5X2dldCgpLmZpbHRlcigoaXRlbSwgaSwgYSkgPT4gYS5sYXN0SW5kZXhPZihpdGVtKSA9PSBpKTsKICAgIGZzLndyaXRlRmlsZVN5bmMoCiAgICAgIGNtZGhpc3QsCiAgICAgIGhpc3QKICAgICAgICAuZmlsdGVyKGVudHJ5ID0+IChlbnRyeSArICcnKS50cmltKCkgIT0gJycpCiAgICAgICAgLm1hcChlbnRyeSA9PiBlbnRyeS5yZXBsYWNlKC9cbi9nLCAnXFxuJykgKyAnXG4nKQogICAgICAgIC5qb2luKCcnKQogICAgKTsKICAgIGNvbnNvbGUubG9nKGBFWElUICh3cm90ZSAke2hpc3QubGVuZ3RofSBoaXN0b3J5IGVudHJpZXMpYCk7CiAgICBzdGQuZXhpdCgwKTsKICB9OwogIGxldCBkZWJ1Z0xvZyA9IGZzLmZvcGVuKCdkZWJ1Zy5sb2cnLCAnYScpOwogIHJlcGwuZGVidWdMb2cgPSBkZWJ1Z0xvZzsKICAvLyAgY29uc29sZS5sb2cgPSByZXBsLndyYXBQcmludEZ1bmN0aW9uKGxvZywgY29uc29sZSk7CgogIC8qb3MudHR5U2V0UmF3KDAsIHRydWUpOwogIG9zLnNldFJlYWRIYW5kbGVyKDAsICgpID0+IHJlcGwudGVybV9yZWFkX2hhbmRsZXIoKSk7CiovCiAgY29uc29sZS5sb2coJ3JlcGwucnVuKCknLCByZXBsLnJ1blN5bmMobmFtZSkpOwoKICAvKiAgbGV0IGNsaWVudCA9IG5ldyBycGMuU29ja2V0KCk7CiAgY2xpZW50LmxvZyA9IHJlcGwud3JhcFByaW50RnVuY3Rpb24obG9nLCBjb25zb2xlKTsKCiAgaW1wb3J0KCdvcycpLnRoZW4ob3MgPT4KICAgIGltcG9ydCgnbmV0JykudGhlbigoeyBjbGllbnQgfSkgPT4KICAgICAgY2xpZW50LmNvbm5lY3QoKHVybCwgY2FsbGJhY2tzKSA9PiBjbGllbnQoeyAuLi51cmwsIC4uLmNhbGxiYWNrcyB9KSwgb3MpCiAgICApCiAgKTsKICBjb25zb2xlLmxvZygnY2xpZW50JywgY2xpZW50KTsqLwoKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsgcmVwbCwgV3JpdGVGaWxlLCBSZWFkRmlsZSwgUmVhZEpTT04gfSk7Cn0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIHN0ZC5lcnIucHV0cyhgRkFJTDogJHtlcnJvci5tZXNzYWdlfVxuJHtlcnJvci5zdGFja31gKTsKICBzdGQuZXhpdCgxKTsKfSBmaW5hbGx5IHsKICBjb25zb2xlLmxvZygnU1VDQ0VTUycpOwp9CgAAAAAAAAAAcw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswwAAAAAAACzDAAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					1,
					"insert",
					{
						"characters": "\n\nstd.exit"
					},
					"DQAAAMcMAAAAAAAAyAwAAAAAAAAAAAAAyAwAAAAAAADKDAAAAAAAAAAAAADKDAAAAAAAAMsMAAAAAAAAAAAAAMsMAAAAAAAAzQwAAAAAAAAAAAAAyAwAAAAAAADIDAAAAAAAAAIAAAAgIMsMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADNDAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANEMAAAAAAAAAAAAANEMAAAAAAAA0gwAAAAAAAAAAAAA0gwAAAAAAADTDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwwAAAAAAADHDAAAAAAAAP///////+9/"
				],
				[
					519,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANMMAAAAAAAA1QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wwAAAAAAADTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					521,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANUMAAAAAAAA1gwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QwAAAAAAADVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					539,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAMkMAAAAAAAAygwAAAAAAAAAAAAAygwAAAAAAADKDAAAAAAAAA4AAAAgIHN0ZC5leGl0KCk7Cg",
					"AQAAAAAAAAABAAAAyQwAAAAAAADXDAAAAAAAAAAAAAAAAPC/"
				],
				[
					542,
					1,
					"paste",
					null,
					"AgAAAAoHAAAAAAAApQcAAAAAAAAAAAAApQcAAAAAAAClBwAAAAAAALAAAAAgewogICAgICBjb2xvcnM6IHRydWUsCiAgICAgIGRlcHRoOiAyLAogICAgICBtYXhBcnJheUxlbmd0aDogMTAwLAogICAgICBtYXhTdHJpbmdMZW5ndGg6IDEwMCwKICAgICAgY29tcGFjdDogMiwKICAgICAgc3RyaW5nQnJlYWtOZXdsaW5lOiBmYWxzZSwKICAgICAgY3VzdG9tSW5zcGVjdDogdHJ1ZQogICAgfQ",
					"AQAAAAAAAAABAAAACgcAAAAAAAC6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAA4HAAAAAAAADwcAAAAAAAAAAAAADwcAAAAAAAAPBwAAAAAAABkAAAAgIC8qYnJlYWtMZW5ndGg6IDI0MCwgKi8g",
					"AQAAAAAAAAABAAAADgcAAAAAAAAnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					546,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABIDQAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICdkZWVwJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCBSRVBMIGZyb20gJy4vbGliL3JlcGwuanMnOwppbXBvcnQgaW5zcGVjdCBmcm9tICdpbnNwZWN0JzsKaW1wb3J0IHsgZXh0ZW5kQXJyYXkgfSBmcm9tICd1dGlsJzsKCmNvbnN0IGJhc2UgPSBwYXRoLmJhc2VuYW1lKHNjcmlwdEFyZ3NbMF0sIC9cLlthLXpdKiQvKTsKY29uc3QgY21kaGlzdCA9IGAuaGlzdG9yeS0ke2Jhc2V9YDsKCmV4dGVuZEFycmF5KEFycmF5LnByb3RvdHlwZSk7CgpmdW5jdGlvbiBMb2FkSGlzdG9yeShmaWxlbmFtZSkgewogIGxldCBjb250ZW50cyA9IHN0ZC5sb2FkRmlsZShmaWxlbmFtZSk7CiAgbGV0IGRhdGE7CgogIGNvbnN0IHBhcnNlID0gKCkgPT4gewogICAgdHJ5IHsKICAgICAgZGF0YSA9IEpTT04ucGFyc2UoY29udGVudHMpOwogICAgfSBjYXRjaChlKSB7fQogICAgaWYoZGF0YSkgcmV0dXJuIGRhdGE7CiAgICB0cnkgewogICAgICBkYXRhID0gY29udGVudHMuc3BsaXQoL1xuL2cpOwogICAgfSBjYXRjaChlKSB7fQogICAgaWYoZGF0YSkgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIChwYXJzZSgpID8/IFtdKQogICAgLmZpbHRlcihlbnRyeSA9PiAoZW50cnkgKyAnJykudHJpbSgpICE9ICcnKQogICAgLm1hcChlbnRyeSA9PiBlbnRyeS5yZXBsYWNlKC9cXG4vZywgJ1xuJykpOwp9CgpmdW5jdGlvbiBSZWFkSlNPTihmaWxlbmFtZSkgewogIGxldCBkYXRhID0gc3RkLmxvYWRGaWxlKGZpbGVuYW1lKTsKCiAgaWYoZGF0YSkgY29uc29sZS5sb2coYFJlYWRKU09OKCcke2ZpbGVuYW1lfScpICR7ZGF0YS5sZW5ndGh9IGJ5dGVzIHJlYWRgKTsKICByZXR1cm4gZGF0YSA/IEpTT04ucGFyc2UoZGF0YSkgOiBudWxsOwp9CgpmdW5jdGlvbiBSZWFkRmlsZShuYW1lLCBiaW5hcnkpIHsKICBsZXQgZGF0YSA9IGZzLnJlYWRGaWxlU3luYyhuYW1lLCBiaW5hcnkgPyBudWxsIDogJ3V0Zi04Jyk7CgogIGNvbnNvbGUubG9nKGBSZWFkICR7bmFtZX06ICR7ZGF0YS5sZW5ndGh9IGJ5dGVzYCk7CgogIHJldHVybiBPYmplY3QuY3JlYXRlKG51bGwsIHsKICAgIGRhdGE6IHsgdmFsdWU6IGRhdGEsIGVudW1lcmFibGU6IGZhbHNlIH0sCiAgICBnZXROb2RlOiB7CiAgICAgIHZhbHVlKG5vZGUpIHsKICAgICAgICBjb25zdCB7IHN0YXJ0LCBlbmQgfSA9IG5vZGU7CiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS5zbGljZShzdGFydCwgZW5kKTsKICAgICAgfSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9LAogICAgdG9TdHJpbmc6IHsKICAgICAgdmFsdWUoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YTsKICAgICAgfSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIFdyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkgewogIGlmKHR5cGVvZiBkYXRhID09ICdzdHJpbmcnICYmICFkYXRhLmVuZHNXaXRoKCdcbicpKSBkYXRhICs9ICdcbic7CiAgbGV0IHJldCA9IGZzLndyaXRlRmlsZVN5bmMobmFtZSwgZGF0YSk7CgogIGlmKHZlcmJvc2UpIGNvbnNvbGUubG9nKGBXcm90ZSAke25hbWV9OiAke3JldH0gYnl0ZXNgKTsKfQpmdW5jdGlvbiBtYWluKC4uLmFyZ3MpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBpbnNwZWN0T3B0aW9uczp7CiAgIGN1c3RvbUluc3BlY3Q6IHRydWUsCiAgICBjb21wYWN0OiBmYWxzZSwKICAgIGRlcHRoOiBJbmZpbml0eSwKICAgIG1heEFycmF5TGVuZ3RoOiBJbmZpbml0eSwKICAgIGhpZGVLZXlzOiBbJ2xvYycsICdyYW5nZSddCiAgfQogIH0pOwogIGxldCBuYW1lID0gcGF0aC5iYXNlbmFtZShzY3JpcHRBcmdzWzBdLCAnLmpzJyk7CiAgbGV0IHJlcGwgPSBuZXcgUkVQTChuYW1lKTsKICBjb25zb2xlLmxvZygncmVwbCcsIHJlcGwpOwogIHJlcGwuaGVscCA9ICgpID0+IHt9OwogIGxldCB7IGxvZyB9ID0gY29uc29sZTsKICByZXBsLnNob3cgPSBhcmcgPT4gc3RkLnB1dHModHlwZW9mIGFyZyA9PSAnc3RyaW5nJyA/IGFyZyA6IGluc3BlY3QoYXJnLCB7IGNvbG9yczogdHJ1ZSB9KSk7CgogIHJlcGwuY2xlYW51cCA9ICgpID0+IHsKICAgIFRlcm1pbmFsLm1vdXNldHJhY2tpbmdEaXNhYmxlKCk7CiAgICBsZXQgaGlzdCA9IHJlcGwuaGlzdG9yeV9nZXQoKS5maWx0ZXIoKGl0ZW0sIGksIGEpID0+IGEubGFzdEluZGV4T2YoaXRlbSkgPT0gaSk7CiAgICBmcy53cml0ZUZpbGVTeW5jKAogICAgICBjbWRoaXN0LAogICAgICBoaXN0CiAgICAgICAgLmZpbHRlcihlbnRyeSA9PiAoZW50cnkgKyAnJykudHJpbSgpICE9ICcnKQogICAgICAgIC5tYXAoZW50cnkgPT4gZW50cnkucmVwbGFjZSgvXG4vZywgJ1xcbicpICsgJ1xuJykKICAgICAgICAuam9pbignJykKICAgICk7CiAgICBjb25zb2xlLmxvZyhgRVhJVCAod3JvdGUgJHtoaXN0Lmxlbmd0aH0gaGlzdG9yeSBlbnRyaWVzKWApOwogICAgc3RkLmV4aXQoMCk7CiAgfTsKICBsZXQgZGVidWdMb2cgPSBmcy5mb3BlbignZGVidWcubG9nJywgJ2EnKTsKICByZXBsLmRlYnVnTG9nID0gZGVidWdMb2c7CiAgLy8gIGNvbnNvbGUubG9nID0gcmVwbC53cmFwUHJpbnRGdW5jdGlvbihsb2csIGNvbnNvbGUpOwoKICAvKm9zLnR0eVNldFJhdygwLCB0cnVlKTsKICBvcy5zZXRSZWFkSGFuZGxlcigwLCAoKSA9PiByZXBsLnRlcm1fcmVhZF9oYW5kbGVyKCkpOwoqLwogIGNvbnNvbGUubG9nKCdyZXBsLnJ1bigpJywgcmVwbC5ydW5TeW5jKG5hbWUpKTsKCiAgLyogIGxldCBjbGllbnQgPSBuZXcgcnBjLlNvY2tldCgpOwogIGNsaWVudC5sb2cgPSByZXBsLndyYXBQcmludEZ1bmN0aW9uKGxvZywgY29uc29sZSk7CgogIGltcG9ydCgnb3MnKS50aGVuKG9zID0+CiAgICBpbXBvcnQoJ25ldCcpLnRoZW4oKHsgY2xpZW50IH0pID0+CiAgICAgIGNsaWVudC5jb25uZWN0KCh1cmwsIGNhbGxiYWNrcykgPT4gY2xpZW50KHsgLi4udXJsLCAuLi5jYWxsYmFja3MgfSksIG9zKQogICAgKQogICk7CiAgY29uc29sZS5sb2coJ2NsaWVudCcsIGNsaWVudCk7Ki8KCiAgT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7IHJlcGwsIFdyaXRlRmlsZSwgUmVhZEZpbGUsIFJlYWRKU09OIH0pOwoKIH0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIHN0ZC5lcnIucHV0cyhgRkFJTDogJHtlcnJvci5tZXNzYWdlfVxuJHtlcnJvci5zdGFja31gKTsKICBzdGQuZXhpdCgxKTsKfSBmaW5hbGx5IHsKICBjb25zb2xlLmxvZygnU1VDQ0VTUycpOwp9CgAAAAAAAAAAVA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwcAAAAAAAAPBwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 9359,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AQAAAH4gAAAAAAAAYiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfiAAAAAAAAB+IAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"cut",
					null,
					"AQAAAOgiAAAAAAAA6CIAAAAAAAAYAAAAdXRpbC5tZW1vaXplID0gbWVtb2l6ZTsK",
					"AQAAAAAAAAABAAAA6CIAAAAAAAAAIwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					2,
					"paste",
					null,
					"AgAAAOgiAAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAYIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6CIAAAAAAADoIgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "def"
					},
					"BAAAAAUjAAAAAAAABiMAAAAAAAAAAAAABiMAAAAAAAAGIwAAAAAAAAcAAABtZW1vaXplBiMAAAAAAAAHIwAAAAAAAAAAAAAHIwAAAAAAAAgjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABSMAAAAAAAAMIwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert_completion",
					{
						"completion": "define",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "define"
					},
					"AgAAAAUjAAAAAAAABSMAAAAAAAADAAAAZGVmBSMAAAAAAAALIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACCMAAAAAAAAIIwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"paste",
					null,
					"AgAAAA4jAAAAAAAAFCMAAAAAAAAAAAAAFCMAAAAAAAAUIwAAAAAAAAcAAABtZW1vaXpl",
					"AQAAAAAAAAABAAAADiMAAAAAAAAVIwAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAF8hAAAAAAAAYCEAAAAAAAAAAAAAYCEAAAAAAABiIQAAAAAAAAAAAABiIQAAAAAAAGMhAAAAAAAAAAAAAGMhAAAAAAAAZCEAAAAAAAAAAAAAZCEAAAAAAABlIQAAAAAAAAAAAABlIQAAAAAAAGYhAAAAAAAAAAAAAGYhAAAAAAAAZyEAAAAAAAAAAAAAZyEAAAAAAABoIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXyEAAAAAAABfIQAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " obj;"
					},
					"BQAAAGghAAAAAAAAaSEAAAAAAAAAAAAAaSEAAAAAAABqIQAAAAAAAAAAAABqIQAAAAAAAGshAAAAAAAAAAAAAGshAAAAAAAAbCEAAAAAAAAAAAAAbCEAAAAAAABtIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaCEAAAAAAABoIQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"cut",
					null,
					"AQAAAJsgAAAAAAAAmyAAAAAAAAAFAAAAcHJvcHM",
					"AQAAAAAAAAABAAAAmyAAAAAAAACgIAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "-."
					},
					"AgAAAJsgAAAAAAAAnCAAAAAAAAAAAAAAnCAAAAAAAACdIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmyAAAAAAAACbIAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					2,
					"left_delete",
					null,
					"AgAAAJwgAAAAAAAAnCAAAAAAAAABAAAALpsgAAAAAAAAmyAAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAnSAAAAAAAACdIAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "...args"
					},
					"BwAAAJsgAAAAAAAAnCAAAAAAAAAAAAAAnCAAAAAAAACdIAAAAAAAAAAAAACdIAAAAAAAAJ4gAAAAAAAAAAAAAJ4gAAAAAAAAnyAAAAAAAAAAAAAAnyAAAAAAAACgIAAAAAAAAAAAAACgIAAAAAAAAKEgAAAAAAAAAAAAAKEgAAAAAAAAoiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmyAAAAAAAACbIAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BQAAALogAAAAAAAAuyAAAAAAAAAAAAAAuyAAAAAAAAC9IAAAAAAAAAAAAAC9IAAAAAAAAL4gAAAAAAAAAAAAAL4gAAAAAAAAvyAAAAAAAAAAAAAAvyAAAAAAAADAIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuiAAAAAAAAC6IAAAAAAAAAAAAAAA0HRA"
				],
				[
					67,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMAgAAAAAAAAwiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwCAAAAAAAADAIAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAMEgAAAAAAAAwiAAAAAAAAAAAAAAwiAAAAAAAADDIAAAAAAAAAAAAADDIAAAAAAAAMQgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwSAAAAAAAADBIAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " arg"
					},
					"BAAAAMQgAAAAAAAAxSAAAAAAAAAAAAAAxSAAAAAAAADGIAAAAAAAAAAAAADGIAAAAAAAAMcgAAAAAAAAAAAAAMcgAAAAAAAAyCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxCAAAAAAAADEIAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAMggAAAAAAAAySAAAAAAAAAAAAAAySAAAAAAAADKIAAAAAAAAAAAAADKIAAAAAAAAMsgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyCAAAAAAAADIIAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMsgAAAAAAAAzCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyyAAAAAAAADLIAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					7,
					"left_delete",
					null,
					"BwAAAMsgAAAAAAAAyyAAAAAAAAABAAAAIMogAAAAAAAAyiAAAAAAAAABAAAAZskgAAAAAAAAySAAAAAAAAABAAAAb8ggAAAAAAAAyCAAAAAAAAABAAAAIMcgAAAAAAAAxyAAAAAAAAABAAAAZ8YgAAAAAAAAxiAAAAAAAAABAAAAcsUgAAAAAAAAxSAAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAzCAAAAAAAADMIAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "props"
					},
					"BQAAAMUgAAAAAAAAxiAAAAAAAAAAAAAAxiAAAAAAAADHIAAAAAAAAAAAAADHIAAAAAAAAMggAAAAAAAAAAAAAMggAAAAAAAAySAAAAAAAAAAAAAAySAAAAAAAADKIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxSAAAAAAAADFIAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "  of"
					},
					"BAAAAMogAAAAAAAAyyAAAAAAAAAAAAAAyyAAAAAAAADMIAAAAAAAAAAAAADMIAAAAAAAAM0gAAAAAAAAAAAAAM0gAAAAAAAAziAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyiAAAAAAAADKIAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " args"
					},
					"BQAAAM4gAAAAAAAAzyAAAAAAAAAAAAAAzyAAAAAAAADQIAAAAAAAAAAAAADQIAAAAAAAANEgAAAAAAAAAAAAANEgAAAAAAAA0iAAAAAAAAAAAAAA0iAAAAAAAADTIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAziAAAAAAAADOIAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA1CAAAAAAAADUIAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/repl.js",
			"settings":
			{
				"buffer_size": 41301,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					724,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"CAAAADJCAAAAAAAAM0IAAAAAAAAAAAAAM0IAAAAAAAA1QgAAAAAAAAAAAAA1QgAAAAAAADdCAAAAAAAAAAAAADdCAAAAAAAAOEIAAAAAAAAAAAAAOEIAAAAAAAA5QgAAAAAAAAAAAAA5QgAAAAAAADpCAAAAAAAAAAAAADpCAAAAAAAAO0IAAAAAAAAAAAAAO0IAAAAAAAA8QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMkIAAAAAAAAyQgAAAAAAAAAAAAAAAPC/"
				],
				[
					725,
					1,
					"insert",
					{
						"characters": " show"
					},
					"BQAAADxCAAAAAAAAPUIAAAAAAAAAAAAAPUIAAAAAAAA+QgAAAAAAAAAAAAA+QgAAAAAAAD9CAAAAAAAAAAAAAD9CAAAAAAAAQEIAAAAAAAAAAAAAQEIAAAAAAABBQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPEIAAAAAAAA8QgAAAAAAAAAAAAAAAPC/"
				],
				[
					726,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEFCAAAAAAAAQkIAAAAAAAAAAAAAQkIAAAAAAABDQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQUIAAAAAAABBQgAAAAAAAAAAAAAAAPC/"
				],
				[
					727,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAENCAAAAAAAAREIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQ0IAAAAAAABDQgAAAAAAAAAAAAAAAPC/"
				],
				[
					728,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAERCAAAAAAAARkIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAREIAAAAAAABEQgAAAAAAAAAAAAAAAPC/"
				],
				[
					730,
					1,
					"left_delete",
					null,
					"AQAAAEVCAAAAAAAARUIAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAARkIAAAAAAABGQgAAAAAAAAAAAAAAAPC/"
				],
				[
					731,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"AwAAAEVCAAAAAAAARkIAAAAAAAAAAAAARkIAAAAAAABHQgAAAAAAAAAAAABHQgAAAAAAAEhCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARUIAAAAAAABFQgAAAAAAAAAAAAAAAPC/"
				],
				[
					732,
					4,
					"left_delete",
					null,
					"BAAAAEdCAAAAAAAAR0IAAAAAAAABAAAAZ0ZCAAAAAAAARkIAAAAAAAABAAAAckVCAAAAAAAARUIAAAAAAAABAAAAYURCAAAAAAAAREIAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAASEIAAAAAAABIQgAAAAAAAAAAAAAAAPC/"
				],
				[
					733,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"AwAAAERCAAAAAAAARUIAAAAAAAAAAAAARUIAAAAAAABGQgAAAAAAAAAAAABGQgAAAAAAAEdCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAREIAAAAAAABEQgAAAAAAAAAAAAAAAPC/"
				],
				[
					734,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAEdCAAAAAAAASEIAAAAAAAAAAAAASEIAAAAAAABJQgAAAAAAAAAAAABJQgAAAAAAAEpCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAR0IAAAAAAABHQgAAAAAAAAAAAAAAAPC/"
				],
				[
					735,
					1,
					"insert",
					{
						"characters": " this."
					},
					"BgAAAEpCAAAAAAAAS0IAAAAAAAAAAAAAS0IAAAAAAABMQgAAAAAAAAAAAABMQgAAAAAAAE1CAAAAAAAAAAAAAE1CAAAAAAAATkIAAAAAAAAAAAAATkIAAAAAAABPQgAAAAAAAAAAAABPQgAAAAAAAFBCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASkIAAAAAAABKQgAAAAAAAAAAAAAAAPC/"
				],
				[
					738,
					1,
					"insert",
					{
						"characters": "std.puts"
					},
					"CQAAAEtCAAAAAAAATEIAAAAAAAAAAAAATEIAAAAAAABMQgAAAAAAAAUAAAB0aGlzLkxCAAAAAAAATUIAAAAAAAAAAAAATUIAAAAAAABOQgAAAAAAAAAAAABOQgAAAAAAAE9CAAAAAAAAAAAAAE9CAAAAAAAAUEIAAAAAAAAAAAAAUEIAAAAAAABRQgAAAAAAAAAAAABRQgAAAAAAAFJCAAAAAAAAAAAAAFJCAAAAAAAAU0IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAS0IAAAAAAABQQgAAAAAAAAAAAAAAAPC/"
				],
				[
					739,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFNCAAAAAAAAVUIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAU0IAAAAAAABTQgAAAAAAAAAAAAAAAPC/"
				],
				[
					740,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"AwAAAFRCAAAAAAAAVUIAAAAAAAAAAAAAVUIAAAAAAABWQgAAAAAAAAAAAABWQgAAAAAAAFdCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVEIAAAAAAABUQgAAAAAAAAAAAAAAAPC/"
				],
				[
					742,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFhCAAAAAAAAWUIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWEIAAAAAAABYQgAAAAAAAAAAAAAAAPC/"
				],
				[
					743,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFlCAAAAAAAAWkIAAAAAAAAAAAAAWkIAAAAAAABeQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWUIAAAAAAABZQgAAAAAAAAAAAAAAAPC/"
				],
				[
					747,
					2,
					"right_delete",
					null,
					"AwAAAMBCAAAAAAAAwEIAAAAAAAAEAAAAdGhpc1pCAAAAAAAAWkIAAAAAAAAEAAAAICAgILxCAAAAAAAAvEIAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAwEIAAAAAAADEQgAAAAAAAAAAAAAAAPC/"
				],
				[
					751,
					2,
					"right_delete",
					null,
					"AgAAACBDAAAAAAAAIEMAAAAAAAAEAAAAdGhpcyBDAAAAAAAAIEMAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAIEMAAAAAAAAkQwAAAAAAAAAAAAAAAPC/"
				],
				[
					813,
					1,
					"left_delete",
					null,
					"AQAAABlFAAAAAAAAGUUAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAGkUAAAAAAAAaRQAAAAAAAAAAAAAAAPC/"
				],
				[
					814,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAABlFAAAAAAAAGkUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGUUAAAAAAAAZRQAAAAAAAAAAAAAAAPC/"
				],
				[
					817,
					1,
					"left_delete",
					null,
					"AQAAACpFAAAAAAAAKkUAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAK0UAAAAAAAArRQAAAAAAAAAAAAAAAPC/"
				],
				[
					818,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAACpFAAAAAAAAK0UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKkUAAAAAAAAqRQAAAAAAAAAAAAAAAPC/"
				],
				[
					835,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7UQAAAAAAAA6RQAAAAAAAAAAAAAAAPC/"
				],
				[
					842,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACpFAAAAAAAAK0UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKkUAAAAAAAAqRQAAAAAAAAAAAAAAAPC/"
				],
				[
					843,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACtFAAAAAAAALEUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAK0UAAAAAAAArRQAAAAAAAAAAAAAAAPC/"
				],
				[
					844,
					1,
					"insert",
					{
						"characters": "inspectOptions"
					},
					"DgAAACxFAAAAAAAALUUAAAAAAAAAAAAALUUAAAAAAAAuRQAAAAAAAAAAAAAuRQAAAAAAAC9FAAAAAAAAAAAAAC9FAAAAAAAAMEUAAAAAAAAAAAAAMEUAAAAAAAAxRQAAAAAAAAAAAAAxRQAAAAAAADJFAAAAAAAAAAAAADJFAAAAAAAAM0UAAAAAAAAAAAAAM0UAAAAAAAA0RQAAAAAAAAAAAAA0RQAAAAAAADVFAAAAAAAAAAAAADVFAAAAAAAANkUAAAAAAAAAAAAANkUAAAAAAAA3RQAAAAAAAAAAAAA3RQAAAAAAADhFAAAAAAAAAAAAADhFAAAAAAAAOUUAAAAAAAAAAAAAOUUAAAAAAAA6RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALEUAAAAAAAAsRQAAAAAAAAAAAAAAAPC/"
				],
				[
					857,
					1,
					"paste",
					null,
					"AQAAAOZDAAAAAAAA9EMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5kMAAAAAAADmQwAAAAAAAAAAAAAAAPC/"
				],
				[
					859,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAOZDAAAAAAAA50MAAAAAAAAAAAAA50MAAAAAAADoQwAAAAAAAAAAAADoQwAAAAAAAOlDAAAAAAAAAAAAAOlDAAAAAAAA6kMAAAAAAAAAAAAA6kMAAAAAAADrQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5kMAAAAAAADmQwAAAAAAAAAAAAAAAAAA"
				],
				[
					860,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOtDAAAAAAAA7EMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA60MAAAAAAADrQwAAAAAAAAAAAAAAAPC/"
				],
				[
					862,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAPpDAAAAAAAA+0MAAAAAAAAAAAAA+0MAAAAAAAD8QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+kMAAAAAAAD6QwAAAAAAAP///////+9/"
				],
				[
					863,
					1,
					"left_delete",
					null,
					"AQAAAPtDAAAAAAAA+0MAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA/EMAAAAAAAD8QwAAAAAAAAAAAAAAAPC/"
				],
				[
					864,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAPtDAAAAAAAA/EMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+0MAAAAAAAD7QwAAAAAAAAAAAAAAAPC/"
				],
				[
					865,
					1,
					"insert",
					{
						"characters": " console.options"
					},
					"EAAAAPxDAAAAAAAA/UMAAAAAAAAAAAAA/UMAAAAAAAD+QwAAAAAAAAAAAAD+QwAAAAAAAP9DAAAAAAAAAAAAAP9DAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAAERAAAAAAAAAAAAAAERAAAAAAAAAVEAAAAAAAAAAAAAAVEAAAAAAAABkQAAAAAAAAAAAAABkQAAAAAAAAHRAAAAAAAAAAAAAAHRAAAAAAAAAhEAAAAAAAAAAAAAAhEAAAAAAAACUQAAAAAAAAAAAAACUQAAAAAAAAKRAAAAAAAAAAAAAAKRAAAAAAAAAtEAAAAAAAAAAAAAAtEAAAAAAAADEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/EMAAAAAAAD8QwAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"insert",
					{
						"characters": " ||"
					},
					"AwAAAAxEAAAAAAAADUQAAAAAAAAAAAAADUQAAAAAAAAORAAAAAAAAAAAAAAORAAAAAAAAA9EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADEQAAAAAAAAMRAAAAAAAAAAAAAAAAPC/"
				],
				[
					867,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA9EAAAAAAAAEEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAD0QAAAAAAAAPRAAAAAAAAAAAAAAAAPC/"
				],
				[
					868,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABBEAAAAAAAAEkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEEQAAAAAAAAQRAAAAAAAAAAAAAAAAPC/"
				],
				[
					869,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABFEAAAAAAAAEkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEUQAAAAAAAARRAAAAAAAAAAAAAAAAPC/"
				],
				[
					870,
					1,
					"paste",
					null,
					"AQAAABJEAAAAAAAAlkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEkQAAAAAAAASRAAAAAAAAAAAAAAAAPC/"
				],
				[
					874,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAADhEAAAAAAAAOUQAAAAAAAAAAAAAOUQAAAAAAAA5RAAAAAAAAAUAAABmYWxzZQ",
					"AQAAAAAAAAABAAAAPUQAAAAAAAA4RAAAAAAAAAAAAAAAAPC/"
				],
				[
					879,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AwAAAEhEAAAAAAAASUQAAAAAAAAAAAAASUQAAAAAAABJRAAAAAAAAAgAAABJbmZpbml0eUlEAAAAAAAASkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASEQAAAAAAABQRAAAAAAAAAAAAAAAAPC/"
				],
				[
					882,
					1,
					"insert",
					{
						"characters": "50"
					},
					"AgAAAGJEAAAAAAAAY0QAAAAAAAAAAAAAY0QAAAAAAABkRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYkQAAAAAAABiRAAAAAAAAAAAAAAAAPC/"
				],
				[
					883,
					2,
					"left_delete",
					null,
					"AgAAAGNEAAAAAAAAY0QAAAAAAAABAAAAMGJEAAAAAAAAYkQAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAZEQAAAAAAABkRAAAAAAAAAAAAAAAAPC/"
				],
				[
					884,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAGJEAAAAAAAAY0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYkQAAAAAAABiRAAAAAAAAAAAAAAAAPC/"
				],
				[
					885,
					1,
					"left_delete",
					null,
					"AQAAAGJEAAAAAAAAYkQAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAY0QAAAAAAABjRAAAAAAAAAAAAAAAAPC/"
				],
				[
					886,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAGJEAAAAAAAAY0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYkQAAAAAAABiRAAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"left_delete",
					null,
					"AQAAAGJEAAAAAAAAYkQAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAY0QAAAAAAABjRAAAAAAAAAAAAAAAAPC/"
				],
				[
					888,
					1,
					"insert",
					{
						"characters": "40"
					},
					"AgAAAGJEAAAAAAAAY0QAAAAAAAAAAAAAY0QAAAAAAABkRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYkQAAAAAAABiRAAAAAAAAAAAAAAAAPC/"
				],
				[
					890,
					1,
					"insert",
					{
						"characters": ","
					},
					"AgAAAGREAAAAAAAAZUQAAAAAAAAAAAAAZUQAAAAAAABlRAAAAAAAAAkAAABJbmZpbml0eSw",
					"AQAAAAAAAAABAAAAZEQAAAAAAABtRAAAAAAAAP///////+9/"
				],
				[
					891,
					1,
					"insert",
					{
						"characters": "\nmaxStringLength:"
					},
					"EgAAAGVEAAAAAAAAZkQAAAAAAAAAAAAAZkQAAAAAAABsRAAAAAAAAAAAAABsRAAAAAAAAG1EAAAAAAAAAAAAAG1EAAAAAAAAbkQAAAAAAAAAAAAAbkQAAAAAAABvRAAAAAAAAAAAAABvRAAAAAAAAHBEAAAAAAAAAAAAAHBEAAAAAAAAcUQAAAAAAAAAAAAAcUQAAAAAAAByRAAAAAAAAAAAAAByRAAAAAAAAHNEAAAAAAAAAAAAAHNEAAAAAAAAdEQAAAAAAAAAAAAAdEQAAAAAAAB1RAAAAAAAAAAAAAB1RAAAAAAAAHZEAAAAAAAAAAAAAHZEAAAAAAAAd0QAAAAAAAAAAAAAd0QAAAAAAAB4RAAAAAAAAAAAAAB4RAAAAAAAAHlEAAAAAAAAAAAAAHlEAAAAAAAAekQAAAAAAAAAAAAAekQAAAAAAAB7RAAAAAAAAAAAAAB7RAAAAAAAAHxEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZUQAAAAAAABlRAAAAAAAAAAAAAAAAPC/"
				],
				[
					892,
					1,
					"insert",
					{
						"characters": " 120,"
					},
					"BQAAAHxEAAAAAAAAfUQAAAAAAAAAAAAAfUQAAAAAAAB+RAAAAAAAAAAAAAB+RAAAAAAAAH9EAAAAAAAAAAAAAH9EAAAAAAAAgEQAAAAAAAAAAAAAgEQAAAAAAACBRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfEQAAAAAAAB8RAAAAAAAAAAAAAAAAPC/"
				],
				[
					894,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAK1EAAAAAAAArkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArUQAAAAAAACtRAAAAAAAAAAAAAAAYG5A"
				],
				[
					895,
					1,
					"left_delete",
					null,
					"AQAAAK1EAAAAAAAArUQAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAArkQAAAAAAACuRAAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKNEAAAAAAAApEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAo0QAAAAAAACjRAAAAAAAAP///////+9/"
				],
				[
					899,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAApEQAAAAAAACkRAAAAAAAAAAAAAAAAPC/"
				],
				[
					915,
					3,
					"toggle_comment",
					{
						"block": true
					},
					"BgAAABREAAAAAAAAFkQAAAAAAAAAAAAAAUQAAAAAAAADRAAAAAAAAAAAAAABRAAAAAAAAAFEAAAAAAAAAgAAAC8qFEQAAAAAAAAURAAAAAAAAAIAAAAqLxREAAAAAAAAFkQAAAAAAAAAAAAAAUQAAAAAAAADRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAUQAAAAAAAAURAAAAAAAAAAAAAAAAPC/"
				],
				[
					925,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADBDAAAAAAAAMUMAAAAAAAAAAAAAMUMAAAAAAAA1QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMEMAAAAAAAAwQwAAAAAAAAAAAAAAAPC/"
				],
				[
					929,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AwAAAElEAAAAAAAASkQAAAAAAAAAAAAASkQAAAAAAABKRAAAAAAAAAEAAAAxMUMAAAAAAAAxQwAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAASUQAAAAAAABKRAAAAAAAAAAAAAAAAPC/"
				],
				[
					931,
					1,
					"insert",
					{
						"characters": "\nbreakLength:"
					},
					"DgAAAFhEAAAAAAAAWUQAAAAAAAAAAAAAWUQAAAAAAABfRAAAAAAAAAAAAABfRAAAAAAAAGBEAAAAAAAAAAAAAGBEAAAAAAAAYUQAAAAAAAAAAAAAYUQAAAAAAABiRAAAAAAAAAAAAABiRAAAAAAAAGNEAAAAAAAAAAAAAGNEAAAAAAAAZEQAAAAAAAAAAAAAZEQAAAAAAABlRAAAAAAAAAAAAABlRAAAAAAAAGZEAAAAAAAAAAAAAGZEAAAAAAAAZ0QAAAAAAAAAAAAAZ0QAAAAAAABoRAAAAAAAAAAAAABoRAAAAAAAAGlEAAAAAAAAAAAAAGlEAAAAAAAAakQAAAAAAAAAAAAAakQAAAAAAABrRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWEQAAAAAAABYRAAAAAAAAAAAAAAAAGJA"
				],
				[
					932,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGtEAAAAAAAAbEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAa0QAAAAAAABrRAAAAAAAAAAAAAAAAPC/"
				],
				[
					933,
					1,
					"insert",
					{
						"characters": "Infiniy,"
					},
					"CAAAAGxEAAAAAAAAbUQAAAAAAAAAAAAAbUQAAAAAAABuRAAAAAAAAAAAAABuRAAAAAAAAG9EAAAAAAAAAAAAAG9EAAAAAAAAcEQAAAAAAAAAAAAAcEQAAAAAAABxRAAAAAAAAAAAAABxRAAAAAAAAHJEAAAAAAAAAAAAAHJEAAAAAAAAc0QAAAAAAAAAAAAAc0QAAAAAAAB0RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbEQAAAAAAABsRAAAAAAAAAAAAAAAAPC/"
				],
				[
					934,
					2,
					"left_delete",
					null,
					"AgAAAHNEAAAAAAAAc0QAAAAAAAABAAAALHJEAAAAAAAAckQAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAdEQAAAAAAAB0RAAAAAAAAAAAAAAAAPC/"
				],
				[
					935,
					1,
					"insert",
					{
						"characters": "ty,l"
					},
					"BAAAAHJEAAAAAAAAc0QAAAAAAAAAAAAAc0QAAAAAAAB0RAAAAAAAAAAAAAB0RAAAAAAAAHVEAAAAAAAAAAAAAHVEAAAAAAAAdkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAckQAAAAAAAByRAAAAAAAAAAAAAAAAPC/"
				],
				[
					936,
					1,
					"left_delete",
					null,
					"AQAAAHVEAAAAAAAAdUQAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAdkQAAAAAAAB2RAAAAAAAAAAAAAAAAPC/"
				],
				[
					940,
					1,
					"insert",
					{
						"characters": "129"
					},
					"BAAAAGxEAAAAAAAAbUQAAAAAAAAAAAAAbUQAAAAAAABtRAAAAAAAAAgAAABJbmZpbml0eW1EAAAAAAAAbkQAAAAAAAAAAAAAbkQAAAAAAABvRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbEQAAAAAAAB0RAAAAAAAAAAAAAAAAPC/"
				],
				[
					941,
					1,
					"left_delete",
					null,
					"AQAAAG5EAAAAAAAAbkQAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAb0QAAAAAAABvRAAAAAAAAAAAAAAAAPC/"
				],
				[
					942,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAG5EAAAAAAAAb0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbkQAAAAAAABuRAAAAAAAAAAAAAAAAPC/"
				],
				[
					948,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAEVEAAAAAAAARkQAAAAAAAAAAAAARkQAAAAAAABGRAAAAAAAAAEAAAAy",
					"AQAAAAAAAAABAAAARUQAAAAAAABGRAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/terminal.js",
			"settings":
			{
				"buffer_size": 3919,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/modules",
		"/home/roman/Projects/plot-cv/quickjs/modules/bin",
		"/home/roman/Projects/plot-cv/quickjs/modules/build",
		"/home/roman/Projects/plot-cv/quickjs/modules/DuckTales",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/lib/core-net/pollfd.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/build/x86_64-linux-gnu/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/READMEs/README.coding.md",
		"/home/roman/Projects/plot-cv/quickjs/modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/stack.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-path.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.c",
		"/home/roman/Sources/opencv/modules/core/include/opencv2/core/mat.inl.hpp",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.h",
		"/opt/opencv-4.5.0/include/opencv4/opencv2/core/mat.hpp",
		"/home/roman/.config/sublime-text/Packages/User/Themes/TronLegacy.tmTheme",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_qjsm.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_mmap.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/base64.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lexer.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/defs.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_parser.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_console.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_stack.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/.clang-format",
		"/home/roman/Projects/plot-cv/quickjs/modules/virtual-properties.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_inspect.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_op_overloading.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_performance.js",
		"/home/roman/Projects/plot-cv/quickjs/libregexp.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/perf_hooks.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/functions.cmake",
		"/home/roman/Sources/opencv_contrib/modules/ximgproc/src/fast_line_detector.cpp",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/iteration.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/property-enumeration.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/property-enumeration.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/ANSI-C-grammar-2011.l",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/Shell-Grammar.l",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_deep.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/bnflexer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_fs.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_path.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_predicate.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_treewalker.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_bjson.js",
		"/home/roman/Projects/c-img/yimg/stb_image.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/Shell-Grammar.y",
		"/home/roman/Projects/node/lib/internal/util/inspect.js",
		"/home/roman/Projects/node/lib/internal/util/types.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/usr.list",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-deep.c.orig",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/libbf.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/build/x86_64-linux-gnu/require.c",
		"/home/roman/Projects/plot-cv/lib/grammars/JSON5.g4",
		"/home/roman/Projects/plot-cv/lib/grammars/CMake.g4",
		"/home/roman/Projects/plot-cv/lib/grammars/Lua.g4",
		"/home/roman/Projects/plot-cv/quickjs/modules/build/x86_64-linux-gnu/console.c",
		"/home/roman/Projects/plot-cv/lib/grammars/c11-parser.y",
		"/home/roman/Projects/plot-cv/lib/grammars/c11-scanner.l"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 99.0,
		"where_history":
		[
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"function printCsi",
			"printCsi",
			"x1b",
			"termInit",
			"TTY",
			"termReadHandler",
			"setRead",
			"constructor",
			"runSync",
			"dupstr",
			"alert",
			"([^.])last_cmd",
			"([^.])cmd",
			"cmd",
			"this.history\\.",
			"history\\.",
			"this.level",
			"this\\.cmd",
			"var this\\.",
			"this\\.",
			"([^.])prompt",
			"var this\\.",
			"var ",
			"\\.pushStat",
			"getContextObj",
			"[^a-z]g\\.",
			" g\\.",
			"g\\.",
			"this.evalAnd",
			"evalAnd",
			"handleKey",
			"readlineHandleCmd",
			"handleCmd\\(",
			"readline_cb",
			"readlineStart",
			"handleCmd",
			"readlineHandleCmd",
			"acceptLine",
			"isDigit",
			"handleKey",
			"historyAdd",
			"this.commands",
			"commands",
			"handleKey",
			"input",
			"return",
			"contains",
			"sigintHandler",
			"handleByte",
			"repl",
			"config_numcal",
			"this\\.",
			"function this\\.",
			"var ",
			"repl.js",
			"events\\[event\\]",
			"^\\s*isArray",
			"isObj",
			"^\\s*isObject",
			"isObject",
			"on\\(",
			"events\\[event\\]",
			"this.events",
			"self\\.",
			"self.(.*) = function",
			"this.PRIVATE.\\.listeners",
			"this\\.events",
			"EventEmitter.prototype.([^. ]*) = function",
			"util\\.",
			"util",
			"util.js",
			"util",
			"jsm_std_dump_error",
			"ADD_POLL",
			"lexer_handle",
			"select",
			"vector_put",
			"call_handler",
			"jsm_std_dump",
			"os_pending_signals",
			"jsm_os_poll",
			"jsm_std_dump_error",
			"jsm_load_script",
			"js_std_loop",
			"handle_posted",
			"std_loop",
			"WorkerMessageHandler",
			"WorkerMessage",
			"msg_handler",
			"js_worker_get_onmessage",
			"\"onmessage",
			"jsm_list_modules",
			"jsm_module_loader_path",
			"jsm_context_new",
			"js_std_set_worker_new_context_func",
			"path_object",
			"jsm_builtin_native",
			"JS_NewCustomContext",
			"load_std",
			"jsm_module_find",
			"JSModuleDef",
			"JSJobFunc",
			"std_loop",
			"LISTEN_ADDRES",
			"LISTEN_ADDRESSS",
			"waitWrite",
			"js_child_process_cons",
			"cwd",
			"cwd =",
			"inspect",
			"^\\s*printf",
			"IteratorValue",
			"pointer_concat",
			"js_iterator_new",
			"iterate",
			"iterable",
			"METHOD_PUSH",
			"fromAtoms",
			"pointer_from",
			"DataFunc",
			"pointer_from",
			"js_pointer_data\\(obj\\)",
			"pointer_push",
			"METHOD_SH",
			"pointer_shift",
			"isdigit",
			"ArgsPredicate",
			"extendArray"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\1this.last_cmd",
			"\\1this.cmd",
			"level",
			"cmd",
			"  ",
			"",
			"\\1this.prompt",
			"",
			" globalThis.",
			"evalAnd",
			"commands",
			"",
			"handlers",
			"events",
			"this.",
			"\\1",
			"listeners",
			"events",
			"\\1",
			"jsm_pending_signals",
			"jsm_module_native",
			"js_pointer_data(ctx, obj)",
			"ShiftPredicate",
			".buf",
			"\\1",
			"file.close",
			"std.open",
			"js_misc_free_arraybuffer",
			"JS_SetPropertyStr",
			"jsm_load_module",
			"",
			"_?",
			"sockets",
			"qjsc_perf_hooks",
			"output->",
			"output",
			"\\1//printf",
			"",
			"sizeSync",
			"CreateOperatorSet",
			"",
			"loc",
			"location",
			"loc->",
			"jsm_load_package_json",
			"tmp",
			"    ",
			"  ",
			"BOOL\\njs_is_",
			"GeneratorPrototype",
			"SetIteratorPrototype",
			"MapIteratorPrototype",
			"hasBuiltIn",
			"hbiTs",
			"sSl",
			"ccAt",
			"formatNumber(",
			"isObject(value) && ",
			"pointer_toarray( ptr, ctx)",
			"moduleStack.size",
			"require('${m}')",
			"globalThis.code ?? 'C'",
			"code",
			"fs.",
			"jsm_load_script",
			"jsm_load_file",
			"require.",
			"dirname",
			"dir",
			"script",
			"this.id",
			"jsm_std_dump_error",
			"if(",
			"",
			")",
			"",
			"break;\n    }\n    \n    case",
			"lexer_continue",
			" property-enumeration.c property-enumeration.h",
			" ",
			"*",
			"jslex",
			"this."
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1626,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"color_scheme": "Packages/Outline/outline.hidden-tmTheme",
							"current_file": "/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									2704,
									2708
								],
								[
									3045,
									3062
								],
								[
									5995,
									6002
								],
								[
									6071,
									6083
								],
								[
									6159,
									6166
								],
								[
									6173,
									6187
								],
								[
									6344,
									6364
								],
								[
									6402,
									6420
								],
								[
									6475,
									6493
								],
								[
									6585,
									6599
								],
								[
									6671,
									6688
								],
								[
									6723,
									6749
								],
								[
									7731,
									7755
								],
								[
									8044,
									8062
								],
								[
									8153,
									8163
								],
								[
									8649,
									8664
								],
								[
									8827,
									8852
								],
								[
									8879,
									8904
								],
								[
									8961,
									8985
								],
								[
									9090,
									9122
								],
								[
									9339,
									9370
								],
								[
									9498,
									9529
								],
								[
									9867,
									9892
								],
								[
									10607,
									10633
								],
								[
									11362,
									11392
								],
								[
									11954,
									11985
								],
								[
									13782,
									13794
								],
								[
									15530,
									15540
								],
								[
									15764,
									15774
								],
								[
									15939,
									15951
								],
								[
									15988,
									16006
								],
								[
									16539,
									16553
								],
								[
									16772,
									16790
								],
								[
									16869,
									16880
								],
								[
									16929,
									16944
								],
								[
									17339,
									17357
								],
								[
									18465,
									18484
								],
								[
									18661,
									18674
								],
								[
									18845,
									18858
								],
								[
									18929,
									18954
								],
								[
									19783,
									19810
								],
								[
									20310,
									20337
								],
								[
									21278,
									21303
								],
								[
									21433,
									21446
								],
								[
									21909,
									21923
								],
								[
									22847,
									22862
								],
								[
									23714,
									23740
								],
								[
									26828,
									26843
								],
								[
									27849,
									27855
								],
								[
									27858,
									27877
								],
								[
									28941,
									28956
								],
								[
									29052,
									29070
								],
								[
									29418,
									29441
								],
								[
									29486,
									29508
								],
								[
									29552,
									29563
								],
								[
									29731,
									29741
								],
								[
									29809,
									29836
								],
								[
									30269,
									30279
								],
								[
									30369,
									30386
								],
								[
									31227,
									31240
								],
								[
									31421,
									31445
								],
								[
									31960,
									31977
								],
								[
									32230,
									32238
								],
								[
									32262,
									32286
								],
								[
									34611,
									34625
								],
								[
									34663,
									34686
								],
								[
									34751,
									34772
								],
								[
									34920,
									34945
								],
								[
									35653,
									35660
								],
								[
									35714,
									35727
								],
								[
									35833,
									35848
								],
								[
									35916,
									35937
								],
								[
									36088,
									36108
								],
								[
									36279,
									36289
								],
								[
									36882,
									36899
								],
								[
									37071,
									37087
								],
								[
									37429,
									37445
								],
								[
									37916,
									37928
								],
								[
									38147,
									38155
								],
								[
									39772,
									39778
								],
								[
									39817,
									39836
								],
								[
									39928,
									39947
								],
								[
									40009,
									40027
								],
								[
									40119,
									40142
								],
								[
									40543,
									40574
								],
								[
									40731,
									40756
								],
								[
									40865,
									40913
								],
								[
									41201,
									41227
								]
							],
							"symlist":
							[
								"REPL",
								"  constructor(name)",
								"  abort()",
								"  acceptLine()",
								"  alert()",
								"  backwardChar()",
								"  backwardDeleteChar()",
								"  backwardKillLine()",
								"  backwardKillWord()",
								"  backwardWord()",
								"  beginningOfLine()",
								"  bigfloatToString(a, radix)",
								"  bigintToString(a, radix)",
								"  cmdReadlineStart()",
								"  cmdStart()",
								"  colorizeJs(str)",
								"\tpushState(c)",
								"\tlastState(c)",
								"\tpopState(c)",
								"\tparseBlockComment()",
								"\tparseLineComment()",
								"\tparseString(delim)",
								"\tparseRegex()",
								"\tparseNumber()",
								"\tparseIdentifier()",
								"\tsetStyle(from, to)",
								"  completion()",
								"  controlC()",
								"  controlD()",
								"  deleteChar()",
								"  deleteCharDir(dir)",
								"  downcaseWord()",
								"  dupstr(str, count)",
								"  endOfLine()",
								"  printStatus(fn)",
								"  evalAndPrint(expr)",
								"  extractDirective(a)",
								"  forwardChar()",
								"  forwardWord()",
								"  getCompletions(line, pos)",
								"\tsymcmp(a, b)",
								"  getContextObject(line, pos)",
								"  getContextWord(line, pos)",
								"  handleByte(c)",
								"  handleChar(c1)",
								"  handleCmd(expr)",
								"  handleDirective(cmd, expr)",
								"  handleKey(keys)",
								"  help()",
								"\tsel(n)",
								"  historyAdd(str)",
								"  historySearch(dir)",
								"  historySearchBackward()",
								"  historySearchForward()",
								"  insert(str)",
								"  killLine()",
								"  killRegion(start, end, dir)",
								"  killWord()",
								"  moveCursor(delta)",
								"  nextHistory()",
								"  numberToString(a, radix)",
								"  previousHistory()",
								"  print(a)",
								"\tprintRec(a)",
								"  quotedInsert()",
								"  readlineHandleCmd(expr)",
								"  readlinePrintPrompt()",
								"  readlineStart(defstr, cb)",
								"  reset()",
								"  runSync(name)",
								"  sigintHandler()",
								"  skipWordBackward(pos)",
								"  skipWordForward(pos)",
								"  termInit()",
								"  termReadHandler()",
								"  transposeChars()",
								"  transposeWords()",
								"  upcaseWord()",
								"  update()",
								"  yank()",
								"  isAlpha(c)",
								"  isDigit(c)",
								"  isWord(c)",
								"  ucsLength(str)",
								"  isTrailingSurrogate(c)",
								"  isBalanced(a, b)",
								"  printColorText(str, start, style_names)",
								"  printCsi(n, code)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/extendArray.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1313,
						"regions":
						{
						},
						"selection":
						[
							[
								179,
								179
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test-repl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3412,
						"regions":
						{
						},
						"selection":
						[
							[
								1809,
								1941
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 918.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9359,
						"regions":
						{
						},
						"selection":
						[
							[
								8404,
								8404
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5091.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/repl.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41301,
						"regions":
						{
							"col_000080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1640,
										1648
									]
								],
								"scope": "col_000080FF"
							},
							"col_000080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_000080FF_circle.png",
								"regions":
								[
									[
										1631,
										1631
									]
								],
								"scope": "col_gutter"
							},
							"col_0000DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1864,
										1874
									]
								],
								"scope": "col_0000DDFF"
							},
							"col_0000DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000DDFF_circle.png",
								"regions":
								[
									[
										1848,
										1848
									]
								],
								"scope": "col_gutter"
							},
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1633,
										1637
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										1631,
										1631
									]
								],
								"scope": "col_gutter"
							},
							"col_008000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1590,
										1595
									],
									[
										1598,
										1606
									],
									[
										2227,
										2232
									]
								],
								"scope": "col_008000FF"
							},
							"col_008000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_008000FF_circle.png",
								"regions":
								[
									[
										1588,
										1588
									],
									[
										2216,
										2216
									]
								],
								"scope": "col_gutter"
							},
							"col_008080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1683,
										1691
									]
								],
								"scope": "col_008080FF"
							},
							"col_008080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_008080FF_circle.png",
								"regions":
								[
									[
										1674,
										1674
									]
								],
								"scope": "col_gutter"
							},
							"col_00DD00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1804,
										1814
									]
								],
								"scope": "col_00DD00FF"
							},
							"col_00DD00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DD00FF_circle.png",
								"regions":
								[
									[
										1787,
										1787
									]
								],
								"scope": "col_gutter"
							},
							"col_00DDDDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1925,
										1935
									]
								],
								"scope": "col_00DDDDFF"
							},
							"col_00DDDDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DDDDFF_circle.png",
								"regions":
								[
									[
										1909,
										1909
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1676,
										1680
									]
								],
								"scope": "col_00FFFFFF"
							},
							"col_00FFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFFF_circle.png",
								"regions":
								[
									[
										1674,
										1674
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1550,
										1555
									],
									[
										1558,
										1566
									],
									[
										1724,
										1734
									],
									[
										1746,
										1756
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										1548,
										1548
									],
									[
										1715,
										1715
									],
									[
										1737,
										1737
									]
								],
								"scope": "col_gutter"
							},
							"col_800000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1577,
										1585
									]
								],
								"scope": "col_800000FF"
							},
							"col_800000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_800000FF_circle.png",
								"regions":
								[
									[
										1569,
										1569
									]
								],
								"scope": "col_gutter"
							},
							"col_800080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1663,
										1671
									]
								],
								"scope": "col_800080FF"
							},
							"col_800080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_800080FF_circle.png",
								"regions":
								[
									[
										1651,
										1651
									]
								],
								"scope": "col_gutter"
							},
							"col_808000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1620,
										1628
									]
								],
								"scope": "col_808000FF"
							},
							"col_808000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808000FF_circle.png",
								"regions":
								[
									[
										1609,
										1609
									]
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1717,
										1721
									],
									[
										1739,
										1743
									]
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
									[
										1715,
										1715
									],
									[
										1737,
										1737
									]
								],
								"scope": "col_gutter"
							},
							"col_C0C0C0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1704,
										1712
									]
								],
								"scope": "col_C0C0C0FF"
							},
							"col_C0C0C0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_C0C0C0FF_circle.png",
								"regions":
								[
									[
										1694,
										1694
									]
								],
								"scope": "col_gutter"
							},
							"col_DD0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1774,
										1784
									]
								],
								"scope": "col_DD0000FF"
							},
							"col_DD0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD0000FF_circle.png",
								"regions":
								[
									[
										1759,
										1759
									]
								],
								"scope": "col_gutter"
							},
							"col_DD00DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1896,
										1906
									]
								],
								"scope": "col_DD00DDFF"
							},
							"col_DD00DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD00DDFF_circle.png",
								"regions":
								[
									[
										1877,
										1877
									]
								],
								"scope": "col_gutter"
							},
							"col_DD8800FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1835,
										1845
									]
								],
								"scope": "col_DD8800FF"
							},
							"col_DD8800FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD8800FF_circle.png",
								"regions":
								[
									[
										1817,
										1817
									]
								],
								"scope": "col_gutter"
							},
							"col_DDDDDDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1955,
										1965
									]
								],
								"scope": "col_DDDDDDFF"
							},
							"col_DDDDDDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DDDDDDFF_circle.png",
								"regions":
								[
									[
										1938,
										1938
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1571,
										1574
									],
									[
										2352,
										2355
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										1569,
										1569
									],
									[
										2342,
										2342
									]
								],
								"scope": "col_gutter"
							},
							"col_FF00FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1653,
										1660
									]
								],
								"scope": "col_FF00FFFF"
							},
							"col_FF00FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF00FFFF_circle.png",
								"regions":
								[
									[
										1651,
										1651
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1611,
										1617
									]
								],
								"scope": "col_FFFF00FF"
							},
							"col_FFFF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFF00FF_circle.png",
								"regions":
								[
									[
										1609,
										1609
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1696,
										1701
									],
									[
										2369,
										2374
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										1694,
										1694
									],
									[
										2358,
										2358
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								17503,
								17514
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11228.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/terminal.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3919,
						"regions":
						{
						},
						"selection":
						[
							[
								394,
								394
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.6925953789,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 69.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"",
				"tests/test_qjsm.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"str.h",
				"lib/str.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			],
			[
				"source.h",
				"src/source.h"
			],
			[
				"fdtable",
				"src/fdtable.h"
			],
			[
				"fd.h",
				"src/fd.h"
			],
			[
				"eval",
				"src/eval.h"
			],
			[
				"ieee",
				"doc/posix/ieee-p1003.2-d11.2-s3.txt"
			],
			[
				"expand.h",
				"src/expand.h"
			],
			[
				"builtin_dum",
				"src/builtin/builtin_dump.c"
			],
			[
				"h_main",
				"src/sh/sh_main.c"
			],
			[
				"parse_cha",
				"src/parse/parse_chartable.c"
			],
			[
				"debug.h",
				"src/debug.h"
			],
			[
				"exec_c",
				"src/exec/exec_command.c"
			],
			[
				"eval.h",
				"src/eval.h"
			],
			[
				"test-op",
				"test-operators.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 251.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
