{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyFunctionList"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"JS_New",
				"JS_NewCFunctionData"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "CMAKE_C_STANDARD\nCMAKE_SYSTEM_NAME\nCMAKE_EXECUTABLE_SUFFIX\nBUILD_SHARED_LIBS\nCMAKE_SYSTEM_NAME\nCMAKE_SYSTEM_NAME\nCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS\nCMAKE_SYSTEM_NAME\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_CURRENT_SOURCE_DIR\nQJS\nCMAKE_CURRENT_BINARY_DIR\nQJSC\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_REQUIRED_QUIET\nHAVE_POSIX_SPAWNP\nHAVE_SPAWN\nHAVE_SYSINFO\nHAVE_SYSINFO\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_C_COMPILER\nCMAKE_SYSROOT\nCMAKE_TOOLCHAIN_FILE\nCMAKE_VERBOSE_MAKEFILE\nCMAKE_BUILD_TYPE\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nQUICKJS_INCLUDE_DIRS\nQUICKJS_LIBRARY_DIR\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nLIB_MODULES\nQUICKJS_H\nCOMMON_HEADERS\nCUTILS_H\nQUICKJS_H\n  buffer_utils_SOURCES\nCOMMON_SOURCES\n  vector_SOURCES\n  buffer_utils_SOURCES\n  libutf_SOURCES\n  char_utils_SOURCES\n  libutf_SOURCES\n  queue_SOURCES\n  utils_SOURCES\n  char_utils_SOURCES\n  js_utils_SOURCES\n  utils_SOURCES\n  utils_SOURCES\n  stream_SOURCES\n  queue_SOURCES\n  js_utils_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  predicate_SOURCES\n  utils_SOURCES\n  utils_SOURCES\n  utils_SOURCES\n  utils_SOURCES\n  utils_SOURCES\n  token_SOURCES\n  location_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  syscallerror_SOURCES\n  child_process_SOURCES\n  utils_SOURCES\n  vector_SOURCES\n  deep_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  predicate_SOURCES\n  deep_LIBRARIES\n  inspect_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  tree_walker_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  xml_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  location_SOURCES\n  inspect_SOURCES\n  path_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  path_SOURCES\n  path_SOURCES\n  predicate_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  pointer_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  lexer_SOURCES\n  location_SOURCES\n  token_SOURCES\n  utils_SOURCES\n  vector_SOURCES\n  lexer_LIBRARIES\n  mmap_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  repeater_SOURCES\n  queue_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  sockets_SOURCES\n  queue_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  sockets_SOURCES\n  sockets_SOURCES\n  sockets_SOURCES\n  sockets_SOURCES\n  sockets_LIBRARIES\n  sockets_SOURCES\n  sockets_SOURCES\n  blob_SOURCES\n  vector_SOURCES\n  utils_SOURCES\n  textcode_SOURCES\n  buffer_utils_SOURCES\n  utils_SOURCES\n  vector_SOURCES\n  misc_SOURCES\n  path_SOURCES\n  location_SOURCES\n  vector_SOURCES\n  gpio_SOURCES\n  syscallerror_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\nLibArchive_INCLUDE_DIRS\nCMAKE_CURRENT_SOURCE_DIR\n  archive_SOURCES\n  utils_SOURCES\n  buffer_utils_SOURCES\n  archive_LIBRARIES\nLibArchive_LIBRARIES\nQJSM_EXTRA_SOURCES\n  vector_SOURCES\n  buffer_utils_SOURCES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\nQUICKJS_MODULES\n  mmap_SOURCES\n  mmap_SOURCES\nCMAKE_REQUIRED_QUIET\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_C_FLAGS_DEBUG\nCMAKE_CURRENT_SOURCE_DIR\nTESTS\nTESTS\nTEST\nBASE\nBASE\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_BINARY_DIR\nQJSM\nTEST\nTESTS\nQUICKJS_MODULES\nSHARED_TARGETS\nQJSM_LIBDIR\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_SYSTEM_NAME\nCMAKE_IMPORT_LIBRARY_PREFIX\nCMAKE_IMPORT_LIBRARY_SUFFIX\nCMAKE_SYSTEM_NAME\nQUICKJS_MODULES\nJS_MODULE\nJS_MODULE\nQJSM_MODULE\nQJSM_LIBDIR\nLIBRARY_PREFIX\nQJSM_MODULE\nLIBRARY_SUFFIX\nQUICKJS_MODULES\nQJSM_LIBDIR\n  predicate_LIBRARIES\nLIBM\n  sockets_LIBRARIES\n  deep_LIBRARIES\nLIBM\n  lexer_LIBRARIES\n  lexer_DEPS\nTESTS_SOURCES\nQJSM\nCMAKE_CURRENT_BINARY_DIR\nTESTS_SOURCES\nCMAKE_CURRENT_SOURCE_DIR\nTEST_SOURCE\nTEST_SOURCE\nTEST_NAME\nCMAKE_CURRENT_SOURCE_DIR\nQJSM\nTEST_SOURCE\nTESTS_SOURCES\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nLIBJS\nQUICKJS_JS_MODULE_DIR\nLIBLEXER\nQUICKJS_JS_MODULE_DIR\nLIB_MODULES\nLIB_MODULES\nLIB_MODULE\nLIB_MODULES\nCMAKE_CURRENT_SOURCE_DIR\nQUICKJS_SOURCES_ROOT\nCMAKE_CURRENT_SOURCE_DIR\nQUICKJS_SOURCES_ROOT\nQUICKJS_SOURCES_ROOT\nQUICKJS_INCLUDE_DIR\nQUICKJS_SOURCES_ROOT\nQUICKJS_INCLUDE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nMODULES_DIR\nQJSC\nMODULES_DIR\nCMAKE_CURRENT_SOURCE_DIR\nQJSC_DEPS\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_CURRENT_SOURCE_DIR\nQJSM_SOURCES\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nMODULES_DIR\nQJSM_EXTRA_SOURCES\nCMAKE_CURRENT_SOURCE_DIR\nQJSM_SOURCES\nQJSM_SOURCES\nCMAKE_CURRENT_SOURCE_DIR\nCMAKE_CURRENT_SOURCE_DIR\nTRANSPORT_PLATFORM\nCMAKE_CURRENT_SOURCE_DIR\nQJSM_SOURCES\nQJS_MODULES_STATIC\nCOMPILED_MODULES\nQJSM_LIBDIR\nCMAKE_EXE_LINKER_FLAGS\nCMAKE_EXE_LINKER_FLAGS\nQJSM_LIBDIR\nLINK_EXPORT\nQJSM_LIBDIR\nQUICKJS_INSTALL_PREFIX\nQUICKJS_LIBRARY_DIR\nQUICKJS_LIBRARY\nQJSM_LDADD\nLIBPTHREAD\nLIBM\nLIBDL\nLIBWS2_32\nQUICKJS_VERSION\nQUICKJS_INSTALL_PREFIX\nINSTALL_SCRIPTS\nCMAKE_COMMAND\nCMAKE_INSTALL_PREFIX",
			"settings":
			{
				"buffer_size": 5015,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					1375,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
						"symkeys":
						[
							[
								528,
								541
							],
							[
								560,
								580
							],
							[
								1058,
								1073
							],
							[
								1108,
								1114
							],
							[
								1171,
								1198
							],
							[
								1325,
								1330
							],
							[
								1385,
								1416
							],
							[
								1554,
								1579
							],
							[
								1793,
								1829
							],
							[
								2150,
								2175
							],
							[
								2212,
								2239
							],
							[
								2308,
								2334
							],
							[
								2392,
								2412
							],
							[
								2483,
								2501
							],
							[
								2751,
								2764
							],
							[
								2792,
								2798
							],
							[
								2851,
								2873
							],
							[
								3221,
								3245
							],
							[
								3550,
								3580
							],
							[
								3656,
								3677
							],
							[
								3724,
								3752
							],
							[
								3763,
								3776
							],
							[
								3866,
								3879
							],
							[
								4145,
								4151
							],
							[
								4236,
								4256
							],
							[
								4373,
								4385
							],
							[
								4409,
								4436
							],
							[
								4451,
								4469
							],
							[
								4705,
								4717
							],
							[
								4726,
								4751
							],
							[
								4834,
								4843
							],
							[
								4932,
								4958
							],
							[
								4967,
								4985
							],
							[
								5063,
								5075
							],
							[
								5084,
								5095
							],
							[
								5156,
								5165
							],
							[
								5254,
								5277
							],
							[
								5300,
								5306
							],
							[
								5336,
								5360
							],
							[
								5377,
								5383
							],
							[
								5445,
								5451
							],
							[
								5501,
								5525
							],
							[
								5842,
								5866
							],
							[
								5915,
								5921
							],
							[
								6163,
								6187
							],
							[
								6216,
								6222
							],
							[
								6373,
								6402
							],
							[
								6518,
								6527
							],
							[
								6678,
								6707
							],
							[
								6967,
								7036
							],
							[
								7865,
								7882
							],
							[
								8182,
								8200
							],
							[
								8243,
								8259
							],
							[
								8352,
								8391
							],
							[
								8712,
								8716
							],
							[
								8855,
								8862
							],
							[
								8925,
								8936
							],
							[
								9134,
								9152
							],
							[
								9456,
								9473
							],
							[
								11243,
								11247
							],
							[
								11864,
								11912
							],
							[
								12163,
								12169
							],
							[
								12643,
								12649
							],
							[
								12697,
								12703
							],
							[
								13408,
								13414
							],
							[
								13445,
								13451
							],
							[
								13533,
								13539
							],
							[
								13892,
								13898
							],
							[
								14062,
								14068
							],
							[
								14094,
								14100
							],
							[
								14118,
								14123
							],
							[
								14166,
								14181
							],
							[
								14204,
								14259
							],
							[
								15112,
								15118
							],
							[
								15260,
								15266
							],
							[
								15389,
								15395
							],
							[
								15551,
								15557
							],
							[
								16132,
								16138
							],
							[
								16187,
								16193
							],
							[
								16360,
								16366
							],
							[
								16384,
								16389
							],
							[
								16440,
								16455
							],
							[
								16656,
								16662
							],
							[
								16682,
								16688
							],
							[
								16705,
								16711
							],
							[
								16965,
								16974
							],
							[
								17046,
								17052
							],
							[
								17157,
								17170
							],
							[
								17272,
								17276
							],
							[
								20706,
								20735
							],
							[
								20885,
								20907
							],
							[
								20933,
								20939
							],
							[
								20970,
								21000
							],
							[
								21035,
								21041
							],
							[
								21067,
								21077
							],
							[
								21132,
								21156
							],
							[
								21217,
								21249
							],
							[
								21275,
								21288
							],
							[
								21315,
								21345
							],
							[
								21398,
								21433
							],
							[
								21438,
								21458
							],
							[
								21572,
								21603
							],
							[
								21881,
								21913
							],
							[
								22088,
								22125
							],
							[
								22209,
								22242
							],
							[
								22305,
								22326
							],
							[
								22432,
								22444
							],
							[
								22463,
								22486
							],
							[
								22619,
								22630
							],
							[
								22659,
								22675
							],
							[
								22707,
								22716
							],
							[
								22745,
								22759
							],
							[
								22791,
								22809
							],
							[
								23041,
								23076
							],
							[
								23862,
								23896
							],
							[
								23980,
								23992
							],
							[
								24182,
								24192
							],
							[
								24438,
								24445
							],
							[
								24464,
								24486
							],
							[
								24858,
								24876
							],
							[
								25018,
								25027
							],
							[
								25055,
								25076
							],
							[
								25317,
								25326
							],
							[
								25371,
								25381
							],
							[
								25512,
								25519
							],
							[
								25634,
								25646
							],
							[
								25676,
								25693
							],
							[
								25903,
								25913
							],
							[
								25963,
								25981
							],
							[
								26027,
								26052
							],
							[
								26166,
								26183
							],
							[
								27846,
								27852
							],
							[
								27994,
								28006
							],
							[
								28050,
								28080
							],
							[
								28588,
								28593
							],
							[
								29178,
								29187
							],
							[
								29210,
								29219
							],
							[
								29240,
								29247
							],
							[
								29280,
								29292
							],
							[
								29798,
								29810
							],
							[
								29839,
								29859
							],
							[
								29923,
								29934
							],
							[
								29967,
								29987
							],
							[
								30051,
								30080
							],
							[
								31609,
								31641
							],
							[
								32038,
								32045
							],
							[
								32089,
								32096
							],
							[
								32124,
								32146
							],
							[
								32175,
								32195
							],
							[
								32337,
								32349
							],
							[
								32520,
								32527
							],
							[
								32711,
								32741
							],
							[
								33057,
								33085
							],
							[
								33115,
								33119
							],
							[
								33138,
								33166
							],
							[
								33199,
								33218
							],
							[
								33277,
								33304
							],
							[
								33337,
								33356
							],
							[
								33431,
								33460
							],
							[
								33578,
								33601
							],
							[
								33741,
								33764
							],
							[
								33893,
								34019
							],
							[
								34683,
								34717
							],
							[
								34784,
								34832
							],
							[
								34878,
								34917
							],
							[
								35522,
								35550
							],
							[
								35599,
								35620
							],
							[
								35694,
								35715
							],
							[
								35776,
								35797
							],
							[
								35870,
								35916
							],
							[
								35965,
								35971
							],
							[
								36045,
								36051
							],
							[
								36117,
								36123
							],
							[
								36194,
								36216
							],
							[
								36687,
								36702
							],
							[
								36788,
								36795
							],
							[
								36891,
								36898
							],
							[
								36953,
								36960
							],
							[
								37000,
								37011
							],
							[
								37349,
								37355
							],
							[
								37388,
								37396
							],
							[
								37563,
								37569
							],
							[
								37617,
								37624
							],
							[
								37686,
								37694
							],
							[
								37751,
								37757
							],
							[
								37816,
								37822
							],
							[
								37884,
								37890
							],
							[
								37953,
								37959
							],
							[
								38022,
								38028
							],
							[
								38086,
								38092
							],
							[
								38139,
								38145
							],
							[
								38202,
								38208
							],
							[
								38269,
								38275
							],
							[
								38324,
								38330
							],
							[
								38818,
								38840
							],
							[
								39190,
								39196
							],
							[
								39201,
								39214
							],
							[
								39586,
								39616
							],
							[
								39629,
								39635
							],
							[
								39698,
								39707
							],
							[
								39746,
								39752
							],
							[
								39800,
								39829
							],
							[
								40528,
								40542
							],
							[
								41320,
								41334
							],
							[
								41489,
								41502
							],
							[
								41539,
								41546
							]
						],
						"symlist":
						[
							"ArgumentError",
							"constructor(...args)",
							"logFile = () =>",
							"arg =>",
							"function ReadJSON(filename)",
							"() =>",
							"function ResolveAlias(filename)",
							"function NormalizePath(p)",
							"FileBannerComment = (filename, i) =>",
							"IsBuiltin = moduleName =>",
							"compact = (n, more = {}) =>",
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"(n, value) =>",
							"num =>",
							"(type, lexeme, tok) =>",
							"CompareRange = (a, b) =>",
							"PutsFunction = outFn => str =>",
							"IsWhiteSpace = str =>",
							"debugLog = (str, ...args) =>",
							"pred = arg =>",
							"(acc, opt) =>",
							"arg =>",
							"FileWriter = file =>",
							"close: () =>",
							"function FdWriter(fd, file)",
							"fn = (buf, len) =>",
							"close: () =>",
							"seek: (whence, offset) =>",
							"inspect()",
							"function DummyWriter(name)",
							"fn = (buf, len) =>",
							"close: () =>",
							"seek: () =>",
							"inspect()",
							"function ImportIds(seq)",
							"tok =>",
							"function ImpExpType(seq)",
							"tok =>",
							"tok =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function ByteSequence(tokens)",
							"(n, t) =>",
							"function ModuleLoader(module)",
							"function ResolveImports(source, log = () => {}, recursive, depth = 0)",
							".handler = lex =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"PathAdjust = s =>",
							"i =>",
							" function Export(tokens, relativePath = s => s)",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"path()",
							"Export",
							"Export",
							"ids()",
							"({ lexeme }) =>",
							" function Import(tokens, relativePath = s => s, depth)",
							"path()",
							"Import",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"Import",
							"ids()",
							"({ lexeme }) =>",
							"exp =>",
							"exp =>",
							"tok =>",
							"(a, b) =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"function AddDep(source, file)",
							"function NonWS(tokens)",
							"tok =>",
							"function TokenSequence(tokens)",
							"tok =>",
							"toString()",
							"function Unquote(lexeme)",
							"function LiteralSequence(tokens)",
							"(acc, tok) =>",
							"function UntilEOL(idx, tokens)",
							"function Until(idx, tokens, pred = ",
							"(null, [';', '\\n']))",
							"function WholeLine(idx, tokens)",
							"function Range(file, start, end)",
							"Range.prototype.toString = function()",
							"function InRange([start, end], i)",
							"function IsRange(obj)",
							"NumericRange",
							"constructor(start, end)",
							"get start()",
							"set start(value)",
							"get end()",
							"set end(value)",
							"static from(range)",
							"static *holes(ranges, only = false)",
							"static between([s1, e1], [s2, e2])",
							"NumericRange",
							"pad = s =>",
							"FileMap",
							"constructor(file, buf)",
							"static empty(file)",
							"isEmpty()",
							"static for(file, buf)",
							"isEmpty()",
							"toString()",
							"FileMap",
							"splitAt(pos)",
							"([range, buf]) =>",
							"sliceAt(n)",
							" ([range, buf]) =>",
							"replaceRange(range, file)",
							"sliceIndex = n =>",
							"dump()",
							"(item, i) =>",
							"(acc, [range, buf, str], i) =>",
							"at(i)",
							"toArray()",
							"(s, i) =>",
							"holes()",
							"([range]) =>",
							"firstChunk()",
							"([range, buf], i) =>",
							"lastChunk()",
							"([range, buf], i) =>",
							"write(out, depth = 0, serial)",
							"toString(fn = FileBannerComment)",
							"FileMap",
							"FileMap",
							" function(depth, opts)",
							"([range, buf], i) =>",
							"(item, i) =>",
							"item =>",
							"function BufferFile(file, buf)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"function* DependencyTree(root, indent = ' ', spacing = false, depth = 0, pre = '', fn = (name, depth) => `${name} (${depth})`)",
							" function stripLeadingDotSlash(n)",
							"function SpreadAndJoin(iterator, separator = '')",
							"function* PrintUserscriptBanner(fields)",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"write(buf, len)",
							"puts(s)",
							"line =>",
							"close()",
							"isWS = s =>",
							" () =>",
							" file =>",
							" () =>",
							" arg =>",
							" file =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							"RelativePath = file =>",
							" () =>",
							" (...args) =>",
							"ContainsAny = (arr, tokens) =>",
							"tok =>",
							"impexp =>",
							"hdr =>",
							" ([acc, prev], hdr) =>",
							"(acc, line) =>",
							"({ depth }) =>",
							"({ name }) =>",
							"name =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACpDQAAQXJndW1lbnRFcnJvcgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgbG9nRmlsZSA9ICgpID0+CiAgYXJnID0+ClJlYWRKU09OKGZpbGVuYW1lKQooKSA9PgpSZXNvbHZlQWxpYXMoZmlsZW5hbWUpCk5vcm1hbGl6ZVBhdGgocCkKRmlsZUJhbm5lckNvbW1lbnQgPSAoZmlsZW5hbWUsIGkpID0+CklzQnVpbHRpbiA9IG1vZHVsZU5hbWUgPT4KICBjb21wYWN0ID0gKG4sIG1vcmUgPSB7fSkgPT4KQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CihuLCB2YWx1ZSkgPT4KICBudW0gPT4KKHR5cGUsIGxleGVtZSwgdG9rKSA9PgpDb21wYXJlUmFuZ2UgPSAoYSwgYikgPT4KUHV0c0Z1bmN0aW9uID0gb3V0Rm4gPT4gc3RyID0+CklzV2hpdGVTcGFjZSA9IHN0ciA9PgogIGRlYnVnTG9nID0gKHN0ciwgLi4uYXJncykgPT4KICBwcmVkID0gYXJnID0+CihhY2MsIG9wdCkgPT4KICBhcmcgPT4KRmlsZVdyaXRlciA9IGZpbGUgPT4KICBjbG9zZTogKCkgPT4KRmRXcml0ZXIoZmQsIGZpbGUpCiAgZm4gPSAoYnVmLCBsZW4pID0+CiAgY2xvc2U6ICgpID0+CiAgc2VlazogKHdoZW5jZSwgb2Zmc2V0KSA9PgogIGluc3BlY3QoKQpEdW1teVdyaXRlcihuYW1lKQogIGZuID0gKGJ1ZiwgbGVuKSA9PgogIGNsb3NlOiAoKSA9PgogIHNlZWs6ICgpID0+CiAgaW5zcGVjdCgpCkltcG9ydElkcyhzZXEpCiAgdG9rID0+CkltcEV4cFR5cGUoc2VxKQogIHRvayA9PgogIHRvayA9PgpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCiAgdG9rID0+CkV4cG9ydE5hbWUoc2VxKQogIHRvayA9PgpCeXRlU2VxdWVuY2UodG9rZW5zKQoobiwgdCkgPT4KTW9kdWxlTG9hZGVyKG1vZHVsZSkKUmVzb2x2ZUltcG9ydHMoc291cmNlLCBsb2cgPSAoKSA9PiB7fSwgcmVjdXJzaXZlLCBkZXB0aCA9IDApCiAgLmhhbmRsZXIgPSBsZXggPT4KICAuYmVnaW5Db2RlID0gKCkgPT4KICBiYWxhbmNlciA9ICgpID0+CiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcyA9PgogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQogIHNob3dUb2tlbiA9IHRvayA9PgpQYXRoQWRqdXN0ID0gcyA9PgogIGkgPT4KRXhwb3J0KHRva2VucywgcmVsYXRpdmVQYXRoID0gcyA9PiBzKQogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHBhdGgoKQpFeHBvcnQKRXhwb3J0CiAgaWRzKCkKKHsgbGV4ZW1lIH0pID0+CkltcG9ydCh0b2tlbnMsIHJlbGF0aXZlUGF0aCA9IHMgPT4gcywgZGVwdGgpCiAgcGF0aCgpCkltcG9ydAogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgpJbXBvcnQKICBpZHMoKQooeyBsZXhlbWUgfSkgPT4KICBleHAgPT4KICBleHAgPT4KICB0b2sgPT4KKGEsIGIpID0+CiAgaW1wID0+CihhY2MsIGltcCkgPT4KICBiID0+CkFkZERlcChzb3VyY2UsIGZpbGUpCk5vbldTKHRva2VucykKICB0b2sgPT4KVG9rZW5TZXF1ZW5jZSh0b2tlbnMpCiAgdG9rID0+CiAgdG9TdHJpbmcoKQpVbnF1b3RlKGxleGVtZSkKTGl0ZXJhbFNlcXVlbmNlKHRva2VucykKKGFjYywgdG9rKSA9PgpVbnRpbEVPTChpZHgsIHRva2VucykKVW50aWwoaWR4LCB0b2tlbnMsIHByZWQgPSAKKG51bGwsIFsnOycsICdcbiddKSkKV2hvbGVMaW5lKGlkeCwgdG9rZW5zKQpSYW5nZShmaWxlLCBzdGFydCwgZW5kKQpSYW5nZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCkluUmFuZ2UoW3N0YXJ0LCBlbmRdLCBpKQpJc1JhbmdlKG9iaikKTnVtZXJpY1JhbmdlCiAgY29uc3RydWN0b3Ioc3RhcnQsIGVuZCkKICBnZXQgc3RhcnQoKQogIHNldCBzdGFydCh2YWx1ZSkKICBnZXQgZW5kKCkKICBzZXQgZW5kKHZhbHVlKQogIHN0YXRpYyBmcm9tKHJhbmdlKQogIHN0YXRpYyAqaG9sZXMocmFuZ2VzLCBvbmx5ID0gZmFsc2UpCiAgc3RhdGljIGJldHdlZW4oW3MxLCBlMV0sIFtzMiwgZTJdKQpOdW1lcmljUmFuZ2UKICBwYWQgPSBzID0+CkZpbGVNYXAKICBjb25zdHJ1Y3RvcihmaWxlLCBidWYpCiAgc3RhdGljIGVtcHR5KGZpbGUpCiAgaXNFbXB0eSgpCiAgc3RhdGljIGZvcihmaWxlLCBidWYpCiAgaXNFbXB0eSgpCiAgdG9TdHJpbmcoKQpGaWxlTWFwCiAgc3BsaXRBdChwb3MpCihbcmFuZ2UsIGJ1Zl0pID0+CiAgc2xpY2VBdChuKQogIChbcmFuZ2UsIGJ1Zl0pID0+CiAgcmVwbGFjZVJhbmdlKHJhbmdlLCBmaWxlKQogIHNsaWNlSW5kZXggPSBuID0+CiAgZHVtcCgpCihpdGVtLCBpKSA9PgooYWNjLCBbcmFuZ2UsIGJ1Ziwgc3RyXSwgaSkgPT4KICBhdChpKQogIHRvQXJyYXkoKQoocywgaSkgPT4KICBob2xlcygpCihbcmFuZ2VdKSA9PgogIGZpcnN0Q2h1bmsoKQooW3JhbmdlLCBidWZdLCBpKSA9PgogIGxhc3RDaHVuaygpCihbcmFuZ2UsIGJ1Zl0sIGkpID0+CiAgd3JpdGUob3V0LCBkZXB0aCA9IDAsIHNlcmlhbCkKICB0b1N0cmluZyhmbiA9IEZpbGVCYW5uZXJDb21tZW50KQpGaWxlTWFwCkZpbGVNYXAKICBmdW5jdGlvbihkZXB0aCwgb3B0cykKKFtyYW5nZSwgYnVmXSwgaSkgPT4KKGl0ZW0sIGkpID0+CiAgaXRlbSA9PgpCdWZmZXJGaWxlKGZpbGUsIGJ1ZikKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkRlcGVuZGVuY3lUcmVlKHJvb3QsIGluZGVudCA9ICcgJywgc3BhY2luZyA9IGZhbHNlLCBkZXB0aCA9IDAsIHByZSA9ICcnLCBmbiA9IChuYW1lLCBkZXB0aCkgPT4gYCR7bmFtZX0gKCR7ZGVwdGh9KWApCiAgc3RyaXBMZWFkaW5nRG90U2xhc2gobikKU3ByZWFkQW5kSm9pbihpdGVyYXRvciwgc2VwYXJhdG9yID0gJycpClByaW50VXNlcnNjcmlwdEJhbm5lcihmaWVsZHMpClByaW50RVM2SW1wb3J0KGltcCkKICAoeyBsb2NhbCwgZmlsZSB9KSA9PgogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogICgpID0+CiAgKCkgPT4KICAoKSA9PgogIG1haW4oLi4uYXJncykKICB3cml0ZShidWYsIGxlbikKICBwdXRzKHMpCiAgbGluZSA9PgogIGNsb3NlKCkKICBpc1dTID0gcyA9PgogICgpID0+CiAgZmlsZSA9PgogICgpID0+CiAgYXJnID0+CiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+ClJlbGF0aXZlUGF0aCA9IGZpbGUgPT4KICAoKSA9PgogICguLi5hcmdzKSA9PgpDb250YWluc0FueSA9IChhcnIsIHRva2VucykgPT4KICB0b2sgPT4KICBpbXBleHAgPT4KICBoZHIgPT4KICAoW2FjYywgcHJldl0sIGhkcikgPT4KKGFjYywgbGluZSkgPT4KKHsgZGVwdGggfSkgPT4KKHsgbmFtZSB9KSA9PgogIG5hbWUgPT4AAAAAAAAAAKkNAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1376,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
						"symkeys":
						[
							[
								528,
								541
							],
							[
								560,
								580
							],
							[
								1058,
								1073
							],
							[
								1108,
								1114
							],
							[
								1171,
								1198
							],
							[
								1325,
								1330
							],
							[
								1385,
								1416
							],
							[
								1554,
								1579
							],
							[
								1793,
								1829
							],
							[
								2150,
								2175
							],
							[
								2212,
								2239
							],
							[
								2308,
								2334
							],
							[
								2392,
								2412
							],
							[
								2483,
								2501
							],
							[
								2751,
								2764
							],
							[
								2792,
								2798
							],
							[
								2851,
								2873
							],
							[
								3221,
								3245
							],
							[
								3550,
								3580
							],
							[
								3656,
								3677
							],
							[
								3724,
								3752
							],
							[
								3763,
								3776
							],
							[
								3866,
								3879
							],
							[
								4145,
								4151
							],
							[
								4236,
								4256
							],
							[
								4373,
								4385
							],
							[
								4409,
								4436
							],
							[
								4451,
								4469
							],
							[
								4705,
								4717
							],
							[
								4726,
								4751
							],
							[
								4834,
								4843
							],
							[
								4932,
								4958
							],
							[
								4967,
								4985
							],
							[
								5063,
								5075
							],
							[
								5084,
								5095
							],
							[
								5156,
								5165
							],
							[
								5254,
								5277
							],
							[
								5300,
								5306
							],
							[
								5336,
								5360
							],
							[
								5377,
								5383
							],
							[
								5445,
								5451
							],
							[
								5501,
								5525
							],
							[
								5842,
								5866
							],
							[
								5915,
								5921
							],
							[
								6163,
								6187
							],
							[
								6216,
								6222
							],
							[
								6373,
								6402
							],
							[
								6518,
								6527
							],
							[
								6678,
								6707
							],
							[
								6967,
								7036
							],
							[
								7865,
								7882
							],
							[
								8182,
								8200
							],
							[
								8243,
								8259
							],
							[
								8352,
								8391
							],
							[
								8712,
								8716
							],
							[
								8855,
								8862
							],
							[
								8925,
								8936
							],
							[
								9134,
								9152
							],
							[
								9456,
								9473
							],
							[
								11243,
								11247
							],
							[
								11864,
								11912
							],
							[
								12163,
								12169
							],
							[
								12643,
								12649
							],
							[
								12697,
								12703
							],
							[
								13408,
								13414
							],
							[
								13445,
								13451
							],
							[
								13533,
								13539
							],
							[
								13892,
								13898
							],
							[
								14062,
								14068
							],
							[
								14094,
								14100
							],
							[
								14118,
								14123
							],
							[
								14166,
								14181
							],
							[
								14204,
								14259
							],
							[
								15112,
								15118
							],
							[
								15260,
								15266
							],
							[
								15389,
								15395
							],
							[
								15551,
								15557
							],
							[
								16132,
								16138
							],
							[
								16187,
								16193
							],
							[
								16360,
								16366
							],
							[
								16384,
								16389
							],
							[
								16440,
								16455
							],
							[
								16656,
								16662
							],
							[
								16682,
								16688
							],
							[
								16705,
								16711
							],
							[
								16965,
								16974
							],
							[
								17046,
								17052
							],
							[
								17157,
								17170
							],
							[
								17272,
								17276
							],
							[
								20706,
								20735
							],
							[
								20885,
								20907
							],
							[
								20933,
								20939
							],
							[
								20970,
								21000
							],
							[
								21035,
								21041
							],
							[
								21067,
								21077
							],
							[
								21132,
								21156
							],
							[
								21217,
								21249
							],
							[
								21275,
								21288
							],
							[
								21315,
								21345
							],
							[
								21398,
								21433
							],
							[
								21438,
								21458
							],
							[
								21572,
								21603
							],
							[
								21881,
								21913
							],
							[
								22088,
								22125
							],
							[
								22209,
								22242
							],
							[
								22305,
								22326
							],
							[
								22432,
								22444
							],
							[
								22463,
								22486
							],
							[
								22619,
								22630
							],
							[
								22659,
								22675
							],
							[
								22707,
								22716
							],
							[
								22745,
								22759
							],
							[
								22791,
								22809
							],
							[
								23041,
								23076
							],
							[
								23862,
								23896
							],
							[
								23980,
								23992
							],
							[
								24182,
								24192
							],
							[
								24438,
								24445
							],
							[
								24464,
								24486
							],
							[
								24858,
								24876
							],
							[
								25018,
								25027
							],
							[
								25055,
								25076
							],
							[
								25317,
								25326
							],
							[
								25371,
								25381
							],
							[
								25512,
								25519
							],
							[
								25634,
								25646
							],
							[
								25676,
								25693
							],
							[
								25903,
								25913
							],
							[
								25963,
								25981
							],
							[
								26027,
								26052
							],
							[
								26166,
								26183
							],
							[
								27846,
								27852
							],
							[
								27994,
								28006
							],
							[
								28050,
								28080
							],
							[
								28588,
								28593
							],
							[
								29178,
								29187
							],
							[
								29210,
								29219
							],
							[
								29240,
								29247
							],
							[
								29280,
								29292
							],
							[
								29798,
								29810
							],
							[
								29839,
								29859
							],
							[
								29923,
								29934
							],
							[
								29967,
								29987
							],
							[
								30051,
								30080
							],
							[
								31609,
								31641
							],
							[
								32038,
								32045
							],
							[
								32089,
								32096
							],
							[
								32124,
								32146
							],
							[
								32175,
								32195
							],
							[
								32337,
								32349
							],
							[
								32520,
								32527
							],
							[
								32711,
								32741
							],
							[
								33057,
								33085
							],
							[
								33115,
								33119
							],
							[
								33138,
								33166
							],
							[
								33199,
								33218
							],
							[
								33277,
								33304
							],
							[
								33337,
								33356
							],
							[
								33431,
								33460
							],
							[
								33578,
								33601
							],
							[
								33741,
								33764
							],
							[
								33893,
								34019
							],
							[
								34683,
								34717
							],
							[
								34784,
								34832
							],
							[
								34878,
								34917
							],
							[
								35522,
								35550
							],
							[
								35599,
								35620
							],
							[
								35694,
								35715
							],
							[
								35776,
								35797
							],
							[
								35870,
								35916
							],
							[
								35965,
								35971
							],
							[
								36045,
								36051
							],
							[
								36117,
								36123
							],
							[
								36194,
								36216
							],
							[
								36687,
								36702
							],
							[
								36788,
								36795
							],
							[
								36891,
								36898
							],
							[
								36953,
								36960
							],
							[
								37000,
								37011
							],
							[
								37349,
								37355
							],
							[
								37388,
								37396
							],
							[
								37563,
								37569
							],
							[
								37617,
								37624
							],
							[
								37686,
								37694
							],
							[
								37751,
								37757
							],
							[
								37816,
								37822
							],
							[
								37884,
								37890
							],
							[
								37953,
								37959
							],
							[
								38022,
								38028
							],
							[
								38086,
								38092
							],
							[
								38139,
								38145
							],
							[
								38202,
								38208
							],
							[
								38269,
								38275
							],
							[
								38324,
								38330
							],
							[
								38818,
								38840
							],
							[
								39190,
								39196
							],
							[
								39201,
								39214
							],
							[
								39586,
								39616
							],
							[
								39629,
								39635
							],
							[
								39698,
								39707
							],
							[
								39746,
								39752
							],
							[
								39800,
								39829
							],
							[
								40528,
								40542
							],
							[
								41320,
								41334
							],
							[
								41489,
								41502
							],
							[
								41539,
								41546
							]
						],
						"symlist":
						[
							"ArgumentError",
							"constructor(...args)",
							"logFile = () =>",
							"arg =>",
							"function ReadJSON(filename)",
							"() =>",
							"function ResolveAlias(filename)",
							"function NormalizePath(p)",
							"FileBannerComment = (filename, i) =>",
							"IsBuiltin = moduleName =>",
							"compact = (n, more = {}) =>",
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"(n, value) =>",
							"num =>",
							"(type, lexeme, tok) =>",
							"CompareRange = (a, b) =>",
							"PutsFunction = outFn => str =>",
							"IsWhiteSpace = str =>",
							"debugLog = (str, ...args) =>",
							"pred = arg =>",
							"(acc, opt) =>",
							"arg =>",
							"FileWriter = file =>",
							"close: () =>",
							"function FdWriter(fd, file)",
							"fn = (buf, len) =>",
							"close: () =>",
							"seek: (whence, offset) =>",
							"inspect()",
							"function DummyWriter(name)",
							"fn = (buf, len) =>",
							"close: () =>",
							"seek: () =>",
							"inspect()",
							"function ImportIds(seq)",
							"tok =>",
							"function ImpExpType(seq)",
							"tok =>",
							"tok =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function ByteSequence(tokens)",
							"(n, t) =>",
							"function ModuleLoader(module)",
							"function ResolveImports(source, log = () => {}, recursive, depth = 0)",
							".handler = lex =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"PathAdjust = s =>",
							"i =>",
							" function Export(tokens, relativePath = s => s)",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"path()",
							"Export",
							"Export",
							"ids()",
							"({ lexeme }) =>",
							" function Import(tokens, relativePath = s => s, depth)",
							"path()",
							"Import",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"Import",
							"ids()",
							"({ lexeme }) =>",
							"exp =>",
							"exp =>",
							"tok =>",
							"(a, b) =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"function AddDep(source, file)",
							"function NonWS(tokens)",
							"tok =>",
							"function TokenSequence(tokens)",
							"tok =>",
							"toString()",
							"function Unquote(lexeme)",
							"function LiteralSequence(tokens)",
							"(acc, tok) =>",
							"function UntilEOL(idx, tokens)",
							"function Until(idx, tokens, pred = ",
							"(null, [';', '\\n']))",
							"function WholeLine(idx, tokens)",
							"function Range(file, start, end)",
							"Range.prototype.toString = function()",
							"function InRange([start, end], i)",
							"function IsRange(obj)",
							"NumericRange",
							"constructor(start, end)",
							"get start()",
							"set start(value)",
							"get end()",
							"set end(value)",
							"static from(range)",
							"static *holes(ranges, only = false)",
							"static between([s1, e1], [s2, e2])",
							"NumericRange",
							"pad = s =>",
							"FileMap",
							"constructor(file, buf)",
							"static empty(file)",
							"isEmpty()",
							"static for(file, buf)",
							"isEmpty()",
							"toString()",
							"FileMap",
							"splitAt(pos)",
							"([range, buf]) =>",
							"sliceAt(n)",
							" ([range, buf]) =>",
							"replaceRange(range, file)",
							"sliceIndex = n =>",
							"dump()",
							"(item, i) =>",
							"(acc, [range, buf, str], i) =>",
							"at(i)",
							"toArray()",
							"(s, i) =>",
							"holes()",
							"([range]) =>",
							"firstChunk()",
							"([range, buf], i) =>",
							"lastChunk()",
							"([range, buf], i) =>",
							"write(out, depth = 0, serial)",
							"toString(fn = FileBannerComment)",
							"FileMap",
							"FileMap",
							" function(depth, opts)",
							"([range, buf], i) =>",
							"(item, i) =>",
							"item =>",
							"function BufferFile(file, buf)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"function* DependencyTree(root, indent = ' ', spacing = false, depth = 0, pre = '', fn = (name, depth) => `${name} (${depth})`)",
							" function stripLeadingDotSlash(n)",
							"function SpreadAndJoin(iterator, separator = '')",
							"function* PrintUserscriptBanner(fields)",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"write(buf, len)",
							"puts(s)",
							"line =>",
							"close()",
							"isWS = s =>",
							" () =>",
							" file =>",
							" () =>",
							" arg =>",
							" file =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							"RelativePath = file =>",
							" () =>",
							" (...args) =>",
							"ContainsAny = (arr, tokens) =>",
							"tok =>",
							"impexp =>",
							"hdr =>",
							" ([acc, prev], hdr) =>",
							"(acc, line) =>",
							"({ depth }) =>",
							"({ name }) =>",
							"name =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACpDQAAQXJndW1lbnRFcnJvcgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgbG9nRmlsZSA9ICgpID0+CiAgYXJnID0+ClJlYWRKU09OKGZpbGVuYW1lKQooKSA9PgpSZXNvbHZlQWxpYXMoZmlsZW5hbWUpCk5vcm1hbGl6ZVBhdGgocCkKRmlsZUJhbm5lckNvbW1lbnQgPSAoZmlsZW5hbWUsIGkpID0+CklzQnVpbHRpbiA9IG1vZHVsZU5hbWUgPT4KICBjb21wYWN0ID0gKG4sIG1vcmUgPSB7fSkgPT4KQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CihuLCB2YWx1ZSkgPT4KICBudW0gPT4KKHR5cGUsIGxleGVtZSwgdG9rKSA9PgpDb21wYXJlUmFuZ2UgPSAoYSwgYikgPT4KUHV0c0Z1bmN0aW9uID0gb3V0Rm4gPT4gc3RyID0+CklzV2hpdGVTcGFjZSA9IHN0ciA9PgogIGRlYnVnTG9nID0gKHN0ciwgLi4uYXJncykgPT4KICBwcmVkID0gYXJnID0+CihhY2MsIG9wdCkgPT4KICBhcmcgPT4KRmlsZVdyaXRlciA9IGZpbGUgPT4KICBjbG9zZTogKCkgPT4KRmRXcml0ZXIoZmQsIGZpbGUpCiAgZm4gPSAoYnVmLCBsZW4pID0+CiAgY2xvc2U6ICgpID0+CiAgc2VlazogKHdoZW5jZSwgb2Zmc2V0KSA9PgogIGluc3BlY3QoKQpEdW1teVdyaXRlcihuYW1lKQogIGZuID0gKGJ1ZiwgbGVuKSA9PgogIGNsb3NlOiAoKSA9PgogIHNlZWs6ICgpID0+CiAgaW5zcGVjdCgpCkltcG9ydElkcyhzZXEpCiAgdG9rID0+CkltcEV4cFR5cGUoc2VxKQogIHRvayA9PgogIHRvayA9PgpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCiAgdG9rID0+CkV4cG9ydE5hbWUoc2VxKQogIHRvayA9PgpCeXRlU2VxdWVuY2UodG9rZW5zKQoobiwgdCkgPT4KTW9kdWxlTG9hZGVyKG1vZHVsZSkKUmVzb2x2ZUltcG9ydHMoc291cmNlLCBsb2cgPSAoKSA9PiB7fSwgcmVjdXJzaXZlLCBkZXB0aCA9IDApCiAgLmhhbmRsZXIgPSBsZXggPT4KICAuYmVnaW5Db2RlID0gKCkgPT4KICBiYWxhbmNlciA9ICgpID0+CiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcyA9PgogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQogIHNob3dUb2tlbiA9IHRvayA9PgpQYXRoQWRqdXN0ID0gcyA9PgogIGkgPT4KRXhwb3J0KHRva2VucywgcmVsYXRpdmVQYXRoID0gcyA9PiBzKQogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHBhdGgoKQpFeHBvcnQKRXhwb3J0CiAgaWRzKCkKKHsgbGV4ZW1lIH0pID0+CkltcG9ydCh0b2tlbnMsIHJlbGF0aXZlUGF0aCA9IHMgPT4gcywgZGVwdGgpCiAgcGF0aCgpCkltcG9ydAogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgpJbXBvcnQKICBpZHMoKQooeyBsZXhlbWUgfSkgPT4KICBleHAgPT4KICBleHAgPT4KICB0b2sgPT4KKGEsIGIpID0+CiAgaW1wID0+CihhY2MsIGltcCkgPT4KICBiID0+CkFkZERlcChzb3VyY2UsIGZpbGUpCk5vbldTKHRva2VucykKICB0b2sgPT4KVG9rZW5TZXF1ZW5jZSh0b2tlbnMpCiAgdG9rID0+CiAgdG9TdHJpbmcoKQpVbnF1b3RlKGxleGVtZSkKTGl0ZXJhbFNlcXVlbmNlKHRva2VucykKKGFjYywgdG9rKSA9PgpVbnRpbEVPTChpZHgsIHRva2VucykKVW50aWwoaWR4LCB0b2tlbnMsIHByZWQgPSAKKG51bGwsIFsnOycsICdcbiddKSkKV2hvbGVMaW5lKGlkeCwgdG9rZW5zKQpSYW5nZShmaWxlLCBzdGFydCwgZW5kKQpSYW5nZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCkluUmFuZ2UoW3N0YXJ0LCBlbmRdLCBpKQpJc1JhbmdlKG9iaikKTnVtZXJpY1JhbmdlCiAgY29uc3RydWN0b3Ioc3RhcnQsIGVuZCkKICBnZXQgc3RhcnQoKQogIHNldCBzdGFydCh2YWx1ZSkKICBnZXQgZW5kKCkKICBzZXQgZW5kKHZhbHVlKQogIHN0YXRpYyBmcm9tKHJhbmdlKQogIHN0YXRpYyAqaG9sZXMocmFuZ2VzLCBvbmx5ID0gZmFsc2UpCiAgc3RhdGljIGJldHdlZW4oW3MxLCBlMV0sIFtzMiwgZTJdKQpOdW1lcmljUmFuZ2UKICBwYWQgPSBzID0+CkZpbGVNYXAKICBjb25zdHJ1Y3RvcihmaWxlLCBidWYpCiAgc3RhdGljIGVtcHR5KGZpbGUpCiAgaXNFbXB0eSgpCiAgc3RhdGljIGZvcihmaWxlLCBidWYpCiAgaXNFbXB0eSgpCiAgdG9TdHJpbmcoKQpGaWxlTWFwCiAgc3BsaXRBdChwb3MpCihbcmFuZ2UsIGJ1Zl0pID0+CiAgc2xpY2VBdChuKQogIChbcmFuZ2UsIGJ1Zl0pID0+CiAgcmVwbGFjZVJhbmdlKHJhbmdlLCBmaWxlKQogIHNsaWNlSW5kZXggPSBuID0+CiAgZHVtcCgpCihpdGVtLCBpKSA9PgooYWNjLCBbcmFuZ2UsIGJ1Ziwgc3RyXSwgaSkgPT4KICBhdChpKQogIHRvQXJyYXkoKQoocywgaSkgPT4KICBob2xlcygpCihbcmFuZ2VdKSA9PgogIGZpcnN0Q2h1bmsoKQooW3JhbmdlLCBidWZdLCBpKSA9PgogIGxhc3RDaHVuaygpCihbcmFuZ2UsIGJ1Zl0sIGkpID0+CiAgd3JpdGUob3V0LCBkZXB0aCA9IDAsIHNlcmlhbCkKICB0b1N0cmluZyhmbiA9IEZpbGVCYW5uZXJDb21tZW50KQpGaWxlTWFwCkZpbGVNYXAKICBmdW5jdGlvbihkZXB0aCwgb3B0cykKKFtyYW5nZSwgYnVmXSwgaSkgPT4KKGl0ZW0sIGkpID0+CiAgaXRlbSA9PgpCdWZmZXJGaWxlKGZpbGUsIGJ1ZikKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkRlcGVuZGVuY3lUcmVlKHJvb3QsIGluZGVudCA9ICcgJywgc3BhY2luZyA9IGZhbHNlLCBkZXB0aCA9IDAsIHByZSA9ICcnLCBmbiA9IChuYW1lLCBkZXB0aCkgPT4gYCR7bmFtZX0gKCR7ZGVwdGh9KWApCiAgc3RyaXBMZWFkaW5nRG90U2xhc2gobikKU3ByZWFkQW5kSm9pbihpdGVyYXRvciwgc2VwYXJhdG9yID0gJycpClByaW50VXNlcnNjcmlwdEJhbm5lcihmaWVsZHMpClByaW50RVM2SW1wb3J0KGltcCkKICAoeyBsb2NhbCwgZmlsZSB9KSA9PgogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogICgpID0+CiAgKCkgPT4KICAoKSA9PgogIG1haW4oLi4uYXJncykKICB3cml0ZShidWYsIGxlbikKICBwdXRzKHMpCiAgbGluZSA9PgogIGNsb3NlKCkKICBpc1dTID0gcyA9PgogICgpID0+CiAgZmlsZSA9PgogICgpID0+CiAgYXJnID0+CiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+ClJlbGF0aXZlUGF0aCA9IGZpbGUgPT4KICAoKSA9PgogICguLi5hcmdzKSA9PgpDb250YWluc0FueSA9IChhcnIsIHRva2VucykgPT4KICB0b2sgPT4KICBpbXBleHAgPT4KICBoZHIgPT4KICAoW2FjYywgcHJldl0sIGhkcikgPT4KKGFjYywgbGluZSkgPT4KKHsgZGVwdGggfSkgPT4KKHsgbmFtZSB9KSA9PgogIG5hbWUgPT4AAAAAAAAAAKkNAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1377,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
						"symkeys":
						[
							[
								528,
								541
							],
							[
								560,
								580
							],
							[
								1058,
								1073
							],
							[
								1108,
								1114
							],
							[
								1171,
								1198
							],
							[
								1325,
								1330
							],
							[
								1385,
								1416
							],
							[
								1554,
								1579
							],
							[
								1793,
								1829
							],
							[
								2150,
								2175
							],
							[
								2212,
								2239
							],
							[
								2308,
								2334
							],
							[
								2392,
								2412
							],
							[
								2483,
								2501
							],
							[
								2751,
								2764
							],
							[
								2792,
								2798
							],
							[
								2851,
								2873
							],
							[
								3221,
								3245
							],
							[
								3550,
								3580
							],
							[
								3656,
								3677
							],
							[
								3724,
								3752
							],
							[
								3763,
								3776
							],
							[
								3866,
								3879
							],
							[
								4145,
								4151
							],
							[
								4236,
								4256
							],
							[
								4373,
								4385
							],
							[
								4409,
								4436
							],
							[
								4451,
								4469
							],
							[
								4705,
								4717
							],
							[
								4726,
								4751
							],
							[
								4834,
								4843
							],
							[
								4932,
								4958
							],
							[
								4967,
								4985
							],
							[
								5063,
								5075
							],
							[
								5084,
								5095
							],
							[
								5156,
								5165
							],
							[
								5254,
								5277
							],
							[
								5300,
								5306
							],
							[
								5336,
								5360
							],
							[
								5377,
								5383
							],
							[
								5445,
								5451
							],
							[
								5501,
								5525
							],
							[
								5842,
								5866
							],
							[
								5915,
								5921
							],
							[
								6163,
								6187
							],
							[
								6216,
								6222
							],
							[
								6373,
								6402
							],
							[
								6518,
								6527
							],
							[
								6678,
								6707
							],
							[
								6967,
								7036
							],
							[
								7865,
								7882
							],
							[
								8182,
								8200
							],
							[
								8243,
								8259
							],
							[
								8352,
								8391
							],
							[
								8712,
								8716
							],
							[
								8855,
								8862
							],
							[
								8925,
								8936
							],
							[
								9134,
								9152
							],
							[
								9456,
								9473
							],
							[
								11243,
								11247
							],
							[
								11864,
								11912
							],
							[
								12163,
								12169
							],
							[
								12643,
								12649
							],
							[
								12697,
								12703
							],
							[
								13408,
								13414
							],
							[
								13445,
								13451
							],
							[
								13533,
								13539
							],
							[
								13892,
								13898
							],
							[
								14062,
								14068
							],
							[
								14094,
								14100
							],
							[
								14118,
								14123
							],
							[
								14166,
								14181
							],
							[
								14204,
								14259
							],
							[
								15112,
								15118
							],
							[
								15260,
								15266
							],
							[
								15389,
								15395
							],
							[
								15551,
								15557
							],
							[
								16132,
								16138
							],
							[
								16187,
								16193
							],
							[
								16360,
								16366
							],
							[
								16384,
								16389
							],
							[
								16440,
								16455
							],
							[
								16656,
								16662
							],
							[
								16682,
								16688
							],
							[
								16705,
								16711
							],
							[
								16965,
								16974
							],
							[
								17046,
								17052
							],
							[
								17157,
								17170
							],
							[
								17272,
								17276
							],
							[
								20706,
								20735
							],
							[
								20885,
								20907
							],
							[
								20933,
								20939
							],
							[
								20970,
								21000
							],
							[
								21035,
								21041
							],
							[
								21067,
								21077
							],
							[
								21132,
								21156
							],
							[
								21217,
								21249
							],
							[
								21275,
								21288
							],
							[
								21315,
								21345
							],
							[
								21398,
								21433
							],
							[
								21438,
								21458
							],
							[
								21572,
								21603
							],
							[
								21881,
								21913
							],
							[
								22088,
								22125
							],
							[
								22209,
								22242
							],
							[
								22305,
								22326
							],
							[
								22432,
								22444
							],
							[
								22463,
								22486
							],
							[
								22619,
								22630
							],
							[
								22659,
								22675
							],
							[
								22707,
								22716
							],
							[
								22745,
								22759
							],
							[
								22791,
								22809
							],
							[
								23041,
								23076
							],
							[
								23862,
								23896
							],
							[
								23980,
								23992
							],
							[
								24182,
								24192
							],
							[
								24438,
								24445
							],
							[
								24464,
								24486
							],
							[
								24858,
								24876
							],
							[
								25018,
								25027
							],
							[
								25055,
								25076
							],
							[
								25317,
								25326
							],
							[
								25371,
								25381
							],
							[
								25512,
								25519
							],
							[
								25634,
								25646
							],
							[
								25676,
								25693
							],
							[
								25903,
								25913
							],
							[
								25963,
								25981
							],
							[
								26027,
								26052
							],
							[
								26166,
								26183
							],
							[
								27846,
								27852
							],
							[
								27994,
								28006
							],
							[
								28050,
								28080
							],
							[
								28588,
								28593
							],
							[
								29178,
								29187
							],
							[
								29210,
								29219
							],
							[
								29240,
								29247
							],
							[
								29280,
								29292
							],
							[
								29798,
								29810
							],
							[
								29839,
								29859
							],
							[
								29923,
								29934
							],
							[
								29967,
								29987
							],
							[
								30051,
								30080
							],
							[
								31609,
								31641
							],
							[
								32038,
								32045
							],
							[
								32089,
								32096
							],
							[
								32124,
								32146
							],
							[
								32175,
								32195
							],
							[
								32337,
								32349
							],
							[
								32520,
								32527
							],
							[
								32711,
								32741
							],
							[
								33057,
								33085
							],
							[
								33115,
								33119
							],
							[
								33138,
								33166
							],
							[
								33199,
								33218
							],
							[
								33277,
								33304
							],
							[
								33337,
								33356
							],
							[
								33431,
								33460
							],
							[
								33578,
								33601
							],
							[
								33741,
								33764
							],
							[
								33893,
								34019
							],
							[
								34683,
								34717
							],
							[
								34784,
								34832
							],
							[
								34878,
								34917
							],
							[
								35522,
								35550
							],
							[
								35599,
								35620
							],
							[
								35694,
								35715
							],
							[
								35776,
								35797
							],
							[
								35870,
								35916
							],
							[
								35965,
								35971
							],
							[
								36045,
								36051
							],
							[
								36117,
								36123
							],
							[
								36194,
								36216
							],
							[
								36687,
								36702
							],
							[
								36788,
								36795
							],
							[
								36891,
								36898
							],
							[
								36953,
								36960
							],
							[
								37000,
								37011
							],
							[
								37349,
								37355
							],
							[
								37388,
								37396
							],
							[
								37563,
								37569
							],
							[
								37617,
								37624
							],
							[
								37686,
								37694
							],
							[
								37751,
								37757
							],
							[
								37816,
								37822
							],
							[
								37884,
								37890
							],
							[
								37953,
								37959
							],
							[
								38022,
								38028
							],
							[
								38086,
								38092
							],
							[
								38139,
								38145
							],
							[
								38202,
								38208
							],
							[
								38269,
								38275
							],
							[
								38324,
								38330
							],
							[
								38818,
								38840
							],
							[
								39190,
								39196
							],
							[
								39201,
								39214
							],
							[
								39586,
								39616
							],
							[
								39629,
								39635
							],
							[
								39698,
								39707
							],
							[
								39746,
								39752
							],
							[
								39800,
								39829
							],
							[
								40528,
								40542
							],
							[
								41320,
								41334
							],
							[
								41489,
								41502
							],
							[
								41539,
								41546
							]
						],
						"symlist":
						[
							"ArgumentError",
							"constructor(...args)",
							"logFile = () =>",
							"arg =>",
							"function ReadJSON(filename)",
							"() =>",
							"function ResolveAlias(filename)",
							"function NormalizePath(p)",
							"FileBannerComment = (filename, i) =>",
							"IsBuiltin = moduleName =>",
							"compact = (n, more = {}) =>",
							"AddUnique = (arr, item) =>",
							"IntToDWord = ival =>",
							"IntToBinary = i =>",
							"(n, value) =>",
							"num =>",
							"(type, lexeme, tok) =>",
							"CompareRange = (a, b) =>",
							"PutsFunction = outFn => str =>",
							"IsWhiteSpace = str =>",
							"debugLog = (str, ...args) =>",
							"pred = arg =>",
							"(acc, opt) =>",
							"arg =>",
							"FileWriter = file =>",
							"close: () =>",
							"function FdWriter(fd, file)",
							"fn = (buf, len) =>",
							"close: () =>",
							"seek: (whence, offset) =>",
							"inspect()",
							"function DummyWriter(name)",
							"fn = (buf, len) =>",
							"close: () =>",
							"seek: () =>",
							"inspect()",
							"function ImportIds(seq)",
							"tok =>",
							"function ImpExpType(seq)",
							"tok =>",
							"tok =>",
							"function ImportType(seq)",
							"function ImportFile(seq)",
							"tok =>",
							"function ExportName(seq)",
							"tok =>",
							"function ByteSequence(tokens)",
							"(n, t) =>",
							"function ModuleLoader(module)",
							"function ResolveImports(source, log = () => {}, recursive, depth = 0)",
							".handler = lex =>",
							".beginCode = () =>",
							"balancer = () =>",
							"self = function ParentheseBalancer(tok)",
							"s =>",
							"reset()",
							"get depth()",
							"showToken = tok =>",
							"PathAdjust = s =>",
							"i =>",
							" function Export(tokens, relativePath = s => s)",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"path()",
							"Export",
							"Export",
							"ids()",
							"({ lexeme }) =>",
							" function Import(tokens, relativePath = s => s, depth)",
							"path()",
							"Import",
							"tok =>",
							"tok =>",
							"tok =>",
							"tok =>",
							"Import",
							"ids()",
							"({ lexeme }) =>",
							"exp =>",
							"exp =>",
							"tok =>",
							"(a, b) =>",
							"imp =>",
							"(acc, imp) =>",
							"b =>",
							"function AddDep(source, file)",
							"function NonWS(tokens)",
							"tok =>",
							"function TokenSequence(tokens)",
							"tok =>",
							"toString()",
							"function Unquote(lexeme)",
							"function LiteralSequence(tokens)",
							"(acc, tok) =>",
							"function UntilEOL(idx, tokens)",
							"function Until(idx, tokens, pred = ",
							"(null, [';', '\\n']))",
							"function WholeLine(idx, tokens)",
							"function Range(file, start, end)",
							"Range.prototype.toString = function()",
							"function InRange([start, end], i)",
							"function IsRange(obj)",
							"NumericRange",
							"constructor(start, end)",
							"get start()",
							"set start(value)",
							"get end()",
							"set end(value)",
							"static from(range)",
							"static *holes(ranges, only = false)",
							"static between([s1, e1], [s2, e2])",
							"NumericRange",
							"pad = s =>",
							"FileMap",
							"constructor(file, buf)",
							"static empty(file)",
							"isEmpty()",
							"static for(file, buf)",
							"isEmpty()",
							"toString()",
							"FileMap",
							"splitAt(pos)",
							"([range, buf]) =>",
							"sliceAt(n)",
							" ([range, buf]) =>",
							"replaceRange(range, file)",
							"sliceIndex = n =>",
							"dump()",
							"(item, i) =>",
							"(acc, [range, buf, str], i) =>",
							"at(i)",
							"toArray()",
							"(s, i) =>",
							"holes()",
							"([range]) =>",
							"firstChunk()",
							"([range, buf], i) =>",
							"lastChunk()",
							"([range, buf], i) =>",
							"write(out, depth = 0, serial)",
							"toString(fn = FileBannerComment)",
							"FileMap",
							"FileMap",
							" function(depth, opts)",
							"([range, buf], i) =>",
							"(item, i) =>",
							"item =>",
							"function BufferFile(file, buf)",
							"function BufferLengths(file)",
							"b =>",
							"function BufferOffsets(file)",
							"([pos, list], b) =>",
							"function BufferRanges(file)",
							"([pos, list], b) =>",
							"function WriteFile(file, tok)",
							"function DumpLexer(lex)",
							"function DumpToken(tok)",
							"function* DependencyTree(root, indent = ' ', spacing = false, depth = 0, pre = '', fn = (name, depth) => `${name} (${depth})`)",
							" function stripLeadingDotSlash(n)",
							"function SpreadAndJoin(iterator, separator = '')",
							"function* PrintUserscriptBanner(fields)",
							"function PrintES6Import(imp)",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							" ({ local, file }) =>",
							"function PrintCJSImport({ type, local, file })",
							" () =>",
							" () =>",
							" () =>",
							"function main(...args)",
							"write(buf, len)",
							"puts(s)",
							"line =>",
							"close()",
							"isWS = s =>",
							" () =>",
							" file =>",
							" () =>",
							" arg =>",
							" file =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							"RelativePath = file =>",
							" () =>",
							" (...args) =>",
							"ContainsAny = (arr, tokens) =>",
							"tok =>",
							"impexp =>",
							"hdr =>",
							" ([acc, prev], hdr) =>",
							"(acc, line) =>",
							"({ depth }) =>",
							"({ name }) =>",
							"name =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACpDQAAQXJndW1lbnRFcnJvcgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgbG9nRmlsZSA9ICgpID0+CiAgYXJnID0+ClJlYWRKU09OKGZpbGVuYW1lKQooKSA9PgpSZXNvbHZlQWxpYXMoZmlsZW5hbWUpCk5vcm1hbGl6ZVBhdGgocCkKRmlsZUJhbm5lckNvbW1lbnQgPSAoZmlsZW5hbWUsIGkpID0+CklzQnVpbHRpbiA9IG1vZHVsZU5hbWUgPT4KICBjb21wYWN0ID0gKG4sIG1vcmUgPSB7fSkgPT4KQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CihuLCB2YWx1ZSkgPT4KICBudW0gPT4KKHR5cGUsIGxleGVtZSwgdG9rKSA9PgpDb21wYXJlUmFuZ2UgPSAoYSwgYikgPT4KUHV0c0Z1bmN0aW9uID0gb3V0Rm4gPT4gc3RyID0+CklzV2hpdGVTcGFjZSA9IHN0ciA9PgogIGRlYnVnTG9nID0gKHN0ciwgLi4uYXJncykgPT4KICBwcmVkID0gYXJnID0+CihhY2MsIG9wdCkgPT4KICBhcmcgPT4KRmlsZVdyaXRlciA9IGZpbGUgPT4KICBjbG9zZTogKCkgPT4KRmRXcml0ZXIoZmQsIGZpbGUpCiAgZm4gPSAoYnVmLCBsZW4pID0+CiAgY2xvc2U6ICgpID0+CiAgc2VlazogKHdoZW5jZSwgb2Zmc2V0KSA9PgogIGluc3BlY3QoKQpEdW1teVdyaXRlcihuYW1lKQogIGZuID0gKGJ1ZiwgbGVuKSA9PgogIGNsb3NlOiAoKSA9PgogIHNlZWs6ICgpID0+CiAgaW5zcGVjdCgpCkltcG9ydElkcyhzZXEpCiAgdG9rID0+CkltcEV4cFR5cGUoc2VxKQogIHRvayA9PgogIHRvayA9PgpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCiAgdG9rID0+CkV4cG9ydE5hbWUoc2VxKQogIHRvayA9PgpCeXRlU2VxdWVuY2UodG9rZW5zKQoobiwgdCkgPT4KTW9kdWxlTG9hZGVyKG1vZHVsZSkKUmVzb2x2ZUltcG9ydHMoc291cmNlLCBsb2cgPSAoKSA9PiB7fSwgcmVjdXJzaXZlLCBkZXB0aCA9IDApCiAgLmhhbmRsZXIgPSBsZXggPT4KICAuYmVnaW5Db2RlID0gKCkgPT4KICBiYWxhbmNlciA9ICgpID0+CiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcyA9PgogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQogIHNob3dUb2tlbiA9IHRvayA9PgpQYXRoQWRqdXN0ID0gcyA9PgogIGkgPT4KRXhwb3J0KHRva2VucywgcmVsYXRpdmVQYXRoID0gcyA9PiBzKQogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHBhdGgoKQpFeHBvcnQKRXhwb3J0CiAgaWRzKCkKKHsgbGV4ZW1lIH0pID0+CkltcG9ydCh0b2tlbnMsIHJlbGF0aXZlUGF0aCA9IHMgPT4gcywgZGVwdGgpCiAgcGF0aCgpCkltcG9ydAogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgpJbXBvcnQKICBpZHMoKQooeyBsZXhlbWUgfSkgPT4KICBleHAgPT4KICBleHAgPT4KICB0b2sgPT4KKGEsIGIpID0+CiAgaW1wID0+CihhY2MsIGltcCkgPT4KICBiID0+CkFkZERlcChzb3VyY2UsIGZpbGUpCk5vbldTKHRva2VucykKICB0b2sgPT4KVG9rZW5TZXF1ZW5jZSh0b2tlbnMpCiAgdG9rID0+CiAgdG9TdHJpbmcoKQpVbnF1b3RlKGxleGVtZSkKTGl0ZXJhbFNlcXVlbmNlKHRva2VucykKKGFjYywgdG9rKSA9PgpVbnRpbEVPTChpZHgsIHRva2VucykKVW50aWwoaWR4LCB0b2tlbnMsIHByZWQgPSAKKG51bGwsIFsnOycsICdcbiddKSkKV2hvbGVMaW5lKGlkeCwgdG9rZW5zKQpSYW5nZShmaWxlLCBzdGFydCwgZW5kKQpSYW5nZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCkluUmFuZ2UoW3N0YXJ0LCBlbmRdLCBpKQpJc1JhbmdlKG9iaikKTnVtZXJpY1JhbmdlCiAgY29uc3RydWN0b3Ioc3RhcnQsIGVuZCkKICBnZXQgc3RhcnQoKQogIHNldCBzdGFydCh2YWx1ZSkKICBnZXQgZW5kKCkKICBzZXQgZW5kKHZhbHVlKQogIHN0YXRpYyBmcm9tKHJhbmdlKQogIHN0YXRpYyAqaG9sZXMocmFuZ2VzLCBvbmx5ID0gZmFsc2UpCiAgc3RhdGljIGJldHdlZW4oW3MxLCBlMV0sIFtzMiwgZTJdKQpOdW1lcmljUmFuZ2UKICBwYWQgPSBzID0+CkZpbGVNYXAKICBjb25zdHJ1Y3RvcihmaWxlLCBidWYpCiAgc3RhdGljIGVtcHR5KGZpbGUpCiAgaXNFbXB0eSgpCiAgc3RhdGljIGZvcihmaWxlLCBidWYpCiAgaXNFbXB0eSgpCiAgdG9TdHJpbmcoKQpGaWxlTWFwCiAgc3BsaXRBdChwb3MpCihbcmFuZ2UsIGJ1Zl0pID0+CiAgc2xpY2VBdChuKQogIChbcmFuZ2UsIGJ1Zl0pID0+CiAgcmVwbGFjZVJhbmdlKHJhbmdlLCBmaWxlKQogIHNsaWNlSW5kZXggPSBuID0+CiAgZHVtcCgpCihpdGVtLCBpKSA9PgooYWNjLCBbcmFuZ2UsIGJ1Ziwgc3RyXSwgaSkgPT4KICBhdChpKQogIHRvQXJyYXkoKQoocywgaSkgPT4KICBob2xlcygpCihbcmFuZ2VdKSA9PgogIGZpcnN0Q2h1bmsoKQooW3JhbmdlLCBidWZdLCBpKSA9PgogIGxhc3RDaHVuaygpCihbcmFuZ2UsIGJ1Zl0sIGkpID0+CiAgd3JpdGUob3V0LCBkZXB0aCA9IDAsIHNlcmlhbCkKICB0b1N0cmluZyhmbiA9IEZpbGVCYW5uZXJDb21tZW50KQpGaWxlTWFwCkZpbGVNYXAKICBmdW5jdGlvbihkZXB0aCwgb3B0cykKKFtyYW5nZSwgYnVmXSwgaSkgPT4KKGl0ZW0sIGkpID0+CiAgaXRlbSA9PgpCdWZmZXJGaWxlKGZpbGUsIGJ1ZikKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkRlcGVuZGVuY3lUcmVlKHJvb3QsIGluZGVudCA9ICcgJywgc3BhY2luZyA9IGZhbHNlLCBkZXB0aCA9IDAsIHByZSA9ICcnLCBmbiA9IChuYW1lLCBkZXB0aCkgPT4gYCR7bmFtZX0gKCR7ZGVwdGh9KWApCiAgc3RyaXBMZWFkaW5nRG90U2xhc2gobikKU3ByZWFkQW5kSm9pbihpdGVyYXRvciwgc2VwYXJhdG9yID0gJycpClByaW50VXNlcnNjcmlwdEJhbm5lcihmaWVsZHMpClByaW50RVM2SW1wb3J0KGltcCkKICAoeyBsb2NhbCwgZmlsZSB9KSA9PgogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogICgpID0+CiAgKCkgPT4KICAoKSA9PgogIG1haW4oLi4uYXJncykKICB3cml0ZShidWYsIGxlbikKICBwdXRzKHMpCiAgbGluZSA9PgogIGNsb3NlKCkKICBpc1dTID0gcyA9PgogICgpID0+CiAgZmlsZSA9PgogICgpID0+CiAgYXJnID0+CiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+ClJlbGF0aXZlUGF0aCA9IGZpbGUgPT4KICAoKSA9PgogICguLi5hcmdzKSA9PgpDb250YWluc0FueSA9IChhcnIsIHRva2VucykgPT4KICB0b2sgPT4KICBpbXBleHAgPT4KICBoZHIgPT4KICAoW2FjYywgcHJldl0sIGhkcikgPT4KKGFjYywgbGluZSkgPT4KKHsgZGVwdGggfSkgPT4KKHsgbmFtZSB9KSA9PgogIG5hbWUgPT4AAAAAAAAAAKkNAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1378,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
						"symkeys":
						[
							[
								177,
								190
							],
							[
								576,
								592
							],
							[
								1184,
								1195
							],
							[
								1457,
								1471
							],
							[
								1622,
								1640
							],
							[
								1768,
								1781
							],
							[
								3602,
								3620
							],
							[
								4219,
								4234
							],
							[
								4535,
								4546
							],
							[
								5100,
								5107
							],
							[
								5396,
								5415
							],
							[
								5538,
								5549
							],
							[
								5646,
								5658
							],
							[
								5808,
								5817
							],
							[
								6228,
								6240
							],
							[
								8681,
								8692
							],
							[
								8891,
								8903
							],
							[
								9750,
								9768
							],
							[
								9925,
								9942
							],
							[
								10086,
								10098
							],
							[
								10242,
								10257
							],
							[
								10401,
								10417
							],
							[
								10561,
								10573
							],
							[
								10718,
								10732
							],
							[
								10900,
								10915
							],
							[
								11111,
								11125
							],
							[
								12884,
								12897
							],
							[
								13048,
								13063
							],
							[
								13610,
								13619
							],
							[
								13797,
								13816
							],
							[
								14014,
								14035
							],
							[
								14136,
								14155
							],
							[
								14352,
								14373
							],
							[
								14472,
								14486
							],
							[
								14820,
								14836
							],
							[
								14997,
								15009
							],
							[
								15151,
								15164
							]
						],
						"symlist":
						[
							"path_absolute",
							"path_absolute_db",
							"path_append",
							"path_canonical",
							"path_canonical_buf",
							"path_collapse",
							"path_common_prefix",
							"path_components",
							"path_concat",
							"path_at",
							"path_num_components",
							"path_exists",
							"path_extname",
							"path_find",
							"path_fnmatch",
							"path_getcwd",
							"path_gethome",
							"path_is_absolute_b",
							"path_is_directory",
							"path_is_file",
							"path_is_chardev",
							"path_is_blockdev",
							"path_is_fifo",
							"path_is_socket",
							"path_is_symlink",
							"path_normalize",
							"path_relative",
							"path_relative_b",
							"path_root",
							"path_skip_component",
							"path_skip_component_s",
							"path_skip_separator",
							"path_skip_separator_s",
							"__path_dirname",
							"path_dirname_len",
							"path_dirname",
							"path_readlink"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACpDQAAQXJndW1lbnRFcnJvcgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgbG9nRmlsZSA9ICgpID0+CiAgYXJnID0+ClJlYWRKU09OKGZpbGVuYW1lKQooKSA9PgpSZXNvbHZlQWxpYXMoZmlsZW5hbWUpCk5vcm1hbGl6ZVBhdGgocCkKRmlsZUJhbm5lckNvbW1lbnQgPSAoZmlsZW5hbWUsIGkpID0+CklzQnVpbHRpbiA9IG1vZHVsZU5hbWUgPT4KICBjb21wYWN0ID0gKG4sIG1vcmUgPSB7fSkgPT4KQWRkVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KSW50VG9EV29yZCA9IGl2YWwgPT4KSW50VG9CaW5hcnkgPSBpID0+CihuLCB2YWx1ZSkgPT4KICBudW0gPT4KKHR5cGUsIGxleGVtZSwgdG9rKSA9PgpDb21wYXJlUmFuZ2UgPSAoYSwgYikgPT4KUHV0c0Z1bmN0aW9uID0gb3V0Rm4gPT4gc3RyID0+CklzV2hpdGVTcGFjZSA9IHN0ciA9PgogIGRlYnVnTG9nID0gKHN0ciwgLi4uYXJncykgPT4KICBwcmVkID0gYXJnID0+CihhY2MsIG9wdCkgPT4KICBhcmcgPT4KRmlsZVdyaXRlciA9IGZpbGUgPT4KICBjbG9zZTogKCkgPT4KRmRXcml0ZXIoZmQsIGZpbGUpCiAgZm4gPSAoYnVmLCBsZW4pID0+CiAgY2xvc2U6ICgpID0+CiAgc2VlazogKHdoZW5jZSwgb2Zmc2V0KSA9PgogIGluc3BlY3QoKQpEdW1teVdyaXRlcihuYW1lKQogIGZuID0gKGJ1ZiwgbGVuKSA9PgogIGNsb3NlOiAoKSA9PgogIHNlZWs6ICgpID0+CiAgaW5zcGVjdCgpCkltcG9ydElkcyhzZXEpCiAgdG9rID0+CkltcEV4cFR5cGUoc2VxKQogIHRvayA9PgogIHRvayA9PgpJbXBvcnRUeXBlKHNlcSkKSW1wb3J0RmlsZShzZXEpCiAgdG9rID0+CkV4cG9ydE5hbWUoc2VxKQogIHRvayA9PgpCeXRlU2VxdWVuY2UodG9rZW5zKQoobiwgdCkgPT4KTW9kdWxlTG9hZGVyKG1vZHVsZSkKUmVzb2x2ZUltcG9ydHMoc291cmNlLCBsb2cgPSAoKSA9PiB7fSwgcmVjdXJzaXZlLCBkZXB0aCA9IDApCiAgLmhhbmRsZXIgPSBsZXggPT4KICAuYmVnaW5Db2RlID0gKCkgPT4KICBiYWxhbmNlciA9ICgpID0+CiAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spCiAgcyA9PgogIHJlc2V0KCkKICBnZXQgZGVwdGgoKQogIHNob3dUb2tlbiA9IHRvayA9PgpQYXRoQWRqdXN0ID0gcyA9PgogIGkgPT4KRXhwb3J0KHRva2VucywgcmVsYXRpdmVQYXRoID0gcyA9PiBzKQogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHBhdGgoKQpFeHBvcnQKRXhwb3J0CiAgaWRzKCkKKHsgbGV4ZW1lIH0pID0+CkltcG9ydCh0b2tlbnMsIHJlbGF0aXZlUGF0aCA9IHMgPT4gcywgZGVwdGgpCiAgcGF0aCgpCkltcG9ydAogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgogIHRvayA9PgpJbXBvcnQKICBpZHMoKQooeyBsZXhlbWUgfSkgPT4KICBleHAgPT4KICBleHAgPT4KICB0b2sgPT4KKGEsIGIpID0+CiAgaW1wID0+CihhY2MsIGltcCkgPT4KICBiID0+CkFkZERlcChzb3VyY2UsIGZpbGUpCk5vbldTKHRva2VucykKICB0b2sgPT4KVG9rZW5TZXF1ZW5jZSh0b2tlbnMpCiAgdG9rID0+CiAgdG9TdHJpbmcoKQpVbnF1b3RlKGxleGVtZSkKTGl0ZXJhbFNlcXVlbmNlKHRva2VucykKKGFjYywgdG9rKSA9PgpVbnRpbEVPTChpZHgsIHRva2VucykKVW50aWwoaWR4LCB0b2tlbnMsIHByZWQgPSAKKG51bGwsIFsnOycsICdcbiddKSkKV2hvbGVMaW5lKGlkeCwgdG9rZW5zKQpSYW5nZShmaWxlLCBzdGFydCwgZW5kKQpSYW5nZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCkluUmFuZ2UoW3N0YXJ0LCBlbmRdLCBpKQpJc1JhbmdlKG9iaikKTnVtZXJpY1JhbmdlCiAgY29uc3RydWN0b3Ioc3RhcnQsIGVuZCkKICBnZXQgc3RhcnQoKQogIHNldCBzdGFydCh2YWx1ZSkKICBnZXQgZW5kKCkKICBzZXQgZW5kKHZhbHVlKQogIHN0YXRpYyBmcm9tKHJhbmdlKQogIHN0YXRpYyAqaG9sZXMocmFuZ2VzLCBvbmx5ID0gZmFsc2UpCiAgc3RhdGljIGJldHdlZW4oW3MxLCBlMV0sIFtzMiwgZTJdKQpOdW1lcmljUmFuZ2UKICBwYWQgPSBzID0+CkZpbGVNYXAKICBjb25zdHJ1Y3RvcihmaWxlLCBidWYpCiAgc3RhdGljIGVtcHR5KGZpbGUpCiAgaXNFbXB0eSgpCiAgc3RhdGljIGZvcihmaWxlLCBidWYpCiAgaXNFbXB0eSgpCiAgdG9TdHJpbmcoKQpGaWxlTWFwCiAgc3BsaXRBdChwb3MpCihbcmFuZ2UsIGJ1Zl0pID0+CiAgc2xpY2VBdChuKQogIChbcmFuZ2UsIGJ1Zl0pID0+CiAgcmVwbGFjZVJhbmdlKHJhbmdlLCBmaWxlKQogIHNsaWNlSW5kZXggPSBuID0+CiAgZHVtcCgpCihpdGVtLCBpKSA9PgooYWNjLCBbcmFuZ2UsIGJ1Ziwgc3RyXSwgaSkgPT4KICBhdChpKQogIHRvQXJyYXkoKQoocywgaSkgPT4KICBob2xlcygpCihbcmFuZ2VdKSA9PgogIGZpcnN0Q2h1bmsoKQooW3JhbmdlLCBidWZdLCBpKSA9PgogIGxhc3RDaHVuaygpCihbcmFuZ2UsIGJ1Zl0sIGkpID0+CiAgd3JpdGUob3V0LCBkZXB0aCA9IDAsIHNlcmlhbCkKICB0b1N0cmluZyhmbiA9IEZpbGVCYW5uZXJDb21tZW50KQpGaWxlTWFwCkZpbGVNYXAKICBmdW5jdGlvbihkZXB0aCwgb3B0cykKKFtyYW5nZSwgYnVmXSwgaSkgPT4KKGl0ZW0sIGkpID0+CiAgaXRlbSA9PgpCdWZmZXJGaWxlKGZpbGUsIGJ1ZikKQnVmZmVyTGVuZ3RocyhmaWxlKQogIGIgPT4KQnVmZmVyT2Zmc2V0cyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CkJ1ZmZlclJhbmdlcyhmaWxlKQooW3BvcywgbGlzdF0sIGIpID0+CldyaXRlRmlsZShmaWxlLCB0b2spCkR1bXBMZXhlcihsZXgpCkR1bXBUb2tlbih0b2spCkRlcGVuZGVuY3lUcmVlKHJvb3QsIGluZGVudCA9ICcgJywgc3BhY2luZyA9IGZhbHNlLCBkZXB0aCA9IDAsIHByZSA9ICcnLCBmbiA9IChuYW1lLCBkZXB0aCkgPT4gYCR7bmFtZX0gKCR7ZGVwdGh9KWApCiAgc3RyaXBMZWFkaW5nRG90U2xhc2gobikKU3ByZWFkQW5kSm9pbihpdGVyYXRvciwgc2VwYXJhdG9yID0gJycpClByaW50VXNlcnNjcmlwdEJhbm5lcihmaWVsZHMpClByaW50RVM2SW1wb3J0KGltcCkKICAoeyBsb2NhbCwgZmlsZSB9KSA9PgogICh7IGxvY2FsLCBmaWxlIH0pID0+CiAgKHsgbG9jYWwsIGZpbGUgfSkgPT4KUHJpbnRDSlNJbXBvcnQoeyB0eXBlLCBsb2NhbCwgZmlsZSB9KQogICgpID0+CiAgKCkgPT4KICAoKSA9PgogIG1haW4oLi4uYXJncykKICB3cml0ZShidWYsIGxlbikKICBwdXRzKHMpCiAgbGluZSA9PgogIGNsb3NlKCkKICBpc1dTID0gcyA9PgogICgpID0+CiAgZmlsZSA9PgogICgpID0+CiAgYXJnID0+CiAgZmlsZSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+ClJlbGF0aXZlUGF0aCA9IGZpbGUgPT4KICAoKSA9PgogICguLi5hcmdzKSA9PgpDb250YWluc0FueSA9IChhcnIsIHRva2VucykgPT4KICB0b2sgPT4KICBpbXBleHAgPT4KICBoZHIgPT4KICAoW2FjYywgcHJldl0sIGhkcikgPT4KKGFjYywgbGluZSkgPT4KKHsgZGVwdGggfSkgPT4KKHsgbmFtZSB9KSA9PgogIG5hbWUgPT4AAAAAAAAAAH0CAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1381,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
						"symkeys":
						[
							[
								177,
								190
							],
							[
								576,
								592
							],
							[
								1184,
								1195
							],
							[
								1457,
								1471
							],
							[
								1622,
								1640
							],
							[
								1768,
								1781
							],
							[
								3602,
								3620
							],
							[
								4219,
								4234
							],
							[
								4535,
								4546
							],
							[
								5100,
								5107
							],
							[
								5396,
								5415
							],
							[
								5538,
								5549
							],
							[
								5646,
								5658
							],
							[
								5808,
								5817
							],
							[
								6228,
								6240
							],
							[
								8681,
								8692
							],
							[
								8891,
								8903
							],
							[
								9750,
								9768
							],
							[
								9925,
								9942
							],
							[
								10086,
								10098
							],
							[
								10242,
								10257
							],
							[
								10401,
								10417
							],
							[
								10561,
								10573
							],
							[
								10718,
								10732
							],
							[
								10900,
								10915
							],
							[
								11111,
								11125
							],
							[
								12884,
								12897
							],
							[
								13048,
								13063
							],
							[
								13610,
								13619
							],
							[
								13797,
								13816
							],
							[
								14014,
								14035
							],
							[
								14136,
								14155
							],
							[
								14352,
								14373
							],
							[
								14472,
								14486
							],
							[
								14820,
								14836
							],
							[
								15020,
								15032
							],
							[
								15174,
								15187
							]
						],
						"symlist":
						[
							"path_absolute",
							"path_absolute_db",
							"path_append",
							"path_canonical",
							"path_canonical_buf",
							"path_collapse",
							"path_common_prefix",
							"path_components",
							"path_concat",
							"path_at",
							"path_num_components",
							"path_exists",
							"path_extname",
							"path_find",
							"path_fnmatch",
							"path_getcwd",
							"path_gethome",
							"path_is_absolute_b",
							"path_is_directory",
							"path_is_file",
							"path_is_chardev",
							"path_is_blockdev",
							"path_is_fifo",
							"path_is_socket",
							"path_is_symlink",
							"path_normalize",
							"path_relative",
							"path_relative_b",
							"path_root",
							"path_skip_component",
							"path_skip_component_s",
							"path_skip_separator",
							"path_skip_separator_s",
							"__path_dirname",
							"path_dirname_len",
							"path_dirname",
							"path_readlink"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB9AgAAICBwYXRoX2Fic29sdXRlCiAgcGF0aF9hYnNvbHV0ZV9kYgogIHBhdGhfYXBwZW5kCiAgcGF0aF9jYW5vbmljYWwKICBwYXRoX2Nhbm9uaWNhbF9idWYKICBwYXRoX2NvbGxhcHNlCiAgcGF0aF9jb21tb25fcHJlZml4CiAgcGF0aF9jb21wb25lbnRzCiAgcGF0aF9jb25jYXQKICBwYXRoX2F0CiAgcGF0aF9udW1fY29tcG9uZW50cwogIHBhdGhfZXhpc3RzCiAgcGF0aF9leHRuYW1lCiAgcGF0aF9maW5kCiAgcGF0aF9mbm1hdGNoCiAgcGF0aF9nZXRjd2QKICBwYXRoX2dldGhvbWUKICBwYXRoX2lzX2Fic29sdXRlX2IKICBwYXRoX2lzX2RpcmVjdG9yeQogIHBhdGhfaXNfZmlsZQogIHBhdGhfaXNfY2hhcmRldgogIHBhdGhfaXNfYmxvY2tkZXYKICBwYXRoX2lzX2ZpZm8KICBwYXRoX2lzX3NvY2tldAogIHBhdGhfaXNfc3ltbGluawogIHBhdGhfbm9ybWFsaXplCiAgcGF0aF9yZWxhdGl2ZQogIHBhdGhfcmVsYXRpdmVfYgogIHBhdGhfcm9vdAogIHBhdGhfc2tpcF9jb21wb25lbnQKICBwYXRoX3NraXBfY29tcG9uZW50X3MKICBwYXRoX3NraXBfc2VwYXJhdG9yCiAgcGF0aF9za2lwX3NlcGFyYXRvcl9zCiAgX19wYXRoX2Rpcm5hbWUKICBwYXRoX2Rpcm5hbWVfbGVuCiAgcGF0aF9kaXJuYW1lCiAgcGF0aF9yZWFkbGluawAAAAAAAAAAfQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH0CAAAgIHBhdGhfYWJzb2x1dGUKICBwYXRoX2Fic29sdXRlX2RiCiAgcGF0aF9hcHBlbmQKICBwYXRoX2Nhbm9uaWNhbAogIHBhdGhfY2Fub25pY2FsX2J1ZgogIHBhdGhfY29sbGFwc2UKICBwYXRoX2NvbW1vbl9wcmVmaXgKICBwYXRoX2NvbXBvbmVudHMKICBwYXRoX2NvbmNhdAogIHBhdGhfYXQKICBwYXRoX251bV9jb21wb25lbnRzCiAgcGF0aF9leGlzdHMKICBwYXRoX2V4dG5hbWUKICBwYXRoX2ZpbmQKICBwYXRoX2ZubWF0Y2gKICBwYXRoX2dldGN3ZAogIHBhdGhfZ2V0aG9tZQogIHBhdGhfaXNfYWJzb2x1dGVfYgogIHBhdGhfaXNfZGlyZWN0b3J5CiAgcGF0aF9pc19maWxlCiAgcGF0aF9pc19jaGFyZGV2CiAgcGF0aF9pc19ibG9ja2RldgogIHBhdGhfaXNfZmlmbwogIHBhdGhfaXNfc29ja2V0CiAgcGF0aF9pc19zeW1saW5rCiAgcGF0aF9ub3JtYWxpemUKICBwYXRoX3JlbGF0aXZlCiAgcGF0aF9yZWxhdGl2ZV9iCiAgcGF0aF9yb290CiAgcGF0aF9za2lwX2NvbXBvbmVudAogIHBhdGhfc2tpcF9jb21wb25lbnRfcwogIHBhdGhfc2tpcF9zZXBhcmF0b3IKICBwYXRoX3NraXBfc2VwYXJhdG9yX3MKICBfX3BhdGhfZGlybmFtZQogIHBhdGhfZGlybmFtZV9sZW4KICBwYXRoX2Rpcm5hbWUKICBwYXRoX3JlYWRsaW5rAAAAAAAAAAB9AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgIAAAAAAABaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1382,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
						"symkeys":
						[
							[
								177,
								190
							],
							[
								576,
								592
							],
							[
								1184,
								1195
							],
							[
								1457,
								1471
							],
							[
								1622,
								1640
							],
							[
								1768,
								1781
							],
							[
								3602,
								3620
							],
							[
								4219,
								4234
							],
							[
								4535,
								4546
							],
							[
								5100,
								5107
							],
							[
								5396,
								5415
							],
							[
								5538,
								5549
							],
							[
								5646,
								5658
							],
							[
								5808,
								5817
							],
							[
								6228,
								6240
							],
							[
								8681,
								8692
							],
							[
								8891,
								8903
							],
							[
								9750,
								9768
							],
							[
								9925,
								9942
							],
							[
								10086,
								10098
							],
							[
								10242,
								10257
							],
							[
								10401,
								10417
							],
							[
								10561,
								10573
							],
							[
								10718,
								10732
							],
							[
								10900,
								10915
							],
							[
								11111,
								11125
							],
							[
								12884,
								12897
							],
							[
								13048,
								13063
							],
							[
								13610,
								13619
							],
							[
								13797,
								13816
							],
							[
								14014,
								14035
							],
							[
								14136,
								14155
							],
							[
								14352,
								14373
							],
							[
								14472,
								14486
							],
							[
								14820,
								14836
							],
							[
								15037,
								15049
							],
							[
								15191,
								15204
							]
						],
						"symlist":
						[
							"path_absolute",
							"path_absolute_db",
							"path_append",
							"path_canonical",
							"path_canonical_buf",
							"path_collapse",
							"path_common_prefix",
							"path_components",
							"path_concat",
							"path_at",
							"path_num_components",
							"path_exists",
							"path_extname",
							"path_find",
							"path_fnmatch",
							"path_getcwd",
							"path_gethome",
							"path_is_absolute_b",
							"path_is_directory",
							"path_is_file",
							"path_is_chardev",
							"path_is_blockdev",
							"path_is_fifo",
							"path_is_socket",
							"path_is_symlink",
							"path_normalize",
							"path_relative",
							"path_relative_b",
							"path_root",
							"path_skip_component",
							"path_skip_component_s",
							"path_skip_separator",
							"path_skip_separator_s",
							"__path_dirname",
							"path_dirname_len",
							"path_dirname",
							"path_readlink"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB9AgAAICBwYXRoX2Fic29sdXRlCiAgcGF0aF9hYnNvbHV0ZV9kYgogIHBhdGhfYXBwZW5kCiAgcGF0aF9jYW5vbmljYWwKICBwYXRoX2Nhbm9uaWNhbF9idWYKICBwYXRoX2NvbGxhcHNlCiAgcGF0aF9jb21tb25fcHJlZml4CiAgcGF0aF9jb21wb25lbnRzCiAgcGF0aF9jb25jYXQKICBwYXRoX2F0CiAgcGF0aF9udW1fY29tcG9uZW50cwogIHBhdGhfZXhpc3RzCiAgcGF0aF9leHRuYW1lCiAgcGF0aF9maW5kCiAgcGF0aF9mbm1hdGNoCiAgcGF0aF9nZXRjd2QKICBwYXRoX2dldGhvbWUKICBwYXRoX2lzX2Fic29sdXRlX2IKICBwYXRoX2lzX2RpcmVjdG9yeQogIHBhdGhfaXNfZmlsZQogIHBhdGhfaXNfY2hhcmRldgogIHBhdGhfaXNfYmxvY2tkZXYKICBwYXRoX2lzX2ZpZm8KICBwYXRoX2lzX3NvY2tldAogIHBhdGhfaXNfc3ltbGluawogIHBhdGhfbm9ybWFsaXplCiAgcGF0aF9yZWxhdGl2ZQogIHBhdGhfcmVsYXRpdmVfYgogIHBhdGhfcm9vdAogIHBhdGhfc2tpcF9jb21wb25lbnQKICBwYXRoX3NraXBfY29tcG9uZW50X3MKICBwYXRoX3NraXBfc2VwYXJhdG9yCiAgcGF0aF9za2lwX3NlcGFyYXRvcl9zCiAgX19wYXRoX2Rpcm5hbWUKICBwYXRoX2Rpcm5hbWVfbGVuCiAgcGF0aF9kaXJuYW1lCiAgcGF0aF9yZWFkbGluawAAAAAAAAAAfQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH0CAAAgIHBhdGhfYWJzb2x1dGUKICBwYXRoX2Fic29sdXRlX2RiCiAgcGF0aF9hcHBlbmQKICBwYXRoX2Nhbm9uaWNhbAogIHBhdGhfY2Fub25pY2FsX2J1ZgogIHBhdGhfY29sbGFwc2UKICBwYXRoX2NvbW1vbl9wcmVmaXgKICBwYXRoX2NvbXBvbmVudHMKICBwYXRoX2NvbmNhdAogIHBhdGhfYXQKICBwYXRoX251bV9jb21wb25lbnRzCiAgcGF0aF9leGlzdHMKICBwYXRoX2V4dG5hbWUKICBwYXRoX2ZpbmQKICBwYXRoX2ZubWF0Y2gKICBwYXRoX2dldGN3ZAogIHBhdGhfZ2V0aG9tZQogIHBhdGhfaXNfYWJzb2x1dGVfYgogIHBhdGhfaXNfZGlyZWN0b3J5CiAgcGF0aF9pc19maWxlCiAgcGF0aF9pc19jaGFyZGV2CiAgcGF0aF9pc19ibG9ja2RldgogIHBhdGhfaXNfZmlmbwogIHBhdGhfaXNfc29ja2V0CiAgcGF0aF9pc19zeW1saW5rCiAgcGF0aF9ub3JtYWxpemUKICBwYXRoX3JlbGF0aXZlCiAgcGF0aF9yZWxhdGl2ZV9iCiAgcGF0aF9yb290CiAgcGF0aF9za2lwX2NvbXBvbmVudAogIHBhdGhfc2tpcF9jb21wb25lbnRfcwogIHBhdGhfc2tpcF9zZXBhcmF0b3IKICBwYXRoX3NraXBfc2VwYXJhdG9yX3MKICBfX3BhdGhfZGlybmFtZQogIHBhdGhfZGlybmFtZV9sZW4KICBwYXRoX2Rpcm5hbWUKICBwYXRoX3JlYWRsaW5rAAAAAAAAAAB9AgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1383,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
						"symkeys":
						[
							[
								194,
								197
							],
							[
								487,
								496
							],
							[
								754,
								762
							],
							[
								967,
								977
							],
							[
								1128,
								1137
							],
							[
								1258,
								1270
							],
							[
								1392,
								1402
							],
							[
								1569,
								1586
							],
							[
								1666,
								1678
							],
							[
								1843,
								1854
							],
							[
								2067,
								2078
							],
							[
								2458,
								2477
							],
							[
								4700,
								4714
							],
							[
								5901,
								5916
							],
							[
								6357,
								6374
							],
							[
								7167,
								7179
							],
							[
								8146,
								8160
							]
						],
						"symlist":
						[
							"max",
							"blob_init",
							"blob_new",
							"blob_write",
							"blob_free",
							"blob_free_rt",
							"blob_input",
							"js_blob_free_func",
							"js_blob_wrap",
							"js_blob_new",
							"js_blob_get",
							"js_blob_constructor",
							"js_blob_method",
							"js_blob_inspect",
							"js_blob_finalizer",
							"js_blob_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AgAAICBwYXRoX2Fic29sdXRlCiAgcGF0aF9hYnNvbHV0ZV9kYgogIHBhdGhfYXBwZW5kCiAgcGF0aF9jYW5vbmljYWwKICBwYXRoX2Nhbm9uaWNhbF9idWYKICBwYXRoX2NvbGxhcHNlCiAgcGF0aF9jb21tb25fcHJlZml4CiAgcGF0aF9jb21wb25lbnRzCiAgcGF0aF9jb25jYXQKICBwYXRoX2F0CiAgcGF0aF9udW1fY29tcG9uZW50cwogIHBhdGhfZXhpc3RzCiAgcGF0aF9leHRuYW1lCiAgcGF0aF9maW5kCiAgcGF0aF9mbm1hdGNoCiAgcGF0aF9nZXRjd2QKICBwYXRoX2dldGhvbWUKICBwYXRoX2lzX2Fic29sdXRlX2IKICBwYXRoX2lzX2RpcmVjdG9yeQogIHBhdGhfaXNfZmlsZQogIHBhdGhfaXNfY2hhcmRldgogIHBhdGhfaXNfYmxvY2tkZXYKICBwYXRoX2lzX2ZpZm8KICBwYXRoX2lzX3NvY2tldAogIHBhdGhfaXNfc3ltbGluawogIHBhdGhfbm9ybWFsaXplCiAgcGF0aF9yZWxhdGl2ZQogIHBhdGhfcmVsYXRpdmVfYgogIHBhdGhfcm9vdAogIHBhdGhfc2tpcF9jb21wb25lbnQKICBwYXRoX3NraXBfY29tcG9uZW50X3MKICBwYXRoX3NraXBfc2VwYXJhdG9yCiAgcGF0aF9za2lwX3NlcGFyYXRvcl9zCiAgX19wYXRoX2Rpcm5hbWUKICBwYXRoX2Rpcm5hbWVfbGVuCiAgcGF0aF9kaXJuYW1lCiAgcGF0aF9yZWFkbGluawAAAAAAAAAA+wAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1384,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD7AAAAICBtYXgKICBibG9iX2luaXQKICBibG9iX25ldwogIGJsb2Jfd3JpdGUKICBibG9iX2ZyZWUKICBibG9iX2ZyZWVfcnQKICBibG9iX2lucHV0CiAganNfYmxvYl9mcmVlX2Z1bmMKICBqc19ibG9iX3dyYXAKICBqc19ibG9iX25ldwogIGpzX2Jsb2JfZ2V0CiAganNfYmxvYl9jb25zdHJ1Y3RvcgogIGpzX2Jsb2JfbWV0aG9kCiAganNfYmxvYl9pbnNwZWN0CiAganNfYmxvYl9maW5hbGl6ZXIKICBqc19ibG9iX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1385,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1386,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1387,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1388,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1389,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1390,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1391,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1392,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1393,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1394,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
						"symkeys":
						[
							[
								399,
								410
							],
							[
								690,
								704
							],
							[
								974,
								991
							],
							[
								1850,
								1863
							],
							[
								1892,
								1905
							],
							[
								2196,
								2208
							],
							[
								2565,
								2578
							],
							[
								2760,
								2780
							],
							[
								3857,
								3874
							],
							[
								4117,
								4137
							],
							[
								4756,
								4772
							],
							[
								6123,
								6135
							],
							[
								8048,
								8066
							],
							[
								9936,
								9950
							],
							[
								10176,
								10190
							],
							[
								10516,
								10528
							],
							[
								11067,
								11076
							],
							[
								12964,
								12981
							],
							[
								13296,
								13315
							],
							[
								13571,
								13589
							],
							[
								14018,
								14032
							],
							[
								14172,
								14183
							],
							[
								14511,
								14523
							],
							[
								15108,
								15121
							],
							[
								15288,
								15305
							],
							[
								16504,
								16524
							],
							[
								17804,
								17819
							],
							[
								24827,
								24839
							],
							[
								28117,
								28129
							],
							[
								29277,
								29292
							],
							[
								29680,
								29695
							],
							[
								30045,
								30064
							],
							[
								30813,
								30828
							],
							[
								31264,
								31281
							],
							[
								31753,
								31765
							],
							[
								33591,
								33606
							],
							[
								34358,
								34371
							],
							[
								34594,
								34607
							],
							[
								35208,
								35225
							],
							[
								35622,
								35638
							],
							[
								36700,
								36718
							],
							[
								40601,
								40614
							],
							[
								42191,
								42205
							]
						],
						"symlist":
						[
							"JSLexerRule",
							"offset_toarray",
							"js_lexer_rule_new",
							"token_methods",
							"token_getters",
							"js_token_new",
							"js_token_wrap",
							"js_token_constructor",
							"js_token_tostring",
							"js_token_toprimitive",
							"js_token_inspect",
							"js_token_get",
							"js_token_finalizer",
							"lexer_continue",
							"lexer_to_state",
							"lexer_handle",
							"lexer_lex",
							"lexer_escape_pred",
							"lexer_unescape_pred",
							"lexer_current_line",
							"lexer_lexeme_s",
							"lexer_token",
							"js_lexer_new",
							"js_lexer_wrap",
							"js_lexer_add_rule",
							"js_lexer_constructor",
							"js_lexer_method",
							"js_lexer_get",
							"js_lexer_set",
							"js_lexer_tokens",
							"js_lexer_states",
							"js_lexer_statestack",
							"js_lexer_escape",
							"js_lexer_tostring",
							"js_lexer_lex",
							"js_lexer_nextfn",
							"js_lexer_next",
							"js_lexer_call",
							"js_lexer_iterator",
							"js_lexer_inspect",
							"js_lexer_finalizer",
							"js_lexer_init",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAA+QIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1395,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
						"symkeys":
						[
							[
								276,
								288
							],
							[
								370,
								383
							],
							[
								421,
								434
							],
							[
								486,
								499
							],
							[
								595,
								609
							],
							[
								727,
								740
							],
							[
								836,
								850
							]
						],
						"symlist":
						[
							"js_lexer_new",
							"js_lexer_wrap",
							"js_token_wrap",
							"js_token_data",
							"js_token_data2",
							"js_lexer_data",
							"js_lexer_data2"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD5AgAASlNMZXhlclJ1bGUKICBvZmZzZXRfdG9hcnJheQogIGpzX2xleGVyX3J1bGVfbmV3CiAgdG9rZW5fbWV0aG9kcwogIHRva2VuX2dldHRlcnMKICBqc190b2tlbl9uZXcKICBqc190b2tlbl93cmFwCiAganNfdG9rZW5fY29uc3RydWN0b3IKICBqc190b2tlbl90b3N0cmluZwogIGpzX3Rva2VuX3RvcHJpbWl0aXZlCiAganNfdG9rZW5faW5zcGVjdAogIGpzX3Rva2VuX2dldAogIGpzX3Rva2VuX2ZpbmFsaXplcgogIGxleGVyX2NvbnRpbnVlCiAgbGV4ZXJfdG9fc3RhdGUKICBsZXhlcl9oYW5kbGUKICBsZXhlcl9sZXgKICBsZXhlcl9lc2NhcGVfcHJlZAogIGxleGVyX3VuZXNjYXBlX3ByZWQKICBsZXhlcl9jdXJyZW50X2xpbmUKICBsZXhlcl9sZXhlbWVfcwogIGxleGVyX3Rva2VuCiAganNfbGV4ZXJfbmV3CiAganNfbGV4ZXJfd3JhcAogIGpzX2xleGVyX2FkZF9ydWxlCiAganNfbGV4ZXJfY29uc3RydWN0b3IKICBqc19sZXhlcl9tZXRob2QKICBqc19sZXhlcl9nZXQKICBqc19sZXhlcl9zZXQKICBqc19sZXhlcl90b2tlbnMKICBqc19sZXhlcl9zdGF0ZXMKICBqc19sZXhlcl9zdGF0ZXN0YWNrCiAganNfbGV4ZXJfZXNjYXBlCiAganNfbGV4ZXJfdG9zdHJpbmcKICBqc19sZXhlcl9sZXgKICBqc19sZXhlcl9uZXh0Zm4KICBqc19sZXhlcl9uZXh0CiAganNfbGV4ZXJfY2FsbAogIGpzX2xleGVyX2l0ZXJhdG9yCiAganNfbGV4ZXJfaW5zcGVjdAogIGpzX2xleGVyX2ZpbmFsaXplcgogIGpzX2xleGVyX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAHAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1396,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
						"symkeys":
						[
							[
								325,
								341
							],
							[
								378,
								398
							],
							[
								471,
								485
							],
							[
								527,
								543
							],
							[
								588,
								611
							],
							[
								687,
								710
							],
							[
								785,
								806
							],
							[
								842,
								858
							],
							[
								901,
								924
							],
							[
								988,
								1004
							],
							[
								1217,
								1234
							]
						],
						"symlist":
						[
							"js_location_wrap",
							"js_location_tostring",
							"js_is_location",
							"js_location_from",
							"js_location_toprimitive",
							"js_location_constructor",
							"js_location_finalizer",
							"js_location_init",
							"js_init_module_location",
							"js_location_data",
							"js_location_data2"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABwAAAAICBqc19sZXhlcl9uZXcKICBqc19sZXhlcl93cmFwCiAganNfdG9rZW5fd3JhcAogIGpzX3Rva2VuX2RhdGEKICBqc190b2tlbl9kYXRhMgogIGpzX2xleGVyX2RhdGEKICBqc19sZXhlcl9kYXRhMgAAAAAAAAAA7QAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1397,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
						"symkeys":
						[
							[
								203,
								206
							],
							[
								544,
								562
							],
							[
								1080,
								1087
							],
							[
								1218,
								1238
							],
							[
								1947,
								1961
							],
							[
								2547,
								2562
							],
							[
								3526,
								3541
							],
							[
								4579,
								4595
							],
							[
								5801,
								5824
							],
							[
								6295,
								6318
							],
							[
								8404,
								8423
							],
							[
								9541,
								9558
							],
							[
								9916,
								9933
							],
							[
								10423,
								10444
							],
							[
								11832,
								11848
							],
							[
								12991,
								13005
							]
						],
						"symlist":
						[
							"max",
							"js_location_create",
							"JSValue",
							"js_location_tostring",
							"js_is_location",
							"js_location_get",
							"js_location_set",
							"js_location_from",
							"js_location_toprimitive",
							"js_location_constructor",
							"js_location_inspect",
							"js_location_clone",
							"js_location_count",
							"js_location_finalizer",
							"js_location_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADtAAAAICBqc19sb2NhdGlvbl93cmFwCiAganNfbG9jYXRpb25fdG9zdHJpbmcKICBqc19pc19sb2NhdGlvbgogIGpzX2xvY2F0aW9uX2Zyb20KICBqc19sb2NhdGlvbl90b3ByaW1pdGl2ZQogIGpzX2xvY2F0aW9uX2NvbnN0cnVjdG9yCiAganNfbG9jYXRpb25fZmluYWxpemVyCiAganNfbG9jYXRpb25faW5pdAogIGpzX2luaXRfbW9kdWxlX2xvY2F0aW9uCiAganNfbG9jYXRpb25fZGF0YQogIGpzX2xvY2F0aW9uX2RhdGEyAAAAAAAAAAAtAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1398,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
						"symkeys":
						[
							[
								276,
								288
							],
							[
								370,
								383
							],
							[
								421,
								434
							],
							[
								486,
								499
							],
							[
								595,
								609
							],
							[
								727,
								740
							],
							[
								836,
								850
							]
						],
						"symlist":
						[
							"js_lexer_new",
							"js_lexer_wrap",
							"js_token_wrap",
							"js_token_data",
							"js_token_data2",
							"js_lexer_data",
							"js_lexer_data2"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtAQAAICBtYXgKICBqc19sb2NhdGlvbl9jcmVhdGUKSlNWYWx1ZQogIGpzX2xvY2F0aW9uX3Rvc3RyaW5nCiAganNfaXNfbG9jYXRpb24KICBqc19sb2NhdGlvbl9nZXQKICBqc19sb2NhdGlvbl9zZXQKICBqc19sb2NhdGlvbl9mcm9tCiAganNfbG9jYXRpb25fdG9wcmltaXRpdmUKICBqc19sb2NhdGlvbl9jb25zdHJ1Y3RvcgogIGpzX2xvY2F0aW9uX2luc3BlY3QKICBqc19sb2NhdGlvbl9jbG9uZQogIGpzX2xvY2F0aW9uX2NvdW50CiAganNfbG9jYXRpb25fZmluYWxpemVyCiAganNfbG9jYXRpb25faW5pdApKU19JTklUX01PRFVMRQAAAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1399,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
						"symkeys":
						[
							[
								399,
								410
							],
							[
								690,
								704
							],
							[
								974,
								991
							],
							[
								1850,
								1863
							],
							[
								1892,
								1905
							],
							[
								2196,
								2208
							],
							[
								2565,
								2578
							],
							[
								2760,
								2780
							],
							[
								3857,
								3874
							],
							[
								4117,
								4137
							],
							[
								4756,
								4772
							],
							[
								6123,
								6135
							],
							[
								8048,
								8066
							],
							[
								9936,
								9950
							],
							[
								10176,
								10190
							],
							[
								10516,
								10528
							],
							[
								11067,
								11076
							],
							[
								12964,
								12981
							],
							[
								13296,
								13315
							],
							[
								13571,
								13589
							],
							[
								14018,
								14032
							],
							[
								14172,
								14183
							],
							[
								14511,
								14523
							],
							[
								15108,
								15121
							],
							[
								15288,
								15305
							],
							[
								16504,
								16524
							],
							[
								17804,
								17819
							],
							[
								24827,
								24839
							],
							[
								28117,
								28129
							],
							[
								29277,
								29292
							],
							[
								29680,
								29695
							],
							[
								30045,
								30064
							],
							[
								30813,
								30828
							],
							[
								31264,
								31281
							],
							[
								31753,
								31765
							],
							[
								33591,
								33606
							],
							[
								34358,
								34371
							],
							[
								34594,
								34607
							],
							[
								35208,
								35225
							],
							[
								35622,
								35638
							],
							[
								36700,
								36718
							],
							[
								40601,
								40614
							],
							[
								42191,
								42205
							]
						],
						"symlist":
						[
							"JSLexerRule",
							"offset_toarray",
							"js_lexer_rule_new",
							"token_methods",
							"token_getters",
							"js_token_new",
							"js_token_wrap",
							"js_token_constructor",
							"js_token_tostring",
							"js_token_toprimitive",
							"js_token_inspect",
							"js_token_get",
							"js_token_finalizer",
							"lexer_continue",
							"lexer_to_state",
							"lexer_handle",
							"lexer_lex",
							"lexer_escape_pred",
							"lexer_unescape_pred",
							"lexer_current_line",
							"lexer_lexeme_s",
							"lexer_token",
							"js_lexer_new",
							"js_lexer_wrap",
							"js_lexer_add_rule",
							"js_lexer_constructor",
							"js_lexer_method",
							"js_lexer_get",
							"js_lexer_set",
							"js_lexer_tokens",
							"js_lexer_states",
							"js_lexer_statestack",
							"js_lexer_escape",
							"js_lexer_tostring",
							"js_lexer_lex",
							"js_lexer_nextfn",
							"js_lexer_next",
							"js_lexer_call",
							"js_lexer_iterator",
							"js_lexer_inspect",
							"js_lexer_finalizer",
							"js_lexer_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABwAAAAICBqc19sZXhlcl9uZXcKICBqc19sZXhlcl93cmFwCiAganNfdG9rZW5fd3JhcAogIGpzX3Rva2VuX2RhdGEKICBqc190b2tlbl9kYXRhMgogIGpzX2xleGVyX2RhdGEKICBqc19sZXhlcl9kYXRhMgAAAAAAAAAA+QIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1400,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
						"symkeys":
						[
							[
								354,
								364
							],
							[
								3920,
								3931
							],
							[
								3958,
								3968
							],
							[
								3995,
								4003
							],
							[
								4029,
								4041
							],
							[
								4066,
								4073
							],
							[
								4164,
								4177
							],
							[
								4901,
								4920
							],
							[
								6361,
								6370
							],
							[
								6380,
								6387
							],
							[
								7277,
								7289
							],
							[
								7485,
								7503
							],
							[
								7513,
								7529
							],
							[
								8335,
								8343
							],
							[
								8435,
								8445
							],
							[
								8677,
								8687
							],
							[
								8794,
								8806
							],
							[
								8912,
								8928
							],
							[
								9098,
								9107
							],
							[
								10638,
								10646
							],
							[
								11321,
								11333
							],
							[
								11506,
								11516
							],
							[
								12111,
								12124
							],
							[
								13239,
								13247
							],
							[
								13433,
								13451
							],
							[
								15030,
								15048
							],
							[
								15650,
								15660
							],
							[
								15991,
								16006
							],
							[
								16016,
								16023
							],
							[
								16922,
								16930
							],
							[
								17042,
								17053
							],
							[
								17347,
								17360
							],
							[
								17690,
								17702
							],
							[
								17948,
								17968
							],
							[
								18282,
								18301
							],
							[
								18311,
								18319
							],
							[
								19512,
								19523
							],
							[
								19657,
								19672
							],
							[
								19745,
								19766
							],
							[
								19834,
								19849
							],
							[
								19923,
								19936
							],
							[
								20039,
								20051
							],
							[
								20165,
								20175
							],
							[
								20234,
								20251
							],
							[
								20313,
								20323
							],
							[
								20421,
								20438
							],
							[
								20543,
								20562
							],
							[
								20744,
								20770
							],
							[
								20853,
								20868
							],
							[
								20949,
								20960
							],
							[
								21041,
								21054
							],
							[
								21135,
								21156
							],
							[
								21354,
								21373
							],
							[
								21569,
								21596
							],
							[
								21680,
								21700
							],
							[
								22026,
								22044
							],
							[
								22629,
								22641
							],
							[
								23869,
								23872
							],
							[
								23896,
								23899
							],
							[
								23980,
								23992
							],
							[
								24000,
								24010
							],
							[
								24021,
								24024
							],
							[
								24036,
								24039
							],
							[
								24085,
								24088
							],
							[
								24355,
								24358
							],
							[
								24370,
								24373
							],
							[
								24410,
								24413
							],
							[
								24801,
								24813
							],
							[
								24957,
								24978
							],
							[
								25396,
								25416
							],
							[
								25640,
								25660
							],
							[
								25763,
								25778
							],
							[
								26081,
								26106
							],
							[
								26331,
								26354
							],
							[
								26600,
								26620
							],
							[
								26728,
								26746
							],
							[
								27001,
								27014
							],
							[
								27108,
								27137
							],
							[
								27244,
								27265
							],
							[
								27422,
								27443
							],
							[
								27552,
								27567
							],
							[
								27690,
								27708
							],
							[
								27819,
								27834
							],
							[
								28253,
								28279
							],
							[
								28388,
								28412
							],
							[
								28480,
								28499
							],
							[
								28764,
								28781
							],
							[
								28893,
								28909
							],
							[
								28997,
								29013
							],
							[
								29511,
								29524
							],
							[
								29614,
								29631
							],
							[
								29783,
								29796
							],
							[
								29806,
								29817
							],
							[
								30936,
								30946
							],
							[
								31289,
								31300
							],
							[
								31657,
								31667
							],
							[
								31832,
								31849
							],
							[
								32077,
								32085
							],
							[
								32346,
								32363
							],
							[
								32463,
								32480
							],
							[
								32690,
								32700
							],
							[
								32775,
								32789
							],
							[
								32876,
								32890
							],
							[
								32981,
								33002
							],
							[
								33282,
								33299
							],
							[
								33500,
								33519
							],
							[
								33855,
								33866
							],
							[
								34025,
								34039
							],
							[
								34126,
								34143
							],
							[
								34331,
								34343
							],
							[
								34808,
								34817
							],
							[
								35523,
								35536
							],
							[
								35991,
								36004
							],
							[
								36099,
								36112
							],
							[
								36190,
								36207
							],
							[
								36308,
								36317
							],
							[
								36509,
								36524
							],
							[
								36725,
								36744
							],
							[
								36852,
								36874
							],
							[
								37360,
								37373
							],
							[
								37431,
								37442
							],
							[
								37519,
								37528
							],
							[
								37536,
								37557
							]
						],
						"symlist":
						[
							"JSClassIds",
							"JSErrorEnum",
							"OPCodeEnum",
							"JSString",
							"JSAtomStruct",
							"JSShape",
							"JSGCPhaseEnum",
							"JSNumericOperations",
							"JSRuntime",
							"JSClass",
							"JSStackFrame",
							"JSGCObjectTypeEnum",
							"JSGCObjectHeader",
							"JSVarRef",
							"JSFloatEnv",
							"JSBigFloat",
							"JSBigDecimal",
							"JSAutoInitIDEnum",
							"JSContext",
							"JSString",
							"JSClosureVar",
							"JSVarScope",
							"JSVarKindEnum",
							"JSVarDef",
							"JSFunctionKindEnum",
							"JSFunctionBytecode",
							"JSProperty",
							"JSShapeProperty",
							"JSShape",
							"JSRegExp",
							"JSProxyData",
							"JSArrayBuffer",
							"JSTypedArray",
							"JSAsyncFunctionState",
							"JSAsyncFunctionData",
							"JSObject",
							"JSMapRecord",
							"JSBoundFunction",
							"JSCFunctionDataRecord",
							"JSForInIterator",
							"JSArrayBuffer",
							"JSTypedArray",
							"JSFloatEnv",
							"JSOperatorSetData",
							"JSMapState",
							"JSMapIteratorData",
							"JSArrayIteratorData",
							"JSRegExpStringIteratorData",
							"JSGeneratorData",
							"JSProxyData",
							"JSPromiseData",
							"JSPromiseFunctionData",
							"JSAsyncFunctionData",
							"JSAsyncFromSyncIteratorData",
							"JSAsyncGeneratorData",
							"JSFunctionBytecode",
							"JSTypedArray",
							"FMT",
							"DEF",
							"OPCodeFormat",
							"OPCodeEnum",
							"FMT",
							"DEF",
							"def",
							"FMT",
							"DEF",
							"def",
							"StringBuffer",
							"JSCFunctionDataRecord",
							"JSMemoryUsage_helper",
							"JSGeneratorStateEnum",
							"JSGeneratorData",
							"JSAsyncGeneratorStateEnum",
							"JSAsyncGeneratorRequest",
							"JSAsyncGeneratorData",
							"JSPromiseStateEnum",
							"JSPromiseData",
							"JSPromiseFunctionDataResolved",
							"JSPromiseFunctionData",
							"JSPromiseReactionData",
							"JSBoundFunction",
							"JSIteratorKindEnum",
							"JSForInIterator",
							"JSOverloadableOperatorEnum",
							"JSBinaryOperatorDefEntry",
							"JSBinaryOperatorDef",
							"JSOperatorSetData",
							"JSReqModuleEntry",
							"JSExportTypeEnum",
							"JSExportEntry",
							"JSStarExportEntry",
							"JSImportEntry",
							"JSModuleDef",
							"JSJobEntry",
							"JSMapRecord",
							"JSMapState",
							"JSMapIteratorData",
							"JSOpCode",
							"short_opcode_info",
							"short_opcode_info",
							"JSParsePos",
							"JSResolveEntry",
							"JSResolveState",
							"ExportedNameEntryEnum",
							"ExportedNameEntry",
							"GetExportNamesState",
							"CodeContext",
							"StackSizeState",
							"JSObjectListEntry",
							"JSObjectList",
							"BCTagEnum",
							"BCWriterState",
							"BCReaderState",
							"JSOSRWHandler",
							"JSOSSignalHandler",
							"JSOSTimer",
							"JSWorkerMessage",
							"JSWorkerMessagePipe",
							"JSWorkerMessageHandler",
							"JSThreadState",
							"JSSABHeader",
							"JSSTDFile",
							"JS_IsUncatchableError"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD5AgAASlNMZXhlclJ1bGUKICBvZmZzZXRfdG9hcnJheQogIGpzX2xleGVyX3J1bGVfbmV3CiAgdG9rZW5fbWV0aG9kcwogIHRva2VuX2dldHRlcnMKICBqc190b2tlbl9uZXcKICBqc190b2tlbl93cmFwCiAganNfdG9rZW5fY29uc3RydWN0b3IKICBqc190b2tlbl90b3N0cmluZwogIGpzX3Rva2VuX3RvcHJpbWl0aXZlCiAganNfdG9rZW5faW5zcGVjdAogIGpzX3Rva2VuX2dldAogIGpzX3Rva2VuX2ZpbmFsaXplcgogIGxleGVyX2NvbnRpbnVlCiAgbGV4ZXJfdG9fc3RhdGUKICBsZXhlcl9oYW5kbGUKICBsZXhlcl9sZXgKICBsZXhlcl9lc2NhcGVfcHJlZAogIGxleGVyX3VuZXNjYXBlX3ByZWQKICBsZXhlcl9jdXJyZW50X2xpbmUKICBsZXhlcl9sZXhlbWVfcwogIGxleGVyX3Rva2VuCiAganNfbGV4ZXJfbmV3CiAganNfbGV4ZXJfd3JhcAogIGpzX2xleGVyX2FkZF9ydWxlCiAganNfbGV4ZXJfY29uc3RydWN0b3IKICBqc19sZXhlcl9tZXRob2QKICBqc19sZXhlcl9nZXQKICBqc19sZXhlcl9zZXQKICBqc19sZXhlcl90b2tlbnMKICBqc19sZXhlcl9zdGF0ZXMKICBqc19sZXhlcl9zdGF0ZXN0YWNrCiAganNfbGV4ZXJfZXNjYXBlCiAganNfbGV4ZXJfdG9zdHJpbmcKICBqc19sZXhlcl9sZXgKICBqc19sZXhlcl9uZXh0Zm4KICBqc19sZXhlcl9uZXh0CiAganNfbGV4ZXJfY2FsbAogIGpzX2xleGVyX2l0ZXJhdG9yCiAganNfbGV4ZXJfaW5zcGVjdAogIGpzX2xleGVyX2ZpbmFsaXplcgogIGpzX2xleGVyX2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAADYHAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1401,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								437,
								443
							],
							[
								857,
								879
							],
							[
								928,
								941
							],
							[
								982,
								1000
							],
							[
								1379,
								1389
							],
							[
								1781,
								1798
							],
							[
								1888,
								1910
							],
							[
								2013,
								2029
							],
							[
								2269,
								2289
							],
							[
								2864,
								2884
							],
							[
								3594,
								3614
							],
							[
								3845,
								3864
							],
							[
								8130,
								8152
							],
							[
								9782,
								9804
							],
							[
								10009,
								10024
							],
							[
								10138,
								10164
							],
							[
								10613,
								10649
							],
							[
								11051,
								11073
							],
							[
								11392,
								11414
							],
							[
								12430,
								12451
							],
							[
								12936,
								12956
							],
							[
								14520,
								14540
							],
							[
								15682,
								15710
							],
							[
								18334,
								18357
							],
							[
								18743,
								18766
							],
							[
								20126,
								20149
							],
							[
								21927,
								21948
							],
							[
								22210,
								22233
							],
							[
								23922,
								23944
							],
							[
								24692,
								24715
							],
							[
								34390,
								34412
							],
							[
								36790,
								36800
							],
							[
								37711,
								37730
							],
							[
								38119,
								38134
							],
							[
								38328,
								38355
							],
							[
								38405,
								38432
							],
							[
								38713,
								38734
							],
							[
								38966,
								38981
							],
							[
								40221,
								40235
							]
						],
						"symlist":
						[
							"isatty",
							"INSPECT_INT32T_INRANGE",
							"INSPECT_LEVEL",
							"INSPECT_IS_COMPACT",
							"prop_key_t",
							"inspect_options_t",
							"js_inspect_print_value",
							"regexp_predicate",
							"inspect_screen_width",
							"inspect_options_init",
							"inspect_options_free",
							"inspect_options_get",
							"inspect_options_object",
							"inspect_options_hidden",
							"inspect_newline",
							"js_object_getpropertynames",
							"js_object_getpropertynames_recursive",
							"js_inspect_custom_atom",
							"js_inspect_custom_call",
							"js_inspect_print_date",
							"js_inspect_print_map",
							"js_inspect_print_set",
							"js_inspect_print_arraybuffer",
							"js_inspect_print_regexp",
							"js_inspect_print_number",
							"js_inspect_print_string",
							"js_inspect_print_atom",
							"js_inspect_print_module",
							"js_inspect_print_error",
							"js_inspect_print_object",
							"js_inspect_print_value",
							"js_inspect",
							"js_inspect_tostring",
							"js_inspect_atom",
							"js_debugger_build_backtrace",
							"js_inspect_stacktrace_value",
							"js_inspect_stacktrace",
							"js_inspect_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA2BwAASlNDbGFzc0lkcwpKU0Vycm9yRW51bQpPUENvZGVFbnVtCkpTU3RyaW5nCkpTQXRvbVN0cnVjdApKU1NoYXBlCkpTR0NQaGFzZUVudW0KSlNOdW1lcmljT3BlcmF0aW9ucwpKU1J1bnRpbWUKSlNDbGFzcwpKU1N0YWNrRnJhbWUKSlNHQ09iamVjdFR5cGVFbnVtCkpTR0NPYmplY3RIZWFkZXIKSlNWYXJSZWYKSlNGbG9hdEVudgpKU0JpZ0Zsb2F0CkpTQmlnRGVjaW1hbApKU0F1dG9Jbml0SURFbnVtCkpTQ29udGV4dApKU1N0cmluZwpKU0Nsb3N1cmVWYXIKSlNWYXJTY29wZQpKU1ZhcktpbmRFbnVtCkpTVmFyRGVmCkpTRnVuY3Rpb25LaW5kRW51bQpKU0Z1bmN0aW9uQnl0ZWNvZGUKSlNQcm9wZXJ0eQpKU1NoYXBlUHJvcGVydHkKSlNTaGFwZQpKU1JlZ0V4cApKU1Byb3h5RGF0YQpKU0FycmF5QnVmZmVyCkpTVHlwZWRBcnJheQpKU0FzeW5jRnVuY3Rpb25TdGF0ZQpKU0FzeW5jRnVuY3Rpb25EYXRhCkpTT2JqZWN0CkpTTWFwUmVjb3JkCkpTQm91bmRGdW5jdGlvbgpKU0NGdW5jdGlvbkRhdGFSZWNvcmQKSlNGb3JJbkl0ZXJhdG9yCkpTQXJyYXlCdWZmZXIKSlNUeXBlZEFycmF5CkpTRmxvYXRFbnYKSlNPcGVyYXRvclNldERhdGEKSlNNYXBTdGF0ZQpKU01hcEl0ZXJhdG9yRGF0YQpKU0FycmF5SXRlcmF0b3JEYXRhCkpTUmVnRXhwU3RyaW5nSXRlcmF0b3JEYXRhCkpTR2VuZXJhdG9yRGF0YQpKU1Byb3h5RGF0YQpKU1Byb21pc2VEYXRhCkpTUHJvbWlzZUZ1bmN0aW9uRGF0YQpKU0FzeW5jRnVuY3Rpb25EYXRhCkpTQXN5bmNGcm9tU3luY0l0ZXJhdG9yRGF0YQpKU0FzeW5jR2VuZXJhdG9yRGF0YQpKU0Z1bmN0aW9uQnl0ZWNvZGUKSlNUeXBlZEFycmF5CkZNVApERUYKT1BDb2RlRm9ybWF0Ck9QQ29kZUVudW0KRk1UCkRFRgogIGRlZgpGTVQKREVGCiAgZGVmClN0cmluZ0J1ZmZlcgpKU0NGdW5jdGlvbkRhdGFSZWNvcmQKSlNNZW1vcnlVc2FnZV9oZWxwZXIKSlNHZW5lcmF0b3JTdGF0ZUVudW0KSlNHZW5lcmF0b3JEYXRhCkpTQXN5bmNHZW5lcmF0b3JTdGF0ZUVudW0KSlNBc3luY0dlbmVyYXRvclJlcXVlc3QKSlNBc3luY0dlbmVyYXRvckRhdGEKSlNQcm9taXNlU3RhdGVFbnVtCkpTUHJvbWlzZURhdGEKSlNQcm9taXNlRnVuY3Rpb25EYXRhUmVzb2x2ZWQKSlNQcm9taXNlRnVuY3Rpb25EYXRhCkpTUHJvbWlzZVJlYWN0aW9uRGF0YQpKU0JvdW5kRnVuY3Rpb24KSlNJdGVyYXRvcktpbmRFbnVtCkpTRm9ySW5JdGVyYXRvcgpKU092ZXJsb2FkYWJsZU9wZXJhdG9yRW51bQpKU0JpbmFyeU9wZXJhdG9yRGVmRW50cnkKSlNCaW5hcnlPcGVyYXRvckRlZgpKU09wZXJhdG9yU2V0RGF0YQpKU1JlcU1vZHVsZUVudHJ5CkpTRXhwb3J0VHlwZUVudW0KSlNFeHBvcnRFbnRyeQpKU1N0YXJFeHBvcnRFbnRyeQpKU0ltcG9ydEVudHJ5CkpTTW9kdWxlRGVmCkpTSm9iRW50cnkKSlNNYXBSZWNvcmQKSlNNYXBTdGF0ZQpKU01hcEl0ZXJhdG9yRGF0YQpKU09wQ29kZQogIHNob3J0X29wY29kZV9pbmZvCiAgc2hvcnRfb3Bjb2RlX2luZm8KSlNQYXJzZVBvcwpKU1Jlc29sdmVFbnRyeQpKU1Jlc29sdmVTdGF0ZQpFeHBvcnRlZE5hbWVFbnRyeUVudW0KRXhwb3J0ZWROYW1lRW50cnkKR2V0RXhwb3J0TmFtZXNTdGF0ZQpDb2RlQ29udGV4dApTdGFja1NpemVTdGF0ZQpKU09iamVjdExpc3RFbnRyeQpKU09iamVjdExpc3QKQkNUYWdFbnVtCkJDV3JpdGVyU3RhdGUKQkNSZWFkZXJTdGF0ZQpKU09TUldIYW5kbGVyCkpTT1NTaWduYWxIYW5kbGVyCkpTT1NUaW1lcgpKU1dvcmtlck1lc3NhZ2UKSlNXb3JrZXJNZXNzYWdlUGlwZQpKU1dvcmtlck1lc3NhZ2VIYW5kbGVyCkpTVGhyZWFkU3RhdGUKSlNTQUJIZWFkZXIKSlNTVERGaWxlCkpTX0lzVW5jYXRjaGFibGVFcnJvcgAAAAAAAAAAfQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1402,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
						"symkeys":
						[
							[
								1134,
								1140
							],
							[
								1635,
								1649
							],
							[
								1761,
								1775
							],
							[
								2084,
								2096
							],
							[
								2160,
								2176
							],
							[
								2273,
								2306
							],
							[
								2785,
								2805
							],
							[
								2886,
								2905
							],
							[
								3037,
								3061
							],
							[
								3203,
								3219
							],
							[
								3974,
								3991
							],
							[
								5040,
								5061
							],
							[
								5918,
								5931
							],
							[
								6642,
								6664
							],
							[
								7372,
								7397
							],
							[
								8158,
								8172
							],
							[
								9013,
								9038
							],
							[
								10604,
								10618
							],
							[
								11726,
								11742
							],
							[
								12812,
								12841
							],
							[
								13080,
								13096
							],
							[
								13977,
								13993
							],
							[
								15096,
								15121
							],
							[
								16115,
								16129
							],
							[
								17298,
								17313
							],
							[
								17741,
								17756
							],
							[
								18298,
								18313
							],
							[
								18894,
								18914
							],
							[
								19269,
								19281
							],
							[
								20419,
								20434
							],
							[
								21374,
								21387
							],
							[
								21981,
								21994
							],
							[
								22431,
								22449
							],
							[
								23310,
								23322
							],
							[
								23728,
								23740
							],
							[
								24155,
								24170
							],
							[
								25243,
								25259
							],
							[
								25318,
								25340
							],
							[
								25520,
								25549
							],
							[
								25856,
								25879
							],
							[
								27501,
								27521
							],
							[
								27859,
								27878
							],
							[
								28097,
								28109
							],
							[
								30235,
								30252
							],
							[
								30850,
								30868
							],
							[
								32080,
								32100
							],
							[
								32561,
								32582
							],
							[
								33056,
								33071
							],
							[
								33564,
								33584
							],
							[
								34043,
								34055
							],
							[
								34822,
								34837
							],
							[
								36410,
								36422
							],
							[
								37410,
								37426
							],
							[
								41473,
								41486
							],
							[
								42532,
								42546
							],
							[
								43459,
								43473
							],
							[
								43832,
								43845
							],
							[
								45946,
								45959
							],
							[
								46884,
								46894
							],
							[
								49002,
								49015
							],
							[
								50392,
								50406
							],
							[
								50702,
								50714
							],
							[
								50865,
								50878
							],
							[
								51031,
								51045
							],
							[
								51216,
								51229
							],
							[
								51291,
								51313
							],
							[
								51525,
								51539
							],
							[
								62230,
								62242
							],
							[
								62757,
								62771
							]
						],
						"symlist":
						[
							"memmem",
							"pcg32_random_t",
							"pcg32_random_r",
							"pcg32_random",
							"pcg32_init_state",
							"pcg32_random_bounded_divisionless",
							"js_pointer_free_func",
							"js_string_free_func",
							"js_arraybuffer_free_func",
							"js_misc_tostring",
							"js_misc_topointer",
							"js_misc_toarraybuffer",
							"js_misc_slice",
							"js_misc_duparraybuffer",
							"js_misc_resizearraybuffer",
							"js_misc_concat",
							"js_misc_searcharraybuffer",
							"js_misc_memcpy",
							"js_misc_fmemopen",
							"js_misc_getperformancecounter",
							"js_misc_proclink",
							"js_misc_procread",
							"js_misc_getprototypechain",
							"js_misc_hrtime",
							"js_misc_tempnam",
							"js_misc_mkstemp",
							"js_misc_fnmatch",
							"js_misc_glob_errfunc",
							"js_misc_glob",
							"js_misc_wordexp",
							"js_misc_uname",
							"js_misc_ioctl",
							"js_misc_screensize",
							"js_misc_btoa",
							"js_misc_atob",
							"js_misc_compile",
							"ImmutableClosure",
							"js_misc_immutable_free",
							"js_misc_immutable_constructor",
							"js_misc_immutable_class",
							"js_misc_write_object",
							"js_misc_read_object",
							"js_misc_getx",
							"js_misc_valuetype",
							"js_misc_evalbinary",
							"js_misc_opcode_array",
							"js_misc_opcode_object",
							"js_misc_opcodes",
							"js_misc_get_bytecode",
							"js_misc_atom",
							"js_misc_classid",
							"js_misc_type",
							"js_misc_bitfield",
							"js_misc_bitop",
							"js_misc_random",
							"js_misc_escape",
							"js_misc_quote",
							"js_misc_error",
							"js_misc_is",
							"js_misc_watch",
							"js_misc_daemon",
							"js_misc_fork",
							"js_misc_vfork",
							"js_misc_setsid",
							"JSAtExitEntry",
							"js_misc_atexit_handler",
							"js_misc_atexit",
							"js_misc_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AwAAICBpc2F0dHkKSU5TUEVDVF9JTlQzMlRfSU5SQU5HRQpJTlNQRUNUX0xFVkVMCklOU1BFQ1RfSVNfQ09NUEFDVAogIHByb3Bfa2V5X3QKICBpbnNwZWN0X29wdGlvbnNfdAogIGpzX2luc3BlY3RfcHJpbnRfdmFsdWUKICByZWdleHBfcHJlZGljYXRlCiAgaW5zcGVjdF9zY3JlZW5fd2lkdGgKICBpbnNwZWN0X29wdGlvbnNfaW5pdAogIGluc3BlY3Rfb3B0aW9uc19mcmVlCiAgaW5zcGVjdF9vcHRpb25zX2dldAogIGluc3BlY3Rfb3B0aW9uc19vYmplY3QKICBpbnNwZWN0X29wdGlvbnNfaGlkZGVuCiAgaW5zcGVjdF9uZXdsaW5lCiAganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMKICBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUKICBqc19pbnNwZWN0X2N1c3RvbV9hdG9tCiAganNfaW5zcGVjdF9jdXN0b21fY2FsbAogIGpzX2luc3BlY3RfcHJpbnRfZGF0ZQogIGpzX2luc3BlY3RfcHJpbnRfbWFwCiAganNfaW5zcGVjdF9wcmludF9zZXQKICBqc19pbnNwZWN0X3ByaW50X2FycmF5YnVmZmVyCiAganNfaW5zcGVjdF9wcmludF9yZWdleHAKICBqc19pbnNwZWN0X3ByaW50X251bWJlcgogIGpzX2luc3BlY3RfcHJpbnRfc3RyaW5nCiAganNfaW5zcGVjdF9wcmludF9hdG9tCiAganNfaW5zcGVjdF9wcmludF9tb2R1bGUKICBqc19pbnNwZWN0X3ByaW50X2Vycm9yCiAganNfaW5zcGVjdF9wcmludF9vYmplY3QKICBqc19pbnNwZWN0X3ByaW50X3ZhbHVlCiAganNfaW5zcGVjdAogIGpzX2luc3BlY3RfdG9zdHJpbmcKICBqc19pbnNwZWN0X2F0b20KICBqc19kZWJ1Z2dlcl9idWlsZF9iYWNrdHJhY2UKICBqc19pbnNwZWN0X3N0YWNrdHJhY2VfdmFsdWUKICBqc19pbnNwZWN0X3N0YWNrdHJhY2UKICBqc19pbnNwZWN0X2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAD0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1403,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
						"symkeys":
						[
							[
								530,
								541
							],
							[
								619,
								629
							],
							[
								790,
								804
							],
							[
								947,
								954
							],
							[
								1165,
								1172
							],
							[
								1373,
								1396
							],
							[
								1804,
								1825
							],
							[
								2210,
								2226
							],
							[
								2857,
								2875
							],
							[
								2964,
								2980
							],
							[
								3149,
								3163
							],
							[
								3485,
								3497
							],
							[
								3808,
								3823
							],
							[
								4240,
								4254
							],
							[
								4323,
								4338
							],
							[
								4609,
								4623
							],
							[
								4996,
								5012
							],
							[
								5372,
								5386
							],
							[
								5721,
								5734
							],
							[
								6053,
								6065
							],
							[
								6605,
								6617
							],
							[
								7065,
								7081
							],
							[
								7247,
								7268
							],
							[
								7459,
								7474
							],
							[
								7639,
								7654
							],
							[
								7867,
								7883
							],
							[
								8459,
								8476
							],
							[
								8660,
								8677
							],
							[
								8773,
								8789
							],
							[
								9700,
								9716
							],
							[
								9828,
								9845
							],
							[
								10065,
								10082
							],
							[
								10466,
								10482
							],
							[
								10788,
								10810
							],
							[
								10989,
								11010
							],
							[
								11284,
								11304
							],
							[
								11550,
								11567
							],
							[
								11753,
								11780
							],
							[
								11914,
								11942
							],
							[
								12096,
								12120
							],
							[
								12305,
								12322
							],
							[
								12534,
								12553
							],
							[
								12754,
								12772
							],
							[
								12976,
								12995
							],
							[
								13207,
								13228
							],
							[
								13464,
								13488
							],
							[
								13730,
								13748
							],
							[
								14215,
								14230
							],
							[
								14410,
								14426
							],
							[
								14838,
								14856
							],
							[
								15102,
								15121
							],
							[
								15439,
								15455
							],
							[
								15633,
								15654
							],
							[
								15830,
								15849
							],
							[
								16560,
								16576
							],
							[
								17435,
								17447
							],
							[
								17682,
								17701
							],
							[
								17839,
								17854
							],
							[
								18057,
								18070
							],
							[
								18308,
								18326
							],
							[
								18541,
								18559
							],
							[
								18770,
								18795
							],
							[
								18918,
								18941
							],
							[
								19196,
								19222
							],
							[
								19517,
								19546
							],
							[
								19864,
								19890
							],
							[
								20180,
								20204
							],
							[
								20410,
								20435
							],
							[
								20717,
								20745
							],
							[
								21052,
								21076
							],
							[
								21361,
								21386
							],
							[
								21670,
								21693
							],
							[
								21977,
								22002
							],
							[
								22171,
								22193
							],
							[
								22327,
								22352
							],
							[
								22527,
								22555
							],
							[
								22749,
								22774
							],
							[
								23203,
								23214
							],
							[
								23298,
								23312
							],
							[
								23384,
								23396
							],
							[
								23526,
								23539
							],
							[
								23783,
								23796
							],
							[
								23979,
								23992
							],
							[
								24131,
								24149
							],
							[
								24395,
								24414
							],
							[
								24620,
								24640
							],
							[
								24826,
								24846
							],
							[
								25039,
								25050
							],
							[
								25180,
								25195
							],
							[
								25547,
								25568
							],
							[
								25730,
								25744
							],
							[
								25904,
								25916
							],
							[
								26073,
								26088
							],
							[
								26251,
								26267
							],
							[
								26480,
								26494
							],
							[
								26574,
								26585
							],
							[
								26826,
								26842
							],
							[
								27064,
								27085
							],
							[
								27265,
								27287
							],
							[
								27499,
								27513
							],
							[
								27586,
								27609
							],
							[
								27850,
								27863
							],
							[
								28074,
								28092
							],
							[
								28271,
								28290
							],
							[
								28593,
								28613
							],
							[
								28806,
								28819
							],
							[
								29221,
								29235
							],
							[
								29396,
								29413
							],
							[
								29631,
								29650
							],
							[
								29957,
								29975
							],
							[
								30432,
								30448
							],
							[
								30574,
								30596
							],
							[
								30682,
								30692
							],
							[
								30976,
								30993
							],
							[
								31294,
								31312
							],
							[
								32166,
								32179
							],
							[
								32435,
								32449
							],
							[
								34088,
								34103
							],
							[
								34406,
								34419
							],
							[
								35479,
								35494
							],
							[
								36919,
								36937
							],
							[
								37084,
								37098
							],
							[
								37332,
								37347
							],
							[
								37496,
								37512
							],
							[
								37727,
								37741
							],
							[
								37883,
								37897
							],
							[
								38028,
								38042
							],
							[
								38295,
								38311
							],
							[
								38483,
								38498
							],
							[
								38712,
								38722
							],
							[
								38920,
								38931
							],
							[
								39090,
								39104
							],
							[
								39296,
								39312
							],
							[
								39745,
								39756
							],
							[
								40237,
								40246
							],
							[
								40333,
								40352
							],
							[
								40760,
								40778
							],
							[
								41373,
								41387
							],
							[
								41582,
								41597
							],
							[
								41658,
								41674
							],
							[
								42187,
								42205
							],
							[
								42865,
								42879
							],
							[
								43088,
								43105
							],
							[
								43611,
								43623
							],
							[
								43724,
								43736
							],
							[
								44015,
								44028
							],
							[
								44853,
								44866
							],
							[
								45190,
								45208
							],
							[
								45677,
								45695
							],
							[
								46160,
								46177
							],
							[
								46671,
								46683
							],
							[
								47155,
								47172
							],
							[
								47703,
								47726
							],
							[
								47866,
								47876
							],
							[
								48001,
								48010
							],
							[
								48134,
								48143
							],
							[
								48267,
								48282
							],
							[
								48412,
								48424
							],
							[
								48551,
								48564
							],
							[
								48740,
								48754
							],
							[
								48883,
								48897
							],
							[
								49279,
								49293
							],
							[
								49495,
								49518
							],
							[
								49733,
								49758
							],
							[
								49987,
								50004
							],
							[
								50455,
								50464
							],
							[
								50724,
								50751
							],
							[
								50833,
								50859
							],
							[
								51049,
								51068
							],
							[
								51348,
								51361
							],
							[
								51495,
								51506
							],
							[
								51700,
								51715
							],
							[
								51874,
								51894
							],
							[
								52005,
								52026
							],
							[
								52141,
								52156
							],
							[
								52446,
								52458
							],
							[
								52654,
								52662
							],
							[
								52864,
								52888
							],
							[
								53027,
								53051
							],
							[
								53339,
								53364
							],
							[
								53622,
								53636
							],
							[
								54151,
								54165
							],
							[
								54756,
								54767
							],
							[
								55434,
								55445
							],
							[
								55753,
								55764
							],
							[
								56153,
								56163
							],
							[
								56302,
								56322
							],
							[
								56407,
								56422
							],
							[
								56553,
								56566
							],
							[
								56661,
								56676
							],
							[
								56935,
								56947
							],
							[
								57114,
								57125
							],
							[
								57378,
								57388
							],
							[
								57543,
								57556
							],
							[
								58329,
								58346
							],
							[
								58522,
								58536
							],
							[
								59407,
								59421
							],
							[
								59597,
								59617
							],
							[
								60271,
								60294
							],
							[
								60604,
								60622
							],
							[
								60826,
								60841
							],
							[
								60964,
								60980
							],
							[
								61104,
								61119
							],
							[
								61466,
								61482
							],
							[
								61638,
								61650
							],
							[
								61979,
								61991
							],
							[
								62318,
								62332
							],
							[
								62656,
								62671
							],
							[
								63303,
								63317
							],
							[
								63588,
								63606
							],
							[
								64080,
								64097
							],
							[
								64452,
								64466
							],
							[
								64750,
								64761
							],
							[
								64849,
								64860
							],
							[
								65100,
								65115
							],
							[
								65556,
								65573
							],
							[
								65799,
								65819
							],
							[
								83698,
								83719
							]
						],
						"symlist":
						[
							"quicksort_r",
							"strverscmp",
							"atomic_add_int",
							"time_us",
							"time_us",
							"regexp_flags_fromstring",
							"regexp_flags_tostring",
							"regexp_from_argv",
							"regexp_from_string",
							"regexp_from_dbuf",
							"regexp_compile",
							"regexp_match",
							"regexp_to_value",
							"regexp_free_rt",
							"js_array_length",
							"js_array_clear",
							"js_array_to_argv",
							"js_array_copys",
							"js_strv_copys",
							"js_atom_from",
							"js_atom_dump",
							"js_atom_tobinary",
							"js_atom_to_cstringlen",
							"js_atom_toint32",
							"js_atom_toint64",
							"js_atom_is_index",
							"js_atom_is_string",
							"js_atom_is_length",
							"js_function_name",
							"js_function_argc",
							"js_function_cfunc",
							"js_function_bound",
							"js_function_bind",
							"js_function_bound_this",
							"js_function_bind_this",
							"js_function_throw_fn",
							"js_function_throw",
							"js_function_return_value_fn",
							"js_function_return_undefined",
							"js_function_return_value",
							"js_global_get_str",
							"js_global_get_str_n",
							"js_global_get_atom",
							"js_global_prototype",
							"js_global_static_func",
							"js_global_prototype_func",
							"js_iterator_method",
							"js_iterator_new",
							"js_iterator_next",
							"js_iterator_result",
							"js_iterator_then_fn",
							"js_iterator_then",
							"js_object_constructor",
							"js_object_classname",
							"js_object_equals",
							"js_object_is",
							"js_object_construct",
							"js_object_error",
							"js_object_new",
							"js_object_function",
							"js_has_propertystr",
							"js_get_propertyatom_value",
							"js_get_propertystr_bool",
							"js_get_propertystr_cstring",
							"js_get_propertystr_cstringlen",
							"js_get_propertyint_cstring",
							"js_get_propertyint_int32",
							"js_get_propertystr_string",
							"js_get_propertystr_stringlen",
							"js_get_propertystr_int32",
							"js_get_propertystr_uint64",
							"js_get_propertystr_atom",
							"js_set_propertyint_string",
							"js_set_propertyint_int",
							"js_set_propertystr_string",
							"js_set_propertystr_stringlen",
							"js_get_propertydescriptor",
							"js_class_id",
							"js_class_newid",
							"js_class_get",
							"js_class_find",
							"js_class_atom",
							"js_class_name",
							"js_object_tostring",
							"js_object_tostring2",
							"js_function_tostring",
							"js_function_isnative",
							"js_is_input",
							"js_propenum_cmp",
							"js_propertyenums_free",
							"js_strv_free_n",
							"js_strv_free",
							"js_strv_free_rt",
							"js_strv_to_array",
							"js_strv_length",
							"js_strv_dup",
							"js_intv_to_array",
							"js_symbol_static_atom",
							"js_symbol_static_value",
							"js_symbol_ctor",
							"js_symbol_invoke_static",
							"js_symbol_for",
							"js_symbol_for_atom",
							"js_symbol_to_string",
							"js_symbol_to_cstring",
							"js_values_dup",
							"js_values_free",
							"js_values_toarray",
							"js_values_fromarray",
							"js_value_type_name",
							"js_value_typestr",
							"js_value_has_ref_count",
							"value_mask",
							"js_value_type_get",
							"js_value_type_flag",
							"js_value_free",
							"js_value_clone",
							"js_value_fwrite",
							"js_value_dump",
							"js_value_equals",
							"js_value_from_char",
							"js_value_print",
							"js_value_tosize",
							"js_value_free_rt",
							"js_cstring_ptr",
							"js_cstring_len",
							"js_cstring_dup",
							"js_cstring_value",
							"js_cstring_dump",
							"js_map_new",
							"module_name",
							"module_namestr",
							"call_module_func",
							"module_func",
							"module_ns",
							"module_exports_find",
							"module_exports_get",
							"module_exports",
							"js_modules_list",
							"js_modules_array",
							"js_modules_entries",
							"js_modules_map",
							"js_modules_object",
							"module_value",
							"module_entry",
							"module_object",
							"js_module_def",
							"js_module_find_fwd",
							"js_module_find_rev",
							"js_module_indexof",
							"js_module_at",
							"js_is_arraybuffer",
							"js_is_sharedarraybuffer",
							"js_is_date",
							"js_is_map",
							"js_is_set",
							"js_is_generator",
							"js_is_regexp",
							"js_is_promise",
							"js_is_dataview",
							"js_is_iterable",
							"js_is_iterator",
							"js_typedarray_prototype",
							"js_typedarray_constructor",
							"js_typedarray_new",
							"js_invoke",
							"js_symbol_operatorset_value",
							"js_symbol_operatorset_atom",
							"js_operators_create",
							"js_number_new",
							"js_date_new",
							"js_date_from_ms",
							"js_date_from_time_ns",
							"js_date_from_timespec",
							"js_date_gettime",
							"js_date_time",
							"timespec",
							"js_arraybuffer_freevalue",
							"js_arraybuffer_fromvalue",
							"js_arraybuffer_bytelength",
							"js_eval_module",
							"js_eval_binary",
							"js_eval_buf",
							"js_eval_str",
							"js_eval_fmt",
							"js_time_ms",
							"js_interrupt_handler",
							"js_timer_unlink",
							"js_timer_free",
							"js_call_handler",
							"js_sab_alloc",
							"js_sab_free",
							"js_sab_dup",
							"js_error_dump",
							"js_error_tostring",
							"js_error_print",
							"js_error_stack",
							"js_io_readhandler_fn",
							"js_io_readhandler_cfunc",
							"js_promise_resolve",
							"js_promise_then",
							"js_promise_catch",
							"js_promise_wrap",
							"js_promise_adopt",
							"js_to_string",
							"js_to_source",
							"arguments_dump",
							"arguments_alloc",
							"arguments_push",
							"js_arguments_alloc",
							"js_arguments_dump",
							"js_tostringlen",
							"js_tostring",
							"js_tosource",
							"js_towstringlen",
							"js_json_stringify",
							"js_is_identifier_len",
							"js_is_identifier_atom"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA9BQAAICBtZW1tZW0KICBwY2czMl9yYW5kb21fdAogIHBjZzMyX3JhbmRvbV9yCiAgcGNnMzJfcmFuZG9tCiAgcGNnMzJfaW5pdF9zdGF0ZQogIHBjZzMyX3JhbmRvbV9ib3VuZGVkX2RpdmlzaW9ubGVzcwogIGpzX3BvaW50ZXJfZnJlZV9mdW5jCiAganNfc3RyaW5nX2ZyZWVfZnVuYwogIGpzX2FycmF5YnVmZmVyX2ZyZWVfZnVuYwogIGpzX21pc2NfdG9zdHJpbmcKICBqc19taXNjX3RvcG9pbnRlcgogIGpzX21pc2NfdG9hcnJheWJ1ZmZlcgogIGpzX21pc2Nfc2xpY2UKICBqc19taXNjX2R1cGFycmF5YnVmZmVyCiAganNfbWlzY19yZXNpemVhcnJheWJ1ZmZlcgogIGpzX21pc2NfY29uY2F0CiAganNfbWlzY19zZWFyY2hhcnJheWJ1ZmZlcgogIGpzX21pc2NfbWVtY3B5CiAganNfbWlzY19mbWVtb3BlbgogIGpzX21pc2NfZ2V0cGVyZm9ybWFuY2Vjb3VudGVyCiAganNfbWlzY19wcm9jbGluawogIGpzX21pc2NfcHJvY3JlYWQKICBqc19taXNjX2dldHByb3RvdHlwZWNoYWluCiAganNfbWlzY19ocnRpbWUKICBqc19taXNjX3RlbXBuYW0KICBqc19taXNjX21rc3RlbXAKICBqc19taXNjX2ZubWF0Y2gKICBqc19taXNjX2dsb2JfZXJyZnVuYwogIGpzX21pc2NfZ2xvYgogIGpzX21pc2Nfd29yZGV4cAogIGpzX21pc2NfdW5hbWUKICBqc19taXNjX2lvY3RsCiAganNfbWlzY19zY3JlZW5zaXplCiAganNfbWlzY19idG9hCiAganNfbWlzY19hdG9iCiAganNfbWlzY19jb21waWxlCkltbXV0YWJsZUNsb3N1cmUKICBqc19taXNjX2ltbXV0YWJsZV9mcmVlCiAganNfbWlzY19pbW11dGFibGVfY29uc3RydWN0b3IKICBqc19taXNjX2ltbXV0YWJsZV9jbGFzcwogIGpzX21pc2Nfd3JpdGVfb2JqZWN0CiAganNfbWlzY19yZWFkX29iamVjdAogIGpzX21pc2NfZ2V0eAogIGpzX21pc2NfdmFsdWV0eXBlCiAganNfbWlzY19ldmFsYmluYXJ5CiAganNfbWlzY19vcGNvZGVfYXJyYXkKICBqc19taXNjX29wY29kZV9vYmplY3QKICBqc19taXNjX29wY29kZXMKICBqc19taXNjX2dldF9ieXRlY29kZQogIGpzX21pc2NfYXRvbQogIGpzX21pc2NfY2xhc3NpZAogIGpzX21pc2NfdHlwZQogIGpzX21pc2NfYml0ZmllbGQKICBqc19taXNjX2JpdG9wCiAganNfbWlzY19yYW5kb20KICBqc19taXNjX2VzY2FwZQogIGpzX21pc2NfcXVvdGUKICBqc19taXNjX2Vycm9yCiAganNfbWlzY19pcwogIGpzX21pc2Nfd2F0Y2gKICBqc19taXNjX2RhZW1vbgogIGpzX21pc2NfZm9yawogIGpzX21pc2NfdmZvcmsKICBqc19taXNjX3NldHNpZApKU0F0RXhpdEVudHJ5CiAganNfbWlzY19hdGV4aXRfaGFuZGxlcgogIGpzX21pc2NfYXRleGl0CiAganNfbWlzY19pbml0CkpTX0lOSVRfTU9EVUxFAAAAAAAAAAChEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1421,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChEAAAICBxdWlja3NvcnRfcgogIHN0cnZlcnNjbXAKICBhdG9taWNfYWRkX2ludAogIHRpbWVfdXMKICB0aW1lX3VzCiAgcmVnZXhwX2ZsYWdzX2Zyb21zdHJpbmcKICByZWdleHBfZmxhZ3NfdG9zdHJpbmcKICByZWdleHBfZnJvbV9hcmd2CiAgcmVnZXhwX2Zyb21fc3RyaW5nCiAgcmVnZXhwX2Zyb21fZGJ1ZgogIHJlZ2V4cF9jb21waWxlCiAgcmVnZXhwX21hdGNoCiAgcmVnZXhwX3RvX3ZhbHVlCiAgcmVnZXhwX2ZyZWVfcnQKICBqc19hcnJheV9sZW5ndGgKICBqc19hcnJheV9jbGVhcgogIGpzX2FycmF5X3RvX2FyZ3YKICBqc19hcnJheV9jb3B5cwogIGpzX3N0cnZfY29weXMKICBqc19hdG9tX2Zyb20KICBqc19hdG9tX2R1bXAKICBqc19hdG9tX3RvYmluYXJ5CiAganNfYXRvbV90b19jc3RyaW5nbGVuCiAganNfYXRvbV90b2ludDMyCiAganNfYXRvbV90b2ludDY0CiAganNfYXRvbV9pc19pbmRleAogIGpzX2F0b21faXNfc3RyaW5nCiAganNfYXRvbV9pc19sZW5ndGgKICBqc19mdW5jdGlvbl9uYW1lCiAganNfZnVuY3Rpb25fYXJnYwogIGpzX2Z1bmN0aW9uX2NmdW5jCiAganNfZnVuY3Rpb25fYm91bmQKICBqc19mdW5jdGlvbl9iaW5kCiAganNfZnVuY3Rpb25fYm91bmRfdGhpcwogIGpzX2Z1bmN0aW9uX2JpbmRfdGhpcwogIGpzX2Z1bmN0aW9uX3Rocm93X2ZuCiAganNfZnVuY3Rpb25fdGhyb3cKICBqc19mdW5jdGlvbl9yZXR1cm5fdmFsdWVfZm4KICBqc19mdW5jdGlvbl9yZXR1cm5fdW5kZWZpbmVkCiAganNfZnVuY3Rpb25fcmV0dXJuX3ZhbHVlCiAganNfZ2xvYmFsX2dldF9zdHIKICBqc19nbG9iYWxfZ2V0X3N0cl9uCiAganNfZ2xvYmFsX2dldF9hdG9tCiAganNfZ2xvYmFsX3Byb3RvdHlwZQogIGpzX2dsb2JhbF9zdGF0aWNfZnVuYwogIGpzX2dsb2JhbF9wcm90b3R5cGVfZnVuYwogIGpzX2l0ZXJhdG9yX21ldGhvZAogIGpzX2l0ZXJhdG9yX25ldwogIGpzX2l0ZXJhdG9yX25leHQKICBqc19pdGVyYXRvcl9yZXN1bHQKICBqc19pdGVyYXRvcl90aGVuX2ZuCiAganNfaXRlcmF0b3JfdGhlbgogIGpzX29iamVjdF9jb25zdHJ1Y3RvcgogIGpzX29iamVjdF9jbGFzc25hbWUKICBqc19vYmplY3RfZXF1YWxzCiAganNfb2JqZWN0X2lzCiAganNfb2JqZWN0X2NvbnN0cnVjdAogIGpzX29iamVjdF9lcnJvcgogIGpzX29iamVjdF9uZXcKICBqc19vYmplY3RfZnVuY3Rpb24KICBqc19oYXNfcHJvcGVydHlzdHIKICBqc19nZXRfcHJvcGVydHlhdG9tX3ZhbHVlCiAganNfZ2V0X3Byb3BlcnR5c3RyX2Jvb2wKICBqc19nZXRfcHJvcGVydHlzdHJfY3N0cmluZwogIGpzX2dldF9wcm9wZXJ0eXN0cl9jc3RyaW5nbGVuCiAganNfZ2V0X3Byb3BlcnR5aW50X2NzdHJpbmcKICBqc19nZXRfcHJvcGVydHlpbnRfaW50MzIKICBqc19nZXRfcHJvcGVydHlzdHJfc3RyaW5nCiAganNfZ2V0X3Byb3BlcnR5c3RyX3N0cmluZ2xlbgogIGpzX2dldF9wcm9wZXJ0eXN0cl9pbnQzMgogIGpzX2dldF9wcm9wZXJ0eXN0cl91aW50NjQKICBqc19nZXRfcHJvcGVydHlzdHJfYXRvbQogIGpzX3NldF9wcm9wZXJ0eWludF9zdHJpbmcKICBqc19zZXRfcHJvcGVydHlpbnRfaW50CiAganNfc2V0X3Byb3BlcnR5c3RyX3N0cmluZwogIGpzX3NldF9wcm9wZXJ0eXN0cl9zdHJpbmdsZW4KICBqc19nZXRfcHJvcGVydHlkZXNjcmlwdG9yCiAganNfY2xhc3NfaWQKICBqc19jbGFzc19uZXdpZAogIGpzX2NsYXNzX2dldAogIGpzX2NsYXNzX2ZpbmQKICBqc19jbGFzc19hdG9tCiAganNfY2xhc3NfbmFtZQogIGpzX29iamVjdF90b3N0cmluZwogIGpzX29iamVjdF90b3N0cmluZzIKICBqc19mdW5jdGlvbl90b3N0cmluZwogIGpzX2Z1bmN0aW9uX2lzbmF0aXZlCiAganNfaXNfaW5wdXQKICBqc19wcm9wZW51bV9jbXAKICBqc19wcm9wZXJ0eWVudW1zX2ZyZWUKICBqc19zdHJ2X2ZyZWVfbgogIGpzX3N0cnZfZnJlZQogIGpzX3N0cnZfZnJlZV9ydAogIGpzX3N0cnZfdG9fYXJyYXkKICBqc19zdHJ2X2xlbmd0aAogIGpzX3N0cnZfZHVwCiAganNfaW50dl90b19hcnJheQogIGpzX3N5bWJvbF9zdGF0aWNfYXRvbQogIGpzX3N5bWJvbF9zdGF0aWNfdmFsdWUKICBqc19zeW1ib2xfY3RvcgogIGpzX3N5bWJvbF9pbnZva2Vfc3RhdGljCiAganNfc3ltYm9sX2ZvcgogIGpzX3N5bWJvbF9mb3JfYXRvbQogIGpzX3N5bWJvbF90b19zdHJpbmcKICBqc19zeW1ib2xfdG9fY3N0cmluZwogIGpzX3ZhbHVlc19kdXAKICBqc192YWx1ZXNfZnJlZQogIGpzX3ZhbHVlc190b2FycmF5CiAganNfdmFsdWVzX2Zyb21hcnJheQogIGpzX3ZhbHVlX3R5cGVfbmFtZQogIGpzX3ZhbHVlX3R5cGVzdHIKICBqc192YWx1ZV9oYXNfcmVmX2NvdW50CiAgdmFsdWVfbWFzawogIGpzX3ZhbHVlX3R5cGVfZ2V0CiAganNfdmFsdWVfdHlwZV9mbGFnCiAganNfdmFsdWVfZnJlZQogIGpzX3ZhbHVlX2Nsb25lCiAganNfdmFsdWVfZndyaXRlCiAganNfdmFsdWVfZHVtcAogIGpzX3ZhbHVlX2VxdWFscwogIGpzX3ZhbHVlX2Zyb21fY2hhcgogIGpzX3ZhbHVlX3ByaW50CiAganNfdmFsdWVfdG9zaXplCiAganNfdmFsdWVfZnJlZV9ydAogIGpzX2NzdHJpbmdfcHRyCiAganNfY3N0cmluZ19sZW4KICBqc19jc3RyaW5nX2R1cAogIGpzX2NzdHJpbmdfdmFsdWUKICBqc19jc3RyaW5nX2R1bXAKICBqc19tYXBfbmV3CiAgbW9kdWxlX25hbWUKICBtb2R1bGVfbmFtZXN0cgogIGNhbGxfbW9kdWxlX2Z1bmMKICBtb2R1bGVfZnVuYwogIG1vZHVsZV9ucwogIG1vZHVsZV9leHBvcnRzX2ZpbmQKICBtb2R1bGVfZXhwb3J0c19nZXQKICBtb2R1bGVfZXhwb3J0cwogIGpzX21vZHVsZXNfbGlzdAogIGpzX21vZHVsZXNfYXJyYXkKICBqc19tb2R1bGVzX2VudHJpZXMKICBqc19tb2R1bGVzX21hcAogIGpzX21vZHVsZXNfb2JqZWN0CiAgbW9kdWxlX3ZhbHVlCiAgbW9kdWxlX2VudHJ5CiAgbW9kdWxlX29iamVjdAogIGpzX21vZHVsZV9kZWYKICBqc19tb2R1bGVfZmluZF9md2QKICBqc19tb2R1bGVfZmluZF9yZXYKICBqc19tb2R1bGVfaW5kZXhvZgogIGpzX21vZHVsZV9hdAogIGpzX2lzX2FycmF5YnVmZmVyCiAganNfaXNfc2hhcmVkYXJyYXlidWZmZXIKICBqc19pc19kYXRlCiAganNfaXNfbWFwCiAganNfaXNfc2V0CiAganNfaXNfZ2VuZXJhdG9yCiAganNfaXNfcmVnZXhwCiAganNfaXNfcHJvbWlzZQogIGpzX2lzX2RhdGF2aWV3CiAganNfaXNfaXRlcmFibGUKICBqc19pc19pdGVyYXRvcgogIGpzX3R5cGVkYXJyYXlfcHJvdG90eXBlCiAganNfdHlwZWRhcnJheV9jb25zdHJ1Y3RvcgogIGpzX3R5cGVkYXJyYXlfbmV3CiAganNfaW52b2tlCiAganNfc3ltYm9sX29wZXJhdG9yc2V0X3ZhbHVlCiAganNfc3ltYm9sX29wZXJhdG9yc2V0X2F0b20KICBqc19vcGVyYXRvcnNfY3JlYXRlCiAganNfbnVtYmVyX25ldwogIGpzX2RhdGVfbmV3CiAganNfZGF0ZV9mcm9tX21zCiAganNfZGF0ZV9mcm9tX3RpbWVfbnMKICBqc19kYXRlX2Zyb21fdGltZXNwZWMKICBqc19kYXRlX2dldHRpbWUKICBqc19kYXRlX3RpbWUKICB0aW1lc3BlYwogIGpzX2FycmF5YnVmZmVyX2ZyZWV2YWx1ZQogIGpzX2FycmF5YnVmZmVyX2Zyb212YWx1ZQogIGpzX2FycmF5YnVmZmVyX2J5dGVsZW5ndGgKICBqc19ldmFsX21vZHVsZQogIGpzX2V2YWxfYmluYXJ5CiAganNfZXZhbF9idWYKICBqc19ldmFsX3N0cgogIGpzX2V2YWxfZm10CiAganNfdGltZV9tcwogIGpzX2ludGVycnVwdF9oYW5kbGVyCiAganNfdGltZXJfdW5saW5rCiAganNfdGltZXJfZnJlZQogIGpzX2NhbGxfaGFuZGxlcgogIGpzX3NhYl9hbGxvYwogIGpzX3NhYl9mcmVlCiAganNfc2FiX2R1cAogIGpzX2Vycm9yX2R1bXAKICBqc19lcnJvcl90b3N0cmluZwogIGpzX2Vycm9yX3ByaW50CiAganNfZXJyb3Jfc3RhY2sKICBqc19pb19yZWFkaGFuZGxlcl9mbgogIGpzX2lvX3JlYWRoYW5kbGVyX2NmdW5jCiAganNfcHJvbWlzZV9yZXNvbHZlCiAganNfcHJvbWlzZV90aGVuCiAganNfcHJvbWlzZV9jYXRjaAogIGpzX3Byb21pc2Vfd3JhcAogIGpzX3Byb21pc2VfYWRvcHQKICBqc190b19zdHJpbmcKICBqc190b19zb3VyY2UKICBhcmd1bWVudHNfZHVtcAogIGFyZ3VtZW50c19hbGxvYwogIGFyZ3VtZW50c19wdXNoCiAganNfYXJndW1lbnRzX2FsbG9jCiAganNfYXJndW1lbnRzX2R1bXAKICBqc190b3N0cmluZ2xlbgogIGpzX3Rvc3RyaW5nCiAganNfdG9zb3VyY2UKICBqc190b3dzdHJpbmdsZW4KICBqc19qc29uX3N0cmluZ2lmeQogIGpzX2lzX2lkZW50aWZpZXJfbGVuCiAganNfaXNfaWRlbnRpZmllcl9hdG9tAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQMAAAAAAACFAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1422,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
						"symkeys":
						[
							[
								530,
								541
							],
							[
								619,
								629
							],
							[
								790,
								804
							],
							[
								947,
								954
							],
							[
								1165,
								1172
							],
							[
								1373,
								1396
							],
							[
								1804,
								1825
							],
							[
								2210,
								2226
							],
							[
								2857,
								2875
							],
							[
								2964,
								2980
							],
							[
								3149,
								3163
							],
							[
								3485,
								3497
							],
							[
								3808,
								3823
							],
							[
								4240,
								4254
							],
							[
								4323,
								4338
							],
							[
								4609,
								4623
							],
							[
								4996,
								5012
							],
							[
								5372,
								5386
							],
							[
								5721,
								5734
							],
							[
								6053,
								6065
							],
							[
								6605,
								6617
							],
							[
								7065,
								7081
							],
							[
								7247,
								7268
							],
							[
								7459,
								7474
							],
							[
								7639,
								7654
							],
							[
								7867,
								7883
							],
							[
								8459,
								8476
							],
							[
								8660,
								8677
							],
							[
								8773,
								8789
							],
							[
								9700,
								9716
							],
							[
								9828,
								9845
							],
							[
								10065,
								10082
							],
							[
								10466,
								10482
							],
							[
								10788,
								10810
							],
							[
								10989,
								11010
							],
							[
								11284,
								11304
							],
							[
								11550,
								11567
							],
							[
								11753,
								11780
							],
							[
								11914,
								11942
							],
							[
								12096,
								12120
							],
							[
								12305,
								12322
							],
							[
								12534,
								12553
							],
							[
								12754,
								12772
							],
							[
								12976,
								12995
							],
							[
								13207,
								13228
							],
							[
								13464,
								13488
							],
							[
								13730,
								13748
							],
							[
								14215,
								14230
							],
							[
								14410,
								14426
							],
							[
								14838,
								14856
							],
							[
								15102,
								15121
							],
							[
								15439,
								15455
							],
							[
								15633,
								15654
							],
							[
								15830,
								15849
							],
							[
								16560,
								16576
							],
							[
								17435,
								17447
							],
							[
								17682,
								17701
							],
							[
								17839,
								17854
							],
							[
								18057,
								18070
							],
							[
								18308,
								18326
							],
							[
								18541,
								18559
							],
							[
								18770,
								18795
							],
							[
								18918,
								18941
							],
							[
								19196,
								19222
							],
							[
								19517,
								19546
							],
							[
								19864,
								19890
							],
							[
								20180,
								20204
							],
							[
								20410,
								20435
							],
							[
								20717,
								20745
							],
							[
								21052,
								21076
							],
							[
								21361,
								21386
							],
							[
								21670,
								21693
							],
							[
								21977,
								22002
							],
							[
								22171,
								22193
							],
							[
								22327,
								22352
							],
							[
								22527,
								22555
							],
							[
								22749,
								22774
							],
							[
								23203,
								23214
							],
							[
								23298,
								23312
							],
							[
								23384,
								23396
							],
							[
								23526,
								23539
							],
							[
								23783,
								23796
							],
							[
								23979,
								23992
							],
							[
								24131,
								24149
							],
							[
								24395,
								24414
							],
							[
								24620,
								24640
							],
							[
								24826,
								24846
							],
							[
								25039,
								25050
							],
							[
								25180,
								25195
							],
							[
								25547,
								25568
							],
							[
								25730,
								25744
							],
							[
								25904,
								25916
							],
							[
								26073,
								26088
							],
							[
								26251,
								26267
							],
							[
								26480,
								26494
							],
							[
								26574,
								26585
							],
							[
								26826,
								26842
							],
							[
								27064,
								27085
							],
							[
								27265,
								27287
							],
							[
								27499,
								27513
							],
							[
								27586,
								27609
							],
							[
								27850,
								27863
							],
							[
								28074,
								28092
							],
							[
								28271,
								28290
							],
							[
								28593,
								28613
							],
							[
								28806,
								28819
							],
							[
								29221,
								29235
							],
							[
								29396,
								29413
							],
							[
								29631,
								29650
							],
							[
								29957,
								29975
							],
							[
								30432,
								30448
							],
							[
								30574,
								30596
							],
							[
								30682,
								30692
							],
							[
								30976,
								30993
							],
							[
								31294,
								31312
							],
							[
								32166,
								32179
							],
							[
								32435,
								32449
							],
							[
								34088,
								34103
							],
							[
								34406,
								34419
							],
							[
								35479,
								35494
							],
							[
								36919,
								36937
							],
							[
								37084,
								37098
							],
							[
								37332,
								37347
							],
							[
								37496,
								37512
							],
							[
								37727,
								37741
							],
							[
								37883,
								37897
							],
							[
								38028,
								38042
							],
							[
								38295,
								38311
							],
							[
								38483,
								38498
							],
							[
								38712,
								38722
							],
							[
								38920,
								38931
							],
							[
								39090,
								39104
							],
							[
								39296,
								39312
							],
							[
								39745,
								39756
							],
							[
								40237,
								40246
							],
							[
								40333,
								40352
							],
							[
								40760,
								40778
							],
							[
								41373,
								41387
							],
							[
								41582,
								41597
							],
							[
								41658,
								41674
							],
							[
								42187,
								42205
							],
							[
								42865,
								42879
							],
							[
								43088,
								43105
							],
							[
								43611,
								43623
							],
							[
								43724,
								43736
							],
							[
								44015,
								44028
							],
							[
								44853,
								44866
							],
							[
								45190,
								45208
							],
							[
								45677,
								45695
							],
							[
								46160,
								46177
							],
							[
								46671,
								46683
							],
							[
								47155,
								47172
							],
							[
								47703,
								47726
							],
							[
								47866,
								47876
							],
							[
								48001,
								48010
							],
							[
								48134,
								48143
							],
							[
								48267,
								48282
							],
							[
								48412,
								48424
							],
							[
								48551,
								48564
							],
							[
								48740,
								48754
							],
							[
								48883,
								48897
							],
							[
								49279,
								49293
							],
							[
								49495,
								49518
							],
							[
								49733,
								49758
							],
							[
								49987,
								50004
							],
							[
								50455,
								50464
							],
							[
								50724,
								50751
							],
							[
								50833,
								50859
							],
							[
								51049,
								51068
							],
							[
								51348,
								51361
							],
							[
								51495,
								51506
							],
							[
								51700,
								51715
							],
							[
								51874,
								51894
							],
							[
								52005,
								52026
							],
							[
								52141,
								52156
							],
							[
								52446,
								52458
							],
							[
								52654,
								52662
							],
							[
								52864,
								52888
							],
							[
								53027,
								53051
							],
							[
								53339,
								53364
							],
							[
								53622,
								53636
							],
							[
								54151,
								54165
							],
							[
								54756,
								54767
							],
							[
								55434,
								55445
							],
							[
								55753,
								55764
							],
							[
								56153,
								56163
							],
							[
								56302,
								56322
							],
							[
								56407,
								56422
							],
							[
								56553,
								56566
							],
							[
								56661,
								56676
							],
							[
								56935,
								56947
							],
							[
								57114,
								57125
							],
							[
								57378,
								57388
							],
							[
								57543,
								57556
							],
							[
								58329,
								58346
							],
							[
								58522,
								58536
							],
							[
								59407,
								59421
							],
							[
								59597,
								59617
							],
							[
								60271,
								60294
							],
							[
								60604,
								60622
							],
							[
								60826,
								60841
							],
							[
								60964,
								60980
							],
							[
								61104,
								61119
							],
							[
								61466,
								61482
							],
							[
								61638,
								61650
							],
							[
								61979,
								61991
							],
							[
								62318,
								62332
							],
							[
								62656,
								62671
							],
							[
								63303,
								63317
							],
							[
								63588,
								63606
							],
							[
								64080,
								64097
							],
							[
								64452,
								64466
							],
							[
								64750,
								64761
							],
							[
								64849,
								64860
							],
							[
								65100,
								65115
							],
							[
								65556,
								65573
							],
							[
								65799,
								65819
							],
							[
								83698,
								83719
							]
						],
						"symlist":
						[
							"quicksort_r",
							"strverscmp",
							"atomic_add_int",
							"time_us",
							"time_us",
							"regexp_flags_fromstring",
							"regexp_flags_tostring",
							"regexp_from_argv",
							"regexp_from_string",
							"regexp_from_dbuf",
							"regexp_compile",
							"regexp_match",
							"regexp_to_value",
							"regexp_free_rt",
							"js_array_length",
							"js_array_clear",
							"js_array_to_argv",
							"js_array_copys",
							"js_strv_copys",
							"js_atom_from",
							"js_atom_dump",
							"js_atom_tobinary",
							"js_atom_to_cstringlen",
							"js_atom_toint32",
							"js_atom_toint64",
							"js_atom_is_index",
							"js_atom_is_string",
							"js_atom_is_length",
							"js_function_name",
							"js_function_argc",
							"js_function_cfunc",
							"js_function_bound",
							"js_function_bind",
							"js_function_bound_this",
							"js_function_bind_this",
							"js_function_throw_fn",
							"js_function_throw",
							"js_function_return_value_fn",
							"js_function_return_undefined",
							"js_function_return_value",
							"js_global_get_str",
							"js_global_get_str_n",
							"js_global_get_atom",
							"js_global_prototype",
							"js_global_static_func",
							"js_global_prototype_func",
							"js_iterator_method",
							"js_iterator_new",
							"js_iterator_next",
							"js_iterator_result",
							"js_iterator_then_fn",
							"js_iterator_then",
							"js_object_constructor",
							"js_object_classname",
							"js_object_equals",
							"js_object_is",
							"js_object_construct",
							"js_object_error",
							"js_object_new",
							"js_object_function",
							"js_has_propertystr",
							"js_get_propertyatom_value",
							"js_get_propertystr_bool",
							"js_get_propertystr_cstring",
							"js_get_propertystr_cstringlen",
							"js_get_propertyint_cstring",
							"js_get_propertyint_int32",
							"js_get_propertystr_string",
							"js_get_propertystr_stringlen",
							"js_get_propertystr_int32",
							"js_get_propertystr_uint64",
							"js_get_propertystr_atom",
							"js_set_propertyint_string",
							"js_set_propertyint_int",
							"js_set_propertystr_string",
							"js_set_propertystr_stringlen",
							"js_get_propertydescriptor",
							"js_class_id",
							"js_class_newid",
							"js_class_get",
							"js_class_find",
							"js_class_atom",
							"js_class_name",
							"js_object_tostring",
							"js_object_tostring2",
							"js_function_tostring",
							"js_function_isnative",
							"js_is_input",
							"js_propenum_cmp",
							"js_propertyenums_free",
							"js_strv_free_n",
							"js_strv_free",
							"js_strv_free_rt",
							"js_strv_to_array",
							"js_strv_length",
							"js_strv_dup",
							"js_intv_to_array",
							"js_symbol_static_atom",
							"js_symbol_static_value",
							"js_symbol_ctor",
							"js_symbol_invoke_static",
							"js_symbol_for",
							"js_symbol_for_atom",
							"js_symbol_to_string",
							"js_symbol_to_cstring",
							"js_values_dup",
							"js_values_free",
							"js_values_toarray",
							"js_values_fromarray",
							"js_value_type_name",
							"js_value_typestr",
							"js_value_has_ref_count",
							"value_mask",
							"js_value_type_get",
							"js_value_type_flag",
							"js_value_free",
							"js_value_clone",
							"js_value_fwrite",
							"js_value_dump",
							"js_value_equals",
							"js_value_from_char",
							"js_value_print",
							"js_value_tosize",
							"js_value_free_rt",
							"js_cstring_ptr",
							"js_cstring_len",
							"js_cstring_dup",
							"js_cstring_value",
							"js_cstring_dump",
							"js_map_new",
							"module_name",
							"module_namestr",
							"call_module_func",
							"module_func",
							"module_ns",
							"module_exports_find",
							"module_exports_get",
							"module_exports",
							"js_modules_list",
							"js_modules_array",
							"js_modules_entries",
							"js_modules_map",
							"js_modules_object",
							"module_value",
							"module_entry",
							"module_object",
							"js_module_def",
							"js_module_find_fwd",
							"js_module_find_rev",
							"js_module_indexof",
							"js_module_at",
							"js_is_arraybuffer",
							"js_is_sharedarraybuffer",
							"js_is_date",
							"js_is_map",
							"js_is_set",
							"js_is_generator",
							"js_is_regexp",
							"js_is_promise",
							"js_is_dataview",
							"js_is_iterable",
							"js_is_iterator",
							"js_typedarray_prototype",
							"js_typedarray_constructor",
							"js_typedarray_new",
							"js_invoke",
							"js_symbol_operatorset_value",
							"js_symbol_operatorset_atom",
							"js_operators_create",
							"js_number_new",
							"js_date_new",
							"js_date_from_ms",
							"js_date_from_time_ns",
							"js_date_from_timespec",
							"js_date_gettime",
							"js_date_time",
							"timespec",
							"js_arraybuffer_freevalue",
							"js_arraybuffer_fromvalue",
							"js_arraybuffer_bytelength",
							"js_eval_module",
							"js_eval_binary",
							"js_eval_buf",
							"js_eval_str",
							"js_eval_fmt",
							"js_time_ms",
							"js_interrupt_handler",
							"js_timer_unlink",
							"js_timer_free",
							"js_call_handler",
							"js_sab_alloc",
							"js_sab_free",
							"js_sab_dup",
							"js_error_dump",
							"js_error_tostring",
							"js_error_print",
							"js_error_stack",
							"js_io_readhandler_fn",
							"js_io_readhandler_cfunc",
							"js_promise_resolve",
							"js_promise_then",
							"js_promise_catch",
							"js_promise_wrap",
							"js_promise_adopt",
							"js_to_string",
							"js_to_source",
							"arguments_dump",
							"arguments_alloc",
							"arguments_push",
							"js_arguments_alloc",
							"js_arguments_dump",
							"js_tostringlen",
							"js_tostring",
							"js_tosource",
							"js_towstringlen",
							"js_json_stringify",
							"js_is_identifier_len",
							"js_is_identifier_atom"
						]
					},
					"AQAAAAAAAAAAAAAAoRAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1423,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								437,
								443
							],
							[
								857,
								879
							],
							[
								928,
								941
							],
							[
								982,
								1000
							],
							[
								1379,
								1389
							],
							[
								1781,
								1798
							],
							[
								1888,
								1910
							],
							[
								2013,
								2029
							],
							[
								2269,
								2289
							],
							[
								2864,
								2884
							],
							[
								3594,
								3614
							],
							[
								3845,
								3864
							],
							[
								8130,
								8152
							],
							[
								9782,
								9804
							],
							[
								10009,
								10024
							],
							[
								10138,
								10164
							],
							[
								10613,
								10649
							],
							[
								11051,
								11073
							],
							[
								11392,
								11414
							],
							[
								12430,
								12451
							],
							[
								12936,
								12956
							],
							[
								14520,
								14540
							],
							[
								15682,
								15710
							],
							[
								18334,
								18357
							],
							[
								18743,
								18766
							],
							[
								20126,
								20149
							],
							[
								21927,
								21948
							],
							[
								22210,
								22233
							],
							[
								23922,
								23944
							],
							[
								24692,
								24715
							],
							[
								34390,
								34412
							],
							[
								36790,
								36800
							],
							[
								37711,
								37730
							],
							[
								38119,
								38134
							],
							[
								38328,
								38355
							],
							[
								38405,
								38432
							],
							[
								38713,
								38734
							],
							[
								38966,
								38981
							],
							[
								40221,
								40235
							]
						],
						"symlist":
						[
							"isatty",
							"INSPECT_INT32T_INRANGE",
							"INSPECT_LEVEL",
							"INSPECT_IS_COMPACT",
							"prop_key_t",
							"inspect_options_t",
							"js_inspect_print_value",
							"regexp_predicate",
							"inspect_screen_width",
							"inspect_options_init",
							"inspect_options_free",
							"inspect_options_get",
							"inspect_options_object",
							"inspect_options_hidden",
							"inspect_newline",
							"js_object_getpropertynames",
							"js_object_getpropertynames_recursive",
							"js_inspect_custom_atom",
							"js_inspect_custom_call",
							"js_inspect_print_date",
							"js_inspect_print_map",
							"js_inspect_print_set",
							"js_inspect_print_arraybuffer",
							"js_inspect_print_regexp",
							"js_inspect_print_number",
							"js_inspect_print_string",
							"js_inspect_print_atom",
							"js_inspect_print_module",
							"js_inspect_print_error",
							"js_inspect_print_object",
							"js_inspect_print_value",
							"js_inspect",
							"js_inspect_tostring",
							"js_inspect_atom",
							"js_debugger_build_backtrace",
							"js_inspect_stacktrace_value",
							"js_inspect_stacktrace",
							"js_inspect_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChEAAAICBxdWlja3NvcnRfcgogIHN0cnZlcnNjbXAKICBhdG9taWNfYWRkX2ludAogIHRpbWVfdXMKICB0aW1lX3VzCiAgcmVnZXhwX2ZsYWdzX2Zyb21zdHJpbmcKICByZWdleHBfZmxhZ3NfdG9zdHJpbmcKICByZWdleHBfZnJvbV9hcmd2CiAgcmVnZXhwX2Zyb21fc3RyaW5nCiAgcmVnZXhwX2Zyb21fZGJ1ZgogIHJlZ2V4cF9jb21waWxlCiAgcmVnZXhwX21hdGNoCiAgcmVnZXhwX3RvX3ZhbHVlCiAgcmVnZXhwX2ZyZWVfcnQKICBqc19hcnJheV9sZW5ndGgKICBqc19hcnJheV9jbGVhcgogIGpzX2FycmF5X3RvX2FyZ3YKICBqc19hcnJheV9jb3B5cwogIGpzX3N0cnZfY29weXMKICBqc19hdG9tX2Zyb20KICBqc19hdG9tX2R1bXAKICBqc19hdG9tX3RvYmluYXJ5CiAganNfYXRvbV90b19jc3RyaW5nbGVuCiAganNfYXRvbV90b2ludDMyCiAganNfYXRvbV90b2ludDY0CiAganNfYXRvbV9pc19pbmRleAogIGpzX2F0b21faXNfc3RyaW5nCiAganNfYXRvbV9pc19sZW5ndGgKICBqc19mdW5jdGlvbl9uYW1lCiAganNfZnVuY3Rpb25fYXJnYwogIGpzX2Z1bmN0aW9uX2NmdW5jCiAganNfZnVuY3Rpb25fYm91bmQKICBqc19mdW5jdGlvbl9iaW5kCiAganNfZnVuY3Rpb25fYm91bmRfdGhpcwogIGpzX2Z1bmN0aW9uX2JpbmRfdGhpcwogIGpzX2Z1bmN0aW9uX3Rocm93X2ZuCiAganNfZnVuY3Rpb25fdGhyb3cKICBqc19mdW5jdGlvbl9yZXR1cm5fdmFsdWVfZm4KICBqc19mdW5jdGlvbl9yZXR1cm5fdW5kZWZpbmVkCiAganNfZnVuY3Rpb25fcmV0dXJuX3ZhbHVlCiAganNfZ2xvYmFsX2dldF9zdHIKICBqc19nbG9iYWxfZ2V0X3N0cl9uCiAganNfZ2xvYmFsX2dldF9hdG9tCiAganNfZ2xvYmFsX3Byb3RvdHlwZQogIGpzX2dsb2JhbF9zdGF0aWNfZnVuYwogIGpzX2dsb2JhbF9wcm90b3R5cGVfZnVuYwogIGpzX2l0ZXJhdG9yX21ldGhvZAogIGpzX2l0ZXJhdG9yX25ldwogIGpzX2l0ZXJhdG9yX25leHQKICBqc19pdGVyYXRvcl9yZXN1bHQKICBqc19pdGVyYXRvcl90aGVuX2ZuCiAganNfaXRlcmF0b3JfdGhlbgogIGpzX29iamVjdF9jb25zdHJ1Y3RvcgogIGpzX29iamVjdF9jbGFzc25hbWUKICBqc19vYmplY3RfZXF1YWxzCiAganNfb2JqZWN0X2lzCiAganNfb2JqZWN0X2NvbnN0cnVjdAogIGpzX29iamVjdF9lcnJvcgogIGpzX29iamVjdF9uZXcKICBqc19vYmplY3RfZnVuY3Rpb24KICBqc19oYXNfcHJvcGVydHlzdHIKICBqc19nZXRfcHJvcGVydHlhdG9tX3ZhbHVlCiAganNfZ2V0X3Byb3BlcnR5c3RyX2Jvb2wKICBqc19nZXRfcHJvcGVydHlzdHJfY3N0cmluZwogIGpzX2dldF9wcm9wZXJ0eXN0cl9jc3RyaW5nbGVuCiAganNfZ2V0X3Byb3BlcnR5aW50X2NzdHJpbmcKICBqc19nZXRfcHJvcGVydHlpbnRfaW50MzIKICBqc19nZXRfcHJvcGVydHlzdHJfc3RyaW5nCiAganNfZ2V0X3Byb3BlcnR5c3RyX3N0cmluZ2xlbgogIGpzX2dldF9wcm9wZXJ0eXN0cl9pbnQzMgogIGpzX2dldF9wcm9wZXJ0eXN0cl91aW50NjQKICBqc19nZXRfcHJvcGVydHlzdHJfYXRvbQogIGpzX3NldF9wcm9wZXJ0eWludF9zdHJpbmcKICBqc19zZXRfcHJvcGVydHlpbnRfaW50CiAganNfc2V0X3Byb3BlcnR5c3RyX3N0cmluZwogIGpzX3NldF9wcm9wZXJ0eXN0cl9zdHJpbmdsZW4KICBqc19nZXRfcHJvcGVydHlkZXNjcmlwdG9yCiAganNfY2xhc3NfaWQKICBqc19jbGFzc19uZXdpZAogIGpzX2NsYXNzX2dldAogIGpzX2NsYXNzX2ZpbmQKICBqc19jbGFzc19hdG9tCiAganNfY2xhc3NfbmFtZQogIGpzX29iamVjdF90b3N0cmluZwogIGpzX29iamVjdF90b3N0cmluZzIKICBqc19mdW5jdGlvbl90b3N0cmluZwogIGpzX2Z1bmN0aW9uX2lzbmF0aXZlCiAganNfaXNfaW5wdXQKICBqc19wcm9wZW51bV9jbXAKICBqc19wcm9wZXJ0eWVudW1zX2ZyZWUKICBqc19zdHJ2X2ZyZWVfbgogIGpzX3N0cnZfZnJlZQogIGpzX3N0cnZfZnJlZV9ydAogIGpzX3N0cnZfdG9fYXJyYXkKICBqc19zdHJ2X2xlbmd0aAogIGpzX3N0cnZfZHVwCiAganNfaW50dl90b19hcnJheQogIGpzX3N5bWJvbF9zdGF0aWNfYXRvbQogIGpzX3N5bWJvbF9zdGF0aWNfdmFsdWUKICBqc19zeW1ib2xfY3RvcgogIGpzX3N5bWJvbF9pbnZva2Vfc3RhdGljCiAganNfc3ltYm9sX2ZvcgogIGpzX3N5bWJvbF9mb3JfYXRvbQogIGpzX3N5bWJvbF90b19zdHJpbmcKICBqc19zeW1ib2xfdG9fY3N0cmluZwogIGpzX3ZhbHVlc19kdXAKICBqc192YWx1ZXNfZnJlZQogIGpzX3ZhbHVlc190b2FycmF5CiAganNfdmFsdWVzX2Zyb21hcnJheQogIGpzX3ZhbHVlX3R5cGVfbmFtZQogIGpzX3ZhbHVlX3R5cGVzdHIKICBqc192YWx1ZV9oYXNfcmVmX2NvdW50CiAgdmFsdWVfbWFzawogIGpzX3ZhbHVlX3R5cGVfZ2V0CiAganNfdmFsdWVfdHlwZV9mbGFnCiAganNfdmFsdWVfZnJlZQogIGpzX3ZhbHVlX2Nsb25lCiAganNfdmFsdWVfZndyaXRlCiAganNfdmFsdWVfZHVtcAogIGpzX3ZhbHVlX2VxdWFscwogIGpzX3ZhbHVlX2Zyb21fY2hhcgogIGpzX3ZhbHVlX3ByaW50CiAganNfdmFsdWVfdG9zaXplCiAganNfdmFsdWVfZnJlZV9ydAogIGpzX2NzdHJpbmdfcHRyCiAganNfY3N0cmluZ19sZW4KICBqc19jc3RyaW5nX2R1cAogIGpzX2NzdHJpbmdfdmFsdWUKICBqc19jc3RyaW5nX2R1bXAKICBqc19tYXBfbmV3CiAgbW9kdWxlX25hbWUKICBtb2R1bGVfbmFtZXN0cgogIGNhbGxfbW9kdWxlX2Z1bmMKICBtb2R1bGVfZnVuYwogIG1vZHVsZV9ucwogIG1vZHVsZV9leHBvcnRzX2ZpbmQKICBtb2R1bGVfZXhwb3J0c19nZXQKICBtb2R1bGVfZXhwb3J0cwogIGpzX21vZHVsZXNfbGlzdAogIGpzX21vZHVsZXNfYXJyYXkKICBqc19tb2R1bGVzX2VudHJpZXMKICBqc19tb2R1bGVzX21hcAogIGpzX21vZHVsZXNfb2JqZWN0CiAgbW9kdWxlX3ZhbHVlCiAgbW9kdWxlX2VudHJ5CiAgbW9kdWxlX29iamVjdAogIGpzX21vZHVsZV9kZWYKICBqc19tb2R1bGVfZmluZF9md2QKICBqc19tb2R1bGVfZmluZF9yZXYKICBqc19tb2R1bGVfaW5kZXhvZgogIGpzX21vZHVsZV9hdAogIGpzX2lzX2FycmF5YnVmZmVyCiAganNfaXNfc2hhcmVkYXJyYXlidWZmZXIKICBqc19pc19kYXRlCiAganNfaXNfbWFwCiAganNfaXNfc2V0CiAganNfaXNfZ2VuZXJhdG9yCiAganNfaXNfcmVnZXhwCiAganNfaXNfcHJvbWlzZQogIGpzX2lzX2RhdGF2aWV3CiAganNfaXNfaXRlcmFibGUKICBqc19pc19pdGVyYXRvcgogIGpzX3R5cGVkYXJyYXlfcHJvdG90eXBlCiAganNfdHlwZWRhcnJheV9jb25zdHJ1Y3RvcgogIGpzX3R5cGVkYXJyYXlfbmV3CiAganNfaW52b2tlCiAganNfc3ltYm9sX29wZXJhdG9yc2V0X3ZhbHVlCiAganNfc3ltYm9sX29wZXJhdG9yc2V0X2F0b20KICBqc19vcGVyYXRvcnNfY3JlYXRlCiAganNfbnVtYmVyX25ldwogIGpzX2RhdGVfbmV3CiAganNfZGF0ZV9mcm9tX21zCiAganNfZGF0ZV9mcm9tX3RpbWVfbnMKICBqc19kYXRlX2Zyb21fdGltZXNwZWMKICBqc19kYXRlX2dldHRpbWUKICBqc19kYXRlX3RpbWUKICB0aW1lc3BlYwogIGpzX2FycmF5YnVmZmVyX2ZyZWV2YWx1ZQogIGpzX2FycmF5YnVmZmVyX2Zyb212YWx1ZQogIGpzX2FycmF5YnVmZmVyX2J5dGVsZW5ndGgKICBqc19ldmFsX21vZHVsZQogIGpzX2V2YWxfYmluYXJ5CiAganNfZXZhbF9idWYKICBqc19ldmFsX3N0cgogIGpzX2V2YWxfZm10CiAganNfdGltZV9tcwogIGpzX2ludGVycnVwdF9oYW5kbGVyCiAganNfdGltZXJfdW5saW5rCiAganNfdGltZXJfZnJlZQogIGpzX2NhbGxfaGFuZGxlcgogIGpzX3NhYl9hbGxvYwogIGpzX3NhYl9mcmVlCiAganNfc2FiX2R1cAogIGpzX2Vycm9yX2R1bXAKICBqc19lcnJvcl90b3N0cmluZwogIGpzX2Vycm9yX3ByaW50CiAganNfZXJyb3Jfc3RhY2sKICBqc19pb19yZWFkaGFuZGxlcl9mbgogIGpzX2lvX3JlYWRoYW5kbGVyX2NmdW5jCiAganNfcHJvbWlzZV9yZXNvbHZlCiAganNfcHJvbWlzZV90aGVuCiAganNfcHJvbWlzZV9jYXRjaAogIGpzX3Byb21pc2Vfd3JhcAogIGpzX3Byb21pc2VfYWRvcHQKICBqc190b19zdHJpbmcKICBqc190b19zb3VyY2UKICBhcmd1bWVudHNfZHVtcAogIGFyZ3VtZW50c19hbGxvYwogIGFyZ3VtZW50c19wdXNoCiAganNfYXJndW1lbnRzX2FsbG9jCiAganNfYXJndW1lbnRzX2R1bXAKICBqc190b3N0cmluZ2xlbgogIGpzX3Rvc3RyaW5nCiAganNfdG9zb3VyY2UKICBqc190b3dzdHJpbmdsZW4KICBqc19qc29uX3N0cmluZ2lmeQogIGpzX2lzX2lkZW50aWZpZXJfbGVuCiAganNfaXNfaWRlbnRpZmllcl9hdG9tAAAAAAAAAAB9AwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1434,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AwAAICBpc2F0dHkKSU5TUEVDVF9JTlQzMlRfSU5SQU5HRQpJTlNQRUNUX0xFVkVMCklOU1BFQ1RfSVNfQ09NUEFDVAogIHByb3Bfa2V5X3QKICBpbnNwZWN0X29wdGlvbnNfdAogIGpzX2luc3BlY3RfcHJpbnRfdmFsdWUKICByZWdleHBfcHJlZGljYXRlCiAgaW5zcGVjdF9zY3JlZW5fd2lkdGgKICBpbnNwZWN0X29wdGlvbnNfaW5pdAogIGluc3BlY3Rfb3B0aW9uc19mcmVlCiAgaW5zcGVjdF9vcHRpb25zX2dldAogIGluc3BlY3Rfb3B0aW9uc19vYmplY3QKICBpbnNwZWN0X29wdGlvbnNfaGlkZGVuCiAgaW5zcGVjdF9uZXdsaW5lCiAganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMKICBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUKICBqc19pbnNwZWN0X2N1c3RvbV9hdG9tCiAganNfaW5zcGVjdF9jdXN0b21fY2FsbAogIGpzX2luc3BlY3RfcHJpbnRfZGF0ZQogIGpzX2luc3BlY3RfcHJpbnRfbWFwCiAganNfaW5zcGVjdF9wcmludF9zZXQKICBqc19pbnNwZWN0X3ByaW50X2FycmF5YnVmZmVyCiAganNfaW5zcGVjdF9wcmludF9yZWdleHAKICBqc19pbnNwZWN0X3ByaW50X251bWJlcgogIGpzX2luc3BlY3RfcHJpbnRfc3RyaW5nCiAganNfaW5zcGVjdF9wcmludF9hdG9tCiAganNfaW5zcGVjdF9wcmludF9tb2R1bGUKICBqc19pbnNwZWN0X3ByaW50X2Vycm9yCiAganNfaW5zcGVjdF9wcmludF9vYmplY3QKICBqc19pbnNwZWN0X3ByaW50X3ZhbHVlCiAganNfaW5zcGVjdAogIGpzX2luc3BlY3RfdG9zdHJpbmcKICBqc19pbnNwZWN0X2F0b20KICBqc19kZWJ1Z2dlcl9idWlsZF9iYWNrdHJhY2UKICBqc19pbnNwZWN0X3N0YWNrdHJhY2VfdmFsdWUKICBqc19pbnNwZWN0X3N0YWNrdHJhY2UKICBqc19pbnNwZWN0X2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQIAAAAAAAC7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					1435,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								437,
								443
							],
							[
								857,
								879
							],
							[
								928,
								941
							],
							[
								982,
								1000
							],
							[
								1379,
								1389
							],
							[
								1781,
								1798
							],
							[
								1888,
								1910
							],
							[
								2013,
								2029
							],
							[
								2269,
								2289
							],
							[
								2864,
								2884
							],
							[
								3594,
								3614
							],
							[
								3845,
								3864
							],
							[
								8130,
								8152
							],
							[
								9782,
								9804
							],
							[
								10009,
								10024
							],
							[
								10138,
								10164
							],
							[
								10613,
								10649
							],
							[
								11051,
								11073
							],
							[
								11392,
								11414
							],
							[
								12430,
								12451
							],
							[
								12936,
								12956
							],
							[
								14520,
								14540
							],
							[
								15682,
								15710
							],
							[
								18334,
								18357
							],
							[
								18743,
								18766
							],
							[
								20126,
								20149
							],
							[
								21927,
								21948
							],
							[
								22210,
								22233
							],
							[
								23922,
								23944
							],
							[
								24692,
								24715
							],
							[
								34390,
								34412
							],
							[
								36790,
								36800
							],
							[
								37711,
								37730
							],
							[
								38119,
								38134
							],
							[
								38328,
								38355
							],
							[
								38405,
								38432
							],
							[
								38713,
								38734
							],
							[
								38966,
								38981
							],
							[
								40221,
								40235
							]
						],
						"symlist":
						[
							"isatty",
							"INSPECT_INT32T_INRANGE",
							"INSPECT_LEVEL",
							"INSPECT_IS_COMPACT",
							"prop_key_t",
							"inspect_options_t",
							"js_inspect_print_value",
							"regexp_predicate",
							"inspect_screen_width",
							"inspect_options_init",
							"inspect_options_free",
							"inspect_options_get",
							"inspect_options_object",
							"inspect_options_hidden",
							"inspect_newline",
							"js_object_getpropertynames",
							"js_object_getpropertynames_recursive",
							"js_inspect_custom_atom",
							"js_inspect_custom_call",
							"js_inspect_print_date",
							"js_inspect_print_map",
							"js_inspect_print_set",
							"js_inspect_print_arraybuffer",
							"js_inspect_print_regexp",
							"js_inspect_print_number",
							"js_inspect_print_string",
							"js_inspect_print_atom",
							"js_inspect_print_module",
							"js_inspect_print_error",
							"js_inspect_print_object",
							"js_inspect_print_value",
							"js_inspect",
							"js_inspect_tostring",
							"js_inspect_atom",
							"js_debugger_build_backtrace",
							"js_inspect_stacktrace_value",
							"js_inspect_stacktrace",
							"js_inspect_init",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAAfQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1436,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AwAAICBpc2F0dHkKSU5TUEVDVF9JTlQzMlRfSU5SQU5HRQpJTlNQRUNUX0xFVkVMCklOU1BFQ1RfSVNfQ09NUEFDVAogIHByb3Bfa2V5X3QKICBpbnNwZWN0X29wdGlvbnNfdAogIGpzX2luc3BlY3RfcHJpbnRfdmFsdWUKICByZWdleHBfcHJlZGljYXRlCiAgaW5zcGVjdF9zY3JlZW5fd2lkdGgKICBpbnNwZWN0X29wdGlvbnNfaW5pdAogIGluc3BlY3Rfb3B0aW9uc19mcmVlCiAgaW5zcGVjdF9vcHRpb25zX2dldAogIGluc3BlY3Rfb3B0aW9uc19vYmplY3QKICBpbnNwZWN0X29wdGlvbnNfaGlkZGVuCiAgaW5zcGVjdF9uZXdsaW5lCiAganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMKICBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUKICBqc19pbnNwZWN0X2N1c3RvbV9hdG9tCiAganNfaW5zcGVjdF9jdXN0b21fY2FsbAogIGpzX2luc3BlY3RfcHJpbnRfZGF0ZQogIGpzX2luc3BlY3RfcHJpbnRfbWFwCiAganNfaW5zcGVjdF9wcmludF9zZXQKICBqc19pbnNwZWN0X3ByaW50X2FycmF5YnVmZmVyCiAganNfaW5zcGVjdF9wcmludF9yZWdleHAKICBqc19pbnNwZWN0X3ByaW50X251bWJlcgogIGpzX2luc3BlY3RfcHJpbnRfc3RyaW5nCiAganNfaW5zcGVjdF9wcmludF9hdG9tCiAganNfaW5zcGVjdF9wcmludF9tb2R1bGUKICBqc19pbnNwZWN0X3ByaW50X2Vycm9yCiAganNfaW5zcGVjdF9wcmludF9vYmplY3QKICBqc19pbnNwZWN0X3ByaW50X3ZhbHVlCiAganNfaW5zcGVjdAogIGpzX2luc3BlY3RfdG9zdHJpbmcKICBqc19pbnNwZWN0X2F0b20KICBqc19kZWJ1Z2dlcl9idWlsZF9iYWNrdHJhY2UKICBqc19pbnNwZWN0X3N0YWNrdHJhY2VfdmFsdWUKICBqc19pbnNwZWN0X3N0YWNrdHJhY2UKICBqc19pbnNwZWN0X2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1437,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								437,
								443
							],
							[
								857,
								879
							],
							[
								928,
								941
							],
							[
								982,
								1000
							],
							[
								1379,
								1389
							],
							[
								1781,
								1798
							],
							[
								1888,
								1910
							],
							[
								2013,
								2029
							],
							[
								2269,
								2289
							],
							[
								2864,
								2884
							],
							[
								3594,
								3614
							],
							[
								3845,
								3864
							],
							[
								8130,
								8152
							],
							[
								9782,
								9804
							],
							[
								10009,
								10024
							],
							[
								10138,
								10164
							],
							[
								10613,
								10649
							],
							[
								11051,
								11073
							],
							[
								11392,
								11414
							],
							[
								12430,
								12451
							],
							[
								12936,
								12956
							],
							[
								14520,
								14540
							],
							[
								15682,
								15710
							],
							[
								18334,
								18357
							],
							[
								18743,
								18766
							],
							[
								20126,
								20149
							],
							[
								21927,
								21948
							],
							[
								22210,
								22233
							],
							[
								23922,
								23944
							],
							[
								24692,
								24715
							],
							[
								34390,
								34412
							],
							[
								36790,
								36800
							],
							[
								37711,
								37730
							],
							[
								38119,
								38134
							],
							[
								38328,
								38355
							],
							[
								38405,
								38432
							],
							[
								38713,
								38734
							],
							[
								38966,
								38981
							],
							[
								40221,
								40235
							]
						],
						"symlist":
						[
							"isatty",
							"INSPECT_INT32T_INRANGE",
							"INSPECT_LEVEL",
							"INSPECT_IS_COMPACT",
							"prop_key_t",
							"inspect_options_t",
							"js_inspect_print_value",
							"regexp_predicate",
							"inspect_screen_width",
							"inspect_options_init",
							"inspect_options_free",
							"inspect_options_get",
							"inspect_options_object",
							"inspect_options_hidden",
							"inspect_newline",
							"js_object_getpropertynames",
							"js_object_getpropertynames_recursive",
							"js_inspect_custom_atom",
							"js_inspect_custom_call",
							"js_inspect_print_date",
							"js_inspect_print_map",
							"js_inspect_print_set",
							"js_inspect_print_arraybuffer",
							"js_inspect_print_regexp",
							"js_inspect_print_number",
							"js_inspect_print_string",
							"js_inspect_print_atom",
							"js_inspect_print_module",
							"js_inspect_print_error",
							"js_inspect_print_object",
							"js_inspect_print_value",
							"js_inspect",
							"js_inspect_tostring",
							"js_inspect_atom",
							"js_debugger_build_backtrace",
							"js_inspect_stacktrace_value",
							"js_inspect_stacktrace",
							"js_inspect_init",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAAfQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1438,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AwAAICBpc2F0dHkKSU5TUEVDVF9JTlQzMlRfSU5SQU5HRQpJTlNQRUNUX0xFVkVMCklOU1BFQ1RfSVNfQ09NUEFDVAogIHByb3Bfa2V5X3QKICBpbnNwZWN0X29wdGlvbnNfdAogIGpzX2luc3BlY3RfcHJpbnRfdmFsdWUKICByZWdleHBfcHJlZGljYXRlCiAgaW5zcGVjdF9zY3JlZW5fd2lkdGgKICBpbnNwZWN0X29wdGlvbnNfaW5pdAogIGluc3BlY3Rfb3B0aW9uc19mcmVlCiAgaW5zcGVjdF9vcHRpb25zX2dldAogIGluc3BlY3Rfb3B0aW9uc19vYmplY3QKICBpbnNwZWN0X29wdGlvbnNfaGlkZGVuCiAgaW5zcGVjdF9uZXdsaW5lCiAganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMKICBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUKICBqc19pbnNwZWN0X2N1c3RvbV9hdG9tCiAganNfaW5zcGVjdF9jdXN0b21fY2FsbAogIGpzX2luc3BlY3RfcHJpbnRfZGF0ZQogIGpzX2luc3BlY3RfcHJpbnRfbWFwCiAganNfaW5zcGVjdF9wcmludF9zZXQKICBqc19pbnNwZWN0X3ByaW50X2FycmF5YnVmZmVyCiAganNfaW5zcGVjdF9wcmludF9yZWdleHAKICBqc19pbnNwZWN0X3ByaW50X251bWJlcgogIGpzX2luc3BlY3RfcHJpbnRfc3RyaW5nCiAganNfaW5zcGVjdF9wcmludF9hdG9tCiAganNfaW5zcGVjdF9wcmludF9tb2R1bGUKICBqc19pbnNwZWN0X3ByaW50X2Vycm9yCiAganNfaW5zcGVjdF9wcmludF9vYmplY3QKICBqc19pbnNwZWN0X3ByaW50X3ZhbHVlCiAganNfaW5zcGVjdAogIGpzX2luc3BlY3RfdG9zdHJpbmcKICBqc19pbnNwZWN0X2F0b20KICBqc19kZWJ1Z2dlcl9idWlsZF9iYWNrdHJhY2UKICBqc19pbnNwZWN0X3N0YWNrdHJhY2VfdmFsdWUKICBqc19pbnNwZWN0X3N0YWNrdHJhY2UKICBqc19pbnNwZWN0X2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1439,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								437,
								443
							],
							[
								857,
								879
							],
							[
								928,
								941
							],
							[
								982,
								1000
							],
							[
								1379,
								1389
							],
							[
								1781,
								1798
							],
							[
								1888,
								1910
							],
							[
								2013,
								2029
							],
							[
								2269,
								2289
							],
							[
								2864,
								2884
							],
							[
								3594,
								3614
							],
							[
								3845,
								3864
							],
							[
								8130,
								8152
							],
							[
								9782,
								9804
							],
							[
								10009,
								10024
							],
							[
								10138,
								10164
							],
							[
								10613,
								10649
							],
							[
								11051,
								11073
							],
							[
								11392,
								11414
							],
							[
								12430,
								12451
							],
							[
								12936,
								12956
							],
							[
								14520,
								14540
							],
							[
								15682,
								15710
							],
							[
								18334,
								18357
							],
							[
								18743,
								18766
							],
							[
								20126,
								20149
							],
							[
								21927,
								21948
							],
							[
								22210,
								22233
							],
							[
								23922,
								23944
							],
							[
								24692,
								24715
							],
							[
								34390,
								34412
							],
							[
								36790,
								36800
							],
							[
								37711,
								37730
							],
							[
								38119,
								38134
							],
							[
								38328,
								38355
							],
							[
								38405,
								38432
							],
							[
								38713,
								38734
							],
							[
								38966,
								38981
							],
							[
								40221,
								40235
							]
						],
						"symlist":
						[
							"isatty",
							"INSPECT_INT32T_INRANGE",
							"INSPECT_LEVEL",
							"INSPECT_IS_COMPACT",
							"prop_key_t",
							"inspect_options_t",
							"js_inspect_print_value",
							"regexp_predicate",
							"inspect_screen_width",
							"inspect_options_init",
							"inspect_options_free",
							"inspect_options_get",
							"inspect_options_object",
							"inspect_options_hidden",
							"inspect_newline",
							"js_object_getpropertynames",
							"js_object_getpropertynames_recursive",
							"js_inspect_custom_atom",
							"js_inspect_custom_call",
							"js_inspect_print_date",
							"js_inspect_print_map",
							"js_inspect_print_set",
							"js_inspect_print_arraybuffer",
							"js_inspect_print_regexp",
							"js_inspect_print_number",
							"js_inspect_print_string",
							"js_inspect_print_atom",
							"js_inspect_print_module",
							"js_inspect_print_error",
							"js_inspect_print_object",
							"js_inspect_print_value",
							"js_inspect",
							"js_inspect_tostring",
							"js_inspect_atom",
							"js_debugger_build_backtrace",
							"js_inspect_stacktrace_value",
							"js_inspect_stacktrace",
							"js_inspect_init",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAAfQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1444,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								437,
								443
							],
							[
								857,
								879
							],
							[
								928,
								941
							],
							[
								982,
								1000
							],
							[
								1379,
								1389
							],
							[
								1781,
								1798
							],
							[
								1888,
								1910
							],
							[
								2013,
								2029
							],
							[
								2269,
								2289
							],
							[
								2864,
								2884
							],
							[
								3594,
								3614
							],
							[
								3845,
								3864
							],
							[
								8130,
								8152
							],
							[
								9782,
								9804
							],
							[
								10009,
								10024
							],
							[
								10138,
								10164
							],
							[
								10613,
								10649
							],
							[
								11051,
								11073
							],
							[
								11392,
								11414
							],
							[
								12430,
								12451
							],
							[
								12936,
								12956
							],
							[
								14520,
								14540
							],
							[
								15682,
								15710
							],
							[
								18334,
								18357
							],
							[
								18743,
								18766
							],
							[
								20126,
								20149
							],
							[
								21927,
								21948
							],
							[
								22210,
								22233
							],
							[
								23922,
								23944
							],
							[
								24692,
								24715
							],
							[
								34522,
								34544
							],
							[
								36922,
								36932
							],
							[
								37843,
								37862
							],
							[
								38251,
								38266
							],
							[
								38460,
								38487
							],
							[
								38537,
								38564
							],
							[
								38845,
								38866
							],
							[
								39098,
								39113
							],
							[
								40353,
								40367
							]
						],
						"symlist":
						[
							"isatty",
							"INSPECT_INT32T_INRANGE",
							"INSPECT_LEVEL",
							"INSPECT_IS_COMPACT",
							"prop_key_t",
							"inspect_options_t",
							"js_inspect_print_value",
							"regexp_predicate",
							"inspect_screen_width",
							"inspect_options_init",
							"inspect_options_free",
							"inspect_options_get",
							"inspect_options_object",
							"inspect_options_hidden",
							"inspect_newline",
							"js_object_getpropertynames",
							"js_object_getpropertynames_recursive",
							"js_inspect_custom_atom",
							"js_inspect_custom_call",
							"js_inspect_print_date",
							"js_inspect_print_map",
							"js_inspect_print_set",
							"js_inspect_print_arraybuffer",
							"js_inspect_print_regexp",
							"js_inspect_print_number",
							"js_inspect_print_string",
							"js_inspect_print_atom",
							"js_inspect_print_module",
							"js_inspect_print_error",
							"js_inspect_print_object",
							"js_inspect_print_value",
							"js_inspect",
							"js_inspect_tostring",
							"js_inspect_atom",
							"js_debugger_build_backtrace",
							"js_inspect_stacktrace_value",
							"js_inspect_stacktrace",
							"js_inspect_init",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AwAAICBpc2F0dHkKSU5TUEVDVF9JTlQzMlRfSU5SQU5HRQpJTlNQRUNUX0xFVkVMCklOU1BFQ1RfSVNfQ09NUEFDVAogIHByb3Bfa2V5X3QKICBpbnNwZWN0X29wdGlvbnNfdAogIGpzX2luc3BlY3RfcHJpbnRfdmFsdWUKICByZWdleHBfcHJlZGljYXRlCiAgaW5zcGVjdF9zY3JlZW5fd2lkdGgKICBpbnNwZWN0X29wdGlvbnNfaW5pdAogIGluc3BlY3Rfb3B0aW9uc19mcmVlCiAgaW5zcGVjdF9vcHRpb25zX2dldAogIGluc3BlY3Rfb3B0aW9uc19vYmplY3QKICBpbnNwZWN0X29wdGlvbnNfaGlkZGVuCiAgaW5zcGVjdF9uZXdsaW5lCiAganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMKICBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUKICBqc19pbnNwZWN0X2N1c3RvbV9hdG9tCiAganNfaW5zcGVjdF9jdXN0b21fY2FsbAogIGpzX2luc3BlY3RfcHJpbnRfZGF0ZQogIGpzX2luc3BlY3RfcHJpbnRfbWFwCiAganNfaW5zcGVjdF9wcmludF9zZXQKICBqc19pbnNwZWN0X3ByaW50X2FycmF5YnVmZmVyCiAganNfaW5zcGVjdF9wcmludF9yZWdleHAKICBqc19pbnNwZWN0X3ByaW50X251bWJlcgogIGpzX2luc3BlY3RfcHJpbnRfc3RyaW5nCiAganNfaW5zcGVjdF9wcmludF9hdG9tCiAganNfaW5zcGVjdF9wcmludF9tb2R1bGUKICBqc19pbnNwZWN0X3ByaW50X2Vycm9yCiAganNfaW5zcGVjdF9wcmludF9vYmplY3QKICBqc19pbnNwZWN0X3ByaW50X3ZhbHVlCiAganNfaW5zcGVjdAogIGpzX2luc3BlY3RfdG9zdHJpbmcKICBqc19pbnNwZWN0X2F0b20KICBqc19kZWJ1Z2dlcl9idWlsZF9iYWNrdHJhY2UKICBqc19pbnNwZWN0X3N0YWNrdHJhY2VfdmFsdWUKICBqc19pbnNwZWN0X3N0YWNrdHJhY2UKICBqc19pbnNwZWN0X2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAH0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugIAAAAAAAC6AgAAAAAAAAAAAAAAAPC/"
				],
				[
					1445,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								65,
								81
							],
							[
								379,
								396
							],
							[
								428,
								451
							],
							[
								525,
								542
							],
							[
								580,
								597
							],
							[
								711,
								728
							],
							[
								780,
								812
							],
							[
								917,
								934
							],
							[
								1131,
								1155
							],
							[
								1190,
								1214
							],
							[
								1251,
								1275
							],
							[
								1313,
								1337
							],
							[
								1376,
								1400
							],
							[
								1574,
								1598
							],
							[
								1639,
								1663
							],
							[
								1710,
								1713
							],
							[
								1717,
								1741
							],
							[
								1804,
								1808
							],
							[
								1812,
								1836
							],
							[
								2231,
								2251
							],
							[
								3330,
								3347
							],
							[
								3392,
								3402
							],
							[
								5739,
								5751
							],
							[
								5835,
								5847
							],
							[
								6713,
								6737
							],
							[
								6763,
								6787
							],
							[
								6852,
								6868
							],
							[
								6895,
								6908
							],
							[
								6946,
								6966
							],
							[
								7051,
								7073
							],
							[
								7105,
								7121
							],
							[
								7206,
								7230
							],
							[
								7342,
								7366
							],
							[
								7370,
								7394
							],
							[
								7406,
								7426
							],
							[
								7448,
								7467
							],
							[
								7578,
								7593
							],
							[
								7751,
								7766
							],
							[
								7777,
								7792
							],
							[
								7863,
								7878
							],
							[
								7881,
								7896
							],
							[
								7981,
								7996
							],
							[
								7999,
								8014
							],
							[
								8100,
								8111
							],
							[
								8226,
								8235
							],
							[
								8246,
								8260
							],
							[
								8263,
								8271
							],
							[
								8275,
								8284
							],
							[
								8299,
								8319
							],
							[
								8367,
								8381
							],
							[
								8415,
								8429
							],
							[
								8462,
								8482
							],
							[
								8489,
								8503
							],
							[
								8553,
								8571
							],
							[
								8612,
								8626
							],
							[
								8633,
								8646
							],
							[
								8680,
								8693
							],
							[
								8724,
								8742
							],
							[
								8786,
								8802
							],
							[
								8842,
								8855
							],
							[
								8858,
								8871
							],
							[
								8892,
								8906
							],
							[
								8926,
								8939
							],
							[
								8943,
								8959
							],
							[
								8963,
								8976
							],
							[
								8980,
								9000
							],
							[
								9007,
								9024
							],
							[
								9063,
								9076
							],
							[
								9109,
								9122
							],
							[
								9125,
								9138
							],
							[
								9211,
								9224
							],
							[
								9227,
								9240
							],
							[
								9283,
								9296
							],
							[
								9330,
								9346
							],
							[
								9421,
								9434
							],
							[
								9438,
								9458
							],
							[
								9466,
								9486
							],
							[
								9538,
								9559
							],
							[
								9664,
								9677
							],
							[
								9681,
								9695
							],
							[
								9702,
								9714
							],
							[
								9717,
								9731
							],
							[
								9832,
								9845
							],
							[
								9849,
								9866
							],
							[
								9920,
								9934
							],
							[
								9966,
								9981
							],
							[
								9984,
								9998
							],
							[
								10022,
								10035
							],
							[
								10119,
								10138
							],
							[
								10141,
								10155
							],
							[
								10217,
								10230
							],
							[
								10237,
								10248
							],
							[
								10251,
								10265
							],
							[
								10327,
								10340
							],
							[
								10344,
								10360
							],
							[
								10364,
								10379
							],
							[
								10386,
								10398
							],
							[
								10427,
								10440
							],
							[
								10444,
								10464
							],
							[
								10492,
								10504
							],
							[
								10507,
								10519
							],
							[
								10564,
								10581
							],
							[
								10620,
								10634
							],
							[
								10638,
								10651
							],
							[
								10658,
								10673
							],
							[
								10708,
								10721
							],
							[
								10725,
								10745
							],
							[
								10752,
								10765
							],
							[
								10784,
								10800
							],
							[
								10804,
								10817
							],
							[
								10821,
								10834
							],
							[
								10838,
								10852
							],
							[
								10887,
								10902
							],
							[
								10921,
								10933
							],
							[
								10936,
								10949
							],
							[
								10953,
								10973
							],
							[
								10980,
								10996
							],
							[
								10999,
								11012
							],
							[
								11016,
								11029
							],
							[
								11033,
								11053
							],
							[
								11060,
								11075
							],
							[
								11078,
								11091
							],
							[
								11095,
								11108
							],
							[
								11112,
								11132
							],
							[
								11164,
								11179
							],
							[
								11182,
								11197
							],
							[
								11271,
								11286
							],
							[
								11289,
								11304
							],
							[
								11374,
								11391
							],
							[
								11414,
								11429
							],
							[
								11432,
								11447
							],
							[
								11500,
								11512
							],
							[
								11515,
								11529
							],
							[
								11533,
								11546
							],
							[
								11553,
								11569
							],
							[
								11668,
								11688
							],
							[
								11692,
								11705
							],
							[
								11709,
								11723
							],
							[
								11731,
								11743
							],
							[
								11814,
								11826
							],
							[
								11830,
								11846
							],
							[
								11850,
								11864
							],
							[
								11872,
								11884
							],
							[
								11916,
								11936
							],
							[
								11939,
								11952
							],
							[
								11956,
								11976
							],
							[
								12090,
								12113
							],
							[
								12117,
								12141
							],
							[
								12163,
								12178
							],
							[
								12181,
								12194
							],
							[
								12198,
								12218
							],
							[
								12225,
								12242
							],
							[
								12245,
								12265
							],
							[
								12273,
								12291
							],
							[
								12294,
								12308
							],
							[
								12312,
								12332
							],
							[
								12376,
								12391
							],
							[
								12394,
								12409
							],
							[
								12487,
								12502
							],
							[
								12505,
								12520
							],
							[
								12536,
								12548
							],
							[
								12551,
								12563
							],
							[
								12744,
								12764
							],
							[
								13166,
								13185
							],
							[
								13213,
								13232
							],
							[
								13236,
								13255
							],
							[
								13314,
								13333
							],
							[
								13444,
								13463
							],
							[
								13493,
								13512
							],
							[
								13516,
								13535
							],
							[
								13596,
								13615
							],
							[
								13735,
								13754
							],
							[
								13786,
								13805
							],
							[
								13809,
								13828
							],
							[
								13891,
								13910
							],
							[
								14053,
								14077
							],
							[
								14082,
								14087
							],
							[
								14139,
								14144
							],
							[
								14168,
								14172
							],
							[
								14214,
								14218
							],
							[
								14243,
								14247
							],
							[
								14271,
								14295
							],
							[
								14332,
								14356
							],
							[
								14360,
								14384
							],
							[
								14389,
								14393
							],
							[
								14408,
								14412
							],
							[
								14768,
								14773
							],
							[
								15203,
								15218
							],
							[
								15258,
								15272
							],
							[
								15322,
								15333
							],
							[
								15337,
								15361
							],
							[
								15401,
								15418
							],
							[
								15452,
								15479
							],
							[
								15492,
								15519
							],
							[
								15552,
								15569
							],
							[
								15632,
								15647
							],
							[
								15666,
								15675
							],
							[
								15724,
								15733
							],
							[
								15764,
								15775
							],
							[
								15899,
								15910
							],
							[
								15914,
								15928
							],
							[
								15931,
								15942
							],
							[
								15945,
								15959
							],
							[
								15986,
								16001
							],
							[
								16024,
								16035
							],
							[
								16073,
								16092
							],
							[
								16095,
								16099
							],
							[
								16119,
								16136
							],
							[
								16159,
								16173
							],
							[
								16202,
								16206
							],
							[
								16213,
								16228
							],
							[
								16248,
								16258
							],
							[
								16397,
								16410
							],
							[
								16418,
								16422
							],
							[
								16426,
								16450
							],
							[
								16556,
								16569
							],
							[
								16608,
								16632
							],
							[
								16638,
								16649
							],
							[
								16676,
								16687
							],
							[
								16713,
								16722
							],
							[
								16746,
								16770
							],
							[
								16783,
								16787
							],
							[
								16801,
								16812
							],
							[
								16842,
								16855
							],
							[
								16878,
								16902
							],
							[
								16937,
								16961
							],
							[
								17070,
								17075
							],
							[
								17092,
								17113
							],
							[
								17133,
								17141
							],
							[
								17158,
								17179
							],
							[
								17247,
								17258
							],
							[
								17433,
								17444
							],
							[
								17514,
								17524
							],
							[
								17554,
								17565
							],
							[
								17581,
								17605
							],
							[
								17628,
								17648
							],
							[
								17651,
								17675
							],
							[
								17694,
								17714
							],
							[
								17740,
								17760
							],
							[
								17833,
								17852
							],
							[
								17856,
								17876
							],
							[
								17935,
								17954
							],
							[
								17972,
								17996
							],
							[
								18042,
								18053
							],
							[
								18075,
								18079
							],
							[
								18098,
								18109
							],
							[
								18126,
								18150
							],
							[
								18176,
								18185
							],
							[
								18207,
								18231
							],
							[
								18316,
								18340
							],
							[
								18387,
								18399
							],
							[
								18413,
								18424
							],
							[
								18435,
								18446
							],
							[
								18460,
								18471
							],
							[
								18485,
								18496
							],
							[
								18509,
								18520
							],
							[
								18534,
								18545
							],
							[
								18554,
								18565
							],
							[
								18582,
								18593
							],
							[
								18624,
								18635
							],
							[
								18645,
								18656
							],
							[
								18667,
								18685
							],
							[
								18701,
								18725
							],
							[
								18781,
								18793
							],
							[
								18796,
								18808
							],
							[
								18812,
								18836
							],
							[
								18862,
								18886
							],
							[
								18920,
								18938
							],
							[
								18984,
								19008
							],
							[
								19077,
								19089
							],
							[
								19166,
								19184
							],
							[
								19260,
								19276
							],
							[
								19501,
								19512
							],
							[
								19519,
								19541
							],
							[
								19545,
								19567
							],
							[
								19573,
								19584
							],
							[
								19642,
								19653
							],
							[
								19659,
								19670
							],
							[
								19774,
								19796
							],
							[
								19885,
								19904
							],
							[
								19943,
								19958
							],
							[
								19962,
								19972
							],
							[
								19976,
								19986
							],
							[
								19990,
								19994
							],
							[
								19998,
								20003
							],
							[
								20007,
								20016
							],
							[
								20092,
								20107
							],
							[
								20127,
								20149
							],
							[
								20261,
								20276
							],
							[
								20410,
								20423
							],
							[
								20464,
								20484
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"HAVE_POSIX_SPAWNP",
							"HAVE_SPAWN",
							"HAVE_SYSINFO",
							"HAVE_SYSINFO",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIB_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"buffer_utils_SOURCES",
							"COMMON_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"libutf_SOURCES",
							"char_utils_SOURCES",
							"libutf_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"char_utils_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"stream_SOURCES",
							"queue_SOURCES",
							"js_utils_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"predicate_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"token_SOURCES",
							"location_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"syscallerror_SOURCES",
							"child_process_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"deep_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"predicate_SOURCES",
							"deep_LIBRARIES",
							"inspect_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"tree_walker_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"xml_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"location_SOURCES",
							"inspect_SOURCES",
							"path_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"path_SOURCES",
							"path_SOURCES",
							"predicate_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"pointer_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"lexer_SOURCES",
							"location_SOURCES",
							"token_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"lexer_LIBRARIES",
							"mmap_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"repeater_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"queue_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"blob_SOURCES",
							"vector_SOURCES",
							"utils_SOURCES",
							"textcode_SOURCES",
							"buffer_utils_SOURCES",
							"utils_SOURCES",
							"vector_SOURCES",
							"misc_SOURCES",
							"path_SOURCES",
							"location_SOURCES",
							"vector_SOURCES",
							"gpio_SOURCES",
							"syscallerror_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"archive_SOURCES",
							"utils_SOURCES",
							"buffer_utils_SOURCES",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"QJSM_EXTRA_SOURCES",
							"vector_SOURCES",
							"buffer_utils_SOURCES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSM",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QJSM_LIBDIR",
							"LIBRARY_PREFIX",
							"QJSM_MODULE",
							"LIBRARY_SUFFIX",
							"QUICKJS_MODULES",
							"QJSM_LIBDIR",
							"predicate_LIBRARIES",
							"LIBM",
							"sockets_LIBRARIES",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_LIBRARIES",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM",
							"TEST_SOURCE",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIBLEXER",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"LIB_MODULE",
							"LIB_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULES_DIR",
							"QJSC",
							"MODULES_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSC_DEPS",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"MODULES_DIR",
							"QJSM_EXTRA_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJSM_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TRANSPORT_PLATFORM",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"QJS_MODULES_STATIC",
							"COMPILED_MODULES",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY",
							"QJSM_LDADD",
							"LIBPTHREAD",
							"LIBM",
							"LIBDL",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"INSTALL_SCRIPTS",
							"CMAKE_COMMAND",
							"CMAKE_INSTALL_PREFIX"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AwAAICBpc2F0dHkKSU5TUEVDVF9JTlQzMlRfSU5SQU5HRQpJTlNQRUNUX0xFVkVMCklOU1BFQ1RfSVNfQ09NUEFDVAogIHByb3Bfa2V5X3QKICBpbnNwZWN0X29wdGlvbnNfdAogIGpzX2luc3BlY3RfcHJpbnRfdmFsdWUKICByZWdleHBfcHJlZGljYXRlCiAgaW5zcGVjdF9zY3JlZW5fd2lkdGgKICBpbnNwZWN0X29wdGlvbnNfaW5pdAogIGluc3BlY3Rfb3B0aW9uc19mcmVlCiAgaW5zcGVjdF9vcHRpb25zX2dldAogIGluc3BlY3Rfb3B0aW9uc19vYmplY3QKICBpbnNwZWN0X29wdGlvbnNfaGlkZGVuCiAgaW5zcGVjdF9uZXdsaW5lCiAganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMKICBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUKICBqc19pbnNwZWN0X2N1c3RvbV9hdG9tCiAganNfaW5zcGVjdF9jdXN0b21fY2FsbAogIGpzX2luc3BlY3RfcHJpbnRfZGF0ZQogIGpzX2luc3BlY3RfcHJpbnRfbWFwCiAganNfaW5zcGVjdF9wcmludF9zZXQKICBqc19pbnNwZWN0X3ByaW50X2FycmF5YnVmZmVyCiAganNfaW5zcGVjdF9wcmludF9yZWdleHAKICBqc19pbnNwZWN0X3ByaW50X251bWJlcgogIGpzX2luc3BlY3RfcHJpbnRfc3RyaW5nCiAganNfaW5zcGVjdF9wcmludF9hdG9tCiAganNfaW5zcGVjdF9wcmludF9tb2R1bGUKICBqc19pbnNwZWN0X3ByaW50X2Vycm9yCiAganNfaW5zcGVjdF9wcmludF9vYmplY3QKICBqc19pbnNwZWN0X3ByaW50X3ZhbHVlCiAganNfaW5zcGVjdAogIGpzX2luc3BlY3RfdG9zdHJpbmcKICBqc19pbnNwZWN0X2F0b20KICBqc19kZWJ1Z2dlcl9idWlsZF9iYWNrdHJhY2UKICBqc19pbnNwZWN0X3N0YWNrdHJhY2VfdmFsdWUKICBqc19pbnNwZWN0X3N0YWNrdHJhY2UKICBqc19pbnNwZWN0X2luaXQKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAJcTAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 34945,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1459,
					1,
					"cut",
					null,
					"AQAAAHlEAAAAAAAAeUQAAAAAAAAGAAAAaSA9IC0x",
					"AQAAAAAAAAABAAAAeUQAAAAAAAB/RAAAAAAAAAAAAAAAAPC/"
				],
				[
					1462,
					1,
					"paste",
					null,
					"AQAAAGlEAAAAAAAAb0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaUQAAAAAAABpRAAAAAAAAAAAAAAAAPC/"
				],
				[
					1463,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAG9EAAAAAAAAcEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb0QAAAAAAABvRAAAAAAAAAAAAAAAAPC/"
				],
				[
					1464,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHBEAAAAAAAAcUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcEQAAAAAAABwRAAAAAAAAAAAAAAAAPC/"
				],
				[
					1468,
					1,
					"left_delete",
					null,
					"AQAAAHtEAAAAAAAAe0QAAAAAAAAIAAAAICBsZXQgOwo",
					"AQAAAAAAAAABAAAAe0QAAAAAAACDRAAAAAAAAAAAAAAAAAAA"
				],
				[
					1514,
					1,
					"paste",
					null,
					"AgAAAAhGAAAAAAAAGEYAAAAAAAAAAAAAGEYAAAAAAAAYRgAAAAAAAAkAAAByZXQucHVzaCg",
					"AQAAAAAAAAABAAAACEYAAAAAAAARRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1522,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA00UAAAAAAADTRQAAAAAAAAAAAAAAAPC/"
				],
				[
					1545,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA10UAAAAAAAAwRgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 20509,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					32,
					1,
					"cut",
					null,
					"AQAAACsuAAAAAAAAKy4AAAAAAAAUAAAAbGlidXRmL3NyYy9saWJ1dGYuYyA",
					"AQAAAAAAAAABAAAAKy4AAAAAAAA/LgAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"paste",
					null,
					"AQAAACsuAAAAAAAAPy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKy4AAAAAAAArLgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKghAAAAAAAAqSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqCEAAAAAAACoIQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"paste",
					null,
					"AQAAAKkhAAAAAAAAvSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqSEAAAAAAACpIQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"left_delete",
					null,
					"AQAAALwhAAAAAAAAvCEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAvSEAAAAAAAC9IQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"left_delete",
					null,
					"AQAAALshAAAAAAAAuyEAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAvCEAAAAAAAC8IQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAALshAAAAAAAAvCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuyEAAAAAAAC7IQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALwhAAAAAAAAvSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvCEAAAAAAAC8IQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"paste",
					null,
					"AQAAAL0hAAAAAAAA0SEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvSEAAAAAAAC9IQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					2,
					"left_delete",
					null,
					"AgAAANAhAAAAAAAA0CEAAAAAAAABAAAAIM8hAAAAAAAAzyEAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAA0SEAAAAAAADRIQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAAM8hAAAAAAAA0CEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzyEAAAAAAADPIQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"paste",
					null,
					"AgAAAKkhAAAAAAAAwCEAAAAAAAAAAAAAwCEAAAAAAADAIQAAAAAAABMAAABsaWJ1dGYvc3JjL2xpYnV0Zi5j",
					"AQAAAAAAAAABAAAAqSEAAAAAAAC8IQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"cut",
					null,
					"AQAAAGwhAAAAAAAAbCEAAAAAAABqAAAAc2V0KGNoYXJfdXRpbHNfU09VUkNFUyBzcmMvY2hhci11dGlscy5jIGluY2x1ZGUvY2hhci11dGlscy5oIGxpYnV0Zi9pbmNsdWRlL2xpYnV0Zi5oIGxpYnV0Zi9zcmMvbGlidXRmLmgpCg",
					"AQAAAAAAAAABAAAAbCEAAAAAAADWIQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					2,
					"paste",
					null,
					"AgAAAGwhAAAAAAAA1iEAAAAAAAAAAAAA1iEAAAAAAABAIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbCEAAAAAAABsIQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					2,
					"left_delete",
					null,
					"AgAAAHEhAAAAAAAAcSEAAAAAAAAJAAAAaGFyX3V0aWxzcCEAAAAAAABwIQAAAAAAAAEAAABj",
					"AQAAAAAAAAABAAAAcSEAAAAAAAB6IQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "kbi"
					},
					"AwAAAHAhAAAAAAAAcSEAAAAAAAAAAAAAcSEAAAAAAAByIQAAAAAAAAAAAAByIQAAAAAAAHMhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcCEAAAAAAABwIQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					3,
					"left_delete",
					null,
					"AwAAAHIhAAAAAAAAciEAAAAAAAABAAAAaXEhAAAAAAAAcSEAAAAAAAABAAAAYnAhAAAAAAAAcCEAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAcyEAAAAAAABzIQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "libutf"
					},
					"BgAAAHAhAAAAAAAAcSEAAAAAAAAAAAAAcSEAAAAAAAByIQAAAAAAAAAAAAByIQAAAAAAAHMhAAAAAAAAAAAAAHMhAAAAAAAAdCEAAAAAAAAAAAAAdCEAAAAAAAB1IQAAAAAAAAAAAAB1IQAAAAAAAHYhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcCEAAAAAAABwIQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAH8hAAAAAAAAgCEAAAAAAAAAAAAAgCEAAAAAAACAIQAAAAAAACYAAABzcmMvY2hhci11dGlscy5jIGluY2x1ZGUvY2hhci11dGlscy5oIA",
					"AQAAAAAAAAABAAAAfyEAAAAAAAClIQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "${"
					},
					"AgAAAOohAAAAAAAA6yEAAAAAAAAAAAAA6yEAAAAAAADsIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6iEAAAAAAADqIQAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"paste",
					null,
					"AQAAAOwhAAAAAAAA+iEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7CEAAAAAAADsIQAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "})"
					},
					"AgAAAPohAAAAAAAA+yEAAAAAAAAAAAAA+yEAAAAAAAD8IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+iEAAAAAAAD6IQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"cut",
					null,
					"AQAAAPwhAAAAAAAA/CEAAAAAAAAsAAAAbGlidXRmL2luY2x1ZGUvbGlidXRmLmggbGlidXRmL3NyYy9saWJ1dGYuaCk",
					"AQAAAAAAAAABAAAA/CEAAAAAAAAoIgAAAAAAAP///////+9/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAAKohAAAAAAAAqyEAAAAAAAAAAAAAqyEAAAAAAACrIQAAAAAAAAEAAABo",
					"AQAAAAAAAAABAAAAqiEAAAAAAACrIQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAqyEAAAAAAACrIQAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " 3"
					},
					"AgAAAN9FAAAAAAAA4EUAAAAAAAAAAAAA4EUAAAAAAADhRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA30UAAAAAAADfRQAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					2,
					"left_delete",
					null,
					"AgAAAOBFAAAAAAAA4EUAAAAAAAABAAAAM99FAAAAAAAA30UAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA4UUAAAAAAADhRQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAN9FAAAAAAAA4EUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA30UAAAAAAADfRQAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA4EUAAAAAAADgRQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/utils.c",
			"settings":
			{
				"buffer_size": 83948,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs-inspect.c",
			"settings":
			{
				"buffer_size": 40658,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					101,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BAAAAF9sAAAAAAAAYGwAAAAAAAAAAAAAYGwAAAAAAABhbAAAAAAAAAAAAABhbAAAAAAAAGJsAAAAAAAAAAAAAGJsAAAAAAAAY2wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAX2wAAAAAAABfbAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGNsAAAAAAAAZWwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAY2wAAAAAAABjbAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "js_Is_po"
					},
					"CAAAAGRsAAAAAAAAZWwAAAAAAAAAAAAAZWwAAAAAAABmbAAAAAAAAAAAAABmbAAAAAAAAGdsAAAAAAAAAAAAAGdsAAAAAAAAaGwAAAAAAAAAAAAAaGwAAAAAAABpbAAAAAAAAAAAAABpbAAAAAAAAGpsAAAAAAAAAAAAAGpsAAAAAAAAa2wAAAAAAAAAAAAAa2wAAAAAAABsbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZGwAAAAAAABkbAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					5,
					"left_delete",
					null,
					"BQAAAGtsAAAAAAAAa2wAAAAAAAABAAAAb2psAAAAAAAAamwAAAAAAAABAAAAcGlsAAAAAAAAaWwAAAAAAAABAAAAX2hsAAAAAAAAaGwAAAAAAAABAAAAc2dsAAAAAAAAZ2wAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAbGwAAAAAAABsbAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "is_promise"
					},
					"CgAAAGdsAAAAAAAAaGwAAAAAAAAAAAAAaGwAAAAAAABpbAAAAAAAAAAAAABpbAAAAAAAAGpsAAAAAAAAAAAAAGpsAAAAAAAAa2wAAAAAAAAAAAAAa2wAAAAAAABsbAAAAAAAAAAAAABsbAAAAAAAAG1sAAAAAAAAAAAAAG1sAAAAAAAAbmwAAAAAAAAAAAAAbmwAAAAAAABvbAAAAAAAAAAAAABvbAAAAAAAAHBsAAAAAAAAAAAAAHBsAAAAAAAAcWwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZ2wAAAAAAABnbAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHFsAAAAAAAAc2wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcWwAAAAAAABxbAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAHJsAAAAAAAAc2wAAAAAAAAAAAAAc2wAAAAAAAB0bAAAAAAAAAAAAAB0bAAAAAAAAHVsAAAAAAAAAAAAAHVsAAAAAAAAdmwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcmwAAAAAAABybAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAAHZsAAAAAAAAd2wAAAAAAAAAAAAAd2wAAAAAAAB4bAAAAAAAAAAAAAB4bAAAAAAAAHlsAAAAAAAAAAAAAHlsAAAAAAAAemwAAAAAAAAAAAAAemwAAAAAAAB7bAAAAAAAAAAAAAB7bAAAAAAAAHxsAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdmwAAAAAAAB2bAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH5sAAAAAAAAf2wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfmwAAAAAAAB+bAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAH9sAAAAAAAAgWwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAf2wAAAAAAAB/bAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAIBsAAAAAAAAgWwAAAAAAAAAAAAAgWwAAAAAAACCbAAAAAAAAAAAAACBbAAAAAAAAINsAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgGwAAAAAAACAbAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "eöse"
					},
					"BQAAAIVsAAAAAAAAhmwAAAAAAAAAAAAAgWwAAAAAAACBbAAAAAAAAAIAAAAgIIRsAAAAAAAAhWwAAAAAAAAAAAAAhWwAAAAAAACGbAAAAAAAAAAAAACGbAAAAAAAAIdsAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhWwAAAAAAACFbAAAAAAAAAAAAAAAADJA"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIdsAAAAAAAAiGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh2wAAAAAAACHbAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					4,
					"left_delete",
					null,
					"BAAAAIdsAAAAAAAAh2wAAAAAAAABAAAAIIZsAAAAAAAAhmwAAAAAAAABAAAAZYVsAAAAAAAAhWwAAAAAAAABAAAAc4RsAAAAAAAAhGwAAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAAiGwAAAAAAACIbAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "lse"
					},
					"AwAAAIRsAAAAAAAAhWwAAAAAAAAAAAAAhWwAAAAAAACGbAAAAAAAAAAAAACGbAAAAAAAAIdsAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhGwAAAAAAACEbAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIdsAAAAAAAAiGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh2wAAAAAAACHbAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"paste",
					null,
					"AQAAAIFsAAAAAAAAwWwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgWwAAAAAAACBbAAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					4,
					"left_delete",
					null,
					"BAAAALJsAAAAAAAAsmwAAAAAAAABAAAARbFsAAAAAAAAsWwAAAAAAAABAAAATrBsAAAAAAAAsGwAAAAAAAABAAAAT69sAAAAAAAAr2wAAAAAAAABAAAATg",
					"AQAAAAAAAAABAAAAs2wAAAAAAACzbAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "LIGHTREG"
					},
					"CAAAAK9sAAAAAAAAsGwAAAAAAAAAAAAAsGwAAAAAAACxbAAAAAAAAAAAAACxbAAAAAAAALJsAAAAAAAAAAAAALJsAAAAAAAAs2wAAAAAAAAAAAAAs2wAAAAAAAC0bAAAAAAAAAAAAAC0bAAAAAAAALVsAAAAAAAAAAAAALVsAAAAAAAAtmwAAAAAAAAAAAAAtmwAAAAAAAC3bAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAr2wAAAAAAACvbAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"left_delete",
					null,
					"AQAAALZsAAAAAAAAtmwAAAAAAAABAAAARw",
					"AQAAAAAAAAABAAAAt2wAAAAAAAC3bAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAALZsAAAAAAAAt2wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtmwAAAAAAAC2bAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "Promise"
					},
					"BwAAALlsAAAAAAAAumwAAAAAAAAAAAAAumwAAAAAAAC7bAAAAAAAAAAAAAC7bAAAAAAAALxsAAAAAAAAAAAAALxsAAAAAAAAvWwAAAAAAAAAAAAAvWwAAAAAAAC+bAAAAAAAAAAAAAC+bAAAAAAAAL9sAAAAAAAAAAAAAL9sAAAAAAAAwGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuWwAAAAAAAC5bAAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "COLOR_NONE"
					},
					"CgAAAMJsAAAAAAAAw2wAAAAAAAAAAAAAw2wAAAAAAADEbAAAAAAAAAAAAADEbAAAAAAAAMVsAAAAAAAAAAAAAMVsAAAAAAAAxmwAAAAAAAAAAAAAxmwAAAAAAADHbAAAAAAAAAAAAADHbAAAAAAAAMhsAAAAAAAAAAAAAMhsAAAAAAAAyWwAAAAAAAAAAAAAyWwAAAAAAADKbAAAAAAAAAAAAADKbAAAAAAAAMtsAAAAAAAAAAAAAMtsAAAAAAAAzGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwmwAAAAAAADCbAAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"right_delete",
					null,
					"AQAAANBsAAAAAAAA0GwAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAA0GwAAAAAAADQbAAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "Promise"
					},
					"BwAAANBsAAAAAAAA0WwAAAAAAAAAAAAA0WwAAAAAAADSbAAAAAAAAAAAAADSbAAAAAAAANNsAAAAAAAAAAAAANNsAAAAAAAA1GwAAAAAAAAAAAAA1GwAAAAAAADVbAAAAAAAAAAAAADVbAAAAAAAANZsAAAAAAAAAAAAANZsAAAAAAAA12wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0GwAAAAAAADQbAAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA3GwAAAAAAADcbAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/qjsm.c",
			"settings":
			{
				"buffer_size": 43968,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					484,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BAAAADhEAAAAAAAAOUQAAAAAAAAAAAAAOUQAAAAAAAA6RAAAAAAAAAAAAAA6RAAAAAAAADtEAAAAAAAAAAAAADtEAAAAAAAAPEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOEQAAAAAAAA4RAAAAAAAAAAAAAAAAPC/"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": "char*"
					},
					"BgAAAAhEAAAAAAAACUQAAAAAAAAAAAAACUQAAAAAAAAJRAAAAAAAAAEAAAAgCUQAAAAAAAAKRAAAAAAAAAAAAAAKRAAAAAAAAAtEAAAAAAAAAAAAAAtEAAAAAAAADEQAAAAAAAAAAAAADEQAAAAAAAANRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACEQAAAAAAAAJRAAAAAAAAAAAAAAAAPC/"
				],
				[
					510,
					1,
					"insert",
					{
						"characters": " file;"
					},
					"BgAAAA1EAAAAAAAADkQAAAAAAAAAAAAADkQAAAAAAAAPRAAAAAAAAAAAAAAPRAAAAAAAABBEAAAAAAAAAAAAABBEAAAAAAAAEUQAAAAAAAAAAAAAEUQAAAAAAAASRAAAAAAAAAAAAAASRAAAAAAAABNEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADUQAAAAAAAANRAAAAAAAAAAAAAAAAPC/"
				],
				[
					511,
					1,
					"left_delete",
					null,
					"AQAAABJEAAAAAAAAEkQAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAE0QAAAAAAAATRAAAAAAAAAAAAAAAAPC/"
				],
				[
					512,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAABJEAAAAAAAAE0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEkQAAAAAAAASRAAAAAAAAAAAAAAAAPC/"
				],
				[
					513,
					1,
					"left_delete",
					null,
					"AQAAABJEAAAAAAAAEkQAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAE0QAAAAAAAATRAAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABJEAAAAAAAAE0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEkQAAAAAAAASRAAAAAAAAAAAAAAAAPC/"
				],
				[
					515,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABNEAAAAAAAAFEQAAAAAAAAAAAAAFEQAAAAAAAAVRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAE0QAAAAAAAATRAAAAAAAAAAAAAAAAPC/"
				],
				[
					525,
					1,
					"insert",
					{
						"characters": "file="
					},
					"BgAAAM1EAAAAAAAAzkQAAAAAAAAAAAAAzkQAAAAAAADORAAAAAAAAAYAAAByZXR1cm7ORAAAAAAAAM9EAAAAAAAAAAAAAM9EAAAAAAAA0EQAAAAAAAAAAAAA0EQAAAAAAADRRAAAAAAAAAAAAADRRAAAAAAAANJEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzUQAAAAAAADTRAAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					1,
					"insert",
					{
						"characters": "eöls"
					},
					"BAAAAN9EAAAAAAAA4EQAAAAAAAAAAAAA4EQAAAAAAADhRAAAAAAAAAAAAADhRAAAAAAAAOJEAAAAAAAAAAAAAOJEAAAAAAAA40QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA30QAAAAAAADfRAAAAAAAAAAAAAAAgFtA"
				],
				[
					529,
					3,
					"left_delete",
					null,
					"AwAAAOJEAAAAAAAA4kQAAAAAAAABAAAAc+FEAAAAAAAA4UQAAAAAAAABAAAAbOBEAAAAAAAA4EQAAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAA40QAAAAAAADjRAAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": "lse"
					},
					"AwAAAOBEAAAAAAAA4UQAAAAAAAAAAAAA4UQAAAAAAADiRAAAAAAAAAAAAADiRAAAAAAAAONEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4EQAAAAAAADgRAAAAAAAAAAAAAAAAPC/"
				],
				[
					531,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAONEAAAAAAAA5EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA40QAAAAAAADjRAAAAAAAAAAAAAAAAPC/"
				],
				[
					532,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOREAAAAAAAA5kQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5EQAAAAAAADkRAAAAAAAAAAAAAAAAPC/"
				],
				[
					533,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAOVEAAAAAAAA5kQAAAAAAAAAAAAA5kQAAAAAAADoRAAAAAAAAAAAAADoRAAAAAAAAOlEAAAAAAAAAAAAAOlEAAAAAAAA60QAAAAAAAAAAAAA5kQAAAAAAADmRAAAAAAAAAIAAAAgIOZEAAAAAAAA6kQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5UQAAAAAAADlRAAAAAAAAAAAAAAAAPC/"
				],
				[
					534,
					1,
					"insert",
					{
						"characters": "file"
					},
					"BAAAAOpEAAAAAAAA60QAAAAAAAAAAAAA60QAAAAAAADsRAAAAAAAAAAAAADsRAAAAAAAAO1EAAAAAAAAAAAAAO1EAAAAAAAA7kQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6kQAAAAAAADqRAAAAAAAAAAAAAAAAPC/"
				],
				[
					535,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO5EAAAAAAAA70QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7kQAAAAAAADuRAAAAAAAAAAAAAAAAPC/"
				],
				[
					538,
					1,
					"cut",
					null,
					"AQAAAP1EAAAAAAAA/UQAAAAAAAAVAAAAanNfc3RyZHVwKGN0eCwgbmFtZSk7",
					"AQAAAAAAAAABAAAA/UQAAAAAAAASRQAAAAAAAP///////+9/"
				],
				[
					539,
					1,
					"insert",
					{
						"characters": "file;"
					},
					"BQAAAP1EAAAAAAAA/kQAAAAAAAAAAAAA/kQAAAAAAAD/RAAAAAAAAAAAAAD/RAAAAAAAAABFAAAAAAAAAAAAAABFAAAAAAAAAUUAAAAAAAAAAAAAAUUAAAAAAAACRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/UQAAAAAAAD9RAAAAAAAAAAAAAAAAPC/"
				],
				[
					541,
					1,
					"paste",
					null,
					"AQAAAO9EAAAAAAAABEUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA70QAAAAAAADvRAAAAAAAAAAAAAAAQGNA"
				],
				[
					545,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAO5EAAAAAAAA70QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7kQAAAAAAADuRAAAAAAAAAAAAAAAAFZA"
				],
				[
					548,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA70QAAAAAAADvRAAAAAAAAAAAAAAAAPC/"
				],
				[
					580,
					1,
					"left_delete",
					null,
					"AQAAAMlEAAAAAAAAyUQAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAykQAAAAAAADKRAAAAAAAAAAAAAAAAPC/"
				],
				[
					581,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMlEAAAAAAAAykQAAAAAAAAAAAAAykQAAAAAAADORAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyUQAAAAAAADJRAAAAAAAAAAAAAAAAPC/"
				],
				[
					582,
					3,
					"left_delete",
					null,
					"AwAAAMxEAAAAAAAAzEQAAAAAAAACAAAAICDKRAAAAAAAAMpEAAAAAAAAAgAAACAgyUQAAAAAAADJRAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAzkQAAAAAAADORAAAAAAAAAAAAAAAAPC/"
				],
				[
					583,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMlEAAAAAAAAykQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyUQAAAAAAADJRAAAAAAAAAAAAAAAAPC/"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": "\npath_collapse"
					},
					"DwAAAMpEAAAAAAAAy0QAAAAAAAAAAAAAy0QAAAAAAADPRAAAAAAAAAAAAADPRAAAAAAAANBEAAAAAAAAAAAAANBEAAAAAAAA0UQAAAAAAAAAAAAA0UQAAAAAAADSRAAAAAAAAAAAAADSRAAAAAAAANNEAAAAAAAAAAAAANNEAAAAAAAA1EQAAAAAAAAAAAAA1EQAAAAAAADVRAAAAAAAAAAAAADVRAAAAAAAANZEAAAAAAAAAAAAANZEAAAAAAAA10QAAAAAAAAAAAAA10QAAAAAAADYRAAAAAAAAAAAAADYRAAAAAAAANlEAAAAAAAAAAAAANlEAAAAAAAA2kQAAAAAAAAAAAAA2kQAAAAAAADbRAAAAAAAAAAAAADbRAAAAAAAANxEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAykQAAAAAAADKRAAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANxEAAAAAAAA3UQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3EQAAAAAAADcRAAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN1EAAAAAAAA30QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3UQAAAAAAADdRAAAAAAAAAAAAAAAAPC/"
				],
				[
					587,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAN1EAAAAAAAA3UQAAAAAAAABAAAAKN1EAAAAAAAA3UQAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA3kQAAAAAAADeRAAAAAAAAAAAAAAAAPC/"
				],
				[
					588,
					1,
					"left_delete",
					null,
					"AQAAANxEAAAAAAAA3EQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3UQAAAAAAADdRAAAAAAAAAAAAAAAAPC/"
				],
				[
					589,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANxEAAAAAAAA3kQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3EQAAAAAAADcRAAAAAAAAAAAAAAAAPC/"
				],
				[
					590,
					1,
					"insert",
					{
						"characters": "dirbuf"
					},
					"BgAAAN1EAAAAAAAA3kQAAAAAAAAAAAAA3kQAAAAAAADfRAAAAAAAAAAAAADfRAAAAAAAAOBEAAAAAAAAAAAAAOBEAAAAAAAA4UQAAAAAAAAAAAAA4UQAAAAAAADiRAAAAAAAAAAAAADiRAAAAAAAAONEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3UQAAAAAAADdRAAAAAAAAAAAAAAAAPC/"
				],
				[
					591,
					3,
					"left_delete",
					null,
					"AwAAAOJEAAAAAAAA4kQAAAAAAAABAAAAZuFEAAAAAAAA4UQAAAAAAAABAAAAdeBEAAAAAAAA4EQAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAA40QAAAAAAADjRAAAAAAAAAAAAAAAAPC/"
				],
				[
					592,
					1,
					"insert",
					{
						"characters": ".buf"
					},
					"BAAAAOBEAAAAAAAA4UQAAAAAAAAAAAAA4UQAAAAAAADiRAAAAAAAAAAAAADiRAAAAAAAAONEAAAAAAAAAAAAAONEAAAAAAAA5EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4EQAAAAAAADgRAAAAAAAAAAAAAAAAPC/"
				],
				[
					593,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOREAAAAAAAA5kQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5EQAAAAAAADkRAAAAAAAAAAAAAAAAPC/"
				],
				[
					595,
					1,
					"left_delete",
					null,
					"AQAAAOVEAAAAAAAA5UQAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA5kQAAAAAAADmRAAAAAAAAAAAAAAAAPC/"
				],
				[
					596,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOREAAAAAAAA5EQAAAAAAAABAAAAKOREAAAAAAAA5EQAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA5UQAAAAAAADlRAAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAOREAAAAAAAA5UQAAAAAAAAAAAAA5UQAAAAAAADmRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5EQAAAAAAADkRAAAAAAAAAAAAAAAAPC/"
				],
				[
					610,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOREAAAAAAAA5UQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5EQAAAAAAADkRAAAAAAAAAAAAAAAAPC/"
				],
				[
					611,
					1,
					"insert",
					{
						"characters": " dir.size"
					},
					"CQAAAOVEAAAAAAAA5kQAAAAAAAAAAAAA5kQAAAAAAADnRAAAAAAAAAAAAADnRAAAAAAAAOhEAAAAAAAAAAAAAOhEAAAAAAAA6UQAAAAAAAAAAAAA6UQAAAAAAADqRAAAAAAAAAAAAADqRAAAAAAAAOtEAAAAAAAAAAAAAOtEAAAAAAAA7EQAAAAAAAAAAAAA7EQAAAAAAADtRAAAAAAAAAAAAADtRAAAAAAAAO5EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5UQAAAAAAADlRAAAAAAAAAAAAAAAAPC/"
				],
				[
					650,
					1,
					"insert",
					{
						"characters": "\n\ni"
					},
					"BwAAAJA9AAAAAAAAkT0AAAAAAAAAAAAAkT0AAAAAAACTPQAAAAAAAAAAAACTPQAAAAAAAJU9AAAAAAAAAAAAAJU9AAAAAAAAlj0AAAAAAAAAAAAAlj0AAAAAAACaPQAAAAAAAAAAAACRPQAAAAAAAJE9AAAAAAAABAAAACAgICCWPQAAAAAAAJc9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkD0AAAAAAACQPQAAAAAAAAAAAAAAAPC/"
				],
				[
					651,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJc9AAAAAAAAmT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlz0AAAAAAACXPQAAAAAAAAAAAAAAAPC/"
				],
				[
					652,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAJc9AAAAAAAAlz0AAAAAAAABAAAAKJc9AAAAAAAAlz0AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAmD0AAAAAAACYPQAAAAAAAAAAAAAAAPC/"
				],
				[
					653,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAJc9AAAAAAAAmD0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlz0AAAAAAACXPQAAAAAAAAAAAAAAAPC/"
				],
				[
					654,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJg9AAAAAAAAmj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmD0AAAAAAACYPQAAAAAAAAAAAAAAAPC/"
				],
				[
					655,
					1,
					"insert",
					{
						"characters": "str_ends"
					},
					"CAAAAJk9AAAAAAAAmj0AAAAAAAAAAAAAmj0AAAAAAACbPQAAAAAAAAAAAACbPQAAAAAAAJw9AAAAAAAAAAAAAJw9AAAAAAAAnT0AAAAAAAAAAAAAnT0AAAAAAACePQAAAAAAAAAAAACePQAAAAAAAJ89AAAAAAAAAAAAAJ89AAAAAAAAoD0AAAAAAAAAAAAAoD0AAAAAAAChPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmT0AAAAAAACZPQAAAAAAAAAAAAAAAPC/"
				],
				[
					656,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKE9AAAAAAAAoz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoT0AAAAAAAChPQAAAAAAAAAAAAAAAPC/"
				],
				[
					657,
					1,
					"insert",
					{
						"characters": "s,"
					},
					"AgAAAKI9AAAAAAAAoz0AAAAAAAAAAAAAoz0AAAAAAACkPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoj0AAAAAAACiPQAAAAAAAAAAAAAAAPC/"
				],
				[
					658,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAKQ9AAAAAAAApj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApD0AAAAAAACkPQAAAAAAAAAAAAAAAPC/"
				],
				[
					659,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAKQ9AAAAAAAApD0AAAAAAAABAAAAIqQ9AAAAAAAApD0AAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAApT0AAAAAAAClPQAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQ9AAAAAAAApT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApD0AAAAAAACkPQAAAAAAAAAAAAAAAPC/"
				],
				[
					661,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAKU9AAAAAAAApz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApT0AAAAAAAClPQAAAAAAAAAAAAAAAPC/"
				],
				[
					662,
					1,
					"insert",
					{
						"characters": ".json"
					},
					"BQAAAKY9AAAAAAAApz0AAAAAAAAAAAAApz0AAAAAAACoPQAAAAAAAAAAAACoPQAAAAAAAKk9AAAAAAAAAAAAAKk9AAAAAAAAqj0AAAAAAAAAAAAAqj0AAAAAAACrPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApj0AAAAAAACmPQAAAAAAAAAAAAAAAPC/"
				],
				[
					664,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK49AAAAAAAArz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArj0AAAAAAACuPQAAAAAAAAAAAAAAAPC/"
				],
				[
					665,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAK89AAAAAAAAsT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArz0AAAAAAACvPQAAAAAAAAAAAAAAAPC/"
				],
				[
					666,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAALA9AAAAAAAAsT0AAAAAAAAAAAAAsT0AAAAAAAC1PQAAAAAAAAAAAAC1PQAAAAAAALY9AAAAAAAAAAAAALY9AAAAAAAAuj0AAAAAAAAAAAAAsT0AAAAAAACxPQAAAAAAAAQAAAAgICAgsT0AAAAAAAC3PQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsD0AAAAAAACwPQAAAAAAAAAAAAAAAPC/"
				],
				[
					668,
					1,
					"insert",
					{
						"characters": " eölse"
					},
					"BwAAAL09AAAAAAAAvj0AAAAAAAAAAAAAsT0AAAAAAACxPQAAAAAAAAYAAAAgICAgICC4PQAAAAAAALk9AAAAAAAAAAAAALk9AAAAAAAAuj0AAAAAAAAAAAAAuj0AAAAAAAC7PQAAAAAAAAAAAAC7PQAAAAAAALw9AAAAAAAAAAAAALw9AAAAAAAAvT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvT0AAAAAAAC9PQAAAAAAAAAAAAAAgFBA"
				],
				[
					669,
					4,
					"left_delete",
					null,
					"BAAAALw9AAAAAAAAvD0AAAAAAAABAAAAZbs9AAAAAAAAuz0AAAAAAAABAAAAc7o9AAAAAAAAuj0AAAAAAAABAAAAbLk9AAAAAAAAuT0AAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAAvT0AAAAAAAC9PQAAAAAAAAAAAAAAAPC/"
				],
				[
					670,
					1,
					"insert",
					{
						"characters": "lse"
					},
					"AwAAALk9AAAAAAAAuj0AAAAAAAAAAAAAuj0AAAAAAAC7PQAAAAAAAAAAAAC7PQAAAAAAALw9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuT0AAAAAAAC5PQAAAAAAAAAAAAAAAPC/"
				],
				[
					671,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALw9AAAAAAAAvT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvD0AAAAAAAC8PQAAAAAAAAAAAAAAAPC/"
				],
				[
					672,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAL09AAAAAAAAvz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvT0AAAAAAAC9PQAAAAAAAAAAAAAAAPC/"
				],
				[
					673,
					1,
					"right_delete",
					null,
					"AQAAAL49AAAAAAAAvj0AAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAvj0AAAAAAAC+PQAAAAAAAAAAAAAAAPC/"
				],
				[
					674,
					1,
					"left_delete",
					null,
					"AQAAAL09AAAAAAAAvT0AAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAvj0AAAAAAAC+PQAAAAAAAAAAAAAAAPC/"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL09AAAAAAAAvj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvT0AAAAAAAC9PQAAAAAAAAAAAAAAAPC/"
				],
				[
					676,
					1,
					"left_delete",
					null,
					"AQAAAL09AAAAAAAAvT0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAvj0AAAAAAAC+PQAAAAAAAAAAAAAAAPC/"
				],
				[
					677,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAL09AAAAAAAAvz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvT0AAAAAAAC9PQAAAAAAAAAAAAAAAPC/"
				],
				[
					678,
					1,
					"right_delete",
					null,
					"AQAAAL49AAAAAAAAvj0AAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAvj0AAAAAAAC+PQAAAAAAAAAAAAAAAPC/"
				],
				[
					681,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAOg9AAAAAAAA6T0AAAAAAAAAAAAA6T0AAAAAAADtPQAAAAAAAAAAAADtPQAAAAAAAO49AAAAAAAAAAAAAOk9AAAAAAAA6T0AAAAAAAAEAAAAICAgIOk9AAAAAAAA6z0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6D0AAAAAAADoPQAAAAAAAP///////+9/"
				],
				[
					706,
					1,
					"cut",
					null,
					"AQAAAKgaAAAAAAAAqBoAAAAAAAD/AAAACnN0YXRpYyBKU1ZhbHVlCmpzbV9sb2FkX2pzb24oSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIGZpbGUpIHsKICB1aW50OF90KiBidWY7CiAgc2l6ZV90IGxlbjsKICBpZighKGJ1ZiA9IGpzX2xvYWRfZmlsZShjdHgsICZsZW4sIGZpbGUpKSkKICAgIHJldHVybiBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiTG9hZGluZyAnJXMnIGZhaWxlZCIsIGZpbGUpOwogIHJldHVybiBKU19QYXJzZUpTT04oY3R4LCBidWYsIGxlbiwgZmlsZSk7Cn0K",
					"AQAAAAAAAAABAAAAqBoAAAAAAACnGwAAAAAAAAAAAAAAAPC/"
				],
				[
					707,
					1,
					"paste",
					null,
					"AQAAAKgaAAAAAAAApxsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqBoAAAAAAACoGgAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALE9AAAAAAAAsj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsT0AAAAAAACxPQAAAAAAAAAAAAAAAPC/"
				],
				[
					720,
					1,
					"left_delete",
					null,
					"AQAAALE9AAAAAAAAsT0AAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAsj0AAAAAAACyPQAAAAAAAAAAAAAAAPC/"
				],
				[
					721,
					1,
					"insert",
					{
						"characters": "m="
					},
					"AgAAALE9AAAAAAAAsj0AAAAAAAAAAAAAsj0AAAAAAACzPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsT0AAAAAAACxPQAAAAAAAAAAAAAAAPC/"
				],
				[
					722,
					1,
					"paste",
					null,
					"AQAAALM9AAAAAAAAwj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsz0AAAAAAACzPQAAAAAAAAAAAAAAAPC/"
				],
				[
					723,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMI9AAAAAAAAxD0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwj0AAAAAAADCPQAAAAAAAAAAAAAAAPC/"
				],
				[
					724,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAMM9AAAAAAAAxD0AAAAAAAAAAAAAxD0AAAAAAADFPQAAAAAAAAAAAADFPQAAAAAAAMY9AAAAAAAAAAAAAMY9AAAAAAAAxz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwz0AAAAAAADDPQAAAAAAAAAAAAAAAPC/"
				],
				[
					725,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAMc9AAAAAAAAyD0AAAAAAAAAAAAAyD0AAAAAAADJPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxz0AAAAAAADHPQAAAAAAAAAAAAAAAPC/"
				],
				[
					727,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMo9AAAAAAAAyz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyj0AAAAAAADKPQAAAAAAAAAAAAAAAPC/"
				],
				[
					732,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAyz0AAAAAAADLPQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "resolve-imports.js",
			"settings":
			{
				"buffer_size": 42354,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					70,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAMszAAAAAAAAzDMAAAAAAAAAAAAAzDMAAAAAAADMMwAAAAAAAAEAAAAy",
					"AQAAAAAAAAABAAAAyzMAAAAAAADMMwAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAMU5AAAAAAAAxjkAAAAAAAAAAAAAxjkAAAAAAADGOQAAAAAAAAEAAAAy",
					"AQAAAAAAAAABAAAAxTkAAAAAAADGOQAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": ")="
					},
					"AgAAAJiXAAAAAAAAmZcAAAAAAAAAAAAAmZcAAAAAAACalwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmJcAAAAAAACYlwAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					2,
					"left_delete",
					null,
					"AgAAAJmXAAAAAAAAmZcAAAAAAAABAAAAPZiXAAAAAAAAmJcAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAmpcAAAAAAACalwAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAJiXAAAAAAAAmZcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmJcAAAAAAACYlwAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"paste",
					null,
					"AQAAAD2gAAAAAAAAbKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPaAAAAAAAAA9oAAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAEygAAAAAAAATaAAAAAAAAAAAAAATaAAAAAAAABNoAAAAAAAAAEAAAAy",
					"AQAAAAAAAAABAAAATKAAAAAAAABNoAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAEygAAAAAAAATaAAAAAAAAAAAAAATaAAAAAAAABNoAAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAATKAAAAAAAABNoAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "out"
					},
					"BAAAAFygAAAAAAAAXaAAAAAAAAAAAAAAXaAAAAAAAABdoAAAAAAAAAUAAABsaW5lc12gAAAAAAAAXqAAAAAAAAAAAAAAXqAAAAAAAABfoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXKAAAAAAAABhoAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"paste",
					null,
					"AgAAAGKgAAAAAAAAZaAAAAAAAAAAAAAAZaAAAAAAAABloAAAAAAAAAUAAABsaW5lcw",
					"AQAAAAAAAAABAAAAYqAAAAAAAABnoAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGWgAAAAAAAAZqAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZaAAAAAAAABloAAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "  out.file"
					},
					"CgAAAGagAAAAAAAAZ6AAAAAAAAAAAAAAZ6AAAAAAAABooAAAAAAAAAAAAABooAAAAAAAAGmgAAAAAAAAAAAAAGmgAAAAAAAAaqAAAAAAAAAAAAAAaqAAAAAAAABroAAAAAAAAAAAAABroAAAAAAAAGygAAAAAAAAAAAAAGygAAAAAAAAbaAAAAAAAAAAAAAAbaAAAAAAAABuoAAAAAAAAAAAAABuoAAAAAAAAG+gAAAAAAAAAAAAAG+gAAAAAAAAcKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZqAAAAAAAABmoAAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAMszAAAAAAAAzDMAAAAAAAAAAAAAzDMAAAAAAADMMwAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAAyzMAAAAAAADMMwAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAMU5AAAAAAAAxjkAAAAAAAAAAAAAxjkAAAAAAADGOQAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAAxTkAAAAAAADGOQAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					6,
					"join_lines",
					null,
					"EQAAAPQ5AAAAAAAA9DkAAAAAAAABAAAACvQ5AAAAAAAA9DkAAAAAAAAIAAAAICAgICAgICD7OQAAAAAAAPs5AAAAAAAAAQAAAAr7OQAAAAAAAPs5AAAAAAAACAAAACAgICAgICAg+zkAAAAAAAD8OQAAAAAAAAAAAAABOgAAAAAAAAE6AAAAAAAAAQAAAAoBOgAAAAAAAAE6AAAAAAAACAAAACAgICAgICAgAToAAAAAAAACOgAAAAAAAAAAAAAHOgAAAAAAAAc6AAAAAAAAAQAAAAoHOgAAAAAAAAc6AAAAAAAACAAAACAgICAgICAgBzoAAAAAAAAIOgAAAAAAAAAAAAAMOgAAAAAAAAw6AAAAAAAAAQAAAAoMOgAAAAAAAAw6AAAAAAAACAAAACAgICAgICAgDDoAAAAAAAANOgAAAAAAAAAAAAASOgAAAAAAABI6AAAAAAAAAQAAAAoSOgAAAAAAABI6AAAAAAAABgAAACAgICAgIBI6AAAAAAAAEzoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1TkAAAAAAADVOQAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"paste",
					null,
					"AgAAAPsQAAAAAAAAAxEAAAAAAAAAAAAAAxEAAAAAAAADEQAAAAAAAAgAAABGZFdyaXRlcg",
					"AQAAAAAAAAABAAAA+xAAAAAAAAADEQAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"insert",
					{
						"characters": "foö"
					},
					"BAAAACwSAAAAAAAALRIAAAAAAAAAAAAALRIAAAAAAAAtEgAAAAAAAAQAAABuYW1lLRIAAAAAAAAuEgAAAAAAAAAAAAAuEgAAAAAAAC8SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBIAAAAAAAAwEgAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					2,
					"left_delete",
					null,
					"AgAAAC4SAAAAAAAALhIAAAAAAAACAAAAw7YtEgAAAAAAAC0SAAAAAAAAAQAAAG8",
					"AQAAAAAAAAABAAAALxIAAAAAAAAvEgAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": "ile"
					},
					"AwAAAC0SAAAAAAAALhIAAAAAAAAAAAAALhIAAAAAAAAvEgAAAAAAAAAAAAAvEgAAAAAAADASAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRIAAAAAAAAtEgAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "file"
					},
					"BQAAAE8RAAAAAAAAUBEAAAAAAAAAAAAAUBEAAAAAAABQEQAAAAAAAAQAAABuYW1lUBEAAAAAAABREQAAAAAAAAAAAABREQAAAAAAAFIRAAAAAAAAAAAAAFIRAAAAAAAAUxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATxEAAAAAAABTEQAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": "consoole"
					},
					"CQAAAAEcAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACHAAAAAAAAAcAAABsb2dGaWxlAhwAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAQcAAAAAAAAAAAAAAQcAAAAAAAABRwAAAAAAAAAAAAABRwAAAAAAAAGHAAAAAAAAAAAAAAGHAAAAAAAAAccAAAAAAAAAAAAAAccAAAAAAAACBwAAAAAAAAAAAAACBwAAAAAAAAJHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARwAAAAAAAAIHAAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					3,
					"left_delete",
					null,
					"AwAAAAgcAAAAAAAACBwAAAAAAAABAAAAZQccAAAAAAAABxwAAAAAAAABAAAAbAYcAAAAAAAABhwAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAACRwAAAAAAAAJHAAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": "le.log"
					},
					"BgAAAAYcAAAAAAAABxwAAAAAAAAAAAAABxwAAAAAAAAIHAAAAAAAAAAAAAAIHAAAAAAAAAkcAAAAAAAAAAAAAAkcAAAAAAAAChwAAAAAAAAAAAAAChwAAAAAAAALHAAAAAAAAAAAAAALHAAAAAAAAAwcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhwAAAAAAAAGHAAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"insert",
					{
						"characters": "std.puts"
					},
					"CQAAAAAcAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABHAAAAAAAAAwAAAAgY29uc29sZS5sb2cBHAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAAEHAAAAAAAAAAAAAAEHAAAAAAAAAUcAAAAAAAAAAAAAAUcAAAAAAAABhwAAAAAAAAAAAAABhwAAAAAAAAHHAAAAAAAAAAAAAAHHAAAAAAAAAgcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBwAAAAAAAAAHAAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "err."
					},
					"BAAAAAQcAAAAAAAABRwAAAAAAAAAAAAABRwAAAAAAAAGHAAAAAAAAAAAAAAGHAAAAAAAAAccAAAAAAAAAAAAAAccAAAAAAAACBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBwAAAAAAAAEHAAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPpAAAIyEvdXNyL2Jpbi9lbnYgcWpzbQppbXBvcnQgKiBhcyBvcyBmcm9tICdvcyc7CmltcG9ydCAqIGFzIHN0ZCBmcm9tICdzdGQnOwppbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7CmltcG9ydCBpbnNwZWN0IGZyb20gJ2luc3BlY3QnOwppbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnOwppbXBvcnQgeyBMZXhlciwgVG9rZW4gfSBmcm9tICdsZXhlcic7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IEVDTUFTY3JpcHRMZXhlciBmcm9tICdsaWIvbGV4ZXIvZWNtYXNjcmlwdC5qcyc7CmltcG9ydCB7IGdldHNldCwgbWVtb2l6ZSwgcmFuZEludCwgZ2V0VHlwZU5hbWUsIGdldFR5cGVTdHIsIGlzT2JqZWN0LCBzaG9ydGVuLCB0b1N0cmluZywgdG9BcnJheUJ1ZmZlciwgZGVmaW5lLCBjdXJyeSwgdW5pcXVlLCBzcGxpdCwgZXh0ZW5kQXJyYXksIGNhbWVsaXplLCB0eXBlcywgZ2V0T3B0LCBxdW90ZSwgZXNjYXBlIH0gZnJvbSAndXRpbCc7CgooJ3VzZSBzdHJpY3QnKTsKKCd1c2UgbWF0aCcpOwoKY2xhc3MgQXJndW1lbnRFcnJvciBleHRlbmRzIEVycm9yIHsKICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7CiAgICBzdXBlciguLi5hcmdzKTsKICAgIHRoaXMuc3RhY2sgPSBudWxsOwogIH0KfQoKbGV0IGJ1ZmZlcnMgPSB7fSwKICBtb2R1bGVzID0ge30sCiAgc2hvd1RpbWluZywKICByZW1vdmVFeHBvcnRzID0gZmFsc2UsCiAgZ2xvYmFsRXhwb3J0cyA9IDAsCiAgc2hvd0RlcHMgPSAwLAogIHJlbW92ZUltcG9ydHMgPSBmYWxzZSwKICByZW1vdmVDb21tZW50cyA9IGZhbHNlLAogIHJlYWRQYWNrYWdlID0gZmFsc2UsCiAgcmVsYXRpdmVUbywKICBvdXRwdXRGaWxlLAogIHJlY3Vyc2l2ZSA9IHRydWUsCiAgZGVidWcgPSAwLAogIGhlYWRlciA9IFtdLAogIGZvb3RlciA9IFtdLAogIHByb2Nlc3NlZCA9IG5ldyBTZXQoKSwKICBidWZmZXJSZWYgPSBuZXcgV2Vha01hcCgpLAogIGZpbGVCdWZmZXJzID0gbmV3IE1hcCgpLAogIGZpbGVNYXBzID0gbmV3IE1hcCgpLAogIGRlcGVuZGVuY3lNYXAgPSBuZXcgTWFwKCksCiAgcHJpbnRGaWxlcywKICBsb2dGaWxlID0gKCkgPT4ge307CgpsZXQgZGVwZW5kZW5jeVRyZWUgPSBtZW1vaXplKGFyZyA9PiBbXSwgZGVwZW5kZW5jeU1hcCk7CmxldCBidWZmZXJNYXAgPSBnZXRzZXQoYnVmZmVyUmVmKTsKCmZ1bmN0aW9uIFJlYWRKU09OKGZpbGVuYW1lKSB7CiAgbGV0IGRhdGEgPSBmcy5yZWFkRmlsZVN5bmMoZmlsZW5hbWUsICd1dGYtOCcpOwogIHJldHVybiBkYXRhID8gSlNPTi5wYXJzZShkYXRhKSA6IG51bGw7Cn0KY29uc3QgUmVhZFBhY2thZ2VKU09OID0gbWVtb2l6ZSgoKSA9PiBSZWFkSlNPTigncGFja2FnZS5qc29uJykgPz8geyBfbW9kdWxlQWxpYXNlczoge30gfSk7CgpmdW5jdGlvbiBSZXNvbHZlQWxpYXMoZmlsZW5hbWUpIHsKICBsZXQgeyBfbW9kdWxlQWxpYXNlcyB9ID0gUmVhZFBhY2thZ2VKU09OKCk7CgogIGlmKGZpbGVuYW1lIGluIF9tb2R1bGVBbGlhc2VzKSByZXR1cm4gX21vZHVsZUFsaWFzZXNbZmlsZW5hbWVdOwogIHJldHVybiBmaWxlbmFtZTsKfQoKZnVuY3Rpb24gTm9ybWFsaXplUGF0aChwKSB7CiAgcCA9IHBhdGguYWJzb2x1dGUocCk7CiAgcCA9IHBhdGgucmVsYXRpdmUocCwgcGF0aC5nZXRjd2QoKSk7CiAgcCA9IHBhdGgubm9ybWFsaXplKHApOwogIGlmKCFwYXRoLmlzQWJzb2x1dGUocCkpIGlmICghcC5zdGFydHNXaXRoKCcuLycpICYmICFwLnN0YXJ0c1dpdGgoJy4uLycpICYmIHAgIT0gJy4uJykgcCA9ICcuLycgKyBwOwogIHJldHVybiBwOwp9Cgpjb25zdCBGaWxlQmFubmVyQ29tbWVudCA9IChmaWxlbmFtZSwgaSkgPT4gewogIGxldCBzID0gJyc7CiAgcyArPSBgICR7aSA/ICdlbmQnIDogJ3N0YXJ0J30gb2YgJyR7LypwYXRoLmJhc2VuYW1lKi8gZmlsZW5hbWV9JyBgOwogIGxldCBuID0gTWF0aC5mbG9vcigoODAgLSA2IC0gcy5sZW5ndGgpIC8gMik7CiAgcyA9ICcvKiAnICsgJy0nLnJlcGVhdChuKSArIHM7CiAgcyArPSAnLScucmVwZWF0KDgwIC0gMyAtIHMubGVuZ3RoKSArICcgKi8nOwogIGlmKGkgPT0gMCkgcyA9ICdcbicgKyBzICsgJ1xuJzsKICBlbHNlIHMgPSBzICsgJ1xuJzsKICByZXR1cm4gczsKfTsKCmV4dGVuZEFycmF5KEFycmF5LnByb3RvdHlwZSk7Cgpjb25zdCBJc0J1aWx0aW4gPSBtb2R1bGVOYW1lID0+IC9eW15cLy5dKyQvLnRlc3QobW9kdWxlTmFtZSk7CmNvbnN0IGNvbXBhY3QgPSAobiwgbW9yZSA9IHt9KSA9PiBjb25zb2xlLmNvbmZpZyh7IGNvbXBhY3Q6IG4sIG1heEFycmF5TGVuZ3RoOiAxMDAsIC4uLm1vcmUgfSk7CmNvbnN0IEFkZFVuaXF1ZSA9IChhcnIsIGl0ZW0pID0+IChhcnIuaW5kZXhPZihpdGVtKSA9PSAtMSA/IGFyci5wdXNoKGl0ZW0pIDogbnVsbCk7CmNvbnN0IEludFRvRFdvcmQgPSBpdmFsID0+IChpc05hTihpdmFsKSA9PT0gZmFsc2UgJiYgaXZhbCA8IDAgPyBpdmFsICsgNDI5NDk2NzI5NiA6IGl2YWwpOwpjb25zdCBJbnRUb0JpbmFyeSA9IGkgPT4gKGkgPT0gLTEgfHwgdHlwZW9mIGkgIT0gJ251bWJlcicgPyBpIDogJzBiJyArIEludFRvRFdvcmQoaSkudG9TdHJpbmcoMikpOwoKY29uc3QgV2hhdCA9IHsgSU1QT1JUOiBTeW1ib2wuZm9yKCdpbXBvcnQnKSwgRVhQT1JUOiBTeW1ib2wuZm9yKCdleHBvcnQnKSB9Owpjb25zdCBJbXBvcnRUeXBlcyA9IHsgSU1QT1JUOiAwLCBJTVBPUlRfREVGQVVMVDogMSwgSU1QT1JUX05BTUVTUEFDRTogMiB9Owpjb25zdCBJc09uZU9mID0gY3VycnkoKG4sIHZhbHVlKSA9PiAoQXJyYXkuaXNBcnJheShuKSA/IG4uc29tZShudW0gPT4gbnVtID09PSB2YWx1ZSkgOiBuID09PSB2YWx1ZSkpOwpjb25zdCBUb2tJcyA9IGN1cnJ5KCh0eXBlLCBsZXhlbWUsIHRvaykgPT4gewogIGlmKHRvayAhPSB1bmRlZmluZWQpIHsKICAgIGlmKGxleGVtZSAhPSB1bmRlZmluZWQpIGlmICh0eXBlb2YgbGV4ZW1lID09ICdzdHJpbmcnICYmICFJc09uZU9mKGxleGVtZSwgdG9rLmxleGVtZSkpIHJldHVybiBmYWxzZTsKICAgIGlmKHR5cGUgIT0gdW5kZWZpbmVkKSB7CiAgICAgIGlmKHR5cGVvZiB0eXBlID09ICdzdHJpbmcnICYmICFJc09uZU9mKHR5cGUsIHRvay50eXBlKSkgcmV0dXJuIGZhbHNlOwogICAgICBpZih0eXBlb2YgdHlwZSA9PSAnbnVtYmVyJyAmJiAhSXNPbmVPZih0eXBlLCB0b2suaWQpKSByZXR1cm4gZmFsc2U7CiAgICB9CiAgICByZXR1cm4gdHJ1ZTsKICB9Cn0pOwpjb25zdCBDb21wYXJlUmFuZ2UgPSAoYSwgYikgPT4gKGEgPT09IG51bGwgfHwgYiA9PT0gbnVsbCA/IDAgOiB0eXBlb2YgYVswXSA9PSAnbnVtYmVyJyAmJiB0eXBlb2YgYlswXSA9PSAnbnVtYmVyJyAmJiBhWzBdICE9IGJbMF0gPyBhWzBdIC0gYlswXSA6IGFbMV0gLSBiWzFdKTsKCmNvbnN0IElzS2V5d29yZCA9IFRva0lzKCdrZXl3b3JkJyk7CmNvbnN0IElzUHVuY3R1YXRvciA9IFRva0lzKCdwdW5jdHVhdG9yJyk7CmNvbnN0IElzSWRlbnRpZmllciA9IFRva0lzKCdpZGVudGlmaWVyJyk7CmNvbnN0IElzU3RyaW5nTGl0ZXJhbCA9IFRva0lzKCdzdHJpbmdMaXRlcmFsJyk7CmNvbnN0IFB1dHNGdW5jdGlvbiA9IG91dEZuID0+IHN0ciA9PiB7CiAgbGV0IGIgPSB0b0FycmF5QnVmZmVyKHN0cik7CiAgcmV0dXJuIG91dEZuKGIsIGIuYnl0ZUxlbmd0aCk7Cn07Cgpjb25zdCBJc1doaXRlU3BhY2UgPSBzdHIgPT4gL15ccyokLy50ZXN0KHN0cikgfHwgc3RyLnRyaW0oKSA9PSAnJzsKCmNvbnN0IGRlYnVnTG9nID0gKHN0ciwgLi4uYXJncykgPT4gewogIGNvbnN0IHByZWQgPSBhcmcgPT4gaXNPYmplY3QoYXJnKSAmJiAnY29tcGFjdCcgaW4gYXJnOwogIGxldCBvcHRzID0gYXJncy5maWx0ZXIocHJlZCk7CgogIG9wdHMgPSBvcHRzLnJlZHVjZSgoYWNjLCBvcHQpID0+IGRlZmluZShhY2MsIG9wdCksIG9wdHMuc2hpZnQoKSA/PyB7fSk7CgogIGlmKG9wdHMuY29tcGFjdCA9PT0gdW5kZWZpbmVkKSBkZWZpbmUob3B0cywgY29tcGFjdCgxKSk7CiAgaWYob3B0cy5tYXhBcnJheUxlbmd0aCA9PT0gdW5kZWZpbmVkKSBkZWZpbmUob3B0cywgeyBtYXhBcnJheUxlbmd0aDogMTAgfSk7CiAgaWYob3B0cy5kZXB0aCA9PT0gdW5kZWZpbmVkKSBkZWZpbmUob3B0cywgeyBkZXB0aDogSW5maW5pdHkgfSk7CgogIGFyZ3MgPSBhcmdzLmZpbHRlcihhcmcgPT4gIXByZWQoYXJnKSk7CgogIG9wdHMuY29tcGFjdCA9IGZhbHNlOwoKICBjb25zb2xlLmxvZyhzdHIsIG9wdHMsIC4uLmFyZ3MpOwp9OwoKY29uc3QgRmlsZVdyaXRlciA9IGZpbGUgPT4gewogIGxldCBmZCA9IG9zLm9wZW4oZmlsZSwgb3MuT19XUk9OTFkgfCBvcy5PX0NSRUFUIHwgb3MuT19UUlVOQywgMG82NDQpOwogIHJldHVybiBkZWZpbmUoRmRXcml0ZXIoZmQsIGZpbGUpLCB7CiAgICBjbG9zZTogKCkgPT4gb3MuY2xvc2UoZmQpCiAgfSk7Cn07CgpmdW5jdGlvbiBGZFdyaXRlcihmZCwgZmlsZSkgewogIGxldCBmbjsKICBmbiA9IChidWYsIGxlbikgPT4gewogICAgaWYodHlwZW9mIGJ1ZiA9PSAnc3RyaW5nJykgYnVmID0gdG9BcnJheUJ1ZmZlcihidWYpOwogICAgbGVuID8/PSBidWYuYnl0ZUxlbmd0aDsKICAgIGxldCByZXN1bHQgPSBvcy53cml0ZShmZCwgYnVmLCAwLCBsZW4pOwogICAgcmV0dXJuIHJlc3VsdDsKICB9OwogIGRlZmluZShmbiwgewogICAgZmQsCiAgICBmaWxlLAogICAgcHV0czogUHV0c0Z1bmN0aW9uKGZuKSwKICAgIHdyaXRlOiBmbiwKICAgIGNsb3NlOiAoKSA9PiB7fSwKICAgIHNlZWs6ICh3aGVuY2UsIG9mZnNldCkgPT4gb3Muc2VlayhmZCwgd2hlbmNlLCBvZmZzZXQpLAogICAgW1N5bWJvbC50b1N0cmluZ1RhZ106IGBGaWxlV3JpdGVyPCAke2ZkfSA+YCwKICAgIGluc3BlY3QoKSB7CiAgICAgIHJldHVybiBpbnNwZWN0KHsgZmQgfSkgPz8gdGhpc1tTeW1ib2wudG9TdHJpbmdUYWddOwogICAgfQogIH0pOwogIHJldHVybiBmbjsKfQoKZnVuY3Rpb24gRHVtbXlXcml0ZXIobmFtZSkgewogIGxldCBmbiA9IChidWYsIGxlbikgPT4gbGVuOwogIGRlZmluZShmbiwgewogICAgbmFtZSwKICAgIHB1dHM6IFB1dHNGdW5jdGlvbihmbiksCiAgICB3cml0ZTogZm4sCiAgICBjbG9zZTogKCkgPT4ge30sCiAgICBzZWVrOiAoKSA9PiB7fSwKICAgIFtTeW1ib2wudG9TdHJpbmdUYWddOiBgRHVtbXlXcml0ZXI8ICR7bmFtZX0gPmAsCiAgICBpbnNwZWN0KCkgewogICAgICByZXR1cm4gaW5zcGVjdCh7IGZkIH0pID8/IHRoaXNbU3ltYm9sLnRvU3RyaW5nVGFnXTsKICAgIH0KICB9KTsKICByZXR1cm4gZm47Cn0KCmZ1bmN0aW9uIEltcG9ydElkcyhzZXEpIHsKICByZXR1cm4gc2VxLmZpbHRlcih0b2sgPT4gSXNJZGVudGlmaWVyKG51bGwsIHRvaykpOwp9CgpmdW5jdGlvbiBJbXBFeHBUeXBlKHNlcSkgewogIGlmKHNlcS5zb21lKHRvayA9PiBJc0tleXdvcmQoJ2ltcG9ydCcsIHRvaykpKSByZXR1cm4gV2hhdC5JTVBPUlQ7CiAgaWYoc2VxLnNvbWUodG9rID0+IElzS2V5d29yZCgnZXhwb3J0JywgdG9rKSkpIHJldHVybiBXaGF0LkVYUE9SVDsKfQpmdW5jdGlvbiBJbXBvcnRUeXBlKHNlcSkgewogIGlmKElzS2V5d29yZChbJ2ltcG9ydCcsICdleHBvcnQnXSwgc2VxWzBdKSkgc2VxLnNoaWZ0KCk7CiAgaWYoSXNQdW5jdHVhdG9yKCcqJywgc2VxWzBdKSkgewogICAgaWYoSXNLZXl3b3JkKCdhcycsIHNlcVsxXSkpIHJldHVybiBJbXBvcnRUeXBlcy5JTVBPUlRfTkFNRVNQQUNFOwogIH0gZWxzZSBpZihJc0lkZW50aWZpZXIodW5kZWZpbmVkLCBzZXFbMF0pKSB7CiAgICBpZihJc0tleXdvcmQoJ2Zyb20nLCBzZXFbMV0pKSByZXR1cm4gSW1wb3J0VHlwZXMuSU1QT1JUX0RFRkFVTFQ7CiAgfQogIHJldHVybiBJbXBvcnRUeXBlcy5JTVBPUlQ7Cn0KCmZ1bmN0aW9uIEltcG9ydEZpbGUoc2VxKSB7CiAgc2VxID0gTm9uV1Moc2VxKTsKICBsZXQgaWR4ID0gc2VxLmZpbmRJbmRleCh0b2sgPT4gSXNLZXl3b3JkKCdmcm9tJywgdG9rKSk7CiAgd2hpbGUoc2VxW2lkeF0gJiYgc2VxW2lkeF0udHlwZSAhPSAnc3RyaW5nTGl0ZXJhbCcpICsraWR4OwogIGlmKHNlcVtpZHhdKQogICAgaWYoc2VxW2lkeF0udHlwZSA9PSAnc3RyaW5nTGl0ZXJhbCcpIHsKICAgICAgbGV0IGYgPSBzZXFbaWR4XS5sZXhlbWUucmVwbGFjZSgvXltcJ1wiXGBdKC4qKVtcJ1wiXGBdJC9nLCAnJDEnKTsKICAgICAgcmV0dXJuIGY7CiAgICB9Cn0KCmZ1bmN0aW9uIEV4cG9ydE5hbWUoc2VxKSB7CiAgbGV0IGlkeCA9IHNlcS5maW5kSW5kZXgodG9rID0+IElzSWRlbnRpZmllcih1bmRlZmluZWQsIHRvaykgfHwgSXNLZXl3b3JkKCdkZWZhdWx0JywgdG9rKSk7CgogIHdoaWxlKHNlcVtpZHhdICYmIHNlcVtpZHhdLnR5cGUgIT0gJ2lkZW50aWZpZXInKSBpZHgrKzsKCiAgcmV0dXJuIHNlcVtpZHhdPy5sZXhlbWU7Cn0KCmZ1bmN0aW9uIEJ5dGVTZXF1ZW5jZSh0b2tlbnMpIHsKICBpZih0b2tlbnMubGVuZ3RoKSB7CiAgICBsZXQgeyBsb2MgfSA9IHRva2Vuc1swXTsKICAgIGxldCBzdGFydCA9IGxvYy5ieXRlT2Zmc2V0OwogICAgbGV0IHRvdGFsID0gdG9rZW5zLnJlZHVjZSgobiwgdCkgPT4gbiArIHQuYnl0ZUxlbmd0aCwgMCk7CiAgICBsZXQgZW5kID0gc3RhcnQgKyB0b3RhbDsKICAgIC8vbGV0IGxpbmUgPSB0b1N0cmluZyhCdWZmZXJGaWxlKGxvYy5maWxlKS5zbGljZShzdGFydCwgZW5kKSk7CiAgICByZXR1cm4gW3N0YXJ0LCBlbmRdOwogIH0KfQoKZnVuY3Rpb24gTW9kdWxlTG9hZGVyKG1vZHVsZSkgewogIGxldCBmaWxlOwoKICBpZihwYXRoLmlzRGlyZWN0b3J5KG1vZHVsZSkpIHsKICAgIGZpbGUgPSBNb2R1bGVMb2FkZXIocGF0aC5qb2luKG1vZHVsZSwgJ2luZGV4LmpzJykpOwogIH0gZWxzZSBpZihwYXRoLmlzRmlsZShtb2R1bGUpKSB7CiAgICBmaWxlID0gbW9kdWxlOwogIH0gZWxzZSBpZighL1wuanMkLy50ZXN0KG1vZHVsZSkpIHsKICAgIGZpbGUgPSBNb2R1bGVMb2FkZXIobW9kdWxlICsgJy5qcycpOwogIH0KCiAgcmV0dXJuIGZpbGU7Cn0KCmZ1bmN0aW9uIFJlc29sdmVJbXBvcnRzKHNvdXJjZSwgbG9nID0gKCkgPT4ge30sIHJlY3Vyc2l2ZSwgZGVwdGggPSAwKSB7CiAgc291cmNlID0gcGF0aC5ub3JtYWxpemUoc291cmNlKTsKICBpZihwcmludEZpbGVzKSBzdGQucHV0cyhzb3VyY2UgKyAnXG4nKTsKCiAgaWYocmVhZFBhY2thZ2UpIHNvdXJjZSA9IFJlc29sdmVBbGlhcyhzb3VyY2UpOwoKIHN0ZC5lcnIucHV0cyhgUHJvY2Vzc2luZyAke3NvdXJjZX1cbmApOwoKICBsZXQgc3RhcnQgPSBEYXRlLm5vdygpOwogIGNvbnN0IGRpciA9IHBhdGguZGlybmFtZShzb3VyY2UpOwoKICBpZihkZWJ1ZyA+PSAyKSBjb25zb2xlLmxvZygnUmVzb2x2ZUltcG9ydHMnLCB7IHNvdXJjZSB9KTsKCiAgbGV0IGJ5dGVidWYgPSBCdWZmZXJGaWxlKHNvdXJjZSk7CgogIGxldCBsZW4gPSBieXRlYnVmLmJ5dGVMZW5ndGgsCiAgICB0eXBlID0gcGF0aC5leHRuYW1lKHNvdXJjZSkuc3Vic3RyaW5nKDEpLAogICAgYmFzZSA9IGNhbWVsaXplKHBhdGguYmFzZW5hbWUoc291cmNlLCAnLicgKyB0eXBlKS5yZXBsYWNlKC9bXjAtOUEtWmEtel9dL2csICdfJykpOwoKICBsZXQgbGV4ID0gewogICAganM6IG5ldyBFQ01BU2NyaXB0TGV4ZXIoYnl0ZWJ1Ziwgc291cmNlKQogIH07CiAgbGV4Lm1qcyA9IGxleC5qczsKICBsZXguY2pzID0gbGV4LmpzOwogIGxleC5qc29uID0gbGV4LmpzOwoKICBjb25zdCBsZXhlciA9IGxleFt0eXBlXTsKCiAgLy8gVCA9IGxleGVyLnRva2Vucy5yZWR1Y2UoKGFjYywgbmFtZSwgaWQpID0+ICh7IC4uLmFjYywgW25hbWVdOiBpZCB9KSwge30pOwoKICBsZXQgZSA9IG5ldyBTeW50YXhFcnJvcigpOwoKICBpZighbGV4ZXIpIHRocm93IG5ldyBFcnJvcihgRXJyb3IgbGV4aW5nOiAke3NvdXJjZX1gKTsKCiAgbGV4ZXIuaGFuZGxlciA9IGxleCA9PiB7CiAgICBjb25zdCB7IGxvYywgbW9kZSwgcG9zLCBzdGFydCwgYnl0ZUxlbmd0aCwgc3RhdGUgfSA9IGxleDsKICAgIGxvZygnICcucmVwZWF0KGxvYy5jb2x1bW4gLSAxKSArICdeJyk7CiAgfTsKICBsZXQgdG9rZW5MaXN0ID0gW10sCiAgICBkZWNsYXJhdGlvbnMgPSBbXTsKICBjb25zdCBjb2xTaXplcyA9IFsxMiwgOCwgNCwgMjAsIDMyLCAxMCwgMF07CgogIGxldCB0b2ssCiAgICBpID0gMCwKICAgIG1hc2sgPSBJbnRUb0JpbmFyeShsZXhlci5tYXNrKSwKICAgIHN0YXRlID0gbGV4ZXIudG9wU3RhdGUoKTsKICBsZXhlci5iZWdpbkNvZGUgPSAoKSA9PiAoY29kZSA9PSAnanMnID8gMGIxMDAwIDogMGIwMTAwKTsKICBjb25zdCBiYWxhbmNlciA9ICgpID0+IHsKICAgIGxldCBzZWxmOwogICAgbGV0IHN0YWNrID0gW107CiAgICBjb25zdCB0YWJsZSA9IHsgJ30nOiAneycsICddJzogJ1snLCAnKSc6ICcoJyB9OwogICAgc2VsZiA9IGZ1bmN0aW9uIFBhcmVudGhlc2VCYWxhbmNlcih0b2spIHsKICAgICAgc3dpdGNoICh0b2s/LmxleGVtZSkgewogICAgICAgIGNhc2UgJ3snOgogICAgICAgIGNhc2UgJ1snOgogICAgICAgIGNhc2UgJygnOiB7CiAgICAgICAgICBzdGFjay5wdXNoKHRvay5sZXhlbWUpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIGNhc2UgJ30nOgogICAgICAgIGNhc2UgJ10nOgogICAgICAgIGNhc2UgJyknOiB7CiAgICAgICAgICBpZihzdGFjay5sYXN0ICE9IHRhYmxlW3Rvay5sZXhlbWVdKSB0aHJvdyBuZXcgRXJyb3IoYHRvcCAnJHtzdGFjay5sYXN0fScgIT0gJyR7dG9rLmxleGVtZX0nIFsgJHtzdGFjay5tYXAocyA9PiBgJyR7c30nYCkuam9pbignLCAnKX0gXWApOwoKICAgICAgICAgIHN0YWNrLnBvcCgpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICB9OwogICAgT2JqZWN0LmFzc2lnbihzZWxmLCB7CiAgICAgIHN0YWNrLAogICAgICByZXNldCgpIHsKICAgICAgICBzdGFjay5jbGVhcigpOwogICAgICB9LAogICAgICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IGRlcHRoKCkgewogICAgICAgIHJldHVybiBzdGFjay5sZW5ndGg7CiAgICAgIH0KICAgIH0pOwoKICAgIHJldHVybiBzZWxmOwogIH07CiAgbGV0IGJhbGFuY2VycyA9IFtiYWxhbmNlcigpXSwKICAgIGltcG9ydHMgPSBbXSwKICAgIGV4cG9ydHMgPSBbXSwKICAgIGNvbW1lbnRzID0gW10sCiAgICBpbXBleHAsCiAgICBjb25kLAogICAgaW1wID0gW10sCiAgICBzaG93VG9rZW4gPSB0b2sgPT4gewogICAgICBpZigobGV4ZXIuY29uc3RydWN0b3IgIT0gRUNNQVNjcmlwdExleGVyICYmIHRvay50eXBlICE9ICd3aGl0ZXNwYWNlJykgfHwgL14oKGltfGV4KXBvcnR8ZnJvbXxhcykkLy50ZXN0KHRvay5sZXhlbWUpKSB7CiAgICAgICAgbGV0IGEgPSBbLyooZmlsZSArICc6JyArIHRvay5sb2MpLnBhZEVuZChmaWxlLmxlbmd0aCsxMCksKi8gdG9rLnR5cGUucGFkRW5kKDIwLCAnICcpLCBlc2NhcGUodG9rLmxleGVtZSldOwogICAgICAgIHN0ZC5wdXRzKGEuam9pbignJykgKyAnXG4nKTsKICAgICAgfQogICAgfTsKCiAgY29uc3QgUGF0aEFkanVzdCA9IHMgPT4gewogICAgbGV0IGogPSBwYXRoLmpvaW4oZGlyLCBzKTsKICAgIGogPSBwYXRoLmNvbGxhcHNlKGopOwogICAgaiA9IHBhdGgubm9ybWFsaXplKGopOwogICAgaWYocGF0aC5pc1JlbGF0aXZlKGopKSBqID0gJy4vJyArIGo7CiAgICByZXR1cm4gTW9kdWxlTG9hZGVyKGopOwogIH07CiAgbGV0IHByZXZUb2tlbjsKICBmb3IoOzspIHsKICAgIGxldCB7IHN0YXRlRGVwdGggfSA9IGxleGVyOwogICAgbGV0IHZhbHVlID0gbGV4ZXIubmV4dCgpOwogICAgbGV0IGRvbmUgPSB2YWx1ZSA9PT0gdW5kZWZpbmVkOwogICAgaWYoZG9uZSkgYnJlYWs7CiAgICBsZXQgbmV3U3RhdGUgPSBsZXhlci50b3BTdGF0ZSgpOwogICAgaWYobmV3U3RhdGUgIT0gc3RhdGUpIHsKICAgICAgaWYoc3RhdGUgPT0gJ1RFTVBMQVRFJyAmJiBsZXhlci5zdGF0ZURlcHRoID4gc3RhdGVEZXB0aCkgYmFsYW5jZXJzLnB1c2goYmFsYW5jZXIoKSk7CiAgICAgIGlmKG5ld1N0YXRlID09ICdURU1QTEFURScgJiYgbGV4ZXIuc3RhdGVEZXB0aCA8IHN0YXRlRGVwdGgpIGJhbGFuY2Vycy5wb3AoKTsKICAgIH0KICAgIGxldCBuID0gYmFsYW5jZXJzLmxhc3QuZGVwdGg7CiAgICBjb25zdCB7IHRva2VuIH0gPSBsZXhlcjsKICAgIGNvbnN0IHsgbGVuZ3RoLCBzZXEgfSA9IHRva2VuOwogICAgLyogIGlmKGRlYnVnID4gMSkgY29uc29sZS5sb2coJ3Rva2VuJywgdG9rZW4pOwogICAgaWYoZGVidWcgPj0gMSkgY29uc29sZS5sb2coJ2xleGVyLm1vZGUnLCBsZXhlci5tb2RlKTsKKi8KICAgIGlmKG4gPT0gMCAmJiB0b2tlbi5sZXhlbWUgPT0gJ30nICYmIGxleGVyLnN0YXRlRGVwdGggPiAwKSB7CiAgICAgIGxleGVyLnBvcFN0YXRlKCk7CiAgICB9IGVsc2UgewogICAgICBiYWxhbmNlcih0b2tlbik7CiAgICAgIGlmKG4gPiAwICYmIGJhbGFuY2Vycy5sYXN0LmRlcHRoID09IDApIGxvZygnYmFsYW5jZXInKTsKICAgICAgaWYoL2NvbW1lbnQvaS50ZXN0KHRva2VuLnR5cGUpKSB7CiAgICAgICAgY29tbWVudHMucHVzaCh0b2tlbik7CiAgICAgIH0KICAgICAgaWYoWydpbXBvcnQnLCAnZXhwb3J0J10uaW5kZXhPZih0b2tlbi5sZXhlbWUpID49IDApIHsKICAgICAgICBpbXBleHAgPSBXaGF0W3Rva2VuLmxleGVtZS50b1VwcGVyQ2FzZSgpXTsKICAgICAgICBjb25kID0gdHJ1ZTsKICAgICAgICBpbXAgPSB0b2tlbi5sZXhlbWUgPT0gJ2V4cG9ydCcgPyBbdG9rZW5dIDogW107CiAgICAgIH0KICAgICAgaWYoZGVidWcgPiAyKSBjb25zb2xlLmxvZyhgdG9rZW5bJHtpbXAubGVuZ3RofV1gLCB0b2tlbi5sb2MgKyAnJywgY29uc29sZS5jb25maWcoeyBicmVha0xlbmd0aDogODAsIGNvbXBhY3Q6IDAgfSksIHRva2VuKTsKCiAgICAgIGlmKGNvbmQgPT0gdHJ1ZSkgewogICAgICAgIGlmKGltcC5pbmRleE9mKHRva2VuKSA9PSAtMSkgaW1wLnB1c2godG9rZW4pOwogICAgICAgIC8vY29uc29sZS5sb2coIGltcFswXS5sb2MrJycsY29uc29sZS5jb25maWcoe2JyZWFrTGVuZ3RoOjgwLCBjb21wYWN0OiAwfSksIE5vbldTKGltcCkpOwogICAgICAgIGlmKGltcC5sYXN0LmxleGVtZSA9PSAnOycpIHsKICAgICAgICAgIGlmKGRlYnVnID4gMikgY29uc29sZS5sb2coJ2ltcCcsIGltcFswXS5sb2MgKyAnJywgY29uc29sZS5jb25maWcoeyBicmVha0xlbmd0aDogODAsIGNvbXBhY3Q6IDAgfSksIFRva2VuU2VxdWVuY2UoaW1wKSArICcnKTsKICAgICAgICAgIGNvbmQgPSBmYWxzZTsKICAgICAgICAgIGlmKGltcGV4cCA9PSBXaGF0LklNUE9SVCB8fCBpbXAuc29tZShpID0+IElzS2V5d29yZCgnZnJvbScsIGkpKSkgewogICAgICAgICAgICBpZihpbXBbMV0ubGV4ZW1lICE9ICcoJykgewogICAgICAgICAgICAgIGxldCBvYmogPSBuZXcgSW1wb3J0KGltcCwgUGF0aEFkanVzdCwgZGVwdGgpOwogICAgICAgICAgICAgIGlmKG9iaikgewogICAgICAgICAgICAgICAgb2JqLnNvdXJjZSA9IHNvdXJjZTsKICAgICAgICAgICAgICAgIGltcG9ydHMucHVzaChvYmopOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGV0IG9iaiA9IG5ldyBFeHBvcnQoaW1wLCBQYXRoQWRqdXN0LCBkZXB0aCk7CiAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ29iaicsY29uc29sZS5jb25maWcoe2JyZWFrTGVuZ3RoOjgwLCBjb21wYWN0OiAxfSksIG9iaiwgb2JqLmxvYysnJyk7CiAgICAgICAgICAgIGlmKG9iaikgewogICAgICAgICAgICAgIG9iai5zb3VyY2UgPSBzb3VyY2U7CgogICAgICAgICAgICAgIGV4cG9ydHMucHVzaChvYmopOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIHByZXZUb2tlbiA9IHRva2VuOwogICAgfQogICAgc3RhdGUgPSBuZXdTdGF0ZTsKICB9CgogIGZ1bmN0aW9uIEV4cG9ydCh0b2tlbnMsIHJlbGF0aXZlUGF0aCA9IHMgPT4gcykgewogICAgaWYodG9rZW5zWzBdLnNlcSA9PSB0b2tlbnNbMV0uc2VxKSB0b2tlbnMuc2hpZnQoKTsKICAgIGNvbnN0IHsgbG9jLCBzZXEgfSA9IHRva2Vuc1swXTsKICAgIGlmKCEvXihpbXxleClwb3J0JC9pLnRlc3QodG9rZW5zWzBdLmxleGVtZSkpIHRocm93IG5ldyBFcnJvcihgQWRkRXhwb3J0IHRva2VuczogYCArIGluc3BlY3QodG9rZW5zLCB7IGNvbXBhY3Q6IGZhbHNlIH0pKTsKICAgIGxldCBkZWYgPSB0b2tlbnMuZmluZEluZGV4KHRvayA9PiBJc0tleXdvcmQoJ2RlZmF1bHQnLCB0b2spKTsKICAgIGxldCBrID0gMTsKICAgIHdoaWxlKHRva2Vuc1trXS50eXBlID09ICd3aGl0ZXNwYWNlJyB8fCBJc0tleXdvcmQoWydsZXQnLCAnY2xhc3MnLCAnZnVuY3Rpb24nLCAnY29uc3QnXSwgdG9rZW5zW2tdKSkgaysrOwogICAgd2hpbGUodG9rZW5zW2tdICYmIHRva2Vuc1trXS50eXBlICE9ICdpZGVudGlmaWVyJykgaysrOwogICAgbGV0IG5hbWUgPSBFeHBvcnROYW1lKHRva2Vucyk7CiAgICBsZXQgZXhwb3J0ZWQgPSBkZWYgIT0gLTEgPyAnZGVmYXVsdCcgOiBuYW1lOwogICAgbGV0IGZpbGUgPSBJbXBvcnRGaWxlKHRva2Vucyk7CiAgICBpZihmaWxlID09ICcgJykgdGhyb3cgbmV3IEVycm9yKCdYWFggJyArIGluc3BlY3QodG9rZW5zLCB7IGNvbXBhY3Q6IGZhbHNlIH0pKTsKICAgIGNvbnN0IGlkeCA9IGRlZiAhPSAtMSA/IGRlZiA6IGZpbGUgPyB0b2tlbnMuZmluZEluZGV4KHRvayA9PiB0b2subGV4ZW1lID09ICc7JykgOiB0b2tlbnMuc2xpY2UoMSkuZmluZEluZGV4KHRvayA9PiB0b2sudHlwZSAhPSAnd2hpdGVzcGFjZScpOwogICAgY29uc3QgbyA9IE5vbldTKHRva2VucylbMV0ubGV4ZW1lID09ICd7JzsKICAgIGNvbnN0IHJlbW92ZSA9IG8gfHwgZGVmICE9IC0xID8gdG9rZW5zLnNsaWNlKCkgOiB0b2tlbnMuc2xpY2UoMCwgZGVmID09IGlkeCA/IGlkeCArIDIgOiBpZHggKyAxKTsKICAgIGlmKHJlbW92ZVswXSkgaWYgKHJlbW92ZVswXS5sZXhlbWUgIT0gJ2V4cG9ydCcpIHRocm93IG5ldyBFcnJvcihgQWRkRXhwb3J0IHRva2VuczogYCArIGluc3BlY3QodG9rZW5zLCB7IGNvbXBhY3Q6IGZhbHNlIH0pKTsKICAgIGNvbnN0IHJhbmdlID0gQnl0ZVNlcXVlbmNlKHJlbW92ZSkgPz8gQnl0ZVNlcXVlbmNlKHRva2Vucyk7CiAgICBsZXQgc291cmNlID0gbG9jLmZpbGU7CiAgICBsZXQgdHlwZSA9IEltcEV4cFR5cGUodG9rZW5zKTsKICAgIGxldCBjb2RlID0gVG9rZW5TZXF1ZW5jZSh0b2tlbnMpLnRvU3RyaW5nKCk7IC8vIHRvU3RyaW5nKEJ1ZmZlckZpbGUoc291cmNlKS5zbGljZSguLi5yYW5nZSkpOwogICAgaWYoZGVmICE9IC0xKSBpZiAoZGVidWcgPj0gMikgY29uc29sZS5sb2coJ0FkZEV4cG9ydCcsIHsgc291cmNlLCBmaWxlLCBjb2RlLCByYW5nZSwgbG9jLCB0b2tlbnMgfSk7CiAgICBsZXQgbGVuID0gdG9rZW5zLmxlbmd0aDsKICAgIGlmKG8pIHsKICAgICAgZXhwb3J0ZWQgPSB0b2tlbnMuZmlsdGVyKHRvayA9PiB0b2sudHlwZSA9PSAnaWRlbnRpZmllcicpLm1hcCh0b2sgPT4gdG9rLmxleGVtZSk7CiAgICB9CiAgICBpZihOb25XUyh0b2tlbnMpWzFdLmxleGVtZSAhPSAneycpIGxlbiA9IHRva2Vucy5maW5kSW5kZXgodG9rID0+IElzSWRlbnRpZmllcih1bmRlZmluZWQsIHRvaykgfHwgSXNLZXl3b3JkKCdkZWZhdWx0JywgdG9rKSkgKyAxOwogICAgdG9rZW5zID0gdG9rZW5zLnNsaWNlKDAsIGxlbik7CiAgICBsZXQgZXhwID0gZGVmaW5lKAogICAgICB7CiAgICAgICAgdHlwZTogV2hhdC5FWFBPUlQsCiAgICAgICAgZmlsZTogZmlsZSAmJiAvXC4vLnRlc3QoZmlsZSkgPyByZWxhdGl2ZVBhdGgoZmlsZSkgOiBmaWxlLAogICAgICAgIHRva2VucywKICAgICAgICBleHBvcnRlZCwKICAgICAgICBuYW1lLAogICAgICAgIHJhbmdlCiAgICAgIH0sCiAgICAgIHsKICAgICAgICBjb2RlLAogICAgICAgIGxvYywKICAgICAgICBkZXB0aCwKICAgICAgICBwYXRoKCkgewogICAgICAgICAgY29uc3QgeyBmaWxlIH0gPSB0aGlzOwogICAgICAgICAgaWYodHlwZW9mIGZpbGUgPT0gJ3N0cmluZycpIHJldHVybiByZWxhdGl2ZVBhdGgoZmlsZSk7CiAgICAgICAgfQogICAgICB9CiAgICApOwogICAgcmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZihleHAsIEV4cG9ydC5wcm90b3R5cGUpOwogIH0KICBkZWZpbmUoRXhwb3J0LnByb3RvdHlwZSwgewogICAgaWRzKCkgewogICAgICByZXR1cm4gSW1wb3J0SWRzKHRoaXMudG9rZW5zKS5tYXAoKHsgbGV4ZW1lIH0pID0+IGxleGVtZSk7CiAgICB9CiAgfSk7CgogIGZ1bmN0aW9uIEltcG9ydCh0b2tlbnMsIHJlbGF0aXZlUGF0aCA9IHMgPT4gcywgZGVwdGgpIHsKICAgIHRva2VucyA9IHRva2Vuc1swXS5zZXEgPT09IHRva2Vuc1sxXS5zZXEgPyB0b2tlbnMuc2xpY2UoMSkgOiB0b2tlbnMuc2xpY2UoKTsKICAgIGlmKCEvXihpbXxleClwb3J0JC9pLnRlc3QodG9rZW5zWzBdLmxleGVtZSkpIHRocm93IG5ldyBFcnJvcihgQWRkSW1wb3J0IHRva2VuczogYCArIGluc3BlY3QodG9rZW5zLCB7IGNvbXBhY3Q6IGZhbHNlIH0pKTsKICAgIGNvbnN0IHRvayA9IHRva2Vuc1swXTsKICAgIGNvbnN0IHsgbG9jLCBzZXEgfSA9IHRvazsKICAgIGxldCBzb3VyY2UgPSBsb2MuZmlsZTsKICAgIGxldCB0eXBlID0gSW1wRXhwVHlwZSh0b2tlbnMuc2xpY2UoKSksCiAgICAgIGZpbGUgPSBJbXBvcnRGaWxlKHRva2Vucy5zbGljZSgpKTsKICAgIGNvbnN0IHJhbmdlID0gQnl0ZVNlcXVlbmNlKHRva2Vucy5zbGljZSgpKTsKICAgIHJhbmdlWzBdID0gbG9jLmJ5dGVPZmZzZXQ7CiAgICBsZXQgY29kZSA9IHRvU3RyaW5nKEJ1ZmZlckZpbGUoc291cmNlKS5zbGljZSguLi5yYW5nZSkpOwogICAgaWYoZGVidWcgPj0gMikKICAgICAgY29uc29sZS5sb2coJ0FkZEltcG9ydCcsIGNvbXBhY3QoMSksIHtzb3VyY2UsIGZpbGUsIGNvZGUsIGxvYywgcmFuZ2UgfSk7CiAgICBsZXQgaW1wID0gT2JqZWN0LnNldFByb3RvdHlwZU9mKAogICAgICBkZWZpbmUoCiAgICAgICAgeyB0eXBlLCBmaWxlOiBmaWxlICYmIC9cLi8udGVzdChmaWxlKSA/IHJlbGF0aXZlUGF0aChmaWxlKSA6IGZpbGUsIHJhbmdlIH0sCiAgICAgICAgewogICAgICAgICAgdG9rZW5zOiB0b2tlbnMuc2xpY2UoKSwKICAgICAgICAgIGNvZGUsCiAgICAgICAgICBsb2MsCiAgICAgICAgICBkZXB0aCwKICAgICAgICAgIHBhdGgoKSB7CiAgICAgICAgICAgIGNvbnN0IHsgZmlsZSB9ID0gdGhpczsKICAgICAgICAgICAgaWYodHlwZW9mIGZpbGUgPT0gJ3N0cmluZycpIHJldHVybiByZWxhdGl2ZVBhdGgoZmlsZSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICApLAogICAgICBJbXBvcnQucHJvdG90eXBlCiAgICApOwogICAgbGV0IGZuID0gewogICAgICBbSW1wb3J0VHlwZXMuSU1QT1JUX05BTUVTUEFDRV0oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudG9rZW5zW3RoaXMudG9rZW5zLmZpbmRJbmRleCh0b2sgPT4gSXNLZXl3b3JkKCdhcycsIHRvaykpICsgMV0ubGV4ZW1lOwogICAgICB9LAogICAgICBbSW1wb3J0VHlwZXMuSU1QT1JUX0RFRkFVTFRdKCkgewogICAgICAgIGNvbnN0IHsgdG9rZW5zIH0gPSB0aGlzOwogICAgICAgIHJldHVybiB0b2tlbnNbdG9rZW5zLmZpbmRJbmRleCh0b2sgPT4gSXNLZXl3b3JkKCdpbXBvcnQnLCB0b2spKSArIDFdLmxleGVtZTsKICAgICAgfSwKICAgICAgW0ltcG9ydFR5cGVzLklNUE9SVF0oKSB7CiAgICAgICAgY29uc3QgeyB0b2tlbnMgfSA9IHRoaXM7CiAgICAgICAgbGV0IGkgPSAwLAogICAgICAgICAgcyA9IFtdLAogICAgICAgICAgYSA9IFtdOwogICAgICAgIGlmKElzS2V5d29yZChbJ2ltcG9ydCcsICdleHBvcnQnXSwgdG9rZW5zW2ldKSkgKytpOwogICAgICAgIGlmKElzUHVuY3R1YXRvcigneycsIHRva2Vuc1tpXSkpICsraTsKICAgICAgICBmb3IoOyB0b2tlbnNbaV0gJiYgIUlzS2V5d29yZCgnZnJvbScsIHRva2Vuc1tpXSk7ICsraSkgewogICAgICAgICAgaWYoSXNQdW5jdHVhdG9yKFsnLCcsICd9J10sIHRva2Vuc1tpXSkpIHsKICAgICAgICAgICAgaWYocy5sZW5ndGgpIGEucHVzaChzKTsKICAgICAgICAgICAgcyA9IFtdOwogICAgICAgICAgfSBlbHNlIGlmKElzSWRlbnRpZmllcih0b2tlbnNbaV0pKSB7CiAgICAgICAgICAgIHMucHVzaCh0b2tlbnNbaV0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBhID0gYS5mbGF0KCkuZmlsdGVyKHRvayA9PiB0b2sudHlwZSA9PSAnaWRlbnRpZmllcicpOwogICAgICAgIHJldHVybiBhLm1hcCh0b2sgPT4gdG9rLmxleGVtZSk7CiAgICAgIH0KICAgIH1bdHlwZV07CiAgICBpZih0eXBlb2YgZm4gPT0gJ2Z1bmN0aW9uJykgewogICAgICBsZXQgbG9jYWwgPSBmbi5jYWxsKGltcCk7CiAgICAgIGRlZmluZShpbXAsIHsgbG9jYWwgfSk7CiAgICB9CiAgICByZXR1cm4gaW1wOwogIH0KCiAgZGVmaW5lKEltcG9ydC5wcm90b3R5cGUsIHsKICAgIGlkcygpIHsKICAgICAgcmV0dXJuIEltcG9ydElkcyh0aGlzLnRva2Vucy5zbGljZSgpKS5tYXAoKHsgbGV4ZW1lIH0pID0+IGxleGVtZSk7CiAgICB9CiAgfSk7CgogIGxldCBlbmQgPSBEYXRlLm5vdygpOwoKICBpZihzaG93VGltaW5nKSBjb25zb2xlLmxvZyhgTGV4aW5nICcke3NvdXJjZS5yZXBsYWNlKC9eXC5cLy8sICcnKX0nIHRvb2sgJHtlbmQgLSBzdGFydH1tc2ApOwogIHN0YXJ0ID0gRGF0ZS5ub3coKTsKCiAgbGV0IGV4cG9ydHNGcm9tID0gZXhwb3J0cy5maWx0ZXIoZXhwID0+IGV4cC50b2tlbnMpLmZpbHRlcihleHAgPT4gZXhwLnRva2Vucy5zb21lKHRvayA9PiB0b2subGV4ZW1lID09ICdmcm9tJykpOwoKICBpZihwYXRoLmlzUmVsYXRpdmUoc291cmNlKSAmJiAhL14oXC58XC5cLilcLy8udGVzdChzb3VyY2UpKSBzb3VyY2UgPSAnLi8nICsgc291cmNlOwoKICAvLyBjb25zb2xlLmxvZygnZXhwb3J0c0Zyb20nLCBleHBvcnRzKTsKCiAgbW9kdWxlc1tzb3VyY2VdID0geyBpbXBvcnRzLCBleHBvcnRzIH07CgogIGxldCBhbGxFeHBvcnRzSW1wb3J0cyA9IGV4cG9ydHMuY29uY2F0KGltcG9ydHMpLnNvcnQoKGEsIGIpID0+IGEucmFuZ2VbMF0gLSBiLnJhbmdlWzBdKTsKICBsZXQgZmlsZUltcG9ydHMgPSBhbGxFeHBvcnRzSW1wb3J0cy5maWx0ZXIoaW1wID0+IHR5cGVvZiBpbXAuZmlsZSA9PSAnc3RyaW5nJyk7IC8vL1wuanMkL2kudGVzdChpbXAuZmlsZSkpOwogIGxldCBzcGxpdFBvaW50cyA9IHVuaXF1ZShmaWxlSW1wb3J0cy5yZWR1Y2UoKGFjYywgaW1wKSA9PiBbLi4uYWNjLCAuLi5pbXAucmFuZ2VdLCBbXSkpOwogIGJ1ZmZlcnNbc291cmNlXSA9IFsuLi5zcGxpdChCdWZmZXJGaWxlKHNvdXJjZSksIC4uLnNwbGl0UG9pbnRzKV0ubWFwKGIgPT4gYiA/PyB0b1N0cmluZyhiLCAwLCBiLmJ5dGVMZW5ndGgpKTsKCiAgLypjb25zb2xlLmxvZygnZmlsZUltcG9ydHMnLCBmaWxlSW1wb3J0cyk7Ki8KCiAgbGV0IG1hcCA9IEZpbGVNYXAuZm9yKHNvdXJjZSk7CgogIGZvcihsZXQgaW1wZXhwIG9mIGFsbEV4cG9ydHNJbXBvcnRzKSB7CiAgICBjb25zdCB7IHR5cGUsIGZpbGUsIHJhbmdlLCBjb2RlLCBsb2MgfSA9IGltcGV4cDsKICAgIGNvbnN0IFtzdGFydCwgZW5kXSA9IHJhbmdlOwogICAgLy8gbGV0IGJ5dGVidWYgPSBCdWZmZXJGaWxlKHNvdXJjZSk7CiAgICBsZXQgYnVmc3RyID0gdG9TdHJpbmcoYnl0ZWJ1Zi5zbGljZSguLi5yYW5nZSkpOwogICAgbGV0IGFycmJ1ZiA9IHRvQXJyYXlCdWZmZXIoYnVmc3RyKTsKCiAgICBsZXQgcmVwbGFjZW1lbnQgPSB0eXBlID09IFdoYXQuRVhQT1JUID8gbnVsbCA6IC8qRmlsZU1hcC5mb3IqLyBmaWxlOwogICAgbGV0IHsgYnl0ZU9mZnNldCB9ID0gbG9jOwogICAgbGV0IHA7CgogICAgaWYoZGVidWcgPiAyKSBjb25zb2xlLmxvZygnaW1wZXhwJywgY29tcGFjdCgyKSwgeyBjb2RlLCByYW5nZTogbmV3IE51bWVyaWNSYW5nZSguLi5yYW5nZSksIHJlcGxhY2VtZW50LCBsb2M6IGxvYyArICcnIH0pOwoKICAgIC8vICBpZihidWZzdHIgPT0gJyAnKSB0aHJvdyBuZXcgRXJyb3IoYGJ1ZnN0ciA9ICcgJyBsb2M6ICR7bG9jfSAke2xvYy5ieXRlT2Zmc2V0fSByYW5nZTogJHtyYW5nZX0gY29kZTogYCArIHRvU3RyaW5nKGJ5dGVidWYuc2xpY2UobG9jLmJ5dGVPZmZzZXQsIHJhbmdlWzFdICsgMTApKSk7CiAgICBpZih0eXBlb2YgZmlsZSA9PSAnc3RyaW5nJyAmJiAhcGF0aC5pc0ZpbGUoZmlsZSkpIHsKICAgICAgaWYoZGVidWcgPiAxKSBjb25zb2xlLmxvZyhgXHgxYlsxOzMxbUluZXhpc3RlbnRceDFiWzBtIGZpbGUgJyR7ZmlsZX0nYCk7CgogICAgICByZXBsYWNlbWVudCA9IG51bGw7CiAgICAgIC8vICBoZWFkZXIucHVzaChpbXBleHApOwogICAgfSBlbHNlIGlmKGZpbGUgJiYgcGF0aC5pc0ZpbGUoZmlsZSkpIHsKICAgICAgcmVwbGFjZW1lbnQgPSBmaWxlOwogICAgICAvLyBoZWFkZXIucHVzaChpbXBleHApOwogICAgfSBlbHNlIGlmKCh0eXBlb2YgcmVwbGFjZW1lbnQgPT0gJ3N0cmluZycgJiYgIXBhdGguaXNGaWxlKHJlcGxhY2VtZW50KSkgfHwgdHlwZSA9PSBXaGF0LklNUE9SVCB8fCB0eXBlb2YgZmlsZSA9PSAnc3RyaW5nJykgewogICAgICByZXBsYWNlbWVudCA9IG51bGw7CiAgICAgIC8vICBoZWFkZXIucHVzaChpbXBleHApOwogICAgfSBlbHNlIGlmKGNvZGUuc3RhcnRzV2l0aCgnZXhwb3J0JykpIHsKICAgICAgaWYoIXJlbW92ZUV4cG9ydHMpIGNvbnRpbnVlOwogICAgICByZXBsYWNlbWVudCA9IGZpbGU7CiAgICB9CgogICAgbGV0IGxpc3QgPSB0eXBlID09IFdoYXQuRVhQT1JUID8gZm9vdGVyIDogaGVhZGVyOwogICAgbGlzdC5wdXNoKGltcGV4cCk7CgogICAgaWYoZGVidWcgPj0gMikgY29uc29sZS5sb2coJ2ltcGV4cCcsIGNvbXBhY3QoMiksIHsgY29kZSwgcmFuZ2U6IG5ldyBOdW1lcmljUmFuZ2UoLi4ucmFuZ2UpLCByZXBsYWNlbWVudCwgbG9jOiBsb2MgKyAnJyB9KTsKICAgIGlmKGRlYnVnID4gMSkgY29uc29sZS5sb2coJ2ltcGV4cCcsIGNvbXBhY3QoMSksIHsgcmFuZ2U6IG5ldyBOdW1lcmljUmFuZ2UoLi4ucmFuZ2UpLCBsb2M6IGxvYyArICcnIH0pOwoKICAgIG1hcC5yZXBsYWNlUmFuZ2UocmFuZ2UsIHJlcGxhY2VtZW50KTsKICB9CgogIC8vICBkZWJ1Z0xvZygnY29tbWVudHMnLCBjb21tZW50cy5tYXAoKHtieXRlUmFuZ2UsIGxleGVtZX0pPT5bYnl0ZVJhbmdlLGxleGVtZSx0b1N0cmluZyhieXRlYnVmLnNsaWNlKC4uLmJ5dGVSYW5nZSkpXSkpOwogIC8vCiAgaWYocmVtb3ZlQ29tbWVudHMgJiYgY29tbWVudHMubGVuZ3RoKSB7CiAgICBpID0gLTE7CiAgICBkZWJ1Z0xvZyhgUmVtb3ZpbmcgJHtjb21tZW50cy5sZW5ndGh9IGNvbW1lbnRzIGZyb20gJyR7c291cmNlfSdgKTsKICAgIGZvcihsZXQgeyBieXRlUmFuZ2UsIGxleGVtZSB9IG9mIGNvbW1lbnRzKSB7CiAgICAgIGxldCBzbCA9IGJ5dGVidWYuc2xpY2UoLi4uYnl0ZVJhbmdlKTsKICAgICAgaWYoZGVidWcgPiAxKSBkZWJ1Z0xvZyhgY29tbWVudFskeysraX1dYCwgY29tcGFjdCgyKSwgeyBieXRlUmFuZ2UsIHN0cjogdG9TdHJpbmcoc2wpIH0pOwoKICAgICAgbWFwLnJlcGxhY2VSYW5nZShieXRlUmFuZ2UsIG51bGwpOwogICAgfQogIH0KCiAgLy9pZihkZWJ1ZyA+IDEpIGRlYnVnTG9nKCdtYXAnLCBtYXAuZHVtcCgpKTsKCiAgLy9pZihkZWJ1Zz4gMSkgY29uc29sZS5sb2coJ2R1bXAgbWFwJywgbWFwLmR1bXAoKSk7CgogIGVuZCA9IERhdGUubm93KCk7CgogIC8vIGNvbnNvbGUubG9nKGBTdWJzdGl0dXRpbmcgJyR7c291cmNlLnJlcGxhY2UoL15cLlwvLywgJycpfScgdG9vayAke2VuZCAtIHN0YXJ0fW1zYCk7CiAgcHJvY2Vzc2VkLmFkZChzb3VyY2UpOwoKICBpZihyZWN1cnNpdmUgPiAwKSB7CiAgICBmb3IobGV0IGltcCBvZiBmaWxlSW1wb3J0cykgewogICAgICBsZXQgeyBmaWxlLCByYW5nZSwgdG9rZW5zIH0gPSBpbXA7CiAgICAgIGlmKCEvXC4vLnRlc3QoZmlsZSkpIHsKICAgICAgICAvLyBjb25zb2xlLmxvZyhgQnVpbHRpbiBtb2R1bGUgJyR7ZmlsZX0nYCk7CiAgICAgICAgY29udGludWU7CiAgICAgIH0KICAgICAgaWYoIXBhdGguaXNGaWxlKGZpbGUpKSB7CiAgICAgICAgY29uc29sZS5sb2coYFBhdGggbXVzdCBleGlzdCAnJHtmaWxlfSdgKTsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgICBpZihwcm9jZXNzZWQuaGFzKGZpbGUpIHx8IGZpbGUgPT0gc291cmNlKSB7CiAgICAgICAgLy9jb25zb2xlLmxvZyhgQWxyZWFkeSBwcm9jZXNzZWQgJyR7ZmlsZX0nYCk7CiAgICAgICAgY29udGludWU7CiAgICAgIH0KICAgICAgZmlsZSA9IE1vZHVsZUxvYWRlcihOb3JtYWxpemVQYXRoKGZpbGUpKTsKCiAgICAgIHByb2Nlc3NlZC5hZGQoZmlsZSk7CgogICAgICBBZGREZXAoc291cmNlLCBmaWxlKTsKICAgICAgUmVzb2x2ZUltcG9ydHMoZmlsZSwgbG9nLCB0eXBlb2YgcmVjdXJzaXZlID09ICdudW1iZXInID8gcmVjdXJzaXZlIC0gMSA6IHJlY3Vyc2l2ZSwgZGVwdGggKyAxKTsKICAgIH0KICB9CiAgLyoKICBsZXQgZW5kID0gRGF0ZS5ub3coKTsKICBjb25zb2xlLmxvZyhgJyR7c291cmNlLnJlcGxhY2UoL15cLlwvLywgJycpfScgdG9vayAke2VuZCAtIHN0YXJ0fW1zYCk7CiovCgogIHN0ZC5nYygpOwoKICBpZihzaG93RGVwcykgewogICAgbGV0IGRlcHMgPSBbLi4uRGVwZW5kZW5jeVRyZWUoc291cmNlLCAnICcsIGZhbHNlLCAwLCAnICAgICcpXTsKCiAgICBjb25zb2xlLmxvZyhgRGVwZW5kZW5jaWVzIG9mICcke3NvdXJjZX0nOlxuJHtTcHJlYWRBbmRKb2luKGRlcHMpfWApOwogIH0KCiAgcmV0dXJuIG1hcDsKfQoKZnVuY3Rpb24gQWRkRGVwKHNvdXJjZSwgZmlsZSkgewogIHNvdXJjZSA9IE5vcm1hbGl6ZVBhdGgoc291cmNlKTsKCiAgaWYoZGVidWcgPiAyKSBjb25zb2xlLmxvZyhgQWRkIGRlcGVuZGVuY3kgJyR7ZmlsZX0nIHRvICcke3NvdXJjZX0nYCk7CiAgZGVwZW5kZW5jeVRyZWUoc291cmNlKS5wdXNoKGZpbGUpOwp9CgpmdW5jdGlvbiBOb25XUyh0b2tlbnMpIHsKICByZXR1cm4gdG9rZW5zLmZpbHRlcih0b2sgPT4gdG9rLnR5cGUgIT0gJ3doaXRlc3BhY2UnKTsKfQoKZnVuY3Rpb24gVG9rZW5TZXF1ZW5jZSh0b2tlbnMpIHsKICByZXR1cm4gZGVmaW5lKAogICAgdG9rZW5zLm1hcCh0b2sgPT4gdG9rLmxleGVtZSksCiAgICB7CiAgICAgIHRvU3RyaW5nKCkgewogICAgICAgIHJldHVybiB0aGlzLmpvaW4oJycpOwogICAgICB9CiAgICB9CiAgKTsKfQoKZnVuY3Rpb24gVW5xdW90ZShsZXhlbWUpIHsKICByZXR1cm4gbGV4ZW1lLnJlcGxhY2UoLyheW1wnXCJcYF18W1wnXCJcYF0kKS9nLCAnJyk7Cn0KCmZ1bmN0aW9uIExpdGVyYWxTZXF1ZW5jZSh0b2tlbnMpIHsKICByZXR1cm4gdG9rZW5zLnJlZHVjZSgoYWNjLCB0b2spID0+IGFjYyArIHRvay5sZXhlbWUsICcnKTsKfQoKZnVuY3Rpb24gVW50aWxFT0woaWR4LCB0b2tlbnMpIHsKICByZXR1cm4gVW50aWwoaWR4LCB0b2tlbnMsIFRva0lzKG51bGwsICc7JykpOwp9CgpmdW5jdGlvbiBVbnRpbChpZHgsIHRva2VucywgcHJlZCA9IFRva0lzKG51bGwsIFsnOycsICdcbiddKSkgewogIGxldCBpOwogIGZvcihpID0gaWR4OyB0b2tlbnNbaV07IGkrKykgewogICAgaWYocHJlZCh0b2tlbnNbaV0pKSBicmVhazsKICB9CiAgcmV0dXJuIHRva2Vucy5zbGljZShpZHgsIGkpOwp9CgpmdW5jdGlvbiBXaG9sZUxpbmUoaWR4LCB0b2tlbnMpIHsKICBsZXQgaSwgajsKICBmb3IoaSA9IGlkeDsgdG9rZW5zW2ldOyBpKyspIHsKICAgIGlmKFsnOycsICdcbiddLmluZGV4T2YodG9rZW5zW2ldLmxleGVtZSkgIT0gLTEpIGJyZWFrOwogIH0KICBmb3IoaiA9IGlkeDsgaiA+IDA7IGotLSkgewogICAgY29uc3QgdG9rID0gdG9rZW5zW2ogLSAxXTsKICAgIGlmKCF0b2sgfHwgWyc7JywgJ1xuJ10uaW5kZXhPZih0b2tlbnNbaiAtIDFdLmxleGVtZSkgIT0gLTEpIGJyZWFrOwogIH0KICByZXR1cm4gdG9rZW5zLnNsaWNlKGosIGkpOwp9CgpmdW5jdGlvbiBSYW5nZShmaWxlLCBzdGFydCwgZW5kKSB7CiAgbGV0IGJ1ZjsKICBpZigoYnVmID0gQnVmZmVyRmlsZShmaWxlKSkpIHsKICAgIHRoaXMuZmlsZSA9IGZpbGU7CiAgICB0aGlzLnN0YXJ0ID0gc3RhcnQgPz8gMDsKICAgIHRoaXMuZW5kID0gZW5kID8/IGJ1Zi5ieXRlTGVuZ3RoOwogICAgcmV0dXJuIHRoaXM7CiAgfQogIHJldHVybiBudWxsOwp9CgpSYW5nZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsKICBsZXQgYnVmID0gQnVmZmVyRmlsZSh0aGlzLmZpbGUpOwogIHJldHVybiBidWYuc2xpY2UodGhpcy5zdGFydCwgdGhpcy5lbmQpOwp9OwoKZnVuY3Rpb24gSW5SYW5nZShbc3RhcnQsIGVuZF0sIGkpIHsKICBpZihpID49IHN0YXJ0ICYmIGkgPCBlbmQpIHJldHVybiB0cnVlOwogIHJldHVybiBmYWxzZTsKfQoKZnVuY3Rpb24gSXNSYW5nZShvYmopIHsKICByZXR1cm4gaXNPYmplY3Qob2JqKSAmJiAoJ2xlbmd0aCcgaW4gb2JqIHx8ICdzdGFydCcgaW4gb2JqIHx8IG9iaiBpbnN0YW5jZW9mIE51bWVyaWNSYW5nZSk7Cn0KCmNsYXNzIE51bWVyaWNSYW5nZSBleHRlbmRzIEFycmF5IHsKICBjb25zdHJ1Y3RvcihzdGFydCwgZW5kKSB7CiAgICBzdXBlcigyKTsKICAgIGlmKGlzTmFOKCtzdGFydCkpIHN0YXJ0ID0gMDsKICAgIHRoaXNbMF0gPSArc3RhcnQ7CiAgICBpZihpc05hTigrZW5kKSkgZW5kID0gdGhpc1swXTsKICAgIHRoaXNbMV0gPSBlbmQ7CiAgfQoKICBnZXQgc3RhcnQoKSB7CiAgICByZXR1cm4gdGhpc1swXTsKICB9CiAgc2V0IHN0YXJ0KHZhbHVlKSB7CiAgICB0aGlzWzBdID0gK3ZhbHVlOwogIH0KCiAgZ2V0IGVuZCgpIHsKICAgIHJldHVybiB0aGlzWzFdOwogIH0KICBzZXQgZW5kKHZhbHVlKSB7CiAgICB0aGlzWzFdID0gK3ZhbHVlOwogIH0KCiAgc3RhdGljIGZyb20ocmFuZ2UpIHsKICAgIGlmKGlzT2JqZWN0KHJhbmdlKSAmJiByYW5nZSBpbnN0YW5jZW9mIE51bWVyaWNSYW5nZSkgcmV0dXJuIHJhbmdlOwoKICAgIHRyeSB7CiAgICAgIGxldCByID0gbmV3IE51bWVyaWNSYW5nZSguLi5yYW5nZSk7CiAgICAgIHJhbmdlID0gcjsKICAgIH0gY2F0Y2goZSkge30KICAgIGNvbnNvbGUubG9nKCdOdW1lcmljUmFuZ2UuZnJvbScsIHJhbmdlKTsKICAgIHJldHVybiByYW5nZTsKICB9CgogIHN0YXRpYyAqaG9sZXMocmFuZ2VzLCBvbmx5ID0gZmFsc2UpIHsKICAgIGxldCBwcmV2ID0gWzAsIDBdOwogICAgLy9jb25zb2xlLmxvZygncmFuZ2VzJywgY29uc29sZS5jb25maWcoeyBjb21wYWN0OiAxIH0pLCByYW5nZXMpOwogICAgbGV0IGkgPSAtMTsKICAgIGZvcihsZXQgcmFuZ2Ugb2YgcmFuZ2VzKSB7CiAgICAgIGlmKElzUmFuZ2UocmFuZ2UpKSB7CiAgICAgICAgcmFuZ2UgPSBbLi4ucmFuZ2VdOwogICAgICAgIGNvbnNvbGUubG9nKCdyYW5nZSMnICsgKytpLCBpbnNwZWN0KHJhbmdlKSk7CgogICAgICAgIGlmKElzUmFuZ2UocHJldikgJiYgSXNSYW5nZShyYW5nZSkpIHsKICAgICAgICAgIC8vICAgICBpZihyYW5nZVswXSA8IHByZXZbMV0pIHJhbmdlWzBdID0gcHJldlsxXTsKICAgICAgICAgIGxldCBbc3RhcnQsIGVuZF0gPSByYW5nZTsKCiAgICAgICAgICBpZihzdGFydCA+PSBwcmV2WzFdKSB5aWVsZCBuZXcgTnVtZXJpY1JhbmdlKHByZXZbMV0sIHN0YXJ0KTsKICAgICAgICAgIC8vICBlbHNlIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCByYW5nZSBgICsgaW5zcGVjdChbc3RhcnQsIGVuZF0pICsgJyAnICsgaW5zcGVjdCh7IHByZXY6IFsuLi5wcmV2XSB9KSk7CiAgICAgICAgfQoKICAgICAgICBpZighb25seSkgewogICAgICAgICAgaWYoIShpc09iZWN0KHJhbmdlKSAmJiByYW5nZSBpbnN0YW5jZW9mIE51bWVyaWNSYW5nZSkpIHJhbmdlID0gbmV3IE51bWVyaWNSYW5nZSguLi5yYW5nZSk7CiAgICAgICAgICB5aWVsZCByYW5nZTsKICAgICAgICB9CiAgICAgIH0KICAgICAgcHJldiA9IHJhbmdlOwogICAgfQogIH0KCiAgc3RhdGljIGJldHdlZW4oW3MxLCBlMV0sIFtzMiwgZTJdKSB7CiAgICBpZihzMiA+IGUxKSByZXR1cm4gW2UxLCBzMl07CgogICAgaWYoczEgPiBlMikgcmV0dXJuIFtlMiwgczFdOwogIH0KfQoKZGVmaW5lKE51bWVyaWNSYW5nZS5wcm90b3R5cGUsIHsKICBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ051bWVyaWNSYW5nZScsCiAgW1N5bWJvbC5pbnNwZWN0XShkZXB0aCwgb3B0cykgewogICAgY29uc3QgW3N0YXJ0LCBlbmRdID0gdGhpczsKICAgIGxldCBzID0gJyc7CiAgICAvL3MgKz0gYFx4MWJbMTszMW1OdW1lcmljUmFuZ2VceDFiWzBtKGA7CiAgICBjb25zdCBwYWQgPSBzID0+IChzICsgJycpLnBhZEVuZCg1KTsKCiAgICBzICs9IGBceDFiWzE7MzZtJHtwYWQoc3RhcnQpfVx4MWJbMG1gOwogICAgcyArPSBgIC0gYDsKICAgIC8vICBzICs9IGBceDFiWzE7MzZtJHtwYWQoZW5kKX1ceDFiWzBtYDsKICAgIHMgKz0gYFx4MWJbMTszNm0ke3BhZCgnKycgKyAoZW5kIC0gc3RhcnQpKX1ceDFiWzBtYDsKICAgIC8vcys9YClgOwogICAgcyA9IGBbICR7c30gXWA7CiAgICByZXR1cm4gczsKICB9Cn0pOwoKY2xhc3MgRmlsZU1hcCBleHRlbmRzIEFycmF5IHsKICBjb25zdHJ1Y3RvcihmaWxlLCBidWYpIHsKICAgIHN1cGVyKCk7CgogICAgaWYodHlwZW9mIGZpbGUgIT0gJ251bWJlcicpIHsKICAgICAgLy9jb25zb2xlLmxvZygnRmlsZU1hcC5jb25zdHJ1Y3Rvcicse2ZpbGUsYnVmfSk7CiAgICAgIHRoaXMuZmlsZSA9IGZpbGU7CiAgICAgIGJ1ZiA/Pz0gQnVmZmVyRmlsZShmaWxlKTsKICAgICAgaWYoIWJ1ZikgdGhyb3cgbmV3IEVycm9yKGBGaWxlTWFwIGJ1ZiA9PSAke2J1Zn1gKTsKICAgICAgLy90aGlzLnB1c2goW25ldyBOdW1lcmljUmFuZ2UoMCwgYnVmLmJ5dGVMZW5ndGgpLCBidWZdKTsKICAgICAgdGhpcy5wdXNoKFtbMCwgYnVmLmJ5dGVMZW5ndGhdLCBidWZdKTsKICAgICAgZmlsZU1hcHMuc2V0KGZpbGUsIHRoaXMpOwogICAgfQogIH0KCiAgc3RhdGljIGVtcHR5KGZpbGUpIHsKICAgIGlmKHR5cGVvZiBmaWxlID09ICdzdHJpbmcnKSBmaWxlID0gRmlsZU1hcC5mb3IoZmlsZSk7CgogICAgaWYoaXNPYmplY3QoZmlsZSkgJiYgZmlsZSBpbnN0YW5jZW9mIEZpbGVNYXApIHJldHVybiBmaWxlLmlzRW1wdHkoKTsKICB9CgogIGlzRW1wdHkoKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICBzdGF0aWMgZm9yKGZpbGUsIGJ1ZikgewogICAgLy8gY29uc29sZS5sb2coJ0ZpbGVNYXAuZm9yJywgeyBmaWxlLCBidWYgfSk7CiAgICBsZXQgbTsKICAgIGlmKGZpbGUgJiYgKG0gPSBmaWxlTWFwcy5nZXQoZmlsZSkpKSByZXR1cm4gbTsKICAgIGlmKGlzT2JqZWN0KGZpbGUpICYmIGZpbGUgaW5zdGFuY2VvZiBGaWxlTWFwKSByZXR1cm4gZmlsZTsKICAgIGVsc2UgaWYoZmlsZSA9PT0gbnVsbCAmJiAhYnVmKSB7CiAgICAgIGxldCBvYmogPSB7CiAgICAgICAgaXNFbXB0eSgpIHsKICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0sCiAgICAgICAgdG9TdHJpbmcoKSB7CiAgICAgICAgICByZXR1cm4gJyc7CiAgICAgICAgfSwKICAgICAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ0ZpbGVNYXAoZW1wdHkpJwogICAgICB9OwogICAgICByZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKG9iaiwgRmlsZU1hcC5wcm90b3R5cGUpOwogICAgfQogICAgaWYoZmlsZU1hcHMuaGFzKGZpbGUpKSByZXR1cm4gZmlsZU1hcHMuZ2V0KGZpbGUpOwogICAgcmV0dXJuIG5ldyBGaWxlTWFwKGZpbGUsIGJ1Zik7CiAgfQoKICBzcGxpdEF0KHBvcykgewogICAgbGV0IGkgPSB0aGlzLmZpbmRJbmRleCgoW3JhbmdlLCBidWZdKSA9PiByYW5nZSAmJiBJblJhbmdlKHJhbmdlLCBwb3MpKTsKICAgIGlmKGkgIT0gLTEpIHsKICAgICAgbGV0IFtyYW5nZSwgYnVmXSA9IHRoaXNbaV07CiAgICAgIGxldCBbc3RhcnQsIGVuZF0gPSByYW5nZTsKICAgICAgdGhpcy5zcGxpY2UoaSArIDEsIDAsIFtbKHJhbmdlWzFdID0gcG9zKSwgZW5kXSwgYnVmXSk7CiAgICAgIHJldHVybiBpICsgMTsKICAgIH0KICB9CgogIHNsaWNlQXQobikgewogICAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5maW5kSW5kZXguY2FsbCh0aGlzLCAoW3JhbmdlLCBidWZdKSA9PiAocmFuZ2UgPyBJblJhbmdlKHJhbmdlLCBuKSA6IGZhbHNlKSk7CiAgfQoKICByZXBsYWNlUmFuZ2UocmFuZ2UsIGZpbGUpIHsKICAgIGlmKEFycmF5LmlzQXJyYXkocmFuZ2UpICYmICEocmFuZ2UgaW5zdGFuY2VvZiBOdW1lcmljUmFuZ2UpKSByYW5nZSA9IG5ldyBOdW1lcmljUmFuZ2UoLi4ucmFuZ2UpOwogICAgY29uc3Qgc2xpY2VJbmRleCA9IG4gPT4gewogICAgICBsZXQgcjsKICAgICAgaWYodGhpc1swXSAmJiB0aGlzWzBdWzBdICE9IG51bGwpIHsKICAgICAgICBjb25zdCByYW5nZSA9IG5ldyBOdW1lcmljUmFuZ2UoLi4udGhpc1swXVswXSk7CiAgICAgICAgaWYobiA8IHJhbmdlLnN0YXJ0KSByZXR1cm4gMDsKICAgICAgfQogICAgICBsZXQgaTsKICAgICAgY29uc3QgeyBsZW5ndGggfSA9IHRoaXM7CiAgICAgIGZvcihpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgICAgY29uc3QgW2l0ZW1dID0gdGhpc1tpXTsKICAgICAgICBpZihpdGVtKSB7CiAgICAgICAgICBjb25zdCBbcywgZV0gPSBpdGVtOwogICAgICAgICAgLy9pZiAobiA8IHMpIHsgLS1pOyBicmVhazsgfQogICAgICAgICAgaWYobiA8IGUpIGJyZWFrOwogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gaTsKICAgIH07CiAgICBpZihkZWJ1ZyA+IDIpCiAgICAgIGNvbnNvbGUubG9nKCdGaWxlTWFwLnJlcGxhY2VSYW5nZScsIGNvbXBhY3QoMiwgeyBjdXN0b21JbnNwZWN0OiB0cnVlIH0pLCB7CiAgICAgICAgZmlsZSwKICAgICAgICByYW5nZTogW3JhbmdlWzBdLCByYW5nZVsxXV0KICAgICAgfSk7CiAgICBsZXQgc3RhcnQgPSBzbGljZUluZGV4KHJhbmdlWzBdKTsKICAgIGxldCBlbmQgPSBzbGljZUluZGV4KHJhbmdlWzFdKTsKICAgIGNvbnN0IHsgbGVuZ3RoIH0gPSB0aGlzOwogICAgaWYoZGVidWcgPiAyKQogICAgICBjb25zb2xlLmxvZygnRmlsZU1hcC5yZXBsYWNlUmFuZ2UnLCBjb21wYWN0KDIsIHsgY3VzdG9tSW5zcGVjdDogdHJ1ZSB9KSwgewogICAgICAgIHN0YXJ0LAogICAgICAgIGVuZCwKICAgICAgICBsZW5ndGgsCiAgICAgICAgdGhpczogdGhpcwogICAgICB9KTsKICAgIGlmKHJhbmdlWzBdIDwgdGhpc1tzdGFydF1bMF0pIHJhbmdlWzBdID0gdGhpc1tzdGFydF1bMF07CiAgICBpZighdGhpc1tzdGFydF1bMF0pIHRocm93IG5ldyBFcnJvcihgcmFuZ2U9JHtyYW5nZX1cbmxlbmd0aD0ke3RoaXMubGVuZ3RofVxuc3RhcnQ9JHtzdGFydH1cbmVuZD0ke2VuZH1cbnRoaXNbJHtzdGFydH1dPSR7aW5zcGVjdCh0aGlzW3N0YXJ0XSl9XG50aGlzWyR7c3RhcnQgLSAxfV09JHtpbnNwZWN0KHRoaXNbc3RhcnQgLSAxXSl9XG50aGlzWyR7c3RhcnQgKyAxfV09JHtpbnNwZWN0KHRoaXNbc3RhcnQgKyAxXSl9YCk7CiAgICBpZihyYW5nZVswXSA+IHRoaXNbc3RhcnRdWzBdWzBdKSB7CiAgICAgIGlmKHN0YXJ0ID09IGVuZCkgewogICAgICAgIGxldCBbcmFuZ2UsIGJ1Zl0gPSB0aGlzW3N0YXJ0XTsKICAgICAgICBsZXQgaW5zZXJ0ID0gW25ldyBOdW1lcmljUmFuZ2UoLi4ucmFuZ2UpLCBidWZdOwogICAgICAgIHRoaXMuc3BsaWNlKCsrZW5kLCAwLCBpbnNlcnQpOwogICAgICB9CiAgICAgIHRoaXNbc3RhcnRdWzBdWzFdID0gcmFuZ2VbMF07CiAgICAgIGlmKHRoaXNbZW5kXSAmJiB0aGlzW2VuZF1bMF0pIHRoaXNbZW5kXVswXVswXSA9IHJhbmdlWzFdOwogICAgfSBlbHNlIHsKICAgICAgdGhpc1tzdGFydF1bMF1bMF0gPSByYW5nZVsxXTsKICAgICAgdGhpcy5zcGxpY2Uoc3RhcnQsIDAsIFtudWxsLCBmaWxlXSk7CiAgICAgIGZpbGUgPSBudWxsOwogICAgfQoKICAgIGlmKGZpbGUgIT0gbnVsbCkgdGhpcy5zcGxpY2Uoc3RhcnQgKyAxLCAwLCBbbnVsbCwgZmlsZV0pOwogIH0KCiAgZHVtcCgpIHsKICAgIGNvbnN0IHNvdXJjZSA9IHRoaXMuZmlsZTsKICAgIHJldHVybiAoCiAgICAgIGBGaWxlTWFwIHtcblx0ZmlsZTogXHgxYlszODs1OzIxNW0ke3NvdXJjZX0sXG5cdFx4MWJbMG1bIGAgKwogICAgICBbLi4udGhpc10KICAgICAgICAubWFwKChpdGVtLCBpKSA9PiBpdGVtLmNvbmNhdChbdGhpcy5hdChpKV0pKQogICAgICAgIC5yZWR1Y2UoKGFjYywgW3JhbmdlLCBidWYsIHN0cl0sIGkpID0+IHsKICAgICAgICAgIGxldCBzID0gYWNjICsgYFxuXHRcdFsgYDsKICAgICAgICAgIHMgKz0gKCcnICsgKHJhbmdlID8gJ1snICsgTnVtZXJpY1JhbmdlLmZyb20ocmFuZ2UpICsgJ10nIDogcmFuZ2UpKS5wYWRFbmQoMTApOwogICAgICAgICAgcyArPSAnLCAnOwogICAgICAgICAgaWYoaXNPYmplY3QoYnVmKSAmJiAnYnl0ZUxlbmd0aCcgaW4gYnVmKSB7CiAgICAgICAgICAgIGxldCBmaWxlbmFtZSA9IGJ1ZmZlclJlZi5nZXQoYnVmKTsKICAgICAgICAgICAgYnVmID0gZmlsZW5hbWUgPz8gYDx0aGlzPmA7CiAgICAgICAgICB9CiAgICAgICAgICBpZih0eXBlb2YgYnVmID09ICdzdHJpbmcnKSBidWYgPSBwYXRoLm5vcm1hbGl6ZShidWYpOwogICAgICAgICAgcyArPSBpbnNwZWN0KGJ1ZiwgeyBtYXhBcnJheUxlbmd0aDogMzAgfSk7CiAgICAgICAgICBzICs9IGAgXSxgOwogICAgICAgICAgcmV0dXJuIHM7CiAgICAgICAgfSwgJycpICsKICAgICAgYFxuXHRdXG59YAogICAgKTsKICB9CgogIGF0KGkpIHsKICAgIGlmKCF0aGlzW2ldKSByZXR1cm4gbnVsbDsKCiAgICBjb25zdCBbcmFuZ2UsIGJ1Zl0gPSB0aGlzW2ldOwogICAgaWYocmFuZ2UgJiYgaXNPYmplY3QoYnVmKSkgewogICAgICBjb25zdCBbc3RhcnQsIGVuZF0gPSByYW5nZTsKICAgICAgLy9jb25zb2xlLmxvZygnYnVmJywgYnVmKTsKICAgICAgcmV0dXJuIGJ1Zi5zbGljZShzdGFydCwgZW5kKTsKICAgIH0KICAgIGlmKHJhbmdlID09IG51bGwpIHsKICAgICAgbGV0IGZpbGUgPSBidWY7CiAgICAgIGxldCBzdHIgPSBidWY7CiAgICAgIGlmKHR5cGVvZiBzdHIgPT0gJ3N0cmluZycpIHsKICAgICAgICBpZighcGF0aC5pc0ZpbGUoc3RyKSkgdGhyb3cgRXJyb3IoYEZpbGVNYXBceDFiWzE7MzVtPCR7dGhpcy5maWxlfT5ceDFiWzBtIEluZXhpc3RlbnQgZmlsZSAnJHtzdHJ9J2ApOwogICAgICAgIHN0ciA9IEZpbGVNYXAuZm9yKHN0cik7CiAgICAgIH0KICAgICAgcmV0dXJuIHN0cjsKICAgIH0KICAgIGlmKGJ1ZiA9PT0gLTEpIHJldHVybiBudWxsOwogICAgdGhyb3cgbmV3IEVycm9yKGBhdCgke2l9KSBgICsgaW5zcGVjdCh7IHJhbmdlLCBidWYgfSkpOwogIH0KCiAgdG9BcnJheSgpIHsKICAgIHJldHVybiB0aGlzLm1hcCgocywgaSkgPT4gdGhpcy5hdChpKSk7CiAgfQoKICBob2xlcygpIHsKICAgIGxldCByYW5nZXMgPSBbLi4udGhpcy5tYXAoKFtyYW5nZV0pID0+IHJhbmdlKV0uc29ydChDb21wYXJlUmFuZ2UpOwogICAgLy9jb25zb2xlLmxvZygncmFuZ2VzJywgY29uc29sZS5jb25maWcoeyBkZXB0aDogSW5maW5pdHkgfSksIHJhbmdlcyk7CiAgICBsZXQgaXRlciA9IE51bWVyaWNSYW5nZS5ob2xlcyhyYW5nZXMsIHRydWUpOwogICAgLy9jb25zb2xlLmxvZygnaXRlcicsIGl0ZXIpOwogICAgbGV0IGhvbGVzID0gWy4uLml0ZXJdOwogICAgbGV0IGxlbiA9IGhvbGVzLmxlbmd0aDsKICAgIGZvcihsZXQgaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICBjb25zdCBob2xlID0gaG9sZXNbaV07CiAgICAgIGNvbnN0IFtyYW5nZV0gPSB0aGlzW2ldOwogICAgICBjb25zb2xlLmxvZygnIycgKyAoaSArIDEpLCBjb21wYWN0KDIpLCBpbnNwZWN0KHsgaG9sZSwgcmFuZ2UgfSwgeyBjb21wYWN0OiAyLCBkZXB0aDogSW5maW5pdHkgfSkpOwogICAgfQogICAgLy9jb25zb2xlLmxvZygnaG9sZXMnLCBob2xlcyk7CiAgICByZXR1cm4gaG9sZXM7CiAgfQoKICBmaXJzdENodW5rKCkgewogICAgcmV0dXJuIHRoaXMuZmluZEluZGV4KChbcmFuZ2UsIGJ1Zl0sIGkpID0+IHJhbmdlICYmICFJc1doaXRlU3BhY2UodG9TdHJpbmcoYnVmLnNsaWNlKC4uLnJhbmdlKSkpKTsKICB9CgogIGxhc3RDaHVuaygpIHsKICAgIHJldHVybiB0aGlzLmZpbmRMYXN0SW5kZXgoKFtyYW5nZSwgYnVmXSwgaSkgPT4gcmFuZ2UgJiYgIUlzV2hpdGVTcGFjZSh0b1N0cmluZyhidWYuc2xpY2UoLi4ucmFuZ2UpKSkpOwogIH0KCiAgd3JpdGUob3V0LCBkZXB0aCA9IDAsIHNlcmlhbCkgewogICAgaWYoZGVidWcgPiAyKSBkZWJ1Z0xvZyhgRmlsZU1hcFx4MWJbMTszNW08JHt0aGlzLmZpbGV9Plx4MWJbMG0ud3JpdGVgLCBjb21wYWN0KDEpLCB7IG91dCwgZGVwdGgsIHNlcmlhbCB9KTsKICAgIGxldCByLAogICAgICB3cml0dGVuID0gMDsKICAgIGxldCB7IGxlbmd0aCB9ID0gdGhpczsKICAgIHNlcmlhbCA/Pz0gcmFuZEludCgwLCAxMDAwKTsKICAgIGlmKHRoaXMuc2VyaWFsID09PSBzZXJpYWwpIHJldHVybiAwOwogICAgdGhpcy5zZXJpYWwgPSBzZXJpYWw7CiAgICBpZih0eXBlb2Ygb3V0ID09ICdzdHJpbmcnKSBvdXQgPSBGaWxlV3JpdGVyKG91dCk7CiAgICBsZXQgZmlyc3QgPSB0aGlzLmZpcnN0Q2h1bmsoKTsKICAgIGxldCBsYXN0ID0gdGhpcy5sYXN0Q2h1bmsoKTsKCiAgICBpZihkZWJ1ZyA+IDIpCiAgICAgIGRlYnVnTG9nKGBGaWxlTWFwXHgxYlsxOzM1bTwke3RoaXMuZmlsZX0+XHgxYlswbS53cml0ZWAsIGNvbXBhY3QoMiksIHsKICAgICAgICBjaHVua3M6IFt0aGlzLmF0KGZpcnN0KSwgdGhpcy5hdChsYXN0KV0KICAgICAgfSk7CgogICAgZm9yKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgIGxldCBzdHIgPSB0aGlzLmF0KGkpOwogICAgICBpZihzdHIgPT09IG51bGwgfHwgc3RyID09PSB1bmRlZmluZWQpIGNvbnRpbnVlOwogICAgICAvL2NvbnNvbGUubG9nKCdzdHInLHN0cik7CiAgICAgIGxldCBsZW4gPSBzdHIuYnl0ZUxlbmd0aCA/PyBzdHIubGVuZ3RoOwoKICAgICAgaWYoaXNPYmplY3Qoc3RyKSkgewogICAgICAgIGlmKHN0ciBpbnN0YW5jZW9mIEZpbGVNYXApIHsKICAgICAgICAgIGlmKHN0ci5zZXJpYWwgPT09IHNlcmlhbCkgewogICAgICAgICAgICByID0gMDsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICB9CiAgICAgICAgICByID0gc3RyLndyaXRlKG91dCwgZGVwdGggKyAxLCBzZXJpYWwpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAvLyBjb25zb2xlLmxvZygnb3V0Jywgb3V0KTsKICAgICAgICAgIGlmKGkgPT0gZmlyc3QpIG91dC5wdXRzKEZpbGVCYW5uZXJDb21tZW50KHRoaXMuZmlsZSwgMCkpOwoKICAgICAgICAgIHIgPSBvdXQud3JpdGUoc3RyLCBsZW4pOwogICAgICAgICAgaWYoaSA9PSBsYXN0KSBvdXQucHV0cyhGaWxlQmFubmVyQ29tbWVudCh0aGlzLmZpbGUsIDEpKTsKCiAgICAgICAgICBpZihyICE9IGxlbikgciA9IC0xOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZ2V0VHlwZU5hbWUoc3RyKSk7CiAgICAgIH0KICAgICAgLy9kZWJ1Z0xvZyhgRmlsZU1hcFx4MWJbMTszNW08JHt0aGlzLmZpbGV9Plx4MWJbMG0ud3JpdGVgLCBgWyR7aSArIDF9LyR7bGVuZ3RofV1gLCBgcmVzdWx0PSR7cn1gLCBjb21wYWN0KDEsIHsgY3VzdG9tSW5zcGVjdDogdHJ1ZSB9KSwgeyBkZXB0aCB9LCBvdXQuaW5zcGVjdCgpKTsKICAgICAgaWYociA8IDApIGJyZWFrOwogICAgICB3cml0dGVuICs9IHI7CiAgICB9CiAgICByZXR1cm4gd3JpdHRlbjsKICB9CgogIHRvU3RyaW5nKGZuID0gRmlsZUJhbm5lckNvbW1lbnQpIHsKICAgIGNvbnN0IG4gPSB0aGlzLmxlbmd0aDsKICAgIGxldCBzID0gJycsCiAgICAgIGk7CiAgICBmb3IoaSA9IDA7IGkgPCBuOyBpKyspIHsKICAgICAgbGV0IHN0cjsKICAgICAgY29uc3QgW3JhbmdlLCBidWZdID0gdGhpc1tpXTsKICAgICAgaWYocmFuZ2UgPT09IG51bGwgJiYgYnVmID09PSBudWxsKSBjb250aW51ZTsKICAgICAgaWYoKHN0ciA9IHRoaXMuYXQoaSkpID09PSBudWxsKSBjb250aW51ZTsKICAgICAgaWYocmFuZ2UgPT09IG51bGwpIGlmICh0eXBlb2YgYnVmID09ICdzdHJpbmcnKSAvKmlmKHR5cGVvZiBzdHIgPT0gJ3N0cmluZycpKi8gc3RyID0gZm4oYnVmLCAwKSArIHN0ciArIGZuKGJ1ZiwgMSk7CiAgICAgIHMgKz0gc3RyOwogICAgfQogICAgcmV0dXJuIHM7CiAgfQp9CkZpbGVNYXAucHJvdG90eXBlW1N5bWJvbC50b1N0cmluZ1RhZ10gPSAnRmlsZU1hcCc7CkZpbGVNYXAucHJvdG90eXBlW1N5bWJvbC5pbnNwZWN0XSA9IGZ1bmN0aW9uKGRlcHRoLCBvcHRzKSB7CiAgbGV0IGFyciA9IFsuLi50aGlzXS5tYXAoKFtyYW5nZSwgYnVmXSwgaSkgPT4gewogICAgaWYocmFuZ2UpIHsKICAgICAgYnVmID0gYnVmLnNsaWNlKC4uLnJhbmdlKTsKICAgIH0KICAgIHJldHVybiBbcmFuZ2UsIGlzT2JqZWN0KGJ1ZikgJiYgdHlwZXMuaXNBcnJheUJ1ZmZlcihidWYpID8gdGhpcy5maWxlIDogYnVmXS5tYXAoKGl0ZW0sIGkpID0+IGluc3BlY3QoaXRlbSwgeyAuLi5vcHRzLCBjb21wYWN0OiAxLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0pLnBhZEVuZChpID09IDAgPyAzMSA6IDApKS5qb2luKCcsICcpOwogIH0pOwogIHJldHVybiAoCiAgICBgRmlsZU1hcFx4MWJbMTszNW08JHt0aGlzLmZpbGV9Plx4MWJbMG0gYCArIGFyci5tYXAoaXRlbSA9PiBgWyAke2l0ZW19IF1gKS5qb2luKCcsXG4gICcpID8/CiAgICBpbnNwZWN0KGFyciwgewogICAgICAuLi5vcHRzLAogICAgICBjb21wYWN0OiAyLAogICAgICBtYXhBcnJheUxlbmd0aDogSW5maW5pdHksCgogICAgICBjdXN0b21JbnNwZWN0OiB0cnVlLAogICAgICBkZXB0aDogZGVwdGggKyA0CiAgICB9KQogICk7Cn07CgpmdW5jdGlvbiBCdWZmZXJGaWxlKGZpbGUsIGJ1ZikgewogIGZpbGUgPSBwYXRoLm5vcm1hbGl6ZShmaWxlKTsKICBpZighYnVmKSBidWYgPSBmaWxlQnVmZmVycy5nZXQoZmlsZSkgPz8gYnVmZmVyc1tmaWxlXTsKCiAgaWYoIWJ1ZikgYnVmID0gYnVmZmVyc1tmaWxlXSA/PyBmcy5yZWFkRmlsZVN5bmMoZmlsZSwgeyBmbGFnOiAncicgfSk7CgogIGlmKHR5cGVvZiBidWYgPT0gJ29iamVjdCcgJiYgYnVmICE9PSBudWxsKSB7CiAgICBidWZmZXJSZWYuc2V0KGJ1ZiwgZmlsZSk7CiAgICBmaWxlQnVmZmVycy5zZXQoZmlsZSwgYnVmKTsKICAgIGJ1Zi5maWxlID0gZmlsZTsKICB9CiAgcmV0dXJuIGJ1ZjsKfQoKZnVuY3Rpb24gQnVmZmVyTGVuZ3RocyhmaWxlKSB7CiAgcmV0dXJuIGJ1ZmZlcnNbZmlsZV0ubWFwKGIgPT4gYi5ieXRlTGVuZ3RoKTsKfQoKZnVuY3Rpb24gQnVmZmVyT2Zmc2V0cyhmaWxlKSB7CiAgcmV0dXJuIGJ1ZmZlcnNbZmlsZV0ucmVkdWNlKChbcG9zLCBsaXN0XSwgYikgPT4gW3BvcyArIGIuYnl0ZUxlbmd0aCwgbGlzdC5jb25jYXQoW3Bvc10pXSwgWzAsIFtdXSlbMV07Cn0KCmZ1bmN0aW9uIEJ1ZmZlclJhbmdlcyhmaWxlKSB7CiAgcmV0dXJuIGJ1ZmZlcnNbZmlsZV0ucmVkdWNlKChbcG9zLCBsaXN0XSwgYikgPT4gW3BvcyArIGIuYnl0ZUxlbmd0aCwgbGlzdC5jb25jYXQoW1twb3MsIGIuYnl0ZUxlbmd0aF1dKV0sIFswLCBbXV0pWzFdOwp9CgpmdW5jdGlvbiBXcml0ZUZpbGUoZmlsZSwgdG9rKSB7CiAgbGV0IGYgPSBzdGQub3BlbihmaWxlLCAndysnKTsKICBmLnB1dHModG9rKTsKICBjb25zb2xlLmxvZygnV3JvdGUgIicgKyBmaWxlICsgJyI6ICcgKyB0b2subGVuZ3RoICsgJyBieXRlcycpOwp9CgpmdW5jdGlvbiBEdW1wTGV4ZXIobGV4KSB7CiAgY29uc3QgeyBzaXplLCBwb3MsIHN0YXJ0LCBsaW5lLCBjb2x1bW4sIGxpbmVTdGFydCwgbGluZUVuZCwgY29sdW1uSW5kZXggfSA9IGxleDsKICByZXR1cm4gJ0xleGVyICcgKyBpbnNwZWN0KHsgc3RhcnQsIHBvcywgc2l6ZSB9KTsKfQoKZnVuY3Rpb24gRHVtcFRva2VuKHRvaykgewogIGNvbnN0IHsgbGVuZ3RoLCBvZmZzZXQsIGNoYXJzLCBsb2MgfSA9IHRvazsKICByZXR1cm4gYOKYhSBUb2tlbiAke2luc3BlY3QoeyBjaGFycywgb2Zmc2V0LCBsZW5ndGgsIGxvYyB9LCB7IGRlcHRoOiAxIH0pfWA7Cn0KCmZ1bmN0aW9uKiBEZXBlbmRlbmN5VHJlZShyb290LCBpbmRlbnQgPSAnICcsIHNwYWNpbmcgPSBmYWxzZSwgZGVwdGggPSAwLCBwcmUgPSAnJywgZm4gPSAobmFtZSwgZGVwdGgpID0+IGAke25hbWV9ICgke2RlcHRofSlgKSB7CiAgaWYoIUFycmF5LmlzQXJyYXkoZGVwZW5kZW5jeVRyZWUocm9vdCkpKSB0aHJvdyBuZXcgRXJyb3IoYE5vIHN1Y2ggZmlsZSAnJHtyb290fScgaW4gZGVwZW5kZW5jeSBNYXAgKFske1suLi5kZXBlbmRlbmN5TWFwLmtleXMoKV19XSlgKTsKCiAgaWYoZGVwdGggPT0gMCkgeWllbGQgcHJlICsgc3RyaXBMZWFkaW5nRG90U2xhc2goZm4ocm9vdCwgZGVwdGgpKSArIGBcbmA7CgogIGxldCBhID0gZGVwZW5kZW5jeU1hcC5nZXQocm9vdCk7CiAgLy9jb25zb2xlLmxvZygnYScsIGEpOwogIGxldCBpID0gMCwKICAgIG4gPSBhLmxlbmd0aDsKCiAgZm9yKGkgPSAwOyBpIDwgbjsgaSsrKSB7CiAgICBpZihzcGFjaW5nKSB5aWVsZCAocHJlICsgaW5kZW50ICsgYOKUgiAgYCArICdcbicpLnJlcGVhdChOdW1iZXIoc3BhY2luZykpOwoKICAgIHlpZWxkIHByZSArIGluZGVudCArIChuID09IDEgPyBg4pSU4pSAIGAgOiBpIDwgbiAtIDEgPyBg4pSc4pSAIGAgOiBg4pSU4pSAIGApICsgc3RyaXBMZWFkaW5nRG90U2xhc2goZm4oYVtpXSwgZGVwdGggKyAxKSkgKyAnXG4nOwoKICAgIHlpZWxkKiBEZXBlbmRlbmN5VHJlZShhW2ldLCBpbmRlbnQsIHNwYWNpbmcsIGRlcHRoICsgMSwgcHJlICsgaW5kZW50ICsgKG4gPT0gMSA/IGAgICBgIDogaSA8IG4gLSAxID8gYOKUgiAgYCA6IGAgICBgKSk7CiAgfQoKICBmdW5jdGlvbiBzdHJpcExlYWRpbmdEb3RTbGFzaChuKSB7CiAgICBpZihuLnN0YXJ0c1dpdGgoJy4vJykpIG4gPSBuLnNsaWNlKDIpOwogICAgcmV0dXJuIG47CiAgfQp9CgpmdW5jdGlvbiBTcHJlYWRBbmRKb2luKGl0ZXJhdG9yLCBzZXBhcmF0b3IgPSAnJykgewogIHJldHVybiBbLi4uaXRlcmF0b3JdLmpvaW4oc2VwYXJhdG9yKTsKfQoKZnVuY3Rpb24qIFByaW50VXNlcnNjcmlwdEJhbm5lcihmaWVsZHMpIHsKICBjb25zdCBkZWZhdWx0cyA9IHsKICAgIG5hbWU6ICdodHRwczovL2dpdGh1Yi5jb20vcnNlbm4nLAogICAgbmFtZXNwYWNlOiAnaHR0cHM6Ly9naXRodWIuY29tL3JzZW5uJywKICAgIHZlcnNpb246ICcxLjAnLAogICAgZGVzY3JpcHRpb246ICcnLAogICAgYXV0aG9yOiAnUm9tYW4gTC4gU2VubicsCiAgICBtYXRjaDogJ2h0dHAqOi8vKi8qJywKICAgIGljb246ICdkYXRhOmltYWdlL2dpZjtiYXNlNjQsUjBsR09EbGhBUUFCQUFBQUFDSDVCQUVLQUFFQUxBQUFBQUFCQUFFQUFBSUNUQUVBT3c9PScsCiAgICBncmFudDogJ25vbmUnCiAgfTsKCiAgbGV0IGtleXMgPSBPYmplY3Qua2V5cyhkZWZhdWx0cykuY29uY2F0KE9iamVjdC5rZXlzKGZpZWxkcykpLnVuaXF1ZSgpOwogIC8vY29uc29sZS5sb2coJ2tleXMnLCBrZXlzKTsKICB5aWVsZCBgLy8gPT1Vc2VyU2NyaXB0PT1gOwogIGZvcihsZXQgbmFtZSBvZiBrZXlzKSB7CiAgICBjb25zdCB2YWx1ZSA9IGZpZWxkc1tuYW1lXSA/PyBkZWZhdWx0c1tuYW1lXTsKCiAgICB5aWVsZCBgLy8gQCR7bmFtZS5wYWRFbmQoMTIpfSAke3ZhbHVlfWA7CiAgfQogIHlpZWxkIGAvLyA9PS9Vc2VyU2NyaXB0PT1gOwp9CgpmdW5jdGlvbiBQcmludEVTNkltcG9ydChpbXApIHsKICByZXR1cm4gewogICAgW0ltcG9ydFR5cGVzLklNUE9SVF9OQU1FU1BBQ0VdOiAoeyBsb2NhbCwgZmlsZSB9KSA9PiBgaW1wb3J0ICogYXMgJHtsb2NhbH0gZnJvbSAnJHtmaWxlfSc7YCwKICAgIFtJbXBvcnRUeXBlcy5JTVBPUlRfREVGQVVMVF06ICh7IGxvY2FsLCBmaWxlIH0pID0+IGBpbXBvcnQgJHtsb2NhbH0gZnJvbSAnJHtmaWxlfSc7YCwKICAgIFtJbXBvcnRUeXBlcy5JTVBPUlRdOiAoeyBsb2NhbCwgZmlsZSB9KSA9PiBgaW1wb3J0IHsgJHtsb2NhbC5qb2luKCcsICcpfSB9IGZyb20gJyR7ZmlsZX0nO2AKICB9W2ltcC50eXBlXShpbXApOwp9CgpmdW5jdGlvbiBQcmludENKU0ltcG9ydCh7IHR5cGUsIGxvY2FsLCBmaWxlIH0pIHsKICByZXR1cm4gewogICAgW0ltcG9ydFR5cGVzLklNUE9SVF9OQU1FU1BBQ0VdOiAoKSA9PiBgY29uc3QgJHtsb2NhbH0gPSByZXF1aXJlKCcke2ZpbGV9Jyk7YCwKICAgIFtJbXBvcnRUeXBlcy5JTVBPUlRfREVGQVVMVF06ICgpID0+IGBjb25zdCAke2xvY2FsfSA9IHJlcXVpcmUoJyR7ZmlsZX0nKTtgLAogICAgW0ltcG9ydFR5cGVzLklNUE9SVF06ICgpID0+IGBjb25zdCB7ICR7bG9jYWwuam9pbignLCAnKX0gfSA9IHJlcXVpcmUoJyR7ZmlsZX0nKTtgCiAgfVt0eXBlXSgpOwp9CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3MpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZShzdGQuZXJyLCB7CiAgICBpbnNwZWN0T3B0aW9uczogewogICAgICBjb2xvcnM6IHRydWUsCiAgICAgIGRlcHRoOiBJbmZpbml0eSwKICAgICAgc3RyaW5nQnJlYWtOZXdsaW5lOiB0cnVlLAogICAgICBtYXhTdHJpbmdMZW5ndGg6IDEwMDAsCiAgICAgIG1heEFycmF5TGVuZ3RoOiAxMDAsCiAgICAgIGNvbXBhY3Q6IGZhbHNlLAogICAgICAvL3JlcGFyc2VhYmxlOiB0cnVlLAogICAgICBoaWRlS2V5czogW1N5bWJvbC50b1N0cmluZ1RhZyAvKiwgJ2NvZGUnKi9dCiAgICB9CiAgfSk7CgogIGxldCBvcHRpbmQgPSAwLAogICAgY29kZSA9ICdjJywKICAgIGV4cCA9IHRydWU7CgogIGxldCBvdXQgPSBGZFdyaXRlcigxLCAnc3Rkb3V0Jyk7CiAgbGV0IHN0cmVhbSA9IGRlZmluZSgKICAgIHsgaW5kZW50OiAwIH0sCiAgICB7CiAgICAgIGxpbmVzOiBbXSwKICAgICAgd3JpdGUoYnVmLCBsZW4pIHsKICAgICAgICBsZXQgcyA9IHRvU3RyaW5nKGJ1ZiwgMCwgbGVuKTsKICAgICAgICByZXR1cm4gdGhpcy5wdXRzKHMpOwogICAgICB9LAogICAgICBwdXRzKHMpIHsKICAgICAgICBsZXQgcGFkID0gJyAgJy5yZXBlYXQodGhpcy5pbmRlbnQpOwogICAgICAgIHRoaXMubGluZXMucHVzaCguLi5zLnNwbGl0KC9ccj9cbi9nKS5tYXAobGluZSA9PiBwYWQgKyBsaW5lKSk7CiAgICAgICAgcmV0dXJuIHMubGVuZ3RoOwogICAgICB9LAogICAgICBjbG9zZSgpIHsKICAgICAgICBsZXQgcHJldiA9ICcnOwogICAgICAgIGNvbnN0IGlzV1MgPSBzID0+IHMudHJpbSgpID09ICcnOwogICAgICAgIGZvcihsZXQgbGluZSBvZiB0aGlzLmxpbmVzKSB7CiAgICAgICAgICBpZighKGlzV1MobGluZSkgJiYgaXNXUyhwcmV2KSkpIHsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhgV3JpdGluZyAke3F1b3RlKGxpbmUsICInIil9YCk7CiAgICAgICAgICAgIG91dC5wdXRzKGxpbmUudHJpbUVuZCgpICsgJ1xuJyk7CiAgICAgICAgICB9CgogICAgICAgICAgcHJldiA9IGxpbmU7CiAgICAgICAgfQogICAgICAgIG91dC5jbG9zZSgpOwogICAgICB9CiAgICB9CiAgKTsKCiAgbGV0IHBhcmFtcyA9IGdldE9wdCgKICAgIHsKICAgICAgZGVidWc6IFtmYWxzZSwgKCkgPT4gKytkZWJ1ZywgJ3gnXSwKICAgICAgbG9nOiBbdHJ1ZSwgZmlsZSA9PiAobG9nRmlsZSA9IEZpbGVXcml0ZXIoZmlsZSkpLCAnbCddLAogICAgICBzb3J0OiBbZmFsc2UsIG51bGwsICdzJ10sCiAgICAgICdjYXNlLXNlbnNpdGl2ZSc6IFtmYWxzZSwgbnVsbCwgJ2MnXSwKICAgICAgcXVpZXQ6IFtmYWxzZSwgbnVsbCwgJ3EnXSwKICAgICAgZXhwb3J0OiBbZmFsc2UsICgpID0+IChleHAgPSB0cnVlKSwgJ2UnXSwKICAgICAgJ3JlbGF0aXZlLXRvJzogW3RydWUsIGFyZyA9PiAocmVsYXRpdmVUbyA9IHBhdGguYWJzb2x1dGUoYXJnKSksICdyJ10sCiAgICAgIG91dHB1dDogW3RydWUsIGZpbGUgPT4gKG91dHB1dEZpbGUgPSBmaWxlKSwgJ28nXSwKICAgICAgJ25vLXJlY3Vyc2l2ZSc6IFtmYWxzZSwgKCkgPT4gKHJlY3Vyc2l2ZSA9IGZhbHNlKSwgJ1InXSwKICAgICAgJ3JlbW92ZS1leHBvcnRzJzogW2ZhbHNlLCAoKSA9PiAocmVtb3ZlRXhwb3J0cyA9IHRydWUpLCAnRSddLAogICAgICAncmVtb3ZlLWltcG9ydHMnOiBbZmFsc2UsICgpID0+IChyZW1vdmVJbXBvcnRzID0gdHJ1ZSksICdJJ10sCiAgICAgICdyZW1vdmUtY29tbWVudHMnOiBbZmFsc2UsICgpID0+IChyZW1vdmVDb21tZW50cyA9IHRydWUpLCAnQyddLAogICAgICAnZ2xvYmFsLWV4cG9ydHMnOiBbZmFsc2UsICgpID0+ICsrZ2xvYmFsRXhwb3J0cywgJ0cnXSwKICAgICAgJ3Nob3ctZGVwZW5kZW5jaWVzJzogW2ZhbHNlLCAoKSA9PiArK3Nob3dEZXBzLCAnZCddLAogICAgICAncHJpbnQtZmlsZXMnOiBbZmFsc2UsICgpID0+IChwcmludEZpbGVzID0gdHJ1ZSksICdsJ10sCiAgICAgICdyZWFkLXBhY2thZ2UnOiBbZmFsc2UsICgpID0+IChyZWFkUGFja2FnZSA9IHRydWUpLCAncCddLAogICAgICAnbm8tcmVhZC1wYWNrYWdlJzogW2ZhbHNlLCAoKSA9PiAocmVhZFBhY2thZ2UgPSBmYWxzZSksICdQJ10sCiAgICAgIHRpbWU6IFtmYWxzZSwgKCkgPT4gKHNob3dUaW1pbmcgPSB0cnVlKSwgJ3QnXSwKICAgICAgJ0AnOiAnZmlsZXMnCiAgICB9LAogICAgYXJncwogICk7CiAgbGV0IGZpbGVzID0gcGFyYW1zWydAJ107CgogIGlmKC9saXN0LWltcG9ydC8udGVzdChzY3JpcHRBcmdzWzBdKSkgewogICAgcHJpbnRGaWxlcyA9IHRydWU7CiAgICBvdXRwdXRGaWxlID0gbnVsbDsKICAgIG91dCA9IER1bW15V3JpdGVyKCcvZGV2L251bGwnKTsKICB9CgogIGNvbnN0IHsgc29ydCwgJ2Nhc2Utc2Vuc2l0aXZlJzogY2FzZVNlbnNpdGl2ZSwgcXVpZXQgfSA9IHBhcmFtczsKCiAgaWYob3V0cHV0RmlsZSkgb3V0ID0gRmlsZVdyaXRlcihvdXRwdXRGaWxlKTsKCiAgbGV0IGFyZ0xpc3QgPSBbLi4uc2NyaXB0QXJnc107CgogIGxvZ0ZpbGUoYFN0YXJ0IG9mOiAke2FyZ0xpc3Quam9pbignICcpfVxuYCk7CgogIGlmKGRlYnVnID49IDEpIGRlYnVnTG9nKCdtYWluJywgeyBvdXRwdXRGaWxlLCBvdXQgfSk7CgogIGNvbnN0IFJlbGF0aXZlUGF0aCA9IGZpbGUgPT4gKHBhdGguaXNBYnNvbHV0ZShmaWxlKSA/IGZpbGUgOiBmaWxlLnN0YXJ0c1dpdGgoJy4vJykgPyBmaWxlIDogJy4vJyArIGZpbGUpOwogIC8vY29uc3QgUmVsYXRpdmVQYXRoID0gZmlsZSA9PiBwYXRoLmlzQWJzb2x1dGUoZmlsZSkgPyBmaWxlIDogZmlsZS5zdGFydHNXaXRoKCcuLycpID8gZmlsZS5zbGljZSgyKSA6IGZpbGU7CgogIGlmKCFmaWxlcy5sZW5ndGgpIHRocm93IG5ldyBBcmd1bWVudEVycm9yKCdFeHBlY3RpbmcgYXJndW1lbnQgPGZpbGVzLi4uPicpOwogIC8vaWYoIWZpbGVzLmxlbmd0aCkgZmlsZXMucHVzaChSZWxhdGl2ZVBhdGgoJ2xpYi91dGlsLmpzJykpOwoKICBsZXQgbG9nID0gcXVpZXQgPyAoKSA9PiB7fSA6ICguLi5hcmdzKSA9PiBjb25zb2xlLmxvZyhgJHtmaWxlfTpgLCAuLi5hcmdzKTsKICBsZXQgcmVzdWx0cyA9IFtdOwoKICBmb3IobGV0IGZpbGUgb2YgZmlsZXMpIHsKICAgIGZpbGUgPSBSZWxhdGl2ZVBhdGgoZmlsZSk7CgogICAgbGV0IHJlc3VsdCA9IFJlc29sdmVJbXBvcnRzKGZpbGUsIGxvZywgcmVjdXJzaXZlLCAwKTsKCiAgICBpZihkZWJ1ZyA+PSAxKSBjb25zb2xlLmxvZygncmVzdWx0JywgY29tcGFjdChmYWxzZSwgeyBkZXB0aDogSW5maW5pdHkgfSksIHJlc3VsdCk7CgogICAgcmVzdWx0cy5wdXNoKHJlc3VsdCk7CiAgfQogIGlmKCFyZW1vdmVJbXBvcnRzKSB7CiAgICBsZXQgYmluZGluZ3MgPSBbXSwKICAgICAgaW1wb3J0TGluZXMgPSBbXTsKICAgIGNvbnN0IENvbnRhaW5zQW55ID0gKGFyciwgdG9rZW5zKSA9PiB0b2tlbnMuc29tZSh0b2sgPT4gYXJyLmluZGV4T2YodG9rKSAhPSAtMSk7CiAgICBsZXQgbGluZXMgPSBoZWFkZXIKICAgICAgLmZpbHRlcihpbXBleHAgPT4gSXNCdWlsdGluKGltcGV4cC5maWxlKSkKICAgICAgLmZpbHRlcihoZHIgPT4gIWhkci5jb2RlLnN0YXJ0c1dpdGgoJ2V4cG9ydCcpKQogICAgICAucmVkdWNlKAogICAgICAgIChbYWNjLCBwcmV2XSwgaGRyKSA9PiB7CiAgICAgICAgICBsZXQgeyBjb2RlIH0gPSBoZHI7CiAgICAgICAgICBsZXQgZGlzYWJsZSA9IENvbnRhaW5zQW55KGJpbmRpbmdzLCBoZHIuaWRzKCkpOwogICAgICAgICAgaWYocHJldiAhPSBoZHIuc291cmNlKSB7CiAgICAgICAgICAgIGFjYy5wdXNoKCcnKTsKICAgICAgICAgICAgYWNjLnB1c2goYGApOwogICAgICAgICAgfQogICAgICAgICAgbGV0IGR1cGxpY2F0ZSA9IGltcG9ydExpbmVzLmluZGV4T2YoY29kZSkgIT0gLTE7CiAgICAgICAgICBpbXBvcnRMaW5lcy5wdXNoKGNvZGUpOwogICAgICAgICAgaWYoIWR1cGxpY2F0ZSAmJiBkaXNhYmxlKSBjb2RlID0gJyc7CiAgICAgICAgICBpZighZHVwbGljYXRlKSB7CiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goLi4uaGRyLmlkcygpKTsKICAgICAgICAgICAgYWNjLnB1c2goY29kZSk7CiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4gW2FjYywgaGRyLnNvdXJjZV07CiAgICAgICAgfSwKICAgICAgICBbW10sIG51bGxdCiAgICAgIClbMF07CiAgICBpZihsaW5lcy5sZW5ndGgpIGxpbmVzID0gW0ZpbGVCYW5uZXJDb21tZW50KCdoZWFkZXInLCAwKSwgLi4ubGluZXMsICcnLCBGaWxlQmFubmVyQ29tbWVudCgnaGVhZGVyJywgMSldOwogICAgaWYoZGVidWcgPiAyKSBjb25zb2xlLmxvZygnbGluZXMnLCBsaW5lcyk7CgogICAgb3V0LnB1dHMobGluZXMucmVkdWNlKChhY2MsIGxpbmUpID0+IGFjYyArIGxpbmUudHJpbSgpICsgJ1xuJywgJycpKTsKICB9CgogIGZvcihsZXQgbGluZSBvZiBQcmludFVzZXJzY3JpcHRCYW5uZXIoewogICAgbmFtZTogb3V0LmZpbGUsCiAgICAncnVuLWF0JzogJ2RvY3VtZW50LXN0YXJ0JywKICAgIHZlcnNpb246ICcxLjAnLAogICAgZGVzY3JpcHRpb246IGZpbGVzLmpvaW4oJywgJyksCiAgICBkb3dubG9hZFVSTDogYGh0dHBzOi8vbG9jYWxob3N0OjkwMDAvJHtvdXQuZmlsZX1gLAogICAgdXBkYXRlVVJMOiBgaHR0cHM6Ly9sb2NhbGhvc3Q6OTAwMC8ke291dC5maWxlfWAKICB9KSkgewogICAgLy9zdGQucHV0cyhgbGluZTogJHtsaW5lfVxuYCk7CiAgICBzdHJlYW0ucHV0cyhsaW5lKTsKICB9CiAgc3RyZWFtLnB1dHMoIlxuKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG4iKTsKICArK3N0cmVhbS5pbmRlbnQ7CiAgICBpZihkZWJ1ZyA+IDApIGNvbnNvbGUubG9nKCdvdXQnLCBvdXQsICBvdXQuZmlsZSk7CgogIGlmKG91dC5maWxlKSB7CiAgICBjb25zdCBuYnl0ZXMgPSByZXN1bHRzWzBdLndyaXRlKHN0cmVhbSk7CiAgICBjb25zb2xlLmxvZyhgJHtuYnl0ZXN9IGJ5dGVzIHdyaXR0ZW4gdG8gJyR7b3V0LmZpbGV9J2ApOwogIH0KICBpZihkZWJ1ZyA+IDMpIGNvbnNvbGUubG9nKGBleHBvcnRlZE5hbWVzYCwgZXhwb3J0ZWROYW1lcyk7CgogIGlmKGdsb2JhbEV4cG9ydHMpIHsKICAgIGxldCBtYXhEZXB0aCA9IGdsb2JhbEV4cG9ydHMgLSAxOwogICAgbGV0IGV4cG9ydGVkTmFtZXMgPSBmb290ZXIuZmlsdGVyKCh7IGRlcHRoIH0pID0+IGRlcHRoIDw9IG1heERlcHRoKTsKICAgIC8vIGNvbnNvbGUubG9nKGBmb290ZXJgLCBleHBvcnRlZE5hbWVzLm1hcChpbXBleHAgPT4gIFtpbXBleHAuZGVwdGgsaW1wZXhwLm5hbWVdKSk7CgogICAgZXhwb3J0ZWROYW1lcyA9IGV4cG9ydGVkTmFtZXMKICAgICAgLm1hcCgoeyBuYW1lIH0pID0+IG5hbWUpCiAgICAgIC51bmlxdWUoKQogICAgICAuZmlsdGVyKG5hbWUgPT4gdHlwZW9mIG5hbWUgPT0gJ3N0cmluZycpOwoKICAgIHN0cmVhbS5wdXRzKGBcbk9iamVjdC5hc3NpZ24oZ2xvYmFsVGhpcywgeyAke2V4cG9ydGVkTmFtZXMuam9pbignLCAnKX0gfSk7XG5gKTsKICB9CgogIC0tc3RyZWFtLmluZGVudDsKICBzdHJlYW0ucHV0cygnfSkoKTtcbicpOwogIHN0cmVhbS5jbG9zZSgpOwoKICBsb2dGaWxlKGBQcm9jZXNzZWQgZmlsZXM6ICR7U3ByZWFkQW5kSm9pbihkZXBlbmRlbmN5TWFwLmtleXMoKSwgJyAnKX1cbmApOwp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgJHtlcnJvci5jb25zdHJ1Y3Rvci5uYW1lfTogJHtlcnJvci5tZXNzYWdlfSR7ZXJyb3Iuc3RhY2sgPyAnXG4nICsgZXJyb3Iuc3RhY2sgOiAnJ31gKTsKICBzdGQuZXhpdCgxKTsKfQoAAAAAAAAAAHKlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBwAAAAAAAAIHAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-path.c",
			"settings":
			{
				"buffer_size": 14412,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					33,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHcSAAAAAAAAeBIAAAAAAAAAAAAAeBIAAAAAAAB4EgAAAAAAAAcAAAAsIGFsZW4p",
					"AQAAAAAAAAABAAAAdxIAAAAAAAB+EgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAAHcSAAAAAAAAdxIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAeBIAAAAAAAB4EgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAHgSAAAAAAAAeRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBIAAAAAAAB4EgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "num_components"
					},
					"DwAAAG8SAAAAAAAAcBIAAAAAAAAAAAAAcBIAAAAAAABwEgAAAAAAAAYAAABsZW5ndGhwEgAAAAAAAHESAAAAAAAAAAAAAHESAAAAAAAAchIAAAAAAAAAAAAAchIAAAAAAABzEgAAAAAAAAAAAABzEgAAAAAAAHQSAAAAAAAAAAAAAHQSAAAAAAAAdRIAAAAAAAAAAAAAdRIAAAAAAAB2EgAAAAAAAAAAAAB2EgAAAAAAAHcSAAAAAAAAAAAAAHcSAAAAAAAAeBIAAAAAAAAAAAAAeBIAAAAAAAB5EgAAAAAAAAAAAAB5EgAAAAAAAHoSAAAAAAAAAAAAAHoSAAAAAAAAexIAAAAAAAAAAAAAexIAAAAAAAB8EgAAAAAAAAAAAAB8EgAAAAAAAH0SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxIAAAAAAAB1EgAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfRIAAAAAAAB9EgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/path.c",
			"settings":
			{
				"buffer_size": 15689,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					33,
					1,
					"cut",
					null,
					"AQAAAHMTAAAAAAAAcxMAAAAAAAAsAQAACmNvbnN0IGNoYXIqCnBhdGhfYXQoY29uc3QgY2hhciogcCwgc2l6ZV90KiBsZW5fcHRyLCBpbnQgaSkgewoKICBpbnQgcG9zID0gMDsKICBzaXplX3QgbmV4dCwgbGVuOwoKICBmb3IoOzspIHsKICAgIGxlbiA9IHBhdGhfc2tpcF9jb21wb25lbnRfcyhwKTsKICAgIG5leHQgPSBsZW4gKyBwYXRoX3NraXBfc2VwYXJhdG9yX3MoJnBbbGVuXSk7CgogICAgaWYoaSA8PSAwKQogICAgICBicmVhazsKICAgIHAgKz0gbmV4dDsKICAgIC0taTsKICB9CiAgaWYobGVuX3B0cikKICAgICpsZW5fcHRyID0gbGVuOwogIHJldHVybiBwOwp9",
					"AQAAAAAAAAABAAAAcxMAAAAAAACfFAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					2,
					"paste",
					null,
					"AgAAAHMTAAAAAAAAnxQAAAAAAAAAAAAAnxQAAAAAAADLFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxMAAAAAAABzEwAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "le"
					},
					"AwAAALEUAAAAAAAAshQAAAAAAAAAAAAAshQAAAAAAACyFAAAAAAAAAIAAABhdLIUAAAAAAAAsxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRQAAAAAAACzFAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					2,
					"left_delete",
					null,
					"AgAAALIUAAAAAAAAshQAAAAAAAABAAAAZbEUAAAAAAAAsRQAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAsxQAAAAAAACzFAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "engt"
					},
					"BAAAALEUAAAAAAAAshQAAAAAAAAAAAAAshQAAAAAAACzFAAAAAAAAAAAAACzFAAAAAAAALQUAAAAAAAAAAAAALQUAAAAAAAAtRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRQAAAAAAACxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					4,
					"left_delete",
					null,
					"BAAAALQUAAAAAAAAtBQAAAAAAAABAAAAdLMUAAAAAAAAsxQAAAAAAAABAAAAZ7IUAAAAAAAAshQAAAAAAAABAAAAbrEUAAAAAAAAsRQAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAtRQAAAAAAAC1FAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "length"
					},
					"BgAAALEUAAAAAAAAshQAAAAAAAAAAAAAshQAAAAAAACzFAAAAAAAAAAAAACzFAAAAAAAALQUAAAAAAAAAAAAALQUAAAAAAAAtRQAAAAAAAAAAAAAtRQAAAAAAAC2FAAAAAAAAAAAAAC2FAAAAAAAALcUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRQAAAAAAACxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ8UAAAAAAAAoBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxQAAAAAAACfFAAAAAAAAAAAAAAAQF5A"
				],
				[
					56,
					3,
					"left_delete",
					null,
					"AwAAAMgUAAAAAAAAyBQAAAAAAAAWAAAAc2l6ZV90KiBsZW5fcHRyLCBpbnQgaccUAAAAAAAAxxQAAAAAAAABAAAAIMYUAAAAAAAAxhQAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAyBQAAAAAAADeFAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "size_t"
					},
					"BwAAAKEUAAAAAAAAohQAAAAAAAAAAAAAohQAAAAAAACiFAAAAAAAAAsAAABjb25zdCBjaGFyKqIUAAAAAAAAoxQAAAAAAAAAAAAAoxQAAAAAAACkFAAAAAAAAAAAAACkFAAAAAAAAKUUAAAAAAAAAAAAAKUUAAAAAAAAphQAAAAAAAAAAAAAphQAAAAAAACnFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRQAAAAAAACsFAAAAAAAAP///////+9/"
				],
				[
					72,
					5,
					"left_delete",
					null,
					"BQAAAMwUAAAAAAAAzBQAAAAAAAADAAAAcG9zyxQAAAAAAADLFAAAAAAAAAEAAAAgyhQAAAAAAADKFAAAAAAAAAEAAAB0yRQAAAAAAADJFAAAAAAAAAEAAABuyBQAAAAAAADIFAAAAAAAAAEAAABp",
					"AQAAAAAAAAABAAAAzBQAAAAAAADPFAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "size_t"
					},
					"BgAAAMgUAAAAAAAAyRQAAAAAAAAAAAAAyRQAAAAAAADKFAAAAAAAAAAAAADKFAAAAAAAAMsUAAAAAAAAAAAAAMsUAAAAAAAAzBQAAAAAAAAAAAAAzBQAAAAAAADNFAAAAAAAAAAAAADNFAAAAAAAAM4UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyBQAAAAAAADIFAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " ret=0;"
					},
					"BwAAAM4UAAAAAAAAzxQAAAAAAAAAAAAAzxQAAAAAAADQFAAAAAAAAAAAAADQFAAAAAAAANEUAAAAAAAAAAAAANEUAAAAAAAA0hQAAAAAAAAAAAAA0hQAAAAAAADTFAAAAAAAAAAAAADTFAAAAAAAANQUAAAAAAAAAAAAANQUAAAAAAAA1RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzhQAAAAAAADOFAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"cut",
					null,
					"AQAAANUUAAAAAAAA1RQAAAAAAAAVAAAAID0gMDsKICBzaXplX3QgbmV4dCwg",
					"AQAAAAAAAAABAAAA1RQAAAAAAADqFAAAAAAAAAAAAAAAoGRA"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANUUAAAAAAAA1hQAAAAAAAAAAAAA1hQAAAAAAADYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1RQAAAAAAADVFAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"left_delete",
					null,
					"AQAAANgUAAAAAAAA2BQAAAAAAAAFAAAAbGVuOwo",
					"AQAAAAAAAAABAAAA2BQAAAAAAADdFAAAAAAAAAAAAAAAADZA"
				],
				[
					81,
					1,
					"left_delete",
					null,
					"AgAAAMQUAAAAAAAAxBQAAAAAAAABAAAACtUUAAAAAAAA1RQAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAxRQAAAAAAADFFAAAAAAAAAAAAAAAADZA"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AgAAAM4UAAAAAAAAzxQAAAAAAAAAAAAAzxQAAAAAAADPFAAAAAAAAAMAAAByZXQ",
					"AQAAAAAAAAABAAAAzhQAAAAAAADRFAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAN8UAAAAAAAA4BQAAAAAAAAAAAAA4BQAAAAAAADiFAAAAAAAAAAAAADiFAAAAAAAAOQUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xQAAAAAAADfFAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAOQUAAAAAAAA5RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5BQAAAAAAADkFAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " +="
					},
					"AwAAAOUUAAAAAAAA5hQAAAAAAAAAAAAA5hQAAAAAAADnFAAAAAAAAAAAAADnFAAAAAAAAOgUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RQAAAAAAADlFAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOgUAAAAAAAA6RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BQAAAAAAADoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " p"
					},
					"AgAAANsUAAAAAAAA3BQAAAAAAAAAAAAA3BQAAAAAAADdFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xQAAAAAAADbFAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"left_delete",
					null,
					"AQAAANwUAAAAAAAA3BQAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA3RQAAAAAAADdFAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "*p"
					},
					"AgAAANwUAAAAAAAA3RQAAAAAAAAAAAAA3RQAAAAAAADeFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BQAAAAAAADcFAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": ",len"
					},
					"BAAAANEUAAAAAAAA0hQAAAAAAAAAAAAA0hQAAAAAAADTFAAAAAAAAAAAAADTFAAAAAAAANQUAAAAAAAAAAAAANQUAAAAAAAA1RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RQAAAAAAADRFAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " p"
					},
					"AgAAAOMUAAAAAAAA5BQAAAAAAAAAAAAA5BQAAAAAAADlFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4xQAAAAAAADjFAAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"left_delete",
					null,
					"AQAAAOQUAAAAAAAA5BQAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA5RQAAAAAAADlFAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOQUAAAAAAAA5RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5BQAAAAAAADkFAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"left_delete",
					null,
					"AQAAAOQUAAAAAAAA5BQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA5RQAAAAAAADlFAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAOQUAAAAAAAA5RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5BQAAAAAAADkFAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " +="
					},
					"AwAAAOUUAAAAAAAA5hQAAAAAAAAAAAAA5hQAAAAAAADnFAAAAAAAAAAAAADnFAAAAAAAAOgUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RQAAAAAAADlFAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " len"
					},
					"BAAAAOgUAAAAAAAA6RQAAAAAAAAAAAAA6RQAAAAAAADqFAAAAAAAAAAAAADqFAAAAAAAAOsUAAAAAAAAAAAAAOsUAAAAAAAA7BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BQAAAAAAADoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAO8UAAAAAAAA8BQAAAAAAAAAAAAA8BQAAAAAAADyFAAAAAAAAAAAAADyFAAAAAAAAPQUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7xQAAAAAAADvFAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "len"
					},
					"BAAAAPkUAAAAAAAA+hQAAAAAAAAAAAAA8BQAAAAAAADwFAAAAAAAAAQAAAAgICAg9hQAAAAAAAD3FAAAAAAAAAAAAAD3FAAAAAAAAPgUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RQAAAAAAAD5FAAAAAAAAAAAAAAAAEZA"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAPgUAAAAAAAA+RQAAAAAAAAAAAAA+RQAAAAAAAD6FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BQAAAAAAAD4FAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " p"
					},
					"AgAAAPoUAAAAAAAA+xQAAAAAAAAAAAAA+xQAAAAAAAD8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hQAAAAAAAD6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					3,
					"left_delete",
					null,
					"AwAAAPsUAAAAAAAA+xQAAAAAAAABAAAAcPoUAAAAAAAA+hQAAAAAAAABAAAAIPkUAAAAAAAA+RQAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA/BQAAAAAAAD8FAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAPkUAAAAAAAA+hQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RQAAAAAAAD5FAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " path_sk"
					},
					"CAAAAPoUAAAAAAAA+xQAAAAAAAAAAAAA+xQAAAAAAAD8FAAAAAAAAAAAAAD8FAAAAAAAAP0UAAAAAAAAAAAAAP0UAAAAAAAA/hQAAAAAAAAAAAAA/hQAAAAAAAD/FAAAAAAAAAAAAAD/FAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAARUAAAAAAAAAAAAAARUAAAAAAAACFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hQAAAAAAAD6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAIVAAAAAAAAAxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAhUAAAAAAAACFQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					4,
					"right_delete",
					null,
					"BAAAAAMVAAAAAAAAAxUAAAAAAAABAAAAcAMVAAAAAAAAAxUAAAAAAAABAAAAIAMVAAAAAAAAAxUAAAAAAAABAAAAKwMVAAAAAAAAAxUAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAAxUAAAAAAAADFQAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"left_delete",
					null,
					"AQAAAAIVAAAAAAAAAhUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAAxUAAAAAAAADFQAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "ip2"
					},
					"AwAAAAIVAAAAAAAAAxUAAAAAAAAAAAAAAxUAAAAAAAAEFQAAAAAAAAAAAAAEFQAAAAAAAAUVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAhUAAAAAAAACFQAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAUVAAAAAAAABxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRUAAAAAAAAFFQAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAAYVAAAAAAAABxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhUAAAAAAAAGFQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAgVAAAAAAAACRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBUAAAAAAAAIFQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAkVAAAAAAAAChUAAAAAAAAAAAAAChUAAAAAAAAOFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACRUAAAAAAAAJFQAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"cut",
					null,
					"AQAAAA4VAAAAAAAADhUAAAAAAACCAAAAIAogICAgbGVuID0gcGF0aF9za2lwX2NvbXBvbmVudF9zKHApOwogICAgbmV4dCA9IGxlbiArIHBhdGhfc2tpcF9zZXBhcmF0b3JfcygmcFtsZW5dKTsKCiAgICBpZihpIDw9IDApCiAgICAgIGJyZWFrOwogICAgcCArPSBuZXh0Ow",
					"AQAAAAAAAAABAAAADhUAAAAAAACQFQAAAAAAAP///////+9/"
				],
				[
					148,
					2,
					"right_delete",
					null,
					"AwAAABMVAAAAAAAAExUAAAAAAAABAAAALQoVAAAAAAAAChUAAAAAAAAEAAAAICAgIA8VAAAAAAAADxUAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAExUAAAAAAAATFQAAAAAAAAAAAAAAAEZA"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "++n"
					},
					"AwAAAA8VAAAAAAAAEBUAAAAAAAAAAAAAEBUAAAAAAAARFQAAAAAAAAAAAAARFQAAAAAAABIVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxUAAAAAAAAPFQAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"right_delete",
					null,
					"AQAAABIVAAAAAAAAEhUAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAEhUAAAAAAAASFQAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"left_delete",
					null,
					"AQAAABgVAAAAAAAAGBUAAAAAAAAuAAAAICBpZihsZW5fcHRyKQogICAgKmxlbl9wdHIgPSBsZW47CiAgcmV0dXJuIHA7Cg",
					"AQAAAAAAAAABAAAAGBUAAAAAAABGFQAAAAAAAAAAAAAAAAAA"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAABcVAAAAAAAAGBUAAAAAAAAAAAAAGBUAAAAAAAAaFQAAAAAAAAAAAAAaFQAAAAAAABsVAAAAAAAAAAAAABsVAAAAAAAAHBUAAAAAAAAAAAAAHBUAAAAAAAAdFQAAAAAAAAAAAAAdFQAAAAAAAB4VAAAAAAAAAAAAAB4VAAAAAAAAHxUAAAAAAAAAAAAAHxUAAAAAAAAgFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFxUAAAAAAAAXFQAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " n;"
					},
					"AwAAACAVAAAAAAAAIRUAAAAAAAAAAAAAIRUAAAAAAAAiFQAAAAAAAAAAAAAiFQAAAAAAACMVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBUAAAAAAAAgFQAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"left_delete",
					null,
					"AQAAAAkVAAAAAAAACRUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAChUAAAAAAAAKFQAAAAAAAAAAAAAAQF5A"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAAO8UAAAAAAAA7xQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA8BQAAAAAAADwFAAAAAAAAAAAAAAAgHBA"
				],
				[
					206,
					1,
					"",
					null,
					"AQAAAE0RAAAAAAAAbhEAAAAAAAAWAAAAcGF0aF9sZW5ndGgocywgZSAtIHMpOw",
					"AQAAAAAAAAABAAAATREAAAAAAABjEQAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "_s"
					},
					"AgAAAA8VAAAAAAAAEBUAAAAAAAAAAAAAEBUAAAAAAAARFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxUAAAAAAAAPFQAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"paste",
					null,
					"AgAAAHEuAAAAAAAAhC4AAAAAAAAAAAAAhC4AAAAAAACELgAAAAAAAA0AAABwYXRoX2xlbmd0aF9z",
					"AQAAAAAAAAABAAAAcS4AAAAAAAB+LgAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": ",strlen"
					},
					"BwAAAIkuAAAAAAAAii4AAAAAAAAAAAAAii4AAAAAAACLLgAAAAAAAAAAAACLLgAAAAAAAIwuAAAAAAAAAAAAAIwuAAAAAAAAjS4AAAAAAAAAAAAAjS4AAAAAAACOLgAAAAAAAAAAAACOLgAAAAAAAI8uAAAAAAAAAAAAAI8uAAAAAAAAkC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiS4AAAAAAACJLgAAAAAAAAAAAAAAAPC/"
				],
				[
					257,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJAuAAAAAAAAki4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkC4AAAAAAACQLgAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "pth"
					},
					"AwAAAJEuAAAAAAAAki4AAAAAAAAAAAAAki4AAAAAAACTLgAAAAAAAAAAAACTLgAAAAAAAJQuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkS4AAAAAAACRLgAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					2,
					"left_delete",
					null,
					"AgAAAJMuAAAAAAAAky4AAAAAAAABAAAAaJIuAAAAAAAAki4AAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAlC4AAAAAAACULgAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": "ath"
					},
					"AwAAAJIuAAAAAAAAky4AAAAAAAAAAAAAky4AAAAAAACULgAAAAAAAAAAAACULgAAAAAAAJUuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAki4AAAAAAACSLgAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": ",0"
					},
					"AgAAAJYuAAAAAAAAly4AAAAAAAAAAAAAly4AAAAAAACYLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAli4AAAAAAACWLgAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"paste",
					null,
					"AgAAALMUAAAAAAAAxhQAAAAAAAAAAAAAxhQAAAAAAADGFAAAAAAAAAsAAABwYXRoX2xlbmd0aA",
					"AQAAAAAAAAABAAAAsxQAAAAAAAC+FAAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAxhQAAAAAAADGFAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAxhQAAAAAAADGFAAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"cut",
					null,
					"AQAAAB84AAAAAAAAHzgAAAAAAABcAQAACgpjaGFyKgpfX3BhdGhfZGlybmFtZShjb25zdCBjaGFyKiBwYXRoLCBEeW5CdWYqIGRpcikgewogIHNpemVfdCBpID0gc3RyX3JjaHJzKHBhdGgsICIvXFwiLCAyKTsKICBpZihwYXRoID09IE5VTEwgfHwgcGF0aFtpXSA9PSAnXDAnKSB7CiAgICBkYnVmX3B1dHN0cihkaXIsICIuIik7CiAgfSBlbHNlIHsKICAgIC8qIHJlbW92ZSB0cmFpbGluZyBzbGFzaGVzICovCiAgICB3aGlsZShpID4gMCAmJiBwYXRoX2lzc2VwKHBhdGhbaSAtIDFdKSkgLS1pOwogICAgZGJ1Zl9wdXQoZGlyLCAoY29uc3QgdWludDhfdCopcGF0aCwgaSk7CiAgfQogIGRidWZfMChkaXIpOwogIHJldHVybiAoY2hhciopZGlyLT5idWY7Cn0K",
					"AQAAAAAAAAABAAAAHzgAAAAAAAB7OQAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					2,
					"paste",
					null,
					"AgAAAB84AAAAAAAAezkAAAAAAAAAAAAAezkAAAAAAADXOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHzgAAAAAAAAfOAAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": "siez"
					},
					"BQAAAH05AAAAAAAAfjkAAAAAAAAAAAAAfjkAAAAAAAB+OQAAAAAAAAUAAABjaGFyKn45AAAAAAAAfzkAAAAAAAAAAAAAfzkAAAAAAACAOQAAAAAAAAAAAACAOQAAAAAAAIE5AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgjkAAAAAAAB9OQAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					2,
					"left_delete",
					null,
					"AgAAAIA5AAAAAAAAgDkAAAAAAAABAAAAen85AAAAAAAAfzkAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAgTkAAAAAAACBOQAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": "ze_t"
					},
					"BAAAAH85AAAAAAAAgDkAAAAAAAAAAAAAgDkAAAAAAACBOQAAAAAAAAAAAACBOQAAAAAAAII5AAAAAAAAAAAAAII5AAAAAAAAgzkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfzkAAAAAAAB/OQAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"left_delete",
					null,
					"AQAAAHs5AAAAAAAAezkAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAfDkAAAAAAAB8OQAAAAAAAAAAAAAAgFBA"
				],
				[
					362,
					2,
					"left_delete",
					null,
					"AgAAAIQ5AAAAAAAAhDkAAAAAAAABAAAAX4M5AAAAAAAAgzkAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAhTkAAAAAAACFOQAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					3,
					"right_delete",
					null,
					"AwAAAIw5AAAAAAAAjDkAAAAAAAABAAAAYYw5AAAAAAAAjDkAAAAAAAABAAAAbYw5AAAAAAAAjDkAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAjDkAAAAAAACMOQAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"left_delete",
					null,
					"AQAAAIs5AAAAAAAAizkAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAjDkAAAAAAACMOQAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": "name_len"
					},
					"CAAAAIs5AAAAAAAAjDkAAAAAAAAAAAAAjDkAAAAAAACNOQAAAAAAAAAAAACNOQAAAAAAAI45AAAAAAAAAAAAAI45AAAAAAAAjzkAAAAAAAAAAAAAjzkAAAAAAACQOQAAAAAAAAAAAACQOQAAAAAAAJE5AAAAAAAAAAAAAJE5AAAAAAAAkjkAAAAAAAAAAAAAkjkAAAAAAACTOQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAizkAAAAAAACLOQAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"left_delete",
					null,
					"AQAAAKQ5AAAAAAAApDkAAAAAAAANAAAALCBEeW5CdWYqIGRpcg",
					"AQAAAAAAAAABAAAApDkAAAAAAACxOQAAAAAAAAAAAAAAAPC/"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANE5AAAAAAAA0jkAAAAAAAAAAAAA0jkAAAAAAADSOQAAAAAAAEwAAAAgaWYocGF0aCA9PSBOVUxMIHx8IHBhdGhbaV0gPT0gJ1wwJykgewogICAgZGJ1Zl9wdXRzdHIoZGlyLCAiLiIpOwogIH0gZWxzZSB7",
					"AQAAAAAAAAABAAAA0TkAAAAAAAAdOgAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACc6AAAAAAAAKDoAAAAAAAAAAAAAKDoAAAAAAAAoOgAAAAAAAD0AAAAgICBkYnVmX3B1dChkaXIsIChjb25zdCB1aW50OF90KilwYXRoLCBpKTsKICB9CiAgZGJ1Zl8wKGRpcik7",
					"AQAAAAAAAAABAAAAJzoAAAAAAABkOgAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AwAAADE6AAAAAAAAMjoAAAAAAAAAAAAAMjoAAAAAAAAyOgAAAAAAABAAAAAgKGNoYXIqKWRpci0+YnVmMjoAAAAAAAAzOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMToAAAAAAABBOgAAAAAAAAAAAAAAAPC/"
				],
				[
					425,
					1,
					"left_delete",
					null,
					"AQAAACY6AAAAAAAAJjoAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAKDoAAAAAAAAoOgAAAAAAAAAAAAAAgFtA"
				],
				[
					428,
					1,
					"left_delete",
					null,
					"AQAAACU6AAAAAAAAJToAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAJjoAAAAAAAAmOgAAAAAAAAAAAAAAAAAA"
				],
				[
					430,
					2,
					"left_delete",
					null,
					"AgAAANA5AAAAAAAA0DkAAAAAAAACAAAAICDPOQAAAAAAAM85AAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAA0jkAAAAAAADSOQAAAAAAAAAAAAAAgIBA"
				],
				[
					471,
					1,
					"insert_snippet",
					{
						"contents": "'${0:$SELECTION}'"
					},
					"AgAAAEoTAAAAAAAAShMAAAAAAAAEAAAAcHV0Y0oTAAAAAAAAUBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAShMAAAAAAABOEwAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					1,
					"left_delete",
					null,
					"AQAAAEsTAAAAAAAASxMAAAAAAAAEAAAAcHV0Yw",
					"AQAAAAAAAAABAAAASxMAAAAAAABPEwAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAEoTAAAAAAAAShMAAAAAAAABAAAAJ0oTAAAAAAAAShMAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAASxMAAAAAAABLEwAAAAAAAAAAAAAAAPC/"
				],
				[
					474,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAEoTAAAAAAAASxMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAShMAAAAAAABKEwAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"left_delete",
					null,
					"AQAAAE4TAAAAAAAAThMAAAAAAAAGAAAALCAnXDAn",
					"AQAAAAAAAAABAAAAThMAAAAAAABUEwAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					1,
					"left_delete",
					null,
					"AQAAAFETAAAAAAAAURMAAAAAAAAOAAAAICBkYi0+c2l6ZS0tOwo",
					"AQAAAAAAAAABAAAAURMAAAAAAABfEwAAAAAAAAAAAAAAAAAA"
				],
				[
					693,
					1,
					"insert",
					{
						"characters": "\n\n\n\n"
					},
					"CwAAAGgSAAAAAAAAaRIAAAAAAAAAAAAAaRIAAAAAAABrEgAAAAAAAAAAAABrEgAAAAAAAGwSAAAAAAAAAAAAAGwSAAAAAAAAbhIAAAAAAAAAAAAAaRIAAAAAAABpEgAAAAAAAAIAAAAgIGwSAAAAAAAAbRIAAAAAAAAAAAAAbRIAAAAAAABvEgAAAAAAAAAAAABqEgAAAAAAAGoSAAAAAAAAAgAAACAgbRIAAAAAAABuEgAAAAAAAAAAAABuEgAAAAAAAHASAAAAAAAAAAAAAGsSAAAAAAAAaxIAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAaBIAAAAAAABoEgAAAAAAAAAAAAAAAPC/"
				],
				[
					695,
					1,
					"insert",
					{
						"characters": "while"
					},
					"BgAAAGsSAAAAAAAAbBIAAAAAAAAAAAAAbRIAAAAAAABtEgAAAAAAAAIAAAAgIGwSAAAAAAAAbRIAAAAAAAAAAAAAbRIAAAAAAABuEgAAAAAAAAAAAABuEgAAAAAAAG8SAAAAAAAAAAAAAG8SAAAAAAAAcBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaxIAAAAAAABrEgAAAAAAAAAAAAAAADZA"
				],
				[
					696,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHASAAAAAAAAchIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBIAAAAAAABwEgAAAAAAAAAAAAAAAPC/"
				],
				[
					697,
					1,
					"paste",
					null,
					"AQAAAHESAAAAAAAAgBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcRIAAAAAAABxEgAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIASAAAAAAAAghIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgBIAAAAAAACAEgAAAAAAAAAAAAAAAPC/"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": "b9"
					},
					"AgAAAIESAAAAAAAAghIAAAAAAAAAAAAAghIAAAAAAACDEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRIAAAAAAACBEgAAAAAAAAAAAAAAAPC/"
				],
				[
					700,
					1,
					"left_delete",
					null,
					"AQAAAIISAAAAAAAAghIAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAgxIAAAAAAACDEgAAAAAAAAAAAAAAAPC/"
				],
				[
					702,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIMSAAAAAAAAhBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxIAAAAAAACDEgAAAAAAAAAAAAAAAPC/"
				],
				[
					703,
					1,
					"left_delete",
					null,
					"AQAAAIMSAAAAAAAAgxIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAhBIAAAAAAACEEgAAAAAAAAAAAAAAAPC/"
				],
				[
					704,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAIMSAAAAAAAAhBIAAAAAAAAAAAAAhBIAAAAAAACFEgAAAAAAAAAAAACFEgAAAAAAAIYSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxIAAAAAAACDEgAAAAAAAAAAAAAAAPC/"
				],
				[
					705,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYSAAAAAAAAhxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhIAAAAAAACGEgAAAAAAAAAAAAAAAPC/"
				],
				[
					706,
					4,
					"left_delete",
					null,
					"BAAAAIYSAAAAAAAAhhIAAAAAAAABAAAAIIUSAAAAAAAAhRIAAAAAAAABAAAAJoQSAAAAAAAAhBIAAAAAAAABAAAAJoMSAAAAAAAAgxIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAhxIAAAAAAACHEgAAAAAAAAAAAAAAAPC/"
				],
				[
					709,
					1,
					"insert",
					{
						"characters": "blen"
					},
					"BAAAAHESAAAAAAAAchIAAAAAAAAAAAAAchIAAAAAAABzEgAAAAAAAAAAAABzEgAAAAAAAHQSAAAAAAAAAAAAAHQSAAAAAAAAdRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcRIAAAAAAABxEgAAAAAAAAAAAAAAAPC/"
				],
				[
					710,
					1,
					"insert",
					{
						"characters": " >="
					},
					"AwAAAHUSAAAAAAAAdhIAAAAAAAAAAAAAdhIAAAAAAAB3EgAAAAAAAAAAAAB3EgAAAAAAAHgSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdRIAAAAAAAB1EgAAAAAAAAAAAAAAAPC/"
				],
				[
					711,
					1,
					"insert",
					{
						"characters": " 1&"
					},
					"AwAAAHgSAAAAAAAAeRIAAAAAAAAAAAAAeRIAAAAAAAB6EgAAAAAAAAAAAAB6EgAAAAAAAHsSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBIAAAAAAAB4EgAAAAAAAAAAAAAAAPC/"
				],
				[
					712,
					1,
					"left_delete",
					null,
					"AQAAAHoSAAAAAAAAehIAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAexIAAAAAAAB7EgAAAAAAAAAAAAAAAPC/"
				],
				[
					713,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHoSAAAAAAAAexIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehIAAAAAAAB6EgAAAAAAAAAAAAAAAPC/"
				],
				[
					714,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AgAAAHsSAAAAAAAAfBIAAAAAAAAAAAAAfBIAAAAAAAB9EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexIAAAAAAAB7EgAAAAAAAAAAAAAAAPC/"
				],
				[
					715,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH0SAAAAAAAAfhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfRIAAAAAAAB9EgAAAAAAAAAAAAAAAPC/"
				],
				[
					716,
					1,
					"paste",
					null,
					"AQAAAH4SAAAAAAAAiBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhIAAAAAAAB+EgAAAAAAAAAAAAAAAPC/"
				],
				[
					717,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAIgSAAAAAAAAiRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBIAAAAAAACIEgAAAAAAAAAAAAAAAPC/"
				],
				[
					718,
					1,
					"left_delete",
					null,
					"AQAAAIgSAAAAAAAAiBIAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAiRIAAAAAAACJEgAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": "(b)"
					},
					"AwAAAIgSAAAAAAAAiRIAAAAAAAAAAAAAiRIAAAAAAACKEgAAAAAAAAAAAACKEgAAAAAAAIsSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBIAAAAAAACIEgAAAAAAAAAAAAAAAPC/"
				],
				[
					722,
					1,
					"left_delete",
					null,
					"AQAAAIsSAAAAAAAAixIAAAAAAAASAAAAcGF0aF9pc2RvdHNsYXNoKGIp",
					"AQAAAAAAAAABAAAAixIAAAAAAACdEgAAAAAAAAAAAAAAAPC/"
				],
				[
					736,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwSAAAAAAAAjRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBIAAAAAAACMEgAAAAAAAAAAAAAAAPC/"
				],
				[
					737,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI0SAAAAAAAAjxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRIAAAAAAACNEgAAAAAAAAAAAAAAAPC/"
				],
				[
					738,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAI4SAAAAAAAAjxIAAAAAAAAAAAAAjxIAAAAAAACQEgAAAAAAAAAAAACPEgAAAAAAAJESAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhIAAAAAAACOEgAAAAAAAAAAAAAAAPC/"
				],
				[
					743,
					1,
					"paste",
					null,
					"AQAAAJESAAAAAAAAmxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRIAAAAAAACREgAAAAAAAAAAAAAAAPC/"
				],
				[
					749,
					1,
					"insert",
					{
						"characters": "size_t"
					},
					"BgAAAJESAAAAAAAAkhIAAAAAAAAAAAAAkhIAAAAAAACTEgAAAAAAAAAAAACTEgAAAAAAAJQSAAAAAAAAAAAAAJQSAAAAAAAAlRIAAAAAAAAAAAAAlRIAAAAAAACWEgAAAAAAAAAAAACWEgAAAAAAAJcSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRIAAAAAAACREgAAAAAAAAAAAAAAAPC/"
				],
				[
					750,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAJcSAAAAAAAAmBIAAAAAAAAAAAAAmBIAAAAAAACZEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlxIAAAAAAACXEgAAAAAAAAAAAAAAAPC/"
				],
				[
					751,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJkSAAAAAAAAmhIAAAAAAAAAAAAAmhIAAAAAAACbEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRIAAAAAAACZEgAAAAAAAAAAAAAAAPC/"
				],
				[
					752,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJsSAAAAAAAAnBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmxIAAAAAAACbEgAAAAAAAAAAAAAAAPC/"
				],
				[
					754,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKYSAAAAAAAAqBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphIAAAAAAACmEgAAAAAAAP///////+9/"
				],
				[
					755,
					1,
					"insert",
					{
						"characters": "b,"
					},
					"AgAAAKcSAAAAAAAAqBIAAAAAAAAAAAAAqBIAAAAAAACpEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApxIAAAAAAACnEgAAAAAAAAAAAAAAAPC/"
				],
				[
					756,
					1,
					"insert",
					{
						"characters": " blen"
					},
					"BQAAAKkSAAAAAAAAqhIAAAAAAAAAAAAAqhIAAAAAAACrEgAAAAAAAAAAAACrEgAAAAAAAKwSAAAAAAAAAAAAAKwSAAAAAAAArRIAAAAAAAAAAAAArRIAAAAAAACuEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqRIAAAAAAACpEgAAAAAAAAAAAAAAAPC/"
				],
				[
					758,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAK8SAAAAAAAAsBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxIAAAAAAACvEgAAAAAAAAAAAAAAAPC/"
				],
				[
					765,
					1,
					"insert",
					{
						"characters": "\n\nb"
					},
					"BgAAALASAAAAAAAAsRIAAAAAAAAAAAAAsRIAAAAAAACzEgAAAAAAAAAAAACzEgAAAAAAALQSAAAAAAAAAAAAALQSAAAAAAAAthIAAAAAAAAAAAAAsRIAAAAAAACxEgAAAAAAAAIAAAAgILQSAAAAAAAAtRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBIAAAAAAACwEgAAAAAAAAAAAAAAAPC/"
				],
				[
					766,
					1,
					"insert",
					{
						"characters": " +="
					},
					"AwAAALUSAAAAAAAAthIAAAAAAAAAAAAAthIAAAAAAAC3EgAAAAAAAAAAAAC3EgAAAAAAALgSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtRIAAAAAAAC1EgAAAAAAAAAAAAAAAPC/"
				],
				[
					767,
					1,
					"insert",
					{
						"characters": " n;"
					},
					"AwAAALgSAAAAAAAAuRIAAAAAAAAAAAAAuRIAAAAAAAC6EgAAAAAAAAAAAAC6EgAAAAAAALsSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuBIAAAAAAAC4EgAAAAAAAAAAAAAAAPC/"
				],
				[
					768,
					1,
					"insert",
					{
						"characters": "\nb"
					},
					"AwAAALsSAAAAAAAAvBIAAAAAAAAAAAAAvBIAAAAAAAC+EgAAAAAAAAAAAAC+EgAAAAAAAL8SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxIAAAAAAAC7EgAAAAAAAAAAAAAAAPC/"
				],
				[
					769,
					1,
					"left_delete",
					null,
					"AQAAAL4SAAAAAAAAvhIAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAvxIAAAAAAAC/EgAAAAAAAAAAAAAAAPC/"
				],
				[
					770,
					1,
					"insert",
					{
						"characters": "blen"
					},
					"BAAAAL4SAAAAAAAAvxIAAAAAAAAAAAAAvxIAAAAAAADAEgAAAAAAAAAAAADAEgAAAAAAAMESAAAAAAAAAAAAAMESAAAAAAAAwhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhIAAAAAAAC+EgAAAAAAAAAAAAAAAPC/"
				],
				[
					771,
					1,
					"insert",
					{
						"characters": " -="
					},
					"AwAAAMISAAAAAAAAwxIAAAAAAAAAAAAAwxIAAAAAAADEEgAAAAAAAAAAAADEEgAAAAAAAMUSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwhIAAAAAAADCEgAAAAAAAAAAAAAAAPC/"
				],
				[
					772,
					1,
					"insert",
					{
						"characters": " n;"
					},
					"AwAAAMUSAAAAAAAAxhIAAAAAAAAAAAAAxhIAAAAAAADHEgAAAAAAAAAAAADHEgAAAAAAAMgSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxRIAAAAAAADFEgAAAAAAAAAAAAAAAPC/"
				],
				[
					803,
					1,
					"insert",
					{
						"characters": "db"
					},
					"AwAAAGMSAAAAAAAAZBIAAAAAAAAAAAAAZBIAAAAAAABkEgAAAAAAAAMAAAB0bXBkEgAAAAAAAGUSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYxIAAAAAAABmEgAAAAAAAAAAAAAAAPC/"
				],
				[
					810,
					1,
					"insert",
					{
						"characters": "db"
					},
					"AwAAAOMSAAAAAAAA5BIAAAAAAAAAAAAA5BIAAAAAAADkEgAAAAAAAAMAAAB0bXDkEgAAAAAAAOUSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4xIAAAAAAADmEgAAAAAAAAAAAAAAAPC/"
				],
				[
					813,
					1,
					"left_delete",
					null,
					"AQAAAGISAAAAAAAAYhIAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAYxIAAAAAAABjEgAAAAAAAAAAAAAAAPC/"
				],
				[
					816,
					1,
					"left_delete",
					null,
					"AQAAAOESAAAAAAAA4RIAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAA4hIAAAAAAADiEgAAAAAAAAAAAAAAAPC/"
				],
				[
					823,
					1,
					"left_delete",
					null,
					"AQAAADgSAAAAAAAAOBIAAAAAAAASAAAAIGRidWZfaW5pdCgmdG1wKTsK",
					"AQAAAAAAAAABAAAAOBIAAAAAAABKEgAAAAAAAAAAAAAAAPC/"
				],
				[
					830,
					1,
					"left_delete",
					null,
					"AQAAAAkSAAAAAAAACRIAAAAAAAAOAAAAICBEeW5CdWYgdG1wOwo",
					"AQAAAAAAAAABAAAACRIAAAAAAAAXEgAAAAAAAAAAAAAAAPC/"
				],
				[
					833,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAACoSAAAAAAAALBIAAAAAAAAAAAAACRIAAAAAAAALEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACRIAAAAAAAAqEgAAAAAAAAAAAAAAAPC/"
				],
				[
					836,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKcTAAAAAAAAqRMAAAAAAAAAAAAAyhIAAAAAAADMEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyhIAAAAAAACnEwAAAAAAAAAAAAAAAPC/"
				],
				[
					845,
					1,
					"insert",
					{
						"characters": "\ndbuf_"
					},
					"BwAAAMkSAAAAAAAAyhIAAAAAAAAAAAAAyhIAAAAAAADMEgAAAAAAAAAAAADMEgAAAAAAAM0SAAAAAAAAAAAAAM0SAAAAAAAAzhIAAAAAAAAAAAAAzhIAAAAAAADPEgAAAAAAAAAAAADPEgAAAAAAANASAAAAAAAAAAAAANASAAAAAAAA0RIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyRIAAAAAAADJEgAAAAAAAAAAAAAAAPC/"
				],
				[
					846,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAANESAAAAAAAA0hIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RIAAAAAAADREgAAAAAAAAAAAAAAAPC/"
				],
				[
					847,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANISAAAAAAAA1BIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hIAAAAAAADSEgAAAAAAAAAAAAAAAPC/"
				],
				[
					848,
					1,
					"insert",
					{
						"characters": "db,"
					},
					"AwAAANMSAAAAAAAA1BIAAAAAAAAAAAAA1BIAAAAAAADVEgAAAAAAAAAAAADVEgAAAAAAANYSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xIAAAAAAADTEgAAAAAAAAAAAAAAAPC/"
				],
				[
					849,
					1,
					"left_delete",
					null,
					"AQAAANUSAAAAAAAA1RIAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA1hIAAAAAAADWEgAAAAAAAAAAAAAAAPC/"
				],
				[
					851,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANYSAAAAAAAA1xIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hIAAAAAAADWEgAAAAAAAAAAAAAAAPC/"
				],
				[
					856,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA1xIAAAAAAADXEgAAAAAAAAAAAAAAAPC/"
				],
				[
					888,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAADA6AAAAAAAAMToAAAAAAAAAAAAAMToAAAAAAAAzOgAAAAAAAAAAAAAzOgAAAAAAADQ6AAAAAAAAAAAAADQ6AAAAAAAANjoAAAAAAAAAAAAAMToAAAAAAAAxOgAAAAAAAAIAAAAgIDQ6AAAAAAAANToAAAAAAAAAAAAANToAAAAAAAA2OgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMDoAAAAAAAAwOgAAAAAAAAAAAAAAAPC/"
				],
				[
					889,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADY6AAAAAAAAODoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANjoAAAAAAAA2OgAAAAAAAAAAAAAAAPC/"
				],
				[
					890,
					1,
					"insert",
					{
						"characters": "path"
					},
					"BAAAADc6AAAAAAAAODoAAAAAAAAAAAAAODoAAAAAAAA5OgAAAAAAAAAAAAA5OgAAAAAAADo6AAAAAAAAAAAAADo6AAAAAAAAOzoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANzoAAAAAAAA3OgAAAAAAAAAAAAAAAPC/"
				],
				[
					891,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADs6AAAAAAAAPToAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOzoAAAAAAAA7OgAAAAAAAAAAAAAAAPC/"
				],
				[
					892,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAADw6AAAAAAAAPToAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPDoAAAAAAAA8OgAAAAAAAAAAAAAAAPC/"
				],
				[
					894,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD46AAAAAAAAPzoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPjoAAAAAAAA+OgAAAAAAAAAAAAAAAPC/"
				],
				[
					895,
					3,
					"left_delete",
					null,
					"AwAAAD46AAAAAAAAPjoAAAAAAAABAAAAID06AAAAAAAAPToAAAAAAAABAAAAXTw6AAAAAAAAPDoAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAPzoAAAAAAAA/OgAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					1,
					"insert",
					{
						"characters": "oi"
					},
					"AgAAADw6AAAAAAAAPToAAAAAAAAAAAAAPToAAAAAAAA+OgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPDoAAAAAAAA8OgAAAAAAAAAAAAAAAPC/"
				],
				[
					897,
					2,
					"left_delete",
					null,
					"AgAAAD06AAAAAAAAPToAAAAAAAABAAAAaTw6AAAAAAAAPDoAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAPjoAAAAAAAA+OgAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					1,
					"insert",
					{
						"characters": "i]"
					},
					"AgAAADw6AAAAAAAAPToAAAAAAAAAAAAAPToAAAAAAAA+OgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPDoAAAAAAAA8OgAAAAAAAAAAAAAAAPC/"
				],
				[
					899,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAD46AAAAAAAAPzoAAAAAAAAAAAAAPzoAAAAAAABAOgAAAAAAAAAAAABAOgAAAAAAAEE6AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPjoAAAAAAAA+OgAAAAAAAAAAAAAAAPC/"
				],
				[
					900,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEE6AAAAAAAAQjoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQToAAAAAAABBOgAAAAAAAAAAAAAAAPC/"
				],
				[
					901,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAEI6AAAAAAAARDoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQjoAAAAAAABCOgAAAAAAAAAAAAAAAPC/"
				],
				[
					902,
					1,
					"insert",
					{
						"characters": "\\0"
					},
					"AgAAAEM6AAAAAAAARDoAAAAAAAAAAAAARDoAAAAAAABFOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQzoAAAAAAABDOgAAAAAAAAAAAAAAAPC/"
				],
				[
					922,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAEc6AAAAAAAASDoAAAAAAAAAAAAASDoAAAAAAABKOgAAAAAAAAAAAABIOgAAAAAAAEg6AAAAAAAAAgAAACAgSDoAAAAAAABMOgAAAAAAAAAAAABMOgAAAAAAAE06AAAAAAAAAAAAAE06AAAAAAAATjoAAAAAAAAAAAAATjoAAAAAAABPOgAAAAAAAAAAAABPOgAAAAAAAFA6AAAAAAAAAAAAAFA6AAAAAAAAUToAAAAAAAAAAAAAUToAAAAAAABSOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARzoAAAAAAABHOgAAAAAAAAAAAAAAAPC/"
				],
				[
					923,
					1,
					"insert",
					{
						"characters": " 0;"
					},
					"AwAAAFI6AAAAAAAAUzoAAAAAAAAAAAAAUzoAAAAAAABUOgAAAAAAAAAAAABUOgAAAAAAAFU6AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUjoAAAAAAABSOgAAAAAAAAAAAAAAAPC/"
				],
				[
					924,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAFU6AAAAAAAAVjoAAAAAAAAAAAAAVjoAAAAAAABaOgAAAAAAAAAAAABWOgAAAAAAAFY6AAAAAAAABAAAACAgICBWOgAAAAAAAFg6AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVToAAAAAAABVOgAAAAAAAAAAAAAAAPC/"
				],
				[
					929,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAWDoAAAAAAABYOgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-lexer.c",
			"settings":
			{
				"buffer_size": 42492,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/path.h",
			"settings":
			{
				"buffer_size": 5000,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"paste",
					null,
					"AQAAAOALAAAAAAAAAgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AsAAAAAAADgCwAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAAAEMAAAAAAAAAQwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAEMAAAAAAAAAgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAIMAAAAAAAAAwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"join_lines",
					null,
					"AgAAAOYLAAAAAAAA5gsAAAAAAAABAAAACuYLAAAAAAAA5wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AsAAAAAAADgCwAAAAAAAAAAAAAAAAAA"
				],
				[
					45,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAGcNAAAAAAAAaQ0AAAAAAAAAAAAAnQwAAAAAAACfDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZw0AAAAAAACdDAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "num_components"
					},
					"DwAAAOwLAAAAAAAA7QsAAAAAAAAAAAAA7QsAAAAAAADtCwAAAAAAAAYAAABsZW5ndGjtCwAAAAAAAO4LAAAAAAAAAAAAAO4LAAAAAAAA7wsAAAAAAAAAAAAA7wsAAAAAAADwCwAAAAAAAAAAAADwCwAAAAAAAPELAAAAAAAAAAAAAPELAAAAAAAA8gsAAAAAAAAAAAAA8gsAAAAAAADzCwAAAAAAAAAAAADzCwAAAAAAAPQLAAAAAAAAAAAAAPQLAAAAAAAA9QsAAAAAAAAAAAAA9QsAAAAAAAD2CwAAAAAAAAAAAAD2CwAAAAAAAPcLAAAAAAAAAAAAAPcLAAAAAAAA+AsAAAAAAAAAAAAA+AsAAAAAAAD5CwAAAAAAAAAAAAD5CwAAAAAAAPoLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AsAAAAAAADyCwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAfEwAAI2lmbmRlZiBQQVRIX0gKI2RlZmluZSBQQVRIX0gKCiNpbmNsdWRlIDxjdHlwZS5oPgojaW5jbHVkZSA8ZGlyZW50Lmg+CiNpbmNsdWRlIDxmY250bC5oPgojaW5jbHVkZSA8c3RyaW5nLmg+CiNpbmNsdWRlIDxzeXMvc3RhdC5oPgojaW5jbHVkZSA8dW5pc3RkLmg+CgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlICJ1dGlscy5oIgoKI2lmZGVmIF9XSU4zMgpzc2l6ZV90IHJlYWRsaW5rKGNvbnN0IGNoYXIqLCBjaGFyKiwgc2l6ZV90KTsKaW50IGlzX3N5bWxpbmsoY29uc3QgY2hhciopOwpjaGFyIGlzX2p1bmN0aW9uKGNvbnN0IGNoYXIqKTsKI2VuZGlmCgovKioKICogXGRlZmdyb3VwIHBhdGggRGlyZWN0b3J5IHBhdGggbWFuaXB1bGF0aW9uCiAqIEB7CiAqLwojZGVmaW5lIFBBVEhfTk9URklSU1QgMHg4MAoKI2RlZmluZSBQQVRIX0ZOTV9OT01BVENIIDEKI2RlZmluZSBQQVRIX0ZOTV9QQVRITkFNRSAoMSA8PCAwKQojZGVmaW5lIFBBVEhfRk5NX05PRVNDQVBFICgxIDw8IDEpCiNkZWZpbmUgUEFUSF9GTk1fUEVSSU9EICgxIDw8IDIpCgojaWYgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01TWVNfXykgfHwgZGVmaW5lZChfX0NZR1dJTl9fKQojZGVmaW5lIFBBVEhTRVBfUyAiLyIKI2RlZmluZSBQQVRIU0VQX0MgJy8nCiNkZWZpbmUgUEFUSERFTElNX1MgIjsiCiNkZWZpbmUgcGF0aF9pc3NlcChjKSAoKGMpID09ICcvJyB8fCAoYykgPT0gJ1xcJykKI2VsaWYgZGVmaW5lZChfV0lOMzIpCiNkZWZpbmUgUEFUSFNFUF9DICdcXCcKI2RlZmluZSBQQVRIU0VQX1MgIlxcIgojZGVmaW5lIFBBVEhERUxJTV9TICI7IgojZGVmaW5lIHBhdGhfaXNzZXAoYykgKChjKSA9PSAnXFwnKQojZWxzZQojZGVmaW5lIFBBVEhTRVBfUyAiLyIKI2RlZmluZSBQQVRIU0VQX0MgJy8nCiNkZWZpbmUgUEFUSERFTElNX1MgIjoiCiNkZWZpbmUgcGF0aF9pc3NlcChjKSAoKGMpID09ICcvJykKI2VuZGlmCgojZGVmaW5lIHBhdGhfaXNhYnMocCkgKHBhdGhfaXNzZXAoKHApWzBdKSB8fCAoKHApWzBdICYmIChwKVsxXSA9PSAnOicgJiYgcGF0aF9pc3NlcCgocClbMl0pKSkKI2RlZmluZSBwYXRoX2lzcmVsKHApICghcGF0aF9pc2FicyhwKSkKI2RlZmluZSBwYXRoX2lzbmFtZShwKSAoKHApW3N0cl9jaHIoKHApLCAnLycpXSAhPSAnXDAnKQojZGVmaW5lIHBhdGhfaXNkb3QocCkgKChwKVswXSA9PSAnLicgJiYgKChwKVsxXSA9PSAnXDAnIHx8IHBhdGhfaXNzZXAoKHApWzFdKSkpCiNkZWZpbmUgcGF0aF9pc2RvdHNsYXNoKHApICgocClbMF0gPT0gJy4nICYmIHBhdGhfaXNzZXAoKHApWzFdKSkKI2RlZmluZSBwYXRoX2lzZG90ZG90KHApICgocClbMF0gPT0gJy4nICYmIChwKVsxXSA9PSAnLicgJiYgKChwKVsyXSA9PSAnXDAnIHx8IHBhdGhfaXNzZXAoKHApWzJdKSkpCgp0eXBlZGVmIHN0cnVjdCB7CiAgc2l6ZV90IHN6MSwgc3oyOwp9IFNpemVQYWlyOwoKaW50IHBhdGhfYWJzb2x1dGUoY29uc3QgY2hhciosIER5bkJ1ZiopOwppbnQgcGF0aF9hYnNvbHV0ZV9kYihEeW5CdWYqKTsKdm9pZCBwYXRoX2FwcGVuZChjb25zdCBjaGFyKiwgc2l6ZV90LCBEeW5CdWYqIGRiKTsKaW50IHBhdGhfY2Fub25pY2FsKGNvbnN0IGNoYXIqLCBEeW5CdWYqKTsKaW50IHBhdGhfY2Fub25pY2FsX2J1ZihEeW5CdWYqKTsKc2l6ZV90IHBhdGhfY29sbGFwc2UoY2hhciosIHNpemVfdCk7ClNpemVQYWlyIHBhdGhfY29tbW9uX3ByZWZpeChjb25zdCBjaGFyKiwgc2l6ZV90LCBjb25zdCBjaGFyKiBzMiwgc2l6ZV90IG4yKTsKc2l6ZV90IHBhdGhfY29tcG9uZW50cyhjb25zdCBjaGFyKiwgc2l6ZV90LCB1aW50MzJfdCBuKTsKdm9pZCBwYXRoX2NvbmNhdChjb25zdCBjaGFyKiwgc2l6ZV90LCBjb25zdCBjaGFyKiBiLCBzaXplX3QgYmxlbiwgRHluQnVmKiBkYik7CmNvbnN0IGNoYXIqIHBhdGhfYXQoY29uc3QgY2hhciosIHNpemVfdCosIGludCk7CmludCBwYXRoX2V4aXN0cyhjb25zdCBjaGFyKik7CmNvbnN0IGNoYXIqIHBhdGhfZXh0bmFtZShjb25zdCBjaGFyKik7CmludCBwYXRoX2ZpbmQoY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBEeW5CdWYqIGRiKTsKaW50IHBhdGhfZm5tYXRjaChjb25zdCBjaGFyKiwgdW5zaWduZWQgaW50LCBjb25zdCBjaGFyKiBzdHJpbmcsIHVuc2lnbmVkIGludCBzbGVuLCBpbnQgZmxhZ3MpOwpjaGFyKiBwYXRoX2dldGN3ZChEeW5CdWYqKTsKY2hhciogcGF0aF9nZXRob21lKGludCk7CmludCBwYXRoX2lzX2Fic29sdXRlX2IoY29uc3QgY2hhciosIHNpemVfdCk7CnN0YXRpYyBpbmxpbmUgaW50CnBhdGhfaXNfYWJzb2x1dGUoY29uc3QgY2hhciogcykgewogIHJldHVybiBwYXRoX2lzX2Fic29sdXRlX2Iocywgc3RybGVuKHMpKTsKfQppbnQgcGF0aF9pc19kaXJlY3RvcnkoY29uc3QgY2hhciopOwppbnQgcGF0aF9pc19maWxlKGNvbnN0IGNoYXIqKTsKaW50IHBhdGhfaXNfY2hhcmRldihjb25zdCBjaGFyKik7CmludCBwYXRoX2lzX2Jsb2NrZGV2KGNvbnN0IGNoYXIqKTsKaW50IHBhdGhfaXNfZmlmbyhjb25zdCBjaGFyKik7CmludCBwYXRoX2lzX3NvY2tldChjb25zdCBjaGFyKik7CmludCBwYXRoX2lzX3N5bWxpbmsoY29uc3QgY2hhciopOwppbnQgcGF0aF9ub3JtYWxpemUoY29uc3QgY2hhciosIER5bkJ1ZiosIGludCBzeW1ib2xpYyk7CmludCBwYXRoX3JlbGF0aXZlKGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKiwgRHluQnVmKiBvdXQpOwppbnQgcGF0aF9yZWxhdGl2ZV9iKGNvbnN0IGNoYXIqLCBzaXplX3QsIGNvbnN0IGNoYXIqIHMyLCBzaXplX3QgbjIsIER5bkJ1Ziogb3V0KTsKc2l6ZV90IHBhdGhfcm9vdChjb25zdCBjaGFyKiwgc2l6ZV90KTsKc2l6ZV90IHBhdGhfc2tpcF9jb21wb25lbnQoY29uc3QgY2hhciosIHNpemVfdCwgc2l6ZV90IHBvcyk7CnNpemVfdCBwYXRoX3NraXBfc2VwYXJhdG9yKGNvbnN0IGNoYXIqLCBzaXplX3QsIHNpemVfdCBwb3MpOwpzaXplX3QgcGF0aF9za2lwX2NvbXBvbmVudF9zKGNvbnN0IGNoYXIqKTsKc2l6ZV90IHBhdGhfc2tpcF9zZXBhcmF0b3Jfcyhjb25zdCBjaGFyKik7CnNpemVfdCBwYXRoX251bV9jb21wb25lbnRzKGNvbnN0IGNoYXIqIHApOwoKY2hhciogcGF0aF9iYXNlbmFtZShjb25zdCBjaGFyKik7CmNoYXIqIF9fcGF0aF9kaXJuYW1lKGNvbnN0IGNoYXIqLCBEeW5CdWYqKTsKY2hhciogcGF0aF9kaXJuYW1lKGNvbnN0IGNoYXIqKTsKaW50IHBhdGhfcmVhZGxpbmsoY29uc3QgY2hhciosIER5bkJ1ZiopOwoKLypzdGF0aWMgaW5saW5lIHNpemVfdApwYXRoX2xlbmd0aChjb25zdCBjaGFyKiBzLCBzaXplX3QgbikgewogIHJldHVybiBwYXRoX3NraXBfY29tcG9uZW50KHMsIG4sIDApOwp9CgpzdGF0aWMgaW5saW5lIHNpemVfdApwYXRoX2xlbmd0aF9zKGNvbnN0IGNoYXIqIHMpIHsKICByZXR1cm4gcGF0aF9za2lwX2NvbXBvbmVudChzLCBzdHJsZW4ocyksIDApOwp9Ki8KCnN0YXRpYyBpbmxpbmUgc2l6ZV90CnBhdGhfc2tpcF9zKGNvbnN0IGNoYXIqIHMpIHsKICBjb25zdCBjaGFyKiBwID0gczsKICB3aGlsZSgqcCAmJiBwYXRoX2lzc2VwKCpwKSkgKytwOwogIHdoaWxlKCpwICYmICFwYXRoX2lzc2VwKCpwKSkgKytwOwogIHJldHVybiBwIC0gczsKfQoKc3RhdGljIGlubGluZSBzaXplX3QKcGF0aF9za2lwMl9zKGNvbnN0IGNoYXIqIHMpIHsKICBjb25zdCBjaGFyKiBwID0gczsKICB3aGlsZSgqcCAmJiAhcGF0aF9pc3NlcCgqcCkpICsrcDsKICB3aGlsZSgqcCAmJiBwYXRoX2lzc2VwKCpwKSkgKytwOwogIHJldHVybiBwIC0gczsKfQoKc3RhdGljIGlubGluZSBzaXplX3QKcGF0aF9za2lwKGNvbnN0IGNoYXIqIHMsIHNpemVfdCBuKSB7CiAgY29uc3QgY2hhciAqcCA9IHMsICplID0gcyArIG47CiAgcCArPSBwYXRoX3NraXBfc2VwYXJhdG9yKHMsIG4sIDApOwogIHAgKz0gcGF0aF9za2lwX2NvbXBvbmVudChwLCBlIC0gcCwgMCk7CiAgcmV0dXJuIHAgLSBzOwp9CgpzdGF0aWMgaW5saW5lIHNpemVfdApwYXRoX3NraXAyKGNvbnN0IGNoYXIqIHMsIHNpemVfdCBuKSB7CiAgY29uc3QgY2hhciAqcCA9IHMsICplID0gcyArIG47CiAgcCArPSBwYXRoX3NraXBfY29tcG9uZW50KHMsIG4sIDApOwogIHAgKz0gcGF0aF9za2lwX3NlcGFyYXRvcihwLCBlIC0gcCwgMCk7CiAgcmV0dXJuIHAgLSBzOwp9CgpzdGF0aWMgaW5saW5lIHNpemVfdApwYXRoX3NraXBsZW4oY29uc3QgY2hhciogcywgc2l6ZV90KiBsZW4sIHNpemVfdCBuKSB7CiAgY29uc3QgY2hhciAqcCA9IHMsICplID0gcyArIG47CgogIHAgKz0gcGF0aF9za2lwX2NvbXBvbmVudChzLCBlIC0gcCwgMCk7CgogIGlmKGxlbikKICAgICpsZW4gPSBwIC0gczsKCiAgcCArPSBwYXRoX3NraXBfc2VwYXJhdG9yKHAsIGUgLSBwLCAwKTsKCiAgcmV0dXJuIHAgLSBzOwp9CgpzdGF0aWMgaW5saW5lIHNpemVfdApwYXRoX3JpZ2h0KGNvbnN0IGNoYXIqIHMsIHNpemVfdCBuKSB7CiAgY29uc3QgY2hhciogcCA9IHMgKyBuIC0gMTsKICB3aGlsZShwID49IHMgJiYgcGF0aF9pc3NlcCgqcCkpIC0tcDsKICB3aGlsZShwID49IHMgJiYgIXBhdGhfaXNzZXAoKnApKSAtLXA7CiAgcmV0dXJuIHAgLSBzOwp9CgpzdGF0aWMgaW5saW5lIGludApwYXRoX2dldHNlcChjb25zdCBjaGFyKiBwYXRoKSB7CiAgd2hpbGUoKnBhdGgpIHsKICAgIGlmKHBhdGhfaXNzZXAoKnBhdGgpKQogICAgICByZXR1cm4gKnBhdGg7CiAgICArK3BhdGg7CiAgfQogIHJldHVybiAnXDAnOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIqCnBhdGhfdHJpbV9kb3RzbGFzaChjb25zdCBjaGFyKiBzKSB7CiAgd2hpbGUoKnMgJiYgcGF0aF9pc2RvdHNsYXNoKHMpKSBzICs9IHBhdGhfc2tpcDJfcyhzKTsKCiAgcmV0dXJuIHM7Cn0KCi8qKgogKiBAfQogKi8KI2VuZGlmIC8qIGRlZmluZWQoUEFUSF9IKSAqLwoAAAAAAAAAABcTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wsAAAAAAAD6CwAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"paste",
					null,
					"AQAAAFIMAAAAAAAAfQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgwAAAAAAABSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"left_delete",
					null,
					"AQAAAHwMAAAAAAAAfAwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAfQwAAAAAAAB9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHwMAAAAAAAAfQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAwAAAAAAAB8DAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAH0MAAAAAAAAfgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQwAAAAAAAB9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"left_delete",
					null,
					"AQAAAFkMAAAAAAAAWQwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAWgwAAAAAAABaDAAAAAAAAAAAAAAAAAAA"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFkMAAAAAAAAWgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQwAAAAAAABZDAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"left_delete",
					null,
					"AQAAAFEMAAAAAAAAUQwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAUgwAAAAAAABSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "\n\n#define"
					},
					"CQAAAHwFAAAAAAAAfQUAAAAAAAAAAAAAfQUAAAAAAAB+BQAAAAAAAAAAAAB+BQAAAAAAAH8FAAAAAAAAAAAAAH8FAAAAAAAAgAUAAAAAAAAAAAAAgAUAAAAAAACBBQAAAAAAAAAAAACBBQAAAAAAAIIFAAAAAAAAAAAAAIIFAAAAAAAAgwUAAAAAAAAAAAAAgwUAAAAAAACEBQAAAAAAAAAAAACEBQAAAAAAAIUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAUAAAAAAAB8BQAAAAAAAP///////+9/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " path_is_relative"
					},
					"EQAAAIUFAAAAAAAAhgUAAAAAAAAAAAAAhgUAAAAAAACHBQAAAAAAAAAAAACHBQAAAAAAAIgFAAAAAAAAAAAAAIgFAAAAAAAAiQUAAAAAAAAAAAAAiQUAAAAAAACKBQAAAAAAAAAAAACKBQAAAAAAAIsFAAAAAAAAAAAAAIsFAAAAAAAAjAUAAAAAAAAAAAAAjAUAAAAAAACNBQAAAAAAAAAAAACNBQAAAAAAAI4FAAAAAAAAAAAAAI4FAAAAAAAAjwUAAAAAAAAAAAAAjwUAAAAAAACQBQAAAAAAAAAAAACQBQAAAAAAAJEFAAAAAAAAAAAAAJEFAAAAAAAAkgUAAAAAAAAAAAAAkgUAAAAAAACTBQAAAAAAAAAAAACTBQAAAAAAAJQFAAAAAAAAAAAAAJQFAAAAAAAAlQUAAAAAAAAAAAAAlQUAAAAAAACWBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQUAAAAAAACFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJYFAAAAAAAAmAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgUAAAAAAACWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAJcFAAAAAAAAmAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwUAAAAAAACXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": " path_isdot"
					},
					"CwAAAJkFAAAAAAAAmgUAAAAAAAAAAAAAmgUAAAAAAACbBQAAAAAAAAAAAACbBQAAAAAAAJwFAAAAAAAAAAAAAJwFAAAAAAAAnQUAAAAAAAAAAAAAnQUAAAAAAACeBQAAAAAAAAAAAACeBQAAAAAAAJ8FAAAAAAAAAAAAAJ8FAAAAAAAAoAUAAAAAAAAAAAAAoAUAAAAAAAChBQAAAAAAAAAAAAChBQAAAAAAAKIFAAAAAAAAAAAAAKIFAAAAAAAAowUAAAAAAAAAAAAAowUAAAAAAACkBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQUAAAAAAACZBQAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "slash"
					},
					"BQAAAKQFAAAAAAAApQUAAAAAAAAAAAAApQUAAAAAAACmBQAAAAAAAAAAAACmBQAAAAAAAKcFAAAAAAAAAAAAAKcFAAAAAAAAqAUAAAAAAAAAAAAAqAUAAAAAAACpBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAUAAAAAAACkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAKkFAAAAAAAAqwUAAAAAAAAAAAAAqgUAAAAAAACsBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQUAAAAAAACpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAKsFAAAAAAAArAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwUAAAAAAACrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"left_delete",
					null,
					"AQAAAKsFAAAAAAAAqwUAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAArAUAAAAAAACsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAKoFAAAAAAAAqgUAAAAAAAABAAAAKKoFAAAAAAAAqgUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAqwUAAAAAAACrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAKoFAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgUAAAAAAACqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAKwFAAAAAAAArQUAAAAAAAAAAAAArQUAAAAAAACuBQAAAAAAAAAAAACuBQAAAAAAAK8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAUAAAAAAACsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": " path_"
					},
					"BgAAAK8FAAAAAAAAsAUAAAAAAAAAAAAAsAUAAAAAAACxBQAAAAAAAAAAAACxBQAAAAAAALIFAAAAAAAAAAAAALIFAAAAAAAAswUAAAAAAAAAAAAAswUAAAAAAAC0BQAAAAAAAAAAAAC0BQAAAAAAALUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwUAAAAAAACvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					9,
					"left_delete",
					null,
					"CQAAALQFAAAAAAAAtAUAAAAAAAABAAAAX7MFAAAAAAAAswUAAAAAAAABAAAAaLIFAAAAAAAAsgUAAAAAAAABAAAAdLEFAAAAAAAAsQUAAAAAAAABAAAAYbAFAAAAAAAAsAUAAAAAAAABAAAAcK8FAAAAAAAArwUAAAAAAAABAAAAIK4FAAAAAAAArgUAAAAAAAABAAAAJq0FAAAAAAAArQUAAAAAAAABAAAAJqwFAAAAAAAArAUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAtQUAAAAAAAC1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": " ||"
					},
					"AwAAAKwFAAAAAAAArQUAAAAAAAAAAAAArQUAAAAAAACuBQAAAAAAAAAAAACuBQAAAAAAAK8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAUAAAAAAACsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": " path_isdotdot"
					},
					"DgAAAK8FAAAAAAAAsAUAAAAAAAAAAAAAsAUAAAAAAACxBQAAAAAAAAAAAACxBQAAAAAAALIFAAAAAAAAAAAAALIFAAAAAAAAswUAAAAAAAAAAAAAswUAAAAAAAC0BQAAAAAAAAAAAAC0BQAAAAAAALUFAAAAAAAAAAAAALUFAAAAAAAAtgUAAAAAAAAAAAAAtgUAAAAAAAC3BQAAAAAAAAAAAAC3BQAAAAAAALgFAAAAAAAAAAAAALgFAAAAAAAAuQUAAAAAAAAAAAAAuQUAAAAAAAC6BQAAAAAAAAAAAAC6BQAAAAAAALsFAAAAAAAAAAAAALsFAAAAAAAAvAUAAAAAAAAAAAAAvAUAAAAAAAC9BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwUAAAAAAACvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAL0FAAAAAAAAvwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQUAAAAAAAC9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAL4FAAAAAAAAvwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgUAAAAAAAC+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAMAFAAAAAAAAwQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAUAAAAAAADABQAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAJoFAAAAAAAAmwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgUAAAAAAACaBQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/doc",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/ecmascript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/csv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/include/libutf.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/src/libutf.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/debug.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stream.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_textcode.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/err",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/doc/latex/unionVector.tex",
		"/home/roman/.config/sublime-text/Packages/User/Themes/[ Argonaut ].tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/usr/include/archive.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debug.h",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_treewalker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/usr/lib/gcc/x86_64-linux-gnu/11/include/stdatomic.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debug.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/flexbox-intrinsic-sizing-horiz-1-ref.json",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.c",
		"/usr/i686-w64-mingw32/include/io.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/Makefile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/util.es",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c.orig"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"tostring",
			"toStringTag",
			"to_string_tag",
			"toStringTag",
			"out.file",
			"out.puts",
			"out",
			"outputFile",
			"AddExport",
			"readPackage",
			"ResolveAlias",
			"ReadPackageJSON",
			"jsm_load_json",
			"path_collapse",
			"relative",
			"is_relative",
			"path_concat",
			"path_length",
			"skip2",
			"path_length\\(([^,]*), ([^\\)]*)\\);",
			"path_length",
			"METHOD_LENGTH:",
			"METHOD_LENGTH",
			"path_relative",
			"^js[^ ]*_invoke",
			"_invoke",
			"libutf",
			"extendArray",
			"pushUnique",
			"getPrototypeChain",
			"getConstructorChain",
			"bindMethods",
			"ReadPackageJSON",
			"package.json",
			"readPackage",
			"main",
			"-16s",
			"%([0-9]+)s",
			"search_list",
			"__func__",
			"\\\\n",
			"jsm_find_suffix",
			"debug_module_loader",
			"\"DEBUG\"",
			"jsm_locate_module",
			"is_search",
			"path_is_",
			"^export ",
			"errno",
			"sizeSync",
			"numerr\\(",
			"numerr",
			"function numerr",
			"numerr",
			"sizeSync",
			"errno",
			"errni",
			"numerr\\(",
			"seek\\(",
			"sizeSync",
			"lexer_peek",
			"LEXER_EOF",
			"lexer_lex\\(",
			"lexer_lex",
			"JS_Call",
			"PROP_",
			"mode",
			"lexer_mode",
			"lexer",
			"PROP_MODE:",
			"PROP_MODE",
			"install\\(",
			"LIB_MODULES",
			"results",
			"writte.*out\\.file",
			"out\\.file",
			"file:",
			"out\\.file",
			"\\.file",
			"file;:",
			"bytes written",
			"written ",
			"printFiles",
			"DummyWriter",
			"FileWriter",
			"out =",
			"written to",
			"'keys'",
			"removeExports",
			"took",
			"\\*\\.js",
			"ln ",
			"SYMLINK",
			"main",
			"/\\*",
			"function ResolveImports",
			"printFiles",
			"main",
			"line:",
			"'impexp'",
			"std\\.",
			"ListExports",
			"std\\.",
			"std.puts",
			"printFiles",
			"buffers",
			"printTok",
			"debug",
			"main",
			"repl =",
			"printCsi",
			"out",
			"printCsi",
			"RemovePrompt",
			"reader_cancel",
			"reader_abort",
			"readable_abort",
			"reader_abort",
			"READABLE_ABORT",
			"writable_abort",
			"writable_close",
			"transform_controller",
			"_controller",
			"writable_close",
			"reader_clean",
			"reader_pass",
			"reader_update",
			"WRITABLE_METHOD_CLOSE"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"path_skip_component(\\1, \\2, 0);",
			"-18s",
			"%-\\1s",
			"__FUNCTION__",
			".value",
			"->value",
			"\\1//printf",
			"stream",
			"_ENDIANNESS",
			"_ENDIAN",
			"be'",
			"le'",
			"'utf-",
			"-BE'",
			"'UTF-",
			"endian",
			"->endian == BIG",
			"transform_terminate",
			"transform_",
			"\\1",
			"type",
			"js_misc_duparraybuffer",
			"out.puts",
			"putline",
			"\\1: \\2,",
			"",
			"{ return",
			"\\\\\"",
			"\\1if(debug_module_loader) \\2",
			"",
			"BuiltinModule",
			"Text.store",
			"Tokens",
			"tokenModifiers",
			"xml_debug",
			"\\1",
			"xml_debug",
			"WRITABLE_GET_WRITER",
			"WRITABLE_CLOSE",
			"struct stream_reader",
			"readable_cancel",
			"READABLE_CANCEL",
			"readable_unlock",
			"writable_get_writer",
			"writable_\\1lock",
			"READABLE_",
			"writ",
			"FUNC_CLOSE",
			"js_reader_method",
			"js_writer_method",
			"js_stream_method",
			"STREAM_LOCKED",
			"->reader",
			"\"StreamReader",
			"Reader",
			"METHOD_",
			"array",
			"funcs.array",
			"js_resolve_functions",
			"js_resolvefunctions",
			"funcs[1]",
			"funcs[0]",
			"js_resolvingfunctions_free",
			"js_resolvingfunctions_ree",
			"length",
			"Chunk",
			"loc",
			"prevLength",
			"prevOffset",
			"compact(\\1)",
			"js_location_create",
			"lexer_token(",
			"token_lex(",
			"LOCATION_PROP_CHAROFFSET",
			"loc->",
			"\\1_release",
			"token",
			"ALLOC_PTR",
			"ALLOC_BLOCK(p)",
			"ALLOC_BLOCK_SIZE",
			"",
			"const char* str\\1",
			"void* p,",
			"size_t size)",
			"JSRuntime* rt,",
			"JSContext\\* ctx,",
			";",
			" &(((struct alloc_block*)p)[-1]);",
			"add_to_list",
			"",
			"DEFINES_H",
			"int",
			"log",
			"out",
			"array_",
			"[%p]",
			"pthread_self()",
			"js_token_data2(ctx,",
			"js_lexer_data2(ctx,",
			"\\1//console",
			"inspectSymbol",
			"parent",
			"gettersetter",
			"ELEMENT_NODE",
			"parent",
			"attributes",
			"Node.prototype.",
			"\\1static \\2 = \\3;",
			"const raw = Node.raw(this);",
			"\\1.set\\(\\2\\)",
			"\\1.get\\(this\\)",
			"ownerElement.get\\(this\\)",
			"rawNode.get\\(this\\)",
			"inspectSymbol",
			"CSV",
			"\\1//",
			"args->c",
			"args->",
			"\\1//\\2",
			"METHOD_VALUES",
			"pr->",
			"property",
			"size[0]",
			"s->",
			"(sock)->",
			", s,",
			"(sock).",
			", *s,"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5015,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
							"function_name_status_row": 29,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									65,
									81
								],
								[
									379,
									396
								],
								[
									428,
									451
								],
								[
									525,
									542
								],
								[
									580,
									597
								],
								[
									711,
									728
								],
								[
									780,
									812
								],
								[
									917,
									934
								],
								[
									1131,
									1155
								],
								[
									1190,
									1214
								],
								[
									1251,
									1275
								],
								[
									1313,
									1337
								],
								[
									1376,
									1400
								],
								[
									1574,
									1598
								],
								[
									1639,
									1663
								],
								[
									1710,
									1713
								],
								[
									1717,
									1741
								],
								[
									1804,
									1808
								],
								[
									1812,
									1836
								],
								[
									2231,
									2251
								],
								[
									3330,
									3347
								],
								[
									3392,
									3402
								],
								[
									5739,
									5751
								],
								[
									5835,
									5847
								],
								[
									6713,
									6737
								],
								[
									6763,
									6787
								],
								[
									6852,
									6868
								],
								[
									6895,
									6908
								],
								[
									6946,
									6966
								],
								[
									7051,
									7073
								],
								[
									7105,
									7121
								],
								[
									7206,
									7230
								],
								[
									7342,
									7366
								],
								[
									7370,
									7394
								],
								[
									7406,
									7426
								],
								[
									7448,
									7467
								],
								[
									7578,
									7593
								],
								[
									7751,
									7766
								],
								[
									7777,
									7792
								],
								[
									7863,
									7878
								],
								[
									7881,
									7896
								],
								[
									7981,
									7996
								],
								[
									7999,
									8014
								],
								[
									8100,
									8111
								],
								[
									8226,
									8235
								],
								[
									8246,
									8260
								],
								[
									8263,
									8271
								],
								[
									8275,
									8284
								],
								[
									8299,
									8319
								],
								[
									8367,
									8381
								],
								[
									8415,
									8429
								],
								[
									8462,
									8482
								],
								[
									8489,
									8503
								],
								[
									8553,
									8571
								],
								[
									8612,
									8626
								],
								[
									8633,
									8646
								],
								[
									8680,
									8693
								],
								[
									8724,
									8742
								],
								[
									8786,
									8802
								],
								[
									8842,
									8855
								],
								[
									8858,
									8871
								],
								[
									8892,
									8906
								],
								[
									8926,
									8939
								],
								[
									8943,
									8959
								],
								[
									8963,
									8976
								],
								[
									8980,
									9000
								],
								[
									9007,
									9024
								],
								[
									9063,
									9076
								],
								[
									9109,
									9122
								],
								[
									9125,
									9138
								],
								[
									9211,
									9224
								],
								[
									9227,
									9240
								],
								[
									9283,
									9296
								],
								[
									9330,
									9346
								],
								[
									9421,
									9434
								],
								[
									9438,
									9458
								],
								[
									9466,
									9486
								],
								[
									9538,
									9559
								],
								[
									9664,
									9677
								],
								[
									9681,
									9695
								],
								[
									9702,
									9714
								],
								[
									9717,
									9731
								],
								[
									9832,
									9845
								],
								[
									9849,
									9866
								],
								[
									9920,
									9934
								],
								[
									9966,
									9981
								],
								[
									9984,
									9998
								],
								[
									10022,
									10035
								],
								[
									10119,
									10138
								],
								[
									10141,
									10155
								],
								[
									10217,
									10230
								],
								[
									10237,
									10248
								],
								[
									10251,
									10265
								],
								[
									10327,
									10340
								],
								[
									10344,
									10360
								],
								[
									10364,
									10379
								],
								[
									10386,
									10398
								],
								[
									10427,
									10440
								],
								[
									10444,
									10464
								],
								[
									10492,
									10504
								],
								[
									10507,
									10519
								],
								[
									10564,
									10581
								],
								[
									10620,
									10634
								],
								[
									10638,
									10651
								],
								[
									10658,
									10673
								],
								[
									10708,
									10721
								],
								[
									10725,
									10745
								],
								[
									10752,
									10765
								],
								[
									10784,
									10800
								],
								[
									10804,
									10817
								],
								[
									10821,
									10834
								],
								[
									10838,
									10852
								],
								[
									10887,
									10902
								],
								[
									10921,
									10933
								],
								[
									10936,
									10949
								],
								[
									10953,
									10973
								],
								[
									10980,
									10996
								],
								[
									10999,
									11012
								],
								[
									11016,
									11029
								],
								[
									11033,
									11053
								],
								[
									11060,
									11075
								],
								[
									11078,
									11091
								],
								[
									11095,
									11108
								],
								[
									11112,
									11132
								],
								[
									11164,
									11179
								],
								[
									11182,
									11197
								],
								[
									11271,
									11286
								],
								[
									11289,
									11304
								],
								[
									11374,
									11391
								],
								[
									11414,
									11429
								],
								[
									11432,
									11447
								],
								[
									11500,
									11512
								],
								[
									11515,
									11529
								],
								[
									11533,
									11546
								],
								[
									11553,
									11569
								],
								[
									11668,
									11688
								],
								[
									11692,
									11705
								],
								[
									11709,
									11723
								],
								[
									11731,
									11743
								],
								[
									11814,
									11826
								],
								[
									11830,
									11846
								],
								[
									11850,
									11864
								],
								[
									11872,
									11884
								],
								[
									11916,
									11936
								],
								[
									11939,
									11952
								],
								[
									11956,
									11976
								],
								[
									12090,
									12113
								],
								[
									12117,
									12141
								],
								[
									12163,
									12178
								],
								[
									12181,
									12194
								],
								[
									12198,
									12218
								],
								[
									12225,
									12242
								],
								[
									12245,
									12265
								],
								[
									12273,
									12291
								],
								[
									12294,
									12308
								],
								[
									12312,
									12332
								],
								[
									12376,
									12391
								],
								[
									12394,
									12409
								],
								[
									12487,
									12502
								],
								[
									12505,
									12520
								],
								[
									12536,
									12548
								],
								[
									12551,
									12563
								],
								[
									12744,
									12764
								],
								[
									13166,
									13185
								],
								[
									13213,
									13232
								],
								[
									13236,
									13255
								],
								[
									13314,
									13333
								],
								[
									13444,
									13463
								],
								[
									13493,
									13512
								],
								[
									13516,
									13535
								],
								[
									13596,
									13615
								],
								[
									13735,
									13754
								],
								[
									13786,
									13805
								],
								[
									13809,
									13828
								],
								[
									13891,
									13910
								],
								[
									14053,
									14077
								],
								[
									14082,
									14087
								],
								[
									14139,
									14144
								],
								[
									14168,
									14172
								],
								[
									14214,
									14218
								],
								[
									14243,
									14247
								],
								[
									14271,
									14295
								],
								[
									14332,
									14356
								],
								[
									14360,
									14384
								],
								[
									14389,
									14393
								],
								[
									14408,
									14412
								],
								[
									14768,
									14773
								],
								[
									15203,
									15218
								],
								[
									15258,
									15272
								],
								[
									15322,
									15333
								],
								[
									15337,
									15361
								],
								[
									15401,
									15418
								],
								[
									15452,
									15479
								],
								[
									15492,
									15519
								],
								[
									15552,
									15569
								],
								[
									15632,
									15647
								],
								[
									15666,
									15675
								],
								[
									15724,
									15733
								],
								[
									15764,
									15775
								],
								[
									15899,
									15910
								],
								[
									15914,
									15928
								],
								[
									15931,
									15942
								],
								[
									15945,
									15959
								],
								[
									15986,
									16001
								],
								[
									16024,
									16035
								],
								[
									16073,
									16092
								],
								[
									16095,
									16099
								],
								[
									16119,
									16136
								],
								[
									16159,
									16173
								],
								[
									16202,
									16206
								],
								[
									16213,
									16228
								],
								[
									16248,
									16258
								],
								[
									16397,
									16410
								],
								[
									16418,
									16422
								],
								[
									16426,
									16450
								],
								[
									16556,
									16569
								],
								[
									16608,
									16632
								],
								[
									16638,
									16649
								],
								[
									16676,
									16687
								],
								[
									16713,
									16722
								],
								[
									16746,
									16770
								],
								[
									16783,
									16787
								],
								[
									16801,
									16812
								],
								[
									16842,
									16855
								],
								[
									16878,
									16902
								],
								[
									16937,
									16961
								],
								[
									17070,
									17075
								],
								[
									17092,
									17113
								],
								[
									17133,
									17141
								],
								[
									17158,
									17179
								],
								[
									17247,
									17258
								],
								[
									17433,
									17444
								],
								[
									17514,
									17524
								],
								[
									17554,
									17565
								],
								[
									17581,
									17605
								],
								[
									17628,
									17648
								],
								[
									17651,
									17675
								],
								[
									17694,
									17714
								],
								[
									17740,
									17760
								],
								[
									17833,
									17852
								],
								[
									17856,
									17876
								],
								[
									17935,
									17954
								],
								[
									17972,
									17996
								],
								[
									18042,
									18053
								],
								[
									18075,
									18079
								],
								[
									18098,
									18109
								],
								[
									18126,
									18150
								],
								[
									18176,
									18185
								],
								[
									18207,
									18231
								],
								[
									18316,
									18340
								],
								[
									18387,
									18399
								],
								[
									18413,
									18424
								],
								[
									18435,
									18446
								],
								[
									18460,
									18471
								],
								[
									18485,
									18496
								],
								[
									18509,
									18520
								],
								[
									18534,
									18545
								],
								[
									18554,
									18565
								],
								[
									18582,
									18593
								],
								[
									18624,
									18635
								],
								[
									18645,
									18656
								],
								[
									18667,
									18685
								],
								[
									18701,
									18725
								],
								[
									18781,
									18793
								],
								[
									18796,
									18808
								],
								[
									18812,
									18836
								],
								[
									18862,
									18886
								],
								[
									18920,
									18938
								],
								[
									18984,
									19008
								],
								[
									19077,
									19089
								],
								[
									19166,
									19184
								],
								[
									19260,
									19276
								],
								[
									19501,
									19512
								],
								[
									19519,
									19541
								],
								[
									19545,
									19567
								],
								[
									19573,
									19584
								],
								[
									19642,
									19653
								],
								[
									19659,
									19670
								],
								[
									19774,
									19796
								],
								[
									19885,
									19904
								],
								[
									19943,
									19958
								],
								[
									19962,
									19972
								],
								[
									19976,
									19986
								],
								[
									19990,
									19994
								],
								[
									19998,
									20003
								],
								[
									20007,
									20016
								],
								[
									20092,
									20107
								],
								[
									20127,
									20149
								],
								[
									20261,
									20276
								],
								[
									20410,
									20423
								],
								[
									20464,
									20484
								]
							],
							"symlist":
							[
								"CMAKE_C_STANDARD",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_EXECUTABLE_SUFFIX",
								"BUILD_SHARED_LIBS",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QJS",
								"CMAKE_CURRENT_BINARY_DIR",
								"QJSC",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_REQUIRED_QUIET",
								"HAVE_POSIX_SPAWNP",
								"HAVE_SPAWN",
								"HAVE_SYSINFO",
								"HAVE_SYSINFO",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_C_COMPILER",
								"CMAKE_SYSROOT",
								"CMAKE_TOOLCHAIN_FILE",
								"CMAKE_VERBOSE_MAKEFILE",
								"CMAKE_BUILD_TYPE",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QUICKJS_INCLUDE_DIRS",
								"QUICKJS_LIBRARY_DIR",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"LIB_MODULES",
								"QUICKJS_H",
								"COMMON_HEADERS",
								"CUTILS_H",
								"QUICKJS_H",
								"  buffer_utils_SOURCES",
								"COMMON_SOURCES",
								"  vector_SOURCES",
								"  buffer_utils_SOURCES",
								"  libutf_SOURCES",
								"  char_utils_SOURCES",
								"  libutf_SOURCES",
								"  queue_SOURCES",
								"  utils_SOURCES",
								"  char_utils_SOURCES",
								"  js_utils_SOURCES",
								"  utils_SOURCES",
								"  utils_SOURCES",
								"  stream_SOURCES",
								"  queue_SOURCES",
								"  js_utils_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  predicate_SOURCES",
								"  utils_SOURCES",
								"  utils_SOURCES",
								"  utils_SOURCES",
								"  utils_SOURCES",
								"  utils_SOURCES",
								"  token_SOURCES",
								"  location_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  syscallerror_SOURCES",
								"  child_process_SOURCES",
								"  utils_SOURCES",
								"  vector_SOURCES",
								"  deep_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  predicate_SOURCES",
								"  deep_LIBRARIES",
								"  inspect_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  tree_walker_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  xml_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  location_SOURCES",
								"  inspect_SOURCES",
								"  path_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  path_SOURCES",
								"  path_SOURCES",
								"  predicate_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  pointer_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  lexer_SOURCES",
								"  location_SOURCES",
								"  token_SOURCES",
								"  utils_SOURCES",
								"  vector_SOURCES",
								"  lexer_LIBRARIES",
								"  mmap_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  repeater_SOURCES",
								"  queue_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  sockets_SOURCES",
								"  queue_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  sockets_SOURCES",
								"  sockets_SOURCES",
								"  sockets_SOURCES",
								"  sockets_SOURCES",
								"  sockets_LIBRARIES",
								"  sockets_SOURCES",
								"  sockets_SOURCES",
								"  blob_SOURCES",
								"  vector_SOURCES",
								"  utils_SOURCES",
								"  textcode_SOURCES",
								"  buffer_utils_SOURCES",
								"  utils_SOURCES",
								"  vector_SOURCES",
								"  misc_SOURCES",
								"  path_SOURCES",
								"  location_SOURCES",
								"  vector_SOURCES",
								"  gpio_SOURCES",
								"  syscallerror_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"LibArchive_INCLUDE_DIRS",
								"CMAKE_CURRENT_SOURCE_DIR",
								"  archive_SOURCES",
								"  utils_SOURCES",
								"  buffer_utils_SOURCES",
								"  archive_LIBRARIES",
								"LibArchive_LIBRARIES",
								"QJSM_EXTRA_SOURCES",
								"  vector_SOURCES",
								"  buffer_utils_SOURCES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"QUICKJS_MODULES",
								"  mmap_SOURCES",
								"  mmap_SOURCES",
								"CMAKE_REQUIRED_QUIET",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_C_FLAGS_DEBUG",
								"CMAKE_CURRENT_SOURCE_DIR",
								"TESTS",
								"TESTS",
								"TEST",
								"BASE",
								"BASE",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_BINARY_DIR",
								"QJSM",
								"TEST",
								"TESTS",
								"QUICKJS_MODULES",
								"SHARED_TARGETS",
								"QJSM_LIBDIR",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_IMPORT_LIBRARY_PREFIX",
								"CMAKE_IMPORT_LIBRARY_SUFFIX",
								"CMAKE_SYSTEM_NAME",
								"QUICKJS_MODULES",
								"JS_MODULE",
								"JS_MODULE",
								"QJSM_MODULE",
								"QJSM_LIBDIR",
								"LIBRARY_PREFIX",
								"QJSM_MODULE",
								"LIBRARY_SUFFIX",
								"QUICKJS_MODULES",
								"QJSM_LIBDIR",
								"  predicate_LIBRARIES",
								"LIBM",
								"  sockets_LIBRARIES",
								"  deep_LIBRARIES",
								"LIBM",
								"  lexer_LIBRARIES",
								"  lexer_DEPS",
								"TESTS_SOURCES",
								"QJSM",
								"CMAKE_CURRENT_BINARY_DIR",
								"TESTS_SOURCES",
								"CMAKE_CURRENT_SOURCE_DIR",
								"TEST_SOURCE",
								"TEST_SOURCE",
								"TEST_NAME",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QJSM",
								"TEST_SOURCE",
								"TESTS_SOURCES",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"LIBJS",
								"QUICKJS_JS_MODULE_DIR",
								"LIBLEXER",
								"QUICKJS_JS_MODULE_DIR",
								"LIB_MODULES",
								"LIB_MODULES",
								"LIB_MODULE",
								"LIB_MODULES",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QUICKJS_SOURCES_ROOT",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QUICKJS_SOURCES_ROOT",
								"QUICKJS_SOURCES_ROOT",
								"QUICKJS_INCLUDE_DIR",
								"QUICKJS_SOURCES_ROOT",
								"QUICKJS_INCLUDE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"MODULES_DIR",
								"QJSC",
								"MODULES_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QJSC_DEPS",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QJSM_SOURCES",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"MODULES_DIR",
								"QJSM_EXTRA_SOURCES",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QJSM_SOURCES",
								"QJSM_SOURCES",
								"CMAKE_CURRENT_SOURCE_DIR",
								"CMAKE_CURRENT_SOURCE_DIR",
								"TRANSPORT_PLATFORM",
								"CMAKE_CURRENT_SOURCE_DIR",
								"QJSM_SOURCES",
								"QJS_MODULES_STATIC",
								"COMPILED_MODULES",
								"QJSM_LIBDIR",
								"CMAKE_EXE_LINKER_FLAGS",
								"CMAKE_EXE_LINKER_FLAGS",
								"QJSM_LIBDIR",
								"LINK_EXPORT",
								"QJSM_LIBDIR",
								"QUICKJS_INSTALL_PREFIX",
								"QUICKJS_LIBRARY_DIR",
								"QUICKJS_LIBRARY",
								"QJSM_LDADD",
								"LIBPTHREAD",
								"LIBM",
								"LIBDL",
								"LIBWS2_32",
								"QUICKJS_VERSION",
								"QUICKJS_INSTALL_PREFIX",
								"INSTALL_SCRIPTS",
								"CMAKE_COMMAND",
								"CMAKE_INSTALL_PREFIX"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647045078.37,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34945,
						"regions":
						{
						},
						"selection":
						[
							[
								17879,
								17968
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 552,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646711648.02,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11116.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "CMakeLists.txt",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20509,
						"regions":
						{
						},
						"selection":
						[
							[
								20509,
								20509
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 546,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647049113.98,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8779.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 83948,
						"regions":
						{
						},
						"selection":
						[
							[
								48551,
								48564
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1892,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647045038.9,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 31747.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "quickjs-inspect.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40658,
						"regions":
						{
						},
						"selection":
						[
							[
								28682,
								28682
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 911,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647045170.79,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13438.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/qjsm.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43968,
						"regions":
						{
						},
						"selection":
						[
							[
								15819,
								15819
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 612,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646713306.31,
							"tabs_extra_last_activated_sheet_index": 3,
							"tabs_extra_moving":
							[
								5,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12250.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "resolve-imports.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42354,
						"regions":
						{
						},
						"selection":
						[
							[
								7176,
								7176
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 247,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646714569.07,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4593.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "quickjs-path.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14412,
						"regions":
						{
						},
						"selection":
						[
							[
								4500,
								4502
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 214,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646712914.97,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3997.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/path.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15689,
						"regions":
						{
						},
						"selection":
						[
							[
								14936,
								14936
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 739,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646714733.72,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 15001.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "quickjs-lexer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42492,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646871071.98,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 357.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "include/path.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5000,
						"regions":
						{
						},
						"selection":
						[
							[
								1730,
								1743
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 65,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646712899.9,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 952.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.7072713066,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139700989780224)":
	{
		"height": 0.0
	},
	"output.Protocol(139713493134064)":
	{
		"height": 0.0
	},
	"output.Protocol(139742375937312)":
	{
		"height": 0.0
	},
	"output.Protocol(140020109919472)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752673856)":
	{
		"height": 0.0
	},
	"output.Protocol(140156677514432)":
	{
		"height": 0.0
	},
	"output.Protocol(140190208797904)":
	{
		"height": 0.0
	},
	"output.Protocol(140329701419328)":
	{
		"height": 0.0
	},
	"output.Protocol(140434608857040)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873537696)":
	{
		"height": 0.0
	},
	"output.Protocol(140569677099648)":
	{
		"height": 0.0
	},
	"output.Protocol(140589364043584)":
	{
		"height": 0.0
	},
	"output.Protocol(140614610715648)":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"l",
				"quickjs-lexer.c"
			],
			[
				"resolve-impo",
				"resolve-imports.js"
			],
			[
				"path.c",
				"src/path.c"
			],
			[
				"qjsm",
				"src/qjsm.c"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"repl.j",
				"lib/repl.js"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"js-u",
				"src/js-utils.c"
			],
			[
				"js-ut",
				"include/js-utils.h"
			],
			[
				"streams.js",
				"tests/test_streams.js"
			],
			[
				"buffer",
				"src/buffer-utils.c"
			],
			[
				"test_te",
				"tests/test_textcode.js"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"extract-str",
				"extract-structs.js"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"path.h",
				"path.h"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"list-exp",
				"list-exports.js"
			],
			[
				"token.c",
				"token.c"
			],
			[
				"quickjs-le",
				"quickjs-lexer.c"
			],
			[
				"jsutil",
				"js-utils.c"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.h"
			],
			[
				"quickjs-location",
				"quickjs-location.h"
			],
			[
				"quickjs-loca",
				"quickjs-location.c"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"char-ut",
				"char-utils.h"
			],
			[
				"buff",
				"buffer-utils.h"
			],
			[
				"test_dom",
				"tests/test_dom.js"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"location",
				"location.c"
			],
			[
				"quickjs-child",
				"quickjs-child-process.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"CMakeLi",
				"CMakeLists.txt"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"defines.h",
				"defines.h"
			],
			[
				"queue.c",
				"queue.c"
			],
			[
				"extend",
				"lib/extendArray.js"
			],
			[
				"quickjs-sockets",
				"quickjs-sockets.c"
			],
			[
				"lexer",
				"quickjs-lexer.c"
			],
			[
				"buffer-ut",
				"buffer-utils.h"
			],
			[
				"ringbuf",
				"ringbuffer.h"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"debug.h",
				"debug.h"
			],
			[
				"debug.c",
				"debug.c"
			],
			[
				"quickjs-lexer.c",
				"quickjs-lexer.c"
			],
			[
				"quickjs-loc",
				"quickjs-location.c"
			],
			[
				"xml.c",
				"quickjs-xml.c"
			],
			[
				"test-dia",
				"build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"resol",
				"resolve-imports.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"quickjs-mis",
				"quickjs-misc.c"
			],
			[
				"location.c",
				"quickjs-location.c"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"extra",
				"extract-structs.js"
			],
			[
				"-inspe",
				"quickjs-inspect.c"
			],
			[
				"proper",
				"property-enumeration.h"
			],
			[
				"vector",
				"vector.h"
			],
			[
				"dom.j",
				"lib/dom.js"
			],
			[
				"res",
				"resolve-imports.js"
			],
			[
				"lexre",
				"lexer.c"
			],
			[
				"lexer.c",
				"quickjs-lexer.c"
			],
			[
				"pointer",
				"pointer.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"archive",
				"quickjs-archive.c"
			],
			[
				"pointer.c",
				"quickjs-pointer.c"
			],
			[
				"spect.c",
				"quickjs-inspect.c"
			],
			[
				"blob.c",
				"quickjs-blob.c"
			],
			[
				"repea",
				"quickjs-repeater.c"
			],
			[
				"loca",
				"quickjs-location.c"
			],
			[
				"bjson.c",
				"quickjs-bjson.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"char-u",
				"char-utils.h"
			],
			[
				"predi",
				"predicate.h"
			],
			[
				"virtua",
				"virtual-properties.c"
			],
			[
				"pointre",
				"pointer.c"
			],
			[
				"deep.c",
				"quickjs-deep.c"
			],
			[
				"child-",
				"child-process.c"
			],
			[
				"child-pro",
				"quickjs-child-process.c"
			],
			[
				"gpio.c",
				"quickjs-gpio.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"ointer.h",
				"pointer.h"
			],
			[
				"defin",
				"defines.h"
			],
			[
				"defines",
				"defines.h"
			],
			[
				"cutils.h",
				"char-utils.h"
			],
			[
				"debu",
				"debug.h"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"test_le",
				"tests/test_lexer.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"test",
				"tests/test_stack.js"
			],
			[
				"jsutils",
				"CMakeFiles/qjs-syscallerror-static.dir/utils.c.o.d"
			],
			[
				"jslexe",
				"lib/jslexer.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"xpath.j",
				"lib/xpath.js"
			],
			[
				"predicate.h",
				"predicate.h"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"list.h",
				"~/Projects/plot-cv/quickjs/list.h"
			],
			[
				"queue",
				"queue.c"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"test_wa",
				"tests/test_watch.js"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"tree-wa",
				"quickjs-tree-walker.c"
			],
			[
				"quick",
				"quickjs-xml.c"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"cmakelis",
				"CMakeLists.txt"
			],
			[
				"",
				"tests/test_xml.js"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"doxy",
				"Doxyfile"
			],
			[
				"Doxyfile",
				"Doxyfile"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 294.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
