{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"brea",
				"breakLength"
			],
			[
				"JS_Get",
				"JS_GetArrayBuffer"
			],
			[
				"JS_",
				"JS_ThrowTypeError"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Throw",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_Set",
				"JS_SetPropertyStr"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"js_sys",
				"js_syscallerror_get"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_",
				"js_sockaddr_class_id"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_New",
				"JS_NewStringLen"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"get",
				"getOwnPropertyNames"
			],
			[
				"JS_Thr",
				"JS_ThrowInternalError"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "‚Äî‚ìÇ‚Äì INSPECT_INT32T_INRANGE ( ) ‚Ä¶ ‚Äî macro function\n‚Äî‚ìÇ‚Äì INSPECT_LEVEL ( ) ‚Ä¶ ‚Äî macro function\n‚Äî‚ìÇ‚Äì INSPECT_IS_COMPACT ( ) ‚Ä¶ ‚Äî macro function\n  ‚íû  prop_key ; ‚Äî type declaration\n‚Äî‚í∏‚Äì prop_key { ‚Ä¶ } ; ‚Äî type\n  ‚ìâ  prop_key_t ; ‚Äî typedef\n  ‚ìâ  inspect_options_t ; ‚Äî typedef\n  ‚í°  js_inspect_print ( ) ; ‚Äî function declaration\n‚Äî‚íª‚Äì regexp_predicate ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì inspect_screen_width ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì inspect_options_init ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì inspect_options_free ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì inspect_options_get ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì inspect_options_object ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì inspect_options_hidden ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì inspect_newline ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_object_getpropertynames ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_object_getpropertynames_recursive ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_custom_atom ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_custom_call ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_map ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_set ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_arraybuffer ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_regexp ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_number ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_string ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_print ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_tostring ( ) { ‚Ä¶ } ‚Äî function\n  ‚í°  js_debugger_build_backtrace ( ) ; ‚Äî function declaration\n‚Äî‚íª‚Äì js_inspect_stacktrace_value ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_stacktrace ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì js_inspect_init ( ) { ‚Ä¶ } ‚Äî function\n  ‚ìÇ  JS_INIT_MODULE ‚Ä¶ ‚Äî macro object\n  ‚ìÇ  JS_INIT_MODULE ‚Ä¶ ‚Äî macro object",
			"settings":
			{
				"buffer_size": 1542,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					27,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
						"symkeys":
						[
							[
								371,
								391
							],
							[
								487,
								507
							],
							[
								663,
								668
							],
							[
								673,
								688
							],
							[
								770,
								783
							],
							[
								831,
								850
							],
							[
								898,
								913
							],
							[
								961,
								969
							],
							[
								1017,
								1025
							],
							[
								1073,
								1089
							],
							[
								1137,
								1147
							],
							[
								1322,
								1333
							],
							[
								1387,
								1399
							],
							[
								1864,
								1875
							],
							[
								1930,
								1942
							],
							[
								1998,
								2010
							],
							[
								2279,
								2303
							],
							[
								2561,
								2604
							],
							[
								2790,
								2815
							],
							[
								3052,
								3097
							],
							[
								3201,
								3253
							],
							[
								3396,
								3429
							],
							[
								3568,
								3591
							],
							[
								3851,
								3876
							],
							[
								3990,
								4024
							],
							[
								4343,
								4363
							],
							[
								4515,
								4539
							],
							[
								4738,
								4756
							],
							[
								4798,
								4819
							],
							[
								4864,
								4886
							],
							[
								4947,
								4969
							],
							[
								5128,
								5181
							],
							[
								5690,
								5747
							],
							[
								6516,
								6539
							],
							[
								6619,
								6645
							],
							[
								6756,
								6785
							],
							[
								6884,
								6923
							],
							[
								6974,
								7034
							],
							[
								7255,
								7298
							],
							[
								7619,
								7646
							],
							[
								7693,
								7721
							],
							[
								7769,
								7797
							],
							[
								7845,
								7883
							],
							[
								7941,
								7969
							],
							[
								8067,
								8102
							],
							[
								8157,
								8183
							],
							[
								8229,
								8274
							],
							[
								8764,
								8780
							],
							[
								8839,
								8878
							],
							[
								8990,
								9030
							],
							[
								9143,
								9181
							],
							[
								9286,
								9310
							],
							[
								9334,
								9354
							],
							[
								9373,
								9379
							],
							[
								9452,
								9491
							],
							[
								9597,
								9622
							],
							[
								9646,
								9666
							],
							[
								9686,
								9692
							],
							[
								9766,
								9806
							],
							[
								10662,
								10695
							]
						],
						"symlist":
						[
							"function strerr(ret)",
							"function numerr(ret)",
							"Stats",
							"constructor(st)",
							"isDirectory()",
							"isCharacterDevice()",
							"isBlockDevice()",
							"isFile()",
							"isFIFO()",
							"isSymbolicLink()",
							"isSocket()",
							"get errno()",
							"get errstr()",
							"get stdin()",
							"get stdout()",
							"get stderr()",
							" function buffer(length)",
							" function bufferFrom(chunk, offset, length)",
							" function bufferSize(buf)",
							" function bufferToString(buf, offset, length)",
							" function fopen(filename, flags = 'r', mode = 0o644)",
							" function fdopen(fd, flags = 'r')",
							" function puts(fd, str)",
							" function flushSync(file)",
							" function seek(fd, offset, whence)",
							" function tell(file)",
							" function sizeSync(file)",
							" function getcwd()",
							" function chdir(path)",
							" function isatty(file)",
							" function fileno(file)",
							" function readFileSync(filename, { encoding = null })",
							" function writeFileSync(filename, data, overwrite = true)",
							" function closeSync(fd)",
							" function existsSync(path)",
							" function lstatSync(path, cb)",
							" function mkdirSync(path, mode = 0o777)",
							" function openSync(filename, flags = O_RDONLY, mode = 0x1a4)",
							" function readSync(fd, buf, offset, length)",
							" function readdirSync(path)",
							" function readlinkSync(path)",
							" function realpathSync(path)",
							" function renameSync(oldname, newname)",
							" function statSync(path, cb)",
							" function symlinkSync(target, path)",
							" function unlinkSync(path)",
							" function writeSync(fd, data, offset, length)",
							" function pipe()",
							" function setReadHandler(file, handler)",
							" function setWriteHandler(file, handler)",
							" function onRead(file, handler = null)",
							" function waitRead(file)",
							"(resolve, reject) =>",
							" () =>",
							" function onWrite(file, handler = null)",
							" function waitWrite(file)",
							"(resolve, reject) =>",
							" () =>",
							" function readAll(input, bufSize = 1024)",
							"function Encoding2Bytes(encoding)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1CAAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQpSRVBMCiAgY29uc3RydWN0b3IobmFtZSwgc2hvd19iYW5uZXIgPSB0cnVlKQogIGFkZENsZWFudXBIYW5kbGVyKGZuKQogIGV4aXQoZXhpdENvZGUgPSAwKQogIGFib3J0KCkKICBhY2NlcHRMaW5lKCkKICBhbGVydCgpCiAgYmFja3dhcmRDaGFyKCkKICBiYWNrd2FyZERlbGV0ZUNoYXIoKQogIGJhY2t3YXJkS2lsbExpbmUoKQogIGJhY2t3YXJkS2lsbFdvcmQoKQogIGJhY2t3YXJkV29yZCgpCiAgYmVnaW5uaW5nT2ZMaW5lKCkKICBiaWdmbG9hdFRvU3RyaW5nKGEsIHJhZGl4KQogIGJpZ2ludFRvU3RyaW5nKGEsIHJhZGl4KQogIGNtZFJlYWRsaW5lU3RhcnQoKQogIGNtZFN0YXJ0KHNob3dfYmFubmVyID0gdHJ1ZSkKICBjb2xvcml6ZUpzKHN0cikKICBwdXNoU3RhdGUoYykKICBsYXN0U3RhdGUoYykKICBwb3BTdGF0ZShjKQogIHBhcnNlQmxvY2tDb21tZW50KCkKICBwYXJzZUxpbmVDb21tZW50KCkKICBwYXJzZVN0cmluZyhkZWxpbSkKICBwYXJzZVJlZ2V4KCkKICBwYXJzZU51bWJlcigpCiAgcGFyc2VJZGVudGlmaWVyKCkKICBzZXRTdHlsZShmcm9tLCB0bykKICBjb21wbGV0aW9uKCkKICBjb250cm9sQygpCiAgY29udHJvbEQoKQogIGRlbGV0ZUNoYXIoKQogIGRlbGV0ZUNoYXJEaXIoZGlyKQogIGRvd25jYXNlV29yZCgpCiAgZHVwc3RyKHN0ciwgY291bnQpCiAgZW5kT2ZMaW5lKCkKICByZWFkbGluZVJlbW92ZVByb21wdCgpCiAgZXZhbEFuZFByaW50KGV4cHIpCiAgZXh0cmFjdERpcmVjdGl2ZShhKQogIGZvcndhcmRDaGFyKCkKICBmb3J3YXJkV29yZCgpCiAgZ2V0Q29tcGxldGlvbnMobGluZSwgcG9zKQogIHN5bWNtcChhLCBiKQogIGdldENvbnRleHRPYmplY3QobGluZSwgcG9zKQogIGdldENvbnRleHRXb3JkKGxpbmUsIHBvcykKICBoYW5kbGVCeXRlKGMpCiAgaGFuZGxlQ2hhcihjMSkKICBoYW5kbGVNb3VzZShrZXlzKQogIGhhbmRsZUNtZChleHByKQogIGhhbmRsZURpcmVjdGl2ZShjbWQsIGV4cHIpCiAgaGFuZGxlS2V5KGtleXMpCiAgaGVscCgpCiAgc2VsKG4pCiAgaGlzdG9yeUZpbGUoKQogIGhpc3RvcnlMb2FkKGZpbGVuYW1lLCBmYWlsID0gdHJ1ZSkKICBoaXN0b3J5U2F2ZShmaWxlbmFtZSkKICBoaXN0b3J5Q2xlYXIoKQogIGhpc3RvcnlBZGQoc3RyKQogIGhpc3RvcnlTZWFyY2goZGlyKQogIGhpc3RvcnlTZWFyY2hCYWNrd2FyZCgpCiAgaGlzdG9yeVNlYXJjaEZvcndhcmQoKQogIHNldCBoaXN0b3J5KGVudHJpZXMpCiAgZ2V0IGhpc3RvcnkoKQogIGhpc3RvcnlQb3MoKQogIGluc2VydChzdHIpCiAga2lsbExpbmUoKQogIGtpbGxSZWdpb24oc3RhcnQsIGVuZCwgZGlyKQogIGtpbGxXb3JkKCkKICBtb3ZlQ3Vyc29yKGRlbHRhKQogIG5leHRIaXN0b3J5KCkKICBudW1iZXJUb1N0cmluZyhhLCByYWRpeCkKICBwcmV2aW91c0hpc3RvcnkoKQogIHByaW50KGEpCiAgcHJpbnRSZWMoYSkKICBwcmludFN0YXR1cyhmbiwgcHJvbXB0ID0gdHJ1ZSkKICBwcmludEZ1bmN0aW9uKGxvZ0ZuKQogIHF1b3RlZEluc2VydCgpCiAgcmV2ZXJzZVNlYXJjaCgpCiAgZm9yd2FyZFNlYXJjaCgpCiAgc2VhcmNoQ2IocGF0dGVybikKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuKCkKICBydW5TeW5jKCkKICBzaWdpbnRIYW5kbGVyKCkKICBza2lwV29yZEJhY2t3YXJkKHBvcykKICBza2lwV29yZEZvcndhcmQocG9zKQogIHRlcm1Jbml0KCkKICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gdGhpcy5mcykKICB0ZXJtUmVhZEhhbmRsZXIoKQogIHRyYW5zcG9zZUNoYXJzKCkKICB0cmFuc3Bvc2VXb3JkcygpCiAgdXBjYXNlV29yZCgpCiAgdXBkYXRlKCkKICB5YW5rKCkKICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAO8EAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1434,
								1463
							],
							[
								1746,
								1780
							],
							[
								1820,
								1838
							],
							[
								3387,
								3392
							],
							[
								3434,
								3439
							],
							[
								3588,
								3592
							],
							[
								3935,
								3972
							],
							[
								7101,
								7107
							],
							[
								7163,
								7184
							],
							[
								7230,
								7235
							],
							[
								7249,
								7265
							],
							[
								7328,
								7346
							],
							[
								7439,
								7446
							],
							[
								7514,
								7526
							],
							[
								7602,
								7609
							],
							[
								7616,
								7630
							],
							[
								7783,
								7803
							],
							[
								7841,
								7859
							],
							[
								7913,
								7931
							],
							[
								8021,
								8035
							],
							[
								8105,
								8122
							],
							[
								8156,
								8182
							],
							[
								9132,
								9156
							],
							[
								9445,
								9463
							],
							[
								9554,
								9582
							],
							[
								9939,
								9954
							],
							[
								10117,
								10142
							],
							[
								10169,
								10194
							],
							[
								10251,
								10275
							],
							[
								10380,
								10412
							],
							[
								10629,
								10660
							],
							[
								10788,
								10819
							],
							[
								11157,
								11182
							],
							[
								11897,
								11923
							],
							[
								12652,
								12682
							],
							[
								13244,
								13275
							],
							[
								15072,
								15084
							],
							[
								16819,
								16829
							],
							[
								17112,
								17122
							],
							[
								17287,
								17299
							],
							[
								17336,
								17354
							],
							[
								17884,
								17898
							],
							[
								18096,
								18114
							],
							[
								18193,
								18204
							],
							[
								18252,
								18274
							],
							[
								18328,
								18346
							],
							[
								19771,
								19790
							],
							[
								19967,
								19980
							],
							[
								20147,
								20160
							],
							[
								20229,
								20254
							],
							[
								21083,
								21110
							],
							[
								21610,
								21637
							],
							[
								22564,
								22589
							],
							[
								22719,
								22732
							],
							[
								23195,
								23209
							],
							[
								24607,
								24624
							],
							[
								24747,
								24751
							],
							[
								24762,
								24766
							],
							[
								24883,
								24898
							],
							[
								25750,
								25776
							],
							[
								28730,
								28745
							],
							[
								30653,
								30659
							],
							[
								30662,
								30681
							],
							[
								31652,
								31665
							],
							[
								31860,
								31894
							],
							[
								32228,
								32249
							],
							[
								32354,
								32361
							],
							[
								32392,
								32399
							],
							[
								32567,
								32581
							],
							[
								32670,
								32685
							],
							[
								32839,
								32857
							],
							[
								33202,
								33225
							],
							[
								33270,
								33292
							],
							[
								33336,
								33356
							],
							[
								33429,
								33442
							],
							[
								33472,
								33484
							],
							[
								33519,
								33530
							],
							[
								33695,
								33705
							],
							[
								33772,
								33799
							],
							[
								34226,
								34236
							],
							[
								34324,
								34341
							],
							[
								35190,
								35203
							],
							[
								35380,
								35404
							],
							[
								35919,
								35936
							],
							[
								36184,
								36192
							],
							[
								36216,
								36240
							],
							[
								38493,
								38523
							],
							[
								38536,
								38549
							],
							[
								38761,
								38771
							],
							[
								38988,
								39008
							],
							[
								39021,
								39034
							],
							[
								39052,
								39057
							],
							[
								39082,
								39096
							],
							[
								39133,
								39148
							],
							[
								39542,
								39557
							],
							[
								39745,
								39762
							],
							[
								40077,
								40100
							],
							[
								40165,
								40186
							],
							[
								40333,
								40358
							],
							[
								41061,
								41068
							],
							[
								41121,
								41132
							],
							[
								41400,
								41409
							],
							[
								41497,
								41503
							],
							[
								41556,
								41561
							],
							[
								41616,
								41631
							],
							[
								41699,
								41720
							],
							[
								41871,
								41891
							],
							[
								42062,
								42072
							],
							[
								42465,
								42472
							],
							[
								42612,
								42618
							],
							[
								42651,
								42679
							],
							[
								42768,
								42800
							],
							[
								42883,
								42888
							],
							[
								42997,
								43014
							],
							[
								43186,
								43202
							],
							[
								43510,
								43526
							],
							[
								43960,
								43972
							],
							[
								44170,
								44178
							],
							[
								44688,
								44699
							],
							[
								47414,
								47420
							],
							[
								47459,
								47478
							],
							[
								47570,
								47589
							],
							[
								47651,
								47669
							],
							[
								47761,
								47784
							],
							[
								48185,
								48214
							],
							[
								48273,
								48304
							],
							[
								48461,
								48486
							],
							[
								48595,
								48643
							],
							[
								48931,
								48957
							],
							[
								49030,
								49034
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyFile()",
							"historyLoad(filename, fail = true)",
							"historySave(filename)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							"show = arg =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run()",
							"runSync()",
							" () =>",
							"() =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = this.fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADvBAAAICBzdHJlcnIocmV0KQogIG51bWVycihyZXQpClN0YXRzCiAgY29uc3RydWN0b3Ioc3QpCiAgaXNEaXJlY3RvcnkoKQogIGlzQ2hhcmFjdGVyRGV2aWNlKCkKICBpc0Jsb2NrRGV2aWNlKCkKICBpc0ZpbGUoKQogIGlzRklGTygpCiAgaXNTeW1ib2xpY0xpbmsoKQogIGlzU29ja2V0KCkKICBnZXQgZXJybm8oKQogIGdldCBlcnJzdHIoKQogIGdldCBzdGRpbigpCiAgZ2V0IHN0ZG91dCgpCiAgZ2V0IHN0ZGVycigpCiAgYnVmZmVyKGxlbmd0aCkKICBidWZmZXJGcm9tKGNodW5rLCBvZmZzZXQsIGxlbmd0aCkKICBidWZmZXJTaXplKGJ1ZikKICBidWZmZXJUb1N0cmluZyhidWYsIG9mZnNldCwgbGVuZ3RoKQogIGZvcGVuKGZpbGVuYW1lLCBmbGFncyA9ICdyJywgbW9kZSA9IDBvNjQ0KQogIGZkb3BlbihmZCwgZmxhZ3MgPSAncicpCiAgcHV0cyhmZCwgc3RyKQogIGZsdXNoU3luYyhmaWxlKQogIHNlZWsoZmQsIG9mZnNldCwgd2hlbmNlKQogIHRlbGwoZmlsZSkKICBzaXplU3luYyhmaWxlKQogIGdldGN3ZCgpCiAgY2hkaXIocGF0aCkKICBpc2F0dHkoZmlsZSkKICBmaWxlbm8oZmlsZSkKICByZWFkRmlsZVN5bmMoZmlsZW5hbWUsIHsgZW5jb2RpbmcgPSBudWxsIH0pCiAgd3JpdGVGaWxlU3luYyhmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKICBjbG9zZVN5bmMoZmQpCiAgZXhpc3RzU3luYyhwYXRoKQogIGxzdGF0U3luYyhwYXRoLCBjYikKICBta2RpclN5bmMocGF0aCwgbW9kZSA9IDBvNzc3KQogIG9wZW5TeW5jKGZpbGVuYW1lLCBmbGFncyA9IE9fUkRPTkxZLCBtb2RlID0gMHgxYTQpCiAgcmVhZFN5bmMoZmQsIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpCiAgcmVhZGRpclN5bmMocGF0aCkKICByZWFkbGlua1N5bmMocGF0aCkKICByZWFscGF0aFN5bmMocGF0aCkKICByZW5hbWVTeW5jKG9sZG5hbWUsIG5ld25hbWUpCiAgc3RhdFN5bmMocGF0aCwgY2IpCiAgc3ltbGlua1N5bmModGFyZ2V0LCBwYXRoKQogIHVubGlua1N5bmMocGF0aCkKICB3cml0ZVN5bmMoZmQsIGRhdGEsIG9mZnNldCwgbGVuZ3RoKQogIHBpcGUoKQogIHNldFJlYWRIYW5kbGVyKGZpbGUsIGhhbmRsZXIpCiAgc2V0V3JpdGVIYW5kbGVyKGZpbGUsIGhhbmRsZXIpCiAgb25SZWFkKGZpbGUsIGhhbmRsZXIgPSBudWxsKQogIHdhaXRSZWFkKGZpbGUpCiAgb25Xcml0ZShmaWxlLCBoYW5kbGVyID0gbnVsbCkKICB3YWl0V3JpdGUoZmlsZSkKICByZWFkQWxsKGlucHV0LCBidWZTaXplID0gMTAyNCkKRW5jb2RpbmcyQnl0ZXMoZW5jb2RpbmcpAAAAAAAAAAB1CAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1115,
								1135
							],
							[
								1280,
								1296
							],
							[
								1350,
								1369
							],
							[
								1404,
								1420
							],
							[
								1476,
								1492
							],
							[
								1555,
								1589
							],
							[
								1612,
								1644
							],
							[
								1667,
								1710
							],
							[
								1951,
								1963
							],
							[
								3786,
								3805
							],
							[
								3903,
								3919
							],
							[
								3981,
								3999
							],
							[
								4063,
								4082
							],
							[
								4147,
								4156
							],
							[
								4211,
								4228
							],
							[
								4291,
								4308
							],
							[
								4371,
								4385
							],
							[
								4445,
								4460
							],
							[
								4521,
								4536
							],
							[
								4597,
								4605
							],
							[
								4659,
								4671
							],
							[
								4729,
								4739
							],
							[
								4795,
								4806
							],
							[
								4863,
								4871
							],
							[
								4925,
								4947
							],
							[
								5015,
								5030
							],
							[
								5091,
								5113
							],
							[
								5181,
								5197
							],
							[
								5259,
								5275
							],
							[
								5337,
								5349
							],
							[
								5407,
								5419
							],
							[
								5477,
								5490
							],
							[
								5549,
								5567
							],
							[
								5625,
								5643
							],
							[
								5707,
								5729
							],
							[
								5797,
								5824
							],
							[
								5897,
								5914
							],
							[
								5971,
								5988
							],
							[
								6045,
								6062
							],
							[
								6109,
								6125
							],
							[
								6208,
								6224
							],
							[
								6296,
								6312
							],
							[
								6384,
								6401
							],
							[
								6458,
								6478
							],
							[
								6537,
								6557
							],
							[
								6716,
								6735
							],
							[
								6811,
								6818
							],
							[
								6847,
								6867
							],
							[
								6937,
								6952
							],
							[
								7013,
								7039
							],
							[
								7117,
								7138
							],
							[
								7216,
								7242
							],
							[
								7288,
								7313
							],
							[
								7398,
								7440
							],
							[
								7574,
								7614
							],
							[
								10758,
								10801
							],
							[
								11182,
								11217
							],
							[
								11373,
								11391
							],
							[
								11421,
								11426
							],
							[
								11516,
								11543
							],
							[
								11662,
								11683
							],
							[
								11712,
								11728
							],
							[
								11821,
								11856
							],
							[
								11896,
								11914
							],
							[
								12101,
								12122
							],
							[
								12146,
								12156
							],
							[
								12195,
								12225
							],
							[
								12553,
								12587
							],
							[
								12888,
								12922
							],
							[
								13142,
								13176
							],
							[
								13242,
								13278
							],
							[
								13353,
								13370
							],
							[
								13529,
								13566
							],
							[
								13567,
								13581
							],
							[
								13587,
								13591
							],
							[
								13666,
								13698
							],
							[
								13726,
								13752
							],
							[
								14077,
								14099
							],
							[
								14137,
								14153
							],
							[
								14168,
								14175
							],
							[
								14197,
								14213
							],
							[
								14293,
								14310
							],
							[
								14311,
								14320
							],
							[
								14374,
								14391
							],
							[
								14392,
								14401
							],
							[
								14463,
								14480
							],
							[
								14481,
								14504
							],
							[
								14562,
								14586
							],
							[
								17213,
								17241
							],
							[
								17672,
								17676
							],
							[
								17804,
								17817
							],
							[
								18133,
								18145
							],
							[
								18408,
								18421
							],
							[
								18526,
								18540
							],
							[
								19433,
								19461
							],
							[
								19577,
								19590
							],
							[
								19702,
								19728
							],
							[
								20441,
								20503
							],
							[
								20537,
								20606
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1CAAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQpSRVBMCiAgY29uc3RydWN0b3IobmFtZSwgc2hvd19iYW5uZXIgPSB0cnVlKQogIGFkZENsZWFudXBIYW5kbGVyKGZuKQogIGV4aXQoZXhpdENvZGUgPSAwKQogIGFib3J0KCkKICBhY2NlcHRMaW5lKCkKICBhbGVydCgpCiAgYmFja3dhcmRDaGFyKCkKICBiYWNrd2FyZERlbGV0ZUNoYXIoKQogIGJhY2t3YXJkS2lsbExpbmUoKQogIGJhY2t3YXJkS2lsbFdvcmQoKQogIGJhY2t3YXJkV29yZCgpCiAgYmVnaW5uaW5nT2ZMaW5lKCkKICBiaWdmbG9hdFRvU3RyaW5nKGEsIHJhZGl4KQogIGJpZ2ludFRvU3RyaW5nKGEsIHJhZGl4KQogIGNtZFJlYWRsaW5lU3RhcnQoKQogIGNtZFN0YXJ0KHNob3dfYmFubmVyID0gdHJ1ZSkKICBjb2xvcml6ZUpzKHN0cikKICBwdXNoU3RhdGUoYykKICBsYXN0U3RhdGUoYykKICBwb3BTdGF0ZShjKQogIHBhcnNlQmxvY2tDb21tZW50KCkKICBwYXJzZUxpbmVDb21tZW50KCkKICBwYXJzZVN0cmluZyhkZWxpbSkKICBwYXJzZVJlZ2V4KCkKICBwYXJzZU51bWJlcigpCiAgcGFyc2VJZGVudGlmaWVyKCkKICBzZXRTdHlsZShmcm9tLCB0bykKICBjb21wbGV0aW9uKCkKICBjb250cm9sQygpCiAgY29udHJvbEQoKQogIGRlbGV0ZUNoYXIoKQogIGRlbGV0ZUNoYXJEaXIoZGlyKQogIGRvd25jYXNlV29yZCgpCiAgZHVwc3RyKHN0ciwgY291bnQpCiAgZW5kT2ZMaW5lKCkKICByZWFkbGluZVJlbW92ZVByb21wdCgpCiAgZXZhbEFuZFByaW50KGV4cHIpCiAgZXh0cmFjdERpcmVjdGl2ZShhKQogIGZvcndhcmRDaGFyKCkKICBmb3J3YXJkV29yZCgpCiAgZ2V0Q29tcGxldGlvbnMobGluZSwgcG9zKQogIHN5bWNtcChhLCBiKQogIGdldENvbnRleHRPYmplY3QobGluZSwgcG9zKQogIGdldENvbnRleHRXb3JkKGxpbmUsIHBvcykKICBoYW5kbGVCeXRlKGMpCiAgaGFuZGxlQ2hhcihjMSkKICBoYW5kbGVNb3VzZShrZXlzKQogIGhhbmRsZUNtZChleHByKQogIGhhbmRsZURpcmVjdGl2ZShjbWQsIGV4cHIpCiAgaGFuZGxlS2V5KGtleXMpCiAgaGVscCgpCiAgc2VsKG4pCiAgaGlzdG9yeUZpbGUoKQogIGhpc3RvcnlMb2FkKGZpbGVuYW1lLCBmYWlsID0gdHJ1ZSkKICBoaXN0b3J5U2F2ZShmaWxlbmFtZSkKICBoaXN0b3J5Q2xlYXIoKQogIGhpc3RvcnlBZGQoc3RyKQogIGhpc3RvcnlTZWFyY2goZGlyKQogIGhpc3RvcnlTZWFyY2hCYWNrd2FyZCgpCiAgaGlzdG9yeVNlYXJjaEZvcndhcmQoKQogIHNldCBoaXN0b3J5KGVudHJpZXMpCiAgZ2V0IGhpc3RvcnkoKQogIGhpc3RvcnlQb3MoKQogIGluc2VydChzdHIpCiAga2lsbExpbmUoKQogIGtpbGxSZWdpb24oc3RhcnQsIGVuZCwgZGlyKQogIGtpbGxXb3JkKCkKICBtb3ZlQ3Vyc29yKGRlbHRhKQogIG5leHRIaXN0b3J5KCkKICBudW1iZXJUb1N0cmluZyhhLCByYWRpeCkKICBwcmV2aW91c0hpc3RvcnkoKQogIHByaW50KGEpCiAgcHJpbnRSZWMoYSkKICBwcmludFN0YXR1cyhmbiwgcHJvbXB0ID0gdHJ1ZSkKICBwcmludEZ1bmN0aW9uKGxvZ0ZuKQogIHF1b3RlZEluc2VydCgpCiAgcmV2ZXJzZVNlYXJjaCgpCiAgZm9yd2FyZFNlYXJjaCgpCiAgc2VhcmNoQ2IocGF0dGVybikKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuKCkKICBydW5TeW5jKCkKICBzaWdpbnRIYW5kbGVyKCkKICBza2lwV29yZEJhY2t3YXJkKHBvcykKICBza2lwV29yZEZvcndhcmQocG9zKQogIHRlcm1Jbml0KCkKICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gdGhpcy5mcykKICB0ZXJtUmVhZEhhbmRsZXIoKQogIHRyYW5zcG9zZUNoYXJzKCkKICB0cmFuc3Bvc2VXb3JkcygpCiAgdXBjYXNlV29yZCgpCiAgdXBkYXRlKCkKICB5YW5rKCkKICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAG4FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					30,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1434,
								1463
							],
							[
								1746,
								1780
							],
							[
								1820,
								1838
							],
							[
								3387,
								3392
							],
							[
								3434,
								3439
							],
							[
								3588,
								3592
							],
							[
								3935,
								3972
							],
							[
								7101,
								7107
							],
							[
								7163,
								7184
							],
							[
								7230,
								7235
							],
							[
								7249,
								7265
							],
							[
								7328,
								7346
							],
							[
								7439,
								7446
							],
							[
								7514,
								7526
							],
							[
								7602,
								7609
							],
							[
								7616,
								7630
							],
							[
								7783,
								7803
							],
							[
								7841,
								7859
							],
							[
								7913,
								7931
							],
							[
								8021,
								8035
							],
							[
								8105,
								8122
							],
							[
								8156,
								8182
							],
							[
								9132,
								9156
							],
							[
								9445,
								9463
							],
							[
								9554,
								9582
							],
							[
								9939,
								9954
							],
							[
								10117,
								10142
							],
							[
								10169,
								10194
							],
							[
								10251,
								10275
							],
							[
								10380,
								10412
							],
							[
								10629,
								10660
							],
							[
								10788,
								10819
							],
							[
								11157,
								11182
							],
							[
								11897,
								11923
							],
							[
								12652,
								12682
							],
							[
								13244,
								13275
							],
							[
								15072,
								15084
							],
							[
								16819,
								16829
							],
							[
								17112,
								17122
							],
							[
								17287,
								17299
							],
							[
								17336,
								17354
							],
							[
								17884,
								17898
							],
							[
								18096,
								18114
							],
							[
								18193,
								18204
							],
							[
								18252,
								18274
							],
							[
								18328,
								18346
							],
							[
								19771,
								19790
							],
							[
								19967,
								19980
							],
							[
								20147,
								20160
							],
							[
								20229,
								20254
							],
							[
								21083,
								21110
							],
							[
								21610,
								21637
							],
							[
								22564,
								22589
							],
							[
								22719,
								22732
							],
							[
								23195,
								23209
							],
							[
								24607,
								24624
							],
							[
								24747,
								24751
							],
							[
								24762,
								24766
							],
							[
								24883,
								24898
							],
							[
								25750,
								25776
							],
							[
								28730,
								28745
							],
							[
								30653,
								30659
							],
							[
								30662,
								30681
							],
							[
								31652,
								31665
							],
							[
								31860,
								31894
							],
							[
								32228,
								32249
							],
							[
								32354,
								32361
							],
							[
								32392,
								32399
							],
							[
								32567,
								32581
							],
							[
								32670,
								32685
							],
							[
								32839,
								32857
							],
							[
								33202,
								33225
							],
							[
								33270,
								33292
							],
							[
								33336,
								33356
							],
							[
								33429,
								33442
							],
							[
								33472,
								33484
							],
							[
								33519,
								33530
							],
							[
								33695,
								33705
							],
							[
								33772,
								33799
							],
							[
								34226,
								34236
							],
							[
								34324,
								34341
							],
							[
								35190,
								35203
							],
							[
								35380,
								35404
							],
							[
								35919,
								35936
							],
							[
								36184,
								36192
							],
							[
								36216,
								36240
							],
							[
								38493,
								38523
							],
							[
								38536,
								38549
							],
							[
								38761,
								38771
							],
							[
								38988,
								39008
							],
							[
								39021,
								39034
							],
							[
								39052,
								39057
							],
							[
								39082,
								39096
							],
							[
								39133,
								39148
							],
							[
								39542,
								39557
							],
							[
								39745,
								39762
							],
							[
								40077,
								40100
							],
							[
								40165,
								40186
							],
							[
								40333,
								40358
							],
							[
								41061,
								41068
							],
							[
								41121,
								41132
							],
							[
								41400,
								41409
							],
							[
								41497,
								41503
							],
							[
								41556,
								41561
							],
							[
								41616,
								41631
							],
							[
								41699,
								41720
							],
							[
								41871,
								41891
							],
							[
								42062,
								42072
							],
							[
								42465,
								42472
							],
							[
								42612,
								42618
							],
							[
								42651,
								42679
							],
							[
								42768,
								42800
							],
							[
								42883,
								42888
							],
							[
								42997,
								43014
							],
							[
								43186,
								43202
							],
							[
								43510,
								43526
							],
							[
								43960,
								43972
							],
							[
								44170,
								44178
							],
							[
								44688,
								44699
							],
							[
								47414,
								47420
							],
							[
								47459,
								47478
							],
							[
								47570,
								47589
							],
							[
								47651,
								47669
							],
							[
								47761,
								47784
							],
							[
								48185,
								48214
							],
							[
								48273,
								48304
							],
							[
								48461,
								48486
							],
							[
								48595,
								48643
							],
							[
								48931,
								48957
							],
							[
								49030,
								49034
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyFile()",
							"historyLoad(filename, fail = true)",
							"historySave(filename)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							"show = arg =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run()",
							"runSync()",
							" () =>",
							"() =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = this.fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABuBQAAICB1dGlsKCkKQXN5bmNGdW5jdGlvbiA9IGZ1bmN0aW9uIHgoKQpHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCkFzeW5jR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiooKQogIGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBpc0dlbmVyYXRvck9iamVjdCh2KQogIGlzVHlwZWRBcnJheSh2KQogIGlzTW9kdWxlTmFtZXNwYWNlT2JqZWN0KHYpCiAgaXNPYmplY3QodikKICBoYXNCdWlsdEluKG8sIG0pCiAgZm9ybWF0KC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnMob3B0cywgLi4uYXJncykKICBmb3JtYXRXaXRoT3B0aW9uc0ludGVybmFsKG8sIHYpCiAgYXNzZXJ0KGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpCiAgc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIG1zKQogIHN0YXJ0KCkKICBjbGVhckludGVydmFsKGlkKQogIG1lbW9pemUoZm4pCiAgb25jZShmbiwgdGhpc0FyZywgbWVtb0ZuKQogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgd2FpdEZvcihtcykKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHdlYWtBc3NpZ24ob2JqLCAuLi5hcmdzKQogIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgZnVuY3Rpb24qc3BsaXQoYnVmLCAuLi5wb2ludHMpCiAgZ2V0QW5zaVN0eWxlcygpCiAgcmFuZEludCguLi5hcmdzKQAAAAAAAAAAdQgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
						"symkeys":
						[
							[
								973,
								984
							],
							[
								1385,
								1402
							],
							[
								2261,
								2280
							],
							[
								2376,
								2394
							],
							[
								3031,
								3057
							],
							[
								4082,
								4100
							],
							[
								4674,
								4697
							],
							[
								5153,
								5175
							],
							[
								5810,
								5834
							],
							[
								6647,
								6660
							],
							[
								6688,
								6701
							],
							[
								6973,
								6983
							],
							[
								7189,
								7202
							],
							[
								7410,
								7422
							],
							[
								7754,
								7767
							],
							[
								7949,
								7969
							],
							[
								8903,
								8920
							],
							[
								9162,
								9182
							],
							[
								9653,
								9669
							],
							[
								10734,
								10746
							],
							[
								12463,
								12481
							],
							[
								14155,
								14166
							],
							[
								14676,
								14690
							],
							[
								14894,
								14908
							],
							[
								15234,
								15246
							],
							[
								15785,
								15794
							],
							[
								17719,
								17736
							],
							[
								18051,
								18070
							],
							[
								18326,
								18344
							],
							[
								18761,
								18775
							],
							[
								18908,
								18920
							],
							[
								19505,
								19518
							],
							[
								19685,
								19702
							],
							[
								20777,
								20797
							],
							[
								21780,
								21795
							],
							[
								28631,
								28643
							],
							[
								31201,
								31213
							],
							[
								32169,
								32184
							],
							[
								32571,
								32586
							],
							[
								32935,
								32954
							],
							[
								33698,
								33715
							],
							[
								33836,
								33851
							],
							[
								34287,
								34304
							],
							[
								34776,
								34788
							],
							[
								36375,
								36388
							],
							[
								36993,
								37006
							],
							[
								37614,
								37630
							],
							[
								38687,
								38705
							],
							[
								42048,
								42061
							],
							[
								44208,
								44222
							],
							[
								44252,
								44266
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉJSLexerRule‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_rule_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉsyntaxerror_getters‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉjs_syntaxerror_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syntaxerror_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syntaxerror_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syntaxerror_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syntaxerror_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_syntaxerror_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉtoken_methods‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉtoken_getters‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉtoken_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉtoken_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_token_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_token_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_token_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_token_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_token_toprimitive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_token_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_token_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_token_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉlexer_token‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉlexer_continue‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉlexer_to_state‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉlexer_handle‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉlexer_lex‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉlexer_escape_pred‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉlexer_unescape_pred‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉlexer_current_line‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉlexer_lexeme_s‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_add_rule‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_method‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_tokens‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_states‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_statestack‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_iterator‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_escape‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_lex‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_lexer_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1CAAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQpSRVBMCiAgY29uc3RydWN0b3IobmFtZSwgc2hvd19iYW5uZXIgPSB0cnVlKQogIGFkZENsZWFudXBIYW5kbGVyKGZuKQogIGV4aXQoZXhpdENvZGUgPSAwKQogIGFib3J0KCkKICBhY2NlcHRMaW5lKCkKICBhbGVydCgpCiAgYmFja3dhcmRDaGFyKCkKICBiYWNrd2FyZERlbGV0ZUNoYXIoKQogIGJhY2t3YXJkS2lsbExpbmUoKQogIGJhY2t3YXJkS2lsbFdvcmQoKQogIGJhY2t3YXJkV29yZCgpCiAgYmVnaW5uaW5nT2ZMaW5lKCkKICBiaWdmbG9hdFRvU3RyaW5nKGEsIHJhZGl4KQogIGJpZ2ludFRvU3RyaW5nKGEsIHJhZGl4KQogIGNtZFJlYWRsaW5lU3RhcnQoKQogIGNtZFN0YXJ0KHNob3dfYmFubmVyID0gdHJ1ZSkKICBjb2xvcml6ZUpzKHN0cikKICBwdXNoU3RhdGUoYykKICBsYXN0U3RhdGUoYykKICBwb3BTdGF0ZShjKQogIHBhcnNlQmxvY2tDb21tZW50KCkKICBwYXJzZUxpbmVDb21tZW50KCkKICBwYXJzZVN0cmluZyhkZWxpbSkKICBwYXJzZVJlZ2V4KCkKICBwYXJzZU51bWJlcigpCiAgcGFyc2VJZGVudGlmaWVyKCkKICBzZXRTdHlsZShmcm9tLCB0bykKICBjb21wbGV0aW9uKCkKICBjb250cm9sQygpCiAgY29udHJvbEQoKQogIGRlbGV0ZUNoYXIoKQogIGRlbGV0ZUNoYXJEaXIoZGlyKQogIGRvd25jYXNlV29yZCgpCiAgZHVwc3RyKHN0ciwgY291bnQpCiAgZW5kT2ZMaW5lKCkKICByZWFkbGluZVJlbW92ZVByb21wdCgpCiAgZXZhbEFuZFByaW50KGV4cHIpCiAgZXh0cmFjdERpcmVjdGl2ZShhKQogIGZvcndhcmRDaGFyKCkKICBmb3J3YXJkV29yZCgpCiAgZ2V0Q29tcGxldGlvbnMobGluZSwgcG9zKQogIHN5bWNtcChhLCBiKQogIGdldENvbnRleHRPYmplY3QobGluZSwgcG9zKQogIGdldENvbnRleHRXb3JkKGxpbmUsIHBvcykKICBoYW5kbGVCeXRlKGMpCiAgaGFuZGxlQ2hhcihjMSkKICBoYW5kbGVNb3VzZShrZXlzKQogIGhhbmRsZUNtZChleHByKQogIGhhbmRsZURpcmVjdGl2ZShjbWQsIGV4cHIpCiAgaGFuZGxlS2V5KGtleXMpCiAgaGVscCgpCiAgc2VsKG4pCiAgaGlzdG9yeUZpbGUoKQogIGhpc3RvcnlMb2FkKGZpbGVuYW1lLCBmYWlsID0gdHJ1ZSkKICBoaXN0b3J5U2F2ZShmaWxlbmFtZSkKICBoaXN0b3J5Q2xlYXIoKQogIGhpc3RvcnlBZGQoc3RyKQogIGhpc3RvcnlTZWFyY2goZGlyKQogIGhpc3RvcnlTZWFyY2hCYWNrd2FyZCgpCiAgaGlzdG9yeVNlYXJjaEZvcndhcmQoKQogIHNldCBoaXN0b3J5KGVudHJpZXMpCiAgZ2V0IGhpc3RvcnkoKQogIGhpc3RvcnlQb3MoKQogIGluc2VydChzdHIpCiAga2lsbExpbmUoKQogIGtpbGxSZWdpb24oc3RhcnQsIGVuZCwgZGlyKQogIGtpbGxXb3JkKCkKICBtb3ZlQ3Vyc29yKGRlbHRhKQogIG5leHRIaXN0b3J5KCkKICBudW1iZXJUb1N0cmluZyhhLCByYWRpeCkKICBwcmV2aW91c0hpc3RvcnkoKQogIHByaW50KGEpCiAgcHJpbnRSZWMoYSkKICBwcmludFN0YXR1cyhmbiwgcHJvbXB0ID0gdHJ1ZSkKICBwcmludEZ1bmN0aW9uKGxvZ0ZuKQogIHF1b3RlZEluc2VydCgpCiAgcmV2ZXJzZVNlYXJjaCgpCiAgZm9yd2FyZFNlYXJjaCgpCiAgc2VhcmNoQ2IocGF0dGVybikKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuKCkKICBydW5TeW5jKCkKICBzaWdpbnRIYW5kbGVyKCkKICBza2lwV29yZEJhY2t3YXJkKHBvcykKICBza2lwV29yZEZvcndhcmQocG9zKQogIHRlcm1Jbml0KCkKICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gdGhpcy5mcykKICB0ZXJtUmVhZEhhbmRsZXIoKQogIHRyYW5zcG9zZUNoYXJzKCkKICB0cmFuc3Bvc2VXb3JkcygpCiAgdXBjYXNlV29yZCgpCiAgdXBkYXRlKCkKICB5YW5rKCkKICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAACgIAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1434,
								1463
							],
							[
								1746,
								1780
							],
							[
								1820,
								1838
							],
							[
								3387,
								3392
							],
							[
								3434,
								3439
							],
							[
								3588,
								3592
							],
							[
								3935,
								3972
							],
							[
								7101,
								7107
							],
							[
								7163,
								7184
							],
							[
								7230,
								7235
							],
							[
								7249,
								7265
							],
							[
								7328,
								7346
							],
							[
								7439,
								7446
							],
							[
								7514,
								7526
							],
							[
								7602,
								7609
							],
							[
								7616,
								7630
							],
							[
								7783,
								7803
							],
							[
								7841,
								7859
							],
							[
								7913,
								7931
							],
							[
								8021,
								8035
							],
							[
								8105,
								8122
							],
							[
								8156,
								8182
							],
							[
								9132,
								9156
							],
							[
								9445,
								9463
							],
							[
								9554,
								9582
							],
							[
								9939,
								9954
							],
							[
								10117,
								10142
							],
							[
								10169,
								10194
							],
							[
								10251,
								10275
							],
							[
								10380,
								10412
							],
							[
								10629,
								10660
							],
							[
								10788,
								10819
							],
							[
								11157,
								11182
							],
							[
								11897,
								11923
							],
							[
								12652,
								12682
							],
							[
								13244,
								13275
							],
							[
								15072,
								15084
							],
							[
								16819,
								16829
							],
							[
								17112,
								17122
							],
							[
								17287,
								17299
							],
							[
								17336,
								17354
							],
							[
								17884,
								17898
							],
							[
								18096,
								18114
							],
							[
								18193,
								18204
							],
							[
								18252,
								18274
							],
							[
								18328,
								18346
							],
							[
								19771,
								19790
							],
							[
								19967,
								19980
							],
							[
								20147,
								20160
							],
							[
								20229,
								20254
							],
							[
								21083,
								21110
							],
							[
								21610,
								21637
							],
							[
								22564,
								22589
							],
							[
								22719,
								22732
							],
							[
								23195,
								23209
							],
							[
								24607,
								24624
							],
							[
								24747,
								24751
							],
							[
								24762,
								24766
							],
							[
								24883,
								24898
							],
							[
								25750,
								25776
							],
							[
								28730,
								28745
							],
							[
								30653,
								30659
							],
							[
								30662,
								30681
							],
							[
								31652,
								31665
							],
							[
								31860,
								31894
							],
							[
								32228,
								32249
							],
							[
								32354,
								32361
							],
							[
								32392,
								32399
							],
							[
								32567,
								32581
							],
							[
								32670,
								32685
							],
							[
								32839,
								32857
							],
							[
								33202,
								33225
							],
							[
								33270,
								33292
							],
							[
								33336,
								33356
							],
							[
								33429,
								33442
							],
							[
								33472,
								33484
							],
							[
								33519,
								33530
							],
							[
								33695,
								33705
							],
							[
								33772,
								33799
							],
							[
								34226,
								34236
							],
							[
								34324,
								34341
							],
							[
								35190,
								35203
							],
							[
								35380,
								35404
							],
							[
								35919,
								35936
							],
							[
								36184,
								36192
							],
							[
								36216,
								36240
							],
							[
								38493,
								38523
							],
							[
								38536,
								38549
							],
							[
								38761,
								38771
							],
							[
								38988,
								39008
							],
							[
								39021,
								39034
							],
							[
								39052,
								39057
							],
							[
								39082,
								39096
							],
							[
								39133,
								39148
							],
							[
								39542,
								39557
							],
							[
								39745,
								39762
							],
							[
								40077,
								40100
							],
							[
								40165,
								40186
							],
							[
								40333,
								40358
							],
							[
								41061,
								41068
							],
							[
								41121,
								41132
							],
							[
								41400,
								41409
							],
							[
								41497,
								41503
							],
							[
								41556,
								41561
							],
							[
								41616,
								41631
							],
							[
								41699,
								41720
							],
							[
								41871,
								41891
							],
							[
								42062,
								42072
							],
							[
								42465,
								42472
							],
							[
								42612,
								42618
							],
							[
								42651,
								42679
							],
							[
								42768,
								42800
							],
							[
								42883,
								42888
							],
							[
								42997,
								43014
							],
							[
								43186,
								43202
							],
							[
								43510,
								43526
							],
							[
								43960,
								43972
							],
							[
								44170,
								44178
							],
							[
								44688,
								44699
							],
							[
								47414,
								47420
							],
							[
								47459,
								47478
							],
							[
								47570,
								47589
							],
							[
								47651,
								47669
							],
							[
								47761,
								47784
							],
							[
								48185,
								48214
							],
							[
								48273,
								48304
							],
							[
								48461,
								48486
							],
							[
								48595,
								48643
							],
							[
								48931,
								48957
							],
							[
								49030,
								49034
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyFile()",
							"historyLoad(filename, fail = true)",
							"historySave(filename)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							"show = arg =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run()",
							"runSync()",
							" () =>",
							"() =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = this.fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYCgAAICDik4kgIEpTTGV4ZXJSdWxlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGpzX2xleGVyX3J1bGVfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgc3ludGF4ZXJyb3JfZ2V0dGVycyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK74oCTIGpzX3N5bnRheGVycm9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N5bnRheGVycm9yX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3ludGF4ZXJyb3JfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3ludGF4ZXJyb3JfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zeW50YXhlcnJvcl9pbnNwZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3ludGF4ZXJyb3JfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgdG9rZW5fbWV0aG9kcyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIHRva2VuX2dldHRlcnMgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyB0b2tlbl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdG9rZW5fZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Rva2VuX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Rva2VuX3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc190b2tlbl9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Rva2VuX3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdG9rZW5fdG9wcmltaXRpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc190b2tlbl9pbnNwZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdG9rZW5fZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdG9rZW5fZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbGV4ZXJfdG9rZW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsZXhlcl9jb250aW51ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGxleGVyX3RvX3N0YXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbGV4ZXJfaGFuZGxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbGV4ZXJfbGV4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbGV4ZXJfZXNjYXBlX3ByZWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsZXhlcl91bmVzY2FwZV9wcmVkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbGV4ZXJfY3VycmVudF9saW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbGV4ZXJfbGV4ZW1lX3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19sZXhlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19sZXhlcl93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbGV4ZXJfYWRkX3J1bGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19sZXhlcl9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2xleGVyX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2xleGVyX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2xleGVyX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2xleGVyX3Rva2VucyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2xleGVyX3N0YXRlcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2xleGVyX3N0YXRlc3RhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19sZXhlcl9pdGVyYXRvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2xleGVyX2VzY2FwZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2xleGVyX3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbGV4ZXJfbGV4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbGV4ZXJfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2xleGVyX2NhbGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19sZXhlcl9pbnNwZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbGV4ZXJfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbGV4ZXJfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAAAAAAAAAAAdQgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1CAAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQpSRVBMCiAgY29uc3RydWN0b3IobmFtZSwgc2hvd19iYW5uZXIgPSB0cnVlKQogIGFkZENsZWFudXBIYW5kbGVyKGZuKQogIGV4aXQoZXhpdENvZGUgPSAwKQogIGFib3J0KCkKICBhY2NlcHRMaW5lKCkKICBhbGVydCgpCiAgYmFja3dhcmRDaGFyKCkKICBiYWNrd2FyZERlbGV0ZUNoYXIoKQogIGJhY2t3YXJkS2lsbExpbmUoKQogIGJhY2t3YXJkS2lsbFdvcmQoKQogIGJhY2t3YXJkV29yZCgpCiAgYmVnaW5uaW5nT2ZMaW5lKCkKICBiaWdmbG9hdFRvU3RyaW5nKGEsIHJhZGl4KQogIGJpZ2ludFRvU3RyaW5nKGEsIHJhZGl4KQogIGNtZFJlYWRsaW5lU3RhcnQoKQogIGNtZFN0YXJ0KHNob3dfYmFubmVyID0gdHJ1ZSkKICBjb2xvcml6ZUpzKHN0cikKICBwdXNoU3RhdGUoYykKICBsYXN0U3RhdGUoYykKICBwb3BTdGF0ZShjKQogIHBhcnNlQmxvY2tDb21tZW50KCkKICBwYXJzZUxpbmVDb21tZW50KCkKICBwYXJzZVN0cmluZyhkZWxpbSkKICBwYXJzZVJlZ2V4KCkKICBwYXJzZU51bWJlcigpCiAgcGFyc2VJZGVudGlmaWVyKCkKICBzZXRTdHlsZShmcm9tLCB0bykKICBjb21wbGV0aW9uKCkKICBjb250cm9sQygpCiAgY29udHJvbEQoKQogIGRlbGV0ZUNoYXIoKQogIGRlbGV0ZUNoYXJEaXIoZGlyKQogIGRvd25jYXNlV29yZCgpCiAgZHVwc3RyKHN0ciwgY291bnQpCiAgZW5kT2ZMaW5lKCkKICByZWFkbGluZVJlbW92ZVByb21wdCgpCiAgZXZhbEFuZFByaW50KGV4cHIpCiAgZXh0cmFjdERpcmVjdGl2ZShhKQogIGZvcndhcmRDaGFyKCkKICBmb3J3YXJkV29yZCgpCiAgZ2V0Q29tcGxldGlvbnMobGluZSwgcG9zKQogIHN5bWNtcChhLCBiKQogIGdldENvbnRleHRPYmplY3QobGluZSwgcG9zKQogIGdldENvbnRleHRXb3JkKGxpbmUsIHBvcykKICBoYW5kbGVCeXRlKGMpCiAgaGFuZGxlQ2hhcihjMSkKICBoYW5kbGVNb3VzZShrZXlzKQogIGhhbmRsZUNtZChleHByKQogIGhhbmRsZURpcmVjdGl2ZShjbWQsIGV4cHIpCiAgaGFuZGxlS2V5KGtleXMpCiAgaGVscCgpCiAgc2VsKG4pCiAgaGlzdG9yeUZpbGUoKQogIGhpc3RvcnlMb2FkKGZpbGVuYW1lLCBmYWlsID0gdHJ1ZSkKICBoaXN0b3J5U2F2ZShmaWxlbmFtZSkKICBoaXN0b3J5Q2xlYXIoKQogIGhpc3RvcnlBZGQoc3RyKQogIGhpc3RvcnlTZWFyY2goZGlyKQogIGhpc3RvcnlTZWFyY2hCYWNrd2FyZCgpCiAgaGlzdG9yeVNlYXJjaEZvcndhcmQoKQogIHNldCBoaXN0b3J5KGVudHJpZXMpCiAgZ2V0IGhpc3RvcnkoKQogIGhpc3RvcnlQb3MoKQogIGluc2VydChzdHIpCiAga2lsbExpbmUoKQogIGtpbGxSZWdpb24oc3RhcnQsIGVuZCwgZGlyKQogIGtpbGxXb3JkKCkKICBtb3ZlQ3Vyc29yKGRlbHRhKQogIG5leHRIaXN0b3J5KCkKICBudW1iZXJUb1N0cmluZyhhLCByYWRpeCkKICBwcmV2aW91c0hpc3RvcnkoKQogIHByaW50KGEpCiAgcHJpbnRSZWMoYSkKICBwcmludFN0YXR1cyhmbiwgcHJvbXB0ID0gdHJ1ZSkKICBwcmludEZ1bmN0aW9uKGxvZ0ZuKQogIHF1b3RlZEluc2VydCgpCiAgcmV2ZXJzZVNlYXJjaCgpCiAgZm9yd2FyZFNlYXJjaCgpCiAgc2VhcmNoQ2IocGF0dGVybikKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuKCkKICBydW5TeW5jKCkKICBzaWdpbnRIYW5kbGVyKCkKICBza2lwV29yZEJhY2t3YXJkKHBvcykKICBza2lwV29yZEZvcndhcmQocG9zKQogIHRlcm1Jbml0KCkKICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gdGhpcy5mcykKICB0ZXJtUmVhZEhhbmRsZXIoKQogIHRyYW5zcG9zZUNoYXJzKCkKICB0cmFuc3Bvc2VXb3JkcygpCiAgdXBjYXNlV29yZCgpCiAgdXBkYXRlKCkKICB5YW5rKCkKICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31529,
								31539
							],
							[
								32444,
								32463
							],
							[
								33277,
								33304
							],
							[
								33354,
								33381
							],
							[
								33662,
								33683
							],
							[
								33915,
								33930
							],
							[
								34895,
								34909
							],
							[
								34939,
								34953
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AQAAAAAAAAAAAAAABgYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					40,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31529,
								31539
							],
							[
								32444,
								32463
							],
							[
								33277,
								33304
							],
							[
								33354,
								33381
							],
							[
								33662,
								33683
							],
							[
								33915,
								33930
							],
							[
								34895,
								34909
							],
							[
								34939,
								34953
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA+BwAA4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAAGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgcAAOKAlOKTguKAkyBJTlNQRUNUX0lOVDMyVF9JTlJBTkdFICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBJTlNQRUNUX0xFVkVMICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBJTlNQRUNUX0lTX0NPTVBBQ1QgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24KICDikp4gIHByb3Bfa2V5IDsg4oCUIHR5cGUgZGVjbGFyYXRpb24K4oCU4pK44oCTIHByb3Bfa2V5IHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgcHJvcF9rZXlfdCA7IOKAlCB0eXBlZGVmCiAg4pOJICBpbnNwZWN0X29wdGlvbnNfdCA7IOKAlCB0eXBlZGVmCiAg4pKhICBqc19pbnNwZWN0X3ByaW50ICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgcmVnZXhwX3ByZWRpY2F0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfc2NyZWVuX3dpZHRoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2hpZGRlbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3RfbmV3bGluZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29iamVjdF9nZXRwcm9wZXJ0eW5hbWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXNfcmVjdXJzaXZlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fYXRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfY3VzdG9tX2NhbGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X21hcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfcmVnZXhwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF90b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDikqEgIGpzX2RlYnVnZ2VyX2J1aWxkX2JhY2t0cmFjZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RhY2t0cmFjZV92YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RhY2t0cmFjZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAAAAAAAAAAABgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewQAAAAAAACLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31527,
								31537
							],
							[
								32442,
								32461
							],
							[
								33275,
								33302
							],
							[
								33352,
								33379
							],
							[
								33660,
								33681
							],
							[
								33913,
								33928
							],
							[
								34893,
								34907
							],
							[
								34937,
								34951
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA+BwAA4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAAGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgcAAOKAlOKTguKAkyBJTlNQRUNUX0lOVDMyVF9JTlJBTkdFICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBJTlNQRUNUX0xFVkVMICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBJTlNQRUNUX0lTX0NPTVBBQ1QgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24KICDikp4gIHByb3Bfa2V5IDsg4oCUIHR5cGUgZGVjbGFyYXRpb24K4oCU4pK44oCTIHByb3Bfa2V5IHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgcHJvcF9rZXlfdCA7IOKAlCB0eXBlZGVmCiAg4pOJICBpbnNwZWN0X29wdGlvbnNfdCA7IOKAlCB0eXBlZGVmCiAg4pKhICBqc19pbnNwZWN0X3ByaW50ICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgcmVnZXhwX3ByZWRpY2F0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfc2NyZWVuX3dpZHRoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2hpZGRlbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3RfbmV3bGluZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29iamVjdF9nZXRwcm9wZXJ0eW5hbWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXNfcmVjdXJzaXZlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fYXRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfY3VzdG9tX2NhbGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X21hcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfcmVnZXhwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF90b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDikqEgIGpzX2RlYnVnZ2VyX2J1aWxkX2JhY2t0cmFjZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RhY2t0cmFjZV92YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RhY2t0cmFjZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAAAAAAAAAAABgYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31539,
								31549
							],
							[
								32454,
								32473
							],
							[
								33287,
								33314
							],
							[
								33364,
								33391
							],
							[
								33672,
								33693
							],
							[
								33925,
								33940
							],
							[
								34905,
								34919
							],
							[
								34949,
								34963
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+BwAA4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAAGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+BwAA4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					44,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31539,
								31549
							],
							[
								32454,
								32473
							],
							[
								33287,
								33314
							],
							[
								33364,
								33391
							],
							[
								33672,
								33693
							],
							[
								33925,
								33940
							],
							[
								34905,
								34919
							],
							[
								34949,
								34963
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AQAAAAAAAAAAAAAABgYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					45,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31543,
								31553
							],
							[
								32458,
								32477
							],
							[
								33291,
								33318
							],
							[
								33368,
								33395
							],
							[
								33676,
								33697
							],
							[
								33929,
								33944
							],
							[
								34909,
								34923
							],
							[
								34953,
								34967
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA+BwAA4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAAGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgcAAOKAlOKTguKAkyBJTlNQRUNUX0lOVDMyVF9JTlJBTkdFICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBJTlNQRUNUX0xFVkVMICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBJTlNQRUNUX0lTX0NPTVBBQ1QgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24KICDikp4gIHByb3Bfa2V5IDsg4oCUIHR5cGUgZGVjbGFyYXRpb24K4oCU4pK44oCTIHByb3Bfa2V5IHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgcHJvcF9rZXlfdCA7IOKAlCB0eXBlZGVmCiAg4pOJICBpbnNwZWN0X29wdGlvbnNfdCA7IOKAlCB0eXBlZGVmCiAg4pKhICBqc19pbnNwZWN0X3ByaW50ICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgcmVnZXhwX3ByZWRpY2F0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfc2NyZWVuX3dpZHRoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2hpZGRlbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3RfbmV3bGluZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29iamVjdF9nZXRwcm9wZXJ0eW5hbWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXNfcmVjdXJzaXZlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fYXRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfY3VzdG9tX2NhbGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X21hcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfcmVnZXhwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF90b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDikqEgIGpzX2RlYnVnZ2VyX2J1aWxkX2JhY2t0cmFjZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RhY2t0cmFjZV92YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RhY2t0cmFjZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAAAAAAAAAAABgYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					46,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31547,
								31557
							],
							[
								32462,
								32481
							],
							[
								33295,
								33322
							],
							[
								33372,
								33399
							],
							[
								33680,
								33701
							],
							[
								33933,
								33948
							],
							[
								34913,
								34927
							],
							[
								34957,
								34971
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+BwAA4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAAGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					47,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1434,
								1463
							],
							[
								1746,
								1780
							],
							[
								1820,
								1838
							],
							[
								3387,
								3392
							],
							[
								3434,
								3439
							],
							[
								3588,
								3592
							],
							[
								3935,
								3972
							],
							[
								7101,
								7107
							],
							[
								7163,
								7184
							],
							[
								7230,
								7235
							],
							[
								7249,
								7265
							],
							[
								7328,
								7346
							],
							[
								7439,
								7446
							],
							[
								7514,
								7526
							],
							[
								7602,
								7609
							],
							[
								7616,
								7630
							],
							[
								7783,
								7803
							],
							[
								7841,
								7859
							],
							[
								7913,
								7931
							],
							[
								8021,
								8035
							],
							[
								8105,
								8122
							],
							[
								8156,
								8182
							],
							[
								9164,
								9188
							],
							[
								9477,
								9495
							],
							[
								9586,
								9614
							],
							[
								9971,
								9986
							],
							[
								10149,
								10174
							],
							[
								10201,
								10226
							],
							[
								10283,
								10307
							],
							[
								10412,
								10444
							],
							[
								10661,
								10692
							],
							[
								10820,
								10851
							],
							[
								11189,
								11214
							],
							[
								11929,
								11955
							],
							[
								12684,
								12714
							],
							[
								13276,
								13307
							],
							[
								15104,
								15116
							],
							[
								16851,
								16861
							],
							[
								17144,
								17154
							],
							[
								17319,
								17331
							],
							[
								17368,
								17386
							],
							[
								17916,
								17930
							],
							[
								18146,
								18164
							],
							[
								18243,
								18254
							],
							[
								18302,
								18324
							],
							[
								18378,
								18396
							],
							[
								19821,
								19840
							],
							[
								20017,
								20030
							],
							[
								20197,
								20210
							],
							[
								20279,
								20304
							],
							[
								21133,
								21160
							],
							[
								21660,
								21687
							],
							[
								22614,
								22639
							],
							[
								22769,
								22782
							],
							[
								23245,
								23259
							],
							[
								24657,
								24674
							],
							[
								24804,
								24808
							],
							[
								24826,
								24830
							],
							[
								24947,
								24962
							],
							[
								25814,
								25840
							],
							[
								28886,
								28901
							],
							[
								30809,
								30815
							],
							[
								30818,
								30837
							],
							[
								31900,
								31913
							],
							[
								32108,
								32142
							],
							[
								32476,
								32497
							],
							[
								32602,
								32609
							],
							[
								32640,
								32647
							],
							[
								32814,
								32828
							],
							[
								32917,
								32932
							],
							[
								33086,
								33104
							],
							[
								33449,
								33472
							],
							[
								33517,
								33539
							],
							[
								33583,
								33603
							],
							[
								33676,
								33689
							],
							[
								33719,
								33731
							],
							[
								33766,
								33777
							],
							[
								33942,
								33952
							],
							[
								34019,
								34046
							],
							[
								34473,
								34483
							],
							[
								34571,
								34588
							],
							[
								35437,
								35450
							],
							[
								35627,
								35651
							],
							[
								36166,
								36183
							],
							[
								36431,
								36439
							],
							[
								36463,
								36487
							],
							[
								38812,
								38842
							],
							[
								38855,
								38868
							],
							[
								39080,
								39090
							],
							[
								39307,
								39327
							],
							[
								39340,
								39353
							],
							[
								39371,
								39376
							],
							[
								39401,
								39415
							],
							[
								39452,
								39467
							],
							[
								39861,
								39876
							],
							[
								40064,
								40081
							],
							[
								40396,
								40419
							],
							[
								40484,
								40505
							],
							[
								40652,
								40677
							],
							[
								41380,
								41387
							],
							[
								41440,
								41451
							],
							[
								41719,
								41728
							],
							[
								41816,
								41822
							],
							[
								41875,
								41880
							],
							[
								41935,
								41950
							],
							[
								42018,
								42039
							],
							[
								42190,
								42210
							],
							[
								42381,
								42391
							],
							[
								42784,
								42791
							],
							[
								42931,
								42937
							],
							[
								42970,
								42998
							],
							[
								43087,
								43119
							],
							[
								43202,
								43207
							],
							[
								43316,
								43333
							],
							[
								43505,
								43521
							],
							[
								43861,
								43877
							],
							[
								44343,
								44355
							],
							[
								44571,
								44579
							],
							[
								45089,
								45100
							],
							[
								47839,
								47845
							],
							[
								47884,
								47903
							],
							[
								47995,
								48014
							],
							[
								48076,
								48094
							],
							[
								48186,
								48209
							],
							[
								48610,
								48639
							],
							[
								48698,
								48729
							],
							[
								48886,
								48911
							],
							[
								49020,
								49068
							],
							[
								49356,
								49382
							],
							[
								49455,
								49459
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							" function sel(n)",
							"historyFile()",
							"historyLoad(filename, fail = true)",
							"historySave(filename)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							"show = arg =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run()",
							"runSync()",
							" () =>",
							"() =>",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = this.fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+BwAA4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAB1CAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					48,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31543,
								31553
							],
							[
								32458,
								32477
							],
							[
								33291,
								33318
							],
							[
								33368,
								33395
							],
							[
								33676,
								33697
							],
							[
								33929,
								33944
							],
							[
								34909,
								34923
							],
							[
								34953,
								34967
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1CAAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQpSRVBMCiAgY29uc3RydWN0b3IobmFtZSwgc2hvd19iYW5uZXIgPSB0cnVlKQogIGFkZENsZWFudXBIYW5kbGVyKGZuKQogIGV4aXQoZXhpdENvZGUgPSAwKQogIGFib3J0KCkKICBhY2NlcHRMaW5lKCkKICBhbGVydCgpCiAgYmFja3dhcmRDaGFyKCkKICBiYWNrd2FyZERlbGV0ZUNoYXIoKQogIGJhY2t3YXJkS2lsbExpbmUoKQogIGJhY2t3YXJkS2lsbFdvcmQoKQogIGJhY2t3YXJkV29yZCgpCiAgYmVnaW5uaW5nT2ZMaW5lKCkKICBiaWdmbG9hdFRvU3RyaW5nKGEsIHJhZGl4KQogIGJpZ2ludFRvU3RyaW5nKGEsIHJhZGl4KQogIGNtZFJlYWRsaW5lU3RhcnQoKQogIGNtZFN0YXJ0KHNob3dfYmFubmVyID0gdHJ1ZSkKICBjb2xvcml6ZUpzKHN0cikKICBwdXNoU3RhdGUoYykKICBsYXN0U3RhdGUoYykKICBwb3BTdGF0ZShjKQogIHBhcnNlQmxvY2tDb21tZW50KCkKICBwYXJzZUxpbmVDb21tZW50KCkKICBwYXJzZVN0cmluZyhkZWxpbSkKICBwYXJzZVJlZ2V4KCkKICBwYXJzZU51bWJlcigpCiAgcGFyc2VJZGVudGlmaWVyKCkKICBzZXRTdHlsZShmcm9tLCB0bykKICBjb21wbGV0aW9uKCkKICBjb250cm9sQygpCiAgY29udHJvbEQoKQogIGRlbGV0ZUNoYXIoKQogIGRlbGV0ZUNoYXJEaXIoZGlyKQogIGRvd25jYXNlV29yZCgpCiAgZHVwc3RyKHN0ciwgY291bnQpCiAgZW5kT2ZMaW5lKCkKICByZWFkbGluZVJlbW92ZVByb21wdCgpCiAgZXZhbEFuZFByaW50KGV4cHIpCiAgZXh0cmFjdERpcmVjdGl2ZShhKQogIGZvcndhcmRDaGFyKCkKICBmb3J3YXJkV29yZCgpCiAgZ2V0Q29tcGxldGlvbnMobGluZSwgcG9zKQogIHN5bWNtcChhLCBiKQogIGdldENvbnRleHRPYmplY3QobGluZSwgcG9zKQogIGdldENvbnRleHRXb3JkKGxpbmUsIHBvcykKICBoYW5kbGVCeXRlKGMpCiAgaGFuZGxlQ2hhcihjMSkKICBoYW5kbGVNb3VzZShrZXlzKQogIGhhbmRsZUNtZChleHByKQogIGhhbmRsZURpcmVjdGl2ZShjbWQsIGV4cHIpCiAgaGFuZGxlS2V5KGtleXMpCiAgaGVscCgpCiAgc2VsKG4pCiAgaGlzdG9yeUZpbGUoKQogIGhpc3RvcnlMb2FkKGZpbGVuYW1lLCBmYWlsID0gdHJ1ZSkKICBoaXN0b3J5U2F2ZShmaWxlbmFtZSkKICBoaXN0b3J5Q2xlYXIoKQogIGhpc3RvcnlBZGQoc3RyKQogIGhpc3RvcnlTZWFyY2goZGlyKQogIGhpc3RvcnlTZWFyY2hCYWNrd2FyZCgpCiAgaGlzdG9yeVNlYXJjaEZvcndhcmQoKQogIHNldCBoaXN0b3J5KGVudHJpZXMpCiAgZ2V0IGhpc3RvcnkoKQogIGhpc3RvcnlQb3MoKQogIGluc2VydChzdHIpCiAga2lsbExpbmUoKQogIGtpbGxSZWdpb24oc3RhcnQsIGVuZCwgZGlyKQogIGtpbGxXb3JkKCkKICBtb3ZlQ3Vyc29yKGRlbHRhKQogIG5leHRIaXN0b3J5KCkKICBudW1iZXJUb1N0cmluZyhhLCByYWRpeCkKICBwcmV2aW91c0hpc3RvcnkoKQogIHByaW50KGEpCiAgcHJpbnRSZWMoYSkKICBwcmludFN0YXR1cyhmbiwgcHJvbXB0ID0gdHJ1ZSkKICBwcmludEZ1bmN0aW9uKGxvZ0ZuKQogIHF1b3RlZEluc2VydCgpCiAgcmV2ZXJzZVNlYXJjaCgpCiAgZm9yd2FyZFNlYXJjaCgpCiAgc2VhcmNoQ2IocGF0dGVybikKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuKCkKICBydW5TeW5jKCkKICBzaWdpbnRIYW5kbGVyKCkKICBza2lwV29yZEJhY2t3YXJkKHBvcykKICBza2lwV29yZEZvcndhcmQocG9zKQogIHRlcm1Jbml0KCkKICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gdGhpcy5mcykKICB0ZXJtUmVhZEhhbmRsZXIoKQogIHRyYW5zcG9zZUNoYXJzKCkKICB0cmFuc3Bvc2VXb3JkcygpCiAgdXBjYXNlV29yZCgpCiAgdXBkYXRlKCkKICB5YW5rKCkKICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAAYGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					49,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31531,
								31541
							],
							[
								32446,
								32465
							],
							[
								33279,
								33306
							],
							[
								33356,
								33383
							],
							[
								33664,
								33685
							],
							[
								33917,
								33932
							],
							[
								34897,
								34911
							],
							[
								34941,
								34955
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+BwAA4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAAGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					50,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31531,
								31541
							],
							[
								32446,
								32465
							],
							[
								33279,
								33306
							],
							[
								33356,
								33383
							],
							[
								33664,
								33685
							],
							[
								33917,
								33932
							],
							[
								34897,
								34911
							],
							[
								34941,
								34955
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+BwAA4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAAGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					51,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+BwAA4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					52,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31531,
								31541
							],
							[
								32446,
								32465
							],
							[
								33279,
								33306
							],
							[
								33356,
								33383
							],
							[
								33664,
								33685
							],
							[
								33917,
								33932
							],
							[
								34897,
								34911
							],
							[
								34941,
								34955
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AQAAAAAAAAAAAAAABgYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					53,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
						"symkeys":
						[
							[
								475,
								497
							],
							[
								546,
								559
							],
							[
								600,
								618
							],
							[
								851,
								859
							],
							[
								877,
								885
							],
							[
								950,
								960
							],
							[
								1329,
								1346
							],
							[
								1436,
								1452
							],
							[
								1555,
								1571
							],
							[
								1811,
								1831
							],
							[
								2190,
								2210
							],
							[
								2698,
								2718
							],
							[
								2949,
								2968
							],
							[
								7038,
								7060
							],
							[
								8608,
								8630
							],
							[
								8835,
								8850
							],
							[
								8964,
								8990
							],
							[
								9434,
								9470
							],
							[
								9872,
								9894
							],
							[
								10213,
								10235
							],
							[
								11247,
								11261
							],
							[
								12801,
								12815
							],
							[
								13945,
								13967
							],
							[
								16049,
								16066
							],
							[
								16453,
								16470
							],
							[
								17716,
								17733
							],
							[
								19511,
								19527
							],
							[
								31531,
								31541
							],
							[
								32446,
								32465
							],
							[
								33279,
								33306
							],
							[
								33356,
								33383
							],
							[
								33664,
								33685
							],
							[
								33917,
								33932
							],
							[
								34897,
								34911
							],
							[
								34941,
								34955
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_INT32T_INRANGE‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_LEVEL‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚ìÇ‚Äì‚ÄÉINSPECT_IS_COMPACT‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉprop_key‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉprop_key‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉprop_key_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉinspect_options_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉregexp_predicate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_screen_width‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_options_hidden‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉinspect_newline‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_getpropertynames_recursive‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_custom_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉjs_debugger_build_backtrace‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_stacktrace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_inspect_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_INIT_MODULE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+BwAA4oCU4pOC4oCTIElOU1BFQ1RfSU5UMzJUX0lOUkFOR0UgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfTEVWRUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIElOU1BFQ1RfSVNfQ09NUEFDVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogIOKSniAgcHJvcF9rZXkgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgrigJTikrjigJMgcHJvcF9rZXkgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBwcm9wX2tleV90IDsg4oCUIHR5cGVkZWYKICDik4kgIGluc3BlY3Rfb3B0aW9uc190IDsg4oCUIHR5cGVkZWYKICDikqEgIGpzX2luc3BlY3RfcHJpbnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyByZWdleHBfcHJlZGljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9zY3JlZW5fd2lkdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9vcHRpb25zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGluc3BlY3Rfb3B0aW9uc19vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpbnNwZWN0X29wdGlvbnNfaGlkZGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaW5zcGVjdF9uZXdsaW5lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2dldHByb3BlcnR5bmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vYmplY3RfZ2V0cHJvcGVydHluYW1lc19yZWN1cnNpdmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2N1c3RvbV9hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9jdXN0b21fY2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3RfbWFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9yZWdleHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnNwZWN0X3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAganNfZGVidWdnZXJfYnVpbGRfYmFja3RyYWNlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9zdGFja3RyYWNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5zcGVjdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAAGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"contents": "/*\n * QuickJS Read Eval Print Loop\n *\n * Copyright (c) 2017-2020 Fabrice Bellard\n * Copyright (c) 2017-2020 Charlie Gordon\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n'use strip';\n\nimport * as std from 'std';\nimport * as os from 'os';\n//import { once } from 'util';\n//import * as fs from './fs.js';\nimport inspect from 'inspect';\nimport path from 'path';\nimport * as Terminal from './terminal.js';\n\nfunction define(obj, ...args) {\n  for(let props of args) {\n    let desc = Object.getOwnPropertyDescriptors(props);\n    for(let prop in desc) {\n      const { value } = desc[prop];\n      if(typeof value == 'function') desc[prop].writable = false;\n    }\n    Object.defineProperties(obj, desc);\n  }\n  return obj;\n}\n\nfunction once(fn, thisArg, memoFn) {\n  let ret,\n    ran = false;\n\n  return function(...args) {\n    if(!ran) {\n      ran = true;\n      ret = fn.apply(thisArg || this, args);\n    } else if(typeof memoFn == 'function') {\n      ret = memoFn(ret);\n    }\n    return ret;\n  };\n}\n\nvar fs;\n\n/* XXX: use preprocessor ? */\nvar config_numcalc = typeof os.open === 'undefined';\nvar has_jscalc = typeof Fraction === 'function';\nvar has_bignum = typeof BigFloat === 'function';\n\nvar colors = {\n  none: '\\x1b[0m',\n  black: '\\x1b[30m',\n  red: '\\x1b[31m',\n  green: '\\x1b[32m',\n  yellow: '\\x1b[33m',\n  blue: '\\x1b[34m',\n  magenta: '\\x1b[35m',\n  cyan: '\\x1b[36m',\n  white: '\\x1b[37m',\n  gray: '\\x1b[30;1m',\n  grey: '\\x1b[30;1m',\n  bright_red: '\\x1b[31;1m',\n  bright_green: '\\x1b[32;1m',\n  bright_yellow: '\\x1b[33;1m',\n  bright_blue: '\\x1b[34;1m',\n  bright_magenta: '\\x1b[35;1m',\n  bright_cyan: '\\x1b[36;1m',\n  bright_white: '\\x1b[37;1m'\n};\n\nvar readline_keys = null;\nvar readline_state = null;\nvar readline_cb = null;\n\nvar hex_mode = false;\nvar eval_mode = 'std';\n\nvar styles = {\n  default: 'bright_green',\n  comment: 'bright_green',\n  string: 'bright_cyan',\n  regex: 'bright_magenta',\n  number: 'green',\n  keyword: 'bright_red',\n  function: 'bright_yellow',\n  type: 'bright_red',\n  identifier: 'bright_yellow',\n  error: 'red',\n  result: 'white',\n  error_msg: 'bright_red'\n};\n\nvar /*history */= [];\nvar clip_board = '';\nvar prec = null;\nvar expBits = null;\nvar log2_10 = null;\n\nvar utf8_state = 0;\nvar utf8_val = 0;\n\nvar term_fd = null;\nvar term_read_buf = null;\n/* current X position of the cursor in the terminal */\nvar term_cursor_x = 0;\n\nvar tty_set_raw = once(fd => os.ttySetRaw(fd));\nvar put_banner = once(() => std.puts('QuickJS - Type \"\\\\h\" for this.help\\n'));\n\nvar search = 0;\nvar search_pattern = '';\nvar search_index,\n  search_matches = [];\n\nexport class REPL {\n  pstate = '';\n  prompt = '';\n  plen = 0;\n  ps1 = '> ';\n  ps2 = '  ... ';\n  utf8 = true;\n  showTime = false;\n  showColors = true;\n  evalTime = 0;\n\n  mexpr = '';\n  level = 0;\n  cmd = '';\n  cursorPos = 0;\n  lastCmd = '';\n  lastCursorPos = 0;\n  historyIndex = null;\n  thisFun = null;\n  lastFun = null;\n  quoteFlag = false;\n  out = std.out;\n\n  constructor(name, show_banner = true) {\n    if('fs' in globalThis) this.fs = globalThis.fs;\n    //else import('fs').then(fs => (globalThis.fs = this.fs = fs));\n\n    this.commands = define(\n      {},\n      {\n        /* command table */ '\\x01': this.beginningOfLine /* ^A - bol */,\n        '\\x02': this.backwardChar /* ^B - backward-char */,\n        '\\x03': this.controlC /* ^C - this.abort */,\n        '\\x04': this.controlD /* ^D - delete-char or exit */,\n        '\\x05': this.endOfLine /* ^E - eol */,\n        '\\x06': this.forwardChar /* ^F - forward-char */,\n        '\\x07': this.abort /* ^G - bell */,\n        '\\x08': this.backwardDeleteChar /* ^H - backspace */,\n        '\\x09': this.completion /* ^I - history-search-backward */,\n        '\\x0a': this.acceptLine /* ^J - newline */,\n        '\\x0b': this.killLine /* ^K - delete to end of line */,\n        '\\x0d': this.acceptLine /* ^M - enter */,\n        '\\x0e': this.nextHistory /* ^N - down */,\n        '\\x10': this.previousHistory /* ^P - up */,\n        '\\x11': this.quotedInsert /* ^Q - quoted-this.insert */,\n        '\\x12': this.reverseSearch /* ^R - reverse-search */,\n        '\\x13': this.forwardSearch /* ^S - search */,\n        '\\x14': this.transposeChars /* ^T - transpose */,\n        '\\x18': this.reset /* ^X - cancel */,\n        '\\x19': this.yank /* ^Y - this.yank */,\n        '\\x1bOA': this.previousHistory /* ^[OA - up */,\n        '\\x1bOB': this.nextHistory /* ^[OB - down */,\n        '\\x1bOC': this.forwardChar /* ^[OC - right */,\n        '\\x1bOD': this.backwardChar /* ^[OD - left */,\n        '\\x1bOF': this.forwardWord /* ^[OF - ctrl-right */,\n        '\\x1bOH': this.backwardWord /* ^[OH - ctrl-left */,\n        '\\x1b[1;5C': this.forwardWord /* ^[[1;5C - ctrl-right */,\n        '\\x1b[1;5D': this.backwardWord /* ^[[1;5D - ctrl-left */,\n        '\\x1b[1~': this.beginningOfLine /* ^[[1~ - bol */,\n        '\\x1b[3~': this.deleteChar /* ^[[3~ - delete */,\n        '\\x1b[4~': this.endOfLine /* ^[[4~ - eol */,\n        '\\x1b[5~': this.historySearchBackward /* ^[[5~ - page up */,\n        '\\x1b[6~': this.historySearchForward /* ^[[5~ - page down */,\n        '\\x1b[A': this.previousHistory /* ^[[A - up */,\n        '\\x1b[B': this.nextHistory /* ^[[B - down */,\n        '\\x1b[C': this.forwardChar /* ^[[C - right */,\n        '\\x1b[D': this.backwardChar /* ^[[D - left */,\n        '\\x1b[F': this.endOfLine /* ^[[F - end */,\n        '\\x1b[H': this.beginningOfLine /* ^[[H - home */,\n        '\\x1b\\x7f': this.backwardKillWord /* M-C-? - this.backwardKillWord */,\n        '\\x1bb': this.backwardWord /* M-b - this.backwardWord */,\n        '\\x1bd': this.killWord /* M-d - this.killWord */,\n        '\\x1bf': this.forwardWord /* M-f - this.backwardWord */,\n        '\\x1bk': this.backwardKillLine /* M-k - this.backwardKillLine */,\n        '\\x1bl': this.downcaseWord /* M-l - this.downcaseWord */,\n        '\\x1bt': this.transposeWords /* M-t - this.transposeWords */,\n        '\\x1bu': this.upcaseWord /* M-u - this.upcaseWord */,\n        '\\x7f': this.backwardDeleteChar /* ^? - delete */\n      }\n    );\n\n    if(typeof name == 'string') this.ps1 = name + this.ps1;\n\n    this.termInit();\n\n    os.signal(os.SIGTERM, () => this.exit(0));\n\n    this.cmdStart(show_banner);\n  }\n\n  addCleanupHandler(fn) {\n    let previousHandler = this.cleanup || (() => {});\n    this.cleanup = () => {\n      previousHandler.call(this);\n      fn();\n    };\n  }\n\n  exit(exitCode = 0) {\n    if(typeof this.cleanup == 'function') this.cleanup();\n\n    std.exit(exitCode);\n  }\n\n  abort() {\n    this.cmd = '';\n    this.cursorPos = 0;\n    return -2;\n  }\n\n  acceptLine() {\n    std.puts('\\n');\n    this.historyAdd(this.cmd);\n    return -1;\n  }\n\n  alert() {}\n\n  backwardChar() {\n    if(this.cursorPos > 0) {\n      this.cursorPos--;\n      while(isTrailingSurrogate(this.cmd.charAt(this.cursorPos))) this.cursorPos--;\n    }\n  }\n\n  backwardDeleteChar() {\n    this.deleteCharDir(-1);\n  }\n\n  backwardKillLine() {\n    this.killRegion(0, this.cursorPos, -1);\n  }\n\n  backwardKillWord() {\n    this.killRegion(this.skipWordBackward(this.cursorPos), this.cursorPos, -1);\n  }\n\n  backwardWord() {\n    this.cursorPos = this.skipWordBackward(this.cursorPos);\n  }\n\n  beginningOfLine() {\n    this.cursorPos = 0;\n  }\n\n  bigfloatToString(a, radix) {\n    var s = null;\n    if(!BigFloat.isFinite(a)) {\n      /* NaN, Infinite */\n      if(eval_mode !== 'math') {\n        return 'BigFloat(' + a.toString() + ')';\n      } else {\n        return a.toString();\n      }\n    } else {\n      if(a == 0) {\n        if(1 / a < 0) s = '-0';\n        else s = '0';\n      } else {\n        if(radix == 16) {\n          var s = null;\n          if(a < 0) {\n            a = -a;\n            s = '-';\n          } else {\n            s = '';\n          }\n          s += '0x' + a.toString(16);\n        } else {\n          s = a.toString();\n        }\n      }\n      if(typeof a === 'bigfloat' && eval_mode !== 'math') {\n        s += 'l';\n      } else if(\n        eval_mode !== 'std' &&\n        s.indexOf('.') < 0 &&\n        ((radix == 16 && s.indexOf('p') < 0) || (radix == 10 && s.indexOf('e') < 0))\n      ) {\n        /* add a decimal point so that the floating point type\n                   is visible */\n        s += '.0';\n      }\n      return s;\n    }\n  }\n\n  bigintToString(a, radix) {\n    var s = null;\n    if(radix == 16) {\n      var s = null;\n      if(a < 0) {\n        a = -a;\n        s = '-';\n      } else {\n        s = '';\n      }\n      s += '0x' + a.toString(16);\n    } else {\n      s = a.toString();\n    }\n    if(eval_mode === 'std') s += 'n';\n    return s;\n  }\n\n  cmdReadlineStart() {\n    this.readlineStart(this.dupstr('    ', this.level), this.readlineHandleCmd);\n  }\n\n  cmdStart(show_banner = true) {\n    if(show_banner) put_banner();\n\n    if(has_bignum) {\n      log2_10 = Math.log(10) / Math.log(2);\n      prec = 113;\n      expBits = 15;\n      if(has_jscalc) {\n        eval_mode = 'math';\n        /* XXX: numeric mode should always be the default ? */\n        globalThis.algebraicMode = config_numcalc;\n      }\n    }\n\n    this.cmdReadlineStart();\n  }\n\n  colorizeJs(str) {\n    var i,\n      c,\n      start,\n      n = str.length;\n    var style,\n      state = '',\n      level = 0;\n    var primary,\n      can_regex = 1;\n    var r = [];\n\n    function pushState(c) {\n      state += c;\n    }\n    function lastState(c) {\n      return state.substring(state.length - 1);\n    }\n    function popState(c) {\n      var c = lastState();\n      state = state.substring(0, state.length - 1);\n      return c;\n    }\n\n    function parseBlockComment() {\n      style = 'comment';\n      pushState('/');\n      for(i++; i < n - 1; i++) {\n        if(str[i] == '*' && str[i + 1] == '/') {\n          i += 2;\n          popState('/');\n          break;\n        }\n      }\n    }\n\n    function parseLineComment() {\n      style = 'comment';\n      for(i++; i < n; i++) {\n        if(str[i] == '\\n') {\n          break;\n        }\n      }\n    }\n\n    function parseString(delim) {\n      style = 'string';\n      pushState(delim);\n      while(i < n) {\n        c = str[i++];\n        if(c == '\\n') {\n          style = 'error';\n          continue;\n        }\n        if(c == '\\\\') {\n          if(i >= n) break;\n          i++;\n        } else if(c == delim) {\n          popState();\n          break;\n        }\n      }\n    }\n\n    function parseRegex() {\n      style = 'regex';\n      pushState('/');\n      while(i < n) {\n        c = str[i++];\n        if(c == '\\n') {\n          style = 'error';\n          continue;\n        }\n        if(c == '\\\\') {\n          if(i < n) {\n            i++;\n          }\n          continue;\n        }\n        if(lastState() == '[') {\n          if(c == ']') {\n            popState();\n          }\n          // ECMA 5: ignore '/' inside char classes\n          continue;\n        }\n        if(c == '[') {\n          pushState('[');\n          if(str[i] == '[' || str[i] == ']') i++;\n          continue;\n        }\n        if(c == '/') {\n          popState();\n          while(i < n && isWord(str[i])) i++;\n          break;\n        }\n      }\n    }\n\n    function parseNumber() {\n      style = 'number';\n      while(i < n && (isWord(str[i]) || (str[i] == '.' && (i == n - 1 || str[i + 1] != '.')))) {\n        i++;\n      }\n    }\n\n    var js_keywords =\n      '|' +\n      'break|case|catch|continue|debugger|default|delete|do|' +\n      'else|finally|for|function|if|in|instanceof|new|' +\n      'return|switch|this|throw|try|typeof|while|with|' +\n      'class|const|enum|import|export|extends|super|' +\n      'implements|interface|let|package|private|protected|' +\n      'public|static|yield|' +\n      'undefined|null|true|false|Infinity|NaN|' +\n      'eval|arguments|' +\n      'await|';\n\n    var js_no_regex = '|this|super|undefined|null|true|false|Infinity|NaN|arguments|';\n    var js_types = '|void|var|';\n\n    function parseIdentifier() {\n      can_regex = 1;\n\n      while(i < n && isWord(str[i])) i++;\n\n      var w = '|' + str.substring(start, i) + '|';\n\n      if(js_keywords.indexOf(w) >= 0) {\n        style = 'keyword';\n        if(js_no_regex.indexOf(w) >= 0) can_regex = 0;\n        return;\n      }\n\n      var i1 = i;\n      while(i1 < n && str[i1] == ' ') i1++;\n\n      if(i1 < n && str[i1] == '(') {\n        style = 'function';\n        return;\n      }\n\n      if(js_types.indexOf(w) >= 0) {\n        style = 'type';\n        return;\n      }\n\n      style = 'identifier';\n      can_regex = 0;\n    }\n\n    function setStyle(from, to) {\n      while(r.length < from) r.push('default');\n      while(r.length < to) r.push(style);\n    }\n\n    for(i = 0; i < n; ) {\n      style = null;\n      start = i;\n      switch ((c = str[i++])) {\n        case ' ':\n        case '\\t':\n        case '\\r':\n        case '\\n':\n          continue;\n        case '+':\n        case '-':\n          if(i < n && str[i] == c) {\n            i++;\n            continue;\n          }\n          can_regex = 1;\n          continue;\n        case '/':\n          if(i < n && str[i] == '*') {\n            // block comment\n            parseBlockComment();\n            break;\n          }\n          if(i < n && str[i] == '/') {\n            // line comment\n            parseLineComment();\n            break;\n          }\n          if(can_regex) {\n            parseRegex();\n            can_regex = 0;\n            break;\n          }\n          can_regex = 1;\n          continue;\n        case \"'\":\n        case '\"':\n        case '`':\n          parseString(c);\n          can_regex = 0;\n          break;\n        case '(':\n        case '[':\n        case '{':\n          can_regex = 1;\n          level++;\n          pushState(c);\n          continue;\n        case ')':\n        case ']':\n        case '}':\n          can_regex = 0;\n          if(level > 0 && isBalanced(lastState(), c)) {\n            level--;\n            popState();\n            continue;\n          }\n          style = 'error';\n          break;\n        default:\n          if(isDigit(c)) {\n            parseNumber();\n            can_regex = 0;\n            break;\n          }\n          if(isWord(c) || c == '$') {\n            parseIdentifier();\n            break;\n          }\n          can_regex = 1;\n          continue;\n      }\n      if(style) setStyle(start, i);\n    }\n    setStyle(n, n);\n    return [state, level, r];\n  }\n\n  completion() {\n    var tab,\n      res,\n      s,\n      i,\n      j,\n      len,\n      t,\n      max_width,\n      col,\n      n_cols,\n      row,\n      n_rows = null;\n    res = this.getCompletions(this.cmd, this.cursorPos);\n    tab = res.tab;\n    if(tab.length === 0) return;\n    s = tab[0];\n    len = s.length;\n    /* add the chars which are identical in all the completions */\n    for(i = 1; i < tab.length; i++) {\n      t = tab[i];\n      for(j = 0; j < len; j++) {\n        if(t[j] !== s[j]) {\n          len = j;\n          break;\n        }\n      }\n    }\n    for(i = res.pos; i < len; i++) {\n      this.insert(s[i]);\n    }\n    if(this.lastFun === this.completion && tab.length == 1) {\n      /* append parentheses to function names */\n      var m = res.ctx[tab[0]];\n      if(typeof m == 'function') {\n        this.insert('(');\n        if(m.length == 0) this.insert(')');\n      } else if(typeof m == 'object') {\n        this.insert('.');\n      }\n    }\n    /* show the possible completions */\n    if(this.lastFun === this.completion && tab.length >= 2) {\n      max_width = 0;\n      for(i = 0; i < tab.length; i++) max_width = Math.max(max_width, tab[i].length);\n      max_width += 2;\n      n_cols = Math.max(1, Math.floor((this.columns + 1) / max_width));\n      n_rows = Math.ceil(tab.length / n_cols);\n      std.puts('\\n');\n      /* display the sorted list column-wise */\n      for(row = 0; row < n_rows; row++) {\n        for(col = 0; col < n_cols; col++) {\n          i = col * n_rows + row;\n          if(i >= tab.length) break;\n          s = tab[i];\n          if(col != n_cols - 1) s = s.padEnd(max_width);\n          std.puts(s);\n        }\n        std.puts('\\n');\n      }\n      /* show a new this.prompt */\n      this.readlinePrintPrompt();\n    }\n  }\n\n  controlC() {\n    std.puts('\\x1b[12i');\n    if(this.lastFun === this.controlC) {\n      std.puts('\\n');\n      if(typeof this.cleanup == 'function') this.cleanup();\n      std.exit(0);\n    } else {\n      std.puts('\\n(Press Ctrl-C again to quit)\\n');\n      this.readlinePrintPrompt();\n    }\n  }\n\n  controlD() {\n    if(this.cmd.length == 0) {\n      std.puts('\\n');\n      return -3; /* exit read eval this.print loop */\n    } else {\n      this.deleteCharDir(1);\n    }\n  }\n\n  deleteChar() {\n    this.deleteCharDir(1);\n  }\n\n  deleteCharDir(dir) {\n    var start,\n      end = null;\n\n    start = this.cursorPos;\n    if(dir < 0) {\n      start--;\n      while(isTrailingSurrogate(this.cmd.charAt(start))) start--;\n    }\n    end = start + 1;\n    while(isTrailingSurrogate(this.cmd.charAt(end))) end++;\n\n    if(start >= 0 && start < this.cmd.length) {\n      if(this.lastFun === this.killRegion) {\n        this.killRegion(start, end, dir);\n      } else {\n        this.cmd = this.cmd.substring(0, start) + this.cmd.substring(end);\n        this.cursorPos = start;\n      }\n    }\n  }\n\n  downcaseWord() {\n    var end = this.skipWordForward(this.cursorPos);\n    this.cmd =\n      this.cmd.substring(0, this.cursorPos) +\n      this.cmd.substring(this.cursorPos, end).toLowerCase() +\n      this.cmd.substring(end);\n  }\n\n  dupstr(str, count) {\n    var res = '';\n    while(count-- > 0) res += str;\n    return res;\n  }\n\n  endOfLine() {\n    this.cursorPos = this.cmd.length;\n  }\n\n  readlineRemovePrompt() {\n    printCsi(1, 'K');\n    printCsi(1, 'G');\n  }\n\n  evalAndPrint(expr) {\n    var result = null;\n    const inspectOptions = /*console.options || */ {\n      customInspect: true,\n      compact: 1,\n      depth: 10,\n      hideKeys: ['loc', 'range']\n    };\n    try {\n      if(eval_mode === 'math') expr = '\"use math\"; void 0;' + expr;\n      var now = new Date().getTime();\n      /* eval as a script */\n      result = std.evalScript(expr, { backtrace_barrier: true });\n      this.evalTime = new Date().getTime() - now;\n      //console.log('this.show', this.show);\n      (this.show || this.printStatus).call(this, result);\n      //      (this.show || this.printStatus).call(this, colors[styles.result] + (typeof result == 'string' ? result : inspect(result, inspectOptions)) + colors.none, false);\n      /* set the last result */\n      globalThis._ = result;\n    } catch(error) {\n      let output = '';\n      globalThis.lastError = error;\n      output += colors[styles.error_msg];\n      if(error instanceof Error) {\n        output += 'Error: ';\n\n        output += error.message;\n\n        if(error.stack) output += error.stack;\n      } else {\n        output += 'Throw: ';\n\n        if(error?.message) output += error.message;\n        else output += inspect(error, { colors: false });\n      }\n      output = output.trimEnd();\n\n      output += colors.none;\n      output += '\\n';\n      //console.log('output', { output }, this.show+'');\n      (this.show || this.printStatus).call(this, output);\n    }\n  }\n\n  extractDirective(a) {\n    var pos = null;\n    if(a[0] !== '\\\\') return '';\n    for(pos = 1; pos < a.length; pos++) {\n      if(!isAlpha(a[pos])) break;\n    }\n    return a.substring(1, pos);\n  }\n\n  forwardChar() {\n    if(this.cursorPos < this.cmd.length) {\n      this.cursorPos++;\n      while(isTrailingSurrogate(this.cmd.charAt(this.cursorPos))) this.cursorPos++;\n    }\n  }\n\n  forwardWord() {\n    this.cursorPos = this.skipWordForward(this.cursorPos);\n  }\n\n  getCompletions(line, pos) {\n    var s,\n      obj,\n      ctx_obj,\n      r,\n      i,\n      j,\n      paren = null;\n\n    s = this.getContextWord(line, pos);\n    ctx_obj = this.getContextObject(line, pos - s.length);\n    r = [];\n    /* enumerate properties from object and its prototype chain,\n           add non-numeric regular properties with s as e prefix\n         */\n    for(i = 0, obj = ctx_obj; i < 10 && obj !== null && obj !== void 0; i++) {\n      var props = Object.getOwnPropertyNames(obj);\n      /* add non-numeric regular properties */\n      for(j = 0; j < props.length; j++) {\n        var prop = props[j];\n        if(typeof prop == 'string' && '' + +prop != prop && prop.startsWith(s)) r.push(prop);\n      }\n      obj = Object.getPrototypeOf(obj);\n    }\n    if(r.length > 1) {\n      /* sort list with internal names last and remove duplicates */\n      function symcmp(a, b) {\n        if(a[0] != b[0]) {\n          if(a[0] == '_') return 1;\n          if(b[0] == '_') return -1;\n        }\n        if(a < b) return -1;\n        if(a > b) return +1;\n        return 0;\n      }\n      r.sort(this.symcmp);\n      for(i = j = 1; i < r.length; i++) {\n        if(r[i] != r[i - 1]) r[j++] = r[i];\n      }\n      r.length = j;\n    }\n    /* 'tab' = list of completions, 'pos' = cursor position inside\n           the completions */\n    return { tab: r, pos: s.length, ctx: ctx_obj };\n  }\n\n  getContextObject(line, pos) {\n    var obj,\n      base,\n      c = null;\n    if(pos <= 0 || ' ~!%^&*(-+={[|:;,<>?/'.indexOf(line[pos - 1]) >= 0) return globalThis;\n    if(pos >= 2 && line[pos - 1] === '.') {\n      pos--;\n      obj = {};\n      switch ((c = line[pos - 1])) {\n        case \"'\":\n        case '\"':\n          return 'a';\n        case ']':\n          return [];\n        case '}':\n          return {};\n        case '/':\n          return / /;\n        default:\n          if(isWord(c)) {\n            base = this.getContextWord(line, pos);\n            if(['true', 'false', 'null', 'this'].includes(base) || !isNaN(+base)) return eval(base);\n            obj = this.getContextObject(line, pos - base.length);\n            if(obj === null || obj === void 0) return obj;\n            if(obj === globalThis && obj[base] === void 0) return eval(base);\n            else return obj[base];\n          }\n          return {};\n      }\n    }\n    return void 0;\n  }\n\n  getContextWord(line, pos) {\n    var s = '';\n    while(pos > 0 && isWord(line[pos - 1])) {\n      pos--;\n      s = line[pos] + s;\n    }\n    return s;\n  }\n\n  handleByte(c) {\n    if(!this.utf8) {\n      this.handleChar(c);\n    } else if(utf8_state !== 0 && c >= 0x80 && c < 0xc0) {\n      utf8_val = (utf8_val << 6) | (c & 0x3f);\n      utf8_state--;\n      if(utf8_state === 0) {\n        this.handleChar(utf8_val);\n      }\n    } else if(c >= 0xc0 && c < 0xf8) {\n      utf8_state = 1 + (c >= 0xe0) + (c >= 0xf0);\n      utf8_val = c & ((1 << (6 - utf8_state)) - 1);\n    } else {\n      utf8_state = 0;\n      this.handleChar(c);\n    }\n  }\n\n  handleChar(c1) {\n    var c = null;\n    c = String.fromCodePoint(c1);\n    for(;;) {\n      switch (readline_state) {\n        case 0:\n          if(c == '\\x1b') {\n            /* '^[' - ESC */\n            readline_keys = c;\n            readline_state = 1;\n          } else {\n            this.handleKey(c);\n          }\n          break;\n\n        case 1 /* '^[ */:\n          readline_keys += c;\n          if(c == '[') {\n            readline_state = 2;\n          } else if(c == 'O') {\n            readline_state = 3;\n          } else {\n            this.handleKey(readline_keys);\n            readline_state = 0;\n          }\n          break;\n\n        case 2 /* '^[[' - CSI */:\n          readline_keys += c;\n          if(c == '<') {\n            readline_state = 4;\n          } else if(!(c == ';' || (c >= '0' && c <= '9'))) {\n            this.handleKey(readline_keys);\n            readline_state = 0;\n          }\n          break;\n\n        case 3 /* '^[O' - ESC2 */:\n          readline_keys += c;\n          this.handleKey(readline_keys);\n          readline_state = 0;\n          break;\n\n        case 4:\n          if(!(c == ';' || (c >= '0' && c <= '9') || c == 'M' || c == 'm')) {\n            this.handleMouse(readline_keys);\n            readline_state = 0;\n            readline_keys = '';\n            continue;\n          } else {\n            readline_keys += c;\n          }\n          break;\n      }\n      break;\n    }\n  }\n\n  handleMouse(keys) {\n    this.debug('handleMouse', { keys });\n\n    const [button, x, y, cmd] = [...keys.matchAll(/([0-9]+|[A-Za-z]+)/g)]\n      .map(p => p[1])\n      .map(p => (!isNaN(+p) ? +p : p));\n    let press = cmd == 'm';\n\n    this.debug('handleMouse', { button, x, y, press });\n  }\n\n  handleCmd(expr) {\n    var colorstate,\n      cmd = null;\n\n    if(expr === null) {\n      expr = '';\n      return;\n    }\n    if(expr === '?') {\n      this.help();\n      return;\n    }\n    cmd = this.extractDirective(expr);\n    if(cmd.length > 0) {\n      if(!this.handleDirective(cmd, expr)) return;\n      expr = expr.substring(cmd.length + 1);\n    }\n    if(expr === '') return;\n\n    if(this.mexpr) expr = this.mexpr + '\\n' + expr;\n    colorstate = this.colorizeJs(expr);\n    this.pstate = colorstate[0];\n    this.level = colorstate[1];\n    if(this.pstate) {\n      this.mexpr = expr;\n      return;\n    }\n    this.mexpr = '';\n\n    if(has_bignum) {\n      BigFloatEnv.setPrec(this.evalAndPrint.bind(this, expr), prec, expBits);\n    } else {\n      this.evalAndPrint(expr);\n    }\n    this.level = 0;\n\n    /* run the garbage collector after each command */\n    std.gc();\n  }\n\n  handleDirective(cmd, expr) {\n    var param,\n      prec1,\n      expBits1 = null;\n\n    if(this.cmd === 'h' || this.cmd === '?' || this.cmd == 'this.help') {\n      this.help();\n    } else if(this.cmd === 'load') {\n      var filename = expr.substring(cmd.length + 1).trim();\n      if(filename.lastIndexOf('.') <= filename.lastIndexOf('/')) filename += '.js';\n      std.loadScript(filename);\n      return false;\n    } else if(this.cmd === 'x') {\n      hex_mode = true;\n    } else if(this.cmd === 'd') {\n      hex_mode = false;\n    } else if(this.cmd === 't') {\n      this.showTime = !this.showTime;\n    } else if(has_bignum && this.cmd === 'p') {\n      param = expr\n        .substring(this.cmd.length + 1)\n        .trim()\n        .split(' ');\n      if(param.length === 1 && param[0] === '') {\n        std.puts(\n          'BigFloat precision=' +\n            prec +\n            ' bits (~' +\n            Math.floor(prec / log2_10) +\n            ' digits), exponent size=' +\n            expBits +\n            ' bits\\n'\n        );\n      } else if(param[0] === 'f16') {\n        prec = 11;\n        expBits = 5;\n      } else if(param[0] === 'f32') {\n        prec = 24;\n        expBits = 8;\n      } else if(param[0] === 'f64') {\n        prec = 53;\n        expBits = 11;\n      } else if(param[0] === 'f128') {\n        prec = 113;\n        expBits = 15;\n      } else {\n        prec1 = parseInt(param[0]);\n        if(param.length >= 2) expBits1 = parseInt(param[1]);\n        else expBits1 = BigFloatEnv.expBitsMax;\n        if(Number.isNaN(prec1) || prec1 < BigFloatEnv.precMin || prec1 > BigFloatEnv.precMax) {\n          std.puts('Invalid precision\\n');\n          return false;\n        }\n        if(Number.isNaN(expBits1) || expBits1 < BigFloatEnv.expBitsMin || expBits1 > BigFloatEnv.expBitsMax) {\n          std.puts('Invalid exponent bits\\n');\n          return false;\n        }\n        prec = prec1;\n        expBits = expBits1;\n      }\n      return false;\n    } else if(has_bignum && this.cmd === 'digits') {\n      param = expr.substring(this.cmd.length + 1).trim();\n      prec1 = Math.ceil(parseFloat(param) * log2_10);\n      if(prec1 < BigFloatEnv.precMin || prec1 > BigFloatEnv.precMax) {\n        std.puts('Invalid precision\\n');\n        return false;\n      }\n      prec = prec1;\n      expBits = BigFloatEnv.expBitsMax;\n      return false;\n    } else if(has_bignum && this.cmd === 'mode') {\n      param = expr.substring(this.cmd.length + 1).trim();\n      if(param === '') {\n        std.puts('Running mode=' + eval_mode + '\\n');\n      } else if(param === 'std' || param === 'math') {\n        eval_mode = param;\n      } else {\n        std.puts('Invalid mode\\n');\n      }\n      return false;\n    } else if(this.cmd === 'clear') {\n      std.puts('\\x1b[H\\x1b[J');\n    } else if(this.cmd === 'q') {\n      std.exit(0);\n    } else if(has_jscalc && this.cmd === 'a') {\n      algebraicMode = true;\n    } else if(has_jscalc && this.cmd === 'n') {\n      algebraicMode = false;\n    } else {\n      std.puts('Unknown directive: ' + this.cmd + '\\n');\n      return false;\n    }\n    return true;\n  }\n\n  handleKey(keys) {\n    var fun = null;\n\n    if(this.quoteFlag) {\n      if(ucsLength(keys) === 1) this.insert(keys);\n      this.quoteFlag = false;\n    } else if((fun = this.commands[keys])) {\n      this.thisFun = fun;\n      switch (fun.call(this, keys)) {\n        case -1:\n          readline_cb.call(this, this.cmd);\n          return;\n        case -2:\n          readline_cb.call(this, null);\n          return;\n        case -3:\n          /* uninstall a Ctrl-C signal handler */\n          os.signal(os.SIGINT, null);\n          /* uninstall the stdin read handler */\n          os.setReadHandler(term_fd, null);\n\n          this.exit(0);\n          return;\n        default:\n          if(\n            search &&\n            [\n              this.acceptLine,\n              this.backwardChar,\n              this.backwardDeleteChar,\n              this.backwardKillLine,\n              this.backwardKillWord,\n              this.backwardWord,\n              this.beginningOfLine,\n              this.deleteChar,\n              this.forwardChar,\n              this.forwardWord,\n              this.killLine,\n              this.killWord\n            ].indexOf(fun) == -1\n          ) {\n            const histcmd = history[search_index];\n\n            //readline_cb = this.readlineHandleCmd;\n            search = 0;\n            //this.cmd = histcmd;\n            std.puts(`\\x1b[1G`);\n            std.puts(`\\x1b[J`);\n            this.cursorPos = histcmd.length;\n            this.readlineStart(histcmd, this.readlineHandleCmd);\n            this.update();\n            return;\n          }\n          break;\n      }\n      this.lastFun = this.thisFun;\n    } else if(ucsLength(keys) === 1 && keys >= ' ') {\n      this.insert(keys);\n      this.lastFun = this.insert;\n    } else {\n      this.alert(); /* beep! */\n    }\n\n    this.cursorPos = this.cursorPos < 0 ? 0 : this.cursorPos > this.cmd.length ? this.cmd.length : this.cursorPos;\n    this.update();\n  }\n\n  help() {\n    function sel(n) {\n      return n ? '*' : ' ';\n    }\n    std.puts(\n      '\\\\h          this this.help\\n' +\n        '\\\\x         ' +\n        this.sel(hex_mode) +\n        'hexadecimal number display\\n' +\n        '\\\\d         ' +\n        this.sel(!hex_mode) +\n        'decimal number display\\n' +\n        '\\\\t         ' +\n        this.sel(this.showTime) +\n        'toggle timing display\\n' +\n        '\\\\clear      clear the terminal\\n'\n    );\n    if(has_jscalc) {\n      std.puts(\n        '\\\\a         ' +\n          this.sel(algebraicMode) +\n          'algebraic mode\\n' +\n          '\\\\n         ' +\n          this.sel(!algebraicMode) +\n          'numeric mode\\n'\n      );\n    }\n    if(has_bignum) {\n      std.puts(\n        \"\\\\p [m [e]]  set the BigFloat precision to 'm' bits\\n\" +\n          \"\\\\digits n   set the BigFloat precision to 'ceil(n*log2(10))' bits\\n\"\n      );\n      if(!has_jscalc) {\n        std.puts('\\\\mode [std|math] change the running mode (current = ' + eval_mode + ')\\n');\n      }\n    }\n    if(!config_numcalc) {\n      std.puts('\\\\q          exit\\n');\n    }\n  }\n\n  historyFile() {\n    const { argv } = process;\n    let me = argv[1] ?? argv[0];\n    let base = path.basename(me, path.extname(me));\n    let home = path.gethome();\n    return `${home}/.${base}_history`;\n  }\n\n  historyLoad(filename, fail = true) {\n    filename ??= this.historyFile();\n    if(filename && this.fs) {\n      const data = this.fs.readFileSync(filename, 'utf-8');\n      if(typeof data == 'string') {\n        const lines = data.split(/\\n/g);\n        history.splice(0, history.length, ...lines);\n        return (this.historyIndex = history.length);\n      }\n    }\n  }\n\n  historySave(filename) {\n    filename ??= this.historyFile();\n    if(filename && this.fs) {\n      const lines = history.filter(line => (line + '').trim() != '').map(line => line.replace(/\\n/g, '\\\\n'));\n      const data = lines.join('\\n') + '\\n';\n      let r = this.fs.writeFileSync(filename, data);\n      return lines.length;\n    }\n  }\n\n  historyClear() {\n    history.splice(0, history.length);\n    this.historyIndex = history.length;\n  }\n\n  historyAdd(str) {\n    const last = history[history.length - 1];\n\n    if(str && str !== last) history.push(str);\n\n    return (this.historyIndex = history.length);\n  }\n\n  historySearch(dir) {\n    var pos = this.cursorPos;\n    for(var i = 1; i <= history.length; i++) {\n      var index = (history.length + i * dir + this.historyIndex) % history.length;\n      if(history[index].substring(0, pos) == this.cmd.substring(0, pos)) {\n        this.historyIndex = index;\n        this.cmd = history[index];\n        return;\n      }\n    }\n  }\n\n  historySearchBackward() {\n    return this.historySearch(-1);\n  }\n\n  historySearchForward() {\n    return this.historySearch(1);\n  }\n\n  set history(entries) {\n    if(entries) history.splice(0, history.length, ...entries);\n  }\n\n  get history() {\n    return history;\n  }\n\n  historyPos() {\n    return historyIndex;\n  }\n\n  insert(str) {\n    if(str) {\n      this.cmd = this.cmd.substring(0, this.cursorPos) + str + this.cmd.substring(this.cursorPos);\n      this.cursorPos += str.length;\n    }\n  }\n\n  killLine() {\n    this.killRegion(this.cursorPos, this.cmd.length, 1);\n  }\n\n  killRegion(start, end, dir) {\n    var s = this.cmd.substring(start, end);\n    if(this.lastFun !== this.killRegion) clip_board = s;\n    else if(dir < 0) clip_board = s + clip_board;\n    else clip_board = clip_board + s;\n\n    this.cmd = this.cmd.substring(0, start) + this.cmd.substring(end);\n    if(this.cursorPos > end) this.cursorPos -= end - start;\n    else if(this.cursorPos > start) this.cursorPos = start;\n    this.thisFun = this.killRegion;\n  }\n\n  killWord() {\n    this.killRegion(this.cursorPos, this.skipWordForward(this.cursorPos), 1);\n  }\n\n  moveCursor(delta) {\n    var i,\n      l = null;\n    if(delta > 0) {\n      while(delta != 0) {\n        if(term_cursor_x == this.columns - 1) {\n          std.puts('\\n'); /* translated to CRLF */\n          term_cursor_x = 0;\n          delta--;\n        } else {\n          l = Math.min(this.columns - 1 - term_cursor_x, delta);\n          printCsi(l, 'C'); /* right */\n          delta -= l;\n          term_cursor_x += l;\n        }\n      }\n    } else {\n      delta = -delta;\n      while(delta != 0) {\n        if(term_cursor_x == 0) {\n          printCsi(1, 'A'); /* up */\n          printCsi(this.columns - 1, 'C'); /* right */\n          delta--;\n          term_cursor_x = this.columns - 1;\n        } else {\n          l = Math.min(delta, term_cursor_x);\n          printCsi(l, 'D'); /* left */\n          delta -= l;\n          term_cursor_x -= l;\n        }\n      }\n    }\n  }\n\n  nextHistory() {\n    if(this.historyIndex < history.length - 1) {\n      this.historyIndex++;\n      this.cmd = history[this.historyIndex];\n      this.cursorPos = this.cmd.length;\n    }\n  }\n\n  numberToString(a, radix) {\n    var s = null;\n    if(!isFinite(a)) {\n      /* NaN, Infinite */\n      return a.toString();\n    } else {\n      if(a == 0) {\n        if(1 / a < 0) s = '-0';\n        else s = '0';\n      } else {\n        if(radix == 16 && a === Math.floor(a)) {\n          var s = null;\n          if(a < 0) {\n            a = -a;\n            s = '-';\n          } else {\n            s = '';\n          }\n          s += '0x' + a.toString(16);\n        } else {\n          s = a.toString();\n        }\n      }\n      return s;\n    }\n  }\n\n  previousHistory() {\n    if(this.historyIndex > 0) {\n      if(this.historyIndex == history.length) {\n        history.push(this.cmd);\n      }\n      this.historyIndex--;\n      this.cmd = history[this.historyIndex];\n      this.cursorPos = this.cmd.length;\n    }\n  }\n\n  print(a) {\n    var stack = [];\n\n    function printRec(a) {\n      var n,\n        i,\n        keys,\n        key,\n        type,\n        s = null;\n\n      type = typeof a;\n      if(type === 'object') {\n        if(a === null) {\n          std.puts(a);\n        } else if(stack.indexOf(a) >= 0) {\n          std.puts('[circular]');\n        } else if(\n          has_jscalc &&\n          (a instanceof Fraction ||\n            a instanceof Complex ||\n            a instanceof Mod ||\n            a instanceof Polynomial ||\n            a instanceof PolyMod ||\n            a instanceof RationalFunction ||\n            a instanceof Series)\n        ) {\n          std.puts(a.toString());\n        } else {\n          stack.push(a);\n          if(Array.isArray(a)) {\n            n = a.length;\n            std.puts('[ ');\n            for(i = 0; i < n; i++) {\n              if(i !== 0) std.puts(', ');\n              if(i in a) {\n                this.printRec(a[i]);\n              } else {\n                std.puts('<empty>');\n              }\n              if(i > 20) {\n                std.puts('...');\n                break;\n              }\n            }\n            std.puts(' ]');\n          } else if(Object.__getClass(a) === 'RegExp') {\n            std.puts(a.toString());\n          } else {\n            keys = Object.keys(a);\n            n = keys.length;\n            std.puts('{ ');\n            for(i = 0; i < n; i++) {\n              if(i !== 0) std.puts(', ');\n              key = keys[i];\n              std.puts(key, ': ');\n              this.printRec(a[key]);\n            }\n            std.puts(' }');\n          }\n          stack.pop(a);\n        }\n      } else if(type === 'string') {\n        s = a.__quote();\n        if(s.length > 79) s = s.substring(0, 75) + '...\"';\n        std.puts(s);\n      } else if(type === 'number') {\n        std.puts(this.numberToString(a, hex_mode ? 16 : 10));\n      } else if(type === 'bigint') {\n        std.puts(this.bigintToString(a, hex_mode ? 16 : 10));\n      } else if(type === 'bigfloat') {\n        std.puts(this.bigfloatToString(a, hex_mode ? 16 : 10));\n      } else if(type === 'bigdecimal') {\n        std.puts(a.toString() + 'm');\n      } else if(type === 'symbol') {\n        std.puts(String(a));\n      } else if(type === 'function') {\n        std.puts('function ' + a.name + '()');\n      } else {\n        std.puts(a);\n      }\n    }\n    this.printRec(a);\n  }\n\n  printStatus(fn, prompt = true) {\n    const show = arg => this.out.puts(arg);\n\n    if(Array.isArray(fn)) {\n      const arr = fn;\n      fn = arr.join('');\n    } else if(typeof fn != 'function') {\n      let str = fn + '';\n      if(!str.endsWith('\\n')) str += '\\n';\n      fn = () => show(str);\n    }\n    this.readlineRemovePrompt();\n    printCsi(1, 'J');\n    printCsi(1, 'G');\n    fn();\n    if(prompt) {\n      printCsi(1, 'J');\n      this.readlinePrintPrompt();\n      this.out.flush();\n    }\n  }\n\n  printFunction(logFn) {\n    return (...args) => this.printStatus(() => logFn(...args));\n  }\n\n  quotedInsert() {\n    this.quoteFlag = true;\n  }\n\n  reverseSearch() {\n    if(search == 0) this.cmd = '';\n    search--;\n    readline_cb = this.searchCb;\n\n    //    this.debug('reverseSearch', { search, term_cursor_x });\n    console.log('reverseSearch', this.searchCb);\n    console.log('reverseSearch', this.update);\n\n    try {\n      this.update();\n    } catch(error) {\n      console.log('ERROR:', error.message + '\\n' + error.stack);\n    }\n    return -2;\n  }\n\n  forwardSearch() {\n    if(search == 0) this.cmd = '';\n    search++;\n    readline_cb = this.searchCb;\n    //this.debug('forwardSearch', { search, term_cursor_x });\n    this.update();\n    return -2;\n  }\n\n  searchCb(pattern) {\n    if(pattern !== null) {\n      const histcmd = history[search_index];\n      //this.debug('searchCb', { pattern, histcmd,cmd }, history.slice(-2));\n      search = 0;\n      readline_cb = this.readlineHandleCmd;\n      this.cmd = '';\n      this.readlineHandleCmd(histcmd ?? '');\n\n      this.update();\n    }\n  }\n\n  readlineHandleCmd(expr) {\n    this.handleCmd(expr);\n    this.cmdReadlineStart();\n  }\n\n  readlinePrintPrompt() {\n    std.puts(this.prompt);\n    term_cursor_x = ucsLength(this.prompt) % this.columns;\n    this.lastCmd = '';\n    this.lastCursorPos = 0;\n  }\n\n  readlineStart(defstr, cb) {\n    this.cmd = defstr || '';\n    this.cursorPos = this.cmd.length;\n    this.historyIndex = history.length;\n    readline_cb = cb;\n\n    this.prompt = this.pstate;\n\n    if(this.mexpr) {\n      this.prompt += this.dupstr(' ', this.plen - this.prompt.length);\n      this.prompt += this.ps2;\n    } else {\n      if(this.showTime) {\n        var t = Math.round(this.evalTime) + ' ';\n        this.evalTime = 0;\n        t = this.dupstr('0', 5 - t.length) + t;\n        this.prompt += t.substring(0, t.length - 4) + '.' + t.substring(t.length - 4);\n      }\n      this.plen = this.prompt.length;\n      this.prompt += this.ps1;\n    }\n    this.readlinePrintPrompt();\n    this.update();\n    readline_state = 0;\n  }\n\n  reset() {\n    this.cmd = '';\n    this.cursorPos = 0;\n  }\n\n  async run() {\n    this.debug('run');\n    if(!console.options) console.options = {};\n    await this.termInit();\n    this.cmdStart(true);\n    this.running = true;\n    do {\n      await this.fs.waitRead(term_fd);\n      await this.termReadHandler();\n    } while(this.running);\n  }\n\n  runSync() {\n    //this.cmdStart(name);\n    const fd = std.in.fileno();\n\n    os.setReadHandler(fd, () => this.termReadHandler());\n    this.addCleanupHandler(() => os.setReadHandler(fd, null));\n    return this;\n  }\n\n  sigintHandler() {\n    /* send Ctrl-C to readline */\n    this.handleByte(3);\n  }\n\n  skipWordBackward(pos) {\n    while(pos > 0 && !isWord(this.cmd.charAt(pos - 1))) pos--;\n    while(pos > 0 && isWord(this.cmd.charAt(pos - 1))) pos--;\n    return pos;\n  }\n\n  skipWordForward(pos) {\n    while(pos < this.cmd.length && !isWord(this.cmd.charAt(pos))) pos++;\n    while(pos < this.cmd.length && isWord(this.cmd.charAt(pos))) pos++;\n    return pos;\n  }\n\n  termInit() {\n    var tab = null;\n    term_fd = std.in.fileno();\n\n    /* get the terminal size */\n    this.columns = 80;\n    if(os.isatty(term_fd)) {\n      if(os.ttyGetWinSize) {\n        tab = os.ttyGetWinSize(term_fd);\n        if(tab) this.columns = tab[0];\n      }\n      /* set the TTY to raw mode */\n      tty_set_raw(term_fd);\n    }\n\n    /* install a Ctrl-C signal handler */\n    os.signal(os.SIGINT, arg => this.sigintHandler(arg));\n\n    /* install a handler to read stdin */\n    term_read_buf = new Uint8Array(64);\n    os.setReadHandler(term_fd, () => this.termReadHandler());\n  }\n\n  mouseTracking(enable = true) {\n    enable ? Terminal.mousetrackingEnable() : Terminal.mousetrackingDisable();\n  }\n\n  setupMouseTracking(fs = this.fs) {\n    if(this.fs) {\n      this.mouseTracking(true);\n\n      this.addCleanupHandler(() => {\n        this.mouseTracking(false);\n        console.log('Mouse tracking disabled');\n      });\n    }\n  }\n\n  termReadHandler() {\n    var l,\n      i = null;\n    l = os.read(term_fd, term_read_buf.buffer, 0, term_read_buf.length);\n    for(i = 0; i < l; i++) this.handleByte(term_read_buf[i]);\n  }\n\n  transposeChars() {\n    var pos = this.cursorPos;\n    if(this.cmd.length > 1 && pos > 0) {\n      if(pos == this.cmd.length) pos--;\n      this.cmd =\n        this.cmd.substring(0, pos - 1) +\n        this.cmd.substring(pos, pos + 1) +\n        this.cmd.substring(pos - 1, pos) +\n        this.cmd.substring(pos + 1);\n      this.cursorPos = pos + 1;\n    }\n  }\n\n  transposeWords() {\n    var p1 = this.skipWordBackward(this.cursorPos);\n    var p2 = this.skipWordForward(p1);\n    var p4 = this.skipWordForward(this.cursorPos);\n    var p3 = this.skipWordBackward(p4);\n\n    if(p1 < p2 && p2 <= this.cursorPos && this.cursorPos <= p3 && p3 < p4) {\n      this.cmd =\n        this.cmd.substring(0, p1) +\n        this.cmd.substring(p3, p4) +\n        this.cmd.substring(p2, p3) +\n        this.cmd.substring(p1, p2);\n      this.cursorPos = p4;\n    }\n  }\n\n  upcaseWord() {\n    var end = this.skipWordForward(this.cursorPos);\n    this.cmd =\n      this.cmd.substring(0, this.cursorPos) +\n      this.cmd.substring(this.cursorPos, end).toUpperCase() +\n      this.cmd.substring(end);\n  }\n\n  update() {\n    var i,\n      cmd_len = null,\n      cmd_line = this.cmd,\n      colorize = this.showColors;\n\n    if(search) {\n      const re = new RegExp((search_pattern = cmd_line.replace(/([\\(\\)\\?\\+\\*])/g, '.' /*'\\\\$1'*/)), 'i');\n      const num = search > 0 ? search - 1 : search;\n      //search_index = history.findLastIndex(c => re.test(c) && --num == 0);\n      let historySearch = rotateLeft([...history.entries()], this.historyIndex);\n\n      search_matches.splice(0, search_matches.length, ...historySearch.filter(([i, c]) => re.test(c)));\n\n      //num = search > 0 ? search - 1 : search;\n      const match = search_matches[num < 0 ? search_matches.length + num : num];\n      // -----------*/ onsole.log(\"search_matches\", search_matches.length, num, match);\n\n      const [histidx = -1, histcmd = ''] = match || [];\n      const histdir = search > 0 ? 'forward' : 'reverse';\n      const histpos = search < 0 ? historySearch.indexOf(match) - historySearch.length : historySearch.indexOf(match);\n      search_index = histidx;\n      let line_start = `(${histdir}-search[${histpos}])\\``;\n      cmd_line = `${line_start}${this.cmd}': ${histcmd}`;\n      colorize = false;\n      const start = cmd_line.length - histcmd.length - 3 - this.cmd.length + this.cursorPos;\n      let r = cmd_line.substring(start);\n\n      std.puts(`\\x1b[1G`);\n      std.puts(cmd_line);\n      std.puts('\\x1b[J');\n      this.lastCmd = cmd_line;\n      term_cursor_x = start;\n      this.lastCursorPos = this.cursorPos;\n      let nback = ucsLength(r);\n      std.out.flush();\n      if(isNaN(nback)) throw new Error(`update nback=${nback}`);\n      std.puts(`\\x1b[${nback}D`);\n      //this.moveCursor(-ucsLength(r));\n      std.out.flush();\n      return;\n\n      /* this.cursorPos is the position in 16 bit characters inside the\n           UTF-16 string 'this.cmd' */\n    } else if(this.cmd != this.lastCmd) {\n      if(\n        !this.showColors &&\n        this.lastCmd.substring(0, this.lastCursorPos) == this.cmd.substring(0, this.lastCursorPos)\n      ) {\n        /* optimize common case */\n        std.puts(this.cmd.substring(this.lastCursorPos));\n      } else {\n        /* goto the start of the line */\n        this.moveCursor(-ucsLength(this.lastCmd.substring(0, this.lastCursorPos)));\n        if(this.showColors) {\n          var str = this.mexpr ? this.mexpr + '\\n' + this.cmd : this.cmd;\n          var start = str.length - this.cmd.length;\n          var colorstate = this.colorizeJs(str);\n          printColorText(str, start, colorstate[2]);\n        } else {\n          std.puts(this.cmd);\n        }\n      }\n      term_cursor_x = (term_cursor_x + ucsLength(this.cmd)) % this.columns;\n      if(term_cursor_x == 0) {\n        /* show the cursor on the next line */\n        std.puts(' \\x08');\n      }\n      /* remove the trailing characters */\n      std.puts('\\x1b[J');\n      this.lastCmd = this.cmd;\n      this.lastCursorPos = this.cmd.length;\n    }\n    if(this.cursorPos > this.lastCursorPos) {\n      this.moveCursor(ucsLength(this.cmd.substring(this.lastCursorPos, this.cursorPos)));\n    } else if(this.cursorPos < this.lastCursorPos) {\n      this.moveCursor(-ucsLength(this.cmd.substring(this.cursorPos, this.lastCursorPos)));\n    }\n    this.lastCursorPos = this.cursorPos;\n    this.out.flush();\n  }\n\n  yank() {\n    this.insert(clip_board);\n  }\n}\n\nfunction isAlpha(c) {\n  return typeof c === 'string' && ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'));\n}\n\nfunction isDigit(c) {\n  return typeof c === 'string' && c >= '0' && c <= '9';\n}\n\nfunction isWord(c) {\n  return typeof c === 'string' && (isAlpha(c) || isDigit(c) || c == '_' || c == '$');\n}\n\nfunction ucsLength(str) {\n  var len,\n    c,\n    i,\n    str_len = str.length;\n  len = 0;\n  /* we never count the trailing surrogate to have the\n       following property: ucsLength(str) =\n       ucsLength(str.substring(0, a)) + ucsLength(str.substring(a,\n       str.length)) for 0 <= a <= str.length */\n  for(i = 0; i < str_len; i++) {\n    c = str.charCodeAt(i);\n    if(c < 0xdc00 || c >= 0xe000) len++;\n  }\n  return len;\n}\n\nfunction rotateLeft(array, n) {\n  array.push(...array.splice(0, n));\n  return array;\n}\n\nfunction isTrailingSurrogate(c) {\n  var d = null;\n  if(typeof c !== 'string') return false;\n  d = c.codePointAt(0); /* can be NaN if empty string */\n  return d >= 0xdc00 && d < 0xe000;\n}\n\nfunction isBalanced(a, b) {\n  switch (a + b) {\n    case '()':\n    case '[]':\n    case '{}':\n      return true;\n  }\n  return false;\n}\n\nfunction printColorText(str, start, style_names) {\n  var i,\n    j = null;\n  for(j = start; j < str.length; ) {\n    var style = style_names[(i = j)];\n    while(++j < str.length && style_names[j] == style) continue;\n    std.puts(colors[styles[style] || 'default']);\n    std.puts(str.substring(i, j));\n    std.puts(colors['none']);\n  }\n}\n\nfunction printCsi(n, code) {\n  std.puts('\\x1b[' + (n != 1 ? n : '') + code);\n  std.out.flush();\n}\n\nREPL.prototype.printCsi = printCsi;\n\nexport default REPL;\n",
			"file": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/repl.js",
			"file_size": 49513,
			"file_write_time": 132774457952346523,
			"settings":
			{
				"buffer_size": 49517,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					172,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAIwwAAAAAAAArDAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAACsMAAAAAAAALQwAAAAAAAAAAAAAIwwAAAAAAAAlDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwwAAAAAAAArDAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs-inspect.c",
			"settings":
			{
				"buffer_size": 35300,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					22,
					1,
					"paste",
					null,
					"AgAAAP9rAAAAAAAACGwAAAAAAAAAAAAACGwAAAAAAAAIbAAAAAAAAAkAAABkZXB0aCAtIDE",
					"AQAAAAAAAAABAAAA/2sAAAAAAAAIbAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAVsAAAAAAAABmwAAAAAAAAAAAAABmwAAAAAAAAGbAAAAAAAAAMAAAArIDE",
					"AQAAAAAAAAABAAAACGwAAAAAAAAFbAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAEdyAAAAAAAASXIAAAAAAAAAAAAARHIAAAAAAABGcgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARHIAAAAAAABHcgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAAARsAAAAAAAABWwAAAAAAAAAAAAABWwAAAAAAAAGbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABGwAAAAAAAAEbAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAAZsAAAAAAAAB2wAAAAAAAAAAAAAB2wAAAAAAAAIbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABmwAAAAAAAAGbAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " 1*/"
					},
					"BAAAAAhsAAAAAAAACWwAAAAAAAAAAAAACWwAAAAAAAAKbAAAAAAAAAAAAAAKbAAAAAAAAAtsAAAAAAAAAAAAAAtsAAAAAAAADGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACGwAAAAAAAAIbAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					2,
					"left_delete",
					null,
					"AgAAAE1yAAAAAAAATXIAAAAAAAABAAAAKkxyAAAAAAAATHIAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAATnIAAAAAAABOcgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					2,
					"left_delete",
					null,
					"AgAAAFByAAAAAAAAUHIAAAAAAAABAAAAL09yAAAAAAAAT3IAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAUXIAAAAAAABRcgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					2,
					"left_delete",
					null,
					"AgAAAAVsAAAAAAAABWwAAAAAAAABAAAAKgRsAAAAAAAABGwAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAABmwAAAAAAAAGbAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					2,
					"left_delete",
					null,
					"AgAAAAlsAAAAAAAACWwAAAAAAAABAAAALwhsAAAAAAAACGwAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAACmwAAAAAAAAKbAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libarchive"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendGenerator.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/bc-socklen_t.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/stack.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/socklen_t.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fd_set.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/timeval.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/.clang-format",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/test-socklen_t.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/.prettierrc",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/bc-fd_set.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-fdset.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_location.js",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/usr/include/x86_64-linux-gnu/bits/syscall.h",
		"/usr/include/x86_64-linux-gnu/sys/syscall.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/libregexp.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_inspect.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_path.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_blob.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_qjsm.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Sources/plot-cv/quickjs/qjs-modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,-*/build/*,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs,*.c,*.h,*.js",
			"/home/roman/Sources/plot-cv/quickjs/modules,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"compact",
			"- 1",
			"history entr",
			"rote ",
			"readFileSync",
			"toString",
			" toString",
			"toString",
			"slice =",
			"toString",
			"reduce",
			"console.log",
			"BufferFILe",
			"'imp'",
			"'tmp",
			"\\.define",
			"filter",
			"AddExport",
			"impexp",
			"dbuf_put_escaped_table",
			"string_Break",
			"stringBReakNEwline",
			"define",
			"lexer.tokens",
			"^\\s*console",
			"file",
			"\\.code",
			"code:",
			"'code'",
			"define\\(",
			"keywords",
			"ImportType",
			"_quote",
			"escape",
			"strc",
			"scape|[Qq]uote",
			"GetClass",
			"JSSTDFile",
			"js_std_file_class_id",
			"getClassProto",
			"JS_GetClassProto",
			"JS_Get",
			"file_class",
			"struct JSClass",
			"fopen",
			"fmemopen",
			"std_file_class",
			"js_offset_length",
			"OffsetLength",
			"_offset",
			"offset",
			"slice",
			"dupArrayBuffer",
			"js_misc_slice",
			"class_name_key",
			"COLOR_LIGHTRED",
			"name",
			"classname",
			"toString",
			"toStringTag",
			"CHILD_PROCESS_SIGNALED",
			"CHILD_PROCESS_SIGNALED\n",
			"JS_DefineProperty",
			"scan_fromhex",
			"}\nsize_t",
			"scan_.*long",
			"scan_ulong",
			"ArrayBuffer",
			"number_base",
			"ArrayBuffer",
			"JS_NewInt64",
			"^(struct |)(Memory_?Block|pointer_?range|input_*buffer)",
			"^(struct |)(Memory_?Block|pointer_?range)",
			"^(struct |)MemoryBlock",
			"struct",
			"^MemoryBlock",
			"MemoryBlock",
			"vector",
			"struct",
			"js_arraybuffer_",
			" free\\(",
			"free\\(",
			"stat\\(",
			"\"setsockopt",
			"PRECEDEN",
			"predicate_[a-z]*_num_args",
			"predicate_direct_num_args",
			"js_func",
			"BAND:",
			"ATAN2:",
			"PREDICATE_BOR",
			"PREDICATE_SQRT",
			"SetModuleLoader",
			"^js_[^ ]*module",
			"sockaddr_addr",
			"loader_so",
			"load_so",
			"qsort_r",
			"js_arraybuffer_fromvalue",
			"JSCFunctionData",
			"JS_NewCFunctionData",
			"byte_escape",
			"^#",
			"ImportDirective",
			"js_module_import_",
			"ImportDirective",
			"qsort_r",
			"^",
			"INCLUDE_DIR",
			"loader_so",
			"module_loader_so",
			"\"realpath",
			"realpath\\(",
			"getuid",
			"^",
			"HAVE_ISATTY",
			"path_is",
			"path_isabs",
			"WINDOWS",
			"PATHSEP_S_MIXED",
			"issep",
			"realpath\\(",
			"FUNC_GETPID",
			"#endif\n#ifndef __wasi__",
			"getuid\"",
			"realpath\\(",
			"\"realpath",
			"\"getpid"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"log",
			"class_key",
			"}\\n\\nsize_t",
			"# ",
			"#",
			"HAVE_REALPATH",
			"",
			"HAVE_TERMIOS_H",
			"HAVE_MMAP",
			"HAVE_SYS_MMAN_H",
			"HAVE_SYS_WAIT_H",
			"length",
			"loc->",
			"ret->",
			"arg",
			" ",
			"",
			"\"\\\\t",
			"\"\\t",
			"imp.",
			"ctx,",
			"",
			"JSValueConst)",
			"",
			"jsm_module_loader",
			"js_module_loader_so",
			"js_eval_file",
			"js_eval_buf",
			"js_load_script",
			"jsm_eval_script",
			"js_eval_file",
			"js_load_module",
			"js_eval_str",
			"js_module_get",
			"JSValueConst)",
			"js_module_search",
			"jsm_module_find",
			"js_module_find",
			"js_load_",
			"js_load_module",
			"js_eval_buf",
			"js_load_script",
			"js_std_dump_error",
			"js_module_exports",
			"fdset",
			" ",
			"js_input_buffer",
			"\\1(\\2, sock",
			"\\1(",
			"",
			"JS_CGETSET_MAGIC_DEF",
			"off.",
			"} else if(",
			"port",
			".buf",
			"'",
			"",
			"socket_send",
			"0x00",
			" 0x00,",
			"0x78,",
			"0x78",
			" 0x00,",
			"0x78",
			"JS_CGETSET_MAGIC_DEF",
			"socket_syscalls_size",
			"js_syscallerror_get, js_syscallerror_set,",
			"js_socket_get, js_socket_set, ",
			"e",
			"js_syscallerror_proto_funcs",
			"s.fd",
			"js_socket_proto_funcs",
			"\"",
			"SYSCALLERROR_VALUEOF",
			"s, ",
			"JS_SOCKETCALL",
			"JS_SOCKETCALL_RETURN",
			"js_socket_data2(ctx",
			"sa->family",
			"QUICKJS_SYSCALLERROR_H",
			"data2",
			"js_syscallerror_data2",
			"QUICKJS_MISC_H",
			"js_sockets_defines",
			"js_sockaddr_data2",
			"js_sockaddr_data",
			"SockAddr",
			"struct sockaddr*",
			"sockets_init",
			"argv[i]",
			"pigpio",
			"CHAR_UTILS",
			"${util_SOURCES}",
			"ol.",
			"range_from",
			".range.length",
			".range.offset",
			"input_buffer_length(in)",
			"input_buffer_data(in)",
			"blob",
			"location->vec",
			"location",
			"Location",
			"r->data\\1",
			" this.fs.",
			"stringdecoder",
			"js_stringdecoder_set",
			"js_stringdecoder_get",
			"stringdecoder",
			"\\1if(gpio->debug) fprintf",
			"struct gpio",
			"struct GPIO",
			"struct GPIO*",
			"ctx->rt",
			"",
			": ",
			"\"",
			"ret = \\1;",
			"->errnum",
			"(",
			"error",
			"JS_NewInt32",
			"",
			",",
			"left, right",
			"predicate_nextarg(ctx, &args)",
			"predicate_nextarg(ctx, &args),predicate_nextarg(ctx, &args))",
			"predicate_argument_shift(ctx, &args)"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1542,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									475,
									497
								],
								[
									546,
									559
								],
								[
									600,
									618
								],
								[
									851,
									859
								],
								[
									877,
									885
								],
								[
									950,
									960
								],
								[
									1329,
									1346
								],
								[
									1436,
									1452
								],
								[
									1555,
									1571
								],
								[
									1811,
									1831
								],
								[
									2190,
									2210
								],
								[
									2698,
									2718
								],
								[
									2949,
									2968
								],
								[
									7038,
									7060
								],
								[
									8608,
									8630
								],
								[
									8835,
									8850
								],
								[
									8964,
									8990
								],
								[
									9434,
									9470
								],
								[
									9872,
									9894
								],
								[
									10213,
									10235
								],
								[
									11247,
									11261
								],
								[
									12801,
									12815
								],
								[
									13945,
									13967
								],
								[
									16049,
									16066
								],
								[
									16453,
									16470
								],
								[
									17716,
									17733
								],
								[
									19511,
									19527
								],
								[
									31531,
									31541
								],
								[
									32446,
									32465
								],
								[
									33279,
									33306
								],
								[
									33356,
									33383
								],
								[
									33664,
									33685
								],
								[
									33917,
									33932
								],
								[
									34897,
									34911
								],
								[
									34941,
									34955
								]
							],
							"symlist":
							[
								"‚Äî‚ìÇ‚Äì INSPECT_INT32T_INRANGE ( ) ‚Ä¶ ‚Äî macro function",
								"‚Äî‚ìÇ‚Äì INSPECT_LEVEL ( ) ‚Ä¶ ‚Äî macro function",
								"‚Äî‚ìÇ‚Äì INSPECT_IS_COMPACT ( ) ‚Ä¶ ‚Äî macro function",
								"\t‚íû  prop_key ; ‚Äî type declaration",
								"‚Äî‚í∏‚Äì prop_key { ‚Ä¶ } ; ‚Äî type",
								"\t‚ìâ  prop_key_t ; ‚Äî typedef",
								"\t‚ìâ  inspect_options_t ; ‚Äî typedef",
								"\t‚í°  js_inspect_print ( ) ; ‚Äî function declaration",
								"‚Äî‚íª‚Äì regexp_predicate ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì inspect_screen_width ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì inspect_options_init ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì inspect_options_free ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì inspect_options_get ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì inspect_options_object ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì inspect_options_hidden ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì inspect_newline ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_object_getpropertynames ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_object_getpropertynames_recursive ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_custom_atom ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_custom_call ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_map ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_set ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_arraybuffer ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_regexp ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_number ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_string ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_print ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_tostring ( ) { ‚Ä¶ } ‚Äî function",
								"\t‚í°  js_debugger_build_backtrace ( ) ; ‚Äî function declaration",
								"‚Äî‚íª‚Äì js_inspect_stacktrace_value ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_stacktrace ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì js_inspect_init ( ) { ‚Ä¶ } ‚Äî function",
								"\t‚ìÇ  JS_INIT_MODULE ‚Ä¶ ‚Äî macro object",
								"\t‚ìÇ  JS_INIT_MODULE ‚Ä¶ ‚Äî macro object"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632972552.61,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "/home/roman/Sources/plot-cv/quickjs/qjs-modules/lib/repl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49517,
						"regions":
						{
						},
						"selection":
						[
							[
								3109,
								3117
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632972673.67,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 785.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "quickjs-inspect.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35300,
						"regions":
						{
						},
						"selection":
						[
							[
								22811,
								22818
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632975555.54,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13413.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "modules.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"quickjs-mm",
				"quickjs-mmap.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"quickjs-m",
				"quickjs-misc.c"
			],
			[
				"redicate.c",
				"predicate.c"
			],
			[
				"sockets.h",
				"quickjs-sockets.h"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"",
				"quickjs-inspect.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"char-",
				"char-utils.h"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"conso",
				"lib/console.js"
			],
			[
				"clang-f",
				".clang-format"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"test_mi",
				"tests/test_misc.js"
			],
			[
				"ockets.",
				"quickjs-sockets.h"
			],
			[
				"quickjs-ar",
				"quickjs-archive.c"
			],
			[
				"fd_set",
				"lib/fd_set.js"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"buffer-ut",
				"buffer-utils.c"
			],
			[
				"misc.",
				"quickjs-misc.h"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"socklen_t.js",
				"lib/socklen_t.js"
			],
			[
				"str.h",
				"quickjs-stringdecoder.h"
			],
			[
				"quickjs-libc",
				"~/Sources/plot-cv/quickjs/quickjs-libc.h"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.c"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"test_loca",
				"tests/test_location.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				".clang-fo",
				".clang-format"
			],
			[
				"buff",
				"buffer-utils.c"
			],
			[
				"buffer-util",
				"buffer-utils.c"
			],
			[
				"buffer-utils.c",
				"buffer-utils.c"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"quickjs-so",
				"quickjs-sockets.c"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"quickjs-insp",
				"quickjs-inspect.c"
			],
			[
				"test_soc",
				"tests/test_sockets.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"test_qjsm",
				"tests/test_qjsm.js"
			],
			[
				"buffer-tu",
				"buffer-utils.c"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"repl.",
				"lib/repl.js"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"quickjs-blo",
				"quickjs-blob.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"test_mis",
				"tests/test_misc.js"
			],
			[
				"test_blob",
				"tests/test_blob.js"
			],
			[
				"test_string",
				"tests/test_stringdecoder.js"
			],
			[
				"test_str",
				"tests/test_stringdecoder.js"
			],
			[
				"quickjs-blb",
				"quickjs-blob.h"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"ringbuffer.h",
				"ringbuffer.h"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 236.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
